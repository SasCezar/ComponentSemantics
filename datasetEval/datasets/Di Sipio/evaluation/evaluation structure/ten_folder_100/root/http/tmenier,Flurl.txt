b'# Flurl\n\n[![Build status](https://ci.appveyor.com/api/projects/status/hec8ioqg0j07ttg5/branch/master?svg=true)](https://ci.appveyor.com/project/kroniak/flurl/branch/master)\n[![Flurl](https://img.shields.io/nuget/v/Flurl.svg?maxAge=3600)](https://www.nuget.org/packages/Flurl/)\n[![Flurl.Http](https://img.shields.io/nuget/v/Flurl.Http.svg?maxAge=3600)](https://www.nuget.org/packages/Flurl.Http/)\n\nFlurl is a modern, fluent, asynchronous, testable, portable, buzzword-laden URL builder and HTTP client library.\n\n````c#\nvar result = await "https://api.mysite.com"\n    .AppendPathSegment("person")\n    .SetQueryParams(new { api_key = "xyz" })\n    .WithOAuthBearerToken("my_oauth_token")\n    .PostJsonAsync(new { first_name = firstName, last_name = lastName })\n    .ReceiveJson<T>();\n\n[Test]\npublic void Can_Create_Person() {\n    // fake & record all http calls in the test subject\n    using (var httpTest = new HttpTest()) {\n        // arrange\n        httpTest.RespondWith("OK", 200);\n\n        // act\n        await sut.CreatePersonAsync("Claire", "Underwood");\n        \n        // assert\n        httpTest.ShouldHaveCalled("http://api.mysite.com/*")\n            .WithVerb(HttpMethod.Post)\n            .WithContentType("application/json");\n    }\n}\n````\n\nGet it on NuGet:\n\n`PM> Install-Package Flurl.Http`\n\nOr get just the stand-alone URL builder without the HTTP features:\n\n`PM> Install-Package Flurl`\n\nFor updates and announcements, [follow @FlurlHttp on Twitter](https://twitter.com/intent/user?screen_name=FlurlHttp).\n\nFor detailed documentation, please visit the [main site](https://flurl.dev). \n'