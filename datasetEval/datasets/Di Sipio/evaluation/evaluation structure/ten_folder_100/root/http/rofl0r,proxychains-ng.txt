b'ProxyChains-NG ver 4.14 README\n=============================\n\n  ProxyChains is a UNIX program, that hooks network-related libc functions\n  in DYNAMICALLY LINKED programs via a preloaded DLL (dlsym(), LD_PRELOAD)\n  and redirects the connections through SOCKS4a/5 or HTTP proxies.\n  It supports TCP only (no UDP/ICMP etc).\n\n  The way it works is basically a HACK; so it is possible that it doesn\'t\n  work with your program, especially when it\'s a script, or starts\n  numerous processes like background daemons or uses dlopen() to load\n  "modules" (bug in glibc dynlinker).\n  It should work with simple compiled (C/C++) dynamically linked programs\n  though.\n\n  If your program doesn\'t work with proxychains, consider using an\n  iptables based solution instead; this is much more robust.\n\n  Supported Platforms: Linux, BSD, Mac.\n\n\n*********** ATTENTION ***********\n\n  this program can be used to circumvent censorship.\n  doing so can be VERY DANGEROUS in certain countries.\n\n  ALWAYS MAKE SURE THAT PROXYCHAINS WORKS AS EXPECTED\n  BEFORE USING IT FOR ANYTHING SERIOUS.\n\n  this involves both the program and the proxy that you\'re going to\n  use.\n\n  for example, you can connect to some "what is my ip" service\n  like ifconfig.me to make sure that it\'s not using your real ip.\n\n  ONLY USE PROXYCHAINS IF YOU KNOW WHAT YOU\'RE DOING.\n\n  THE AUTHORS AND MAINTAINERS OF PROXYCHAINS DO NOT TAKE ANY\n  RESPONSIBILITY FOR ANY ABUSE OR MISUSE OF THIS SOFTWARE AND\n  THE RESULTING CONSEQUENCES.\n\n*** Installation ***\n\n  # needs a working C compiler, preferably gcc\n  ./configure --prefix=/usr --sysconfdir=/etc\n  make\n  [optional] sudo make install\n  [optional] sudo make install-config (installs proxychains.conf)\n\n  if you dont install, you can use proxychains from the build directory\n  like this: ./proxychains4 -f src/proxychains.conf telnet google.com 80\n\nChangelog:\n----------\nVersion 4.14\n- allow alternative proto://user:pass@ip:port syntax for proxylist\n- fix endless loop in round robin mode when all proxies are down (#147)\n- fix compilation on android (#265)\n- fix fd leak in forked processes (#273)\n- skip connection attempt to nullrouted ips\n- allow hostnames for proxylist under specific circumstances\n\nVersion 4.13\n- fix robustness of DNS lookup thread and a segfault\n- fix socks5 user/pass auth on non-conforming servers\n- fix memory leak\n- add support for Solaris\n\nVersion 4.12\n- fix several build issues\n  - for MAC\n  - with -pie\n  - with custom CC\n- compatibility fix for some GUI apps (8870140)\n- compatibility fix for some HTTP proxies (cf9a16d)\n- fix several warnings for cleaner build on debian\n- fix random_chain on OSX (0f6b226)\n\nVersion 4.11\n- preliminary IPv6 support\n- fixed bug in hostsreader\n- preliminary support for usage on OpenBSD (caveat emptor)\n\nVersion 4.10\n- fix regression in linking order with custom LDFLAGS\n- fix segfault in DNS mapping code in programs with > ~400 different lookups\n\nVersion 4.9\n- fix a security issue CVE-2015-3887\n- add sendto hook to handle MSG_FASTOPEN flag\n- replace problematic hostentdb with hostsreader\n- fix compilation on OpenBSD (although doesn\'t work there)\n\nVersion 4.8.1:\n- fix regression in 4.8 install-config Makefile target\n\nVersion 4.8:\n- fix for odd cornercase where getaddrinfo was used with AI_NUMERICHOST\n  to test for a numeric ip instead of resolving it (fixes nmap).\n- allow usage with programs that rely on LD_PRELOAD themselves\n- reject wrong entries in config file\n- print version number on startup\n\nVersion 4.7:\n- new round_robin chaintype by crass.\n- fix bug with lazy allocation when GCC constructor was not used.\n- new configure flag --fat-binary to create a "fat" binary/library on OS X\n- return EBADF rather than EINTR in close hook.\n  it\'s legal for a program to retry close() calls when they receive\n  EINTR, which could cause an infinite loop, as seen in chromium.\n\nVersion 4.6:\n- some cosmetic fixes to Makefile, fix a bug when non-numeric ip was\n  used as proxy server address.\n\nVersion 4.5:\n- hook close() to prevent OpenSSH from messing with internal infrastructure.\n  this caused ssh client to segfault when proxified.\n\nVersion 4.4:\n- FreeBSD port\n- fixes some installation issues on Debian and Mac.\n\nVersion 4.3:\n- fixes programs that do dns-lookups in child processes (fork()ed),\n  like irssi. to achieve this, support for compilation without pthreads\n  was sacrified.\n- fixes thread safety for gethostent() calls.\n- improved DNS handling speed, since hostent db is cached.\n\nVersion 4.2:\n- fixes compilation issues with ubuntu 12.04 toolchain\n- fixes segfault in rare codepath\n\nVersion 4.1\n- support for mac os x (all archs)\n- all internal functions are threadsafe when compiled with -DTHREAD_SAFE\n  (default).\n\nVersion 4.0\n- replaced dnsresolver script (which required a dynamically linked "dig"\n  binary to be present) with remote DNS lookup.\n  this speeds up any operation involving DNS, as the old script had to use TCP.\n  additionally it allows to use .onion urls when used with TOR.\n- removed broken autoconf build system with a simple Makefile.\n  there\'s a ./configure script though for convenience.\n  it also adds support for a config file passed via command line switches/\n  environment variables.\n\nVersion 3.0\n- support for DNS resolving through proxy\n  supports SOCKS4, SOCKS5 and HTTP CONNECT proxy servers.\n  Auth-types: socks - "user/pass" , http - "basic".\n\nWhen to use it ?\n1) When the only way to get "outside" from your LAN is through proxy server.\n2) To get out from behind restrictive firewall which filters outgoing ports.\n3) To use two (or more) proxies in chain:\n\tlike: your_host <--> proxy1 <--> proxy2 <--> target_host\n4) To "proxify" some program with no proxy support built-in (like telnet)\n5) Access intranet from outside via proxy.\n6) To use DNS behind proxy.\n7) To access hidden tor onion services.\n\nSome cool features:\n\n* This program can mix different proxy types in the same chain\n\tlike: your_host <-->socks5 <--> http <--> socks4 <--> target_host\n* Different chaining options supported\n\trandom order from the list ( user defined length of chain ).\n\texact order  (as they appear in the list )\n\tdynamic order (smart exclude dead proxies from chain)\n* You can use it with most TCP client applications, possibly even network\n\tscanners, as long as they use standard libc functionality.\n\tpcap based scanning does not work.\n* You can use it with servers, like squid, sendmail, or whatever.\n* DNS resolving through proxy.\n\n\nConfiguration:\n--------------\n\nproxychains looks for config file in following order:\n1)\tfile listed in environment variable PROXYCHAINS_CONF_FILE or\n\tprovided as a -f argument to proxychains script or binary.\n2)\t./proxychains.conf\n3)\t$(HOME)/.proxychains/proxychains.conf\n4)\t$(sysconfdir)/proxychains.conf  **\n\n** usually /etc/proxychains.conf\n\nUsage Example:\n\n\t$ proxychains telnet targethost.com\n\nin this example it will run telnet through proxy(or chained proxies)\nspecified by proxychains.conf\n\nUsage Example:\n\n\t$ proxychains -f /etc/proxychains-other.conf telnet targethost2.com\n\nin this example it will use different configuration file then proxychains.conf\nto connect to targethost2.com host.\n\nUsage Example:\n\n\t$ proxyresolv targethost.com\n\nin this example it will resolve targethost.com through proxy(or chained proxies)\nspecified by proxychains.conf\n\nKnown Problems:\n---------------\n- newer versions of nmap try to determine the network interface to use\n  even if it\'s not needed (like when doing simple syn scans which use the\n  standard POSIX socket API. this results in errors when proxychains hands\n  out an ip address to a reserved address space.\n  possible workarounds: disable proxy_dns, use a numeric ip, or use nmap\'s\n  native support for SOCKS proxies.\n\n- Mac OS X 10.11 (El Capitan) ships with a new security feature called SIP\n  that prevents hooking of system apps.\n  workarounds are to partially disable SIP by issuing\n  csrutil enable --without debug in recovery mode,\n  or to copy the system binary into the home directory and run it from there.\n  see github issue #78 for details.\n\n- the glibc dynlinker has a bug or security feature that inhibits dlopen()ed\n  modules from being subject to the same dlsym hooks as installed for the main\n  program. this mainly affects scripting languages such as perl or python\n  that heavily rely on dlopen() for modules written in C to work.\n  there are unconfirmed reports that it works as root though.\n  musl libc is unaffected from the bug.\n\n\nCommunity:\n----------\n#proxychains on irc.freenode.net\n\nDonations:\n----------\nbitcoins donations are welcome - please send to this address:\n1C9LBpuy56veBqw5N33sZMoZW8mwCw3tPh\n\n'