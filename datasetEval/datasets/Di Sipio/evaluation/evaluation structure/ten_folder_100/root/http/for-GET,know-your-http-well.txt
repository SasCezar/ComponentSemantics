b'# KNOW YOUR HTTP * WELL\n\nHTTP encodings, headers, media types, methods, relations and status codes, all summarized and linking to their specification.\n\nThis project is used by [HyperREST bin](https://github.com/andreineculau/hyperrest-bin) at [bin.hyperrest.com](http://bin.hyperrest.com) .\n\n\n## Table of Contents\n\n- [SPECS](specs.md)\n- [ENCODINGS](encodings.md)\n- [HEADERS](headers.md)\n- MEDIA TYPES\n- [METHODS](methods.md)\n- [RELATIONS](relations.md)\n- [STATUS CODES](status-codes.md)\n\n\n## How to convert to other formats\n\n* [pandoc](http://johnmacfarlane.net/pandoc/)\n* [Marked](http://markedapp.com/)\n* ...\n\n\n## Packages\n\n### Emacs\n\n```emacs\n(require \'know-your-http-well)\n;; M-x http-header ;; content-type\n;; M-x http-method ;; post | POST\n;; M-x http-relation ;; describedby\n;; M-x http-status-code ;; 500\n;; M-x http-status-code ;; not_found | NOT_FOUND\n```\n\n### JavaScript\n\n```javascript\nvar httpWell = require(\'know-your-http-well\'),\n    statusWell = httpWell.statusPhrasesToCodes,\n    phraseWell = httpWell.statusCodesToPhrases;\n\n// on the server side\nres.statusCode = statusWell.NOT_FOUND\n\n// on the client side\nif (res.statusCode !== statusWell.OK) {\n    // Log "Request returned 404 Not Found"\n    log(\'Request returned \' + res.statusCode + \' \' + phraseWell[res.statusCode]);\n}\n```\n\n### JSON\n\nJust take a look at [./json/*.json](json).\n\n## License\n\n[Unlicense](LICENSE).\n'