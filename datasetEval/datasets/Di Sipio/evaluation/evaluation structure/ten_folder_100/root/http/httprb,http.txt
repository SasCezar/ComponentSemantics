b'# ![http.rb](https://raw.github.com/httprb/http.rb/master/logo.png)\n\n[![Gem Version](https://badge.fury.io/rb/http.svg)](https://rubygems.org/gems/http)\n[![Build Status](https://secure.travis-ci.org/httprb/http.svg?branch=master)](https://travis-ci.org/httprb/http)\n[![Code Climate](https://codeclimate.com/github/httprb/http.svg?branch=master)](https://codeclimate.com/github/httprb/http)\n[![Coverage Status](https://coveralls.io/repos/httprb/http/badge.svg?branch=master)](https://coveralls.io/r/httprb/http)\n[![MIT licensed](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/httprb/http/blob/master/LICENSE.txt)\n\n[Documentation]\n\n_NOTE: This is the 5.x **development** branch.  For the 4.x **stable** branch, please see:_\n\nhttps://github.com/httprb/http/tree/4-x-stable\n\n## About\n\nHTTP (The Gem! a.k.a. http.rb) is an easy-to-use client library for making requests\nfrom Ruby. It uses a simple method chaining system for building requests, similar to\nPython\'s [Requests].\n\nUnder the hood, http.rb uses [http_parser.rb], a fast HTTP parsing native\nextension based on the Node.js parser and a Java port thereof. This library\nisn\'t just yet another wrapper around Net::HTTP. It implements the HTTP protocol\nnatively and outsources the parsing to native extensions.\n\n[requests]: http://docs.python-requests.org/en/latest/\n[http_parser.rb]: https://github.com/tmm1/http_parser.rb\n\n\n## Another Ruby HTTP library? Why should I care?\n\nThere are a lot of HTTP libraries to choose from in the Ruby ecosystem.\nSo why would you choose this one?\n\nTop three reasons:\n\n1. **Clean API**: http.rb offers an easy-to-use API that should be a\n   breath of fresh air after using something like Net::HTTP.\n\n2. **Maturity**: http.rb is one of the most mature Ruby HTTP clients, supporting\n   features like persistent connections and fine-grained timeouts.\n\n3. **Performance**: using native parsers and a clean, lightweight implementation,\n   http.rb achieves the best performance of any Ruby HTTP library which\n   implements the HTTP protocol in Ruby instead of C:\n\n  | HTTP client              | Time   | Implementation        |\n  |--------------------------|--------|-----------------------|\n  | curb (persistent)        | 2.519  | libcurl wrapper       |\n  | em-http-request          | 2.731  | EM + http_parser.rb   |\n  | Typhoeus                 | 2.851  | libcurl wrapper       |\n  | StreamlyFFI (persistent) | 2.853  | libcurl wrapper       |\n  | http.rb (persistent)     | 2.970  | Ruby + http_parser.rb |\n  | http.rb                  | 3.588  | Ruby + http_parser.rb |\n  | HTTParty                 | 3.931  | Net::HTTP wrapper     |\n  | Net::HTTP                | 3.959  | Pure Ruby             |\n  | Net::HTTP (persistent)   | 4.043  | Pure Ruby             |\n  | open-uri                 | 4.479  | Net::HTTP wrapper     |\n  | Excon (persistent)       | 4.618  | Pure Ruby             |\n  | Excon                    | 4.701  | Pure Ruby             |\n  | RestClient               | 26.838 | Net::HTTP wrapper     |\n\nBenchmarks performed using excon\'s benchmarking tool\n\nDISCLAIMER: Most benchmarks you find in READMEs are crap,\nincluding this one. These are out-of-date. If you care about\nperformance, benchmark for yourself for your own use cases!\n\n## Help and Discussion\n\nIf you need help or just want to talk about the http.rb,\nvisit the http.rb Google Group:\n\nhttps://groups.google.com/forum/#!forum/httprb\n\nYou can join by email by sending a message to:\n\n[httprb+subscribe@googlegroups.com](mailto:httprb+subscribe@googlegroups.com)\n\nIf you believe you\'ve found a bug, please report it at:\n\nhttps://github.com/httprb/http/issues\n\n\n## Installation\n\nAdd this line to your application\'s Gemfile:\n```ruby\ngem "http"\n```\n\nAnd then execute:\n```bash\n$ bundle\n```\n\nOr install it yourself as:\n```bash\n$ gem install http\n```\n\nInside of your Ruby program do:\n```ruby\nrequire "http"\n```\n\n...to pull it in as a dependency.\n\n\n## Documentation\n\n[Please see the http.rb wiki][documentation]\nfor more detailed documentation and usage notes.\n\nThe following API documentation is also available:\n\n* [YARD API documentation](http://www.rubydoc.info/gems/http/frames)\n* [Chainable module (all chainable methods)](http://www.rubydoc.info/gems/http/HTTP/Chainable)\n\n[documentation]: https://github.com/httprb/http/wiki\n\n### Basic Usage\n\nHere\'s some simple examples to get you started:\n\n```ruby\n>> HTTP.get("https://github.com").to_s\n=> "\\n\\n\\n<!DOCTYPE html>\\n<html lang=\\"en\\" class=\\"\\">\\n  <head prefix=\\"o..."\n```\n\nThat\'s all it takes! To obtain an `HTTP::Response` object instead of the response\nbody, all we have to do is omit the `#to_s` on the end:\n\n```ruby\n>> HTTP.get("https://github.com")\n=> #<HTTP::Response/1.1 200 OK {"Server"=>"GitHub.com", "Date"=>"Tue, 10 May...>\n```\n\nWe can also obtain an `HTTP::Response::Body` object for this response:\n\n```ruby\n>> HTTP.get("https://github.com").body\n=> #<HTTP::Response::Body:3ff756862b48 @streaming=false>\n```\n\nThe response body can be streamed with `HTTP::Response::Body#readpartial`.\nIn practice, you\'ll want to bind the HTTP::Response::Body to a local variable\nand call `#readpartial` on it repeatedly until it returns `nil`:\n\n```ruby\n>> body = HTTP.get("https://github.com").body\n=> #<HTTP::Response::Body:3ff756862b48 @streaming=false>\n>> body.readpartial\n=> "\\n\\n\\n<!DOCTYPE html>\\n<html lang=\\"en\\" class=\\"\\">\\n  <head prefix=\\"o..."\n>> body.readpartial\n=> "\\" href=\\"/apple-touch-icon-72x72.png\\">\\n    <link rel=\\"apple-touch-ic..."\n# ...\n>> body.readpartial\n=> nil\n```\n\n## Supported Ruby Versions\n\nThis library aims to support and is [tested against][travis] the following Ruby\nversions:\n\n* Ruby 2.4.x\n* Ruby 2.5.x\n* Ruby 2.6.x\n* JRuby 9.2.x.x\n\nIf something doesn\'t work on one of these versions, it\'s a bug.\n\nThis library may inadvertently work (or seem to work) on other Ruby versions,\nhowever support will only be provided for the versions listed above.\n\nIf you would like this library to support another Ruby version or\nimplementation, you may volunteer to be a maintainer. Being a maintainer\nentails making sure all tests run and pass on that implementation. When\nsomething breaks on your implementation, you will be responsible for providing\npatches in a timely fashion. If critical issues for a particular implementation\nexist at the time of a major release, support for that Ruby version may be\ndropped.\n\n[travis]: http://travis-ci.org/httprb/http\n\n\n## Contributing to http.rb\n\n* Fork http.rb on GitHub\n* Make your changes\n* Ensure all tests pass (`bundle exec rake`)\n* Send a pull request\n* If we like them we\'ll merge them\n* If we\'ve accepted a patch, feel free to ask for commit access!\n\n\n## Copyright\n\nCopyright (c) 2011-2019 Tony Arcieri, Alexey V. Zapparov, Erik Michaels-Ober, Zachary Anker.\nSee LICENSE.txt for further details.\n'