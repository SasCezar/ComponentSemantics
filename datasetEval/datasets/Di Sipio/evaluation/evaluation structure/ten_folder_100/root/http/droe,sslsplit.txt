b"# SSLsplit - transparent SSL/TLS interception\nhttps://www.roe.ch/SSLsplit\n\n[![Build Status](https://travis-ci.org/droe/sslsplit.svg)](https://travis-ci.org/droe/sslsplit)\n[![Gitter chat](https://badges.gitter.im/droe/sslsplit.png)](https://gitter.im/droe/sslsplit)\n\n## Overview\n\nSSLsplit is a tool for man-in-the-middle attacks against SSL/TLS encrypted\nnetwork connections.  It is intended to be useful for network forensics,\napplication security analysis and penetration testing.\n\nSSLsplit is designed to transparently terminate connections that are redirected\nto it using a network address translation engine.  SSLsplit then terminates\nSSL/TLS and initiates a new SSL/TLS connection to the original destination\naddress, while logging all data transmitted.  Besides NAT based operation,\nSSLsplit also supports static destinations and using the server name indicated\nby SNI as upstream destination.  SSLsplit is purely a transparent proxy and\ncannot act as a HTTP or SOCKS proxy configured in a browser.\n\nSSLsplit supports plain TCP, plain SSL, HTTP and HTTPS connections over both\nIPv4 and IPv6.  It also has the ability to dynamically upgrade plain TCP to SSL\nin order to generically support SMTP STARTTLS and similar upgrade mechanisms.\nSSLsplit fully supports Server Name Indication (SNI) and is able to work with\nRSA, DSA and ECDSA keys and DHE and ECDHE cipher suites.  Depending on the\nversion of OpenSSL built against, SSLsplit supports SSL 3.0, TLS 1.0, TLS 1.1\nand TLS 1.2, and optionally SSL 2.0 as well.\n\nFor SSL and HTTPS connections, SSLsplit generates and signs forged X509v3\ncertificates on-the-fly, mimicking the original server certificate's subject\nDN, subjectAltName extension and other characteristics.  SSLsplit has the\nability to use existing certificates of which the private key is available,\ninstead of generating forged ones.  SSLsplit supports NULL-prefix CN\ncertificates but otherwise does not implement exploits against specific\ncertificate verification vulnerabilities in SSL/TLS stacks.\n\nSSLsplit implements a number of defences against mechanisms which would\nnormally prevent MitM attacks or make them more difficult.  SSLsplit can deny\nOCSP requests in a generic way.  For HTTP and HTTPS connections, SSLsplit\nmangles headers to prevent server-instructed public key pinning (HPKP), avoid\nstrict transport security restrictions (HSTS), avoid Certificate Transparency\nenforcement (Expect-CT) and prevent switching to QUIC/SPDY, HTTP/2 or\nWebSockets (Upgrade, Alternate Protocols).  HTTP compression, encodings and\nkeep-alive are disabled to make the logs more readable.\n\nLogging options include traditional SSLsplit connect and content log files as\nwell as PCAP files and mirroring decrypted traffic to a network interface.\nAdditionally, certificates, master secrets and local process information can be\nlogged.\n\nSee the manual page sslsplit(1) for details on using SSLsplit and setting up\nthe various NAT engines.\n\n\n## Requirements\n\nSSLsplit depends on the OpenSSL, libevent 2.x, libpcap and libnet 1.1.x\nlibraries by default; libpcap and libnet are not needed if the mirroring\nfeature is omitted.  The build depends on GNU make and a POSIX.2 environment in\n`PATH`.  If available, pkg-config is used to locate and configure the\ndependencies.  The optional unit tests depend on the check library.\n\nSSLsplit currently supports the following operating systems and NAT mechanisms:\n\n-   FreeBSD: pf rdr and divert-to, ipfw fwd, ipfilter rdr\n-   OpenBSD: pf rdr-to and divert-to\n-   Linux: netfilter REDIRECT and TPROXY\n-   Mac OS X: pf rdr and ipfw fwd\n\nSupport for local process information (`-i`) is currently available on Mac OS X\nand FreeBSD.\n\nSSL/TLS features and compatibility greatly depend on the version of OpenSSL\nlinked against.  For optimal results, use a recent release of OpenSSL or\nLibreSSL.\n\n\n## Installation\n\nWith the requirements above available, run:\n\n    make\n    make test       # optional unit tests\n    make sudotest   # optional unit tests requiring privileges\n    make install    # optional install\n\nDependencies are autoconfigured using pkg-config.  If dependencies are not\npicked up and fixing `PKG_CONFIG_PATH` does not help, you can specify their\nrespective locations manually by setting `OPENSSL_BASE`, `LIBEVENT_BASE`,\n`LIBPCAP_BASE`, `LIBNET_BASE` and/or `CHECK_BASE` to the respective prefixes.\n\nYou can override the default install prefix (`/usr/local`) by setting `PREFIX`.\nFor more build options and build-time defaults see [`GNUmakefile`](GNUmakefile)\nand [`defaults.h`](defaults.h).\n\n\n## Documentation\n\nSee the manual pages `sslsplit(1)` and `sslsplit.conf(5)` for user\ndocumentation.  See [`NEWS.md`](NEWS.md) for release notes listing significant\nchanges between releases and [`SECURITY.md`](SECURITY.md) for information on\nsecurity vulnerability disclosure.\n\n\n## License\n\nSSLsplit is provided under a 2-clause BSD license.\nSSLsplit contains components licensed under the MIT and APSL licenses.\nSee [`LICENSE`](LICENSE), [`LICENSE.contrib`](LICENSE.contrib) and\n[`LICENSE.third`](LICENSE.third) as well as the respective source file headers\nfor details.\n\n\n## Credits\n\nSee [`AUTHORS.md`](AUTHORS.md) for the list of contributors.\n\nSSLsplit was inspired by `mitm-ssl` by Claes M. Nyberg and `sslsniff` by Moxie\nMarlinspike, but shares no source code with them.\n\n\n"