b'Requests for PHP\n================\n\n[![Build Status](https://travis-ci.org/rmccue/Requests.svg?branch=master)](https://travis-ci.org/rmccue/Requests)\n[![codecov.io](http://codecov.io/github/rmccue/Requests/coverage.svg?branch=master)](http://codecov.io/github/rmccue/Requests?branch=master)\n\nRequests is a HTTP library written in PHP, for human beings. It is roughly\nbased on the API from the excellent [Requests Python\nlibrary](http://python-requests.org/). Requests is [ISC\nLicensed](https://github.com/rmccue/Requests/blob/master/LICENSE) (similar to\nthe new BSD license) and has no dependencies, except for PHP 5.2+.\n\nDespite PHP\'s use as a language for the web, its tools for sending HTTP requests\nare severely lacking. cURL has an\n[interesting API](http://php.net/manual/en/function.curl-setopt.php), to say the\nleast, and you can\'t always rely on it being available. Sockets provide only low\nlevel access, and require you to build most of the HTTP response parsing\nyourself.\n\nWe all have better things to do. That\'s why Requests was born.\n\n```php\n$headers = array(\'Accept\' => \'application/json\');\n$options = array(\'auth\' => array(\'user\', \'pass\'));\n$request = Requests::get(\'https://api.github.com/gists\', $headers, $options);\n\nvar_dump($request->status_code);\n// int(200)\n\nvar_dump($request->headers[\'content-type\']);\n// string(31) "application/json; charset=utf-8"\n\nvar_dump($request->body);\n// string(26891) "[...]"\n```\n\nRequests allows you to send  **HEAD**, **GET**, **POST**, **PUT**, **DELETE**, \nand **PATCH** HTTP requests. You can add headers, form data, multipart files, \nand parameters with simple arrays, and access the response data in the same way. \nRequests uses cURL and fsockopen, depending on what your system has available, \nbut abstracts all the nasty stuff out of your way, providing a consistent API.\n\n\nFeatures\n--------\n\n- International Domains and URLs\n- Browser-style SSL Verification\n- Basic/Digest Authentication\n- Automatic Decompression\n- Connection Timeouts\n\n\nInstallation\n------------\n\n### Install with Composer\nIf you\'re using [Composer](https://github.com/composer/composer) to manage\ndependencies, you can add Requests with it.\n\n```sh\ncomposer require rmccue/requests\n```\n\nor\n\n    {\n        "require": {\n            "rmccue/requests": ">=1.0"\n        }\n    }\n\n### Install source from GitHub\nTo install the source code:\n\n    $ git clone git://github.com/rmccue/Requests.git\n\nAnd include it in your scripts:\n\n    require_once \'/path/to/Requests/library/Requests.php\';\n\nYou\'ll probably also want to register an autoloader:\n\n    Requests::register_autoloader();\n\n\n### Install source from zip/tarball\nAlternatively, you can fetch a [tarball][] or [zipball][]:\n\n    $ curl -L https://github.com/rmccue/Requests/tarball/master | tar xzv\n    (or)\n    $ wget https://github.com/rmccue/Requests/tarball/master -O - | tar xzv\n\n[tarball]: https://github.com/rmccue/Requests/tarball/master\n[zipball]: https://github.com/rmccue/Requests/zipball/master\n\n\n### Using a Class Loader\nIf you\'re using a class loader (e.g., [Symfony Class Loader][]) for\n[PSR-0][]-style class loading:\n\n    $loader->registerPrefix(\'Requests\', \'path/to/vendor/Requests/library\');\n\n[Symfony Class Loader]: https://github.com/symfony/ClassLoader\n[PSR-0]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md\n\n\nDocumentation\n-------------\nThe best place to start is our [prose-based documentation][], which will guide\nyou through using Requests.\n\nAfter that, take a look at [the documentation for\n`Requests::request()`][request_method], where all the parameters are fully\ndocumented.\n\nRequests is [100% documented with PHPDoc](http://requests.ryanmccue.info/api/).\nIf you find any problems with it, [create a new\nissue](https://github.com/rmccue/Requests/issues/new)!\n\n[prose-based documentation]: https://github.com/rmccue/Requests/blob/master/docs/README.md\n[request_method]: http://requests.ryanmccue.info/api/class-Requests.html#_request\n\nTesting\n-------\n\nRequests strives to have 100% code-coverage of the library with an extensive\nset of tests. We\'re not quite there yet, but [we\'re getting close][codecov].\n\n[codecov]: http://codecov.io/github/rmccue/Requests\n\nTo run the test suite, first check that you have the [PHP\nJSON extension ](http://php.net/manual/en/book.json.php) enabled. Then\nsimply:\n\n    $ cd tests\n    $ phpunit\n\nIf you\'d like to run a single set of tests, specify just the name:\n\n    $ phpunit Transport/cURL\n\nContribute\n----------\n\n1. Check for open issues or open a new issue for a feature request or a bug\n2. Fork [the repository][] on Github to start making your changes to the\n    `master` branch (or branch off of it)\n3. Write a test which shows that the bug was fixed or that the feature works as expected\n4. Send a pull request and bug me until I merge it\n\n[the repository]: https://github.com/rmccue/Requests\n'