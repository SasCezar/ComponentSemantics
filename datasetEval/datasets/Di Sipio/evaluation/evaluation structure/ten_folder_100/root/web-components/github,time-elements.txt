b'# &lt;time&gt; element extensions\n\nFormats a timestamp as a localized string or as relative text that auto-updates in the user\'s browser.\n\nThis allows the server to cache HTML fragments containing dates and lets the browser choose how to localize the displayed time according to the user\'s preferences. For example, the server may have cached the following generated markup:\n\n```html\n<local-time datetime="2014-04-01T16:30:00-08:00">\n  April 1, 2014 4:30pm\n</local-time>\n```\n\nEvery visitor is served the same markup from the server\'s cache. When it reaches the browser, the custom `local-time` JavaScript localizes the element\'s text into the local timezone and formatting.\n\n```html\n<local-time datetime="2014-04-01T16:30:00-08:00">\n  1 Apr 2014 21:30\n</local-time>\n```\n\nDates are displayed before months, and a 24-hour clock is used, according to the user\'s browser settings.\n\nIf the browser\'s JavaScript is disabled, the default text served in the cached markup is still displayed.\n\n## Installation\n\nAvailable on [npm](https://www.npmjs.com/) as [**@github/time-elements**](https://www.npmjs.com/package/@github/time-elements).\n\n```\n$ npm install @github/time-elements\n```\n\n## Usage\n\nThis component provides three custom subtypes of the standard HTML `<time>` element. All custom time elements MUST have a `datetime` attribute set to an ISO 8601 formatted timestamp.\n\n### relative-time\n\nA relative time-ago-in-words description can be generated by using the `relative-time` element extension.\n\nAdd a `<relative-time>` element to your markup. Provide a default formatted date as the element\'s text content (e.g. April 1, 2014).\n\n``` html\n<relative-time datetime="2014-04-01T16:30:00-08:00">\n  April 1, 2014\n</relative-time>\n```\n\nDepending on how far in the future this is being viewed, the element\'s text will be replaced with one of the following formats:\n\n- 6 years from now\n- 20 days from now\n- 4 hours from now\n- 7 minutes from now\n- just now\n- 30 seconds ago\n- a minute ago\n- 30 minutes ago\n- an hour ago\n- 20 hours ago\n- a day ago\n- 20 days ago\n- on Apr 1, 2014\n\nSo, a relative date phrase is used for up to a month and then the actual date is shown.\n\n### time-until\n\nYou can use `time-until` to always display a relative date that\'s in the future. It operates much like `<relative-time>`, except in the reverse, with past events shown as `just now` and future events always showing as relative:\n\n- 10 years from now\n- 20 days from now\n- 6 hours from now\n- 20 minutes from now\n- 30 seconds from now\n- just now\n\nAdd a `<time-until>` element to your markup. Provide a default formatted date as the element\'s text content (e.g. April 1, 2024).\n\n``` html\n<time-until datetime="2024-04-01T16:30:00-08:00">\n  April 1, 2024\n</time-until>\n```\n\n### time-ago\n\nAn *always* relative time-ago-in-words description can be generated by using the `time-ago` element extension. This is similar to the `relative-time` extension. However, this will never switch to displaying the date. It strictly shows relative date phrases, even after a month has passed.\n\n``` html\n<time-ago datetime="2012-04-01T16:30:00-08:00">\n  April 1, 2014\n</time-ago>\n```\n\nFor example, if this markup is viewed two years in the future, the element\'s text will read `2 years ago`.\n\n#### Micro format\n\nThe optional `format="micro"` attribute shortens the descriptions to 1m, 1h, 1d, 1y.\n\n``` html\n<time-ago datetime="2012-04-01T16:30:00-08:00" format="micro">\n  April 1, 2014\n</time-ago>\n```\n\n### local-time\n\nThis custom time extension is useful for formatting a date and time in the user\'s preferred locale format.\n\n``` html\n<local-time datetime="2014-04-01T16:30:00-08:00"\n    month="short"\n    day="numeric"\n    year="numeric"\n    hour="numeric"\n    minute="numeric">\n  April 1, 2014 4:30PM PDT\n</local-time>\n```\n\nWhen this markup is viewed in a CDT timezone, it will show `Apr 1, 2014 6:30PM`. If it\'s viewed in a browser with European date preferences, it will read `1 Apr 2014 18:30`.\n\n### Options\n\nAttribute        | Options                      | Description\n---              | ---                          | ---\n`datetime`       | ISO 8601 date                | Required date of element `2014-06-01T13:05:07Z`\n`year`           | 2-digit, numeric             | Format year as `14` or `2014`\n`month`          | short, long                  | Format month as `Jun` or `June`\n`day`            | 2-digit, numeric             | Format day as `01` or `1`\n`weekday`        | short, long                  | Format weekday as `Sun` or `Sunday`\n`hour`           | 2-digit, numeric             | Format hour as `01` or `1`\n`minute`         | 2-digit, numeric             | Format minute as `05` or `5`\n`second`         | 2-digit, numeric             | Format second as `07` or `7`\n`time-zone-name` | short, long                  | Display time zone as `GMT+1` or by its full name\n\n## Browser Support\n\nBrowsers without native [custom element support][support] require a [polyfill][].\n\n- Chrome\n- Firefox\n- Safari\n- Microsoft Edge\n\n[support]: https://caniuse.com/#feat=custom-elementsv1\n[polyfill]: https://github.com/webcomponents/custom-elements\n\n## See Also\n\nMost of this implementation is based on Basecamp\'s [local_time](https://github.com/basecamp/local_time) component. Thanks to @javan for open sourcing that work and allowing for others to build on top of it.\n\n@rmm5t\'s [jquery-timeago](https://github.com/rmm5t/jquery-timeago) is one of the old time-ago-in-words JS plugins.\n'