b'# polydev\n\npolydev is the Polymer DevTools Extension - a tool to help develop Polymer and\ncustom elements. Currently it\'s focused on performance tracking of web components.\n\n## How to Use\n\n  1. [Install the extension](https://chrome.google.com/webstore/detail/polymer-devtools-extensio/mmpfaamodhhlbadloaibpocmcomledcg).\n  2. On a page that uses web components, [make a timeline recording](https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/timeline-tool#make_a_recording).\n  3. Look under the User Timing section of the timeline to track time spent in custom element lifecycle callbacks, as well as time spent reacting to Polymer databinding changes.\n\n### How to read the results\n\n![Screenshot of a recorded timeline](./screenshot.png)\n\nEach web component lifecycle callback will be annotated as a span in the timeline called a [`measure`](https://www.html5rocks.com/en/tutorials/webperformance/usertiming/), representing the time that it took. If a measure is below another measure, the lower callback took place during the higher callback.\n\nEach measure that polydev produces has a unique name like `[WC] created paper-icon-button 5`. The format is `[WC] callbackName tagName id`. The id numbers are on a per instance and per tag basis and count up from zero.\n\n### API\n\npolydev exposes a method on the host page called _getElementMeasures. It returns an array of ElementMeasure objects, which obey the following interface:\n\n```typescript\ninterface ElementMeasurement {\n  tagName: string;\n  operation: string;\n  elementId: number|undefined;\n  duration: number;\n  start: number;\n  end: number;\n}\n```\n\n## Development\n\n### Building\n\npolydev must be built before running. The build step externalizes inline scripts\nfor CSP compliance, and copies some dependencies into convenient locations.\n\nTo build, run `npm run build`:\n\n    > npm run build\n\nThe built project is available at `build/polydev`.\n\n### Installation\n\n 1. Create a new Chrome profile\n 2. Navigate to chrome://extensions\n 3. Check the "Developer mode" checkbox\n 4. Click "Load unpacked extension..."\n 5. Choose `polydev/build/polydev`\n\n### Dev flow\n\nWhen changing files in src/ the dev workflow should work cover most use cases.\n\n    > npm run dev\n\nDepending on the change you can either then close and reopen the devtools, or if\nyou\'ve made a change to the content-script or to element-zones, you must reload\nboth the extension and any page you\'re testing it on.\n'