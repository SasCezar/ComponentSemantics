b'# useCustomElement React Hook\n\n[![Build Status](https://travis-ci.org/the-road-to-learn-react/use-custom-element.svg?branch=master)](https://travis-ci.org/the-road-to-learn-react/use-custom-element) [![Slack](https://slack-the-road-to-learn-react.wieruch.com/badge.svg)](https://slack-the-road-to-learn-react.wieruch.com/) [![Greenkeeper badge](https://badges.greenkeeper.io/the-road-to-learn-react/use-custom-element.svg)](https://greenkeeper.io/) ![NPM](https://img.shields.io/npm/l/use-custom-element.svg)\n\nCustom hook to bridge Custom Elements (Web Components) to React.\n\n* [Learn how to build Web Components.](https://www.robinwieruch.de/web-components-tutorial)\n* [Learn how to use Web Components in React.](https://www.robinwieruch.de/react-web-components)\n\n## Installation\n\n`npm install use-custom-element`\n\n## Usage\n\nIn this scenario, we are using a specific [Dropdown Web Component](https://github.com/rwieruch/web-components-dropdown) as a React Dropdown Component. By using the custom React hook, we can provide all props in the right format to the custom element and register all event listeners (e.g. onChange from `props`) behind the scenes.\n\n```\nimport React from \'react\';\n\n// Web Component Use Case\n// install via npm install road-dropdown\nimport \'road-dropdown\';\n\nimport useCustomElement from \'use-custom-element\';\n\nconst Dropdown = props => {\n  const [customElementProps, ref] = useCustomElement(props);\n\n  return <road-dropdown {...customElementProps} ref={ref} />;\n};\n```\n\nAfterward, the Dropdown component can be used:\n\n```\nconst props = {\n  label: \'Label\',\n  option: \'option1\',\n  options: {\n    option1: { label: \'Option 1\' },\n    option2: { label: \'Option 2\' },\n  },\n  onChange: (value) => console.log(value),\n};\n\nreturn <Dropdown {...props} />;\n```\n\n### Custom Mapping\n\nYou can also define a custom mapping:\n\n```\nimport React from \'react\';\n\n// Web Component Use Case\n// install via npm install road-dropdown\nimport \'road-dropdown\';\n\nimport useCustomElement from \'use-custom-element\';\n\nconst Dropdown = props => {\n  const [customElementProps, ref] = useCustomElement(props, {\n    option: \'selected\',\n    onChange: \'click\',\n  });\n\n  console.log(customElementProps);\n\n  // label: "Label"\n  // options: "{"option1":{"label":"Option 1"},"option2":{"label":"Option 2"}}"\n  // selected: "option1"\n\n  // and "onChange" mapped to "click" event for the event listener\n\n  return <my-dropdown {...customElementProps} ref={ref} />;\n};\n```\n\n## Contribute\n\n* `git clone git@github.com:the-road-to-learn-react/use-custom-element.git`\n* `cd use-custom-element`\n* `npm install`\n* `npm run test`\n\n### More\n\n* [Publishing a Node Package to NPM](https://www.robinwieruch.de/publish-npm-package-node/)\n* [Node.js Testing Setup](https://www.robinwieruch.de/node-js-testing-mocha-chai/)\n* [React Testing Setup](https://www.robinwieruch.de/react-testing-tutorial/)\n'