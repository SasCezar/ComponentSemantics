b'# podcast-player\n\n![Screenshot of podcast-player](https://s3.amazonaws.com/f.cl.ly/items/3Q47193Z0f00142R0O42/1d0pzyOUeVH2-d1m77Vxx9QkL0vexZ5bJNbyEGRCfbY.png)\n\n```\n<podcast-player src="my.mp3"></podcast-player>\n```\n\nA web component for audio podcasts. It has a few features that make it most suitable for podcasts:\n\n- [x] Play/Pause\n- [x] 30s Rewind Button\n- [x] Seekable Progress Meter\n- [x] Speed Selection\n- [x] Mute/Unmute\n- [x] Accessibility\n- [ ] [TimeJump](http://davatron5000.github.io/TimeJump/)?\n\n## Usage\n\nTo get started, you\'ll need a copy of `webcomponents.js`. Either [link from CDNjs](https://cdnjs.com/libraries/webcomponentsjs) or\n\n```\nbower install webcomponentsjs\n```\n\nInclude `webcomponents.min.js` and `podcast-player.html` in the `<head>` of your episode page:\n\n```\n<script src="webcomponents.min.js"></script>\n<link rel="import" href="podcast-player.html"/>\n```\n\nThen in the body of your post, invoke the custom component using the `<podcast-player>` element.\n\n```\n<podcast-player src="my.mp3"></podcast-player>\n```\n\nBINGO-BANGO! Now you should be able to style it with good old fashioned CSS. Make it your own, good buddy.\n\n## Testing Locally\n\nTo test out web components locally, you need to start a local server so you don\'t get a CORS violation with something like:\n\n```\ncd to/my/directory/\npython -m SimpleHTTPServer\n```\n\nIf you have questions about web components, read up on them at [webcomponents.org](http://webcomponents.org/).\n\n## Download, Fork, Commit\nIf you like to contribue, please feel free to fork the repo. If you created a brand new feature, I recommend discussing it in an issue first rather wasting your whole weekend working on it, then Hail Mary\'ing it my way.\n\nIf you\'re reporting a bug, you\'d better have an editable reduced test case on a CodePen or GTFO. Sorry, thems the brakes. I got kids.\n'