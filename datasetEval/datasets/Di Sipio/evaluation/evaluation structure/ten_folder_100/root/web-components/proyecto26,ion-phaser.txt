b'![Built With Stencil](https://img.shields.io/badge/-Built%20With%20Stencil-16161d.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE5LjIuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA1MTIgNTEyIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTEyOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI%2BCjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI%2BCgkuc3Qwe2ZpbGw6I0ZGRkZGRjt9Cjwvc3R5bGU%2BCjxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik00MjQuNywzNzMuOWMwLDM3LjYtNTUuMSw2OC42LTkyLjcsNjguNkgxODAuNGMtMzcuOSwwLTkyLjctMzAuNy05Mi43LTY4LjZ2LTMuNmgzMzYuOVYzNzMuOXoiLz4KPHBhdGggY2xhc3M9InN0MCIgZD0iTTQyNC43LDI5Mi4xSDE4MC40Yy0zNy42LDAtOTIuNy0zMS05Mi43LTY4LjZ2LTMuNkgzMzJjMzcuNiwwLDkyLjcsMzEsOTIuNyw2OC42VjI5Mi4xeiIvPgo8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNDI0LjcsMTQxLjdIODcuN3YtMy42YzAtMzcuNiw1NC44LTY4LjYsOTIuNy02OC42SDMzMmMzNy45LDAsOTIuNywzMC43LDkyLjcsNjguNlYxNDEuN3oiLz4KPC9zdmc%2BCg%3D%3D&colorA=16161d&style=flat-square)\n[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-brightgreen.svg)](https://github.com/proyecto26/ion-phaser/graphs/commit-activity)\n[![NPM version][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n[![TotalDownloads][total-downloads-image]][npm-url]\n[![Twitter Follow][twitter-image]][twitter-url]\n\n[npm-image]:http://img.shields.io/npm/v/@ion-phaser/core.svg\n[npm-url]:https://npmjs.org/package/@ion-phaser/core\n[downloads-image]:http://img.shields.io/npm/dm/@ion-phaser/core.svg\n[total-downloads-image]:http://img.shields.io/npm/dt/@ion-phaser/core.svg?label=total%20downloads\n[twitter-image]:https://img.shields.io/twitter/follow/jdnichollsc.svg?style=social&label=Follow%20me\n[twitter-url]:https://twitter.com/jdnichollsc\n\n\n# IonPhaser\nWeb Component built with **[Stencil.js](https://github.com/ionic-team/stencil)** to integrate **[Phaser](https://github.com/photonstorm/phaser)** with any other framework.\n<p align="center">\n  <img width="600px" alt="IonPhaser" src="./img/ionphaser.jpg">\n</p>\n<p align="center">Inspired by the old <a href="https://github.com/jdnichollsc/IonPhaser">IonPhaser directive</a></p>\n\n## Demo\n\nDo you want to see this web component in action? Visit https://codepen.io/jdnichollsc/full/oRrwKM yay! \xf0\x9f\x8e\x89\n\n## IonPhaser CE\nLooking for [Phaser Framework CE (Community Edition)](https://github.com/photonstorm/phaser-ce)? Check [here](https://github.com/proyecto26/ion-phaser-ce)!\n\n## Getting Started\n\n### Packages\n\n| Project | Package | Version | Links |\n| ------- | ------- | ------- |:-----:|\n| **Core** | [`@ion-phaser/core`](https://www.npmjs.com/package/@ion-phaser/core) | [![version](https://img.shields.io/npm/v/@ion-phaser/core/latest.svg)](https://www.npmjs.com/package/@ion-phaser/core) | [`README.md`](./README.md)\n| **React** | [`@ion-phaser/react`](https://www.npmjs.com/package/@ion-phaser/react) | [![version](https://img.shields.io/npm/v/@ion-phaser/react/latest.svg)](https://www.npmjs.com/package/@ion-phaser/react) | [`README.md`](react/README.md)\n\n### Script tag\n\n- Put a script tag similar to this `<script src=\'https://unpkg.com/@ion-phaser/core@1.2.1/dist/ionphaser.js\'></script>` in the head of your index.html\n- Then you can use the element anywhere in your template, JSX, html etc\n\n### Node Modules\n- Run `npm install @ion-phaser/core --save`\n- Put a script tag similar to this `<script src=\'node_modules/@ion-phaser/core/dist/ionphaser.js\'></script>` in the head of your index.html\n- Then you can use the element anywhere in your template, JSX, html etc\n\n### In a stencil-starter app\n- Run `npm install @ion-phaser/core --save`\n- Add an import to the npm packages `import @ion-phaser/core;`\n- Then you can use the element anywhere in your template, JSX, html etc\n\n## Usage\nSimply add this tag wherever you want in your project:\n```html\n<ion-phaser [game]="game"></ion-phaser>\n```\n\nThese properties are available on the component:\n- [_game_](#configuration) (**required**)\n- **initialize** (optional)\n\n# Framework integrations\n\n## Angular\n\nUsing `ion-phaser` component within an Angular project:\n\n### Including the Custom Elements Schema\n\nIncluding the `CUSTOM_ELEMENTS_SCHEMA` in the module allows the use of Web Components in the HTML files. Here is an example of adding it to `AppModule`:\n\n```ts\nimport { BrowserModule } from \'@angular/platform-browser\';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from \'@angular/core\';\nimport { AppComponent } from \'./app.component\';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule {}\n```\n\nThe `CUSTOM_ELEMENTS_SCHEMA` needs to be included in any module that uses **IonPhaser**.\n\n### Calling defineCustomElements\n\n**IonPhaser** component includes a function used to load itself in the application window object. That function is called `defineCustomElements()` and needs to be executed once during the bootstrapping of your application. One convenient place to add it is in the `main.ts` file as follows:\n\n```tsx\nimport { enableProdMode } from \'@angular/core\';\nimport { platformBrowserDynamic } from \'@angular/platform-browser-dynamic\';\nimport { defineCustomElements as defineIonPhaser } from \'@ion-phaser/core/loader\';\n\nimport { AppModule } from \'./app/app.module\';\nimport { environment } from \'./environments/environment\';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\ndefineIonPhaser(window);\n```\n\n### Using IonPhaser in an Angular component\n\n```html\n<ion-phaser\n  [game]="game"\n  [initialize]="initialize"\n></ion-phaser>\n```\n\n```ts\npublic game = {\n  width?: integer | string;\n  height?: integer | string;\n  zoom?: number;\n  resolution?: number;\n  type?: number;\n  parent: HTMLElement | string;\n  canvas?: HTMLCanvasElement;\n  canvasStyle?: string;\n  context?: CanvasRenderingContext2D;\n  scene?: object;\n  seed?: string[];\n  title?: string;\n  url?: string;\n  version?: string;\n  autoFocus?: boolean;\n  input?: boolean | InputConfig;\n  disableContextMenu?: boolean;\n  banner?: boolean | BannerConfig;\n  dom?: DOMContainerConfig;\n  fps?: FPSConfig;\n  render?: RenderConfig;\n  backgroundColor?: string | number;\n  callbacks?: CallbacksConfig;\n  loader?: LoaderConfig;\n  images?: ImagesConfig;\n  physics?: object;\n  plugins?: PluginObject | PluginObjectItem[];\n  scale?: ScaleConfig;,\n  instance: Game // It\'s created internally when the game is initialized\n};\n\npublic initialize: boolean;\n\nconstructor(private api : ApiService){}\n\ninitializeGame() {\n  this.game = {\n    width: "100%",\n    height: "100%",\n    type: Phaser.AUTO,\n    scene: {}\n  }\n  this.initialize = true\n}\n\ngetInstance(){\n  return this.game.instance\n}\n```\n\n[_from stencil documentation_](https://github.com/ionic-team/stencil-site/blob/master/src/docs/framework-integration/angular.md)\n\n## React\n\n### Specific Wrapper\nWhen using a wrapper component, It\'s not necessary to access the reference directly to configure the game. More details [here](./react/README.md).\n```tsx\nimport React, { Component } from \'react\'\nimport Phaser from \'phaser\'\nimport { IonPhaser } from \'@ion-phaser/react\'\n\nclass App extends Component {\n  state = {\n    initialize: false,\n    game: {\n      width: "100%",\n      height: "100%",\n      type: Phaser.AUTO,\n      scene: {}\n    }\n  }\n  render() {\n    const { initialize, game } = this.state\n    return (\n      <IonPhaser game={game} initialize={initialize} />\n    )\n  }\n}\n```\n\n### Web Component\nOther option is using the web component directly: \n\n```tsx\nimport React from \'react\'\nimport ReactDOM from \'react-dom\'\nimport { defineCustomElements as defineIonPhaser } from \'@ion-phaser/core/loader\'\nimport Phaser from \'phaser\'\n\nconst game = {\n  width: "100%",\n  height: "100%",\n  type: Phaser.AUTO,\n  scene: {}\n}\n\nReactDOM.render(<ion-phaser ref={el => el.game = game} />, document.getElementById(\'root\'));\n\ndefineIonPhaser(window);\n```\n\n[_from stencil documentation_](https://github.com/ionic-team/stencil-site/blob/master/src/docs/framework-integration/react.md)\n\n## Vue\n\nIn order to use the `ion-phaser` Web Component inside of a Vue application, it should be modified to define the custom elements and to inform the Vue compiler which elements to ignore during compilation. This can all be done within the `main.js` file as follows:\n\n```tsx\nimport Vue from \'vue\';\nimport { defineCustomElements as defineIonPhaser } from \'@ion-phaser/core/loader\'\n\nimport App from \'./App.vue\';\n\nVue.config.productionTip = false;\nVue.config.ignoredElements = [/ion-\\w*/];\n\n// Bind the IonPhaser custom element to the window object\ndefineIonPhaser(window);\n\nnew Vue({\n  render: h => h(App)\n}).$mount(\'#app\');\n```\n\n### Using IonPhaser in a Vue component\n\n```vue\n<template>\n  <ion-phaser \n    v-bind:game.prop="game"\n    v-bind:initialize.prop="initialize"\n  />\n</template>\n\n<script>\nimport Phaser from \'phaser\'\nexport default {\n  name: \'HelloWorld\',\n  data() {\n    return {\n      initialize: false,\n      game: {\n        width: "100%",\n        height: "100%",\n        type: Phaser.AUTO,\n        scene: {\n          init: function() {\n            this.cameras.main.setBackgroundColor(\'#24252A\')\n          },\n          create: function() {\n            this.helloWorld = this.add.text(\n              this.cameras.main.centerX, \n              this.cameras.main.centerY, \n              "Hello World", { \n                font: "40px Arial", \n                fill: "#ffffff" \n              }\n            );\n            this.helloWorld.setOrigin(0.5);\n          },\n          update: function() {\n            this.helloWorld.angle += 1;\n          }\n        }\n      }\n    }\n  }\n}\n</script>\n```\n\n[_from stencil documentation_](https://github.com/ionic-team/stencil-site/blob/master/src/docs/framework-integration/vue.md)\n\n## Supporting \xf0\x9f\x8d\xbb\nI believe in Unicorns \xf0\x9f\xa6\x84\nSupport [me](http://www.paypal.me/jdnichollsc/2), if you do too.\n\n## Security contact information \xf0\x9f\x9a\xa8\nTo report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security). Tidelift will coordinate the fix and disclosure.\n\n## Happy coding \xf0\x9f\x92\xaf\nMade with \xe2\x9d\xa4\xef\xb8\x8f\n\n<img width="150px" src="https://avatars0.githubusercontent.com/u/28855608?s=200&v=4" align="right">\n'