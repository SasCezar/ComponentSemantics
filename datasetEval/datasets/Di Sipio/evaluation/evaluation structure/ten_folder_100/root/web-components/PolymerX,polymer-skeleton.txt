b'<img src="https://i.imgur.com/wWjqhW6.jpg" width="530">\n\n[![GitHub release](https://img.shields.io/github/release/PolymerX/polymer-skeleton.svg?style=flat-square)](https://github.com/PolymerX/polymer-skeleton)\n[![Build Status](https://travis-ci.org/PolymerX/polymer-skeleton.svg?style=flat-square&branch=master)](https://travis-ci.org/PolymerX/polymer-skeleton)\n[![GitHub issues](https://img.shields.io/github/issues/PolymerX/polymer-skeleton.svg?style=flat-square)](https://github.com/PolymerX/polymer-skeleton/issues)\n[![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg?style=flat-square)](https://github.com/sindresorhus/xo)\n[![Polymer Skeleton](https://img.shields.io/badge/polymerX-SKELETON-435877.svg?style=flat-square)](https://github.com/PolymerX/polymer-skeleton) [![Greenkeeper badge](https://badges.greenkeeper.io/PolymerX/polymer-skeleton.svg)](https://greenkeeper.io/)\n\n> A mininum boilerplate to deliver a Polymer 3.x with Webpack, PostCSS and Service Workers ready.\n\n## Features\n\n* [Webpack](https://webpack.js.org/) 4\n* [webpack-dev-server](https://github.com/webpack/webpack-dev-server) with hot reloading active.\n* [PostCSS](http://postcss.org/) with many plugins.\n* Service Workers generated by [Workbox](https://workboxjs.org/) through the [workbox-webpack-plugin](https://www.npmjs.com/package/workbox-webpack-plugin) (just for `build`)\n* Copy statics file on `dist` folder (like `vendor/webcomponents-loader.js` and others)\n* [standard-version](https://github.com/conventional-changelog/standard-version) is bundled for managing versioning and changelogs.\n\n#### Loaders\n\n* [babel-loader](https://github.com/babel/babel-loader) with the [babel-preset-env](https://github.com/babel/babel-preset-env) and `babel-plugin-transform-object-rest-spread` installed.\n* [text-loader](https://github.com/dfenstermaker/text-loader) - Load HTML templates as string.\n* [postcss-loader](https://github.com/postcss/postcss-loader) - Load PostCSS into the `<style>` scoped tag of Polymer elements as string.\n\n\n## Supported Browsers\n\nAll modern browsers. \xf0\x9f\x95\xb6\n\nBut as the features said, we are also transpiling the bundle for "oldie" browsers. Of course we are not covering things like IE11.\n\n## Usage\n\nClone this repository:\n\n```bash\ngit clone --depth 1 https://github.com/PolymerX/polymer-skeleton [your-app-name]\n```\n\nRemove the `.git` folder and change details within:\n\n* `package.json`\n* `src/manifest.json`\n\nThen start building your application!\n\n```bash\nyarn\n```\n\n#### Developing\n\nStart the `webpack-dev-server` on localhost `http://localhost:3000` with hot-reload and watch on `.pcss` files.\n\n```bash\nyarn dev\n```\n\n#### Test\n\nXO for code style, Stylelint for PostCSS linting, and WCT for components tests:\n\n```bash\nyarn test\n```\n\nRun [Lighthouse](https://github.com/GoogleChrome/lighthouse) for testing the PWA capabilities:\n\n```bash\nyarn test:lighthouse\n```\n\n#### Build\n\n(Almost) production-ready (`webpack --optimize-minimze` and copy statics) to `dist` folder. Also generating Service Workers. The command will also create the `module` version of the `bundle` ready to be loaded as `type=module`.\n\n```bash\nyarn build\n```\n\n\n## Styling components with PostCSS\n\nDuring development `.pcss` files will be watched, compiled and injected to the relative `<style>` tag within the component template. The CSS is scoped to the component so don\'t worry about CSS specificity, you can also use `:host`, `:host-context` and `:root` selectors. Read more about [styling web components](https://www.polymer-project.org/2.0/docs/devguide/style-shadow-dom) and [custom CSS properties](https://www.polymer-project.org/2.0/docs/devguide/custom-css-properties).\n\nWe also include Autoprefixer plugin, if you don\'t know how it works (...and you should), it allows you to write CSS without worrying about vendor prefixes. Just write your css properties prefix-free and let autoprefixer do the work for you when compiling.\n\n**How about commons styles?**\nYou can simply `import` any other `.pcss` file within your main component `.js` file and print it inside the `template()`.\n\n\n## [**@webcomponents/webcomponentsjs**](https://github.com/webcomponents/webcomponentsjs)\n\nWe are getting the `webpcomponents-loader.js` polyfill from GitHub using NPM/Yarn and copying it into a `vendor` folder with a `Node` script.\n\n\n## Contributors\n\n| Name                      | Website                  |\n| ------------------------- | ------------------------ |\n| **Alessio Occhipinti**    | <https://godev.space>    |\n| **Mattia Astorino**       | <http://equinsuocha.io/> |\n\n\n## License\n\nPolymerX \xc2\xa9 MIT\n'