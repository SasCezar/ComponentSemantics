b'# &lt;tab-container&gt; element\n\nA accessible tab container element with keyboard support. Follows the [ARIA best practices guide on tabs](https://www.w3.org/TR/wai-aria-practices/#tabpanel).\n\n## Installation\n\n```\n$ npm install @github/tab-container-element\n```\n\n## Usage\n\n```js\nimport \'@github/tab-container-element\'\n```\n\n```html\n<tab-container>\n  <div role="tablist">\n    <button type="button" role="tab" aria-selected="true">Tab one</button>\n    <button type="button" role="tab">Tab two</button>\n    <button type="button" role="tab">Tab three</button>\n  </div>\n  <div role="tabpanel">\n    Panel 1\n  </div>\n  <div role="tabpanel" hidden>\n    Panel 2\n  </div>\n  <div role="tabpanel" hidden>\n    Panel 3\n  </div>\n</tab-container>\n```\n\n### Events\n\n- `tab-container-change` (bubbles, cancelable): fired on `<tab-container>` before a new tab is selected and visibility is updated. `event.detail.relatedTarget` is the tab panel that will be selected if the event isn\'t cancelled.\n- `tab-container-changed` (bubbles): fired on `<tab-container>` after a new tab is selected and visibility is updated. `event.detail.relatedTarget` is the newly visible tab panel.\n\n## Browser support\n\nBrowsers without native [custom element support][support] require a [polyfill][].\n\n- Chrome\n- Firefox\n- Safari\n- Microsoft Edge\n\n[support]: https://caniuse.com/#feat=custom-elementsv1\n[polyfill]: https://github.com/webcomponents/custom-elements\n\n## Development\n\n```\nnpm install\nnpm test\n```\n\n## License\n\nDistributed under the MIT license. See LICENSE for details.\n'