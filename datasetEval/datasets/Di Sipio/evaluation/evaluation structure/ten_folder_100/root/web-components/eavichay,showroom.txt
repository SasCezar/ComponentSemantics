b'![showroom](../app/client/assets/showroom-bg.png)\n\n# showroom: Universal development and automated test environment for web components\n\n[![Build Status](https://semaphoreci.com/api/v1/eavichay/showroom/branches/master/badge.svg)](https://semaphoreci.com/eavichay/showroom)\n\n### Installation\n\n`npm install -g showroom`\n\ncreate .showroom folder in your project\nadd descriptor files (see [example](https://github.com/eavichay/showroom/tree/master/example/.showroom)) for your web components.\n\nrun showroom and see the magic.\n\nSee [live demo here](https://showroomjs.com)\n\nSupports:\n- Any stack: Polymer, LitElement, Slim.js, Vanilla, Skate,...\n- Supports customized built-in elements (i.e. extends HTMLInputElement)\n- Supports innerHTML and wrapping HTML\n- Supports global/local scripting and styling\n- Supports CI/CD queries for shadow-roots\n- Smooth pupeteer integration\n\n### Configuration\n\nThe server following options:\n- `port (int)` - The port on which the server listens. Default is `3000`.\n- `path (string)` - The path, relative to the `process.cwd()`, used to search for project files. Default is `./`.\n- `silent (boolean)` - If true, completely disables logging. Default is `false`.\n- `verbose (boolean)` - If true, verbose messages will be logged. Otherwise only errors and warnings will be logged. Default it `false`.\n\n### Build & Development\n`git clone git@github.com:eavichay/showroom.git`\n`npm install`\n`npm run dev`\n\n### Online Documentation/Wiki\n[Here](https://github.com/eavichay/showroom/wiki)\n'