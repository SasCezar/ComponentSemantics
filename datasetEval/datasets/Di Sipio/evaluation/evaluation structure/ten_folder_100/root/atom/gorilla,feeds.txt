b'## gorilla/feeds\n[![GoDoc](https://godoc.org/github.com/gorilla/feeds?status.svg)](https://godoc.org/github.com/gorilla/feeds)\n[![CircleCI](https://circleci.com/gh/gorilla/feeds.svg?style=svg)](https://circleci.com/gh/gorilla/feeds)\n\nfeeds is a web feed generator library for generating RSS, Atom and JSON feeds from Go\napplications.\n\n### Goals\n\n * Provide a simple interface to create both Atom & RSS 2.0 feeds\n * Full support for [Atom][atom], [RSS 2.0][rss], and [JSON Feed Version 1][jsonfeed] spec elements\n * Ability to modify particulars for each spec\n\n[atom]: https://tools.ietf.org/html/rfc4287\n[rss]: http://www.rssboard.org/rss-specification\n[jsonfeed]: https://jsonfeed.org/version/1\n\n### Usage\n\n```go\npackage main\n\nimport (\n    "fmt"\n    "log"\n    "time"\n    "github.com/gorilla/feeds"\n)\n\nfunc main() {\n    now := time.Now()\n    feed := &feeds.Feed{\n        Title:       "jmoiron.net blog",\n        Link:        &feeds.Link{Href: "http://jmoiron.net/blog"},\n        Description: "discussion about tech, footie, photos",\n        Author:      &feeds.Author{Name: "Jason Moiron", Email: "jmoiron@jmoiron.net"},\n        Created:     now,\n    }\n\n    feed.Items = []*feeds.Item{\n        &feeds.Item{\n            Title:       "Limiting Concurrency in Go",\n            Link:        &feeds.Link{Href: "http://jmoiron.net/blog/limiting-concurrency-in-go/"},\n            Description: "A discussion on controlled parallelism in golang",\n            Author:      &feeds.Author{Name: "Jason Moiron", Email: "jmoiron@jmoiron.net"},\n            Created:     now,\n        },\n        &feeds.Item{\n            Title:       "Logic-less Template Redux",\n            Link:        &feeds.Link{Href: "http://jmoiron.net/blog/logicless-template-redux/"},\n            Description: "More thoughts on logicless templates",\n            Created:     now,\n        },\n        &feeds.Item{\n            Title:       "Idiomatic Code Reuse in Go",\n            Link:        &feeds.Link{Href: "http://jmoiron.net/blog/idiomatic-code-reuse-in-go/"},\n            Description: "How to use interfaces <em>effectively</em>",\n            Created:     now,\n        },\n    }\n\n    atom, err := feed.ToAtom()\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    rss, err := feed.ToRss()\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    json, err := feed.ToJSON()\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    fmt.Println(atom, "\\n", rss, "\\n", json)\n}\n```\n\nOutputs:\n\n```xml\n<?xml version="1.0" encoding="UTF-8"?>\n<feed xmlns="http://www.w3.org/2005/Atom">\n  <title>jmoiron.net blog</title>\n  <link href="http://jmoiron.net/blog"></link>\n  <id>http://jmoiron.net/blog</id>\n  <updated>2013-01-16T03:26:01-05:00</updated>\n  <summary>discussion about tech, footie, photos</summary>\n  <entry>\n    <title>Limiting Concurrency in Go</title>\n    <link href="http://jmoiron.net/blog/limiting-concurrency-in-go/"></link>\n    <updated>2013-01-16T03:26:01-05:00</updated>\n    <id>tag:jmoiron.net,2013-01-16:/blog/limiting-concurrency-in-go/</id>\n    <summary type="html">A discussion on controlled parallelism in golang</summary>\n    <author>\n      <name>Jason Moiron</name>\n      <email>jmoiron@jmoiron.net</email>\n    </author>\n  </entry>\n  <entry>\n    <title>Logic-less Template Redux</title>\n    <link href="http://jmoiron.net/blog/logicless-template-redux/"></link>\n    <updated>2013-01-16T03:26:01-05:00</updated>\n    <id>tag:jmoiron.net,2013-01-16:/blog/logicless-template-redux/</id>\n    <summary type="html">More thoughts on logicless templates</summary>\n    <author></author>\n  </entry>\n  <entry>\n    <title>Idiomatic Code Reuse in Go</title>\n    <link href="http://jmoiron.net/blog/idiomatic-code-reuse-in-go/"></link>\n    <updated>2013-01-16T03:26:01-05:00</updated>\n    <id>tag:jmoiron.net,2013-01-16:/blog/idiomatic-code-reuse-in-go/</id>\n    <summary type="html">How to use interfaces &lt;em&gt;effectively&lt;/em&gt;</summary>\n    <author></author>\n  </entry>\n</feed>\n\n<?xml version="1.0" encoding="UTF-8"?>\n<rss version="2.0">\n  <channel>\n    <title>jmoiron.net blog</title>\n    <link>http://jmoiron.net/blog</link>\n    <description>discussion about tech, footie, photos</description>\n    <managingEditor>jmoiron@jmoiron.net (Jason Moiron)</managingEditor>\n    <pubDate>2013-01-16T03:22:24-05:00</pubDate>\n    <item>\n      <title>Limiting Concurrency in Go</title>\n      <link>http://jmoiron.net/blog/limiting-concurrency-in-go/</link>\n      <description>A discussion on controlled parallelism in golang</description>\n      <pubDate>2013-01-16T03:22:24-05:00</pubDate>\n    </item>\n    <item>\n      <title>Logic-less Template Redux</title>\n      <link>http://jmoiron.net/blog/logicless-template-redux/</link>\n      <description>More thoughts on logicless templates</description>\n      <pubDate>2013-01-16T03:22:24-05:00</pubDate>\n    </item>\n    <item>\n      <title>Idiomatic Code Reuse in Go</title>\n      <link>http://jmoiron.net/blog/idiomatic-code-reuse-in-go/</link>\n      <description>How to use interfaces &lt;em&gt;effectively&lt;/em&gt;</description>\n      <pubDate>2013-01-16T03:22:24-05:00</pubDate>\n    </item>\n  </channel>\n</rss>\n\n{\n  "version": "https://jsonfeed.org/version/1",\n  "title": "jmoiron.net blog",\n  "home_page_url": "http://jmoiron.net/blog",\n  "description": "discussion about tech, footie, photos",\n  "author": {\n    "name": "Jason Moiron"\n  },\n  "items": [\n    {\n      "id": "",\n      "url": "http://jmoiron.net/blog/limiting-concurrency-in-go/",\n      "title": "Limiting Concurrency in Go",\n      "summary": "A discussion on controlled parallelism in golang",\n      "date_published": "2013-01-16T03:22:24.530817846-05:00",\n      "author": {\n        "name": "Jason Moiron"\n      }\n    },\n    {\n      "id": "",\n      "url": "http://jmoiron.net/blog/logicless-template-redux/",\n      "title": "Logic-less Template Redux",\n      "summary": "More thoughts on logicless templates",\n      "date_published": "2013-01-16T03:22:24.530817846-05:00"\n    },\n    {\n      "id": "",\n      "url": "http://jmoiron.net/blog/idiomatic-code-reuse-in-go/",\n      "title": "Idiomatic Code Reuse in Go",\n      "summary": "How to use interfaces \\u003cem\\u003eeffectively\\u003c/em\\u003e",\n      "date_published": "2013-01-16T03:22:24.530817846-05:00"\n    }\n  ]\n}\n```\n\n'