b'# Photon\n\n[Offical Website](https://mauriceconrad.github.io/Photon/)\n\nDevelop native looking UI\'s for **Electron** with HTML, CSS & JS.\n\n![ShowReel](https://dev.maurice-conrad.eu/img/photon/demo.png)\n\n## Install\n\n```bash\nnpm install electron-photon\n```\n\n[NPM](https://www.npmjs.com/package/electron-photon)\n\n## Usage\n\n```javascript\n// Require photon\nconst Photon = require("electron-photon");\n```\n\n### Use in Browser\n\nIf you want to use Photon in a Browser, you have to mention some things.\nFirst of all, embed the browserified script file like anything else using a `<script>` Tag.\nBut now, you also have to set a relative path for loading the components.\n```html\n<script src="photon.browser.js"></script>\n<script>\n  Photon.__baseDir = "/myPhotonMaster";\n</script>\n```\n\n#### Why?\n\nThis is because Photon needs an \xe2\x80\x9cendpoint\xe2\x80\x9d that contains a `/dist` folder to load each component.\nThe problem is, that we are embedding the `photon.browser.js` using a former script tag. And sadly, there exist no API to get the relative source of an embedded script from himself. Of course there exist a lot of hacks workarounds but currently this is the only \xe2\x80\x9cclean\xe2\x80\x9d solution.\n\n**Just look at the magic! Everything works out of the box.**\n\nYour `Photon` instance is just used to contain the component controllers and to perform special actions like `Dialog()` (More about [Dialogs](dist/PhotonDialog)). Or if you want to *hack* a components lifecycle, there you get the classes you need.\n\n### Troubleshooting\n\n**I get an error** `ERR_FILE_NOT_FOUND` when *requiring* the  **Photon**. Sometimes the components will not load and you may ask yourself why.\nGenerally, `Photon` loads each component on its own. Therefore, a general `/dist` folder is required that contains all component folders. By default, the module tries to use the `/dist` folder relative to the location of `photon.js` using node\'s `__dirname`. Because of the fact that browsers does not support a clear solution to get the relative path of embedded javascript file by itself, you have to set `Photon.__baseDir` manually when using the browserified version. And if you do not contain your `/dist` directory relative to the location of `photon.js` (which is the `main` file for the node module), you also have to set `Photon.__baseDir` manually.\n\nTherefore, if you get such an error, just try to set the `Photon.__baseDir` manually to the `/dist` folder you want to use to load your components\n\n## Example\n\nJust run the `demo/ShowReel` folder with `electron` and will see the whole beauty of Photon!\n\n## Application Layout\n\nThe main layout of your application needs a `<ph-window>` element in which the `<tool-bar>`\'s and your `<window-content>` will find their place.\n\n```html\n<ph-window>\n  <!--Top header bar here-->\n  <tool-bar type="header">\n    Toolbar Header\n  </tool-bar>\n  <!--Window content here-->\n  <window-content>\n    Window Content\n  </window-content>\n  <!--Bottom footer bar here-->\n  <tool-bar type="footer">\n    Footer Header\n  </tool-bar>\n</ph-window>\n```\n\n## Components\n\n* [Panes](#panes)\n* [Navigation](#navigation-list)\n* [Toolbar](#toolbar)\n* [Table](#table-view)\n* [Tabs](#tabs)\n* [Lists/Swipes](#lists--swipes)\n* [Button](#button)\n* [Button Group](#button-group)\n* [Circular Slider](#circular-slider)\n* [ContentFrame/SelectList](#content-frame--select-list)\n* [Input](#input)\n* [NumberInput/Stepper](#number-input--stepper)\n* [NumberInput](#number-input)\n* [ProgressCircle](#progress-circle)\n* [Slider](#slider)\n* [Dialog](#dialog)\n\nIf you have a look at the project\'s structure, you will see that there exist a very well balanced component system you theoretically can contribute to with custom components.\n\n### Styles\n\nHow do I set the **style** of the UI?\n`Photon` supports multiple styles, inspired by native user interfaces from *macOS* or *Windows*.\n\nBy default, `Photon` tries to use the `style` that is connected to the running OS, stored in `process.platform`. But you can easily set the style to one of the supported ones. Note that the styles do not have the name of an operating system but their **real** name such as *cocoa*.\n\n|Style Name|Related Operating System|     Support\n|----------|------------------------|------------\n|  `cocoa` |     macOS (Apple)      |        True\n|  `metro` |  Windows (Microsoft)   |Coming soon\n|  `unity` |     Ubuntu (Linux)     |Coming soon\n\n#### Set Style\n\nYou can easily control the current style just with the `style` property of your `Photon` instance.\n\n```javascript\n// Set style\nPhoton.style = "cocoa";\n// Works as expected\n```\n\nYou can do this whenever you want while your application is running ;-)\n\nNote, that when you set a style the first time in your session, it may takes time to load the resources because they are not cached.\n\n#### Set An Invalid Style\n\n```javascript\n// Set style\nPhoton.style = "xxx";\n// Occurs an error\n```\n\n\n### Panes\n\n![Paned Layout](https://dev.maurice-conrad.eu/img/photon/paned1.png)\n\nMore about the panes in\n[Panes](dist/PhotonPanes)\n\n### Navigation List\n\n![Navigation List](https://dev.maurice-conrad.eu/img/photon/navigation2.png)\n\nMore about the navigation list in\n[Navigation List](dist/PhotonNavigation)\n\n### Toolbar\n\n![Toolbars](https://dev.maurice-conrad.eu/img/photon/toolbar1.png)\n\nMore about toolbars in [Toolbar](dist/PhotonToolbar)\n\n\n### Table View\n\n![Table View](https://dev.maurice-conrad.eu/img/photon/table1.png)\n\nMore about the table view in [Table View](dist/PhotonTable)\n\n### Tabs\n\n![Example](https://dev.maurice-conrad.eu/img/photon/tab1.gif)\n![Example](https://dev.maurice-conrad.eu/img/photon/tab2.gif)\n\nMore about tabs in [Tabs](dist/PhotonTab)\n\n### Lists & Swipes\n\n#### Lists\n\n![Lists](https://dev.maurice-conrad.eu/img/photon/lists.png)\n\n#### Swipes\n\n![Swipe](https://dev.maurice-conrad.eu/img/photon/swipe1.png)\n![Swipe](https://dev.maurice-conrad.eu/img/photon/swipe2.png)\n\n![Swipes Showreel](https://dev.maurice-conrad.eu/img/photon/swipes.gif)\n(GIF is slower than in reality)\n\nMore about lists & swipe actions in [Lists & Swipes](dist/PhotonSwipe)\n\n### Button\n\n![Button Default](https://dev.maurice-conrad.eu/img/photon/button1.png)\n\n![Button Default](https://dev.maurice-conrad.eu/img/photon/button2.png)\n\nMore about all buttons in [Button](dist/PhotonButton)\n\n### Button Group\n\n![Button Group Default](https://dev.maurice-conrad.eu/img/photon/buttongroupdefault.png)\n\n![ButtonGroup Segmented](https://dev.maurice-conrad.eu/img/photon/buttongroupdesegmented.png)\n\nMore about the button group component in [Button Group](dist/PhotonBtnGroup)\n\n### Circular Slider\n\n![Circular Slider](https://dev.maurice-conrad.eu/img/photon/circularslider1.png)\n\nMore about the circular slider in [Circular Slider](dist/PhotonCircularSlider)\n\n### Content Frame & Select List\n\n![Input Field Focused](https://dev.maurice-conrad.eu/img/photon/contentframe2.png)\n\nMore about the content frames and selectable lists in [Content Frame & Select List](dist/PhotonContent)\n\n### Input\n\n#### Simple Text Field\n\n![Input Field](https://dev.maurice-conrad.eu/img/photon/input1.png)\n![Input Field Focused](https://dev.maurice-conrad.eu/img/photon/input2.png)\n\n#### Number Input & Stepper\n\n![Number Input with Stepper](https://dev.maurice-conrad.eu/img/photon/input3.png)\n\nMore about input fields in [Input](dist/PhotonInput)\n\n### Messages\n\n![Messages](https://dev.maurice-conrad.eu/img/photon/messages.png)\n\nMore about messages view in [Messages](dist/PhotonMessages)\n\n### Number Input\n\n![Number Input](https://dev.maurice-conrad.eu/img/photon/numberinput.png)\n\nMore about number input in [Number Input](dist/PhotonNumberInput)\n\n### Progress Circle\n\n![Progress Circle](https://camo.githubusercontent.com/3ed0dfb5ab01ce1ebd6ae06acf1b86214d038281/68747470733a2f2f7069636c6f61642e6f72672f696d6167652f72647063706c6f772f62696c6473636869726d666f746f323031362d31312d3132756d31352e332e706e67)\n\nMore about progress circle in [Progress Circle](dist/PhotonProgressCircle)\n\n### Slider\n\n![Slider](https://camo.githubusercontent.com/d4635dbfc74c802b7b6dac1edb65d68c1490850b/68747470733a2f2f7069636c6f61642e6f72672f696d6167652f726469706f7077612f62696c6473636869726d666f746f323031362d31312d3036756d32312e312e706e67)\n\nMore about sliders in [Slider](dist/PhotonSlider)\n\n### Dialog\n\n![Dialog](https://dev.maurice-conrad.eu/img/photon/dialog1.png)\n\nMore about dialog controller in [Dialog](dist/PhotonDialog)\n\n### Drop Down Menu\n\n![Dialog](https://dev.maurice-conrad.eu/img/photon/dropdown1.png)\n\nMore about drop down menu controller in [Drop Down Menu](dist/Drop Down Menu)\n\n### Browserify\n\nYou can `browserify` the `photon.js` file completely using the `--ignore-missing` flag which ignores the missing `electron` requirements. Please note, that not all features are supported in browsers because they may need electron or node functions.\n\nIf you browserify `photon.js` and execute it in a non-node enviroment, the `Photon` instance will adopted globally to the *window* object.\n\nThis repository contains a valid browserified file named `photon-browser.js`, you normally should use.\n\n### More\n\n**You are missing something or do you have improvements?**\n\nPlease open a *pull-request* or an *Issue* and I will do my best ;-)\n\n## Disclaimer\n\nThis framework is a **hard fork** of the original *PhotonKit* framework of *connors*. Because *connors* project is not developed anymore since more than **2** years, this is the release of Photon to version `1.0`.\n\nPieces of the code that is used here, is originally written by *connors*. The original code is contained within the CSS file `dist/PhotonOriginal/photon-original.css`.\n\nBut I made some important changes on the original components. E.g. I use modern technologies like **Custom Elements** to handle components much easier and cleaner and to provide a lighter API ;-)\n'