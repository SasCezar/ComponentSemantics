b"# IDE-python package\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/lgeiger/ide-python.svg)](https://greenkeeper.io/)\n\nPython language support for [Atom-IDE](https://ide.atom.io/), powered by the [Python language server](https://github.com/palantir/python-language-server).\n\n![ide-python](https://user-images.githubusercontent.com/13285808/30352538-b9687a76-9820-11e7-8876-c22751645d36.png)\n\n## Requirements\n\n[`ide-python`](https://atom.io/packages/ide-python) requires [Atom `1.21+`](https://atom.io/), [Python language server `0.29+`](https://github.com/palantir/python-language-server) and the [`atom-ide-ui`](https://atom.io/packages/atom-ide-ui) package to expose the functionality within Atom.\n\n## Feature Providers\n\n- [Jedi](https://github.com/davidhalter/jedi) for Completions, Definitions, Hover, References, Signature Help, and Symbols\n- [Rope](https://github.com/python-rope/rope) for Completions and renaming\n- [Pyflakes](https://github.com/PyCQA/pyflakes) linter to detect various errors\n- [McCabe](https://github.com/PyCQA/mccabe) linter for complexity checking\n- [pycodestyle](https://github.com/PyCQA/pycodestyle) linter for style checking\n- [Pylint](https://www.pylint.org/) linter to detect various errors\n- [Flake8](http://flake8.pycqa.org/en/latest/) linter to detect various errors\n- [pydocstyle](https://github.com/PyCQA/pydocstyle) linter for docstring style checking\n- [autopep8](https://github.com/hhatto/autopep8) for code formatting (preferred over YAPF)\n- [YAPF](https://github.com/google/yapf) for code formatting\n\n## Installation\n\n### Language Server\n\nInstall the language server (0.29.0 or newer) with:\n\n```bash\npython -m pip install 'python-language-server[all]'\n```\n\nThis command will install the language server and all supported feature providers, which can be enabled or disabled in the settings. Checkout the [official installation instructions](https://github.com/palantir/python-language-server#installation) on how to install only the providers you need.\n\nYou can verify that everything is correctly installed by running `python -m pyls --help` from the command line.\nIt should return\n\n```bash\nusage: pyls [-h] [--tcp] [--host HOST] [--port PORT]\n            [--log-config LOG_CONFIG | --log-file LOG_FILE] [-v]\n\nPython Language Server\n...\n```\n\nIf you have installed `pyls` using a non default installation of Python, you can add modify the _Python Executable_ config in the `ide-python` settings.\n\n### Atom Package\n\nInstall `ide-python` and [`atom-ide-ui`](https://atom.io/packages/atom-ide-ui) from _Install_ in Atom's settings or run:\n\n```bash\napm install atom-ide-ui\napm install ide-python\n```\n\n## Configuration\n\nConfiguration is loaded from zero or more configuration sources.\n\n- `pycodestyle`: discovered in `~/.config/pycodestyle`, `setup.cfg`, `tox.ini` and `pycodestyle.cfg`\n- `flake8`: discovered in `~/.config/flake8`, `setup.cfg`, `tox.ini` and `flake8.cfg`\n\nOverall configuration is computed first from user configuration (in home directory), overridden by configuration in the `ide-python` settings, and then overridden by configuration discovered in the current project.\n\n## Contributing\n\nAlways feel free to help out! Whether it's [filing bugs and feature requests](https://github.com/lgeiger/ide-python/issues/new) or working on some of the [open issues](https://github.com/lgeiger/ide-python/issues), Atom's [guide for contributing to packages](https://github.com/atom/atom/blob/master/docs/contributing-to-packages.md) will help get you started.\n\n## License\n\nMIT License. See [the license](LICENSE.md) for more details.\n"