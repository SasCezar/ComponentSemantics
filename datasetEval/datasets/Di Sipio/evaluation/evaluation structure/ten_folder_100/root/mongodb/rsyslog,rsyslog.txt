b'Rsyslog - what is it?\n=====================\n\n[![Help Contribute to Open Source](https://www.codetriage.com/rsyslog/rsyslog/badges/users.svg)](https://www.codetriage.com/rsyslog/rsyslog)\n[![Language Grade: C/C++](https://img.shields.io/lgtm/grade/cpp/g/rsyslog/rsyslog.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/rsyslog/rsyslog/context:cpp)\n[![Total Alerts](https://img.shields.io/lgtm/alerts/g/rsyslog/rsyslog.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/rsyslog/rsyslog/alerts/)\n\nRsyslog is a **r**ocket-fast **sys**tem for **log** processing.\n\nIt offers high-performance, great security features and a modular design.\nWhile it started as a regular syslogd, rsyslog has evolved into a kind of swiss\narmy knife of logging, being able to accept inputs from a wide variety of sources,\ntransform them, and output to the results to diverse destinations.\n\nRsyslog can deliver over one million messages per second  to local destinations\nwhen limited processing is applied (based on v7, December 2013). Even with\nremote destinations and more elaborate processing the performance is usually\nconsidered "stunning".\n\nMailing List\n============\nhttp://lists.adiscon.net/mailman/listinfo/rsyslog\n\nInstalling rsyslog\n==================\nMost distributions carry rsyslog in their repository. So you usually just need\nto use the package manager to install it. Note that on non-systemd systems (most\nnotably Ubuntu), rsyslog usually is already installed.\n\nProject-Provided Packages\n----------------------------\nUnfortunately, distributions often do not catch up with the pace of rsyslog\ndevelopment and as such only offer old versions. To solve that problem, we have\ncreated packages for current versions ourselves.\n\nThey are available for:\n * RPM-based systems: https://www.rsyslog.com/rhelcentos-rpms/\n * Ubuntu: https://www.rsyslog.com/ubuntu-repository/\n * Debian: https://www.rsyslog.com/debian-repository/\n\nBuilding from Source\n--------------------\nFollow the instructions at: https://www.rsyslog.com/doc/v8-stable/installation/build_from_repo.html\n\n### Build Environment\n\nIn general, you need\n\n* pkg-config\n* libestr\n* liblogging (stdlog component, for testbench)\n\nIt is best to build these from source.\n\n#### CentOS 6\n\nFor json-c, we need:\n```\nexport PKG_CONFIG_PATH=/lib64/pkgconfig/\n```\n\n```\nsudo yum install git valgrind autoconf automake flex bison python-docutils python-sphinx json-c-devel libuuid-devel libgcrypt-devel zlib-devel openssl-devel libcurl-devel gnutls-devel mysql-devel postgresql-devel libdbi-dbd-mysql libdbi-devel net-snmp-devel\n```\n\n#### Ubuntu\n\nAdd Adiscon repository:\n```\napt-get update && apt-get install -y software-properties-common\nadd-apt-repository -y ppa:adiscon/v8-stable\n```\n\n*Note:* if you are a developer who wants to work with git master branch,\nadding the Adiscon repository is probably not a good idea. It then\nis better to also compile the supporting libraries from source, because\nnewer versions of rsyslog may need newer versions of the libraries than\nthere are in the repositories.\nLibraries in question are at least: libestr, liblognorm, libfastjson.\n\nNeeded packages to build with omhiredis support:\n```\napt-get update && apt-get install -y build-essential pkg-config libestr-dev libfastjson-dev zlib1g-dev uuid-dev libgcrypt20-dev liblogging-stdlog-dev libhiredis-dev uuid-dev libgcrypt11-dev liblogging-stdlog-dev flex bison\n```\n\nAditional packages for other modules:\n```\nlibdbi-dev libmysqlclient-dev postgresql-client libpq-dev libnet-dev librdkafka-dev libgrok-dev libgrok1 libgrok-dev libpcre3-dev libtokyocabinet-dev libglib2.0-dev libmongo-client-dev\n```\n\nFor KSI, from the Adiscon PPA:\n```\nsudo apt-get install libksi0 libksi-devel\n```\n\n#### Debian\n\n```\nsudo apt install build-essential pkg-config libestr-dev libfastjson-dev zlib1g-dev uuid-dev libgcrypt20-dev libcurl4-gnutls-dev zlib1g-dev liblogging-stdlog-dev liblogging-stdlog-dev flex bison\n```\n\n*Note:* For certain libraries version requirements might be higher,\nin that case adding debian backports repositories might help.\nFor example installing with apt libfastjson-dev -t stretch-backports.\n\n\nAditional packages for other modules:\n```\nlibdbi-dev libmysqlclient-dev postgresql-client libpq-dev libnet-dev librdkafka-dev libgrok-dev libgrok1 libgrok-dev libpcre3-dev libtokyocabinet-dev libglib2.0-dev libmongo-client-dev\n```\n\n\n\n#### openSUSE 13\n\n```\nsudo zypper install gcc make autoconf automake libtool libcurl-devel flex bison valgrind python-docutils libjson-devel uuid-devel libgcrypt-devel libgnutls-devel libmysqlclient-devel libdbi-devel libnet-devel postgresql-devel net-snmp-devellibuuid-devel libdbi-drivers-dbd-mysql\n```\n\nFor the testbench VMs:\n```\nsudo zypper install gvim mutt\n```\n\n#### SUSE LINUX Enterprise Server 11\n\nAvailable packages:\n```\nzypper install gcc make autoconf libtool flex bison\n```\n\nMissing packages:\n```\nlibcurl-devel valgrind python-docutils uuid-devel libgcrypt-devel libgnutls-devel libmysqlclient-devel libdbi-devel postgresql-devel net-snmp-devel libdbi-drivers-dbd-mysql json-c zlib-dev libdbi\n```\n\nReporting Bugs\n==============\n\nTalk to the mailing list if you think something is a bug. Often, it\'s just a\nmatter of doing some config trickery.\n\nFile bugs at: https://github.com/rsyslog/rsyslog/issues\n\nHow to Contribute\n=================\nContributions to rsyslog are very welcome. Fork and send us your Pull Requests.\n\nFor more information about contributing, see the\n[CONTRIBUTING](CONTRIBUTING.md) file.\n\nNote that it is easy to add output plugins using languages like Python or\nPerl. So if you need to connect to a system which is not yet supported, you\ncan easily do so via an external plugin. For more information see the\n[README](plugins/external/README.md) file in the external plugin directory.\n\nDocumentation\n=============\nThe main rsyslog documentation is available in HTML format. To read\nit, point your web browser to ./doc/manual.html. Alternatively,\nyou can view the documentation for *the most recent rsyslog version*\nonline at: https://www.rsyslog.com/doc/\n\nProject Philosophy\n==================\nWe are an open source project in all aspects and very open to outside feedback\nand contribution. We base our work on standards and try to solve all real-world\nneeds (of course, we occasionally fail tackling actually all needs ;)). While\nthe project is primarily sponsored by Adiscon, technical development is\nindependent from company goals and most decisions are solely based on mailing\nlist discussion results. There is an active community around rsyslog.\n\nThere is no such thing like being an official member of the rsyslog team. The\nclosest to that is being subscribed to the mailing list:\nhttp://lists.adiscon.net/mailman/listinfo/rsyslog\n\nThis method of open discussions is modelled after the IETF process, which is\nprobably the best-known and most successive collaborative standards body.\n\nProject Funding\n===============\nRsyslog\'s main sponsor Adiscon tries to fund rsyslog by selling custom\ndevelopment and support contracts. Adiscon does NOT license rsyslog under a\ncommercial license (this is simply impossible for anyone due to rsyslog\'s\nlicense structure).\n\nAny third party is obviously also free to offer custom development, support\nand rsyslog consulting. We gladly merge results of such third-party work into\nthe main repository (assuming it matches the few essential things written\ndown in our contribution policy).\n'