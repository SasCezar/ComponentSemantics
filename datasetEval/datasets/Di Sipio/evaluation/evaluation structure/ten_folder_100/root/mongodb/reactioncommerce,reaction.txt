b"# Reaction Commerce\n\n[![Circle CI](https://circleci.com/gh/reactioncommerce/reaction.svg?style=svg)](https://circleci.com/gh/reactioncommerce/reaction) [![Gitter](https://badges.gitter.im/JoinChat.svg)](https://gitter.im/reactioncommerce/reaction?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Open Source Helpers](https://www.codetriage.com/reactioncommerce/reaction/badges/users.svg)](https://www.codetriage.com/reactioncommerce/reaction)\n\n[Reaction](http://reactioncommerce.com) is an API-first, headless commerce platform built using Node.js, React, and GraphQL. It plays nicely with npm, Docker and Kubernetes.\n\nReaction v2.0.0 is built as a truly headless commerce platform that decouples the Reaction backend services from the frontend. We\xe2\x80\x99ve decoupled the storefront application from the API. Reaction platform consists of this `reaction` project - which is now primarily our GraphQL API (and for the time being Reaction Admin and our identity provider) - alongside our new-to-2.0 [Example Storefront](https://github.com/reactioncommerce/example-storefront), which connects with the Reaction application via GraphQL API to provide a customer-facing storefront.\n\n![Reaction Admin](https://user-images.githubusercontent.com/20409254/61161477-bb033c80-a4b8-11e9-9c5e-4f4f6a68b8d0.png)\n\n## Features\n\nReaction comes with a robust set of core commerce capabilities right out of the box. And since anything in our codebase can be extended, overwritten, or installed as a package, you may also customize anything on our platform.\n\nCheck out the full list of Reaction [features](https://www.reactioncommerce.com/features) and [release history](https://reactioncommerce.com/roadmap) for more info.\n\n\n# Getting started\n\nFollow the documentation to install Reaction with [Reaction Platform](https://docs.reactioncommerce.com/docs/installation-reaction-platform) for all supported operating systems.\n\n\n# Get involved\n\n## Tutorials, docs & developer tools\n\n- [Developer documentation](https://docs.reactioncommerce.com)\n- [Docs: Introduction to Reaction:  Concepts](https://docs.reactioncommerce.com/docs/concepts-intro)\n- [Swag Shop Tutorial](https://docs.reactioncommerce.com/docs/swag-shop-1)\n- [Storefront UI Development Tutorial](https://docs.reactioncommerce.com/docs/storefront-intro)\n- [Storefront Component Library](http://designsystem.reactioncommerce.com/)\n- [API documentation](http://api.docs.reactioncommerce.com)\n- [Engineering blog posts](https://blog.reactioncommerce.com/tag/engineering/)\n\n\n## Get help & contact the team\n\n- [Gitter chat](https://gitter.im/reactioncommerce/reaction)\n- Report security vulnerabilities to <mailto:security@reactioncommerce.com>: [Security reporting instructions](https://docs.reactioncommerce.com/reaction-docs/master/reporting-vulnerabilities)\n- Request features in this [repository](https://github.com/reactioncommerce/reaction-feature-requests/)\n\n## Contribute\n\n:star: If you like what you see, star us on GitHub.\n\nFind a bug, a typo, or something that\xe2\x80\x99s not documented well? We\xe2\x80\x99d love for you to [open an issue](https://github.com/reactioncommerce/reaction/issues) telling us what we can improve!\n\nWant to request a feature? Use our [Reaction Feature Requests repository](https://github.com/reactioncommerce/reaction-feature-requests) to file a request.\n\nWe love your pull requests! Check our our [`Good First Issue`](https://github.com/reactioncommerce/reaction/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) and [`Help Wanted`](https://github.com/reactioncommerce/reaction/issues?q=label%3A%22help+wanted%22) tags for good issues to tackle.\n\n### Pull Request guidelines\nPull requests should pass all automated tests, style, and security checks.\n\nYour code should pass all [acceptance tests and unit tests](https://docs.reactioncommerce.com/reaction-docs/master/testing-reaction). Run `docker-compose run --rm reaction npm run test` to run the test suites in containers. If you're adding functionality to Reaction, you should add tests for the added functionality.\n\n\nWe require that all code contributed to Reaction follows [Reaction's ESLint rules](https://github.com/reactioncommerce/reaction-eslint-config). You can run `docker-compose run --rm reaction npm run lint` to run ESLint against your code locally.\n\nPlease follow the [Reaction Code Style Guide](https://docs.reactioncommerce.com/docs/styleguide). Check out our guides to [JSDoc](https://docs.reactioncommerce.com/docs/jsdoc-style-guide), [Git](https://docs.reactioncommerce.com/docs/git-style-guide), [error handling](https://docs.reactioncommerce.com/docs/error-handling-guide), [logging](https://docs.reactioncommerce.com/docs/logging), and [React](https://docs.reactioncommerce.com/docs/react-best-practices).\n\nWe also request that you follow the our [pull request template](https://docs.reactioncommerce.com/docs/contributing-to-reaction#fill-out-the-pull-request-template)\n\nGet more details in our [Contributing Guide](https://docs.reactioncommerce.com/docs/contributing-to-reaction).\n\n### Developer Certificate of Origin\nWe use the [Developer Certificate of Origin (DCO)](https://developercertificate.org/) in lieu of a Contributor License Agreement for all contributions to Reaction Commerce open source projects. We request that contributors agree to the terms of the DCO and indicate that agreement by signing-off all commits made to Reaction Commerce projects by adding a line with your name and email address to every Git commit message contributed:\n```\nSigned-off-by: Jane Doe <jane.doe@example.com>\n```\n\nYou can sign-off your commit automatically with Git by using `git commit -s` if you have your `user.name` and `user.email` set as part of your Git configuration.\n\nWe ask that you use your real full name (please no anonymous contributions or pseudonyms) and a real email address. By signing-off your commit you are certifying that you have the right to submit it under the [GNU GPLv3 Licensed](./LICENSE.md). \n\nWe use the [Probot DCO GitHub app](https://github.com/apps/dco) to check for DCO sign-offs of every commit.\n\nIf you forget to sign-off your commits, the DCO bot will remind you and give you detailed instructions for how to amend your commits to add a signature.\n\n\n### License\nReaction is [GNU GPLv3 Licensed](./LICENSE.md)\n"