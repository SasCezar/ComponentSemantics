b'## Bibi\n\n**Bibi** is an e-commerce fullstack solution built with Flask. It includes e-commerce, social, and hot common modules. It stood the test of business operations, is a light but complete solution.\n\nThis project provides backend service, based on Flask, MongoDB, Redis, Celery, RabbitMQ, and supports Python 3.5.\n\nBibi offers fullstack solution for use with the following:\n\n> [bibi-frontend](https://github.com/seasonstar/bibi-frontend) Mobile web frontend\n\n> [bibi-ionic](https://github.com/seasonstar/bibi-ionic) Hybrid APP\n\n* \xe5\x8f\xaf\xe8\xa7\x82\xe7\x9c\x8b[\xe4\xb8\xad\xe6\x96\x87\xe6\x96\x87\xe6\xa1\xa3](https://github.com/seasonstar/bibi/blob/master/README_zh.md)\n\n----------------\n\n**Features**\xef\xbc\x9a\n\n- [x] User\n    - [x] Supports Email, Wechat, Weibo, QQ, and Facebook Oauth\xef\xbc\x8c[social-oauth](https://github.com/seasonstar/social-oauth) for details\n    - [x] User Information, Address, Contact, Favor collections and etc..\n- [x] Social\n    - [x] Post, like, comment, and bad information report.\n    - [x] Following and followers.\n    - [x] Notifications.\n- [x] Content\n    - [x] Products board\n    - [x] Banners\n- [x] Product\n    - [x] Brands, categories, tags, vendors, price history.\n    - [x] Commodities sub-selections based on different colors, sizes and materials.\n- [x] Cart\n    - [x] Session carts\n    - [x] Snapshot for items\n- [x] Order\n    - [x] Snapshot for order, store items history\n    - [x] Split into different packages depend on the total price and categories\n    - [x] Logistics information tracking, automatic updates\n    - [x] Third party logistics business parcel handling\n- [x] Payment\n    - [x] Supports Wechat\xef\xbc\x8cPaypal and etc..\n    - [x] Supports coupons, coins for discount.\n- [x] Management System\n\n- [x] AWS file upload\n- [x] Bing translate API\n- [x] Openexchange rate API\n- [x] Kuaidi100 logistics tracking API\n\n\n#### Screenshot\n\nContent Management\n![](http://7xn6eu.com1.z0.glb.clouddn.com/Backend.png)\nLogistics Management\n![](http://7xn6eu.com1.z0.glb.clouddn.com/Logistics-Backend.jpg)\nProduct Management\n![](http://7xn6eu.com1.z0.glb.clouddn.com/Item%20Backend.png)\n\n#### Get Started\n\nThis based on Ubuntu/Debian\xef\xbc\x8cplease skip if you had set up Python 3 environment.\n\n```bash\n# set up python3 environment\nsudo apt-get update\nsudo apt-get install python3-pip python3-dev\nsudo apt-get install build-essential libssl-dev libffi-dev python-dev\n\n# set up virtualenv\nsudo pip3 install virtualenv virtualenvwrapper\necho "export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3" >> ~/.bashrc\necho "export WORKON_HOME=~/Env" >> ~/.bashrc\necho "source /usr/local/bin/virtualenvwrapper.sh" >> ~/.bashrc\nsource ~/.bashrc\n\n# Now virtual env for python3 will be installed in ~/Env\n\nmkvirtualenv bibi # rename bibi\nworkon bibi # activate bibi env\n\n# set up mongodb # 2.6 version\n# set up redis\n# set up rabbitMQ\n\nmongod &              # start mongodb\nredis-server &        # start redis\nrabbitmq-server &     # start RabbitMQ\n```\n\nInstall dependencies\n```bash\npip3 install -r requirements.txt\n```\n\nInitial database\n```python\npython3 manage.py shell\n# into Python3 shell\n>>> from application.models import User\n>>> user = User.create(email="xxxx@xxx.com", password="xxx", name="xxxx")\n# Rename the email, password, name\n>>> user.roles.append("ADMIN")\n>>> user.save()\n```\n\nRun server\n```\n# start celery\ncelery -A application.cel worker -l info &\n\npython3 manage.py runserver\n```\nNow open http://127.0.0.1:5000/admin/ on local.\n\n\n\n#### Deploy\n```bash\n# set up supervisor\nsudo apt-get install supervisor\n# set up gunicorn\npip3 install gunicorn\n```\nCreate supervisor config\n\n`sudo vim /etc/supervisor/conf.d/bibi.conf`\n```\n[program:bibi]\ncommand=/root/Env/bibi/bin/gunicorn\n    -w 3\n    -b 0.0.0.0:8080\n    --log-level debug\n    "application.app:create_app()"\n\ndirectory=/opt/py-maybi/                                       ; Project dir\nautostart=false\nautorestart=false\nstdout_logfile=/opt/logs/gunicorn.log                          ; log dir\nredirect_stderr=true\n```\nPS: -w  the workers number\xef\xbc\x8cformula\xef\xbc\x9a\xef\xbc\x88CPUs*2 + 1)\n\nCreate nginx config\n\n`sudo vim /etc/nginx/sites-enabled/bibi.conf`\n\n```nginx\nserver {\n    listen 80;\n    server_name bigbang.maybi.cn;\n\n    location / {\n        proxy_pass http://127.0.0.1:8080; # Pointing to the gunicorn host\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n\n  }\n```\n\nStart supervisor, nginx\n```bash\nsudo supervisorctl reload\nsudo supervisorctl start bibi\n\nsudo service nginx restart\n```\n\nBravo! It\'s done.\n\nPlease open issues if you have problems.\n\n-----------------------------------\n#### License\n\nApache-2.0\n'