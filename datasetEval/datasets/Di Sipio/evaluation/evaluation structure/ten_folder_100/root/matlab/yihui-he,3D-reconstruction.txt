b"# 2 view structure from motion (From scratch)\n![h](result/Screenshot%20from%202016-05-20%2022-02-50.png)\n![h](result/selfff.png)\n### How to run  \n1. You can directly go to result folder to see all results  \n2. To make it easier to view all results , I selected two images for each imageset. You can reproduce all 3D models using main.m. All 8 pclouds will show up together after program finished. `.ply` files will be saved to result folder, which you can be opened with meshlab.  \n`main;`    \n3. You can specify two images(**intrinsic.new must be in the same folder**):  \n` SfM2('imgFolder/img1.JPG','imgFolder/img2.JPG');`  \nwill not show model after finished, only save .ply to result.  \n` SfM2('imgFolder/img1.JPG','imgFolder/img2.JPG',true);`  \nwill show model after finished, and save .ply to result.  \n\n###### This system has been tested under Matlab 2016a and Ubuntu 16.04. please make sure your matlab have vision toolkit  \n\n### Features  \n- dense matching.  \n- MSAC instead of RANSAC.  \n\n### main steps of my code\n1. get camera intrinsic matrix.  \n2. features detection and points matching.  \n3. estimate fundamental matrix using feature pairs in two images. Then compute essential matrix using K and F. Decompose E to R and t. Get P using E.  \n4. dense matching.  \n5. put pairs of points onto 3D(triangulate).  \n\n### How to use your own images\n- prepare 2 images taken from two different views  \n- get the [intrinsic matrix](https://en.wikipedia.org/wiki/Camera_resectioning) and write it to `intrinsic.new`  \n\n![a](https://wikimedia.org/api/rest_v1/media/math/render/svg/a73c022621ea3e7546d2a95c22a74fb22a3b3b7c)  \nYou can set parameters except \\alpha_x and \\alpha_y can be default value: zero,  \n![b](https://wikimedia.org/api/rest_v1/media/math/render/svg/3f0b99ce362b84c94a603bca45c11454cb95f6f1), ![c](https://wikimedia.org/api/rest_v1/media/math/render/svg/eb5fb4f7aef1abe7c21500f0486677fec1e2ceca), represent focal length in terms of pixels, where m_x, m_y are the scale factors relating pixels to distance and f is the focal length in terms of distance. They can be obtained by looking into your camera info or the jpeg meta info. You can google the way to get them.\n\n- Put them into the same folder, then modify `main.m` to point to the images  \n"