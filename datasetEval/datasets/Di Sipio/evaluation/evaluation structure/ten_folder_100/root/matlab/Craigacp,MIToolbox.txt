b'MIToolbox\n=========\nv3.0.1 for C/C++ and MATLAB/Octave\n\nMIToolbox contains a set of functions to calculate information theoretic\nquantities from data, such as the entropy and mutual information.  The toolbox\ncontains implementations of the most popular Shannon entropies, and also the\nlesser known Renyi entropy. The toolbox also provides implementations of \nthe weighted entropy and weighted mutual information from "Information Theory\nwith Application", S. Guiasu (1977). The toolbox only supports discrete distributions,\nas opposed to continuous. All real-valued numbers will be processed by x = floor(x).\n\nThese functions are targeted for use with feature selection algorithms rather \nthan communication channels and so expect all the data to be available before \nexecution and sample their own probability distributions from the data.\n\nAll functions expect the inputs to be vectors or matrices of doubles.\n\nFunctions contained:\n - Entropy\n - Conditional Entropy\n - Mutual Information\n - Conditional Mutual Information\n - generating a joint variable\n - generating a probability distribution from a discrete random variable\n - Renyi\'s Entropy\n - Renyi\'s Mutual Information\n - Weighted Entropy\n - Weighted Mutual Information\n - Weighted Conditional Mutual Information\n\nNote: all functions are calculated in log base 2, so return units of "bits".\n\nMIToolbox works on discrete inputs, and all continuous values **must** be\ndiscretised before use with MIToolbox. Real-valued inputs will be discretised\nwith x = floor(x) to ensure compatibility. MIToolbox produces unreliable\nresults when used with continuous inputs, runs slowly and uses much more memory\nthan usual. The discrete inputs should have small cardinality, MIToolbox will\ntreat values {1,10,100} the same way it treats {1,2,3} and the latter will be\nboth faster and use less memory. This limitation is due to the difficulties in\nestimating information theoretic functions of continuous variables.\n\n======\n\nExamples:\n\n```\n>> y = [1 1 1 0 0]\';\n>> x = [1 0 1 1 0]\';\n```\n```\n>> mi(x,y)       %% mutual information I(X;Y)\nans =\n    0.0200\n```\n```\n>> h(x)          %% entropy H(X)\nans =\n    0.9710\n```\n```\n>> condh(x,y)    %% conditional entropy H(X|Y)\nans =\n    0.9510\n```\n```\n>> h( [x,y] )    %% joint entropy H(X,Y)\nans =\n    1.9219\n```\n```\n>> joint([x,y])  %% joint random variable XY\nans =\n     1\n     2\n     1\n     3\n     4\n```\n======\n\nAll code is licensed under the 3-clause BSD license.\n\nCompilation instructions:\n - MATLAB/OCTAVE \n    - run `CompileMIToolbox.m` from the `matlab` directory.\n - Linux C shared library \n    - run `make x86` or `make x64` for 32-bit or 64-bit versions respectively.\n    - run `sudo make install` to install MIToolbox into `/usr/local/lib` and `/usr/local/include`\n - Windows C dll\n\t- install MinGW from https://sourceforge.net/projects/mingw-w64/\n\t- add MinGW binaries folders to PATH, e.g. `mingw/bin`, `mingw/msys/bin`\n\t- run `make x64_win` to compile a 64-bit Windows dll.\n\nUpdate History\n - 08/02/2017 - v3.0.1 - Bug fix to ensure ANSI C compatibility.\n - 07/01/2017 - v3.0.0 - Refactored internals to expose integer information theoretic calculations.\n - 10/01/2016 - v2.1.2 - Relicense from LGPL to BSD. Added checks to ensure input MATLAB types are doubles.\n - 02/02/2015 - v2.1.1 - Fixed up the Makefile so it installs the headers too.\n - 22/02/2014 - v2.1  - Fixed a couple of bugs related to memory handling.\n                     Added a make install for compatibility with PyFeast.\n - 30/07/2011 - v2.00 - Added implementations of the weighted entropy and weighted\n                     mutual information. More cleanup of Mex entry point\n                     to further check the inputs.\n - 08/11/2011 - v1.03 - Minor documentation changes to accompany the JMLR publication.\n - 15/10/2010 - v1.02 - Fixed bug where MIToolbox would cause a segmentation fault\n                     if a x by 0 empty matrix was passed in. Now prints an \n                     error message and returns gracefully.\n - 02/09/2010 - v1.01 - Fixed a bug in CMIM.m where the last feature would not be \n                     selected first if it had the highest MI.\n - 07/07/2010 - v1.00 - Initial Release.\n                    \n'