b"# MATIO\nMATLAB MAT file I/O library\n\n## Build status\n[![Build Status](https://travis-ci.org/tbeu/matio.svg?branch=master)](https://travis-ci.org/tbeu/matio) [![Coverity Scan Build Status](https://scan.coverity.com/projects/7575/badge.svg)](https://scan.coverity.com/projects/tbeu-matio) [![Coverage Status](https://coveralls.io/repos/github/tbeu/matio/badge.svg?branch=master)](https://coveralls.io/github/tbeu/matio?branch=master) [![Build Status](https://ci.appveyor.com/api/projects/status/heqkwuqllbh573i5/branch/master?svg=true)](https://ci.appveyor.com/project/tbeu/matio/branch/master) [![BCH Compliance](https://bettercodehub.com/edge/badge/tbeu/matio?branch=master)](https://bettercodehub.com/) [![Total Alerts](https://img.shields.io/lgtm/alerts/g/tbeu/matio.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/tbeu/matio/alerts/) [![Packaging status](https://repology.org/badge/tiny-repos/matio.svg)](https://repology.org/metapackage/matio/versions) [![Fuzzing Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/matio.svg)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=1&q=proj:matio)\n\n## Table of Contents\n1. [Introduction](#10-introduction)\n  * 1.1[Contact](#11-contact)\n  * 1.2 [Acknowledgements](#12-acknowledgements)\n  * 1.3 [Contributing](#13-contributing)\n  * 1.4 [Questions and Reporting Bugs](#14-questions-and-reporting-bugs)\n2. [Building](#20-building)\n  * 2.1 [Dependencies](#21-dependencies)\n    * 2.1.1 [zlib](#211-zlib)\n    * 2.1.2 [HDF5](#212-hdf5)\n  * 2.2 [Building matio](#22-building-matio)\n    * 2.2.1 [Quick Build Guide](#221-quick-build-guide)\n    * 2.2.2 [Configure Options](#222-configure-options)\n    * 2.2.3  [Visual Studio](#223-visual-studio)\n    * 2.2.4 [Testsuite](#224-testsuite)\n  * 2.3 [Platforms](#23-platforms)\n3. [License](#30-license)\n\n## 1.0 Introduction\nMatio is an open-source C library for reading and writing binary MATLAB MAT files.\nThis library is designed for use by programs/libraries that do not have access or do not want to rely on MATLAB's shared libraries.\n\n### 1.1 Contact\nYou can contact Thomas Beutlich through email at t-beu@users.sourceforge.net.\n\n### 1.2 Acknowledgements\nThe following people/organizations have helped in the development of matio through patches, bug reports, and/or testing:\n\n* Greg Sjaardema ([https://github.com/gsjaardema](https://github.com/gsjaardema))\n* Jacco van Beek ([https://sourceforge.net/u/jabe](https://sourceforge.net/u/jabe))\n* John Filo ([https://github.com/jfilo](https://github.com/jfilo))\n* Modelica Association ([https://modelica.org/association](https://modelica.org/association))\n* Nelson ([https://nelson-numerical-software.github.io/nelson-website/](https://nelson-numerical-software.github.io/nelson-website/))\n* Nils Jannasch ([https://github.com/NJannasch](https://github.com/NJannasch))\n* OpenMEEG ([http://openmeeg.github.io/](http://openmeeg.github.io/))\n* Scilab ([http://www.scilab.org/](http://www.scilab.org/))\n* S\xc3\xa9bastien Villemot ([https://github.com/svillemot](https://github.com/svillemot))\n* SGI in support of Interactive Supercomputing, Inc.\n* Steven Leibman <sleibman@alum.mit.edu>\n\n### 1.3 Contributing\nIf you are interested in collaborations, contact me via email (see Section [1.1](#11-contact)).\n\n### 1.4 Questions and Reporting Bugs\nQuestions can be asked using the forums on the sourceforge site hosting matio ([https://sourceforge.net/p/matio/discussion](https://sourceforge.net/p/matio/discussion)).\n\nBugs, enhancements, etc. should be submitted using one of the trackers on the sourceforge page ([https://sourceforge.net/p/matio/_list/tickets](https://sourceforge.net/p/matio/_list/tickets)).\n\n## 2.0 Building\nThis section describes how to build matio. Section [2.1](#21-dependencies) describes the dependencies, Section [2.2](#22-building-matio) how to build/test matio, and Section [2.3](#23-platforms) documents the platforms matio has been tested on.\n\n### 2.1 Dependencies\nMatio has two optional dependencies. These are not required for the software to work, but without them some files may be unreadable. Zlib is required to read/write level 5 MAT files that use compression. HDF5 is required to work with newer MAT files that use the HDF5-format files.\n\n#### 2.1.1 zlib\nTo support compressed MAT files, zlib version &ge; 1.2.3 is required. The zlib software can be downloaded from http://zlib.net/.\n\n#### 2.1.2 HDF5\nSupport for MAT file version 7.3 requires the HDF5 library. This library can be downloaded from https://www.hdfgroup.org/. Matio requires HDF5 version &ge; 1.8.x. Neither deprecated HDF5 1.6.x API functions nor HDF5 higher-level functions are called.\n\n* Building matio with HDF5 1.8.x requires configuration of HDF5 with default API version 1.8 (i.e. `--with-default-api-version=v18`).\n* Building matio with HDF5 1.10.x requires configuration of HDF5 with either default API version 1.10 (i.e. `--with-default-api-version=v110`) or with deprecated API version 1.8 (i.e. `--with-default-api-version=v18`).\n\nFor Windows, the pre-compiled binaries can be used which also include a DLL of zlib to satisfy the zlib dependency.\n\n### 2.2 Building matio\n#### 2.2.1 Quick Build Guide\nThe primary method for building the software is using `configure` followed by `make`. After building, the testsuite can be executed to test the software using `make check`. The software can be installed using `make install`. For example,\n```sh\ngit clone git://git.code.sf.net/p/matio/matio\ncd matio\ngit submodule update --init  # for datasets used in unit tests\n./autogen.sh\n./configure\nmake\nmake check\nmake install\n```\nIf any of the tests in the testsuite fail, you should report the failure using the tracker (see Section [1.4](#14-questions-and-reporting-bugs)). You should attach the generated testsuite.log file to the bug report.\n\n#### 2.2.2 Configure Options\nThe configure script used to build the software takes a number of options. This section describes the key options.\n\n* `--enable-mat73=yes`\nThis flag en/disables the support for version 7.3 MAT files. The option only makes sense if built with HDF5 as support for version 7.3 files. It will be disabled if HDF5 is not available.\n* `--enable-extended-sparse=yes`\nEnable extended sparse matrix data types not supported in MATLAB. MATLAB only supports double-precision sparse data. With this flag, matio will read sparse data with other types (i.e. single-precision and integer types).\n* `--with-matlab=DIR`\nThis option specifies the directory (DIR) with the 'matlab' program. With this option, the testsuite will check that the MAT files written by matio can be read into MATLAB. Without this, the test will only check that matio can read the file written and if successful the test will be skipped. If matio can not read the file, the test will fail.\n* `--with-zlib=DIR`\nThis option specifies the prefix where zlib is installed (see Section [2.1.1](#211-zlib) for information about zlib).\n* `--with-hdf5=DIR`\nThis option specifies the prefix where the HDF5 software is installed (see Section [2.1.2](#212-hdf5) for information about HDF5).\n* `--with-default-file-ver=version`\nThis option sets the default MAT file version (4,5,7.3) that will be used when writing. The default file version is used by the Mat_Create macro and the Mat_CreateVer function when MAT_FT_DEFAULT is used for the version argument.\n* `--with-libdir-suffix=suffix`\nThis option specifies a suffix to apply to library directories when installing and looking for dependent libraries (i.e. HDF5 and zlib). For example, some multi-arch Linux distributions install 64-bit libraries into lib64 and 32-bit libraries into lib.\n\n#### 2.2.3 Visual Studio\nVisual Studio solutions are provided as [matio_vs2008.sln](visual_studio/matio_vs2008.sln) for VS2008 and as [matio.sln](visual_studio/matio.sln) for VS2010 (and newer). The Debug and Release configurations of both solutions are set up to build a DLL of the matio library (libmatio.dll) and the matdump tool and assume HDF5 is available in the directory specified by the HDF5_DIR environment variable. It is assumed that the **shared** libraries of HDF5 (and zlib) are available. If the **static** libraries of HDF5 (and zlib) are installed/built the macro `H5_BUILT_AS_STATIC_LIB` needs to be defined (instead of `H5_BUILT_AS_DYNAMIC_LIB`). Furthermore, the Release Lib configuration of the VS2010 solution is set up to build a static LIB of the matio library (libmatio.lib) and assumes that the **static** libraries of HDF5 (and zlib) are installed/built.\n\n* The VS2008 solution was tested with Visual Studio 2008 and the [HDF5 1.8.12 Visual Studio pre-built Windows binaries](https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.12/bin/windows/) (vs9shared) including zlib.\n* The VS2010 solution was tested with Visual Studio 2010 and the [HDF5 1.8.13 Visual Studio pre-built Windows binaries](https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.13/bin/windows/) (VS2010-shared) including zlib.\n* The VS2010 solution was tested with Visual Studio 2010 and the [HDF5 1.8.13 Visual Studio pre-built Windows binaries](https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.13/bin/windows/) (VS2010-static) including zlib.\n* The updated VS2010 solution was tested with Visual Studio 2015 and the [HDF5 1.8.16 Visual Studio pre-built Windows binaries](https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.16/bin/windows/extra/) (vs2015-shared) including zlib.\n\n#### 2.2.4 Testsuite\nA testsuite is available when building with the GNU autotools. To run the testsuite, first configure and build matio. After building run `make check` to run the testsuite. If matio was built without zlib, the compressed variable tests will be skipped. If built without HDF5, the tests for version 7.3 MAT files will be skipped. If the path to the MATLAB application was not specified (`--with-matlab`), the write tests will fail if matio cannot read the file and skip if matio can read the file. The write tests will pass if MATLAB is available and can also read the file.\n\nTo report matio testsuite failures, compress the testsuite.log file in the test sub-directory of the build directory. Upload the compressed log file along with a bug report (see Section [1.4](#14-questions-and-reporting-bugs) for information on reporting bugs).\n\n### 2.3 Platforms\nThe library has been tested/used on Linux, Windows, OS X, and AIX including both little-endian and big-endian architecture.\n\n## 3.0 License\nThis software is provided under a Simplified BSD license. See the [COPYING](COPYING) file for details on the license.\n\n<sub>MATLAB is a registered trademark of The MathWorks, Inc.</sub>\n"