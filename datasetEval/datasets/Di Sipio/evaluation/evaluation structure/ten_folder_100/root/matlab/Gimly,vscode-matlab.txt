b'# MATLAB for Visual Studio Code\n\nThis extension adds language support for MATLAB to Visual Studio Code.\n\n[![Marketplace](https://vsmarketplacebadge.apphb.com/version-short/Gimly81.matlab.svg)](https://marketplace.visualstudio.com/items?itemName=Gimly81.matlab)\n[![Installs](https://vsmarketplacebadge.apphb.com/installs/Gimly81.matlab.svg)](https://marketplace.visualstudio.com/items?itemName=Gimly81.matlab)\n[![GitHub issues](https://img.shields.io/github/issues/Gimly/vscode-matlab.svg)](https://github.com/Gimly/vscode-matlab/issues)\n[![GitHub pull requests](https://img.shields.io/github/issues-pr/Gimly/vscode-matlab.svg)](https://github.com/Gimly/vscode-matlab/pulls)\n[![License](https://img.shields.io/github/license/Gimly/vscode-matlab.svg)](https://github.com/Gimly/vscode-matlab/blob/master/LICENSE)\n\n# Main features\n## Colorization \n![syntax](images/syntax.png)\n\n(imported from [Textmate\'s syntax](https://github.com/textmate/matlab.tmbundle))\n\n## Snippets\n![snippets](images/snippets.png)\n\n(Translated from TextMate\'s snippets)\n\n## Code Checking\nUses *mlint* for checking the MATLAB code for problems on save.\n![snippets](images/linter.png)\n\n## Usage\n### Install the extension in VS Code\n* Open the command palette using `Ctrl+Shift+P`\n* Type `ext install Matlab` in the command palette\n\n### Select MATLAB as a language\n* On the bottom-right corner, click on the *select language mode* button, if you have created a new file it should display *Plain Text*\n* Select *MATLAB* in the list of languages.\n\nAlternatively, saving the file with a `.m` extension, will allow VS Code to understand that it is a MATLAB file, and automatically select the language correctly.\n\n### Using snippets\n* Bring-up the *autocomplete* menu by hitting the `Ctrl+Shift` key combination\n* Select the snippet that you want to use in the list\n* Use `tab` to navigate through the snippet\'s variables\n\n### Setting-up linter\n* Open the *User Settings* by going to *File*>*Preferences*>*User Settings*\n* On the right pane, where you have the *settings.json* file open, add to the json file.\n\n\t`"matlab.mlintpath" : "path to your mlint.exe file"` \n\n\tFor example, on a PC : \n\t\n\t`"matlab.mlintpath": "C:\\\\Program Files (x86)\\\\MATLAB\\\\R2012a\\\\bin\\\\win32\\\\mlint.exe"`\n\t\n\tAnd on a Mac :\n\t\n\t`"matlab.mlintpath": "/Applications/MATLAB_R2016a.app/bin/maci64/mlint"`\n* Save your *settings.json* file\n* Now, when you open a Matlab document (*.m*), VS Code displays warnings and errors. \n  \n  **Remark:** If you don\'t want the *lint on save* option and you want to remove the error message being displayed when the extension activates, change the `matlab.lintOnSave` option in the settings file to `False`.\n\n#### Setting the linter configuration\nBy adding `"matlab.linterConfig" : "path-to-linter-config-file"` to your VSCode configuration file, you can pass a configuration file to the mlint call. Check [Matlab\'s documentation](https://uk.mathworks.com/help/matlab/ref/mlint.html) to create this configuration file.\n\n#### Setting the linter encoding\nFor some languages, like Chinese, the return of the linter is not using the default utf-8 encoding, but a different encoding (gb2312 for Chinese). If the linting doesn\'t show correctly, change the `matlab.linterEncoding` to the encoding used by your Windows console. For example, if your Windows is installed in Chinese, add `"matlab.linterEncoding" : "gb2312"` to your settings.json.\n\n### Changing the default file association\nVisual Studio Code\'s default file association for `.m` files is _Objective-C_, if you want to set up the default file association to be Matlab go to the Users preference (*File*>*Preferences*>*User Settings*) and add the following line:\n```\n"files.associations": {"*.m": "matlab"}\n```\n'