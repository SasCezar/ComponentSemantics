b'<p align="center">\n    <a href="https://camerakit.io" target="_blank">\n        <img alt=\'CameraKit Header\' src=\'.repo/gh-readme-header.svg\' />\n    </a>\n</p>\n\n<p align="center">\n    <a href="https://play.google.com/store/apps/details?id=com.wonderkiln.camerakit.demo" target="_blank">\n        <img alt=\'Google Play Link\' height="42px" src=\'.repo/gh-readme-googleplay-demo-button.svg\'/>\n    </a>\n        <a href="https://spectrum.chat/camerakit/">\n        <img alt="Join Spectrum" height="42px" src=".repo/gh-readme-spectrum-button.svg" >\n    </a>\n    <a href="https://buddy.works/" target="_blank">\n        <img alt=\'Buddy.Works\' height="41px" src=\'https://assets.buddy.works/automated-dark.svg\'/>\n    </a>\n</p>\n\nCameraKit helps you add reliable camera to your app quickly. Our open source camera platform provides consistent capture results, service that scales, and endless camera possibilities.\n\nWith CameraKit you are able to effortlessly do the following: \n\n- Image and video capture seamlessly working with the same preview session.\n- Automatic system permission handling.\n- Automatic preview scaling.\n  - Create a `CameraView` of any size (not just presets!).\n  - Automatic output cropping to match your `CameraView` bounds.\n- Multiple capture methods.\n  - `METHOD_STANDARD`: an image captured normally using the camera APIs.\n  - `METHOD_STILL`: a freeze frame of the `CameraView` preview (similar to SnapChat and Instagram) for devices with slower cameras.\n  - `METHOD_SPEED`: automatic capture method determination based on measured speed.\n- Built-in continuous focus.\n- Built-in tap to focus.\n- Built-in pinch to zoom.\n\n## Sponsored By\n<a href="https://www.expensify.com/"><img alt="Expensify" src=".repo/gh-readme-expensify-logo.svg" height="45px" width="375px" align="center"></a>\n<a href="https://www.buddy.works/"><img alt="Buddy.Works" src=".repo/gh-readme-buddyworks-logo.png" height="100px"  width="250px" align="center"></a>\n\n\n## Trusted By\n<a href="https://www.infitting.com/"><img alt="InFitting" src=".repo/gh-readme-infitting-logo.svg" height="30px" width="110px" align="center"></a>\n<a href="https://www.goosechase.com/"><img alt="GooseChase" src=".repo/gh-readme-goosechase-logo.svg" height="30px" width="175px" align="center"></a>\n<a href="https://www.alpha-apps.ae/"><img alt="Alpha Apps" src=".repo/gh-readme-alphaapps-logo.png" height="30px" width="78px" align="center"></a>\n<a href="https://www.expensify.com/"><img alt="Expensify" src=".repo/gh-readme-expensify-logo.svg" height="26px" width="220px" align="center"></a>\n\n&nbsp;\n\n# Get The Most From CameraKit\nThere are currently two versions of CameraKit that we support, `v1.0.0-beta3.X` and `v0.13.X`. \n\nIf photo is your only need, try out the latest and greatest CameraKit features with `v1.0.0-beta3.11`. Our `beta3.11` release does not yet support video, but that feature is coming! \n\nIn the meantime, if your application requires video we recommend sticking with `v0.13.4`; the latest stable release with video implementation.\n\n\n| Use Case | Version | Notes | Documentation Link |\n| --- | --- | --- | --- |\n| Photo only | `v1.0.0-beta3.11` | The latest and greatest CameraKit has to offer. Video support coming soon! | [camerakit.io/docs/beta3.11](https://camerakit.io/docs?v=1.0.0-beta3.10) |\n| Photo and Video | `v0.13.4` | Stable build with full photo and video support | [camerakit.io/docs/0.13.4](https://camerakit.io/docs?v=0.13.2) |\n\n\n## Documentation Site\nSetup instructions for `1.0.0-beta3.11` are below. To see the full documentation head over to our website, [camerakit.io/docs](https://camerakit.io/docs).\n\n\n## Setup\nTo include __CameraKit__ in your project, add the following to your `app` level `build.gradle`.\n```java\ndependencies {\n    implementation \'com.camerakit:camerakit:1.0.0-beta3.11\'\n    implementation \'com.camerakit:jpegkit:0.1.0\'\n    implementation \'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.0\'\n    implementation \'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.0\'\n}\n```\n## Usage\nCreate a `CameraKitView` in your layout as follows:\n```\n<com.camerakit.CameraKitView\n    android:id="@+id/camera"\n    android:layout_width="match_parent"\n    android:layout_height="wrap_content"\n    android:adjustViewBounds="true"\n    android:keepScreenOn="true"   <!-- keep screen awake while CameraKitView is active -->\n    app:camera_flash="auto"\n    app:camera_facing="back"\n    app:camera_focus="continuous"\n    app:camera_permissions="camera" />\n```\n\nThen create a new `CameraKitView` object in your `Activity` and override the following methods.\n```java\nprivate CameraKitView cameraKitView;\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n    cameraKitView = findViewById(R.id.camera);\n}\n\n@Override\nprotected void onStart() {\n    super.onStart();\n    cameraKitView.onStart();\n}\n\n@Override\nprotected void onResume() {\n    super.onResume();\n    cameraKitView.onResume();\n}\n\n@Override\nprotected void onPause() {\n    cameraKitView.onPause();\n    super.onPause();\n}\n\n@Override\nprotected void onStop() {\n    cameraKitView.onStop();\n    super.onStop();\n}\n\n@Override\npublic void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {\n    super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n    cameraKitView.onRequestPermissionsResult(requestCode, permissions, grantResults);\n}\n```\n## ProGuard\nIf using ProGuard, add the following rules:\n```\n-dontwarn com.google.android.gms.**\n-keepclasseswithmembers class com.camerakit.preview.CameraSurfaceView {\n    native <methods>;\n}\n```\n\n## License\nCameraKit is [MIT License](https://github.com/CameraKit/CameraKit-Android/blob/master/LICENSE)\n'