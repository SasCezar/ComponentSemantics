b'[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Phoenix-brightgreen.svg?style=flat)](http://android-arsenal.com/details/1/1386) [![Yalantis](https://github.com/Yalantis/Phoenix/blob/master/badge.png)](https://yalantis.com/?utm_source=github)\n\n# Phoenix Pull-to-Refresh\n\n#### This project aims to provide a simple and customizable pull to refresh implementation. Made in [Yalantis] (https://yalantis.com/?utm_source=github)\n\nCheck this [project on Dribbble] (https://dribbble.com/shots/1650317-Pull-to-Refresh-Rentals)  \nCheck this [project on Behance] (https://www.behance.net/gallery/20411445/Mobile-Animations-Interactions)  \n\n<img src="https://d13yacurqjgara.cloudfront.net/users/125056/screenshots/1650317/realestate-pull_1-2-3.gif" alt="alt text" style="width:200;height:200">\n\n#Usage\n\n*For a working implementation, Have a look at the Sample Project - sample*\n\n1. Include the library as local library project.\n\n    ``` compile \'com.yalantis:phoenix:1.2.3\' ```\n\n2. Include the PullToRefreshView widget in your layout.\n\n\t```xml\n    <com.yalantis.phoenix.PullToRefreshView\n        android:id="@+id/pull_to_refresh"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent">\n\n        <ListView\n            android:id="@+id/list_view"\n            android:divider="@null"\n            android:dividerHeight="0dp"\n            android:layout_width="match_parent"\n            android:layout_height="match_parent" />\n\n    </com.yalantis.phoenix.PullToRefreshView>\n    ```\n\n3. In your `onCreate` method refer to the View and setup OnRefreshListener.\n\t```java\n    mPullToRefreshView = (PullToRefreshView) findViewById(R.id.pull_to_refresh);\n    mPullToRefreshView.setOnRefreshListener(new PullToRefreshView.OnRefreshListener() {\n        @Override\n        public void onRefresh() {\n            mPullToRefreshView.postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    mPullToRefreshView.setRefreshing(false);\n                }\n            }, REFRESH_DELAY);\n        }\n     });\n     ```\n\n#Customization\n\nTo customize drawables you can change:\n   * sun.png - Sun image\n   * sky.png - background image\n   * buildings.png - foreground image\n\n# Misc\nIf you need to change progress state:\n```java\n\tmPullToRefreshView.setRefreshing(boolean isRefreshing)\n```\n#Compatibility\n  \n  * Android GINGERBREAD 2.3+\n  \n# Changelog\n\n### Version: 1.2\n\n  * Sample updated with RecyclerView example\n  * Showing the refresh view just in it\'s bounds. (Issue with transparent / empty ListView)\n  * Possibility to set refresh view padding\n\n### Version: 1.0\n\n  * Initial Build\n\n#### Let us know!\n\nWe\xe2\x80\x99d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com And do let us know if you have any questions or suggestion regarding the animation. \n\nP.S. We\xe2\x80\x99re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!\n\n## License\n\n    Copyright 2017, Yalantis\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n'