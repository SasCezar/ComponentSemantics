b'# react-native-image-crop-picker\n\n[![Backers on Open Collective](https://opencollective.com/react-native-image-crop-picker/backers/badge.svg)](#backers) [![Sponsors on Open Collective](https://opencollective.com/react-native-image-crop-picker/sponsors/badge.svg)](#sponsors)\n\n<img src="svg.svg" width="50%" height="50%" />\n\niOS/Android image picker with support for camera, video, configurable compression, multiple images and cropping\n\n## Result\n\n<p align="left">\n  <img width=200 title="iOS Single Pick" src="https://github.com/ivpusic/react-native-image-crop-picker/blob/master/images/ios_single_pick.png">\n<img width=200 title="iOS Crop" src="https://github.com/ivpusic/react-native-image-crop-picker/blob/master/images/ios_crop.png">\n<img width=200 title="iOS Multiple Pick" src="https://github.com/ivpusic/react-native-image-crop-picker/blob/master/images/ios_multiple_pick.png">\n</p>\n\n## Important note\n\nIf you are using react-native >= 0.60 use react-native-image-crop-picker version >= 0.25.0. Otherwise use version < 0.25.0.\n\n## Usage\n\nImport library\n\n```javascript\nimport ImagePicker from \'react-native-image-crop-picker\';\n```\n\n### Select from gallery\n\nCall single image picker with cropping\n```javascript\nImagePicker.openPicker({\n  width: 300,\n  height: 400,\n  cropping: true\n}).then(image => {\n  console.log(image);\n});\n```\n\nCall multiple image picker\n\n```javascript\nImagePicker.openPicker({\n  multiple: true\n}).then(images => {\n  console.log(images);\n});\n```\n\nSelect video only from gallery\n\n```javascript\nImagePicker.openPicker({\n  mediaType: "video",\n}).then((video) => {\n  console.log(video);\n});\n```\n\n**Android: The prop \'cropping\' has been known to cause videos not to be display in the gallery on Android. Please do not set cropping to true when selecting videos.**\n\n\n### Select from camera \n\n#### Image\n\n```javascript\nImagePicker.openCamera({\n  width: 300,\n  height: 400,\n  cropping: true,\n}).then(image => {\n  console.log(image);\n});\n```\n\n#### Video\n\n```javascript\nImagePicker.openCamera({\n  mediaType: \'video\',\n}).then(image => {\n  console.log(image);\n});\n```\n\n### Crop picture\n\n```javascript\nImagePicker.openCropper({\n  path: \'my-file-path.jpg\',\n  width: 300,\n  height: 400\n}).then(image => {\n  console.log(image);\n});\n```\n\n### Optional cleanup\n\nModule is creating tmp images which are going to be cleaned up automatically somewhere in the future. If you want to force cleanup, you can use `clean` to clean all tmp files, or `cleanSingle(path)` to clean single tmp file.\n\n```javascript\nImagePicker.clean().then(() => {\n  console.log(\'removed all tmp images from tmp directory\');\n}).catch(e => {\n  alert(e);\n});\n```\n\n### Request Object\n\n| Property                                |                   Type                   | Description                           |\n| --------------------------------------- | :--------------------------------------: | :--------------------------------------- |\n| cropping                                |           bool (default false)           | Enable or disable cropping               |\n| width                                   |                  number                  | Width of result image when used with `cropping` option |\n| height                                  |                  number                  | Height of result image when used with `cropping` option |\n| multiple                                |           bool (default false)           | Enable or disable multiple image selection |\n| writeTempFile (ios only)                |           bool (default true)            | When set to false, does not write temporary files for the selected images. This is useful to improve performance when you are retrieving file contents with the `includeBase64` option and don\'t need to read files from disk. |\n| includeBase64                           |           bool (default false)           | When set to true, the image file content will be available as a base64-encoded string in the `data` property. Hint: To use this string as an image source, use it like: ``<Image source={{uri: `data:${image.mime};base64,${image.data}`}} />`` |\n| includeExif                           |           bool (default false)           | Include image exif data in the response |\n| avoidEmptySpaceAroundImage            |           bool (default true)           |  When set to true, the image will always fill the mask space. |\n| cropperActiveWidgetColor (android only) |       string (default `"#424242"`)       | When cropping image, determines ActiveWidget color. |\n| cropperStatusBarColor (android only)    |        string (default `#424242`)        | When cropping image, determines the color of StatusBar. |\n| cropperToolbarColor (android only)      |        string (default `#424242`)        | When cropping image, determines the color of Toolbar. |\n| freeStyleCropEnabled (android only)      |        bool (default false)        | Enables user to apply custom rectangle area for cropping |\n| cropperToolbarTitle                     |        string (default `Edit Photo`)     | When cropping image, determines the title of Toolbar. |\n| cropperCircleOverlay                    |           bool (default false)           | Enable or disable circular cropping mask. |\n| disableCropperColorSetters (android only)|           bool (default false)           | When cropping image, disables the color setters for cropping library. |\n| minFiles (ios only)                     |            number (default 1)            | Min number of files to select when using `multiple` option |\n| maxFiles (ios only)                     |            number (default 5)            | Max number of files to select when using `multiple` option |\n| waitAnimationEnd (ios only)             |           bool (default true)            | Promise will resolve/reject once ViewController `completion` block is called |\n| smartAlbums (ios only)                  | array ([supported values](https://github.com/ivpusic/react-native-image-crop-picker/blob/master/README.md#smart-album-types-ios)) (default [\'UserLibrary\', \'PhotoStream\', \'Panoramas\', \'Videos\', \'Bursts\']) | List of smart albums to choose from      |\n| useFrontCamera                          |           bool (default false)           | Whether to default to the front/\'selfie\' camera when opened. Please note that not all Android devices handle this parameter, see [issue #1058](https://github.com/ivpusic/react-native-image-crop-picker/issues/1058)|\n| compressVideoPreset (ios only)          |      string (default MediumQuality)      | Choose which preset will be used for video compression |\n| compressImageMaxWidth                   |          number (default none)           | Compress image with maximum width        |\n| compressImageMaxHeight                  |          number (default none)           | Compress image with maximum height       |\n| compressImageQuality                    |            number (default 1 (Android)/0.8 (iOS))            | Compress image with quality (from 0 to 1, where 1 is best quality). On iOS, values larger than 0.8 don\'t produce a noticeable quality increase in most images, while a value of 0.8 will reduce the file size by about half or less compared to a value of 1. |\n| loadingLabelText (ios only)             | string (default "Processing assets...")  | Text displayed while photo is loading in picker |\n| mediaType                               |           string (default any)           | Accepted mediaType for image selection, can be one of: \'photo\', \'video\', or \'any\' |\n| showsSelectedCount (ios only)           |           bool (default true)            | Whether to show the number of selected assets |\n| forceJpg (ios only)           |           bool (default false)            | Whether to convert photos to JPG. This will also convert any Live Photo into its JPG representation |\n| showCropGuidelines (android only)       |           bool (default true)            | Whether to show the 3x3 grid on top of the image during cropping |\n| showCropFrame (android only)       |           bool (default true)            | Whether to show crop frame during cropping |\n| hideBottomControls (android only)       |           bool (default false)           | Whether to display bottom controls       |\n| enableRotationGesture (android only)    |           bool (default false)           | Whether to enable rotating the image by hand gesture |\n| cropperChooseText (ios only)\xc2\xa0           | \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 string (default choose) \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0| Choose button text |\n| cropperCancelText (ios only)            |           string (default Cancel)        | Cancel button text |\n\n#### Smart Album Types (ios)\n\n```\n[\'PhotoStream\', \'Generic\', \'Panoramas\', \'Videos\', \'Favorites\', \'Timelapses\', \'AllHidden\', \'RecentlyAdded\', \'Bursts\', \'SlomoVideos\', \'UserLibrary\', \'SelfPortraits\', \'Screenshots\', \'DepthEffect\', \'LivePhotos\', \'Animated\', \'LongExposure\']\n```\n\n### Response Object\n\n| Property                  |  Type  | Description                              |\n| ------------------------- | :----: | :--------------------------------------- |\n| path                      | string | Selected image location. This is null when the `writeTempFile` option is set to false. |\n| localIdentifier(ios only) | string | Selected images\' localidentifier, used for PHAsset searching |\n| sourceURL(ios only)       | string | Selected images\' source path, do not have write access |\n| filename(ios only)        | string | Selected images\' filename                |\n| width                     | number | Selected image width                     |\n| height                    | number | Selected image height                    |\n| mime                      | string | Selected image MIME type (image/jpeg, image/png) |\n| size                      | number | Selected image size in bytes             |\n| data                      | base64 | Optional base64 selected file representation |\n| exif                      | object | Extracted exif data from image. Response format is platform specific |\n| cropRect                  | object | Cropped image rectangle (width, height, x, y)    |\n| creationDate (ios only)   | string | UNIX timestamp when image was created    |\n| modificationDate          | string | UNIX timestamp when image was last modified |\n\n# Install\n\n## Step 1\n\n```bash\nnpm i react-native-image-crop-picker --save\n```\n\n## Step 2\n\n### iOS\n\n#### react-native >= 0.60 with cocoapods\n\n- Run the following:\n\n```bash\ncd ios\npod install\n```\n\nAfter this use `ios/<project_name>.xcworkspace`. **Do not use** `ios/<project_name>.xcodeproj`.\n\n##### Using local QBImagePicker\n\nIt is recommended to use locally provided QBImagePicker pod, because it contains few improvements over original version.\n\n```\npod \'QBImagePickerController\', :path => \'../node_modules/react-native-image-crop-picker/ios/QBImagePicker/QBImagePickerController.podspec\'\n```\n\n#### - If you are not using Cocoapods which is not recommended:\n\n```bash\nreact-native link react-native-image-crop-picker\n```\n\n### Android\n\nNOTE: If you are using react-native >= 0.60 autolinking, you can skip this step.\n\n```bash\nreact-native link react-native-image-crop-picker\n```\n\n## Post-install steps\n\n### iOS\n\n#### Step 1\n\nIn Xcode open Info.plist and add string key `NSPhotoLibraryUsageDescription` with value that describes why you need access to user photos. More info here https://forums.developer.apple.com/thread/62229. Depending on what features you use, you also may need `NSCameraUsageDescription` and `NSMicrophoneUsageDescription` keys.\n\n#### Step 2\n\n##### Only if you are not using Cocoapods\n\n- Click on project General tab\n  - Under `Deployment Info` set `Deployment Target` to `8.0`\n  - Under `Embedded Binaries` click `+` and add `RSKImageCropper.framework` and `QBImagePicker.framework`\n  \n#### Step Optional - To localizate the camera / gallery text buttons\n\n- Open your Xcode project\n- Go to your project settings by opening the project name on the Navigation (left side)\n- Select your project in the project list \n- Should be into the Info tab and add in Localizations the language your app was missing throughout the +\n- Rebuild and you should now have your app camera and gallery with the classic ios text in the language you added.\n\n### Android\n\n- Make sure you are using Gradle >= `2.2.x` (android/build.gradle)\n\n```gradle\nbuildscript {\n    ...\n    dependencies {\n        classpath \'com.android.tools.build:gradle:2.2.3\'\n        ...\n    }\n    ...\n}\n```\n\n- **VERY IMPORTANT** Add the following to your `build.gradle`\'s repositories section. (android/build.gradle)\n\n```gradle\nallprojects {\n    repositories {\n      mavenLocal()\n      jcenter()\n      maven { url "$rootDir/../node_modules/react-native/android" }\n\n      // ADD THIS\n      maven { url \'https://maven.google.com\' }\n\n      // ADD THIS\n      maven { url "https://www.jitpack.io" }\n    }\n}\n```\n\n- Add `useSupportLibrary` (android/app/build.gradle)\n\n```gradle\nandroid {\n    ...\n\n    defaultConfig {\n        ...\n        vectorDrawables.useSupportLibrary = true\n        ...\n    }\n    ...\n}\n```\n\n- Use Android SDK >= 26 (android/app/build.gradle)\n\n```gradle\nandroid {\n    compileSdkVersion 27\n    buildToolsVersion "27.0.3"\n    ...\n    \n    defaultConfig {\n      ...\n      targetSdkVersion 27\n      ...\n    }\n    ...\n}\n```\n\n- [Optional] If you want to use camera picker in your project, add following to `app/src/main/AndroidManifest.xml`\n  - `<uses-permission android:name="android.permission.CAMERA"/>`\n\n- [Optional] If you want to use front camera, also add following to `app/src/main/\nAndroidManifest.xml`\n  - `<uses-feature android:name="android.hardware.camera" android:required="false" />`\n  - `<uses-feature android:name="android.hardware.camera.front" android:required="false" />`\n\n## Production build\n\n### iOS\n\n#### Cocoapods (Highly recommended)\n\n- You are already done\n\n#### Manual\n\nIf you are using pre-built frameworks from `ios/ImageCropPickerSDK`, then before deploying app to production you should strip off simulator ARCHs from these, or you can add frameworks from `Libraries/imageCropPicker/Libraries/_framework_name_.xcodeproj/Products/_framework_name_.framework` to Embedded Binaries instead of pre-built ones.\nRelated issue: https://github.com/ivpusic/react-native-image-crop-picker/issues/61.\n\nDetails for second approach:\n\n1. Remove the pre-built frameworks from `Embedded Binaries`\n2. Build for Device\n3. Add the newly built binaries for both frameworks to `Embedded Binaries` (located at `Libraries/imageCropPicker/Libraries/_framework_name_.xcodeproj/Products/_framework_name_.framework`)\n\n## TO DO\n\n- [ ] [Android] Standardize multiple select\n- [ ] [Android] Video compression\n\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute]](CONTRIBUTING.md).\n<a href="graphs/contributors"><img src="https://opencollective.com/react-native-image-crop-picker/contributors.svg?width=890" /></a>\n\n\n## Backers\n\nThank you to all our backers! \xf0\x9f\x99\x8f [[Become a backer](https://opencollective.com/react-native-image-crop-picker#backer)]\n\n<a href="https://opencollective.com/react-native-image-crop-picker#backers" target="_blank"><img src="https://opencollective.com/react-native-image-crop-picker/backers.svg?width=890"></a>\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/react-native-image-crop-picker#sponsor)]\n\n<a href="https://opencollective.com/react-native-image-crop-picker/sponsor/0/website" target="_blank"><img src="https://opencollective.com/react-native-image-crop-picker/sponsor/0/avatar.svg"></a>\n<a href="https://opencollective.com/react-native-image-crop-picker/sponsor/1/website" target="_blank"><img src="https://opencollective.com/react-native-image-crop-picker/sponsor/1/avatar.svg"></a>\n<a href="https://opencollective.com/react-native-image-crop-picker/sponsor/2/website" target="_blank"><img src="https://opencollective.com/react-native-image-crop-picker/sponsor/2/avatar.svg"></a>\n<a href="https://opencollective.com/react-native-image-crop-picker/sponsor/3/website" target="_blank"><img src="https://opencollective.com/react-native-image-crop-picker/sponsor/3/avatar.svg"></a>\n<a href="https://opencollective.com/react-native-image-crop-picker/sponsor/4/website" target="_blank"><img src="https://opencollective.com/react-native-image-crop-picker/sponsor/4/avatar.svg"></a>\n<a href="https://opencollective.com/react-native-image-crop-picker/sponsor/5/website" target="_blank"><img src="https://opencollective.com/react-native-image-crop-picker/sponsor/5/avatar.svg"></a>\n<a href="https://opencollective.com/react-native-image-crop-picker/sponsor/6/website" target="_blank"><img src="https://opencollective.com/react-native-image-crop-picker/sponsor/6/avatar.svg"></a>\n<a href="https://opencollective.com/react-native-image-crop-picker/sponsor/7/website" target="_blank"><img src="https://opencollective.com/react-native-image-crop-picker/sponsor/7/avatar.svg"></a>\n<a href="https://opencollective.com/react-native-image-crop-picker/sponsor/8/website" target="_blank"><img src="https://opencollective.com/react-native-image-crop-picker/sponsor/8/avatar.svg"></a>\n<a href="https://opencollective.com/react-native-image-crop-picker/sponsor/9/website" target="_blank"><img src="https://opencollective.com/react-native-image-crop-picker/sponsor/9/avatar.svg"></a>\n\n\n\n## License\n*MIT*\n'