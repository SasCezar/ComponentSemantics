b'*******\napispec\n*******\n\n.. image:: https://badgen.net/pypi/v/apispec\n    :target: https://pypi.org/project/apispec/\n    :alt: PyPI version\n\n.. image:: https://dev.azure.com/sloria/sloria/_apis/build/status/marshmallow-code.apispec?branchName=dev\n    :target: https://dev.azure.com/sloria/sloria/_build/latest?definitionId=8&branchName=dev\n    :alt: Build status\n\n.. image:: https://readthedocs.org/projects/apispec/badge/\n   :target: https://apispec.readthedocs.io/\n   :alt: Documentation\n\n.. image:: https://badgen.net/badge/marshmallow/2,3?list=1\n    :target: https://marshmallow.readthedocs.io/en/latest/upgrading.html\n    :alt: marshmallow 2/3 compatible\n\n.. image:: https://badgen.net/badge/OAS/2,3?list=1&color=cyan\n    :target: https://github.com/OAI/OpenAPI-Specification\n    :alt: OpenAPI Specification 2/3 compatible\n\n.. image:: https://badgen.net/badge/code%20style/black/000\n    :target: https://github.com/ambv/black\n    :alt: code style: black\n\nA pluggable API specification generator. Currently supports the `OpenAPI Specification <https://github.com/OAI/OpenAPI-Specification>`_ (f.k.a. the Swagger specification).\n\nFeatures\n========\n\n- Supports the OpenAPI Specification (versions 2 and 3)\n- Framework-agnostic\n- Built-in support for `marshmallow <https://marshmallow.readthedocs.io/>`_\n- Utilities for parsing docstrings\n\nExample Application\n===================\n\n.. code-block:: python\n\n    from apispec import APISpec\n    from apispec.ext.marshmallow import MarshmallowPlugin\n    from apispec_webframeworks.flask import FlaskPlugin\n    from flask import Flask\n    from marshmallow import Schema, fields\n\n\n    # Create an APISpec\n    spec = APISpec(\n        title="Swagger Petstore",\n        version="1.0.0",\n        openapi_version="3.0.2",\n        plugins=[FlaskPlugin(), MarshmallowPlugin()],\n    )\n\n    # Optional marshmallow support\n    class CategorySchema(Schema):\n        id = fields.Int()\n        name = fields.Str(required=True)\n\n\n    class PetSchema(Schema):\n        category = fields.List(fields.Nested(CategorySchema))\n        name = fields.Str()\n\n\n    # Optional Flask support\n    app = Flask(__name__)\n\n\n    @app.route("/random")\n    def random_pet():\n        """A cute furry animal endpoint.\n        ---\n        get:\n          description: Get a random pet\n          responses:\n            200:\n              content:\n                application/json:\n                  schema: PetSchema\n        """\n        pet = get_random_pet()\n        return PetSchema().dump(pet)\n\n\n    # Register the path and the entities within it\n    with app.test_request_context():\n        spec.path(view=random_pet)\n\n\nGenerated OpenAPI Spec\n----------------------\n\n.. code-block:: python\n\n    import json\n\n    print(json.dumps(spec.to_dict(), indent=2))\n    # {\n    #   "paths": {\n    #     "/random": {\n    #       "get": {\n    #         "description": "Get a random pet",\n    #         "responses": {\n    #           "200": {\n    #             "content": {\n    #               "application/json": {\n    #                 "schema": {\n    #                   "$ref": "#/components/schemas/Pet"\n    #                 }\n    #               }\n    #             }\n    #           }\n    #         }\n    #       }\n    #     }\n    #   },\n    #   "tags": [],\n    #   "info": {\n    #     "title": "Swagger Petstore",\n    #     "version": "1.0.0"\n    #   },\n    #   "openapi": "3.0.2",\n    #   "components": {\n    #     "parameters": {},\n    #     "responses": {},\n    #     "schemas": {\n    #       "Category": {\n    #         "type": "object",\n    #         "properties": {\n    #           "name": {\n    #             "type": "string"\n    #           },\n    #           "id": {\n    #             "type": "integer",\n    #             "format": "int32"\n    #           }\n    #         },\n    #         "required": [\n    #           "name"\n    #         ]\n    #       },\n    #       "Pet": {\n    #         "type": "object",\n    #         "properties": {\n    #           "name": {\n    #             "type": "string"\n    #           },\n    #           "category": {\n    #             "type": "array",\n    #             "items": {\n    #               "$ref": "#/components/schemas/Category"\n    #             }\n    #           }\n    #         }\n    #       }\n    #     }\n    #   }\n    # }\n\n    print(spec.to_yaml())\n    # components:\n    #   parameters: {}\n    #   responses: {}\n    #   schemas:\n    #     Category:\n    #       properties:\n    #         id: {format: int32, type: integer}\n    #         name: {type: string}\n    #       required: [name]\n    #       type: object\n    #     Pet:\n    #       properties:\n    #         category:\n    #           items: {$ref: \'#/components/schemas/Category\'}\n    #           type: array\n    #         name: {type: string}\n    #       type: object\n    # info: {title: Swagger Petstore, version: 1.0.0}\n    # openapi: 3.0.2\n    # paths:\n    #   /random:\n    #     get:\n    #       description: Get a random pet\n    #       responses:\n    #         200:\n    #           content:\n    #             application/json:\n    #               schema: {$ref: \'#/components/schemas/Pet\'}\n    # tags: []\n\n\nDocumentation\n=============\n\nDocumentation is available at https://apispec.readthedocs.io/ .\n\nEcosystem\n=========\n\nA list of apispec-related libraries can be found at the GitHub wiki here:\n\nhttps://github.com/marshmallow-code/apispec/wiki/Ecosystem\n\nSupport apispec\n===============\n\napispec is maintained by a group of\n`volunteers <https://apispec.readthedocs.io/en/latest/authors.html>`_.\nIf you\'d like to support the future of the project, please consider\ncontributing to our Open Collective:\n\n.. image:: https://opencollective.com/marshmallow/donate/button.png\n    :target: https://opencollective.com/marshmallow\n    :width: 200\n    :alt: Donate to our collective\n\nProfessional Support\n====================\n\nProfessionally-supported apispec is available through the\n`Tidelift Subscription <https://tidelift.com/subscription/pkg/pypi-apispec?utm_source=pypi-apispec&utm_medium=referral&utm_campaign=readme>`_.\n\nTidelift gives software development teams a single source for purchasing and maintaining their software,\nwith professional-grade assurances from the experts who know it best,\nwhile seamlessly integrating with existing tools. [`Get professional support`_]\n\n.. _`Get professional support`: https://tidelift.com/subscription/pkg/pypi-apispec?utm_source=pypi-apispec&utm_medium=referral&utm_campaign=readme\n\n.. image:: https://user-images.githubusercontent.com/2379650/45126032-50b69880-b13f-11e8-9c2c-abd16c433495.png\n    :target: https://tidelift.com/subscription/pkg/pypi-apispec?utm_source=pypi-apispec&utm_medium=referral&utm_campaign=readme\n    :alt: Get supported apispec with Tidelift\n\nSecurity Contact Information\n============================\n\nTo report a security vulnerability, please use the\n`Tidelift security contact <https://tidelift.com/security>`_.\nTidelift will coordinate the fix and disclosure.\n\nProject Links\n=============\n\n- Docs: https://apispec.readthedocs.io/\n- Changelog: https://apispec.readthedocs.io/en/latest/changelog.html\n- Contributing Guidelines: https://apispec.readthedocs.io/en/latest/contributing.html\n- PyPI: https://pypi.python.org/pypi/apispec\n- Issues: https://github.com/marshmallow-code/apispec/issues\n\n\nLicense\n=======\n\nMIT licensed. See the bundled `LICENSE <https://github.com/marshmallow-code/apispec/blob/dev/LICENSE>`_ file for more details.\n'