b'flask\\_reddit\n=============\n\n**flask_reddit** is an extendable + minimalist [Reddit](http://reddit.com) clone.\n\nThis was built so beginners who want a standard CRUD + reddit-like application\ncan quickly get to work.\n\nWe utilize: \n- `flask` as the web framework.\n- `nginx` as the HTTP server  \n- `gunicon` as the wsgi server.\n- `MySQL` for our database \n- `flask-sqlalchemy` as our ORM.\n- `bootstrap-journal` theme makes us beautiful.\n- `virtualenv` emcompasses everything. \n- `supervisord` makes sure our service never crashes.\n\nAnd thats pretty much it!\n\nAll of the configutations are in this repository. Deployment instructions \nwill be out soon.\n\nFeatures\n--------\n- threaded comments\n- up voting\n- subreddits\n- user karma\n- search\n- rate limiting\n- ajax form posting\n- user profiles\n\nBuild Instructions\n------------------\n\n- Set up an instance of MySQL on your server. Note your username and password.\n\n```\nsudo apt-get update\nsudo apt-get upgrade\nsudo apt-get install mysql-server libmysqlclient-dev\n```\n\n- Set up an instance of nginx on your server. *I\'ve provided the .conf scripts needed for our\nservers in the `/server` directory.*\n\n`sudo apt-get install nginx`\n\n- Configure your nginx settings located in `flask_reddit/server/nginx.conf`.\n\n- Add your settings into your global conf file located in `/etc/nginx/nginx.conf`\n\n- Restart nginx to recognize your settings `sudo service nginx restart`\n\n- Set up supervisord to monitor your project to make sure it never crashes.\nSupervisor is also convenient for simply restarting/starting your project with ease.\n\n`sudo apt-get install supervisor`\n\n- When Supervisor is installed you can give it programs to start and watch by creating config \nfiles in the `/etc/supervisor/conf.d` directory. I\'ve provided the conf file which we use\nin the root directory of this repo as `supervisor.conf`. An example supervisor command \nwould be running `supervisorctl restart YOUR_APP_NAME` to restart gunicorn and bring up new changes.\n\n- Install [virtualenv](http://www.virtualenv.org/en/latest/virtualenv.html) and set up a project \nroot where ever you want.\n\n```bash\nsudo apt-get install python-virtualenv;\ncd /path/to/project;\nvirtualenv reddit-env;\ncd reddit-env;\nsource bin/activate; # viola, you are now in an enclosed python workspace.\n```\n\n- Download the repository and  install all of the required python modules \nwhich this server uses.\n\n```bash\ngit clone https://github.com/codelucas/flask_reddit.git;\ncd flask_reddit;\npip install -r requirements.txt\n```\n\n- Due to sensitive configuration information, I have hidden my personal\n`config.py` file in the gitignore. But, I have provided a clean and easy\nto use config template in this repo named `app_config.py`. \n\n- **Fill out the `flask_reddit/app_config.py` file with your own information and then rename it to\n`config.py` so flask recognizes it by using `mv app_config.py config.py`.**\nPlease be sure to fill out the mysql db settings similarly to how you set it up!, \nusername, pass, etc\n\n- Run the `kickstart.py` script to build the first user and subreddits.\n\n`python2.7 kickstart.py`\n\n- flask_reddit has tasks which must **occur on regular time intervals**. To make this\nhappen, we use the `crontab`, which is present on UNIX systems.\n\nA crontab is a dash which allows you to specify what programs to run and how often.\nI\'ve provided flask_reddit\'s example crontab in the root directory as `jobs.cron`.\n\nTo view your current crontab, run `crontab -l`. To edit your crontab, run `crontab -e`.\n\n- Paste the contents of `jobs.cron` into your crontab by running `crontab -e` and \npasting! More directions are present in the `jobs.cron` file.\n\n- Run the gunicorn server. You won\'t have to do this ever again if `supervisor` is set up\nproperly.\n\n`sudo sh run_gunicorn.sh`\n\n**Note that we have now deployed two servers: `nginx` and `gunicorn`. `nginx` is our\n*internet facing* HTTP server on port 80 while `gunicorn` is our *wsgi server* which \nis serving up our flask python application locally. `nginx` reads client\nrequests and *decides* which requests to foreward to our `gunicorn` server. For example,\n`nginx` serves static content like images very well but it forwards url routes \nto the homepage to gunicorn.**\n\nFor a full list of details, view our configs at `server/nginx.conf` and \n`server/gunicorn_config.py`.\n\n*Note, for this build to work there are paths that you must change in the `wsgi.py` file, \nthe server configs located in `server` directory and the `run_gunicorn.sh` file.*\n\n*Refer to the flask project configuration options to understand what to put in your own\nconfig.py file.*\n\nDo not hesiate to <a href="http://codelucas.com">contact</a> me <Lucas Ou> for help or concerns.\n\n'