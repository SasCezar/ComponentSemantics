b'# CeSI (Centralized Supervisor Interface)\n\nCeSI is a web interface for managing multiple [supervisors][1] from the same\nplace.\n\nSupervisor has its own web UI but managing multiple supervisor installations is\nhard with seperate UIs (If you are using the UI of course :). CeSI aims to solve\nthis problem by creating a centralized web UI, based on the RPC interface of\nSupervisor.\n\n## Installation Methods\n\n- [Chef Cookbook][2]\n- [Package managers][3]\n- [Docker][4] (unavailable)\n- [Manuel Instructions](#manuel-instructions)\n\n## Manuel Instructions\n\n**Install Dependencies For Cesi Api**\n\n```bash\n$ # On Ubuntu [18.04, 16.04, 14.04]\n$ sudo apt install -y git python3 python3-pip python3-venv\n$ # On Centos 7\n$ sudo yum install -y git epel-release\n$ sudo yum install -y python34 python34-pip python34-venv\n$ # On Fedora 28\n$ sudo dnf install -y git python3 python3-pip python3-venv\n```\n\n**Install Cesi**\n\n```bash\n$ export CESI_SETUP_PATH=~/cesi\n$ mkdir ${CESI_SETUP_PATH}\n$ cd ${CESI_SETUP_PATH}\n\n$ # Download the project to ~/cesi directory\n$ wget https://github.com/gamegos/cesi/releases/download/v2.6.8/cesi-extended.tar.gz -O cesi.tar.gz\n$ tar -xvf cesi.tar.gz\n\n$ # Create virtual environment and install requirement packages\n$ python3 -m venv venv\n$ source venv/bin/activate\n(venv) $ pip3 install -r requirements.txt\n\n$ # Run with command line\n(venv) $ python3 ${CESI_SETUP_PATH}/cesi/run.py --config-file ${CESI_SETUP_PATH}/defaults/cesi.conf.toml\n```\n\n**Install Cesi as a service**\n\n```bash\n$ # If you want to change CESI_SETUP_PATH, you must change the configurations in the cesi.service file.\n$ export CESI_SETUP_PATH=/opt/cesi\n$ mkdir ${CESI_SETUP_PATH}\n$ cd ${CESI_SETUP_PATH}\n\n$ # Download the project to CESI_SETUP_PATH directory\n$ wget https://github.com/gamegos/cesi/releases/download/v2.6.8/cesi-extended.tar.gz -O cesi.tar.gz\n$ tar -xvf cesi.tar.gz\n\n$ # Create virtual environment and install requirement packages\n$ python3 -m venv venv\n$ source venv/bin/activate\n(venv) $ pip3 install -r requirements.txt\n(venv) $ deactivate   # Deactivate virtual environment\n\n$ # Build ui (First you must install dependencies for ui -> yarn) - Optional\n$ cd ${CESI_SETUP_PATH}/cesi/ui\n$ yarn install\n$ yarn build\n\n$ # Create cesi.conf.toml file and update cesi.conf.toml for your environment.\n$ # Config file documentation can be found inside default file.\n$ # (You must create cesi.conf in the etc directory for cesi.service)\n$ sudo cp ${CESI_SETUP_PATH}/defaults/cesi.conf.toml /etc/cesi.conf.toml\n\n$ # Run as a service\n$ sudo cp ${CESI_SETUP_PATH}/defaults/cesi.service /etc/systemd/system/cesi.service\n$ sudo systemctl daemon-reload\n$ sudo systemctl start cesi\n```\n\n**Running Cesi with uWSGI**\n\nYou may want to run Cesi using uWSGI (or any other WSGI deamon). Configure your system in the similiar way to running as a service and use `uwsgi` to start app. Check `defaults/cesi-uwsgi.ini` for details.\n\nWhile running with uWSGI Cesi config host and port are ignored.\n\n## First Login\n\nPlease change password after first login!\n\n- **Username:** admin\n- **Password:** admin\n\n## TODO\n\n- [x] Fix user related api endpoints\n- [ ] Fix node log view\n- [x] Refactor the usage of config\n- [ ] Rewrite dockerfile and publish image on docker hub under gamegos\n- [ ] Improve Docs\n- [x] Do not use external adresses for javascript and css libraries\n- [ ] Use a logging lib\n- [ ] Better format for activity logs (tabbed date, level, component, message)\n- [ ] Auto refresh page\n- [ ] Option to select different templates\n- [x] Upgrade flask\n- [ ] Add tests\n- [ ] CI integration\n\n[1]: http://supervisord.org/\n[2]: https://github.com/gamegos/cesi-cookbook/\n[3]: https://github.com/gamegos/cesi-packaging/\n[4]: https://hub.docker.com/r/gamegos/cesi/\n'