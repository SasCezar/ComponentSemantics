b'# Deploy Keras Model with Flask as Web App in 10 Minutes\n\n[![](https://img.shields.io/badge/python-2.7%2C%203.5%2B-green.svg)]()\n[![GPLv3 license](https://img.shields.io/badge/License-GPLv3-blue.svg)](http://perso.crans.org/besson/LICENSE.html)\n\n> A pretty and customizable web app to deploy your DL model with ease\n\n------------------\n\n## Getting started in 10 minutes\n\n- Clone this repo \n- Install requirements\n- Run the script\n- Check http://localhost:5000\n- Done! :tada:\n\n:point_down:Screenshot:\n\n<p align="center">\n  <img src="https://s18.postimg.cc/l01x6fn3d/demo1.png" width="600px" alt="">\n</p>\n\n------------------\n\n## Docker Installation\n\n### Build and run an image for keras-application pretrained model \n```shell\n$ cd keras-flask-deploy-webapp\n$ docker build -t keras_flask_app .\n$ docker run -d -p 5000:5000 keras_flask_app \n```\n\n### Build and run an image from your model into the containeri.\nAfter build an image as above, and \n```shell\n$ docker run -e MODEL_PATH=/mnt/models/your_model.h5  -v volume-name:/mnt/models -p 5000:5000 keras_flask_app\n```\n\n### Pull an built-image from Docker hub\nFor your convenience, can just pull the image instead of building it. \n```shell\n$ docker pull physhik/keras-flask-app:2 \n$ docker run -d -p 5000:5000 physhik/keras-flask-app:2\n```\nOpen http://localhost:5000 after waiting for a minute to install in the container.\n\n\n## Local Installation\n\n### Clone the repo\n```shell\n$ git clone https://github.com/mtobeiyf/keras-flask-deploy-webapp.git\n```\n\n### Install requirements\n\n```shell\n$ pip install -r requirements.txt\n```\n\nMake sure you have the following installed:\n- tensorflow\n- keras\n- flask\n- pillow\n- h5py\n- gevent\n\n### Run with Python\n\nPython 2.7 or 3.5+ are supported and tested.\n\n```shell\n$ python app.py\n```\n\n### Play\n\nOpen http://localhost:5000 and have fun. :smiley:\n\n<p align="center">\n  <img src="https://s18.postimg.cc/5ekln1vvt/demo2.gif" width="600px" alt="">\n</p>\n\n------------------\n\n## Customization\n\n### Use your own model\n\nPlace your trained `.h5` file saved by `model.save()` under models directory.\n\nCheck the [commented code](https://github.com/mtobeiyf/keras-flask-deploy-webapp/blob/master/app.py#L25) in app.py.\n\n\n### Use other pre-trained model\n\nSee [Keras applications](https://keras.io/applications/) for more available models such as DenseNet, MobilNet, NASNet, etc.\n\nCheck [this section](https://github.com/mtobeiyf/keras-flask-deploy-webapp/blob/master/app.py#L25) in app.py.\n\n### UI Modification\n\nModify files in `templates` and `static` directory.\n\n`index.html` for the UI and `main.js` for all the behaviors\n\n## Deployment\n\nTo deploy it for public use, you need to have a public **linux server**.\n\n### Run the app\n\nRun the script and hide it in background with `tmux` or `screen`.\n```\n$ python app.py\n```\n\nYou can also use gunicorn instead of gevent\n```\n$ gunicorn -b 127.0.0.1:5000 app:app\n```\n\nMore deployment options, check [here](http://flask.pocoo.org/docs/0.12/deploying/wsgi-standalone/)\n\n### Set up Nginx\n\nTo redirect the traffic to your local app.\nConfigure your Nginx `.conf` file.\n```\nserver {\n    listen  80;\n\n    client_max_body_size 20M;\n\n    location / {\n        proxy_pass http://127.0.0.1:5000;\n    }\n}\n```\n\n## More resources\n\nCheck Siraj\'s ["How to Deploy a Keras Model to Production"](https://youtu.be/f6Bf3gl4hWY) video. The corresponding [repo](https://github.com/llSourcell/how_to_deploy_a_keras_model_to_production).\n\n[Building a simple Keras + deep learning REST API](https://blog.keras.io/building-a-simple-keras-deep-learning-rest-api.html)\n'