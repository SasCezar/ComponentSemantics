b'# memegen.link\n\nAn API to programatically generate memes based solely on requested URLs.\n\n[![Unix Build Status](http://img.shields.io/travis/jacebrowning/memegen/master.svg?label=unix)](https://travis-ci.org/jacebrowning/memegen)\n[![Windows Build Status](https://img.shields.io/appveyor/ci/jacebrowning/memegen/master.svg?label=windows)](https://ci.appveyor.com/project/jacebrowning/memegen)\n[![Coverage Status](http://img.shields.io/coveralls/jacebrowning/memegen/master.svg)](https://coveralls.io/r/jacebrowning/memegen)\n[![Scrutinizer Code Quality](http://img.shields.io/scrutinizer/g/jacebrowning/memegen.svg)](https://scrutinizer-ci.com/g/jacebrowning/memegen/?branch=master)\n\n<!--content-->\n\n## Generating Images\n\nThe API is stateless so URLs contain all the information necessary to generate meme images. For example, https://memegen.link/buzz/memes/memes_everywhere.jpg produces:\n\n![Sample Image](https://memegen.link/buzz/memes/memes_everywhere.jpg?watermark=none)\n\nBut, the site can also produce masked URLs to conceal the joke:\n\nhttps://memegen.link/_YnV6egltZW1lcy9tZW1lcy1ldmVyeXdoZXJl.jpg\n\nFor any image, lose the extension to see a list of all format options:\n\nhttps://memegen.link/buzz/memes/memes_everywhere\n\n### Special Characters\n\nIn URLs, spaces can be inserted using underscores, dashes, or mixed case:\n\n* underscore (`_`) \xe2\x86\x92 space (` `)\n* dash (`-`) \xe2\x86\x92 space (` `)\n* 2 underscores (`__`) \xe2\x86\x92 underscore (`_`)\n* 2 dashes (`--`) \xe2\x86\x92 dash (`-`)\n* "weLoveMemes" \xe2\x86\x92 "we love memes"\n\nReserved URL characters can be escaped:\n\n* tilde + Q (`~q`) \xe2\x86\x92 question mark (`?`)\n* tilde + P (`~p`) \xe2\x86\x92 percentage (`%`)\n* tilde + H (`~h`) \xe2\x86\x92 hashtag/pound (`#`)\n* tilde + S (`~s`) \xe2\x86\x92 slash (`/`)\n* 2 single qutoes (`\'\'`) \xe2\x86\x92 double quote (`"`)\n\nFor example, https://memegen.link/doge/~hspecial_characters~q/underscore__-dash--.jpg produces:\n\n![Escaped Characters](https://memegen.link/doge/~hspecial_characters~q/underscore__-dash--.jpg?watermark=none)\n\n### Alternate Styles\n\nSome memes come in multiple forms, which can be selected via `?alt=<style>`:\n\n<img src="https://memegen.link/static/images/template.png" alt="Template with Styles" style="width: 600px;"/>\n\nFor example: [https://memegen.link/sad-biden/sad_joe_biden/doesn\'t_think_you\'ll_vote.jpg?alt=scowl](https://memegen.link/sad-biden/sad_joe_biden/doesn\'t_think_you\'ll_vote.jpg?alt=scowl)\n\nOr, you can use your own image URL as the style. For example, https://memegen.link/custom/my_pretty/background.jpg?alt=http://www.gstatic.com/webp/gallery/1.jpg produces:\n\n![Custom Background](https://memegen.link/custom/my_pretty/background.jpg?alt=http://www.gstatic.com/webp/gallery/1.jpg&watermark=none)\n\n### Alternate Fonts\n\nAdditional fonts are available (see: https://memegen.link/api/fonts) and can be selected via `?font=<name>`.\n\nFor example, https://memegen.link/joker/pick_a_different_font/people_lose_their_minds.jpg?font=typoline-demo produces:\n\n![Custom Font](https://memegen.link/joker/pick-a-different-font/people-lose-their-minds.jpg?font=typoline-demo&watermark=none)\n\n### Custom sizes\n\nImages can be scaled to a specific width via `?width=<int>` or a specific height via `?height=<int>`. If both parameters are provided (`?width=<int>&height=<int>`), the image will be padded to the exact dimensions.\n\nFor example, https://memegen.link/both/width_or_height/why_not_both~q.jpg?height=350&width=600 produces:\n\n![Custom Size](https://memegen.link/both/width_or_height/why_not_both~q.jpg?height=350&width=600&watermark=none)\n\n### Preview Images\n\nAPI clients that want to show a preview of an image while the user is still typing should disable caching and analytics via `?preview=true`.\n\n### Social Media\n\nAdd `?share=true` to get HTML with images optimized for sharing on social media.\n\n## Adding Templates\n\nTo add a new template, please follow the [contributor instructions](CONTRIBUTING.md).\n\nThanks go to [danieldiekmeier/memegenerator](https://github.com/danieldiekmeier/memegenerator) for the inspiration!\n\n## Sample Clients\n\n| Platforms | Link | Source | \n| :-: | :-- | :-- |\n| Slack | --- | Python: [nicolewhite/slack-meme](https://github.com/nicolewhite/slack-meme) | --- |\n| Slack | --- | Go: [CptSpaceToaster/slackbot](https://github.com/CptSpaceToaster/slackbot) | --- |\n| Slack | http://www.memetizer.com | --- |\n| Hain | --- | JavaScript: [Metrakit/hain-plugin-meme](https://github.com/Metrakit/hain-plugin-meme) |\n| Web | ---| Clojure: [jasich/mighty-fine-memes](https://github.com/jasich/mighty-fine-memes) |\n| Web, Slack | https://memecomplete.com | --- |\n\nAdditional clients can be found by searching for [code examples on GitHub](https://github.com/search?o=desc&q=%22memegen.link%22+&ref=searchresults&s=indexed&type=Code&utf8=%E2%9C%93).\n'