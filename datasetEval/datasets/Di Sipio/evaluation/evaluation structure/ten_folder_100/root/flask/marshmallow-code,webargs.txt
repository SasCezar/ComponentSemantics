b'*******\nwebargs\n*******\n\n.. image:: https://badgen.net/pypi/v/webargs\n    :target: https://pypi.org/project/webargs/\n    :alt: PyPI version\n\n.. image:: https://dev.azure.com/sloria/sloria/_apis/build/status/marshmallow-code.webargs?branchName=dev\n    :target: https://dev.azure.com/sloria/sloria/_build/latest?definitionId=6&branchName=dev\n    :alt: Build status\n\n.. image:: https://readthedocs.org/projects/webargs/badge/\n   :target: https://webargs.readthedocs.io/\n   :alt: Documentation\n\n.. image:: https://badgen.net/badge/marshmallow/2,3?list=1\n    :target: https://marshmallow.readthedocs.io/en/latest/upgrading.html\n    :alt: marshmallow 2/3 compatible\n\n.. image:: https://badgen.net/badge/code%20style/black/000\n    :target: https://github.com/ambv/black\n    :alt: code style: black\n\nHomepage: https://webargs.readthedocs.io/\n\nwebargs is a Python library for parsing and validating HTTP request objects, with built-in support for popular web frameworks, including Flask, Django, Bottle, Tornado, Pyramid, webapp2, Falcon, and aiohttp.\n\n.. code-block:: python\n\n    from flask import Flask\n    from webargs import fields\n    from webargs.flaskparser import use_args\n\n    app = Flask(__name__)\n\n\n    @app.route("/")\n    @use_args({"name": fields.Str(required=True)})\n    def index(args):\n        return "Hello " + args["name"]\n\n\n    if __name__ == "__main__":\n        app.run()\n\n    # curl http://localhost:5000/\\?name\\=\'World\'\n    # Hello World\n\nInstall\n=======\n\n::\n\n    pip install -U webargs\n\nwebargs supports Python >= 2.7 or >= 3.5.\n\n\nDocumentation\n=============\n\nFull documentation is available at https://webargs.readthedocs.io/.\n\nSupport webargs\n===============\n\nwebargs is maintained by a group of \n`volunteers <https://webargs.readthedocs.io/en/latest/authors.html>`_.\nIf you\'d like to support the future of the project, please consider\ncontributing to our Open Collective:\n\n.. image:: https://opencollective.com/marshmallow/donate/button.png\n    :target: https://opencollective.com/marshmallow\n    :width: 200\n    :alt: Donate to our collective\n\nProfessional Support\n====================\n\nProfessionally-supported webargs is available through the\n`Tidelift Subscription <https://tidelift.com/subscription/pkg/pypi-webargs?utm_source=pypi-webargs&utm_medium=referral&utm_campaign=readme>`_.\n\nTidelift gives software development teams a single source for purchasing and maintaining their software,\nwith professional-grade assurances from the experts who know it best,\nwhile seamlessly integrating with existing tools. [`Get professional support`_]\n\n.. _`Get professional support`: https://tidelift.com/subscription/pkg/pypi-webargs?utm_source=pypi-webargs&utm_medium=referral&utm_campaign=readme\n\n.. image:: https://user-images.githubusercontent.com/2379650/45126032-50b69880-b13f-11e8-9c2c-abd16c433495.png\n    :target: https://tidelift.com/subscription/pkg/pypi-webargs?utm_source=pypi-webargs&utm_medium=referral&utm_campaign=readme\n    :alt: Get supported marshmallow with Tidelift\n\nSecurity Contact Information\n============================\n\nTo report a security vulnerability, please use the\n`Tidelift security contact <https://tidelift.com/security>`_.\nTidelift will coordinate the fix and disclosure.\n\nProject Links\n=============\n\n- Docs: https://webargs.readthedocs.io/\n- Changelog: https://webargs.readthedocs.io/en/latest/changelog.html\n- Contributing Guidelines: https://webargs.readthedocs.io/en/latest/contributing.html\n- PyPI: https://pypi.python.org/pypi/webargs\n- Issues: https://github.com/marshmallow-code/webargs/issues\n\n\nLicense\n=======\n\nMIT licensed. See the `LICENSE <https://github.com/marshmallow-code/webargs/blob/dev/LICENSE>`_ file for more details.\n'