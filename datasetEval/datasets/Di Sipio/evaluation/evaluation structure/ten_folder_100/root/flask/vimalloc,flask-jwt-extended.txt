b'# Flask-JWT-Extended\n[![Build Status](https://travis-ci.org/vimalloc/flask-jwt-extended.svg?branch=master)](https://travis-ci.org/vimalloc/flask-jwt-extended)\n[![Coverage Status](https://coveralls.io/repos/github/vimalloc/flask-jwt-extended/badge.svg?branch=master)](https://coveralls.io/github/vimalloc/flask-jwt-extended?branch=master)\n[![PyPI version](https://badge.fury.io/py/Flask-JWT-Extended.svg)](https://badge.fury.io/py/Flask-JWT-Extended)\n[![Documentation Status](https://readthedocs.org/projects/flask-jwt-extended/badge/)](http://flask-jwt-extended.readthedocs.io/en/latest/)\n\n### Features\nFlask-JWT-Extended not only adds support for using JSON Web Tokens (JWT) to Flask for protecting views,\nbut also many helpful (and **optional**) features  built in to make working with JSON Web Tokens\neasier. These include:\n\n* Support for adding custom claims to JSON Web Tokens\n* Custom claims validation on received tokens\n* Creating tokens from complex objects or complex object from received tokens\n* [Refresh tokens](https://auth0.com/blog/refresh-tokens-what-are-they-and-when-to-use-them/)\n* Token freshness and separate view decorators to only allow fresh tokens\n* Token revoking/blacklisting\n* Storing tokens in cookies and CSRF protection\n\n### Usage\n[View the documentation online](https://flask-jwt-extended.readthedocs.io/en/stable/)\n\n### Changelog\nYou can view the changelog [here](https://github.com/vimalloc/flask-jwt-extended/releases).\nThis project follows [semantic versioning](https://semver.org/).\n\n### Chatting\nCome chat with the community or ask questions at https://discord.gg/EJBsbFd\n\n### Local Development\nWe require 100% code coverage in our unit tests. You can run the tests locally\nwith `tox` which will print out a code coverage report. Creating a pull request\nwill run the tests against python 2.7, 3.5, 3.6, 3.7, 3.8 and PyPy.\n```\n$ tox\n```\n\nWe also require features to be well documented. After installing the requirements,\nyou can generate a local copy of documentation by going to the `docs` directory\nand running:\n```\n$ make clean && make html\n```\n'