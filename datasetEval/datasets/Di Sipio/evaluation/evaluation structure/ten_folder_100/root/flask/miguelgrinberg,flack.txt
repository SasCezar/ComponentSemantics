b'# Flask At Scale Tutorial at PyCon 2016\n\nThis repository contains the companion code to my PyCon 2016 "Flask At Scale"\nclass.\n\n**IMPORTANT NOTE**: The initial commit in this repository has a version of\nthis application that has a few scalability problems discussed during class.\nThese problems are addressed in subsequent commits.\n\n## Installation\n\nAll the code and examples were tested on Python 3.5. Older versions of Python\nincluding 2.7 will likely work as well.\n\nAs usual, create a virtual environment and install the requirements with pip.\n\n    pip install -r requirements.txt\n\n## Running\n\nThe application uses Flask-Script to simplify common tasks such as creating the\ndatabase and starting a development server. Right after you install the \napplication, you need to create a database for it with this command:\n\n    python manage.py createdb\n\nAfter that, you can run the application with the following command:\n\n    python manage.py runserver\n\nYou can add `--help` to see what other start up options are available.\n\nThe second component is a message queue, which you need to run as a service. By\ndefault, a Redis server running on localhost on the default port is assumed. If\nyou want to use a different message queue, or a different configuration for\nRedis, then set the `CELERY_BROKER_URL` environment variable to the message\nqueue connection URL. See the Celery documentation for information on\nconnection URLs.\n\nThe final component of this application is the Celery workers, which must be\nstarted after the message queue is running with the following command:\n\n    python manage.py celery\n\nIf you want to have more verbose output from the workers you can add\n`--loglevel=info` to the command above.\n\n\n##  Usage\n\nThat application allows multiple users to chat online. You can launch the\napplication on your browser by typing `http://127.0.0.1:5000` on the address\nbar.\n\nSince authentication is not a topic in this class, I\'ve decided to use a\nsimplified flow that combines the registration and login forms in one. If you\nare a new user, enter your chosen nickname and password to register. If the\nnickname was not seen before the server will register you. If you are a\nreturning user, provide your login in the same form. If the nickname is\nregistered then the password will be validated.\n\nOnce you are logged in you can type messages in the bottom text entry field,\nand these messages will be seen by all other users. You can use simple\nMarkDown formatting to add style to your messages. If you enter any links as\npart of your message, these will be shown in expanded form below the message.\n'