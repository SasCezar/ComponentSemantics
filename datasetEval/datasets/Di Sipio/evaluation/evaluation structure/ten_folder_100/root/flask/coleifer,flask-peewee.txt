b'This package is in maintenance-only mode!\n=========================================\n\nI\'m sorry to announce that flask-peewee will now be in maintenance-only mode. This decision is motivated by a number of factors:\n\n* `Flask-Admin <https://flask-admin.readthedocs.io/en/latest/>`_ provides a superior admin interface and has support for peewee models.\n* `Flask-Security <https://pythonhosted.org/Flask-Security/>`_ and `Flask-Login <https://flask-login.readthedocs.io/en/latest/>`_ both provide authentication functionality, and work well with Peewee.\n* Most importantly, though, I do not find myself wanting to work on flask-peewee.\n\nI plan on rewriting the ``Database`` and ``REST API`` portions of flask-peewee and repackaging them as a new library, but flask-peewee as it stands currently will be in maintenance-only mode.\n\nflask-peewee\n============\n\nprovides a layer of integration between the `flask <http://flask.pocoo.org/>`_\nweb framework and the `peewee orm <https://peewee.readthedocs.io/>`_.\n\nbatteries included:\n\n* admin interface\n* authentication\n* rest api\n\nrequirements:\n\n* `flask <https://github.com/mitsuhiko/flask>`_\n* `peewee <https://github.com/coleifer/peewee>`_\n* `wtforms <https://github.com/wtforms/wtforms>`_\n* `wtf-peewee <https://github.com/coleifer/wtf-peewee>`_\n* python 2.5 or greater\n\n\ncheck out the `documentation <https://flask-peewee.readthedocs.io/>`_.\n\n\nadmin interface\n---------------\n\ninfluenced heavily by the `django <http://djangoproject.com>`_ admin, provides easy\ncreate/edit/delete functionality for your project\'s models.\n\n.. image:: http://i.imgur.com/EtzdO.jpg\n\n\nrest api\n--------\n\ninfluenced by `tastypie <https://github.com/toastdriven/django-tastypie>`_, provides\na way to expose a RESTful interface for your project\'s models.\n\n::\n\n    curl localhost:5000/api/user/\n    {\n      "meta": {\n        "model": "user",\n        "next": "",\n        "page": 1,\n        "previous": ""\n      },\n      "objects": [\n        {\n          "username": "admin",\n          "admin": true,\n          "email": "",\n          "join_date": "2011-09-16 18:34:49",\n          "active": true,\n          "id": 1\n        },\n        {\n          "username": "coleifer",\n          "admin": false,\n          "email": "coleifer@gmail.com",\n          "join_date": "2011-09-16 18:35:56",\n          "active": true,\n          "id": 2\n        }\n      ]\n    }\n\n\ninstalling\n----------\n\nI recommend installing in a virtualenv.  to get started::\n\n    # create a new virtualenv\n    virtualenv --no-site-packages project\n    cd project/\n    source bin/activate\n\n    # install this project (will install dependencies as well)\n    pip install flask-peewee\n\n\nexample app\n-----------\n\nthe project ships with an example app, which is a silly twitter clone.  to\nstart the example app, ``cd`` into the "example" directory and execute\nthe ``run_example.py`` script::\n\n    cd example/\n    python run_example.py\n\nif you would like to test out the admin area, log in as "admin/admin" and navigate to:\n\nhttp://127.0.0.1:5000/admin/\n\nyou can check out the REST api at the following url:\n\nhttp://127.0.0.1:5000/api/message/\n'