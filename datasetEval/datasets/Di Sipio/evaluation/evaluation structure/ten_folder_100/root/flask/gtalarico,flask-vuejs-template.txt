b'# Flask-VueJs-Template \xf0\x9f\x8c\xb6\xef\xb8\x8f\xe2\x9c\x8c\r\n\r\n[![Build Status](https://travis-ci.org/gtalarico/flask-vuejs-template.svg?branch=master)](https://travis-ci.org/gtalarico/flask-vuejs-template)\r\n[![codecov](https://codecov.io/gh/gtalarico/flask-vuejs-template/branch/master/graph/badge.svg)](https://codecov.io/gh/gtalarico/flask-vuejs-template)\r\n\r\n_Flask + Vue.js Web Application Template_\r\n\r\n![Vue Logo](/docs/vue-logo.png "Vue Logo") ![Flask Logo](/docs/flask-logo.png "Flask Logo")\r\n\r\n## Features\r\n* Minimal Flask 1.0 App\r\n* [Flask-RestPlus](http://flask-restplus.readthedocs.io) API with class-based secure resource routing\r\n* Starter [PyTest](http://pytest.org) test suite\r\n* [vue-cli 3](https://github.com/vuejs/vue-cli/blob/dev/docs/README.md) + yarn\r\n* [Vuex](https://vuex.vuejs.org/)\r\n* [Vue Router](https://router.vuejs.org/)\r\n* [Axios](https://github.com/axios/axios/) for backend communication\r\n* Sample Vue [Filters](https://vuejs.org/v2/guide/filters.html)\r\n* Heroku Configuration with one-click deployment + Gunicorn\r\n\r\n## Demo\r\n[Live Demo](https://flask-vuejs-template.herokuapp.com/#/api)\r\n\r\n## Alternatives\r\n\r\nIf this setup is not what you are looking for, here are some similar projects:\r\n\r\n* [oleg-agapov/flask-vue-spa](https://github.com/oleg-agapov/flask-vue-spa)\r\n* [testdrivenio/flask-vue-crud](https://github.com/testdrivenio/flask-vue-crud)\r\n\r\n#### Old Template\r\n\r\nThis template was updated to use a flatter folder structure and use yarn instead of npm.\r\nYou can now run `yarn serve` as well as other yarn commands from the template root directory.\r\nThe old template will be kept in the [npm-template branch](https://github.com/gtalarico/flask-vuejs-template/tree/npm-template) but will not be maintained. \r\n\r\n#### Django\r\n\r\nPrefer Django? Checkout the [gtalarico/django-vue-template](https://github.com/gtalarico/django-vue-template)\r\n\r\n## Template Structure\r\n\r\nThe template uses Flask & Flask-RestPlus to create a minimal REST style API,\r\nand let\'s VueJs + vue-cli handle the front end and asset pipline.\r\nData from the python server to the Vue application is passed by making Ajax requests.\r\n\r\n### Application Structure\r\n\r\n#### Rest Api\r\n\r\nThe Api is served using a Flask blueprint at `/api/` using Flask RestPlus class-based\r\nresource routing.\r\n\r\n#### Client Application\r\n\r\nA Flask view is used to serve the `index.html` as an entry point into the Vue app at the endpoint `/`.\r\n\r\nThe template uses vue-cli 3 and assumes Vue Cli & Webpack will manage front-end resources and assets, so it does overwrite template delimiter.\r\n\r\nThe Vue instance is preconfigured with Filters, Vue-Router, Vuex; each of these can easilly removed if they are not desired.\r\n\r\n#### Important Files\r\n\r\n| Location             |  Content                                   |\r\n|----------------------|--------------------------------------------|\r\n| `/app`               | Flask Application                          |\r\n| `/app/api`           | Flask Rest Api (`/api`)                    |\r\n| `/app/client.py`     | Flask Client (`/`)                         |\r\n| `/src`               | Vue App .                                  |\r\n| `/src/main.js`       | JS Application Entry Point                 |\r\n| `/public/index.html` | Html Application Entry Point (`/`)         |\r\n| `/public/static`     | Static Assets                              |\r\n| `/dist/`             | Bundled Assets Output (generated at `yarn build` |\r\n\r\n\r\n## Installation\r\n\r\n##### Before you start\r\n\r\nBefore getting started, you should have the following installed and running:\r\n\r\n- [X] Yarn - [instructions](https://yarnpkg.com/en/docs/install#mac-stable)\r\n- [X] Vue Cli 3 - [instructions](https://cli.vuejs.org/guide/installation.html)\r\n- [X] Python 3\r\n- [X] Pipenv (optional)\r\n- [X] Heroku Cli (if deploying to Heroku)\r\n\r\n##### Template and Dependencies\r\n\r\n* Clone this repository:\r\n\r\n\t```\r\n\t$ git clone https://github.com/gtalarico/flask-vuejs-template.git\r\n\t```\r\n\r\n* Setup virtual environment, install dependencies, and activate it:\r\n\r\n\t```\r\n\t$ pipenv install --dev\r\n\t$ pipenv shell\r\n\t```\r\n\r\n* Install JS dependencies\r\n\r\n\t```\r\n\t$ yarn install\r\n\t```\r\n\r\n\r\n## Development Server\r\n\r\nRun Flask Api development server:\r\n\r\n```\r\n$ python run.py\r\n```\r\n\r\nFrom another tab in the same directory, start the webpack dev server:\r\n\r\n```\r\n$ yarn serve\r\n```\r\n\r\nThe Vuejs application will be served from `localhost:8080` and the Flask Api\r\nand static files will be served from `localhost:5000`.\r\n\r\nThe dual dev-server setup allows you to take advantage of\r\nwebpack\'s development server with hot module replacement.\r\n\r\nProxy config in `vue.config.js` is used to route the requests\r\nback to Flask\'s Api on port 5000.\r\n\r\nIf you would rather run a single dev server, you can run Flask\'s\r\ndevelopment server only on `:5000`, but you have to build build the Vue app first\r\nand the page will not reload on changes.\r\n\r\n```\r\n$ yarn build\r\n$ python run.py\r\n```\r\n\r\n\r\n## Production Server\r\n\r\nThis template is configured to work with Heroku + Gunicorn and it\'s pre-configured\r\nto have Heroku build the application before releasing it.\r\n\r\n#### JS Build Process\r\n\r\nHeroku\'s nodejs buidlpack will handle install for all the dependencies from the `packages.json` file.\r\nIt will then trigger the `postinstall` command which calls `yarn build`.\r\nThis will create the bundled `dist` folder which will be served by whitenoise.\r\n\r\n#### Python Build Process\r\n\r\nThe python buildpack will detect the `Pipfile` and install all the python dependencies.\r\n\r\n#### Production Sever Setup\r\n\r\nHere are the commands we need to run to get things setup on the Heroku side:\r\n\r\n\t```\r\n\t$ heroku apps:create flask-vuejs-template-demo\r\n\t$ heroku git:remote --app flask-vuejs-template-demo\r\n\t$ heroku buildpacks:add --index 1 heroku/nodejs\r\n\t$ heroku buildpacks:add --index 2 heroku/python\r\n\t$ heroku config:set FLASK_ENV=production\r\n\t$ heroku config:set FLASK_SECRET=SuperSecretKey\r\n\r\n\t$ git push heroku\r\n\t```\r\n\r\n### Heroku deployment - One Click Deploy\r\n\r\n[![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy?template=https://github.com/gtalarico/flask-vuejs-template)\r\n'