b'phantomas [![npm](https://img.shields.io/npm/dt/phantomas.svg)]() [![Build Status](https://api.travis-ci.org/macbre/phantomas.png?branch=devel)](http://travis-ci.org/macbre/phantomas) [![Known Vulnerabilities](https://snyk.io/test/github/macbre/phantomas/badge.svg)](https://snyk.io/test/github/macbre/phantomas)\n=========\n\n[Headless Chromium](https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md)-based modular web performance metrics collector. And why phantomas? Well, [because](http://en.wikipedia.org/wiki/Fant\xc3\xb4mas) :)\n\n## Requirements\n\n* [NodeJS](http://nodejs.org) 8+\n\n## Installation\n\n```\nnpm install phantomas\n```\n\n> This will install [a recent version of Chromium](https://github.com/GoogleChrome/puppeteer#installation) supported by `puppeteer` module.\n\n## Usage example\n\n```js\nconst phantomas = require(\'phantomas\'),\n    promise = phantomas(\'http://example.com/\');\n\npromise.\n\tthen(results => {\n\t\tconsole.log(\'Metrics\', results.getMetrics());\n\t\tconsole.log(\'Offenders\', results.getAllOffenders());\n    }).\n    catch(res => {\n\t\tconsole.error(res);\n    });\n\n// events handling\npromise.on(\'recv\', response => {\n\tconsole.log(\'Response: %s %s [%s]\', response.method, response.url, response.contentType);\n});\n```\n\n### Development version\n\nTo get the latest development version of phantomas (and install all required dependencies):\n\n```\ngit clone git@github.com:macbre/phantomas.git\nnpm install\n```\n\n## Having problems?\n\nPlease refer to **[/Troubleshooting.md](https://github.com/macbre/phantomas/blob/devel/Troubleshooting.md)**\n\n## Features\n\n* modular approach - each metric is generated by a separate "module"\n* phantomas "core" acts as an events emitter that each module can hook into\n* in-depth metrics such as: number of events bound via jQuery, calls to ``window.write``or [complex and duplicated CSS selectors (via analyze-css)](https://github.com/macbre/analyze-css)\n* JSON and CSV as available output formats for easy integration with automated reporting / monitoring tools\n* easy integration with Continuous Integration tools via TAP format and assertions handling\n* metrics can be sent via StatsD or stored in elasticsearch\n* easy integration with other nodejs projects via CommonJS module ([see API docs](https://github.com/macbre/phantomas/wiki/npm-module))\n* metrics can be emitted from JavaScript code of the page phantomas is run against (thanks to [helper functions available in window.__phantomas](https://github.com/macbre/phantomas/wiki/Phantomas-scope))\n* device profiles allow phantomas to emulate mobile or tablet (by setting a proper user agent and viewport)\n\n## Contributors\n\n> All the [contributors](https://github.com/macbre/phantomas/graphs/contributors)\n\n* [macbre](https://github.com/macbre)\n* [sjhcockrell](https://github.com/sjhcockrell)\n* [jgonera](https://github.com/jgonera)\n* [william-p](https://github.com/william-p)\n* [gmetais](https://github.com/gmetais)\n* [vgangan](https://github.com/vgangan)\n* [cphoover](https://github.com/cphoover)\n* [wladekb](https://github.com/wladekb)\n* [iNem0o](https://github.com/iNem0o)\n* [gomezd](https://github.com/gomezd)\n* [stefanjudis](https://github.com/stefanjudis)\n\n## Usage\n\n> phantomas comes as a CommonJS module ([see API docs](https://github.com/macbre/phantomas/wiki/npm-module)) that you can use in your nodejs projects.\n\n## Metrics\n\n> Please refer to `/docs/metrics.md` file for **a full, up-to-date list of all available modules and metrics** that phantomas emits.\n\n## For developers\n\n* [Project\'s wiki](https://github.com/macbre/phantomas/wiki)\n* Description of [events fired by phantomas core](https://github.com/macbre/phantomas/wiki/Events)\n* Description of [helper functions available to the browser in window.__phantomas](https://github.com/macbre/phantomas/wiki/Phantomas-scope)\n\n## Let\'s make Web a bit faster!\n\n* [Best Practices for Speeding Up Your Web Site](http://developer.yahoo.com/performance/rules.html) (by Yahoo!)\n* [Web Performance Best Practices](https://developers.google.com/speed/docs/best-practices/rules_intro) (by Google)\n* [Writing Efficient CSS](http://developer.mozilla.org/en/Writing_Efficient_CSS) (by Mozilla)\n* [Planet Performance](http://www.perfplanet.com/) - news and views from the web performance blogosphere\n* [Performance of 3rd Party Content](http://stevesouders.com/p3pc/) (by Steve Souders)\n* [Profiling CSS for fun and profit. Optimization notes.](http://perfectionkills.com/profiling-css-for-fun-and-profit-optimization-notes/)\n\n### Slides\n\n* [Know Your Engines: How to Make Your JavaScript Fast](http://cdn.oreillystatic.com/en/assets/1/event/60/Know%20Your%20Engines_%20How%20to%20Make%20Your%20JavaScript%20Fast%20Presentation%201.pdf) (by David Mandelin from Mozilla)\n* [Velocity Conf 2013 Workshop: Avoiding Web Performance Regression](http://www.slideshare.net/marcelduran/velocity-conf-2013) (by Marcel Duran from Twitter)\n\n## Blogosphere\n\nIntroductions to phantomas and use cases:\n\n* [phantomas \xe2\x80\x93 PhantomJS based, modular web performance metrics generator](http://calendar.perfplanet.com/2013/phantomas/) (an article for Performance Calendar)\n* [How to Measure Frontend Performance With Grunt](http://4waisenkinder.de/blog/2013/12/22/how-to-measure-frontend-performance-with-phantomas-and-grunt/)\n* [MaxCDN Blog - Behind The Scenes: tools.maxcdn.com](http://blog.maxcdn.com/behind-scenes-tools-maxcdn-com/)\n* [Measuring frontend performance](http://www.nephila.it/en/blog/2014/10/24/measuring-frontend-performance/)\n* [Performance Budgets with Phantomas and Jenkins](http://fairl.es/2014/02/02/phantomas-performance-testing-and-jenkins/)\n* [phantomas introduced at npmawesome.com](http://npmawesome.com/posts/2014-12-01-phantomas/)\n* [Grunt.js for the Enterprise - Vol.1: Frontend Performance with Phantomas](http://www.slideshare.net/DavidAm/grunt-js-for-the-enterprise) (by David Amend)\n* [Automated Frontend Testing at DrupalCon Austin 2014](https://austin2014.drupal.org/session/automated-frontend-testing) (+video)\n* [Phantomas: Fais-moi un strip !](https://wooster.checkmy.ws/2014/01/phantomas-performance-website/) (in French)\n\n### Videos\n\n* [Sebastian Golasch: The Glitch in the Game (Front End Ops Conference 2014)](http://youtu.be/B_kwo5V6m_w?t=12m25s)\n\n## Utilities\n\nUse [grunt](http://gruntjs.com/) to automate daily dev tasks, including your\'s application web performance, via these great tools:\n\n* [grunt-phantomas](https://github.com/stefanjudis/grunt-phantomas)\n* [juve](https://github.com/jared-stilwell/juve)\n* [grunt-devperf](https://github.com/gmetais/grunt-devperf)\n'