b'pyquery: a jquery-like library for python\n=========================================\n\n.. image:: https://travis-ci.org/gawel/pyquery.svg\n   :alt: Build Status\n   :target: https://travis-ci.org/gawel/pyquery\n\npyquery allows you to make jquery queries on xml documents.\nThe API is as much as possible the similar to jquery. pyquery uses lxml for fast\nxml and html manipulation.\n\nThis is not (or at least not yet) a library to produce or interact with\njavascript code. I just liked the jquery API and I missed it in python so I\ntold myself "Hey let\'s make jquery in python". This is the result.\n\nThe `project`_ is being actively developped on a git repository on Github. I\nhave the policy of giving push access to anyone who wants it and then to review\nwhat they do. So if you want to contribute just email me.\n\nPlease report bugs on the `github\n<https://github.com/gawel/pyquery/issues>`_ issue\ntracker.\n\n.. _deliverance: http://www.gawel.org/weblog/en/2008/12/skinning-with-pyquery-and-deliverance\n.. _project: https://github.com/gawel/pyquery/\n\nI\'ve spent hours maintaining this software, with love.\nPlease consider tiping if you like it:\n\nBTC: 1PruQAwByDndFZ7vTeJhyWefAghaZx9RZg\n\nETH: 0xb6418036d8E06c60C4D91c17d72Df6e1e5b15CE6\n\nLTC: LY6CdZcDbxnBX9GFBJ45TqVj8NykBBqsmT\n\n\nQuickstart\n==========\n\nYou can use the PyQuery class to load an xml document from a string, a lxml\ndocument, from a file or from an url::\n\n    >>> from pyquery import PyQuery as pq\n    >>> from lxml import etree\n    >>> import urllib\n    >>> d = pq("<html></html>")\n    >>> d = pq(etree.fromstring("<html></html>"))\n    >>> d = pq(url=your_url)\n    >>> d = pq(url=your_url,\n    ...        opener=lambda url, **kw: urlopen(url).read())\n    >>> d = pq(filename=path_to_html_file)\n\nNow d is like the $ in jquery::\n\n    >>> d("#hello")\n    [<p#hello.hello>]\n    >>> p = d("#hello")\n    >>> print(p.html())\n    Hello world !\n    >>> p.html("you know <a href=\'http://python.org/\'>Python</a> rocks")\n    [<p#hello.hello>]\n    >>> print(p.html())\n    you know <a href="http://python.org/">Python</a> rocks\n    >>> print(p.text())\n    you know Python rocks\n\nYou can use some of the pseudo classes that are available in jQuery but that\nare not standard in css such as :first :last :even :odd :eq :lt :gt :checked\n:selected :file::\n\n    >>> d(\'p:first\')\n    [<p#hello.hello>]\n\n'