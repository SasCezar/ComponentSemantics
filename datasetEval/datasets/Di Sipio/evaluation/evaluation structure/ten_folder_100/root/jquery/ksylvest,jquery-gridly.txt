b'# jQuery Gridly\n\nGridly is a jQuery plugin to enable dragging and dropping as well as resizing on a grid.\n\n## Installation\n\nTo install copy the *javascripts* and *stylesheets* directories into your project and add the following snippet to the header:\n\n    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js" type="text/javascript"></script>\n    <script src="javascripts/jquery.gridly.js" type="text/javascript"></script>\n    <link href="stylesheets/jquery.gridly.css" rel="stylesheet" type="text/css" />\n\nThis plugin is also registered under http://bower.io/ to simplify integration. Try:\n\n    npm install -g bower\n    bower install gridly\n\nLastly this plugin is registered as a https://rails-assets.org/ to simplify integration with Ruby on Rails applications:\n\n**Gemfile**\n\n    + source \'https://rails-assets.org\'\n    ...\n    + gem \'rails-assets-gridly\'\n\n**application.css**\n\n    /*\n     ...\n     *= require gridly\n     ...\n    */\n\n**application.js**\n\n    //= require jquery\n    ...\n    //= require gridly\n\n## Examples\n\nSetting up a gridly is easy. The following snippet is a good start:\n\n    <style>\n      .brick.small {\n        width: 140px;\n        height: 140px;\n      }\n\n      .brick.large {\n        width: 300px;\n        height: 300px;\n      }\n    </style>\n\n    <div class="gridly">\n      <div class="brick small"></div>\n      <div class="brick small"></div>\n      <div class="brick large"></div>\n      <div class="brick small"></div>\n      <div class="brick small"></div>\n      <div class="brick large"></div>\n    </div>\n\n    <script>\n      $(\'.gridly\').gridly();\n    </script>\n\n## Configuration\n\nGridly uses a fairly standard pattern for handling grids and offers three configuration options for sizing: *base*, *gutter* and *columns*:\n\n    $(\'.gridly\').gridly({\n      base: 60, // px \n      gutter: 20, // px\n      columns: 12\n    });\n\nWhen using the drag and drop sorting callbacks can be passed in when initializing:\n\n    var reordering = function($elements) {\n      // Called before the drag and drop starts with the elements in their starting position.\n    };\n\n    var reordered = function($elements) {\n      // Called after the drag and drop ends with the elements in their ending position.\n    };\n\n    $(\'.gridly\').gridly({\n      callbacks: { reordering: reordering , reordered: reordered }\n    });\n\n\n    $(\'.gridly\').gridly(\'draggable\', \'off\'); // disables dragging\n    $(\'.gridly\').gridly(\'draggable\', \'on);  // enables dragging\n\n## Contributing\n\nGridly is maintained in `CoffeeScript`. All contributions need to be submitted in `CoffeeScript`. The project includes a `Cakefile` that can be used to compile all assets (see: `cake watch`). For more information about `CoffeeScript` see:\n\n - http://coffeescript.org/\n - http://arcturo.github.io/library/coffeescript/\n\n## Status\n\n[![Status](https://travis-ci.org/ksylvest/jquery-gridly.png)](https://travis-ci.org/ksylvest/jquery-gridly)\n\n## Copyright\n\nCopyright (c) 2013 - 2015 Kevin Sylvestre. See LICENSE for details.\n'