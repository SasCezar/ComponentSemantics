b'[![JS.ORG](https://img.shields.io/badge/js.org-selectric-ffb400.svg)](http://js.org)\n[![Travis](https://img.shields.io/travis/lcdsantos/jQuery-Selectric.svg)](https://travis-ci.org/lcdsantos/jQuery-Selectric)\n[![codecov.io](https://codecov.io/github/lcdsantos/jQuery-Selectric/coverage.svg?branch=master)](https://codecov.io/github/lcdsantos/jQuery-Selectric?branch=master)\n[![npm](https://img.shields.io/npm/v/selectric.svg)](https://www.npmjs.com/package/selectric)\n[![jsDelivr Hits](https://data.jsdelivr.com/v1/package/npm/selectric/badge?style=rounded)](https://www.jsdelivr.com/package/npm/selectric)\n\n# jQuery Selectric ![icon](http://i.imgur.com/D2hcnUN.png)\n\njQuery Selectric is a jQuery plugin designed to help at stylizing and manipulating HTML selects.\n\n* Keyboard navigation (Up/Down/Left/Right/Word search)\n* Easily customizable\n* Pretty lightweight\n* Options box always stay visible\n* Doesn\'t rely on external libraries (besides jQuery)\n* Word search works with western latin characters set (for example: \xc3\xa1, \xc3\xb1, \xc3\xa7...)\n\n### [Demo](http://lcdsantos.github.io/jQuery-Selectric/)\n\n## How to use:\n\nInstall via NPM:\n\n```html\nnpm install selectric\n```\n\nMake sure to include jQuery in your page:\n\n```html\n<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>\n```\n\nInclude **jQuery Selectric:**\n\n```html\n<script src="js/jquery.selectric.min.js"></script>\n```\n\nInclude **jQuery Selectric** styles, and change it to your taste :D _(please refer to our [demo page](http://lcdsantos.github.io/jQuery-Selectric/demo.html) for more themes and other customizations)_\n\n```html\n<link rel="stylesheet" href="selectric.css">\n```\n\nInitialize **jQuery Selectric:**\n\n```html\n<script>\n$(function() {\n  $(\'select\').selectric();\n});\n</script>\n```\n\n## Options:\n\nYou can pass an options object as the first parameter when you call the plugin. For example:\n```js\n$(\'select\').selectric({\n  maxHeight: 200\n});\n```\n\n```js\n{\n  /*\n   * Type: Function\n   * Description: Function called before plugin initialize\n   */\n  onBeforeInit: function() {},\n\n  /*\n   * Type: Function\n   * Description: Function called plugin has been fully initialized\n   */\n  onInit: function() {},\n\n  /*\n   * Type: Function\n   * Description: Function called before select options opens\n   */\n  onBeforeOpen: function() {},\n\n  /*\n   * Type: Function\n   * Description: Function called after select options opens\n   */\n  onOpen: function() {},\n\n  /*\n   * Type: Function\n   * Description: Function called before select options closes\n   */\n  onBeforeClose: function() {},\n\n  /*\n   * Type: Function\n   * Description: Function called after select options closes\n   */\n  onClose: function() {},\n\n  /*\n   * Type: Function\n   * Description: Function called before select options change\n   */\n  onBeforeChange: function() {},\n\n  /*\n   * Type: Function\n   * Description: Function called when select options change\n   */\n  onChange: function(element) {\n    $(element).change();\n  },\n\n  /*\n   * Type: Function\n   * Description: Function called when the Selectric is refreshed\n   */\n  onRefresh: function() {},\n\n  /*\n   * Type: Integer\n   * Description: Maximum height options box can be\n   */\n  maxHeight: 300,\n\n  /*\n   * Type: Integer\n   * Description: After this time without pressing\n   *              any key, the search string is reset\n   */\n  keySearchTimeout: 500,\n\n  /*\n   * Type: String [HTML]\n   * Description: Markup for open options button\n   */\n  arrowButtonMarkup: \'&lt;b class=&quot;button&quot;&gt;&amp;#x25be;&lt;/b&gt;\',\n\n  /*\n   * Type: Boolean\n   * Description: Initialize plugin on mobile browsers\n   */\n  disableOnMobile: false,\n\n  /*\n   * Type: Boolean\n   * Description: Open select box on hover, instead of click\n   */\n  openOnHover: false,\n\n  /*\n   * Type: Integer\n   * Description: Timeout to close options box after mouse leave plugin area\n   */\n  hoverIntentTimeout: 500,\n\n  /*\n   * Type: Boolean\n   * Description: Expand options box past wrapper\n   */\n  expandToItemText: false,\n\n  /*\n   * Type: Boolean\n   * Description: The select element become responsive\n   */\n  responsive: false,\n\n  /*\n   * Type: Object\n   * Description: Customize classes.\n   */\n  customClass: {\n    prefix: \'selectric\', // Type: String.  Description: Prefixed string of every class name.\n    camelCase: false     // Type: Boolean. Description: Switch classes style between camelCase or dash-case.\n  },\n\n  /*\n   * Type: String or Function\n   * Description: Define how each option should be rendered inside its <li> element.\n   *\n   *              If it\'s a string, all keys wrapped in brackets will be replaced by\n   *              the respective values in itemData. Available keys are:\n   *              \'value\', \'text\', \'slug\', \'index\'.\n   *\n   *              If it\'s a function, it will be called with the following parameter:\n   *              (itemData). The function must return a string. If available all keys\n   *              will be replaced by the respective values in itemData.\n   *\n   *              itemData<Object> {\n   *                 className // Type: String.          Description: option class names.\n   *                 disabled  // Type: Boolean.         Description: option is disabled true/false\n   *                 selected  // Type: Boolean.         Description: option is selected true/false\n   *                 element   // Type: HTMLDomElement.  Description: current select element\n   *                 index     // Type: Number.          Description: current option index\n   *                 slug      // Type: String.          Description: option slug\n   *                 text      // Type: String.          Description: option text\n   *                 value     // Type: String.          Description: option value\n   *              }\n   *\n   *              EXAMPLE:\n   *\n   *              function(itemData) {\n   *                  return \'{text}\';\n   *              }\n   *\n   *              // you\'re free to build and return your own strings\n   *              function(itemData) {\n   *                  return itemData.text + \'(\' + itemData.index + \')\';\n   *              }\n   */\n  optionsItemBuilder: \'{text}\',\n\n  /*\n   * Type: String or Function\n   * Description: Define how each select label should be rendered. Allows HTML.\n   *\n   *              If it\'s a string, all keys wrapped in brackets will be replaced by\n   *              the respective values in currItem. Available keys are:\n   *              \'value\', \'text\', \'slug\', \'disabled\'.\n   *\n   *              If it\'s a function, it will be called with the following parameters:\n   *              (currItem). The function must return a string, no keys will be\n   *              replaced in this method.\n   */\n  labelBuilder: \'{text}\',\n\n  /*\n   * Type: Boolean\n   * Description: Prevent scroll on window when using mouse wheel inside options box\n   *              to match common browsers behavior.\n   */\n  preventWindowScroll: true,\n\n  /*\n   * Type: Boolean\n   * Description: Inherit width from original element\n   */\n  inheritOriginalWidth: false,\n\n  /*\n   * Type: Boolean\n   * Description: call stopProgation on onOpen click event\n   */\n  stopPropagation: true,\n\n  /*\n   * Type: Boolean\n   * Description: Determine if current selected option should jump to\n   *              first (or last) once reach the end (or start) item of list upon\n   *              keyboard arrow navigation.\n   */\n  allowWrap: true,\n\n  /*\n   * Type: Boolean\n   * Description: By default the options box gets opened above if it\'s outside the window.\n   *              In case this auto detection doesn\'t work as expected (e.g. in transform/relative scopes)\n   *              you may force opening above.\n   */\n  forceRenderAbove: false,\n\n  /*\n   * Type: Boolean\n   * Description: In some cases the options box gets opened above even though the desired behavior would be below.\n   *              If the auto dectection doesn\'t work as expected you may force opening below.\n   */\n  forceRenderBelow: false,\n\n  /*\n   * Type: Object\n   * Description: Customize select "multiple" behavior\n   */\n  multiple: {\n    separator: \', \',       // Type: String.             Description: Items separator.\n    keepMenuOpen: true,    // Type: Boolean.            Description: Close after an item is selected.\n    maxLabelEntries: false // Type: Boolean or Integer. Description: Max selected items do show.\n  }\n}\n```\n\n## Events:\n\nAll events are called on original element, first argument is the original element too. And can be bound like this:\n\n```js\n$(\'select\').on(\'eventname\', function(element) {\n  // your code\n});\n```\n\n`eventname` can be one of the following:\n\n<table>\n  <tr>\n    <td><strong>Event name</strong></td>\n    <td><strong>Description</strong></td>\n  </tr>\n  <tr>\n    <td><code>selectric-before-init</code></td>\n    <td>Fired before plugin initialize</td>\n  </tr>\n  <tr>\n    <td><code>selectric-init</code></td>\n    <td>Fired plugin has been fully initialized</td>\n  </tr>\n  <tr>\n    <td><code>selectric-before-open</code></td>\n    <td>Fired before select options opens</td>\n  </tr>\n  <tr>\n    <td><code>selectric-open</code></td>\n    <td>Fired after select options opens</td>\n  </tr>\n  <tr>\n    <td><code>selectric-before-close</code></td>\n    <td>Fired before select options closes</td>\n  </tr>\n  <tr>\n    <td><code>selectric-close</code></td>\n    <td>Fired after select options closes</td>\n  </tr>\n  <tr>\n    <td><code>selectric-before-highlight</code></td>\n    <td>Fired before a select option is highlighted</td>\n  </tr>\n  <tr>\n    <td><code>selectric-highlight</code></td>\n    <td>Fired when a select option is highlighted</td>\n  </tr>\n  <tr>\n    <td><code>selectric-before-select</code></td>\n    <td>Fired before a select option is selected</td>\n  </tr>\n  <tr>\n    <td><code>selectric-select</code></td>\n    <td>Fired before a select option is selected</td>\n  </tr>\n  <tr>\n    <td><code>selectric-before-change</code></td>\n    <td>Fired before select options change</td>\n  </tr>\n  <tr>\n    <td><code>selectric-change</code></td>\n    <td>Fired when select options change</td>\n  </tr>\n  <tr>\n    <td><code>selectric-refresh</code></td>\n    <td>Fired when the Selectric is refreshed</td>\n  </tr>\n</table>\n\n## Public methods:\n\n```js\nvar Selectric = $(\'select\').data(\'selectric\');\n\nSelectric.open();    // Open options\nSelectric.close();   // Close options\nSelectric.destroy(); // Destroy select and go back to normal\nSelectric.refresh(); // Reconstruct the plugin options box\nSelectric.init();    // Reinitialize the plugin\n\n// Or...\n$(\'select\').selectric(\'open\');    // Open options\n$(\'select\').selectric(\'close\');   // Close options\n$(\'select\').selectric(\'destroy\'); // Destroy select and go back to normal\n$(\'select\').selectric(\'refresh\'); // Reconstruct the plugin options box\n$(\'select\').selectric(\'init\');    // Reinitialize the plugin\n```\n\n## Browser support:\n\n* Firefox\n* Chrome\n* Safari\n* Internet Explorer 7+\n* Opera\n'