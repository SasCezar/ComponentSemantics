b'![simpleParallax logo](https://simpleparallax.com/images/logo.png?new)\r\n\r\n[![GitHub version](https://badge.fury.io/gh/geosenna%2FsimpleParallax.svg)](https://badge.fury.io/gh/geosenna%2FsimpleParallax)\r\n[![](https://data.jsdelivr.com/v1/package/npm/simple-parallax-js/badge?style=rounded)](https://www.jsdelivr.com/package/npm/simple-parallax-js)\r\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\r\n\r\n# What is simpleParallax?\r\n\r\nsimpleParallax is a very simple and tiny Vanilla JS library which adds parallax animations on any images.\r\n\r\nWhere it may be laborious to get results through other plugins, simpleParallax stands out for its ease and its visual rendering. The parallax effect is directly applied on image tags, there is no need to use background images. You can read one case study [here](https://medium.com/@geoffrey.signorato/case-study-create-a-parallax-effect-directly-on-img-tags-with-javascript-35b8daf81471).\r\n\r\nAny image will fit. Try it out!\r\n\r\n\r\n## Installation\r\n\r\nSimply copy/paste the below snippet just before your closing `</body>` tag:\r\n\r\n```html\r\n<script src="simpleParallax.js"></script>\r\n```\r\n\r\nor use the below CDN link provided by [jsDelivr.com](https://www.jsdelivr.com/package/npm/simple-parallax-js):\r\n\r\n```html\r\n<script src="https://cdn.jsdelivr.net/npm/simple-parallax-js@5.1.0/dist/simpleParallax.min.js"></script>\r\n```\r\n\r\nor you can install it via [npm/yarn](https://www.npmjs.com/package/simple-parallax-js):\r\n\r\n```sh\r\n#npm\r\nnpm install simple-parallax-js\r\n\r\n#yarn\r\nyarn add simple-parallax-js\r\n```\r\n\r\nYou can import it as follow:\r\n\r\n```javascript\r\nimport simpleParallax from \'simple-parallax-js\';\r\n```\r\n\r\n## Initialization\r\n\r\nGiving the following HTML:\r\n\r\n```html\r\n <img class="thumbnail" src="image.jpg" alt="image">\r\n```\r\n\r\nSimply add the following JavaScript code:\r\n\r\n```javascript\r\nvar image = document.getElementsByClassName(\'thumbnail\');\r\nnew simpleParallax(image);\r\n```\r\n\r\nThis also work with several images:\r\n\r\n```javascript\r\nvar images = document.querySelectorAll(\'img\');\r\nnew simpleParallax(images);\r\n```\r\n## Settings\r\n\r\nSetting | Type | Default | Hint\r\n--- | --- | --- | ---\r\norientation | string | up | up - right - down - left - up left - up right - down left - down right\r\nscale | int | 1.3 | need to be above 1.0\r\noverflow | boolean | false | \r\ndelay | int | 0.4 | the delay is in second\r\ntransition | string | false | any CSS transition\r\nbreakpoint | int | false | the breakpoint is in pixel\r\n\r\nYou can apply these settings with the following JS code:\r\n\r\n```javascript\r\nvar images = document.querySelectorAll(\'.thumbnail\');\r\nnew simpleParallax(images, {\r\n    delay: 0,\r\n    orientation: \'down\',\r\n    scale: 1.3,\r\n    overfow: true\r\n});\r\n```\r\n\r\n### orientation - *string*\r\nThis is the direction of the parallax effect. Choose *up* and when scrolling down, the image will translate from bottom to top. When scroll up, the image will translate from top to bottom.\r\n\r\n### scale - *int*\r\nThe higher the scale is set, the more visible the parallax effect will be. In return, the image will lose in quality. To reduce the lossless effect, if the scale is set at 1.5 and you image is 500px width, do the simple math 500 * 1.5 = 750. So you can choose a 750px image to replace your 500px one, and don\'t see any quality leak.\r\n\r\n### overflow - *boolean*\r\nBy default, the image is scaled to apply a parallax effect without any overflow on the layout (you can check the [case study](https://medium.com/@geoffrey.signorato/case-study-create-a-parallax-effect-directly-on-img-tags-with-javascript-35b8daf81471) to have a better understanding). when overflow is set to true, the image will translate out of its natural flow.\r\n\r\n### delay - *int*\r\nWhen a delay is set, the translation of the image will slightly continue when the user stop scrolling. That gives a very nice effect.\r\n\r\n### transition - *string*\r\nThe transition works closely with the delay setting. The transition will add any CSS effect to the delay setting.\r\n\r\n### breakpoint - *int*\r\nThe minimum breakpoint from where simpleParallax should be initialized and to where simpleParallax should be destroyed.\r\n\r\n## Methods\r\nDestroy a simpleParallax instance:\r\n\r\n```javascript\r\nvar images = document.querySelectorAll(\'img\');\r\nvar instance = new simpleParallax(images);\r\ninstance.destroy();\r\n```\r\n## Examples\r\nYou can find some examples [here](https://simpleparallax.com/#examples).\r\n\r\n## Compatibility\r\nYou can apply simpleParallax on picture tags/srcset images.\r\n\r\n## Author\r\n\r\n[Geoffrey Signorato](https://github.com/geosigno/)\r\n\r\n## Contributing\r\n\r\nOpen an issue or a pull request to suggest changes or additions.\r\n\r\n'