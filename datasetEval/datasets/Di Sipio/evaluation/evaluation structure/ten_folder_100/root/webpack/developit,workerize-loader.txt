b'<img src="https://i.imgur.com/HZZG8wr.jpg" width="1358" alt="workerize-loader">\n\n# workerize-loader [![npm](https://img.shields.io/npm/v/workerize-loader.svg?style=flat)](https://www.npmjs.org/package/workerize-loader) [![travis](https://travis-ci.org/developit/workerize-loader.svg?branch=master)](https://travis-ci.org/developit/workerize-loader)\n\n> A webpack loader that moves a module and its dependencies into a Web Worker, automatically reflecting exported functions as asynchronous proxies.\n\n- Bundles a tiny, purpose-built RPC implementation into your app\n- If exported module methods are already async, signature is unchanged\n- Supports synchronous and asynchronous worker functions\n- Works beautifully with async/await\n- Imported value is instantiable, just a decorated `Worker`\n\n\n## Install\n\n```sh\nnpm install -D workerize-loader\n```\n\n\n### Usage\n\n**worker.js**:\n\n```js\n// block for `time` ms, then return the number of loops we could run in that time:\nexport function expensive(time) {\n    let start = Date.now(),\n        count = 0\n    while (Date.now() - start < time) count++\n    return count\n}\n```\n\n**index.js**: _(our demo)_\n\n```js\nimport worker from \'workerize-loader!./worker\'\n\nlet instance = worker()  // `new` is optional\n\ninstance.expensive(1000).then( count => {\n    console.log(`Ran ${count} loops`)\n})\n```\n\n### Options\n\n#### `inline`\n\nType: `Boolean`\nDefault: `false`\n\nYou can also inline the worker as a BLOB with the `inline` parameter\n\n```js\n// webpack.config.js\n{\n  loader: \'workerize-loader\',\n  options: { inline: true }\n}\n```\nor \n```js\nimport worker from \'workerize-loader?inline!./worker\'\n```\n\n### About [Babel](https://babeljs.io/)\n\nIf you\'re using [Babel](https://babeljs.io/) in your build, make sure you disabled commonJS transform. Otherwize, workerize-loader won\'t be able to retrieve the list of exported function from your worker script :\n```js\n{\n    test: /\\.js$/,\n    loader: "babel-loader",\n    options: {\n        presets: [\n            [\n                "env",\n                {\n                    modules: false,\n                },\n            ],\n        ]\n    }\n}\n```\n\n### Credit\n\nThe inner workings here are heavily inspired by [worker-loader](https://github.com/webpack-contrib/worker-loader). It\'s worth a read!\n\n\n### License\n\n[MIT License](https://oss.ninja/mit/developit) \xc2\xa9 [Jason Miller](https://jasonformat.com)\n'