b'# NativeScript Firebase plugin\n\n[![Build Status][build-status]][build-url]\n[![NPM version][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n[![TotalDownloads][total-downloads-image]][npm-url]\n[![Twitter Follow][twitter-image]][twitter-url]\n\n[build-status]:https://travis-ci.org/EddyVerbruggen/nativescript-plugin-firebase.svg?branch=master\n[build-url]:https://travis-ci.org/EddyVerbruggen/nativescript-plugin-firebase\n[npm-image]:http://img.shields.io/npm/v/nativescript-plugin-firebase.svg\n[npm-url]:https://npmjs.org/package/nativescript-plugin-firebase\n[downloads-image]:http://img.shields.io/npm/dm/nativescript-plugin-firebase.svg\n[total-downloads-image]:http://img.shields.io/npm/dt/nativescript-plugin-firebase.svg?label=total%20downloads\n[twitter-image]:https://img.shields.io/twitter/follow/eddyverbruggen.svg?style=social&label=Follow%20me\n[twitter-url]:https://twitter.com/eddyverbruggen\n\n<img src="docs/images/firebase-logo.png" width="116px" height="32px" alt="Firebase"/><br/>\n\n> Plugin version **10.0.0** works with NativeScript 5.2+, and 6.1+ is recommended. Using an older version? Stick to plugin version < 10.\n\n## Features\n* [AdMob](docs/ADMOB.md)\n* [Analytics](docs/ANALYTICS.md)\n* [Authentication](docs/AUTHENTICATION.md)\n* [Cloud Firestore](docs/FIRESTORE.md)\n* [Cloud Functions](docs/FUNCTIONS.md)\n* [Cloud Messaging](docs/MESSAGING.md) / [Non-Firebase Push Messaging](docs/NON_FIREBASE_MESSAGING.md)\n* [Crashlytics](docs/CRASHLYTICS.md)\n* [In-App Messaging](docs/IN_APP_MESSAGING.md)\n* [Dynamic Links](docs/DYNAMIC_LINKS.md)\n* [ML Kit](docs/ML_KIT.md)\n* [Performance Monitoring](docs/PERFORMANCE_MONITORING.md)\n* [Realtime Database](docs/DATABASE.md)\n* [Remote Config](docs/REMOTECONFIG.md)\n* [Storage](docs/STORAGE.md)\n\n## Prerequisites\nHead on over to [https://console.firebase.google.com/](https://console.firebase.google.com/) and sign up for a free account.\nYour first \'Firebase\' will be automatically created and made available via an URL like `https://n-plugin-test.firebaseio.com`.\n\nOpen your Firebase project at the Google console and click \'Add app\' to add an iOS and / or Android app. Follow the steps (make sure the bundle id is the same as your `nativescript.id` in `package.json` and you\'ll be able to download:\n\n* iOS: `GoogleService-Info.plist` which you\'ll add to your NativeScript project at `app/App_Resources/iOS/GoogleService-Info.plist`\n\n* Android: `google-services.json` which you\'ll add to your NativeScript project at `app/App_Resources/Android/google-services.json`\n\nNote: for using separate versions of these files for development and production environments see [this section](#separation-of-environments)\n\n## Installation\nIf you rather watch a (slightly outdated) video explaining the steps then check out this step-by-step guide - you\'ll also learn how to\nadd iOS and Android support to the Firebase console and how to integrate anonymous authentication:\n[![YouTube demo](docs/images/yt-thumb-setup.png)](https://youtu.be/IextEpoIzwE "YouTube demo")\n\nFrom the command prompt go to your app\'s root folder and execute:\n\n```bash\ntns plugin add nativescript-plugin-firebase\n```\n\nThis will launch an install script which will guide you through installing additional components.\nCheck the doc links above to see what\'s what. You can always change your choices later.\n\n> Want to use this plugin with an *external push notification provider* and **not** use any Firebase feature? Just answer \'y\' to the first question to skip most of them, and\xef\xb8\x8f [hop on over to the Push Notification](docs/NON_FIREBASE_MESSAGING.md). Do not run the plugin\'s `.init` function in this case!\n\n> Using [NativeScript SideKick](https://www.nativescript.org/nativescript-sidekick)? Then the aforementioned install script\nwill not (be able to) run. In that case, running the app for Android will result in [this issue](https://github.com/EddyVerbruggen/nativescript-plugin-firebase/issues/829#issuecomment-409870671).\nTo fix that, see [this comment](https://github.com/EddyVerbruggen/nativescript-plugin-firebase/issues/829#issuecomment-409855611).\n\n### Config\nIf you choose to save your config during the installation, the supported options may be saved in the `firebase.nativescript.json` at the root of your app.\nThis is to ensure your app may roundtrip source control and installation on CI won\'t prompt for user input during installation.\n\nYou can reconfigure the plugin by going to the `node_modules/nativescript-plugin-firebase` and running `npm run config`.\n\nYou can also change the configuration by deleting the `firebase.nativescript.json` and reinstalling the plugin.\n\n#### Using Vue?\nPlease update your [NativeScript-Vue](https://github.com/nativescript-vue/vue-cli-template) template to 2.0 because it\naligns perfectly with this plugin (because that template is now much more similar to a regular NativeScript project).\n\nIf you want a demo using Vue and Firestore, then [check out this project](https://github.com/EddyVerbruggen/footplr),\nif you want one with Realtime DB, [check out this one](https://github.com/jlooper/mixology-mobile).\n\n### iOS (Cocoapods)\nThe Firebase iOS SDK is installed via Cocoapods, so run `pod repo update` from the command prompt (in any folder) to ensure you have the latest spec.\n\n#### Google Play Services Version\nThe plugin will default to [this version](https://github.com/EddyVerbruggen/nativescript-plugin-firebase/blob/master/src/platforms/android/include.gradle#L27) of the Android `play-services-base` SDK.\nIf you need to change the version (to for instance the latest version), you can add a project ext property `googlePlayServicesVersion` to `app/App_Resources/Android/app.gradle`:\n\n```\nproject.ext {\n    googlePlayServicesVersion = "+"\n}\n```\n\n## Usage\n\n### Demo app\nIf you want a quickstart, clone the repo, then:\n- `cd src`.\n- `npm i` (just answer \'n\' to any prompts as they are ignored anyway).\n- `npm run demo.ios` or `npm run demo.android` (answer \'n\' again if prompted).\n\n### Start-up wiring\nWe need to do some wiring when your app starts, so open `app.js` and add this before `application.start();`:\n\n##### JavaScript\n```js\nvar firebase = require("nativescript-plugin-firebase");\n\nfirebase.init({\n  // Optionally pass in properties for database, authentication and cloud messaging,\n  // see their respective docs.\n}).then(\n    function () {\n      console.log("firebase.init done");\n    },\n    function (error) {\n      console.log("firebase.init error: " + error);\n    }\n);\n```\n\n#### TypeScript\n```js\nconst firebase = require("nativescript-plugin-firebase");\n\nfirebase.init({\n  // Optionally pass in properties for database, authentication and cloud messaging,\n  // see their respective docs.\n}).then(\n  () => {\n    console.log("firebase.init done");\n  },\n  error => {\n    console.log(`firebase.init error: ${error}`);\n  }\n);\n```\n\n#### Angular\nBecause of the specifics of the angular bootstrap it is best to initalize firebase once the angular application is running. For example your main compoment\'s `ngOnInit` method:\n```js\nconst firebase = require("nativescript-plugin-firebase");\n\n@Component({\n    // ...\n})\nexport class AppComponent implements OnInit {\n  ngOnInit() {\n    firebase.init({\n      // Optionally pass in properties for database, authentication and cloud messaging,\n      // see their respective docs.\n    }).then(\n      () => {\n        console.log("firebase.init done");\n      },\n      error => {\n        console.log(`firebase.init error: ${error}`);\n      }\n    );\n  }\n}\n```\n\n## Known issues on iOS\n\n#### Trouble running on the simulator\nOpen or create `App_Resources/iOS/<appname>.entitlements` and add these two keys with the value `true`:\n\n```xml\n<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n<dict>\n    <key>com.apple.keystore.access-keychain-keys</key>\n    <true/>\n    <key>com.apple.keystore.device</key>\n    <true/>\n</dict>\n</plist>\n```\n\n#### Authentication failed: invalid_token\nOn the simulator you may see this message if you have more than one app with the Firebase SDK ever installed:\n\n```\n[FirebaseDatabase] Authentication failed: invalid_token (Invalid claim \'aud\' in auth token.)\nor\n[FirebaseDatabase] Authentication failed: invalid_token (audience was project \'firegroceries-904d0\' but should have been project \'your-firebase-project\')\n```\n\nThis is [a known issue in the Firebase SDK](http://stackoverflow.com/questions/37857131/swift-firebase-database-invalid-token-error).\nI always use a real device to avoid this problem, but you can pass an \'iOSEmulatorFlush\' option to init.\n```\nfirebase.init({\n  // Optionally pass in properties for database, authentication and cloud messaging,\n  // see their respective docs and \'iOSEmulatorFlush\' to flush token before init.\n  iOSEmulatorFlush: true\n}).then()\n```\n\n#### Pod dependency error\nIf you see an error like `Unable to satisfy the following requirements: Firebase (~> 3.17.0) required by Podfile`,\nthen run `pod repo update` on the command line to make sure you have the latest Podspec.\n\nThis could happen when updating the plugin to a new version. You\'ll want to `tns platform remove ios && tns platform add ios` as well to clean out the old pod version.\n\n## Known issues on Android\n\n#### Genymotion\nYou can use the awesome [Genymotion emulator](https://www.genymotion.com/)\nbut you\'ll need to [install Google Play Services on it](https://inthecheesefactory.com/blog/how-to-install-google-services-on-genymotion/en) or you\'ll run into errors during authentication.\n\n#### DexIndexOverflowException\n```\ncom.android.dex.DexIndexOverflowException: method ID not in..\n```\n\nCongrats, you ran into [this issue](https://github.com/NativeScript/android-runtime/issues/344)\nwhich can be solved by adding `multiDexEnabled true` to your `app/App_Resources/Android/app.gradle`\nso it becomes something like this:\n\n```\nandroid {  \n  defaultConfig {  \n    applicationId = "__PACKAGE__"  \n    multiDexEnabled true\n    generatedDensities = []\n  }  \n  aaptOptions {  \n    additionalParameters "--no-version-vectors"  \n  }  \n}\n```\n\n#### java.lang.OutOfMemoryError: GC overhead limit exceeded\n\nIncrease the Java Max Heap Size like this (the bit at the end):\n\n```\nandroid {  \n  defaultConfig {  \n    applicationId = "__PACKAGE__"  \n    multiDexEnabled true\n    generatedDensities = []\n  }\n  aaptOptions {  \n    additionalParameters "--no-version-vectors"  \n  }\n  dexOptions {\n    javaMaxHeapSize "4g"\n  }\n}\n```\n\n#### FirebaseApp with name [DEFAULT] doesn\'t exist\nAnother possible error is "FirebaseApp with name [DEFAULT] doesn\'t exist." which will be solved by\nplacing `google-services.json` to `platforms/android/google-services.json` (see above), and making\nthe changes to `build.gradle` which are mentioned above as well.\n\n#### Errors regarding API level 26.0.0\nUpdate your local Android SDKs:\n\nJust run `$ANDROID_HOME/tools/bin/sdkmanager --update` from a command prompt\nor launch the SDK manager from Android Studio, expand `Extras` and install any pending updates.\n\n#### Found play-services:A.C.D, but version B.X.Y is needed..\nUpdate your Android bits like the issue above and reinstall the android platform in your project.\n\n#### `include.gradle`: Failed to apply plugin .. For input string: "+"\nYou probably have another plugin depending on Google Play Services (Google Maps, perhaps).\nWe need to pin to a specific play services version to play nice with others, so open `app/App_Resources/Android/app.gradle` and add:\n\n```js\nandroid {  \n  // other stuff here\n\n  project.ext {\n    googlePlayServicesVersion = "15.0.0"\n  }\n}\n```\n\nWhere `"15.0.0"` is best set to the same value as the `googlePlayServicesVersion` value in [this file](https://github.com/EddyVerbruggen/nativescript-plugin-firebase/blob/48a99ccd2a0f590c37080b1a252173ea9b996e9f/publish/scripts/installer.js#L540).\n\n## Separation of Environments\n\nIt is possible to use different development and production environments by using multiple `GoogleService-Info.plist` and `google-services.json` files.\n\n### Setup\n1. Create two separate Firebase projects (e.g. `myproject` and `myproject-dev`) and configure them with the same package name\n2. Download the `plist` and `json` files for both projects and put them in the relevant directories with either `.dev` or `.prod` appended to the file names, so you have the following files in place:\n\n    * iOS\n       * `app/App_Resources/iOS/GoogleService-Info.plist.dev`\n       * `app/App_Resources/iOS/GoogleService-Info.plist.prod`\n    * Android\n       * `app/App_Resources/Android/google-services.json.dev`\n       * `app/App_Resources/Android/google-services.json.prod`\n\nNote: if you currently have the `storageBucket` property in the `firebase.init()` then remove it (not mandatory anymore as of version `6.5.0` of this plugin), so it will be taken automatically from the relevant google services `plist` and `json` files.\n\n### Build\nThe build hooks of this plugin will now choose either the `dev` or the `prod` version of your google services `plist` and `json` files depending on how you run your build:\n\n* `prod` will be selected if you run with either the `--release`, `--env.prod` or `--env.production` flags\n* `dev` will be selected if you do not run with any of the above flags\n\nNote: if you do not have both `dev` and `prod` files in place, the regular `GoogleService-Info.plist` and `google-services.json` files will be used.\n'