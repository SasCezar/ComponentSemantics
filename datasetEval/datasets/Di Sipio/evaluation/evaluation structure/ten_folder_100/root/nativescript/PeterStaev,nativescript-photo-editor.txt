b'**This repo only supports NativeScript pre-6.0. The latest version of the plugin supporting NS 6+ is availble as part of [ProPlugins](https://proplugins.org).**\n# NativeScript Photo Editor\n[![Build Status](https://travis-ci.com/PeterStaev/nativescript-photo-editor.svg?branch=master)](https://travis-ci.com/PeterStaev/nativescript-photo-editor)\n[![npm downloads](https://img.shields.io/npm/dm/nativescript-photo-editor.svg)](https://www.npmjs.com/package/nativescript-photo-editor)\n[![npm downloads](https://img.shields.io/npm/dt/nativescript-photo-editor.svg)](https://www.npmjs.com/package/nativescript-photo-editor)\n[![npm](https://img.shields.io/npm/v/nativescript-photo-editor.svg)](https://www.npmjs.com/package/nativescript-photo-editor)\n\nA NativeScript photo editor. It allows you to crop, draw something on your image or add some text. \n\n## Screenshot\n![Screenshot of iOS](https://raw.githubusercontent.com/PeterStaev/nativescript-photo-editor/master/docs/editor-ios.gif)\n\n## Installation\nRun the following command from the root of your project:\n\n`tns plugin add nativescript-photo-editor`\n\nThis command automatically installs the necessary files, as well as stores nativescript-photo-editor as a dependency in your project\'s `package.json` file.\n\n## Configuration\nThere is no additional configuration needed!\n\n## API\n### Methods\n* **editPhoto(options): Promise**  \nOpens the photo editor with the given options. If the user accepts the edited image the promise is resolved with an instance of the new `ImageSource`. If the user cancels the edit the promise will be rejected. \n\n## Usage\nSimply create an instance of the photo editor, pass the image you want to edit and which editor controls you **don\'t** want to use (if any) an that\'s it!\n```ts\nimport { PhotoEditor, PhotoEditorControl } from "nativescript-photo-editor";\n\nconst photoEditor = new PhotoEditor();\n\nphotoEditor.editPhoto({\n    imageSource: originalImage.imageSource,\n    hiddenControls: [\n        PhotoEditorControl.Save,\n        PhotoEditorControl.Crop,\n    ],\n}).then((newImage: ImageSource) => {\n    // Here you can save newImage, send it to your backend or simply display it in your app\n    resultImage.imageSource = newImage;\n}).catch((e) => {\n    console.error(e);\n});\n```\n\n## Usage in Angular\nThere is no difference in usage between Core and Angular. So you can refer to the above usage examples on how to use this plugin with Angular. \n\n## Demos\nThis repository includes a plain NativeScript demo. In order to run it execute the following in your shell:\n```shell\n$ git clone https://github.com/peterstaev/nativescript-photo-editor\n$ cd nativescript-photo-editor\n$ npm install\n$ npm run demo-ios\n```\nThis will run the plain NativeScript demo project on iOS. If you want to run it on Android simply use the `-android` instead of the `-ios` sufix. \n\n## Donate\n[![Donate](https://img.shields.io/badge/paypal-donate-brightgreen.svg)](https://bit.ly/2AS9QKB)\n\n`bitcoin:14fjysmpwLvSsAskvLASw6ek5XfhTzskHC`\n\n![Donate](https://www.tangrainc.com/qr.png)\n\n## Credits\n* For iOS this uses the `iOSPhotoEditor` pod (https://cocoapods.org/pods/iOSPhotoEditor)\n* For Android uses adjusted code with added cropping from https://github.com/eventtus/photo-editor-android \n'