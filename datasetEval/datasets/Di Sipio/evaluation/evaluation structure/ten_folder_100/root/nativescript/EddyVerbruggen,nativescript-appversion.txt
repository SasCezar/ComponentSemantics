b'# NativeScript AppVersion\n\n[![NPM version][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n[![Twitter Follow][twitter-image]][twitter-url]\n\n[npm-image]:http://img.shields.io/npm/v/nativescript-appversion.svg\n[npm-url]:https://npmjs.org/package/nativescript-appversion\n[downloads-image]:http://img.shields.io/npm/dm/nativescript-appversion.svg\n[twitter-image]:https://img.shields.io/twitter/follow/eddyverbruggen.svg?style=social&label=Follow%20me\n[twitter-url]:https://twitter.com/eddyverbruggen\n\nRead the current Package ID and Version (name and code) of your NativeScript app.\n\n## Installation\nRun the following command from the root of your project:\n\n```\ntns plugin add nativescript-appversion\n```\n\n## Usage\n\nTo use this plugin you must first require / import it:\n\n#### JavaScript\n```js\nvar appversion = require("nativescript-appversion");\n```\n\n#### TypeScript\n```typescript\nimport * as appversion from "nativescript-appversion";\n```\n\n### getVersionName(Sync)\n`getVersionNameSync` is the same as `getVersionName`, except it doesn\'t return a Promise.\n\n#### JavaScript\n```js\n  appversion.getVersionName().then(function(v) {\n      console.log("Your app\'s version is: " + v);\n  });\n```\n\n#### TypeScript\n```typescript\n  appversion.getVersionName().then((v: string) => {\n      console.log("Your app\'s version is: " + v);\n  });\n```\n\n### getVersionCode(Sync)\n\n#### JavaScript\n```js\n  appversion.getVersionCode().then(function(v) {\n      console.log("Your app\'s version code is: " + v);\n  });\n```\n\n#### TypeScript\n```typescript\n  appversion.getVersionCode().then((v: string) => {\n      console.log("Your app\'s version code is: " + v);\n  });\n```\n\n### getAppId(Sync)\n\n#### JavaScript\n```js\n  appversion.getAppId().then(function(id) {\n      console.log("Your app\'s id is: " + id);\n  });\n```\n\n#### TypeScript\n```typescript\n  appversion.getAppId().then((id: string) => {\n      console.log("Your app\'s id is: " + id);\n  });\n```\n'