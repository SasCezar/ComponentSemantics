b'__The author of this plugin will continue to support it in a separate repo exclusively as part of [ProPlugins](https://proplugins.org). This repo will remain supported by the NativeScript community.__\n\n# Contribution - help wanted\nThis plugin is supported by the NativeScript community. All PRs are welcome but make sure that the demo applications work correctly before creating a new PR. If you do not have an issue you are facing but want to contribute to this plugin you can find a list of the on going issues [here](https://github.com/PeterStaev/nativescript-image-swipe/issues).\n\n## Creating a PR checklist:\n- Fork the repo\n- Add new functionality or fix an issue and push it to your fork\n- Start both demo and demo-ng apps and make sure they work correctly (make sure that no console errors are thrown on both iOS and Android)\n- From your fork create a PR targeting the \'master\' branch of this repository\n\nThank you for your contribution.\n\n# NativeScript Image Swipe widget \n[![Build Status](https://travis-ci.org/PeterStaev/nativescript-image-swipe.svg?branch=master)](https://travis-ci.org/PeterStaev/nativescript-image-swipe)\n[![npm downloads](https://img.shields.io/npm/dm/nativescript-image-swipe.svg)](https://www.npmjs.com/package/nativescript-image-swipe)\n[![npm downloads](https://img.shields.io/npm/dt/nativescript-image-swipe.svg)](https://www.npmjs.com/package/nativescript-image-swipe)\n[![npm](https://img.shields.io/npm/v/nativescript-image-swipe.svg)](https://www.npmjs.com/package/nativescript-image-swipe)\n\nA NativeScript widget that will allow you to easily swipe and zoom through a list of images. \n\n## Screenshot\n![Screenshot](https://raw.githubusercontent.com/PeterStaev/nativescript-image-swipe/master/docs/image-swipe.gif)\n\n## Installation\nRun the following command from the root of your project:\n\n`tns plugin add nativescript-image-swipe`\n\nThis command automatically installs the necessary files, as well as stores nativescript-image-swipe as a dependency in your project\'s package.json file.\n\n## Configuration\nThere is no additional configuration needed!\n\n## API\n\n### Events\n* **pageChanged**  \nTriggered when the user swipes to the next/previous image in the list. \n\n### Static Properties\n* **pageChangedEvent** - *String*  \nString value used when hooking to pageChanged event.\n\n### Instance Properties\n* **ios** - *[UIScrollView](https://developer.apple.com/reference/uikit/uiscrollview)*  \nGets the native iOS view that represents the user interface for this component. Valid only when running on iOS.\n\n* **android** - *[android.support.v4.view.ViewPager](https://developer.android.com/reference/android/support/v4/view/ViewPager.html)*  \nGets the native android widget that represents the user interface for this component. Valid only when running on Android OS.\n\n* **items** - *Array | ObservableArray*  \nGets or sets the items collection of the ImageSwipe. The items property can be set to an array or an object defining length and getItem(index) method.\n\n* **pageNumber** - *Number*  \nGets or sets the currently visible image.\n\n* **imageUrlProperty** - *string*  \nGets or sets the property inside the items\' object that defines the Url from where to load the images\n\n* **allowZoom** - *boolean (default: true)*  \nGets or sets whether zoom is enabled\n\n## Usage\nYou need to add `xmlns:is="nativescript-image-swipe"` to your page tag, and then simply use `<is:ImageSwipe/>` in order to add the widget to your page.\n```xml\n<!-- test-page.xml -->\n<Page xmlns="http://schemas.nativescript.org/tns.xsd" xmlns:is="nativescript-image-swipe" navigatingTo="navigatingTo">\n    <GridLayout>\n        <is:ImageSwipe items="{{ items }}" imageUrlProperty="imageUrl" \n                       pageNumber="{{ pageNumber }}" pageChanged="pageChanged" backgroundColor="#000000">\n        </is:ImageSwipe>\n    </GridLayout>\n</Page>\n```\n\n```typescript\n// test-page.ts\nimport { EventData, Observable } from "data/observable";\nimport { ObservableArray } from "data/observable-array";\nimport { Page } from "ui/page";\n\nimport { PageChangeEventData } from "nativescript-image-swipe";\n\nlet viewModel: Observable;\n\nexport function navigatingTo(args: EventData) {\n    const page = args.object as Page;\n    const items = new ObservableArray();\n\n    items.push({ imageUrl: "http://something.com/picture1.jpg" });\n    items.push({ imageUrl: "http://something.com/picture2.jpg" });\n    items.push({ imageUrl: "http://something.com/picture3.jpg" });\n    items.push({ imageUrl: "http://something.com/picture4.jpg" });\n    items.push({ imageUrl: "http://something.com/picture5.jpg" });\n\n    viewModel = new Observable();\n    viewModel.set("items", items);\n    viewModel.set("pageNumber", 3);\n\n    page.bindingContext = viewModel;\n}\n\nexport function pageChanged(e: PageChangeEventData) {\n    console.log(`Page changed to ${e.page}.`);\n}\n```\n\n## Usage in Angular\nIn order to use the `ImageSwipe` you must register it in **BOTH** your `main.ts` and `main.aot.ts`!\n\n```typescript\n// main.ts\nimport { platformNativeScriptDynamic } from "nativescript-angular/platform";\nimport { registerElement } from "nativescript-angular/element-registry";\n\nimport { AppModule } from "./app.module";\n\nregisterElement("ImageSwipe", () => require("nativescript-image-swipe/image-swipe").ImageSwipe);\n\nplatformNativeScriptDynamic().bootstrapModule(AppModule);\n```\n\n```html\n<!-- test.component.html -->\n<GridLayout>\n    <ImageSwipe [items]="items" imageUrlProperty="imageUrl" \n                [pageNumber]="pageNumber" (pageChanged)="pageChanged($event)" backgroundColor="#000000">\n    </ImageSwipe>\n</GridLayout>\n```\n\n```typescript\n// test.component.ts\nimport { Component, OnInit } from "@angular/core";\nimport { PageChangeEventData } from "nativescript-image-swipe";\n\n@Component({\n    selector: "demo",\n    moduleId: module.id,\n    templateUrl: "./test.component.html",\n})\nexport class ImageSwipeComponent implements OnInit {\n    public items: any[] = [];\n    public pageNumber: number = 3;\n\n    ngOnInit(): void {\n        this.items.push({ imageUrl: "http://something.com/picture1.jpg" });\n        this.items.push({ imageUrl: "http://something.com/picture2.jpg" });\n        this.items.push({ imageUrl: "http://something.com/picture3.jpg" });\n        this.items.push({ imageUrl: "http://something.com/picture4.jpg" });\n        this.items.push({ imageUrl: "http://something.com/picture5.jpg" });\n    }\n\n    public pageChanged(e: PageChangeEventData) {\n        console.log(`Page changed to ${e.page}.`);\n    }\n}\n```\n\n## Demos\nThis repository includes both Angular and plain NativeScript demos. In order to run those execute the following in your shell:\n```shell\n$ git clone https://github.com/peterstaev/nativescript-image-swipe\n$ cd nativescript-image-swipe\n$ npm install\n$ npm run demo-ios\n```\nThis will run the plain NativeScript demo project on iOS. If you want to run it on Android simply use the `-android` instead of the `-ios` sufix. \n\nIf you want to run the Angular demo simply use the `demo-ng-` prefix instead of `demo-`. \n\n## Donate\n[![Donate](https://img.shields.io/badge/paypal-donate-brightgreen.svg)](https://bit.ly/2AS9QKB)\n\n`bitcoin:14fjysmpwLvSsAskvLASw6ek5XfhTzskHC`\n\n![Donate](https://www.tangrainc.com/qr.png)\n'