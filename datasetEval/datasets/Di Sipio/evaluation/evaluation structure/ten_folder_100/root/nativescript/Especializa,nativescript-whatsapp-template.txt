b"# NativeScript WhatsApp Template ![apple](https://cdn3.iconfinder.com/data/icons/picons-social/57/16-apple-32.png) ![android](https://cdn3.iconfinder.com/data/icons/logos-3/228/android-32.png)\n\n[![NPM version][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n[![Dependencies][dependencies-image]][npm-url]\n[![DevDependencies][dev-dependencies-image]][npm-url]\n[![Twitter Follow][twitter-image]][twitter-url]\n\n[npm-image]:http://img.shields.io/npm/v/nativescript-whatsapp-template.svg\n[npm-url]:https://npmjs.org/package/nativescript-whatsapp-template\n[downloads-image]:http://img.shields.io/npm/dt/nativescript-whatsapp-template.svg\n[dependencies-image]:https://david-dm.org/Especializa/nativescript-whatsapp-template/status.svg\n[dev-dependencies-image]:https://david-dm.org/Especializa/nativescript-whatsapp-template/dev-status.svg\n[twitter-image]:https://img.shields.io/twitter/follow/especializa.svg?style=social&label=Follow%20us\n[twitter-url]:https://twitter.com/especializa\n\n## Installation\nFrom the command prompt, start a new Nativescript project doing:\n```sh\ntns create your-project-name --template nativescript-whatsapp-template\n```\n## Introduction\n[![N|Solid](https://udemy-images.udemy.com/course/750x422/1011174_0030_5.jpg)](https://www.udemy.com/angular-native)\n\nThis project is heavily based on [this repo](https://github.com/Especializa/nativesapp), created as part of the course:\n- [Aprenda Angular 2 + Nativescript e crie um WhatsApp](https://www.udemy.com/angular-native)\n**[CLICK HERE FOR ~90% OFF COUPON](https://www.udemy.com/angular-native/?couponCode=LANCAMENTO)**\n\nAt the moment, only available in Portuguese, but English version is coming soon.\nReach out to us on Twitter [![Twitter Follow][twitter-image]][twitter-url] if you want to push us to get it done sooner :)\n\n### First run\nRight after creating a project and then npm install, it should be ready to go. Just move into your project's folder and execute the normal `tns` command to run any app:\n```sh\ncd your-project-name\nnpm i\ntns run\n```\nAlternatively you can target any specifc platform:\n```sh\ntns run android\n```\n```sh\ntns run ios\n```\nThat's pretty much what you should expect to see for the initial screen:\n#### - Screenshot 1: Chats tab (iOS / Android)\n[![N|Solid](https://raw.githubusercontent.com/Especializa/nativesapp/master/app/tools/assets/screenshot-1.png)](https://www.udemy.com/angular-native)\n\nAnd that's the chat screen upon clicking on any chat item in the previous screen:\n#### - Screenshot 2: Chat screen (iOS / Android)\n[![N|Solid](https://raw.githubusercontent.com/Especializa/nativesapp/master/app/tools/assets/screenshot-2.png)](https://www.udemy.com/angular-native)\n### Removing initial data\nYou might want to remove all the dummy data as well as some boilerplate code. The content shown relies upon the service `core/chats.services.ts` inside your `app` folder. Just replace the content returned there with what you need.\n#### Emptying chats.services.ts\n```javascript\nimport { Injectable } from '@angular/core';\n\nimport { Chat } from './models/chat.model';\nimport { Message } from './models/message.model';\n\n@Injectable()\nexport class ChatsService {\n  get chats(): Chat[] {\n    return [];\n  }\n  getMessages(chat: Chat): Message[] {\n    return [];\n  }\n}\n```\nAnother advisable tweak is removing the line which slices the list of messages in the selected chat to get only a chunck of initial 50 ones. The reason for that is just to illustrate that not all messages should appear on landing on that screen, but we wouldn't like to sound too opinionated at this point telling you how to fetch and show your own data.\n#### Replace the slice command on messages-area.component.ts\n```diff\nexport class MessagesAreaComponent implements OnInit {\n  // ...\n  ngOnInit() {\n-    this.messages = this.messages.slice(0, 50);\n+    // your own code\n  }\n  // ...\n}\n```\n\n## Changelog\n- 1.0.0  Initial implementation\n\n## License\nApache License Version 2.0, January 2004\n"