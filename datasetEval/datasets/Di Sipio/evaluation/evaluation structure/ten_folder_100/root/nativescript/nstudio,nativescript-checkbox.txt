b'# NativeScript-CheckBox\n\n[![npm](https://img.shields.io/npm/v/@nstudio/nativescript-checkbox.svg)](https://www.npmjs.com/package/@nstudio/nativescript-checkbox)\n[![npm](https://img.shields.io/npm/dt/@nstudio/nativescript-checkbox.svg?label=npm%20downloads)](https://www.npmjs.com/package/@nstudio/nativescript-checkbox)\n\n# NativeScript CheckBox :white_check_mark:\n\nA NativeScript plugin for the native checkbox widget.\n\n#### Platform controls used:\n\n| Android                                                                                  | iOS                                                  |\n| ---------------------------------------------------------------------------------------- | ---------------------------------------------------- |\n| [Android CheckBox](https://developer.android.com/reference/android/widget/CheckBox.html) | [BEMCheckBox](http://cocoapods.org/pods/BEMCheckBox) |\n\n## Sample Usage\n\n| Android Sample                     | iOS Sample                            |\n| ---------------------------------- | ------------------------------------- |\n| ![Sample1](./screens/checkbox.gif) | ![Sample2](./screens/iosCheckbox.gif) |\n\n## Installation\n\nFrom your command prompt/terminal go to your app\'s root folder and execute:\n\n`tns plugin add @nstudio/nativescript-checkbox`\n\n## Usage\n\n###\n\n```XML\n<Page\n  xmlns="http://schemas.nativescript.org/tns.xsd"\n  xmlns:CheckBox="@nstudio/nativescript-checkbox" loaded="pageLoaded">\n  <ActionBar title="Native Checkbox" />\n  <StackLayout>\n    <CheckBox:CheckBox checked="{{ checkProp }}" text="{{ myCheckText }}" fillColor="{{ myCheckColor }}" id="myCheckbox" />\n    <CheckBox:CheckBox text="CheckBox Label" checked="false" />\n  </StackLayout>\n</Page>\n```\n\n###\n\n```typescript\n\nimport { CheckBox } from \'@nstudio/nativescript-checkbox\';\nimport { topmost } from \'tns-core-modules/ui/frame\';\n\npublic toggleCheck() {\n  const checkBox = topmost().getViewById(\'yourCheckBoxId\');\n  checkBox.toggle();\n}\n\npublic getCheckProp() {\n  const checkBox = topmost().getViewById(\'yourCheckBoxId\');\n  console.log(\'checked prop value = \' + checkBox.checked);\n}\n\n```\n\n### Angular Usage Sample:\n\n```typescript\nimport { TNSCheckBoxModule } from \'@nstudio/nativescript-checkbox/angular\';\n\n@NgModule({\n  imports: [TNSCheckBoxModule]\n  // etc.\n})\nexport class YourModule {}\n\n// component:\nexport class SomeComponent {\n  @ViewChild(\'CB1\') FirstCheckBox: ElementRef;\n  constructor() {}\n  public toggleCheck() {\n    this.FirstCheckBox.nativeElement.toggle();\n  }\n\n  public getCheckProp() {\n    console.log(\n      \'checked prop value = \' + this.FirstCheckBox.nativeElement.checked\n    );\n  }\n}\n```\n\n```html\n<StackLayout>\n  <CheckBox #CB1 text="CheckBox Label" checked="false"></CheckBox>\n  <button (tap)="toggleCheck()" text="Toggle it!"></button>\n  <button (tap)="getCheckProp()" text="Check Property"></button>\n</StackLayout>\n```\n\n### NativeScript-Vue Usage Sample\n\nIn your `main.js` (The file where the root Vue instance is created) register the element\n\n```js\nVue.registerElement(\n  \'CheckBox\',\n  () => require(\'@nstudio/nativescript-checkbox\').CheckBox,\n  {\n    model: {\n      prop: \'checked\',\n      event: \'checkedChange\'\n    }\n  }\n);\n```\n\nAnd in your template, use it as:\n\n```html\n<check-box :checked="isChecked" @checkedChange="isChecked = $event.value" />\n```\n\nUse `checked` instead of `v-model`. [See #99](https://github.com/nstudio/nativescript-checkbox/issues/99).\n\n## Properties\n\n- **checked** - boolean\n- **text** - text to use with the checkbox\n- **fillColor** - Color of the checkbox element\n- **boxType** - Either \'square\' (default) or \'circle\'. It\'s recommended to use \'circle\' for radiobuttons. Note that plugin version 3.0.0 switched the default for iOS to \'square\' for alignment with Android. Still want `circle` on iOS and `square` on Android? Just make the `boxType` value conditional.\n\n## Events\n\n- **checkedChange** - Use a reference to the CheckBox component to grab it\'s `checked` property when this event fires to see the new value.\n\n## API\n\n- **toggle()** - Change the checked state of the view to the inverse of its current state.\n\n## Css Styling\n\n- **color** - set the text label color\n- **font-size** - checkbox is sized to text from here : default 15\n- **border-width** - set the line width of the checkbox element: iOS only\n\n## Styling [Android]\n\n- **checkStyle** - set to the name of your drawable\n- **checkPadding** - set the padding of the checkbox\n\nAdd the following to `app/App_Resources/Android/drawable/checkbox_grey.xml`\n\n```xml\n<?xml version="1.0" encoding="utf-8"?>\n\n<selector xmlns:android="http://schemas.android.com/apk/res/android">\n    <item android:state_enabled="false" android:state_checked="true" android:drawable="@drawable/ic_checkbox_checked_incomplete" />\n    <item android:state_enabled="false" android:state_checked="false" android:drawable="@drawable/ic_checkbox_grey_incomplete" />\n    <item android:state_checked="true" android:drawable="@drawable/ic_checkbox_checked_grey"/>\n    <item android:state_checked="false" android:drawable="@drawable/ic_checkbox_grey" />\n</selector>\n```\n\n## Radiobuttons, anyone?\n\nWant to use radiobutton behavior for your checkboxes (only one option possible within a group)?\nSet `boxType="circle"` and check out the second tab in the [Angular demo](demo-ng/), here\'s a screenshot:\n\n<img src="./screens/radiobuttons.png" width="225px"/>\n\n## Running Demo Apps\n\n1. Execute from root: `cd src && npm run setup`\n2. For iOS Demo: `npm run demo.ios`\n\n- npm run demo.ng.ios\n- npm run demo.android (for android)\n- npm run demo.ng.android (for angular android)\n\n#### Contributors\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n\n| [<img src="https://avatars0.githubusercontent.com/u/6006148?v=3" width="100px;"/><br /><sub>Brad Martin</sub>](https://bradmartin.net/) | [<img src="https://avatars2.githubusercontent.com/u/1542376?v=3" width="100px;"/><br /><sub>Steve McNiven-Scott</sub>](https://github.com/sitefinitysteve) | [<img src="https://avatars3.githubusercontent.com/u/6695919?v=3" width="100px;"/><br /><sub>Osei Fortune</sub>](https://github.com/triniwiz) | [<img src="https://avatars2.githubusercontent.com/u/457187?v=3" width="100px;"/><br /><sub>Nathan Walker</sub>](https://github.com/NathanWalker) |\n| --------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------ |\n\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n'