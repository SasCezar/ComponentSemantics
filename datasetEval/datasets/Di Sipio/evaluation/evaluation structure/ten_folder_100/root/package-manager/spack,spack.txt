b'# <img src="https://cdn.rawgit.com/spack/spack/develop/share/spack/logo/spack-logo.svg" width="64" valign="middle" alt="Spack"/> Spack\n\n[![Build Status](https://travis-ci.org/spack/spack.svg?branch=develop)](https://travis-ci.org/spack/spack)\n[![codecov](https://codecov.io/gh/spack/spack/branch/develop/graph/badge.svg)](https://codecov.io/gh/spack/spack)\n[![Read the Docs](https://readthedocs.org/projects/spack/badge/?version=latest)](https://spack.readthedocs.io)\n[![Slack](https://spackpm.herokuapp.com/badge.svg)](https://spackpm.herokuapp.com)\n\nSpack is a multi-platform package manager that builds and installs\nmultiple versions and configurations of software. It works on Linux,\nmacOS, and many supercomputers. Spack is non-destructive: installing a\nnew version of a package does not break existing installations, so many\nconfigurations of the same package can coexist.\n\nSpack offers a simple "spec" syntax that allows users to specify versions\nand configuration options. Package files are written in pure Python, and\nspecs allow package authors to write a single script for many different\nbuilds of the same package.  With Spack, you can build your software\n*all* the ways you want to.\n\nSee the\n[Feature Overview](http://spack.readthedocs.io/en/latest/features.html)\nfor examples and highlights.\n\nTo install spack and your first package, make sure you have Python.\nThen:\n\n    $ git clone https://github.com/spack/spack.git\n    $ cd spack/bin\n    $ ./spack install zlib\n\nDocumentation\n----------------\n\n[**Full documentation**](http://spack.readthedocs.io/) is available, or\nrun `spack help` or `spack help --all`.\n\nTutorial\n----------------\n\nWe maintain a\n[**hands-on tutorial**](http://spack.readthedocs.io/en/latest/tutorial.html).\nIt covers basic to advanced usage, packaging, developer features, and large HPC\ndeployments.  You can do all of the exercises on your own laptop using a\nDocker container.\n\nFeel free to use these materials to teach users at your organization\nabout Spack.\n\nCommunity\n------------------------\n\nSpack is an open source project.  Questions, discussion, and\ncontributions are welcome. Contributions can be anything from new\npackages to bugfixes, documentation, or even new core features.\n\nResources:\n\n* **Slack workspace**: [spackpm.slack.com](https://spackpm.slack.com).\n  To get an invitation, [**click here**](https://spackpm.herokuapp.com).\n* **Mailing list**: [groups.google.com/d/forum/spack](https://groups.google.com/d/forum/spack)\n* **Twitter**: [@spackpm](https://twitter.com/spackpm). Be sure to\n  `@mention` us!\n\nContributing\n------------------------\nContributing to Spack is relatively easy.  Just send us a\n[pull request](https://help.github.com/articles/using-pull-requests/).\nWhen you send your request, make ``develop`` the destination branch on the\n[Spack repository](https://github.com/spack/spack).\n\nYour PR must pass Spack\'s unit tests and documentation tests, and must be\n[PEP 8](https://www.python.org/dev/peps/pep-0008/) compliant.  We enforce\nthese guidelines with [Travis CI](https://travis-ci.org/spack/spack).  To\nrun these tests locally, and for helpful tips on git, see our\n[Contribution Guide](http://spack.readthedocs.io/en/latest/contribution_guide.html).\n\nSpack uses a rough approximation of the\n[Git Flow](http://nvie.com/posts/a-successful-git-branching-model/)\nbranching model.  The ``develop`` branch contains the latest\ncontributions, and ``master`` is always tagged and points to the latest\nstable release.\n\nCode of Conduct\n------------------------\n\nPlease note that Spack has a\n[**Code of Conduct**](.github/CODE_OF_CONDUCT.md). By participating in\nthe Spack community, you agree to abide by its rules.\n\nAuthors\n----------------\nMany thanks go to Spack\'s [contributors](https://github.com/spack/spack/graphs/contributors).\n\nSpack was created by Todd Gamblin, tgamblin@llnl.gov.\n\n### Citing Spack\n\nIf you are referencing Spack in a publication, please cite the following paper:\n\n * Todd Gamblin, Matthew P. LeGendre, Michael R. Collette, Gregory L. Lee,\n   Adam Moody, Bronis R. de Supinski, and W. Scott Futral.\n   [**The Spack Package Manager: Bringing Order to HPC Software Chaos**](http://www.computer.org/csdl/proceedings/sc/2015/3723/00/2807623.pdf).\n   In *Supercomputing 2015 (SC\xe2\x80\x9915)*, Austin, Texas, November 15-20 2015. LLNL-CONF-669890.\n\nLicense\n----------------\n\nSpack is distributed under the terms of both the MIT license and the\nApache License (Version 2.0). Users may choose either license, at their\noption.\n\nAll new contributions must be made under both the MIT and Apache-2.0\nlicenses.\n\nSee [LICENSE-MIT](https://github.com/spack/spack/blob/develop/LICENSE-MIT),\n[LICENSE-APACHE](https://github.com/spack/spack/blob/develop/LICENSE-APACHE),\n[COPYRIGHT](https://github.com/spack/spack/blob/develop/COPYRIGHT), and\n[NOTICE](https://github.com/spack/spack/blob/develop/NOTICE) for details.\n\nSPDX-License-Identifier: (Apache-2.0 OR MIT)\n\nLLNL-CODE-647188\n'