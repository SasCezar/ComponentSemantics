b"# `psc-package`\n\n[![Build Status](https://travis-ci.org/purescript/psc-package.svg?branch=master)](https://travis-ci.org/purescript/psc-package)\n\n`psc-package` is an executable which helps manage PureScript dependencies via Git. It can be used directly, but it is also designed to be used by external tools.\n\n**See the [guide](https://psc-package.readthedocs.io/en/latest/) to learn how to use Psc-Package.**\n\n## Installation\n\n- Download the binary for your platform from [the releases page](https://github.com/purescript/psc-package/releases), and copy it somewhere on your PATH, or\n- Build from source, using `stack install`.\n\nIf you're a **Windows Chocolatey** user, then you can install `psc-package` from the [official repo](https://chocolatey.org/packages/psc-package):\n\n```\n$ choco install psc-package\n```\n\n## Usage\n\n```shell\n# install or update the dependencies listed in psc-package.json\n$ psc-package install\n\n# install or update the package and add it to psc-package.json if not listed\n$ psc-package install <package>\n\n# list available commands\n$ psc-package --help\n```\n\n## Design Goals\n\n- `psc-package` should enable simple package management without the need to run Node (compare with Bower).\n- `psc-package` should enable reproducible builds, at least as far as reproducing PureScript dependencies.\n- `psc-package` should have a good out-of-the-box user experience (compare with Stack in Haskell), while still supporting custom package sets for advanced use cases.\n- `psc-package` should only depend on tools which are available on all systems (for example, the Git client)\n"