b'# npm RFC Process\n\nThis document describes the RFC process for the [npm\nCLI](https://github.com/npm/cli), and provides a way for the [Community & Open Source Team]() and the\nwider community to have discussions about the features and direction of the\npackage manager! It is based on [the WeAllJS RFC process](https://wealljs.org/rfc-process) and the [Rust RFC process](https://github.com/rust-lang/rfcs), and, by extension, the [Yarn RFC process](https://github.com/yarnpkg/rfcs)\n\n## What\'s an RFC?\n\nThe name itself is a reference to the IETF\'s Request For Comments process, and\nbasically involves a document or series of documents which are drafted,\nreviewed, and eventually ratified (approved) by the npm team through discussion\namong those interested, both within and outside of the npm team.\n\nAn RFC can propose any change to the npm CLI itself, and may include npm\nregistry changes meant to support that CLI change.\n\nThis RFC process replaces feature requests in the main npm repository, and\nfeature requests made there will be redirected to the RFCs repository.\n\n## How do I create an RFC?\n\n* Fork https://github.com/npm/rfcs\n* Copy `accepted/0000-template.md` into `accepted/0000-your-rfc-name.md`\n* Fill in and edit the template with your proposal\n* Submit a PR to the `npm/rfcs` repo\n\n## How does review work?\n\nThe official place for discussion for a proposed RFC is its pull request.\nAnyone, both npm collaborators and non-collaborators, may participate in the\ndiscussion and ask questions and provide (constructive) feedback. Keep in mind\nthat only npm collaborators are able to ratify the RFC itself, even if other\nusers can comment.\n\nAll discussions surrounding an RFC are covered by the [npm Code of\nConduct](https://www.npmjs.com/policies/conduct). Please keep conversations\nconstructive, civil, and low-temperature. If tensions flare during discussion,\nthe npm team may, at its own discretion, moderate, remove, or\nedit posts, as well as locking the discussion on that PR or the entire RFCs\nrepository.\n\n## How do RFCs get ratified?\n\nAn RFC is ratified when there is consensus among npm collaborators that it\nshould be accepted. Once all collaborators have become aware of the RFC and had\na chance to comment on it, the PR, along with the RFC, will be merged and the\nRFC will be considered ratified.\n\nUntil an RFC is ratified, it\'s expected that its original author continue\ndiscussing it and integrating feedback into the document until it\'s ready.\n\nRFCs have a **minimum 24 hour waiting period** before being accepted or rejected.\nOnce an RFC has been reviewed on GitHub, with all interested collaborators\nhaving an opportunity to review it, and at least one npm collaborator has signed\noff on the changes, the PR will be accepted and all its connected changes\nmerged. There are two exceptions to the collaborator rule:\n\n* [@isaacs](https://github.com/isaacs) is considered an npm collaborator even if not an active code contributor, and thus has the ability to veto any proposal.\n* The npm registry team has complete control over what registry changes happen and are not subject to the consensus process: they get to decide whether the registry side of a feature gets implemented, where, and how, but they otherwise are not considered collaborators.\n\nIf it\'s specifically requested, or if the npm team determines that the topic of\nthe RFC demands extra attention and care because of its potential impact, an\nRFC\'s "ratification period" may be extended for as long as the participants and\nadmins feel is a reasonable length of time for consideration.\n\nThe RFC may be rejected altogether at the discretion of npm collaborators. They\nmay also be rejected if consensus has not been reached and discussion and\nprogress on the RFC itself remain inactive for too long.\n\n## What happens after ratification?\n\nOnce an RFC is ratified, the npm team agrees to merge a corresponding PR\nimplementing the described changes, provided it passes a standard code review by\nthe maintainers. It is **not** a guarantee of implementation, nor does it\nobligate the npm team itself to implement the requested changes. Actual\nintegration into the CLI may also be deferred to a later date, or a later\nsemver-major CLI release, at the npm collaborators\' discretion. All the RFC does\nis communicate the team\'s consensus to accept a change.\n\nWhen the changes described in an RFC have been implemented and merged into the\nrelevant repository (and thus, due to be released), the corresponding RFC will\nbe moved from `accepted/` to `implemented/`. If you\'d like to implement an\naccepted RFC, please make a PR in the appropriate repo and mention the RFC in\nthe PR. Feel free to do this even for work-in-progress code!\n\n## How do I change an RFC after ratification?\n\nRFCs themselves cannot be modified after ratification, but new RFCs can be\nproposed and ratified to amend or remove a change previously ratified through\nthe RFC process. These amendments will involve the exact same process as a\nregular RFC.\n'