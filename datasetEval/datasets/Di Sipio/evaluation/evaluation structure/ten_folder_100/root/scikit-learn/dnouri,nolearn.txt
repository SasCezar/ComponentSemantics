b"*nolearn* contains a number of wrappers and abstractions around\nexisting neural network libraries, most notably `Lasagne\n<http://lasagne.readthedocs.org/>`_, along with a few machine learning\nutility modules.  All code is written to be compatible with\n`scikit-learn <http://scikit-learn.org/>`_.\n\n.. note::\n\n  nolearn is currently unmaintained.  However, if you follow the\n  installation instructions, you should still be able to get it to\n  work (namely with library versions that are outdated at this point).\n\n  If you're looking for an alternative to *nolearn.lasagne*, a library\n  that integrates neural networks with scikit-learn, then take a look\n  at `skorch <https://github.com/skorch-dev/skorch>`_, which wraps\n  PyTorch for scikit-learn.\n\n\n.. image:: https://travis-ci.org/dnouri/nolearn.svg?branch=master\n    :target: https://travis-ci.org/dnouri/nolearn\n\nInstallation\n============\n\nWe recommend using `venv\n<https://docs.python.org/3/library/venv.html>`_ (when using Python 3)\nor `virtualenv\n<http://www.dabapps.com/blog/introduction-to-pip-and-virtualenv-python/>`_\n(Python 2) to install nolearn.\n\nnolearn comes with a list of known good versions of dependencies that\nwe test with in ``requirements.txt``.  To install the latest version\nof nolearn from Git along with these known good dependencies, run\nthese two commands::\n\n  pip install -r https://raw.githubusercontent.com/dnouri/nolearn/master/requirements.txt\n  pip install git+https://github.com/dnouri/nolearn.git\n\nDocumentation\n=============\n\nIf you're looking for how to use *nolearn.lasagne*, then there's two\nintroductory tutorials that you can choose from:\n\n- `Using convolutional neural nets to detect facial keypoints tutorial\n  <http://danielnouri.org/notes/2014/12/17/using-convolutional-neural-nets-to-detect-facial-keypoints-tutorial/>`_\n  with `code <https://github.com/dnouri/kfkd-tutorial>`__\n\n- `Training convolutional neural networks with nolearn\n  <http://nbviewer.ipython.org/github/dnouri/nolearn/blob/master/docs/notebooks/CNN_tutorial.ipynb>`_\n  \nFor specifics around classes and functions out of the *lasagne*\npackage, such as layers, updates, and nonlinearities, you'll want to\nlook at the `Lasagne project's documentation\n<http://lasagne.readthedocs.org/>`_.\n\n*nolearn.lasagne* comes with a `number of tests\n<https://github.com/dnouri/nolearn/tree/master/nolearn/lasagne/tests>`__\nthat demonstrate some of the more advanced features, such as networks\nwith merge layers, and networks with multiple inputs.\n\n`nolearn's own documentation <http://packages.python.org/nolearn/>`__\nis somewhat out of date at this point.  But there's more resources\nonline.\n\nFinally, there's a few presentations and examples from around the web.\nNote that some of these might need a specific version of nolearn and\nLasange to run:\n\n- Oliver D\xc3\xbcrr's `Convolutional Neural Nets II Hands On\n  <https://home.zhaw.ch/~dueo/bbs/files/ConvNets_24_April.pdf>`_ with\n  `code <https://github.com/oduerr/dl_tutorial/tree/master/lasagne>`__\n\n- Roelof Pieters' presentation `Python for Image Understanding\n  <http://www.slideshare.net/roelofp/python-for-image-understanding-deep-learning-with-convolutional-neural-nets>`_\n  comes with nolearn.lasagne code examples\n\n- Benjamin Bossan's `Otto Group Product Classification Challenge\n  using nolearn/lasagne\n  <https://github.com/ottogroup/kaggle/blob/master/Otto_Group_Competition.ipynb>`_\n\n- Kaggle's `instructions on how to set up an AWS GPU instance to run\n  nolearn.lasagne\n  <https://www.kaggle.com/c/facial-keypoints-detection/details/deep-learning-tutorial>`_\n  and the facial keypoint detection tutorial\n\n- `An example convolutional autoencoder\n  <https://github.com/mikesj-public/convolutional_autoencoder/blob/master/mnist_conv_autoencode.ipynb>`_\n\n- Winners of the saliency prediction task in the 2015 `LSUN Challenge\n  <http://lsun.cs.princeton.edu/>`_ have published their\n  `lasagne/nolearn-based code\n  <https://imatge.upc.edu/web/resources/end-end-convolutional-networks-saliency-prediction-software>`__.\n\n- The winners of the 2nd place in the `Kaggle Diabetic Retinopathy Detection\n  challenge <https://www.kaggle.com/c/diabetic-retinopathy-detection>`_ have\n  published their `lasagne/nolearn-based code\n  <https://github.com/sveitser/kaggle_diabetic>`__.\n\n- The winner of the 2nd place in the `Kaggle Right Whale Recognition\n  challenge <https://www.kaggle.com/c/noaa-right-whale-recognition>`_ has\n  published his `lasagne/nolearn-based code\n  <https://github.com/felixlaumon/kaggle-right-whale>`__.\n\nSupport\n=======\n\nIf you're seeing a bug with nolearn, please submit a bug report to the\n`nolearn issue tracker <https://github.com/dnouri/nolearn/issues>`_.\nMake sure to include information such as:\n\n- how to reproduce the error: show us how to trigger the bug using a\n  minimal example\n\n- what versions you are using: include the Git revision and/or version\n  of nolearn (and possibly Lasagne) that you're using\n\nPlease also make sure to search the issue tracker to see if your issue\nhas been encountered before or fixed.\n\nIf you believe that you're seeing an issue with Lasagne, which is a\ndifferent software project, please use the `Lasagne issue tracker\n<https://github.com/Lasagne/Lasagne/issues>`_ instead.\n\nThere's currently no user mailing list for nolearn.  However, if you\nhave a question related to Lasagne, you might want to try the `Lasagne\nusers list <https://groups.google.com/d/forum/lasagne-users>`_, or use\nStack Overflow.  Please refrain from contacting the authors for\nnon-commercial support requests directly; public forums are the right\nplace for these.\n\nCitation\n========\n\nCitations are welcome:\n\n    Daniel Nouri. 2014. *nolearn: scikit-learn compatible neural\n    network library* https://github.com/dnouri/nolearn\n\nLicense\n=======\n\nSee the `LICENSE.txt <LICENSE.txt>`_ file for license rights and\nlimitations (MIT).\n"