b'# GraKeL: A library for graph kernels\n\n[![Pypi Versions](https://img.shields.io/pypi/pyversions/grakel-dev.svg)](https://pypi.org/pypi/grakel-dev/)\n[![Coverage Status](https://codecov.io/gh/ysig/GraKeL/branch/develop/graph/badge.svg)](https://codecov.io/gh/ysig/GraKeL)\n[![Travis Status](https://travis-ci.org/ysig/GraKeL.svg?branch=develop)](https://travis-ci.org/ysig/GraKeL)\n[![Appveyor status](https://ci.appveyor.com/api/projects/status/sss4lpfxwgejn6de/branch/develop?svg=true)](https://ci.appveyor.com/project/ysig/grakel)\n[![CircleCI Status](https://circleci.com/gh/ysig/GraKeL/tree/develop.svg?style=shield)](https://circleci.com/gh/ysig/GraKeL/tree/develop)\n\n**GraKeL** is a library compatible with the project of [scikit-learn](http://scikit-learn.org/)\n\nInstallation\n=================\n\nThe GraKeL library requires:\n\n* Python (>=2.7, >=3.5)\n* NumPy (>=1.8.2)\n* SciPy (>=0.13.3)\n* Cython (>=0.27.3)\n* cvxopt (>=1.2.0) [optional: lovasz]\n* future (>=0.16.0) (for python 2.7)\n\n\nInstalling Dependencies\n-----------------------\n\nYou can install the dependencies as follows:\n\n```shell\n$ pip install extension>=extension_version\n```\n\nor\n\n```shell\n$ pip install -r requirements.txt\n```\n\nInstalling the *development-version*\n------------------------------------\n\nTo install the *development-version* using [**pip**](https://pypi.org/project/grakel-dev) execute:\n\n```shell\n$ pip install grakel-dev\n```\n\nGetting Started\n===============\nTo learn how to use the GraKeL api **as a user**, please read the [documentation][doc] on sections *Introduction* and *A longer introduction* (in case your are full of curiosity).\n\nInitialise a Kernel\n-------------------\n\n```python\nfrom grakel import GraphKernel\nwl_subtree = GraphKernel(kernel=[\'WL\', \'ST-WL\'], normalize=True)\n```\n\nProvide Input\n-------------\n\n- Custom Input\n\n  ```python\n  H2O = [[(0, 1), (0, 2), (2, 0), (1, 0)], # Directed Graph\n         {0: \'O\', 1: \'H\', 2: \'H\'}] # Node Labels\n  H3O = [[(0, 1), (0, 2), (0, 3), (3, 0), (2, 0), (1, 0)], # Directed Graph\n         {0: \'O\', 1: \'H\', 2: \'H\', 3:\'H\'}]] # Node Labels\n  X = [H2O, H3O] # List of Graph-Like Objects\n  ```\n\n- Download a Dataset\n\n  ```python\n  from grakel.datasets import fetch_dataset\n  MUTAG = fetch_dataset("MUTAG")\n  X = MUTAG.data # MUTAG.target contains class labels\n  ```\n\nCalculate Kernel Matrix\n-----------------------\n```python\n   K = wl_subtree.fit_transform(X) # len(X) x len(X): symmetric\n```\n\n\nTesting\n=======\nYou first need to build the package\'s c++ extensions\nlocally by executing:\n```shell\n$ python setup.py build_ext -i\n```\n\nTo test the package, execute:\n```shell\n$ nosetests\n```\n\nFor executing unit_tests or use a testing-interface for testing the `kernel` module:\n```shell\n$ python  grakel/tests/test_kernels.py --help\nusage: test_kernels.py [-h] [--verbose] [--problematic] [--slow]\n                       [--ignore_warnings] [--dataset DATASET] [--normalize]\n                       [--develop | --all | --main]\n\nA test file for all kernels\n\noptional arguments:\n  -h, --help         show this help message and exit\n  --verbose          print kernels with their outputs on stdout\n  --problematic      allow execution of problematic test cases in development\n  --slow             allow execution of slow test cases in development\n  --ignore_warnings  ignore warnings produced by kernel executions\n  --dataset DATASET  chose the datset you want the tests to be executed\n  --normalize        normalize the kernel output\n  --develop          execute only tests connected with current development\n  --all              execute all tests\n  --main             execute the main tests [default]\n\n```\n\nFor testing `graph_kernels`:\n```shell\n$ python grakel/tests/test_graph_kernel.py --help\nusage: test_graph_kernels.py [-h] [--verbose] [--problematic] [--slow]\n                             [--normalize] [--ignore_warnings]\n                             [--dataset DATASET] [--develop | --all | --main]\n\nA test file for all kernels\n\noptional arguments:\n  -h, --help         show this help message and exit\n  --verbose          print kernels with their outputs on stdout\n  --problematic      allow execution of problematic test cases in development\n  --slow             allow execution of slow test cases in development\n  --normalize        normalize the kernel output\n  --ignore_warnings  ignore warnings produced by kernel executions\n  --dataset DATASET  chose the datset you want the tests to be executed\n  --develop          execute only tests connected with current development\n  --all              execute all tests\n  --main             execute the main tests [default]\n\n```\n\nAnd for testing the `Graph` class:\n```shell\n$ python grakel/tests/test_graph.py --help\nusage: test_graph.py [-h] [--verbose] [--ignore_warnings]\n\nA test file for all `Graph` type objects\n\noptional arguments:\n  -h, --help         show this help message and exit\n  --verbose          verbose outputs on stdout\n  --ignore_warnings  ignore warnings produced by kernel executions\n```\nYou can also execute the kernel test locally through a *test-main-function* as\n\n```shell\n$ python -m grakel.tests\n```\n\nContributing\n============\nTo learn how to integrate your own kernel and how to contribute to the GraKeL project, please read the sections *Write your own kernel* and *Contributing* in the [Documentation][doc], respectively.\n\n[doc]: https://ysig.github.io/GraKeL/dev/\n[examples]: https://ysig.github.io/GraKeL/dev/auto_examples/index.html\n\nLicense\n=======\nGraKeL comes with a __BSD 3-clause__ license (as with scikit-learn).\nIt contains the C++ source code of [BLISS](http://www.tcs.hut.fi/Software/bliss) (a library for graph isomorphism) which is __LGPL__ licensed.\nFuthermore its optional dependency in the package of [cvxopt](https://cvxopt.org/) (a tool for solving convex-optimization problems) comes with a __GPL__ license.\n\nCitation\n========\nIf you use GraKeL in a scientific publication, please cite our paper:\n\n```\n@article{siglidis2018grakel,\n  title={GraKeL: A Graph Kernel Library in Python},\n  author={Siglidis, Giannis and Nikolentzos, Giannis and Limnios, Stratis and Giatsidis, Christos and Skianis, Konstantinos and Vazirgiannis, Michalis},\n  journal={arXiv preprint arXiv:1806.02193},\n  year={2018}\n}\n```\n'