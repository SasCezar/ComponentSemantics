b'# NimbusML\n\n`nimbusml` is a Python module that provides Python bindings for [ML.NET](https://github.com/dotnet/machinelearning). \n\nML.NET was originally developed in Microsoft Research and is used across many product groups in Microsoft like Windows, Bing, PowerPoint, Excel, and others. `nimbusml` was built to enable data science teams that are more familiar with Python to take advantage of ML.NET\'s functionality and performance. \n\n`nimbusml` enables training ML.NET pipelines or integrating ML.NET components directly into [scikit-learn](https://scikit-learn.org/stable/) pipelines. It adheres to existing `scikit-learn` conventions, allowing simple interoperability between `nimbusml` and `scikit-learn` components, while adding a suite of fast, highly optimized, and scalable algorithms, transforms, and components written in C++ and C\\#.\n\nSee examples below showing interoperability with `scikit-learn`. A more detailed example in the [documentation](https://docs.microsoft.com/en-us/nimbusml/tutorials/b_c-sentiment-analysis-3-combining-nimbusml-and-scikit-learn) shows how to use a `nimbusml` component in a `scikit-learn` pipeline, and create a pipeline using only `nimbusml` components.\n\n`nimbusml` supports `numpy.ndarray`, `scipy.sparse_cst`, and `pandas.DataFrame` as inputs. In addition, `nimbusml` also supports streaming from files without loading the dataset into memory with `FileDataStream`, which allows training on data significantly exceeding memory.\n\nDocumentation can be found [here](https://docs.microsoft.com/en-us/NimbusML/overview) and additional notebook samples can be found [here](https://github.com/Microsoft/NimbusML-Samples).\n\n## Installation\n\n`nimbusml` runs on Windows, Linux, and macOS. \n\n`nimbusml` requires Python **2.7**, **3.5**, **3.6**, **3.7** 64 bit version only.\n\nInstall `nimbusml` using `pip` with:\n\n```\npip install nimbusml\n```\n\n`nimbusml` has been reported to work on Windows 10, MacOS 10.13, Ubuntu 14.04, Ubuntu 16.04, Ubuntu 18.04, CentOS 7, and RHEL 7.\n\n## Examples\n\nHere is an example of how to train a model to predict sentiment from text samples (based on [this](https://github.com/dotnet/machinelearning/blob/master/README.md) ML.NET example). The full code for this example is [here](https://github.com/Microsoft/NimbusML-Samples/blob/master/samples/2.1%20%5BText%5D%20Sentiment%20Analysis%201%20-%20Data%20Loading%20with%20Pandas.ipynb).\n\n```python\nfrom nimbusml import Pipeline, FileDataStream\nfrom nimbusml.datasets import get_dataset\nfrom nimbusml.ensemble import FastTreesBinaryClassifier\nfrom nimbusml.feature_extraction.text import NGramFeaturizer\n\ntrain_file = get_dataset(\'gen_twittertrain\').as_filepath()\ntest_file = get_dataset(\'gen_twittertest\').as_filepath()\n\ntrain_data = FileDataStream.read_csv(train_file, sep=\'\\t\')\ntest_data = FileDataStream.read_csv(test_file, sep=\'\\t\')\n\npipeline = Pipeline([ # nimbusml pipeline\n    NGramFeaturizer(columns={\'Features\': [\'Text\']}),\n    FastTreesBinaryClassifier(feature=[\'Features\'], label=\'Label\')\n])\n\n# fit and predict\npipeline.fit(train_data)\nresults = pipeline.predict(test_data)\n```\n\nInstead of creating an `nimbusml` pipeline, you can also integrate components into scikit-learn pipelines:\n\n```python\nfrom sklearn.pipeline import Pipeline\nfrom nimbusml.datasets import get_dataset\nfrom nimbusml.ensemble import FastTreesBinaryClassifier\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nimport pandas as pd\n\ntrain_file = get_dataset(\'gen_twittertrain\').as_filepath()\ntest_file = get_dataset(\'gen_twittertest\').as_filepath()\n\ntrain_data = pd.read_csv(train_file, sep=\'\\t\')\ntest_data = pd.read_csv(test_file, sep=\'\\t\')\n\npipeline = Pipeline([ # sklearn pipeline\n    (\'tfidf\', TfidfVectorizer()), # sklearn transform\n    (\'clf\', FastTreesBinaryClassifier()) # nimbusml learner\n])\n\n# fit and predict\npipeline.fit(train_data["Text"], train_data["Label"])\nresults = pipeline.predict(test_data["Text"])\n```\n\n\n\nMany additional examples and tutorials can be found in the [documentation](https://docs.microsoft.com/en-us/NimbusML/overview).\n\n\n## Building\n\nTo build `nimbusml` from source please visit our [developer guide](docs/developers/developer-guide.md).\n\n## Contributing\n\nThe contributions guide can be found [here](CONTRIBUTING.md). \n\n## Support\n\nIf you have an idea for a new feature or encounter a problem, please open an [issue](https://github.com/Microsoft/NimbusML/issues/new) in this repository or ask your question on Stack Overflow.\n\n## License\n\nNimbusML is licensed under the [MIT license](LICENSE).\n\n'