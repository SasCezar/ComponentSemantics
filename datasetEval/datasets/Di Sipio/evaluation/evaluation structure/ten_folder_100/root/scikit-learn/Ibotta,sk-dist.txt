b'.. figure:: https://github.com/Ibotta/sk-dist/blob/master/doc/images/skdist.png\n   :alt: sk-dist\n\nsk-dist: Distributed scikit-learn meta-estimators in PySpark\n============================================================\n\n|License| |Build Status| |PyPI Package|\n\nWhat is it?\n-----------\n\n``sk-dist`` is a Python package for machine learning built on top of\n`scikit-learn <https://scikit-learn.org/stable/index.html>`__ and is\ndistributed under the `Apache 2.0 software\nlicense <https://github.com/Ibotta/sk-dist/blob/master/LICENSE>`__. The\n``sk-dist`` module can be thought of as "distributed scikit-learn" as\nits core functionality is to extend the ``scikit-learn`` built-in\n``joblib`` parallelization of meta-estimator training to\n`spark <https://spark.apache.org/>`__. A popular use case is the \nparallelization of grid search as shown here:\n\n.. figure:: https://github.com/Ibotta/sk-dist/blob/master/doc/images/grid_search.png\n   :alt: sk-dist\n\nCheck out the `blog post <https://medium.com/building-ibotta/train-sklearn-100x-faster-bec530fc1f45>`__ \nfor more information on the motivation and use cases of ``sk-dist``.\n\nMain Features\n-------------\n\n-  **Distributed Training** - ``sk-dist`` parallelizes the training of\n   ``scikit-learn`` meta-estimators with PySpark. This allows\n   distributed training of these estimators without any constraint on\n   the physical resources of any one machine. In all cases, spark\n   artifacts are automatically stripped from the fitted estimator. These\n   estimators can then be pickled and un-pickled for prediction tasks,\n   operating identically at predict time to their ``scikit-learn``\n   counterparts. Supported tasks are:\n\n   -  *Grid Search*: `Hyperparameter optimization\n      techniques <https://scikit-learn.org/stable/modules/grid_search.html>`__,\n      particularly\n      `GridSearchCV <https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html#sklearn.model_selection.GridSearchCV>`__\n      and\n      `RandomizedSeachCV <https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.RandomizedSearchCV.html#sklearn.model_selection.RandomizedSearchCV>`__,\n      are distributed such that each parameter set candidate is trained\n      in parallel.\n   -  *Multiclass Strategies*: `Multiclass classification\n      strategies <https://scikit-learn.org/stable/modules/multiclass.html>`__,\n      particularly\n      `OneVsRestClassifier <https://scikit-learn.org/stable/modules/generated/sklearn.multiclass.OneVsRestClassifier.html#sklearn.multiclass.OneVsRestClassifier>`__\n      and\n      `OneVsOneClassifier <https://scikit-learn.org/stable/modules/generated/sklearn.multiclass.OneVsOneClassifier.html#sklearn.multiclass.OneVsOneClassifier>`__,\n      are distributed such that each binary probelm is trained in\n      parallel.\n   -  *Tree Ensembles*: `Decision tree\n      ensembles <https://scikit-learn.org/stable/modules/ensemble.html#forests-of-randomized-trees>`__\n      for classification and regression, particularly\n      `RandomForest <https://scikit-learn.org/stable/modules/ensemble.html#random-forests>`__\n      and\n      `ExtraTrees <https://scikit-learn.org/stable/modules/ensemble.html#extremely-randomized-trees>`__,\n      are distributed such that each tree is trained in parallel.\n\n-  **Distributed Prediction** - ``sk-dist`` provides a prediction module\n   which builds `vectorized\n   UDFs <https://spark.apache.org/docs/latest/sql-pyspark-pandas-with-arrow.html#pandas-udfs-aka-vectorized-udfs>`__\n   for\n   `PySpark <https://spark.apache.org/docs/latest/api/python/index.html>`__\n   `DataFrames <https://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.DataFrame>`__\n   using fitted ``scikit-learn`` estimators. This distributes the\n   ``predict`` and ``predict_proba`` methods of ``scikit-learn``\n   estimators, enabling large scale prediction with ``scikit-learn``.\n-  **Feature Encoding** - ``sk-dist`` provides a flexible feature\n   encoding utility called ``Encoderizer`` which encodes mix-typed\n   feature spaces using either default behavior or user defined\n   customizable settings. It is particularly aimed at text features, but\n   it additionally handles numeric and dictionary type feature spaces.\n\nInstallation\n------------\n\nDependencies\n~~~~~~~~~~~~\n\n``sk-dist`` requires:\n\n-  `Python <https://www.python.org/>`__ (>= 3.5)\n-  `pandas <https://pandas.pydata.org/>`__ (>=0.19.0)\n-  `numpy <https://www.numpy.org/>`__ (>=1.17.0)\n-  `scipy <https://www.scipy.org/>`__ (>=1.3.1)\n-  `scikit-learn <https://scikit-learn.org/stable/>`__ (>=0.21.3)\n-  `joblib <https://joblib.readthedocs.io/en/latest/>`__ (>=0.11)\n\nsk-dist does not support Python 2\n\nSpark Dependencies\n~~~~~~~~~~~~~~~~~~\n\nMost ``sk-dist`` functionality requires a spark installation as well as\nPySpark. Some functionality can run without spark, so spark related\ndependencies are not required. The connection between sk-dist and spark\nrelies solely on a ``sparkContext`` as an argument to various\n``sk-dist`` classes upon instantiation.\n\nA variety of spark configurations and setups will work. It is left up to\nthe user to configure their own spark setup. The testing suite runs\n``spark 2.3`` and ``spark 2.4``, though any ``spark 2.0+`` versions \nare expected to work.\n\nAdditional spark related dependecies are ``pyarrow``, which is used only\nfor ``skdist.predict`` functions. This uses vectorized pandas UDFs which\nrequire ``pyarrow>=0.8.0``. Depending on the spark version, it may be\nnecessary to set\n``spark.conf.set("spark.sql.execution.arrow.enabled", "true")`` in the\nspark configuration.\n\nUser Installation\n~~~~~~~~~~~~~~~~~\n\nThe easiest way to install ``sk-dist`` is with ``pip``:\n\n::\n\n    pip install --upgrade sk-dist\n\nYou can also download the source code:\n\n::\n\n    git clone https://github.com/Ibotta/sk-dist.git\n\nTesting\n~~~~~~~\n\nWith ``pytest`` installed, you can run tests locally:\n\n::\n\n    pytest sk-dist\n\nExamples\n--------\n\nThe package contains numerous \n`examples <https://github.com/Ibotta/sk-dist/tree/master/examples>`__ \non how to use ``sk-dist`` in practice. Examples of note are:\n\n-  `Grid Search with XGBoost <https://github.com/Ibotta/sk-dist/blob/master/examples/search/xgb.py>`__\n-  `Spark ML Benchmark Comparison <https://github.com/Ibotta/sk-dist/blob/master/examples/search/spark_ml.py>`__\n-  `Encoderizer with 20 Newsgroups <https://github.com/Ibotta/sk-dist/blob/master/examples/encoder/basic_usage.py>`__\n-  `One-Vs-Rest vs One-Vs-One <https://github.com/Ibotta/sk-dist/blob/master/examples/multiclass/basic_usage.py>`__\n-  `Large Scale Sklearn Prediction with PySpark UDFs <https://github.com/Ibotta/sk-dist/blob/master/examples/predict/basic_usage.py>`_\n\nGradient Boosting\n-----------------\n\n``sk-dist`` has been tested with a number of popular gradient boosting packages that conform to the ``scikit-learn`` API. This \nincludes ``xgboost`` and ``catboost``. These will need to be installed in addition to ``sk-dist`` on all nodes of the spark \ncluster via a node bootstrap script. Version compatibility is left up to the user.\n\nSupport for ``lightgbm`` is not guaranteed, as it requires `additional installations <https://lightgbm.readthedocs.io/en/latest/Installation-Guide.html#linux>`__ on all \nnodes of the spark cluster. This may work given proper installation but has not beed tested with ``sk-dist``.\n\nBackground\n----------\n\nThe project was started at `Ibotta\nInc. <https://medium.com/building-ibotta>`__ on the machine learning\nteam and open sourced in 2019.\n\nIt is currently maintained by the machine learning team at Ibotta. Special\nthanks to those who contributed to ``sk-dist`` while it was initially\nin development at Ibotta:\n\n-  `Evan Harris <https://github.com/denver1117>`__\n-  `Nicole Woytarowicz <https://github.com/nicolele>`__\n-  `Mike Lewis <https://github.com/Mikelew88>`__\n-  `Bobby Crimi <https://github.com/rpcrimi>`__\n\n.. figure:: https://github.com/Ibotta/sk-dist/blob/master/doc/images/ibottaml.png\n   :alt: IbottaML\n\n.. |License| image:: https://img.shields.io/badge/License-Apache%202.0-blue.svg\n   :target: https://opensource.org/licenses/Apache-2.0\n.. |Build Status| image:: https://travis-ci.org/Ibotta/sk-dist.png?branch=master\n   :target: https://travis-ci.org/Ibotta/sk-dist\n.. |PyPI Package| image:: https://badge.fury.io/py/sk-dist.svg\n   :target: https://pypi.org/project/sk-dist/\n'