b'.. image:: https://img.shields.io/pypi/v/gplearn.svg\n    :target: https://pypi.python.org/pypi/gplearn/\n    :alt: Version\n.. image:: https://img.shields.io/pypi/l/gplearn.svg\n    :target: https://github.com/trevorstephens/gplearn/blob/master/LICENSE\n    :alt: License\n.. image:: https://readthedocs.org/projects/gplearn/badge/?version=stable\n    :target: http://gplearn.readthedocs.io/\n    :alt: Documentation Status\n.. image:: https://travis-ci.org/trevorstephens/gplearn.svg?branch=master\n    :target: https://travis-ci.org/trevorstephens/gplearn\n    :alt: Test Status\n.. image:: https://ci.appveyor.com/api/projects/status/wqq9xxaxuyyt7nya?svg=true\n    :target: https://ci.appveyor.com/project/trevorstephens/gplearn\n    :alt: Windows Test Status\n.. image:: https://coveralls.io/repos/trevorstephens/gplearn/badge.svg\n    :target: https://coveralls.io/r/trevorstephens/gplearn\n    :alt: Test Coverage\n.. image:: https://api.codacy.com/project/badge/Grade/19c43d7c42c44d15b1ec512656800d8d\n    :target: https://www.codacy.com/app/trevorstephens/gplearn\n    :alt: Code Health\n\n|\n\n.. image:: https://raw.githubusercontent.com/trevorstephens/gplearn/master/doc/logos/gplearn-wide.png\n    :target: https://github.com/trevorstephens/gplearn\n    :alt: Genetic Programming in Python, with a scikit-learn inspired API\n\n|\n\nWelcome to gplearn!\n===================\n\n`gplearn` implements Genetic Programming in Python, with a `scikit-learn <http://scikit-learn.org>`_ inspired and compatible API.\n\nWhile Genetic Programming (GP) can be used to perform a `very wide variety of tasks <http://www.genetic-programming.org/combined.php>`_, gplearn is purposefully constrained to solving symbolic regression problems. This is motivated by the scikit-learn ethos, of having powerful estimators that are straight-forward to implement.\n\nSymbolic regression is a machine learning technique that aims to identify an underlying mathematical expression that best describes a relationship. It begins by building a population of naive random formulas to represent a relationship between known independent variables and their dependent variable targets in order to predict new data. Each successive generation of programs is then evolved from the one that came before it by selecting the fittest individuals from the population to undergo genetic operations.\n\ngplearn retains the familiar scikit-learn `fit/predict` API and works with the existing scikit-learn `pipeline <https://scikit-learn.org/stable/modules/compose.html>`_ and `grid search <http://scikit-learn.org/stable/modules/grid_search.html>`_ modules. The package attempts to squeeze a lot of functionality into a scikit-learn-style API. While there are a lot of parameters to tweak, `reading the documentation <http://gplearn.readthedocs.io/>`_ should make the more relevant ones clear for your problem.\n\ngplearn supports regression through the SymbolicRegressor, binary classification with the SymbolicClassifier, as well as transformation for automated feature engineering with the SymbolicTransformer, which is designed to support regression problems, but should also work for binary classification.\n\ngplearn is built on scikit-learn and a fairly recent copy (0.20.0+) is required for `installation <http://gplearn.readthedocs.io/en/stable/installation.html>`_. If you come across any issues in running or installing the package, `please submit a bug report <https://github.com/trevorstephens/gplearn/issues>`_.\n\n'