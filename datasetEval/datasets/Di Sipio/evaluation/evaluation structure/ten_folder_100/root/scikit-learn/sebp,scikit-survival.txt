b'***************\nscikit-survival\n***************\n\n.. image:: https://img.shields.io/badge/license-GPLv3-blue.svg\n  :target: COPYING\n  :alt: License\n\n.. image:: https://travis-ci.org/sebp/scikit-survival.svg?branch=master\n  :target: https://travis-ci.org/sebp/scikit-survival\n  :alt: Travis CI Build Status\n\n.. image:: https://ci.appveyor.com/api/projects/status/github/sebp/scikit-survival?branch=master&svg=true\n   :target: https://ci.appveyor.com/project/sebp/scikit-survival\n   :alt: AppVeyor Build Status\n\n.. image:: https://codecov.io/gh/sebp/scikit-survival/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/sebp/scikit-survival\n  :alt: codecov\n\n.. image:: https://api.codacy.com/project/badge/Grade/17242004cdf6422c9a1052bf1ec63104\n   :target: https://www.codacy.com/app/sebp/scikit-survival?utm_source=github.com&utm_medium=referral&utm_content=sebp/scikit-survival&utm_campaign=badger\n   :alt: Codacy Badge\n\n.. image:: https://readthedocs.org/projects/scikit-survival/badge/?version=latest\n  :target: https://scikit-survival.readthedocs.io/en/latest/\n  :alt: readthedocs.org\n\n.. image:: https://zenodo.org/badge/77409504.svg\n   :target: https://zenodo.org/badge/latestdoi/77409504\n   :alt: Digital Object Identifier (DOI)\n\nscikit-survival is a Python module for `survival analysis`_\nbuilt on top of `scikit-learn <http://scikit-learn.org/>`_. It allows doing survival analysis\nwhile utilizing the power of scikit-learn, e.g., for pre-processing or doing cross-validation.\n\n=======================\nAbout Survival Analysis\n=======================\n\nThe objective in `survival analysis`_ (also referred to as reliability analysis in engineering)\nis to establish a connection between covariates and the time of an event.\nWhat makes survival analysis differ from traditional machine learning is the fact that\nparts of the training data can only be partially observed \xe2\x80\x93 they are *censored*.\n\nFor instance, in a clinical study, patients are often monitored for a particular time period,\nand events occurring in this particular period are recorded.\nIf a patient experiences an event, the exact time of the event can\nbe recorded \xe2\x80\x93 the patient\xe2\x80\x99s record is uncensored. In contrast, right censored records\nrefer to patients that remained event-free during the study period and\nit is unknown whether an event has or has not occurred after the study ended.\nConsequently, survival analysis demands for models that take\nthis unique characteristic of such a dataset into account.\n\n============\nRequirements\n============\n\n- Python 3.5 or later\n- cvxpy\n- cvxopt\n- numexpr\n- numpy 1.12 or later\n- pandas 0.21 or later\n- scikit-learn 0.20 or 0.21\n- scipy 1.0 or later\n- C/C++ compiler\n\n============\nInstallation\n============\n\nThe easiest way to get started is to install `Anaconda <https://www.anaconda.com/distribution/>`_\nand setup an environment::\n\n  conda install -c sebp scikit-survival\n\n----------------------\nInstalling from source\n----------------------\n\nFirst, create a new environment, named ``sksurv``::\n\n  python ci/list-requirements.py requirements/dev.txt > /tmp/requirements.txt\n  conda create -n sksurv -c sebp python=3 --file /tmp/requirements.txt\n\n\nTo work in this environment, ``activate`` it as follows::\n\n  source activate sksurv\n\nIf you are on Windows, run the above command without the ``source`` in the beginning.\n\nOnce you set up your build environment, install submodules into your local repository::\n\n  git submodule update --init\n\nThen compile the C/C++ extensions and install the package by running::\n\n  python setup.py install\n\nAlternatively, if you want to use the package without installing it,\nyou can compile the extensions in place by running::\n\n  python setup.py build_ext --inplace\n\nTo check everything is setup correctly run the test suite by executing::\n\n  py.test tests/\n\n========\nExamples\n========\n\nThe following examples are available as `Jupyter notebook <https://jupyter.org/>`_:\n\n* `Introduction to Survival Analysis with scikit-survival <https://nbviewer.jupyter.org/github/sebp/scikit-survival/blob/master/examples/00-introduction.ipynb>`_\n* `Pitfalls when Evaluating Survival Models <https://nbviewer.jupyter.org/github/sebp/scikit-survival/blob/master/examples/evaluating-survival-models.ipynb>`_\n* `Introduction to Kernel Survival Support Vector Machines <https://nbviewer.jupyter.org/github/sebp/scikit-survival/blob/master/examples/survival-svm.ipynb>`_\n\n=============\nDocumentation\n=============\n\nThe source code is thoroughly documented and a HTML version of the API documentation\nis available at https://scikit-survival.readthedocs.io/en/latest/.\n\nYou can generate the documentation yourself using `Sphinx <http://sphinx-doc.org/>`_ 1.4 or later::\n\n  cd doc\n  make html\n  xdg-open _build/html/index.html\n\n==========\nReferences\n==========\n\nPlease cite the following papers if you are using **scikit-survival**.\n\n1. P\xc3\xb6lsterl, S., Navab, N., and Katouzian, A.,\n`Fast Training of Support Vector Machines for Survival Analysis <http://link.springer.com/chapter/10.1007/978-3-319-23525-7_15>`_.\nMachine Learning and Knowledge Discovery in Databases: European Conference,\nECML PKDD 2015, Porto, Portugal,\nLecture Notes in Computer Science, vol. 9285, pp. 243-259 (2015)\n\n2. P\xc3\xb6lsterl, S., Navab, N., and Katouzian, A.,\n`An Efficient Training Algorithm for Kernel Survival Support Vector Machines <https://arxiv.org/abs/1611.07054>`_.\n4th Workshop on Machine Learning in Life Sciences,\n23 September 2016, Riva del Garda, Italy\n\n3. P\xc3\xb6lsterl, S., Gupta, P., Wang, L., Conjeti, S., Katouzian, A., and Navab, N.,\n`Heterogeneous ensembles for predicting survival of metastatic, castrate-resistant prostate cancer patients <http://doi.org/10.12688/f1000research.8231.1>`_.\nF1000Research, vol. 5, no. 2676 (2016).\n\n.. _survival analysis: https://en.wikipedia.org/wiki/Survival_analysis\n'