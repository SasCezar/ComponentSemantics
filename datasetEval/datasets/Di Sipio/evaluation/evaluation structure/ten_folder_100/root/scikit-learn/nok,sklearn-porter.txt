b'\n# sklearn-porter\n\n[![GitHub license](https://img.shields.io/pypi/l/sklearn-porter.svg)](https://raw.githubusercontent.com/nok/sklearn-porter/master/license.txt)\n[![Stack Overflow](https://img.shields.io/badge/stack%20overflow-ask%20questions-blue.svg)](https://stackoverflow.com/questions/tagged/sklearn-porter)\n[![Join the chat at https://gitter.im/nok/sklearn-porter](https://badges.gitter.im/nok/sklearn-porter.svg)](https://gitter.im/nok/sklearn-porter?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Twitter](https://img.shields.io/twitter/follow/darius_morawiec.svg?label=follow&style=popout)](https://twitter.com/darius_morawiec)\n\nTranspile trained [scikit-learn](https://github.com/scikit-learn/scikit-learn) estimators to C, Java, JavaScript and others.<br>It\'s recommended for limited embedded systems and critical applications where performance matters most.\n\n\n## Important\n\nWe\'re hard working on the [first major release](https://github.com/nok/sklearn-porter/tree/release/1.0.0) of sklearn-porter. <br>Until that we will just release bugfixes to the stable version.\n\n\n## Estimators\n\n<table>\n    <tbody>\n        <tr>\n            <td align="center" width="32%"><strong>Estimator</strong></td>\n            <td align="center" colspan="6" width="68%"><strong>Programming language</strong></td>\n        </tr>\n        <tr>\n            <td align="left" width="32%">Classifier</td>\n            <td align="center" width="13%">Java *</td>\n            <td align="center" width="11%">JS</td>\n            <td align="center" width="11%">C</td>\n            <td align="center" width="11%">Go</td>\n            <td align="center" width="11%">PHP</td>\n            <td align="center" width="11%">Ruby</td>\n        </tr>\n        <tr>\n            <td><a href="http://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html">svm.SVC</a></td>\n            <td align="center"><a href="examples/estimator/classifier/SVC/java/basics.pct.ipynb">\xe2\x9c\x93</a>, <a href="examples/estimator/classifier/SVC/java/basics_imported.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb5</a></td>\n            <td align="center"><a href="examples/estimator/classifier/SVC/js/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n            <td align="center"><a href="examples/estimator/classifier/SVC/c/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n            <td align="center"></td>\n            <td align="center"><a href="examples/estimator/classifier/SVC/php/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n            <td align="center"><a href="examples/estimator/classifier/SVC/ruby/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n        </tr>\n        <tr>\n            <td><a href="http://scikit-learn.org/stable/modules/generated/sklearn.svm.NuSVC.html">svm.NuSVC</a></td>\n            <td align="center"><a href="examples/estimator/classifier/NuSVC/java/basics.pct.ipynb">\xe2\x9c\x93</a>, <a href="examples/estimator/classifier/NuSVC/java/basics_imported.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb5</a></td>\n            <td align="center"><a href="examples/estimator/classifier/NuSVC/js/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n            <td align="center"><a href="examples/estimator/classifier/NuSVC/c/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n            <td align="center"></td>\n            <td align="center"><a href="examples/estimator/classifier/NuSVC/php/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n            <td align="center"><a href="examples/estimator/classifier/NuSVC/ruby/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n        </tr>\n        <tr>\n            <td><a href="http://scikit-learn.org/stable/modules/generated/sklearn.svm.LinearSVC.html">svm.LinearSVC</a></td>\n            <td align="center"><a href="examples/estimator/classifier/LinearSVC/java/basics.pct.ipynb">\xe2\x9c\x93</a>, <a href="examples/estimator/classifier/LinearSVC/java/basics_imported.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb5</a></td>\n            <td align="center"><a href="examples/estimator/classifier/LinearSVC/js/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n            <td align="center"><a href="examples/estimator/classifier/LinearSVC/c/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n            <td align="center"><a href="examples/estimator/classifier/LinearSVC/go/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n            <td align="center"><a href="examples/estimator/classifier/LinearSVC/php/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n            <td align="center"><a href="examples/estimator/classifier/LinearSVC/ruby/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n        </tr>\n        <tr>\n            <td><a href="http://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html">tree.DecisionTreeClassifier</a></td>\n            <td align="center"><a href="examples/estimator/classifier/DecisionTreeClassifier/java/basics.pct.ipynb">\xe2\x9c\x93</a>, <a href="examples/estimator/classifier/DecisionTreeClassifier/java/basics_embedded.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb1</a>, <a href="examples/estimator/classifier/DecisionTreeClassifier/java/basics_imported.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb5</a></td>\n            <td align="center"><a href="examples/estimator/classifier/DecisionTreeClassifier/js/basics.pct.ipynb">\xe2\x9c\x93</a>, <a href="examples/estimator/classifier/DecisionTreeClassifier/js/basics_embedded.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb1</a></td>\n            <td align="center"><a href="examples/estimator/classifier/DecisionTreeClassifier/c/basics.pct.ipynb">\xe2\x9c\x93</a>, <a href="examples/estimator/classifier/DecisionTreeClassifier/c/basics_embedded.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb1</a></td>\n            <td align="center"><a href="examples/estimator/classifier/DecisionTreeClassifier/go/basics.pct.ipynb">\xe2\x9c\x93</a>, <a href="examples/estimator/classifier/DecisionTreeClassifier/go/basics_embedded.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb1</a></td>\n            <td align="center"><a href="examples/estimator/classifier/DecisionTreeClassifier/php/basics.pct.ipynb">\xe2\x9c\x93</a>,  <a href="examples/estimator/classifier/DecisionTreeClassifier/php/basics_embedded.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb1</a></td>\n            <td align="center"><a href="examples/estimator/classifier/DecisionTreeClassifier/ruby/basics.pct.ipynb">\xe2\x9c\x93</a>, <a href="examples/estimator/classifier/DecisionTreeClassifier/ruby/basics_embedded.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb1</a></td>\n        </tr>\n        <tr>\n            <td><a href="http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html">ensemble.RandomForestClassifier</a></td>\n            <td align="center"><a href="examples/estimator/classifier/RandomForestClassifier/java/basics_embedded.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb1</a>, <a href="examples/estimator/classifier/RandomForestClassifier/java/basics_imported.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb5</a></td>\n            <td align="center"><a href="examples/estimator/classifier/RandomForestClassifier/js/basics_embedded.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb1</a></td>\n            <td align="center"><a href="examples/estimator/classifier/RandomForestClassifier/c/basics_embedded.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb1</a></td>\n            <td align="center">\xe2\x9c\x93 \xe1\xb4\xb1</td>\n            <td align="center">\xe2\x9c\x93 \xe1\xb4\xb1</td>\n            <td align="center">\xe2\x9c\x93 \xe1\xb4\xb1</td>\n        </tr>\n        <tr>\n            <td><a href="http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.ExtraTreesClassifier.html">ensemble.ExtraTreesClassifier</a></td>\n            <td align="center"><a href="examples/estimator/classifier/ExtraTreesClassifier/java/basics_embedded.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb1</a>, <a href="examples/estimator/classifier/ExtraTreesClassifier/java/basics_imported.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb5</a></td>\n            <td align="center"><a href="examples/estimator/classifier/ExtraTreesClassifier/js/basics.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb1</a></td>\n            <td align="center"><a href="examples/estimator/classifier/ExtraTreesClassifier/c/basics.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb1</a></td>\n            <td align="center"></td>\n            <td align="center">\xe2\x9c\x93 \xe1\xb4\xb1</td>\n            <td align="center">\xe2\x9c\x93 \xe1\xb4\xb1</td>\n        </tr>\n        <tr>\n            <td><a href="http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.AdaBoostClassifier.html">ensemble.AdaBoostClassifier</a></td>\n            <td align="center"><a href="examples/estimator/classifier/AdaBoostClassifier/java/basics_embedded.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb1</a>, <a href="examples/estimator/classifier/AdaBoostClassifier/java/basics_imported.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb5</a></td>\n            <td align="center"><a href="examples/estimator/classifier/AdaBoostClassifier/js/basics_embedded.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb1</a>, <a href="examples/estimator/classifier/AdaBoostClassifier/js/basics_imported.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb5</a></td>\n            <td align="center"><a href="examples/estimator/classifier/AdaBoostClassifier/c/basics_embedded.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb1</a></td>\n            <td align="center"></td>\n            <td align="center"></td>\n            <td align="center"></td>\n        </tr>\n        <tr>\n            <td><a href="http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html">neighbors.KNeighborsClassifier</a></td>\n            <td align="center"><a href="examples/estimator/classifier/KNeighborsClassifier/java/basics.pct.ipynb">\xe2\x9c\x93</a>, <a href="examples/estimator/classifier/KNeighborsClassifier/java/basics_imported.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb5</a></td>\n            <td align="center"><a href="examples/estimator/classifier/KNeighborsClassifier/js/basics.pct.ipynb">\xe2\x9c\x93</a>, <a href="examples/estimator/classifier/KNeighborsClassifier/js/basics_imported.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb5</a></td>\n            <td align="center"></td>\n            <td align="center"></td>\n            <td align="center"></td>\n            <td align="center"></td>\n        </tr>\n        <tr>\n            <td><a href="http://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.GaussianNB.html#sklearn.naive_bayes.GaussianNB">naive_bayes.GaussianNB</a></td>\n            <td align="center"><a href="examples/estimator/classifier/GaussianNB/java/basics.pct.ipynb">\xe2\x9c\x93</a>, <a href="examples/estimator/classifier/GaussianNB/java/basics_imported.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb5</a></td>\n            <td align="center"><a href="examples/estimator/classifier/GaussianNB/js/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n            <td align="center"></td>\n            <td align="center"></td>\n            <td align="center"></td>\n            <td align="center"></td>\n        </tr>\n        <tr>\n            <td><a href="http://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.BernoulliNB.html#sklearn.naive_bayes.BernoulliNB">naive_bayes.BernoulliNB</a></td>\n            <td align="center"><a href="examples/estimator/classifier/BernoulliNB/java/basics.pct.ipynb">\xe2\x9c\x93</a>, <a href="examples/estimator/classifier/BernoulliNB/java/basics_imported.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb5</a></td>\n            <td align="center"><a href="examples/estimator/classifier/BernoulliNB/js/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n            <td align="center"></td>\n            <td align="center"></td>\n            <td align="center"></td>\n            <td align="center"></td>\n        </tr>\n        <tr>\n            <td><a href="http://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html">neural_network.MLPClassifier</a></td>\n            <td align="center"><a href="examples/estimator/classifier/MLPClassifier/java/basics.pct.ipynb">\xe2\x9c\x93</a>, <a href="examples/estimator/classifier/MLPClassifier/java/basics_imported.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb5</a></td>\n            <td align="center"><a href="examples/estimator/classifier/MLPClassifier/js/basics.pct.ipynb">\xe2\x9c\x93</a>, <a href="examples/estimator/classifier/MLPClassifier/js/basics_imported.pct.ipynb">\xe2\x9c\x93 \xe1\xb4\xb5</a></td>\n            <td align="center"></td>\n            <td align="center"></td>\n            <td align="center"></td>\n            <td align="center"></td>\n        </tr>\n        <tr>\n            <td align="left" width="32%">Regressor</td>\n            <td align="center" width="13%">Java *</td>\n            <td align="center" width="11%">JS</td>\n            <td align="center" width="11%">C</td>\n            <td align="center" width="11%">Go</td>\n            <td align="center" width="11%">PHP</td>\n            <td align="center" width="11%">Ruby</td>\n        </tr>\n        <tr>\n            <td><a href="http://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPRegressor.html">neural_network.MLPRegressor</a></td>\n            <td align="center"></td>\n            <td align="center"><a href="examples/estimator/regressor/MLPRegressor/js/basics.pct.ipynb">\xe2\x9c\x93</a></td>\n            <td align="center"></td>\n            <td align="center"></td>\n            <td align="center"></td>\n            <td align="center"></td>\n        </tr>\n    </tbody>\n</table>\n\n\xe2\x9c\x93 = is full-featured,\xe3\x80\x80\xe1\xb4\xb1 = with embedded model data,\xe3\x80\x80\xe1\xb4\xb5 = with imported model data,\xe3\x80\x80* = default language\n\n\n## Installation\n\n### Stable\n\n[![Build Status stable branch](https://img.shields.io/travis/nok/sklearn-porter/stable.svg)](https://travis-ci.org/nok/sklearn-porter)\n[![PyPI](https://img.shields.io/pypi/v/sklearn-porter.svg)](https://pypi.python.org/pypi/sklearn-porter)\n[![PyPI](https://img.shields.io/pypi/pyversions/sklearn-porter.svg)](https://pypi.python.org/pypi/sklearn-porter)\n\n```bash\n$ pip install sklearn-porter\n```\n\n### Development\n\n[![Build Status master branch](https://img.shields.io/travis/nok/sklearn-porter/master.svg)](https://travis-ci.org/nok/sklearn-porter)\n\nIf you want the [latest changes](https://github.com/nok/sklearn-porter/blob/master/changelog.md#unreleased), you can install this package from the [master](https://github.com/nok/sklearn-porter/tree/master) branch:\n\n```bash\n$ pip uninstall -y sklearn-porter\n$ pip install --no-cache-dir https://github.com/nok/sklearn-porter/zipball/master\n```\n\n\n## Usage\n\n\n### Export\n\nThe following example demonstrates how you can transpile a [decision tree estimator](http://scikit-learn.org/stable/modules/tree.html#classification) to Java:\n\n```python\nfrom sklearn.datasets import load_iris\nfrom sklearn.tree import tree\nfrom sklearn_porter import Porter\n\n# Load data and train the classifier:\nsamples = load_iris()\nX, y = samples.data, samples.target\nclf = tree.DecisionTreeClassifier()\nclf.fit(X, y)\n\n# Export:\nporter = Porter(clf, language=\'java\')\noutput = porter.export(embed_data=True)\nprint(output)\n```\n\nThe exported [result](examples/estimator/classifier/DecisionTreeClassifier/java/basics_embedded.pct.py#L60-L110) matches the [official human-readable version](http://scikit-learn.org/stable/_images/iris.svg) of the decision tree.\n\n\n### Integrity\n\nYou should always check and compute the integrity between the original and the transpiled estimator:\n\n```python\n# ...\nporter = Porter(clf, language=\'java\')\n\n# Compute integrity score:\nintegrity = porter.integrity_score(X)\nprint(integrity)  # 1.0\n```\n\n\n### Prediction\n\nYou can compute the prediction(s) in the target programming language:\n\n```python\n# ...\nporter = Porter(clf, language=\'java\')\n\n# Prediction(s):\nY_java = porter.predict(X)\ny_java = porter.predict(X[0])\ny_java = porter.predict([1., 2., 3., 4.])\n```\n\n\n## Notebooks\n\nYou can run and test all notebooks by starting a Jupyter notebook server locally:\n\n```bash\n$ make open.examples\n$ make stop.examples\n```\n\n\n## CLI\n\nIn general you can use the porter on the command line:\n\n```\n$ porter <pickle_file> [--to <directory>]\n         [--class_name <class_name>] [--method_name <method_name>]\n         [--export] [--checksum] [--data] [--pipe]\n         [--c] [--java] [--js] [--go] [--php] [--ruby]\n         [--version] [--help]\n```\n\nThe following example shows how you can save a trained estimator to the [pickle format](http://scikit-learn.org/stable/modules/model_persistence.html#persistence-example):\n\n```python\n# ...\n\n# Extract estimator:\njoblib.dump(clf, \'estimator.pkl\', compress=0)\n```\n\nAfter that the estimator can be transpiled to JavaScript by using the following command:\n\n```bash\n$ porter estimator.pkl --js\n```\n\nThe target programming language is changeable on the fly:\n\n```bash\n$ porter estimator.pkl --c\n$ porter estimator.pkl --java\n$ porter estimator.pkl --php\n$ porter estimator.pkl --java\n$ porter estimator.pkl --ruby\n```\n\nFor further processing the argument `--pipe` can be used to pass the result:\n\n```bash\n$ porter estimator.pkl --js --pipe > estimator.js\n```\n\nFor instance the result can be minified by using [UglifyJS](https://github.com/mishoo/UglifyJS2):\n\n```bash\n$ porter estimator.pkl --js --pipe | uglifyjs --compress -o estimator.min.js\n```\n\n\n## Development\n\n\n### Environment\n\nYou have to install required modules for broader development:\n\n```bash\n$ make install.environment  # conda environment (optional)\n$ make install.requirements.development  # pip requirements\n```\n\nIndependently, the following compilers and intepreters are required to cover all tests:\n\n<table>\n    <thead>\n        <tr>\n            <td width="33%"><strong>Name</strong></td>\n            <td width="33%"><strong>Version</strong></td>\n            <td width="33%"><strong>Command</strong></td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td><a href="https://gcc.gnu.org">GCC</a></td>\n            <td><code>>=4.2</code></td>\n            <td><code>gcc --version</code></td>\n        </tr>\n        <tr>\n            <td><a href="https://java.com">Java</a></td>\n            <td><code>>=1.6</code></td>\n            <td><code>java -version</code></td>\n        </tr>\n        <tr>\n            <td><a href="http://www.php.net">PHP</a></td>\n            <td><code>>=5.6</code></td>\n            <td><code>php --version</code></td>\n        </tr>\n        <tr>\n            <td><a href="https://www.ruby-lang.org">Ruby</a></td>\n            <td><code>>=2.4.1</code></td>\n            <td><code>ruby --version</code></td>\n        </tr>\n        <tr>\n            <td><a href="https://golang.org">Go</a></td>\n            <td><code>>=1.7.4</code></td>\n            <td><code>go version</code></td>\n        </tr>\n        <tr>\n            <td><a href="https://nodejs.org">Node.js</a></td>\n            <td><code>>=6</code></td>\n            <td><code>node --version</code></td>\n        </tr>\n    </tbody>\n</table>\n\n\n### Testing\n\nThe tests cover module functions as well as matching predictions of transpiled estimators. Start all tests with:\n\n```bash\n$ make test\n```\n\nThe test files have a specific pattern: `\'[Algorithm][Language]Test.py\'`:\n\n```bash\n$ pytest tests -v -o python_files=\'RandomForest*Test.py\'\n$ pytest tests -v -o python_files=\'*JavaTest.py\'\n```\n\nWhile you are developing new features or fixes, you can reduce the test duration by changing the number of tests:\n\n```bash\n$ N_RANDOM_FEATURE_SETS=5 N_EXISTING_FEATURE_SETS=10 \\\n  pytest tests -v -o python_files=\'*JavaTest.py\'\n```\n\n\n### Quality\n\nIt\'s highly recommended to ensure the code quality. For that [Pylint](https://github.com/PyCQA/pylint/) is used. Start the linter with:\n\n```bash\n$ make lint\n```\n\n\n## Citation\n\nIf you use this implementation in you work, please add a reference/citation to the paper. You can use the following BibTeX entry:\n\n```\n@unpublished{skpodamo,\n  author = {Darius Morawiec},\n  title = {sklearn-porter},\n  note = {Transpile trained scikit-learn estimators to C, Java, JavaScript and others},\n  url = {https://github.com/nok/sklearn-porter}\n}\n```\n\n\n## License\n\nThe module is Open Source Software released under the [MIT](license.txt) license.\n\n\n## Questions?\n\nDon\'t be shy and feel free to contact me on [Twitter](https://twitter.com/darius_morawiec) or [Gitter](https://gitter.im/nok/sklearn-porter).\n'