b'SciKit-Learn Laboratory\n-----------------------\n\n.. image:: https://img.shields.io/travis/EducationalTestingService/skll/master.svg\n   :alt: Build status\n   :target: https://travis-ci.org/EducationalTestingService/skll\n\n.. image:: https://codecov.io/gh/EducationalTestingService/skll/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/EducationalTestingService/skll\n\n.. image:: https://img.shields.io/pypi/v/skll.svg\n   :target: https://pypi.org/project/skll/\n   :alt: Latest version on PyPI\n\n.. image:: https://img.shields.io/pypi/l/skll.svg\n   :alt: License\n\n.. image:: https://img.shields.io/conda/v/ets/skll.svg\n   :target: https://anaconda.org/ets/skll\n   :alt: Conda package for SKLL\n\n.. image:: https://img.shields.io/pypi/pyversions/skll.svg\n   :target: https://pypi.org/project/skll/\n   :alt: Supported python versions for SKLL\n\n.. image:: https://img.shields.io/badge/DOI-10.5281%2Fzenodo.12825-blue.svg\n   :target: http://dx.doi.org/10.5281/zenodo.12825\n   :alt: DOI for citing SKLL 1.0.0\n\n.. image:: https://mybinder.org/badge_logo.svg\n :target: https://mybinder.org/v2/gh/EducationalTestingService/skll/master?filepath=examples%2FTutorial.ipynb\n\n\nThis Python package provides command-line utilities to make it easier to run\nmachine learning experiments with scikit-learn.  One of the primary goals of\nour project is to make it so that you can run scikit-learn experiments without\nactually needing to write any code other than what you used to generate/extract\nthe features.\n\nInstallation\n~~~~~~~~~~~~\n\nYou can install using either ``pip`` or ``conda``. See details `here <https://skll.readthedocs.io/en/latest/getting_started.html>`__.\n\nRequirements\n~~~~~~~~~~~~\n\n-  Python 3.6+\n-  `beautifulsoup4 <http://www.crummy.com/software/BeautifulSoup/>`__\n-  `gridmap <https://pypi.org/project/gridmap/>`__ (only required if you plan\n   to run things in parallel on a DRMAA-compatible cluster)\n-  `joblib <https://pypi.org/project/joblib/>`__\n-  `pandas <http://pandas.pydata.org>`__\n-  `ruamel.yaml <http://yaml.readthedocs.io/en/latest/overview.html>`__\n-  `scikit-learn <http://scikit-learn.org/stable/>`__\n-  `seaborn <http://seaborn.pydata.org>`__\n-  `tabulate <https://pypi.org/project/tabulate/>`__\n\nCommand-line Interface\n~~~~~~~~~~~~~~~~~~~~~~\n\nThe main utility we provide is called ``run_experiment`` and it can be used to\neasily run a series of learners on datasets specified in a configuration file\nlike:\n\n.. code:: ini\n\n  [General]\n  experiment_name = Titanic_Evaluate_Tuned\n  # valid tasks: cross_validate, evaluate, predict, train\n  task = evaluate\n\n  [Input]\n  # these directories could also be absolute paths\n  # (and must be if you\'re not running things in local mode)\n  train_directory = train\n  test_directory = dev\n  # Can specify multiple sets of feature files that are merged together automatically\n  featuresets = [["family.csv", "misc.csv", "socioeconomic.csv", "vitals.csv"]]\n  # List of scikit-learn learners to use\n  learners = ["RandomForestClassifier", "DecisionTreeClassifier", "SVC", "MultinomialNB"]\n  # Column in CSV containing labels to predict\n  label_col = Survived\n  # Column in CSV containing instance IDs (if any)\n  id_col = PassengerId\n\n  [Tuning]\n  # Should we tune parameters of all learners by searching provided parameter grids?\n  grid_search = true\n  # Function to maximize when performing grid search\n  objectives = [\'accuracy\']\n\n  [Output]\n  # Also compute the area under the ROC curve as an additional metric\n  metrics = [\'roc_auc\']\n  # The following can also be absolute paths\n  log = output\n  results = output\n  predictions = output\n  probability = true\n  models = output\n\nFor more information about getting started with ``run_experiment``, please check\nout `our tutorial <https://skll.readthedocs.org/en/latest/tutorial.html>`__, or\n`our config file specs <https://skll.readthedocs.org/en/latest/run_experiment.html>`__.\n\nYou can also follow this `interactive Jupyter tutorial <https://mybinder.org/v2/gh/AVajpayeeJr/skll/feature/448-interactive-binder?filepath=examples>`__. \n\nWe also provide utilities for:\n\n-  `converting between machine learning toolkit formats <https://skll.readthedocs.org/en/latest/utilities.html#skll-convert>`__\n   (e.g., ARFF, CSV, MegaM)\n-  `filtering feature files <https://skll.readthedocs.org/en/latest/utilities.html#filter-features>`__\n-  `joining feature files <https://skll.readthedocs.org/en/latest/utilities.html#join-features>`__\n-  `other common tasks <https://skll.readthedocs.org/en/latest/utilities.html>`__\n\n\nPython API\n~~~~~~~~~~\n\nIf you just want to avoid writing a lot of boilerplate learning code, you can\nalso use our simple Python API which also supports pandas DataFrames.\nThe main way you\'ll want to use the API is through\nthe ``Learner`` and ``Reader`` classes. For more details on our API, see\n`the documentation <https://skll.readthedocs.org/en/latest/api.html>`__.\n\nWhile our API can be broadly useful, it should be noted that the command-line\nutilities are intended as the primary way of using SKLL.  The API is just a nice\nside-effect of our developing the utilities.\n\n\nA Note on Pronunciation\n~~~~~~~~~~~~~~~~~~~~~~~\n\n.. image:: doc/skll.png\n   :alt: SKLL logo\n   :align: right\n\n.. container:: clear\n\n  .. image:: doc/spacer.png\n\nSciKit-Learn Laboratory (SKLL) is pronounced "skull": that\'s where the learning\nhappens.\n\nTalks\n~~~~~\n\n-  *Simpler Machine Learning with SKLL 1.0*, Dan Blanchard, PyData NYC 2014 (`video <https://www.youtube.com/watch?v=VEo2shBuOrc&feature=youtu.be&t=1s>`__ | `slides <http://www.slideshare.net/DanielBlanchard2/py-data-nyc-2014>`__)\n-  *Simpler Machine Learning with SKLL*, Dan Blanchard, PyData NYC 2013 (`video <http://vimeo.com/79511496>`__ | `slides <http://www.slideshare.net/DanielBlanchard2/simple-machine-learning-with-skll>`__)\n\nBooks\n~~~~~\n\nSKLL is featured in `Data Science at the Command Line <http://datascienceatthecommandline.com>`__\nby `Jeroen Janssens <http://jeroenjanssens.com>`__.\n\nChangelog\n~~~~~~~~~\n\nSee `GitHub releases <https://github.com/EducationalTestingService/skll/releases>`__.\n\nContribute\n~~~~~~~~~~\n\nThank you for your interest in contributing to SKLL! See `CONTRIBUTING.md <https://github.com/EducationalTestingService/skll/blob/master/CONTRIBUTING.md>`__ for instructions on how to get started.\n'