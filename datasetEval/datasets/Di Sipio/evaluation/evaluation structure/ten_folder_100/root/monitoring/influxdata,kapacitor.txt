b'# Kapacitor [![Circle CI](https://circleci.com/gh/influxdata/kapacitor/tree/master.svg?style=svg&circle-token=78c97422cf89526309e502a290c230e8a463229f)](https://circleci.com/gh/influxdata/kapacitor/tree/master) [![Docker pulls](https://img.shields.io/docker/pulls/library/kapacitor.svg)](https://hub.docker.com/_/kapacitor/)\nOpen source framework for processing, monitoring, and alerting on time series data\n\n# Installation\n\nKapacitor has two binaries:\n\n* kapacitor \xe2\x80\x93 a CLI program for calling the Kapacitor API.\n* kapacitord \xe2\x80\x93 the Kapacitor server daemon.\n\nYou can either download the binaries directly from the [downloads](https://influxdata.com/downloads/#kapacitor) page or go get them:\n\n```sh\ngo get github.com/influxdata/kapacitor/cmd/kapacitor\ngo get github.com/influxdata/kapacitor/cmd/kapacitord\n```\n\n# Configuration\nAn example configuration file can be found [here](https://github.com/influxdata/kapacitor/blob/master/etc/kapacitor/kapacitor.conf)\n\nKapacitor can also provide an example config for you using this command:\n\n```sh\nkapacitord config\n```\n\n\n# Getting Started\n\nThis README gives you a high level overview of what Kapacitor is and what its like to use it. As well as some details of how it works.\nTo get started using Kapacitor see [this guide](https://docs.influxdata.com/kapacitor/latest/introduction/getting_started/). After you finish the getting started exercise you can check out the [TICKscripts](https://github.com/influxdata/kapacitor/tree/master/examples/telegraf) for different Telegraf plugins.\n\n# Basic Example\n\nKapacitor uses a DSL named [TICKscript](https://docs.influxdata.com/kapacitor/latest/tick/) to define tasks.\n\nA simple TICKscript that alerts on high cpu usage looks like this:\n\n```javascript\nstream\n    |from()\n        .measurement(\'cpu_usage_idle\')\n        .groupBy(\'host\')\n    |window()\n        .period(1m)\n        .every(1m)\n    |mean(\'value\')\n    |eval(lambda: 100.0 - "mean")\n        .as(\'used\')\n    |alert()\n        .message(\'{{ .Level}}: {{ .Name }}/{{ index .Tags "host" }} has high cpu usage: {{ index .Fields "used" }}\')\n        .warn(lambda: "used" > 70.0)\n        .crit(lambda: "used" > 85.0)\n\n        // Send alert to hander of choice.\n\n        // Slack\n        .slack()\n        .channel(\'#alerts\')\n\n        // VictorOps\n        .victorOps()\n        .routingKey(\'team_rocket\')\n\n        // PagerDuty\n        .pagerDuty()\n```\n\nPlace the above script into a file `cpu_alert.tick` then run these commands to start the task:\n\n```sh\n# Define the task (assumes cpu data is in db \'telegraf\')\nkapacitor define \\\n    cpu_alert \\\n    -type stream \\\n    -dbrp telegraf.default \\\n    -tick ./cpu_alert.tick\n# Start the task\nkapacitor enable cpu_alert\n```\n\nFor more complete examples see the [documentation](https://docs.influxdata.com/kapacitor/latest/examples/).\n'