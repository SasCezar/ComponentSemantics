b"# Prometheus\n\n[![CircleCI](https://circleci.com/gh/prometheus/prometheus/tree/master.svg?style=shield)][circleci]\n[![Docker Repository on Quay](https://quay.io/repository/prometheus/prometheus/status)][quay]\n[![Docker Pulls](https://img.shields.io/docker/pulls/prom/prometheus.svg?maxAge=604800)][hub]\n[![Go Report Card](https://goreportcard.com/badge/github.com/prometheus/prometheus)](https://goreportcard.com/report/github.com/prometheus/prometheus)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/486/badge)](https://bestpractices.coreinfrastructure.org/projects/486)\n[![fuzzit](https://app.fuzzit.dev/badge?org_id=prometheus&branch=master)](https://fuzzit.dev)\n\nVisit [prometheus.io](https://prometheus.io) for the full documentation,\nexamples and guides.\n\nPrometheus, a [Cloud Native Computing Foundation](https://cncf.io/) project, is a systems and service monitoring system. It collects metrics\nfrom configured targets at given intervals, evaluates rule expressions,\ndisplays the results, and can trigger alerts if some condition is observed\nto be true.\n\nPrometheus's main distinguishing features as compared to other monitoring systems are:\n\n- a **multi-dimensional** data model (timeseries defined by metric name and set of key/value dimensions)\n- a **flexible query language** to leverage this dimensionality\n- no dependency on distributed storage; **single server nodes are autonomous**\n- timeseries collection happens via a **pull model** over HTTP\n- **pushing timeseries** is supported via an intermediary gateway\n- targets are discovered via **service discovery** or **static configuration**\n- multiple modes of **graphing and dashboarding support**\n- support for hierarchical and horizontal **federation**\n\n## Architecture overview\n\n![](https://cdn.jsdelivr.net/gh/prometheus/prometheus@c34257d069c630685da35bcef084632ffd5d6209/documentation/images/architecture.svg)\n\n## Install\n\nThere are various ways of installing Prometheus.\n\n### Precompiled binaries\n\nPrecompiled binaries for released versions are available in the\n[*download* section](https://prometheus.io/download/)\non [prometheus.io](https://prometheus.io). Using the latest production release binary\nis the recommended way of installing Prometheus.\nSee the [Installing](https://prometheus.io/docs/introduction/install/)\nchapter in the documentation for all the details.\n\nDebian packages [are available](https://packages.debian.org/sid/net/prometheus).\n\n### Docker images\n\nDocker images are available on [Quay.io](https://quay.io/repository/prometheus/prometheus) or [Docker Hub](https://hub.docker.com/r/prom/prometheus/).\n\nYou can launch a Prometheus container for trying it out with\n\n    $ docker run --name prometheus -d -p 127.0.0.1:9090:9090 prom/prometheus\n\nPrometheus will now be reachable at http://localhost:9090/.\n\n### Building from source\n\nTo build Prometheus from the source code yourself you need to have a working\nGo environment with [version 1.13 or greater installed](https://golang.org/doc/install).\nYou will also need to have [Node.js](https://nodejs.org/) and [Yarn](https://yarnpkg.com/)\ninstalled in order to build the frontend assets.\n\nYou can directly use the `go` tool to download and install the `prometheus`\nand `promtool` binaries into your `GOPATH`:\n\n    $ go get github.com/prometheus/prometheus/cmd/...\n    $ prometheus --config.file=your_config.yml\n\n*However*, when using `go get` to build Prometheus, Prometheus will expect to be able to\nread its web assets from local filesystem directories under `web/ui/static` and\n`web/ui/templates`. In order for these assets to be found, you will have to run Prometheus\nfrom the root of the cloned repository. Note also that these directories do not include the\nnew experimental React UI unless it has been built explicitly using `make assets` or `make build`.\n\nAn example of the above configuration file can be found [here.](https://github.com/prometheus/prometheus/blob/master/documentation/examples/prometheus.yml)\n\nYou can also clone the repository yourself and build using `make build`, which will compile in\nthe web assets so that Prometheus can be run from anywhere:\n\n    $ mkdir -p $GOPATH/src/github.com/prometheus\n    $ cd $GOPATH/src/github.com/prometheus\n    $ git clone https://github.com/prometheus/prometheus.git\n    $ cd prometheus\n    $ make build\n    $ ./prometheus --config.file=your_config.yml\n\nThe Makefile provides several targets:\n\n  * *build*: build the `prometheus` and `promtool` binaries (includes building and compiling in web assets)\n  * *test*: run the tests\n  * *test-short*: run the short tests\n  * *format*: format the source code\n  * *vet*: check the source code for common errors\n  * *docker*: build a docker container for the current `HEAD`\n\n## React UI Development\n\nFor more information on building, running, and developing on the new React-based UI, see the React app's [README.md](https://github.com/prometheus/prometheus/blob/master/web/ui/react-app/README.md).\n\n## More information\n\n  * The source code is periodically indexed: [Prometheus Core](https://godoc.org/github.com/prometheus/prometheus).\n  * You will find a CircleCI configuration in `.circleci/config.yml`.\n  * See the [Community page](https://prometheus.io/community) for how to reach the Prometheus developers and users on various communication channels.\n\n## Contributing\n\nRefer to [CONTRIBUTING.md](https://github.com/prometheus/prometheus/blob/master/CONTRIBUTING.md)\n\n## License\n\nApache License 2.0, see [LICENSE](https://github.com/prometheus/prometheus/blob/master/LICENSE).\n\n\n[hub]: https://hub.docker.com/r/prom/prometheus/\n[circleci]: https://circleci.com/gh/prometheus/prometheus\n[quay]: https://quay.io/repository/prometheus/prometheus\n"