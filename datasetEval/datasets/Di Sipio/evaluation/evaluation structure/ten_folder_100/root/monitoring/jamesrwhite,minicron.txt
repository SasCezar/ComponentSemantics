b"# minicron\n\n[![Build Status](http://img.shields.io/travis/jamesrwhite/minicron.svg)](http://travis-ci.org/jamesrwhite/minicron)\n[![Code Climate](https://api.codeclimate.com/v1/badges/7e368b7ec3ca01bebba7/maintainability)](https://codeclimate.com/github/jamesrwhite/minicron/maintainability)\n\nminicron makes it simple to monitor your cron jobs and ensure they are running both correctly and on schedule.\n\n### Sponsors\n\n- If you are looking for a cloud-based monitoring service and dashboard for your cron jobs I recommend [Cronitor](https://cronitor.io).\n\n### Project Status\n\n> **tl;dr: minicron is not being actively worked on at present.**\n>\n> The latest stable release is \n> [v0.9.6](https://github.com/jamesrwhite/minicron/tree/v0.9.6), but\n> `0.9.x` is not being actively developed/supported, I will accept small bug fixes but no new features.\n>\n> This branch (master) is the current state of progress towards a v1.0 release, I do intend to continue\n> working on minicron but don't have as much spare time at the moment as I did in the past to dedicate to it.\n>\n> After thinking about the future of minicron and its long overdue 1.0\n> release I've decided to focus it solely on the monitoring of cron jobs and doing\n> that really well and leave the management side [to](https://www.chef.io)\n> [other](https://puppet.com/) [tools](https://www.ansible.com/). As such all\n> the SSH based management of jobs has been removed.\n\n- [Overview](#overview)\n- [Background](#background)\n- [Features](#features)\n- [Requirements](#requirements)\n- [Installation](#installation)\n- [Usage](#usage)\n- [Versioning](#versioning)\n- [Contributing](#contributing)\n- [Support](#support)\n- [Credit](#credit)\n- [License](#license)\n\n## Overview\n\nminicron runs your jobs via its easy to install client which lives on your server and relays the job data back to the\nserver (web ui) where you can view it and set up alerts to ensure the job is running correctly.\n\n## Screenshots\n\n```\nTODO: generate new screenshots for 1.0\n```\n\n## Background\n\nI initially developed minicron as part of my dissertation at university in 2014. The motivation for developing minicron comes\nlargely from my experience and frustrations using cron both in a personal and professional capacity.\n\n## Features\n\n- Web UI\n  - GUI for cron schedule create/read/update\n  - View output/status as jobs run\n  - Historical data for all job executions\n- Alerts when jobs executions are missed or fail via:\n  - Email\n  - SMS ([using Twilio](https://www.twilio.com))\n  - [PagerDuty](http://www.pagerduty.com) (SMS, Phone, Mobile Push Notifications and Email)\n  - [Amazon Simple Notification Service](https://aws.amazon.com/sns)\n  - [Slack](https://slack.com)\n\n## Requirements\n\n#### OS\n\n*Should* run on OSX and any Linux/BSD based OS.\n\n#### Database\n\n- SQLite\n- MySQL\n- PostgreSQL\n\n#### Web Server / Reverse Proxy\n\n#### Nginx\nA simple [example config](server/config/nginx.conf) for nginx is provided.\n\n#### Apache\nIf you're using apache as your reverse proxy you need to ensure you have the following modules installed:\n- `libapache2-mod-proxy-html`\n- `apache2-utils`\n\nRun the following to enable them and then restart apache\n```a2enmod proxy proxy_html proxy_http xml2enc```\n\nA simple [example config](server/config/apache.conf) for apache is provided.\n\n## Installation\n\n```\nTODO: update for 1.0\n```\n\n## Usage\n\n#### Run a command\n\n````bash\nminicron run 'mysqldump db > backup.sql'\n````\n\nThe global ````--verbose```` option can also be passed to the ````run```` argument like so\n\n````bash\nminicron run --verbose ls\n````\n\nYou can also run a command in 'dry run' mode to test if it works without sending the output to the server.\n\n````bash\nminicron run --dry-run 'zip -r backup.zip website'\n````\n\nfor further information see ````minicron help run````.\n\n#### Get help\n\nRunning ````minicron```` with no arguments is an alias to running ````minicron help````, ````minicron -h```` or ````minicron --help````.\nYou can also use the help argument to get information on any command as shown above in the run a command section\nor alternatively you can pass the ````-h```` or ````--help```` options like so ````minicron run -h````.\n\n#### Server\n\nTo launch the server (aka the Hub) run\n\n````bash\nminicron server start\n````\n\nby default it will bind to port 9292 on the host 0.0.0.0 but this can be configured by the command line\narguments ````--host```` ````--port```` and ````--path```` or in the config file.\n\nBy default the server will run as a daemon with its process id stored in ````/tmp/minicron.pid````\nyou can also use the ````stop````, ````restart```` and ````status```` commands to control the server.\n\nTo run the server in debug mode, so you can see its output and any errors, you can pass the ````--debug````\noption.\n\n#### Version\n\nLike many command line programs minicron will show its version number when the global options ````-v````\nor ````--version```` are passed to the CLI.\n\n#### Configuration\n\nSome configuration options can be passed in manually but the recommended way to configure minicron is through the use\nof a config file. You can specify the path to the file using the ````--config```` global option. The file is expected\nto be in the [toml](https://github.com/mojombo/toml) format. The default options are specified in the\n[server.toml](config/server.toml) file and minicron will parse a config located in ````/etc/minicron/server.toml```` if it\nexists. Options specified via the command line will take precedence over those taken from a config file.\n\n## Versioning\n\nAll stable releases will follow the [semantic versioning](http://semver.org/) guidelines.\n\nReleases will be numbered with the following format:\n\n`<major>.<minor>.<patch>`\n\nBased on the following guidelines:\n\n* A new *major* release indicates a large change where backwards compatibility is broken.\n* A new *minor* release indicates a normal change that maintains backwards compatibility.\n* A new *patch* release indicates a bugfix or small change which does not affect compatibility.\n\n## Contributing\n\nFeedback and pull requests are welcome. Please see [CONTRIBUTING.md](CONTRIBUTING.md)\nfor more info.\n\nAreas that I would love some help with:\n\n- Any of the unassigned [issues here](https://github.com/jamesrwhite/minicron/issues?state=open).\n- General testing of the system. Let me know what you think, and create issues for any bugs you find!\n- Tests!!\n- Validation and error handling improvements\n- Documentation improvements.\n- Look for '[TODO:](https://github.com/jamesrwhite/minicron/search?q=TODO%3A)' notices littered around the code,\n  I'm trying to convert them all to issues but there are a lot...\n- Code refactoring: I had a deadline to meet for the initial versions so some parts are a tad rushed\n- UI improvements\n\n## Support\n\nWhere possible I will try to provide support for minicron but I offer no guarantees.\n\nFeel free to open an issue and I'll do my best to help.\n\n## Credit\n\nminicron makes use of a *lot* of awesome open source projects that have saved me a lot of time in its development.\nI started out trying to list all of them but it was taking way too much time so check out the dependencies in\n[minicron.gemspec](minicron.gemspec) and\n[app.rb](lib/minicron/hub/app.rb).\n\n## License\n\nminicron is licensed under the GPL v3 - [see here for the full license](LICENSE)\n"