b'# Roll Call\n\nRoll Call is a completely free\xf0\x9f\x8e\x89 voice chat service with podcast\nquality recording.\n\n<p>\n  <a href="https://www.patreon.com/bePatron?u=880479">\n    <img src="https://c5.patreon.com/external/logo/become_a_patron_button.png" height="40px" />\n  </a>\n</p>\n\nGo ahead and use it: [rollcall.audio](https://rollcall.audio)\n\n![demo gif](https://file-vpbygpmpka.now.sh)\n\nFeatures Include:\n\n* Multi-party realtime audio calls.\n* Drag & Drop File Sharing.\n* Podcast quality recording.\n  * We record each participant locally and send you the audio via the\n    data channel instead of recording the compressed and often low quality\n    realtime audio.\n\nFor more information on how to use Roll Call check out the\n[FAQ](https://rollcall.audio/faq.html).\n\nRoll Call is entirely Open Source and can be embedded into your own web pages\nand web applications.\n\n## Chrome/Brave Only\n\n**Roll Call only works in last few releases of\nChrome & Brave**. This is not due to lack of testing or development work but\nbecause of bugs in Safari and Firefox. Roll Call sits at the intersection of\nbrowser audio and WebRTC support, it\'s a minefield for finding bugs burried\ndeep in browser implementations. Even supporting Chrome takes [some hacks](https://github.com/mikeal/waudio/blob/master/index.js#L9).\n\n\n## Embedding\n\nRoll Call can easily be embedded on your own website. The easiest way is\nwith a script include.\n\n```html\n<script src="https://cdn.jsdelivr.net/npm/roll-call@latest/dist/rollcall.js"></script>\n<my-container>\n  <roll-call call="myUniqueCallIdentifier"></roll-call>\n</my-container>\n```\n\nRoll Call uses WebComponents. This means that you can use it like\nany other HTML element and manipulate its state with JavaScript.\n\nOr, if you want to build it into the JavaScript bundle for your own app\nyou can do so easily, but you\'ll need to handle loading a WebComponents\npolyfill for most browsers on your own.\n\n```javascript\nconst { Call } = require(\'roll-call\')\n\nlet elem = new Call()\nelem.call = \'myUniqueCallIdentifier\'\ndocument.body.appendChild(elem)\n```\n\nOnce you require the script the elements are registered so you could also\ndo something like this.\n\n```javascript\nrequire(\'roll-call\')\n\ndocument.body.innerHTML += `<roll-call call="myUniqueCallIdentifier"></roll-call>`\n```\n\n## To Develop\n\nDownload the code and run `npm install`.\n\nIf you want to do development run:\n\n```bash\nnpm install\nnpm start\n```\n\n## Try It Out\n\nRoll Call is built and [deployed automatically](https://github.com/mikeal/roll-call/blob/master/scripts/deploy.sh):\n\n * [rollcall.audio](https://rollcall.audio) runs the [stable](https://github.com/mikeal/roll-call/tree/stable) branch.\n * [rollcall.audio/staging](https://rollcall.audio/staging/) runs the latest code on [master](https://github.com/mikeal/roll-call/tree/master).\n\n## Wu-Tang Roll Call\n\n```\nThe Rza,\nthe Gza,\nInspectah Deck,\nRaekwon,\nU-God,\nMasta Killa,\nMethod Man,\nGhostface Killah,\nand the late great Ol Dirty Bastard.\n```\n'