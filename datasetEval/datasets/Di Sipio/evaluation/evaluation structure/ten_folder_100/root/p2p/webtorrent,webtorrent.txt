b'<p align="center">\n  <a href="https://codefund.io/properties/455/visit-sponsor">\n    <img src="https://codefund.io/properties/455/sponsor" />\n  </a>\n</p>\n\n<h1 align="center">\n  <br>\n  <a href="https://webtorrent.io"><img src="https://webtorrent.io/img/WebTorrent.png" alt="WebTorrent" width="200"></a>\n  <br>\n  WebTorrent\n  <br>\n  <br>\n</h1>\n\n<h4 align="center">The streaming torrent client. For node.js and the web.</h4>\n\n<p align="center">\n  <a href="https://discord.gg/cnXkm4Z"><img src="https://img.shields.io/discord/612575111718895616" alt="discord"></a>\n  <a href="https://travis-ci.org/webtorrent/webtorrent"><img src="https://img.shields.io/travis/webtorrent/webtorrent/master.svg" alt="travis"></a>\n  <a href="https://ci.appveyor.com/project/webtorrent/webtorrent"><img src="https://ci.appveyor.com/api/projects/status/cgu85xlgl72uoswq/branch/master?svg=true" alt="appveyor"></a>\n  <a href="https://www.npmjs.com/package/webtorrent"><img src="https://img.shields.io/npm/v/webtorrent.svg" alt="npm version"></a>\n  <a href="https://www.npmjs.com/package/webtorrent"><img src="https://img.shields.io/npm/dm/webtorrent.svg" alt="npm downloads"></a>\n  <a href="https://standardjs.com"><img src="https://img.shields.io/badge/code_style-standard-brightgreen.svg" alt="Standard - JavaScript Style Guide"></a>\n</p>\n<br>\n\n**WebTorrent** is a streaming torrent client for **node.js** and the **browser**. YEP,\nTHAT\'S RIGHT. THE BROWSER. It\'s written completely in JavaScript \xe2\x80\x93 the language of the web\n\xe2\x80\x93 so the same code works in both runtimes.\n\nIn node.js, this module is a simple torrent client, using TCP and UDP to talk to\nother torrent clients.\n\nIn the browser, WebTorrent uses **WebRTC** (data channels) for peer-to-peer transport.\nIt can be used **without** browser plugins, extensions, or installations. It\'s Just\nJavaScript&trade;. Note: WebTorrent does **not** support UDP/TCP peers in browser.\n\nSimply include the\n[`webtorrent.min.js`](https://cdn.jsdelivr.net/npm/webtorrent@latest/webtorrent.min.js) script\non your page to start fetching files over WebRTC using the BitTorrent protocol, or\n`require(\'webtorrent\')` with [browserify](http://browserify.org/). See [demo apps\n](#who-is-using-webtorrent-today) and [code examples](#usage) below.\n\n[![jsdelivr download count](https://data.jsdelivr.com/v1/package/npm/webtorrent/badge)](https://cdn.jsdelivr.net/npm/webtorrent@latest/webtorrent.min.js)\n\nTo make BitTorrent work over WebRTC (which is the only P2P transport that works on the\nweb) we made some protocol changes. Therefore, a browser-based WebTorrent client or **"web\npeer"** can only connect to other clients that support WebTorrent/WebRTC.\n\nTo seed files to web peers, use a client that supports WebTorrent, e.g.\n[WebTorrent Desktop][webtorrent-desktop], a desktop client with a\nfamiliar UI that can connect to web peers,\n[webtorrent-hybrid](https://github.com/webtorrent/webtorrent-hybrid), a command line program,\nor [Instant.io](https://instant.io/), a website. Established torrent clients like\n**Vuze** have [already added WebTorrent support](https://wiki.vuze.com/w/WebTorrent) so\nthey can connect to both normal *and* web peers. We hope other clients will follow.\n\n![Network](https://webtorrent.io/img/network.png)\n\n### Open Source Sponsors\n\n[<img src=\'https://webtorrent.io/img/supporters/brave.png\' width=300>](https://brave.com)\n|---|\n\n### Features\n\n- **Torrent client for node.js & the browser** (same npm package!)\n- **Insanely fast**\n- Download **multiple torrents** simultaneously, efficiently\n- **Pure Javascript** (no native dependencies)\n- Exposes files as **streams**\n  - Fetches pieces from the network on-demand so seeking is supported (even before torrent is finished)\n  - Seamlessly switches between sequential and rarest-first piece selection strategy\n- Supports advanced torrent client features\n  - **magnet uri** support via **[ut_metadata](https://github.com/webtorrent/ut_metadata)**\n  - **peer discovery** via **[dht](https://github.com/webtorrent/bittorrent-dht)**,\n    **[tracker](https://github.com/webtorrent/bittorrent-tracker)**, and\n    **[ut_pex](https://github.com/fisch0920/ut_pex)**\n  - **[protocol extension api](https://github.com/webtorrent/bittorrent-protocol#extension-api)**\n    for adding new extensions\n- **Comprehensive test suite** (runs completely offline, so it\'s reliable and fast)\n\n#### Browser/WebRTC environment features\n\n- **WebRTC data channels** for lightweight peer-to-peer communication with **no plugins**\n- **No silos.** WebTorrent is a P2P network for the **entire web.** WebTorrent clients\n  running on one domain can connect to clients on any other domain.\n- Stream video torrents into a `<video>` tag (`webm (vp8, vp9)` or `mp4 (h.264)`)\n- Supports Chrome, Firefox, Opera and Safari.\n\n<p align="center">\n  <a href="https://saucelabs.com/u/webtorrent">\n    <img src="https://saucelabs.com/browser-matrix/webtorrent.svg" alt="Sauce Labs">\n  </a>\n</p>\n\n### Install\n\nTo install WebTorrent for use in node or the browser with `require(\'webtorrent\')`, run:\n\n```bash\nnpm install webtorrent\n```\n\nTo install a `webtorrent`\n[command line program](https://github.com/webtorrent/webtorrent-cli), run:\n\n```bash\nnpm install webtorrent-cli -g\n```\n\nTo install a WebTorrent desktop application for Mac, Windows, or Linux, see\n[WebTorrent Desktop][webtorrent-desktop].\n\n### Ways to help\n\n- **Join us in [Gitter][webtorrent-gitter-url]** or on freenode at `#webtorrent` to help\n  with development or to hang out with some mad science hackers :)\n- **[Create a new issue](https://github.com/webtorrent/webtorrent/issues/new)** to report bugs\n- **[Fix an issue](https://github.com/webtorrent/webtorrent/issues?state=open)**. WebTorrent\n  is an [OPEN Open Source Project](https://github.com/webtorrent/.github/blob/master/CONTRIBUTING.md)!\n\n### Who is using WebTorrent today?\n\n**[Lots of folks!](docs/faq.md#who-is-using-webtorrent-today)**\n\n### WebTorrent API Documentation\n\n**[Read the full API Documentation](docs/api.md).**\n\n### Usage\n\nWebTorrent is the first BitTorrent client that works in the browser, using open web\nstandards (no plugins, just HTML5 and WebRTC)! It\'s easy to get started!\n\n#### In the browser\n\n##### Downloading a file is simple:\n\n```js\nvar WebTorrent = require(\'webtorrent\')\n\nvar client = new WebTorrent()\nvar magnetURI = \'...\'\n\nclient.add(magnetURI, function (torrent) {\n  // Got torrent metadata!\n  console.log(\'Client is downloading:\', torrent.infoHash)\n\n  torrent.files.forEach(function (file) {\n    // Display the file by appending it to the DOM. Supports video, audio, images, and\n    // more. Specify a container element (CSS selector or reference to DOM node).\n    file.appendTo(\'body\')\n  })\n})\n```\n\n##### Seeding a file is simple, too:\n\n```js\nvar dragDrop = require(\'drag-drop\')\nvar WebTorrent = require(\'webtorrent\')\n\nvar client = new WebTorrent()\n\n// When user drops files on the browser, create a new torrent and start seeding it!\ndragDrop(\'body\', function (files) {\n  client.seed(files, function (torrent) {\n    console.log(\'Client is seeding:\', torrent.infoHash)\n  })\n})\n```\n\nThere are more examples in [docs/get-started.md](docs/get-started.md).\n\n##### Browserify\n\nWebTorrent works great with [browserify](http://browserify.org/), an npm package that let\'s\nyou use [node](http://nodejs.org/)-style require() to organize your browser code and load modules installed by [npm](https://www.npmjs.com/) (as seen in the previous examples).\n\n##### Webpack\n\nWebTorrent also works with [webpack](http://webpack.github.io/), a module bundler similar\nto browserify. However, webpack requires the following extra configuration:\n\n```js\n{\n  target: \'web\',\n  node: {\n    fs: \'empty\'\n  }\n}\n```\n\nIf you are on webpack 1.x, you will also need to add the `json-loader`:\n```js\n{\n  module: {\n    loaders: [\n      // make sure to install the \'json-loader\' package: npm install json-loader\n      {\n        test: /\\.json$/,\n        loader: \'json\'\n      }\n    ]\n  }\n}\n```\n\nOtherwise you could also directly use the pre-built version via `require(\'webtorrent/webtorrent.min\')`.\n\n##### Script tag\n\nWebTorrent is also available as a standalone script\n([`webtorrent.min.js`](webtorrent.min.js)) which exposes `WebTorrent` on the `window`\nobject, so it can be used with just a script tag:\n\n```html\n<script src="webtorrent.min.js"></script>\n```\n\nThe WebTorrent script is also hosted on fast, reliable CDN infrastructure (Cloudflare and\nMaxCDN) for easy inclusion on your site:\n\n```html\n<script src="https://cdn.jsdelivr.net/npm/webtorrent@latest/webtorrent.min.js"></script>\n```\n\n#### In Node.js\n\nWebTorrent also works in node.js, using the *same npm package!* It\'s mad science!\n\n**NOTE**: To connect to "web peers" (browsers) in addition to normal BitTorrent peers, use\n[webtorrent-hybrid](https://github.com/webtorrent/webtorrent-hybrid) which includes WebRTC\nsupport for node.\n\n#### As a command line app\n\nWebTorrent is also available as a\n[command line app](https://github.com/webtorrent/webtorrent-cli). Here\'s how to use it:\n\n```bash\n$ npm install webtorrent-cli -g\n$ webtorrent --help\n```\n\nTo download a torrent:\n\n```bash\n$ webtorrent magnet_uri\n```\n\nTo stream a torrent to a device like **AirPlay** or **Chromecast**, just pass a flag:\n\n```bash\n$ webtorrent magnet_uri --airplay\n```\n\nThere are many supported streaming options:\n\n```bash\n--airplay               Apple TV\n--chromecast            Chromecast\n--mplayer               MPlayer\n--mpv                   MPV\n--omx [jack]            omx [default: hdmi]\n--vlc                   VLC\n--xbmc                  XBMC\n--stdout                standard out [implies --quiet]\n```\n\nIn addition to magnet uris, WebTorrent supports [many ways](docs/api.md#clientaddtorrentid-opts-function-ontorrent-torrent-) to specify a torrent.\n\n### Talks about WebTorrent\n\n- Sep 2017 - Nordic JS - [Get Rich Quick With P2P Crypto Currency](https://www.youtube.com/watch?v=8N_4Furztjo)\n- May 2017 - Char.la - [WebTorrent and Peerify](https://youtu.be/D-04vg5hvEQ?t=54m20s) (Spanish)\n- Nov 2016 - NodeConf Argentina - [Real world Electron: Building Cross-platform desktop apps with JavaScript](https://www.youtube.com/watch?v=YLExGgEnbFY)\n- May 2016 - SIGNAL Conference - [BitTorrent in the Browser](https://www.youtube.com/watch?v=2qrUx-C5Np4)\n- May 2015 - Data Terra Nemo - [WebTorrent: Mother of all demos](https://www.youtube.com/watch?v=RRtNEcAaUO8)\n- May 2015 - Data Terra Nemo - [WebRTC Everywhere](https://www.youtube.com/watch?v=RRtNEcAaUO8)\n- Nov 2014 - JSConf Asia - [How WebTorrent Works](https://www.youtube.com/watch?v=kxHRATfvnlw)\n- Sep 2014 - NodeConf EU - [WebRTC Mad Science](https://www.youtube.com/watch?v=BVBXkzVjvPc) (first working WebTorrent demo)\n- Apr 2014 - CraftConf - [Bringing BitTorrent to the Web](https://www.youtube.com/watch?v=PT8s_IVWDgw)\n- May 2014 - JS.LA - [How I Built a BitTorrent Client in the Browser](https://vimeo.com/97324247) (progress update; node client working)\n- Oct 2013 - RealtimeConf - [WebRTC Black Magic](https://vimeo.com/77265280) (first mention of idea for WebTorrent)\n\n### Modules\n\nMost of the active development is happening inside of small npm packages which are used by WebTorrent.\n\n#### The Node Way&trade;\n\n> "When applications are done well, they are just the really application-specific, brackish residue that can\'t be so easily abstracted away. All the nice, reusable components sublimate away onto github and npm where everybody can collaborate to advance the commons." \xe2\x80\x94 substack from ["how I write modules"](http://substack.net/how_I_write_modules)\n\n![node.js is shiny](https://feross.net/x/node2.gif)\n\n#### Modules\n\nThese are the main modules that make up WebTorrent:\n\n| module | tests | version | description |\n|---|---|---|---|\n| **[webtorrent][webtorrent]** | [![][webtorrent-ti]][webtorrent-tu] | [![][webtorrent-ni]][webtorrent-nu] | **torrent client (this module)**\n| [bittorrent-dht][bittorrent-dht] | [![][bittorrent-dht-ti]][bittorrent-dht-tu] | [![][bittorrent-dht-ni]][bittorrent-dht-nu] | distributed hash table client\n| [bittorrent-peerid][bittorrent-peerid] | [![][bittorrent-peerid-ti]][bittorrent-peerid-tu] | [![][bittorrent-peerid-ni]][bittorrent-peerid-nu] | identify client name/version\n| [bittorrent-protocol][bittorrent-protocol] | [![][bittorrent-protocol-ti]][bittorrent-protocol-tu] | [![][bittorrent-protocol-ni]][bittorrent-protocol-nu] | bittorrent protocol stream\n| [bittorrent-tracker][bittorrent-tracker] | [![][bittorrent-tracker-ti]][bittorrent-tracker-tu] | [![][bittorrent-tracker-ni]][bittorrent-tracker-nu] | bittorrent tracker server/client\n| [create-torrent][create-torrent] | [![][create-torrent-ti]][create-torrent-tu] | [![][create-torrent-ni]][create-torrent-nu] | create .torrent files\n| [magnet-uri][magnet-uri] | [![][magnet-uri-ti]][magnet-uri-tu] | [![][magnet-uri-ni]][magnet-uri-nu] | parse magnet uris\n| [parse-torrent][parse-torrent] | [![][parse-torrent-ti]][parse-torrent-tu] | [![][parse-torrent-ni]][parse-torrent-nu] | parse torrent identifiers\n| [render-media][render-media] | [![][render-media-ti]][render-media-tu] | [![][render-media-ni]][render-media-nu] | intelligently render media files\n| [torrent-discovery][torrent-discovery] | [![][torrent-discovery-ti]][torrent-discovery-tu] | [![][torrent-discovery-ni]][torrent-discovery-nu] | find peers via dht and tracker\n| [ut_metadata][ut_metadata] | [![][ut_metadata-ti]][ut_metadata-tu] | [![][ut_metadata-ni]][ut_metadata-nu] | metadata for magnet uris (protocol extension)\n| [ut_pex][ut_pex] | [![][ut_pex-ti]][ut_pex-tu] | [![][ut_pex-ni]][ut_pex-nu] | peer discovery (protocol extension)\n\n[webtorrent]: https://github.com/webtorrent/webtorrent\n[webtorrent-gitter-url]: https://gitter.im/webtorrent/webtorrent\n[webtorrent-ti]: https://img.shields.io/travis/webtorrent/webtorrent/master.svg\n[webtorrent-tu]: https://travis-ci.org/webtorrent/webtorrent\n[webtorrent-ni]: https://img.shields.io/npm/v/webtorrent.svg\n[webtorrent-nu]: https://www.npmjs.com/package/webtorrent\n[webtorrent-desktop]: https://webtorrent.io/desktop\n\n[bittorrent-dht]: https://github.com/webtorrent/bittorrent-dht\n[bittorrent-dht-ti]: https://img.shields.io/travis/webtorrent/bittorrent-dht/master.svg\n[bittorrent-dht-tu]: https://travis-ci.org/webtorrent/bittorrent-dht\n[bittorrent-dht-ni]: https://img.shields.io/npm/v/bittorrent-dht.svg\n[bittorrent-dht-nu]: https://www.npmjs.com/package/bittorrent-dht\n\n[bittorrent-peerid]: https://github.com/webtorrent/bittorrent-peerid\n[bittorrent-peerid-ti]: https://img.shields.io/travis/webtorrent/bittorrent-peerid.svg\n[bittorrent-peerid-tu]: https://travis-ci.org/webtorrent/bittorrent-peerid\n[bittorrent-peerid-ni]: https://img.shields.io/npm/v/bittorrent-peerid.svg\n[bittorrent-peerid-nu]: https://www.npmjs.com/package/bittorrent-peerid\n\n[bittorrent-protocol]: https://github.com/webtorrent/bittorrent-protocol\n[bittorrent-protocol-ti]: https://img.shields.io/travis/webtorrent/bittorrent-protocol/master.svg\n[bittorrent-protocol-tu]: https://travis-ci.org/webtorrent/bittorrent-protocol\n[bittorrent-protocol-ni]: https://img.shields.io/npm/v/bittorrent-protocol.svg\n[bittorrent-protocol-nu]: https://www.npmjs.com/package/bittorrent-protocol\n\n[bittorrent-tracker]: https://github.com/webtorrent/bittorrent-tracker\n[bittorrent-tracker-ti]: https://img.shields.io/travis/webtorrent/bittorrent-tracker/master.svg\n[bittorrent-tracker-tu]: https://travis-ci.org/webtorrent/bittorrent-tracker\n[bittorrent-tracker-ni]: https://img.shields.io/npm/v/bittorrent-tracker.svg\n[bittorrent-tracker-nu]: https://www.npmjs.com/package/bittorrent-tracker\n\n[create-torrent]: https://github.com/webtorrent/create-torrent\n[create-torrent-ti]: https://img.shields.io/travis/webtorrent/create-torrent/master.svg\n[create-torrent-tu]: https://travis-ci.org/webtorrent/create-torrent\n[create-torrent-ni]: https://img.shields.io/npm/v/create-torrent.svg\n[create-torrent-nu]: https://www.npmjs.com/package/create-torrent\n\n[magnet-uri]: https://github.com/webtorrent/magnet-uri\n[magnet-uri-ti]: https://img.shields.io/travis/webtorrent/magnet-uri/master.svg\n[magnet-uri-tu]: https://travis-ci.org/webtorrent/magnet-uri\n[magnet-uri-ni]: https://img.shields.io/npm/v/magnet-uri.svg\n[magnet-uri-nu]: https://www.npmjs.com/package/magnet-uri\n\n[parse-torrent]: https://github.com/webtorrent/parse-torrent\n[parse-torrent-ti]: https://img.shields.io/travis/webtorrent/parse-torrent/master.svg\n[parse-torrent-tu]: https://travis-ci.org/webtorrent/parse-torrent\n[parse-torrent-ni]: https://img.shields.io/npm/v/parse-torrent.svg\n[parse-torrent-nu]: https://www.npmjs.com/package/parse-torrent\n\n[render-media]: https://github.com/feross/render-media\n[render-media-ti]: https://img.shields.io/travis/feross/render-media/master.svg\n[render-media-tu]: https://travis-ci.org/feross/render-media\n[render-media-ni]: https://img.shields.io/npm/v/render-media.svg\n[render-media-nu]: https://www.npmjs.com/package/render-media\n\n[torrent-discovery]: https://github.com/webtorrent/torrent-discovery\n[torrent-discovery-ti]: https://img.shields.io/travis/webtorrent/torrent-discovery/master.svg\n[torrent-discovery-tu]: https://travis-ci.org/webtorrent/torrent-discovery\n[torrent-discovery-ni]: https://img.shields.io/npm/v/torrent-discovery.svg\n[torrent-discovery-nu]: https://www.npmjs.com/package/torrent-discovery\n\n[ut_metadata]: https://github.com/webtorrent/ut_metadata\n[ut_metadata-ti]: https://img.shields.io/travis/webtorrent/ut_metadata/master.svg\n[ut_metadata-tu]: https://travis-ci.org/webtorrent/ut_metadata\n[ut_metadata-ni]: https://img.shields.io/npm/v/ut_metadata.svg\n[ut_metadata-nu]: https://www.npmjs.com/package/ut_metadata\n\n[ut_pex]: https://github.com/webtorrent/ut_pex\n[ut_pex-ti]: https://img.shields.io/travis/webtorrent/ut_pex.svg\n[ut_pex-tu]: https://travis-ci.org/webtorrent/ut_pex\n[ut_pex-ni]: https://img.shields.io/npm/v/ut_pex.svg\n[ut_pex-nu]: https://www.npmjs.com/package/ut_pex\n\n#### Enable debug logs\n\nIn **node**, enable debug logs by setting the `DEBUG` environment variable to the name of the\nmodule you want to debug (e.g. `bittorrent-protocol`, or `*` to print **all logs**).\n\n```bash\nDEBUG=* webtorrent\n```\n\nIn the **browser**, enable debug logs by running this in the developer console:\n\n```js\nlocalStorage.debug = \'*\'\n```\n\nDisable by running this:\n\n```js\nlocalStorage.removeItem(\'debug\')\n```\n\n### License\n\nMIT. Copyright (c) [Feross Aboukhadijeh](https://feross.org) and [WebTorrent, LLC](https://webtorrent.io).\n'