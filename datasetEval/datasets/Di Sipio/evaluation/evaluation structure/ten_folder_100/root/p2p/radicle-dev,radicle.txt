b'# Radicle\n\nA peer-to-peer stack for code collaboration.\n\n- **peer-to-peer** : The Radicle stack builds on IPFS, and works without a centralized server. No hassle with setting up your own hosting, and no need to trust companies with your data.\n- **terminal-first** : A Radicle project contains a git repository, plus the associated issues and proposals. Access all the issues and proposals associated with your codebase right from your terminal.\n- **programmable** : Ever wanted to tweak your code collaboration service? With Radicle each unit of functionality \xe2\x80\x93a machine\xe2\x80\x93 is its own litte P2P program, written in the Radicle language. You can change them to suit your needs, or create entirely new ones.\n\n\nRadicle has a [webpage](http://www.radicle.xyz/) which contains a lot more information on `Radicle`.\n\n## Installation\n\nTo build Radicle from source you will need [`stack`][stack].\n\nAnd make sure the location at which stack installs executables is in your\n`PATH`: `export PATH=$HOME/.local/bin:$PATH`.\n\n```\nstack build\nstack install :rad :radicle\n```\n\nNote: `stack` will need about 4GB of memory to compile successfully.\n\nTo use Radicle you will also need to install [`ipfs`][ipfs] and\n[`git-remote-ipfs`][git-remote-ipfs]. Running Radicle requires you to keep both the\nRadicle daemon and Radicle IPFS daemon running.\n\n```\nrad daemon-ipfs\nrad daemon-radicle\n```\n\n[stack]: https://docs.haskellstack.org/en/stable/install_and_upgrade/\n[ipfs]: https://docs.ipfs.io/guides/guides/install/\n[git-remote-ipfs]: https://github.com/oscoin/ipfs/tree/master/git-remote-ipfs#install\n\n### Debian/Ubuntu\n\nWe provide `.deb` packages for Debian-based systems.\n\n    wget https://storage.googleapis.com/static.radicle.xyz/releases/radicle_latest_amd64.deb\n    sudo apt install ./radicle_latest_amd64.deb\n\nTo use Radicle you need to start the Radicle daemon\n\n    systemctl --user start radicle-daemon\n    systemctl --user status radicle-daemon\n\n## Issues\n\nWe are currently using `Radicle` itself to manage issues (but you\ncan still submit issues on Github). You can create and see issues with `rad issues list`\nin the project repo. To checkout the project, run:\n\n```\nrad project checkout 12D3KooWPS3UXcvSZSXfi7P4J9Ut8MMVNvN63HHiCSP8rxj3RmtC\n```\n\nIf you cloned the project from Github, you can instead, from the repo, run:\n\n```\ngit config radicle.project-id 12D3KooWPS3UXcvSZSXfi7P4J9Ut8MMVNvN63HHiCSP8rxj3RmtC\n```\n\nYou can also reach us on the `radicle` IRC channel on `#freenode`, or via the\n[mailing list](https://groups.google.com/a/monadic.xyz/forum/#!forum/radicle).\n\n\n## Development\n\nThe script `./scripts/ci-tests.sh` runs all tests that are run on CI. The script\nrequires [`docker`][docker] and [`docker-compose`][docker-compose] to be\ninstalled for end-to-end tests.\n\nThe documentation is build with `make -C docs html`. Reference documentation for\nRadicle code must be regenerated with `stack run radicle-doc-ref` and checked\ninto version control.\n\n### End-to-end Tests\n\nThe end-to-end test suite is run with\n\n    RAD_IPFS_API_URL=http://localhost:19301 \\\n      RAD_BIN="$(stack path --docker --local-install-root)/bin" stack test :e2e\n\nIt requires you to first start up an IPFS test network and the Radicle daemon.\n\n    docker-compose -f test/docker-compose.yaml up -d ipfs-test-network\n    RAD_IPFS_API_URL=http://localhost:19301 stack exec -- \\\n      rad-daemon-radicle --machine-config /tmp/radicle-machines.json\n\nAnd to build the project with stack\'s docker support:\n\n    stack build --docker\n\nIf you use `docker-compose up` for the first time you will also need to\ninitialize the IPFS test network with\n\n    echo \'{"radicle": true}\' | \\\n      docker-compose -f test/docker-compose.yaml exec -T ipfs-test-network ipfs dag put\n\nIf you are using `docker-machine`, replace `localhost` in `RAD_IPFS_API_URL`\nwith the output of `docker-machine ip`.\n\nYou can reset the test daemon\xe2\x80\x99s machine configuration by removing the file\n`/tmp/radicle-machines.json`.\n\n### Packaging\n\nPackages can be built with the `./packaging/build-package.sh` script. Run it\nwith `-h` for more information. The script requires [`fpm`][fpm].\n\nOn CI a Debian package is built for every commit and uploaded to\n`http://static.radicle.xyz/releases`. The package uses the commit hash as the\nversion.\n\n[fpm]: https://github.com/jordansissel/fpm\n\n### Troubleshooting\n\nYour local machine might build binaries that are incompatible with the\n`debian:stretch` container image. In that case building the docker images fails.\nYou can build compatible binaries using stack\xe2\x80\x99s [docker\nintegration][stack-docker-integration]. This is enabled by passing the\n`STACK_DOCKER=1` environment to `./scripts/ci-tests.sh`.\n\n\n[stack-docker-integration]: https://docs.haskellstack.org/en/stable/docker_integration/\n[docker]: https://www.docker.com/get-started\n[docker-compose]: https://docs.docker.com/compose/install\n\n\n## Code of conduct\n\nPlease read our [code of conduct](code-of-conduct.md) when thinking of contributing.\n'