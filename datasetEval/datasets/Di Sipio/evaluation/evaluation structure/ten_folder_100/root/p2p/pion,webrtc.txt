b'<h1 align="center">\n  <a href="https://pion.ly"><img src="./.github/pion-gopher-webrtc.png" alt="Pion WebRTC" height="250px"></a>\n  <br>\n  Pion WebRTC\n  <br>\n</h1>\n<h4 align="center">A pure Go implementation of the WebRTC API</h4>\n<p align="center">\n  <a href="https://pion.ly"><img src="https://img.shields.io/badge/pion-webrtc-gray.svg?longCache=true&colorB=brightgreen" alt="Pion webrtc"></a>\n  <a href="https://sourcegraph.com/github.com/pion/webrtc?badge"><img src="https://sourcegraph.com/github.com/pion/webrtc/-/badge.svg" alt="Sourcegraph Widget"></a>\n  <a href="https://pion.ly/slack"><img src="https://img.shields.io/badge/join-us%20on%20slack-gray.svg?longCache=true&logo=slack&colorB=brightgreen" alt="Slack Widget"></a>\n  <br>\n  <a href="https://travis-ci.org/pion/webrtc"><img src="https://travis-ci.org/pion/webrtc.svg?branch=master" alt="Build Status"></a>\n  <a href="https://godoc.org/github.com/pion/webrtc"><img src="https://godoc.org/github.com/pion/webrtc?status.svg" alt="GoDoc"></a>\n  <a href="https://codecov.io/gh/pion/webrtc"><img src="https://codecov.io/gh/pion/webrtc/branch/master/graph/badge.svg" alt="Coverage Status"></a>\n  <a href="https://goreportcard.com/report/github.com/pion/webrtc"><img src="https://goreportcard.com/badge/github.com/pion/webrtc" alt="Go Report Card"></a>\n  <a href="https://www.codacy.com/app/Sean-Der/webrtc"><img src="https://api.codacy.com/project/badge/Grade/18f4aec384894e6aac0b94effe51961d" alt="Codacy Badge"></a>\n  <a href="LICENSE"><img src="https://img.shields.io/badge/License-MIT-yellow.svg" alt="License: MIT"></a>\n</p>\n<br>\n\n\nSee [DESIGN.md](DESIGN.md) for an overview of features and future goals.\n\n### Breaking Changes\n\nPion WebRTC v2.0.0 has arrived! See the [release notes](https://pion.ly/knowledge-base/release-notes/webrtc-v2.0.0/) to learn about new features and breaking changes.\n\nHave any questions? Join [the Slack channel](https://pion.ly/slack) to follow development and speak with the maintainers.\n\nWe are actively planning [v2.1.0](https://github.com/pion/webrtc/projects/11) and would love your feedback! Anyone can add issues, and anything that you think can empower Pion users.\n\n### Usage\nCheck out the **[example applications](examples/README.md)** to help you along your Pion WebRTC journey.\n\nFor more full featured examples that use 3rd party libraries see our **[example-webrtc-applications](https://github.com/pion/example-webrtc-applications)** repo.\n\nThe Pion WebRTC API closely matches the JavaScript **[WebRTC API](https://w3c.github.io/webrtc-pc/)**. Most existing documentation is therefore also useful when working with Pion. Furthermore, our **[GoDoc](https://godoc.org/github.com/pion/webrtc)** is actively maintained.\n\nWe maintain a [FAQ](https://pion.ly/knowledge-base/pion-basics/faq/) with answers to common questions. If you have a question not covered please submit a PR, we would be happy to answer it!\n\nNow go forth and build some awesome apps! Here are some **ideas** to get your creative juices flowing:\n* Send a video file to multiple browser in real time for perfectly synchronized movie watching.\n* Send a webcam on an embedded device to your browser with no additional server required!\n* Securely send data between two servers, without using pub/sub.\n* Record your webcam and do special effects server side.\n* Build a conferencing application that processes audio/video and make decisions off of it.\n\n### WebAssembly\nPion WebRTC can be used when compiled to WebAssembly, also known as Wasm. In\nthis case the library will act as a wrapper around the JavaScript WebRTC API.\nThis allows you to use WebRTC from Go in both server and browser side code with\nlittle to no changes. Check out the\n**[example applications](examples/README.md#webassembly)** for instructions on\nhow to compile and run the WebAssembly examples. You can also visit the\n[Wiki page on WebAssembly Development](https://github.com/pion/webrtc/wiki/WebAssembly-Development-and-Testing)\nfor more information.\n\n### Roadmap\nThe library is in active development, please refer to the [roadmap](https://github.com/pion/webrtc/issues/9) to track our major milestones.\n\n### Community\nPion has an active community on the [Golang Slack](https://invite.slack.golangbridge.org/). Sign up and join the **#pion** channel for discussions and support. You can also use [Pion mailing list](https://groups.google.com/forum/#!forum/pion).\n\nWe are always looking to support **your projects**. Please reach out if you have something to build!\n\nIf you need commercial support or don\'t want to use public methods you can contact us at [team@pion.ly](mailto:team@pion.ly)\n\n\n### Project status\n\n[![Stargazers over time](https://starchart.cc/pion/webrtc.svg)](https://starchart.cc/pion/webrtc)\n\n\n\n### Related projects\n* [pion/turn](https://github.com/pion/turn): A simple extendable Golang TURN server\n* [WIP] [pion/media-server](https://github.com/pion/media-server): A Pion WebRTC powered media server, providing the building blocks for anything RTC.\n\n### Contributing\nCheck out the **[contributing wiki](https://github.com/pion/webrtc/wiki/Contributing)** to join the group of amazing people making this project possible:\n\n* [John Bradley](https://github.com/kc5nra) - *Original Author*\n* [Michael Melvin Santry](https://github.com/santrym) - *Mascot*\n* [Raphael Randschau](https://github.com/nicolai86) - *STUN*\n* [Sean DuBois](https://github.com/Sean-Der) - *Original Author*\n* [Michiel De Backker](https://github.com/backkem) - *SDP, Public API, Project Management*\n* [Brendan Rius](https://github.com/brendanrius) - *Cleanup*\n* [Konstantin Itskov](https://github.com/trivigy) - *SDP Parsing*\n* [chenkaiC4](https://github.com/chenkaiC4) - *Fix GolangCI Linter*\n* [Ronan J](https://github.com/ronanj) - *Fix STCP PPID*\n* [wattanakorn495](https://github.com/wattanakorn495)\n* [Max Hawkins](https://github.com/maxhawkins) - *RTCP*\n* [Justin Okamoto](https://github.com/justinokamoto) - *Fix Docs*\n* [leeoxiang](https://github.com/notedit) - *Implement Janus examples*\n* [Denis](https://github.com/Hixon10) - *Adding docker-compose to pion-to-pion example*\n* [earle](https://github.com/aguilEA) - *Generate DTLS fingerprint in Go*\n* [Jake B](https://github.com/silbinarywolf) - *Fix Windows installation instructions*\n* [Michael MacDonald](https://github.com/mjmac) - *Plan B compatibility, Remote TURN/Trickle-ICE, Logging framework*\n* [Oleg Kovalov](https://github.com/cristaloleg) *Use wildcards instead of hardcoding travis-ci config*\n* [Woodrow Douglass](https://github.com/wdouglass) *RTCP, RTP improvements, G.722 support, Bugfixes*\n* [Tobias Frid\xc3\xa9n](https://github.com/tobiasfriden) *SRTP authentication verification*\n* [Yutaka Takeda](https://github.com/enobufs) *Fix ICE connection timeout*\n* [Hugo Arregui](https://github.com/hugoArregui) *Fix connection timeout*\n* [Rob Deutsch](https://github.com/rob-deutsch) *RTPReceiver graceful shutdown*\n* [Jin Lei](https://github.com/jinleileiking) - *SFU example use http*\n* [Will Watson](https://github.com/wwatson) - *Enable gocritic*\n* [Luke Curley](https://github.com/kixelated)\n* [Antoine Bach\xc3\xa9](https://github.com/Antonito) - *OGG Opus export*\n* [frank](https://github.com/feixiao) - *Building examples on OSX*\n* [mxmCherry](https://github.com/mxmCherry)\n* [Alex Browne](https://github.com/albrow) - *JavaScript/Wasm bindings*\n* [adwpc](https://github.com/adwpc) - *SFU example with websocket*\n* [imalic3](https://github.com/imalic3) - *SFU websocket example with datachannel broadcast*\n* [\xc5\xbdiga \xc5\xbdeljko](https://github.com/zigazeljko)\n* [Simonacca Fotokite](https://github.com/simonacca-fotokite)\n* [Marouane](https://github.com/nindolabs) *Fix Offer bundle generation*\n* [Christopher Fry](https://github.com/christopherfry)\n* [Adam Kiss](https://github.com/masterada)\n* [xsbchen](https://github.com/xsbchen)\n* [Alex Harford](https://github.com/alexjh)\n* [Aleksandr Razumov](https://github.com/ernado)\n* [mchlrhw](https://github.com/mchlrhw)\n* [AlexWoo(\xe6\xad\xa6\xe6\x9d\xb0)](https://github.com/AlexWoo) *Fix RemoteDescription parsing for certificate fingerprint*\n* [Cecylia Bocovich](https://github.com/cohosh)\n* [Slugalisk](https://github.com/slugalisk)\n* [Agugua Kenechukwu](https://github.com/spaceCh1mp)\n* [Ato Araki](https://github.com/atotto)\n* [Rafael Viscarra](https://github.com/rviscarra)\n* [Mike Coleman](https://github.com/fivebats)\n* [Suhas Gaddam](https://github.com/suhasgaddam)\n* [Atsushi Watanabe](https://github.com/at-wat)\n* [Robert Eperjesi](https://github.com/epes)\n* [Aaron France](https://github.com/AeroNotix)\n* [Gareth Hayes](https://github.com/gazhayes)\n* [Sebastian Waisbrot](https://github.com/seppo0010)\n* [Masataka Hisasue](https://github.com/sylba2050) - *Fix Docs*\n* [Hongchao Ma(\xe9\xa9\xac\xe6\xb4\xaa\xe8\xb6\x85)](https://github.com/hcm007)\n* [Aaron France](https://github.com/AeroNotix)\n* [Chris Hiszpanski](https://github.com/thinkski) - *Fix Answer bundle generation*\n* [Vicken Simonian](https://github.com/vsimon)\n* [Guilherme Souza](https://github.com/gqgs)\n* [Andrew N. Shalaev](https://github.com/isqad)\n* [David Hamilton](https://github.com/dihamilton)\n\n### License\nMIT License - see [LICENSE](LICENSE) for full text\n'