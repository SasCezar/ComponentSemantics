b'.. contents:: **sqlitebiter**\n   :backlinks: top\n   :depth: 2\n\nSummary\n=========\n`sqlitebiter <https://github.com/thombashi/sqlitebiter>`__ is a CLI tool to convert CSV / Excel / HTML / JSON / Jupyter Notebook / LDJSON / LTSV / Markdown / SQLite / SSV / TSV / Google-Sheets to a SQLite database file.\n\n.. image:: https://badge.fury.io/py/sqlitebiter.svg\n    :target: https://badge.fury.io/py/sqlitebiter\n    :alt: PyPI package version\n\n.. image:: https://img.shields.io/pypi/pyversions/sqlitebiter.svg\n    :target: https://pypi.org/project/sqlitebiter\n    :alt: Supported Python versions\n\n.. image:: https://img.shields.io/travis/thombashi/sqlitebiter/master.svg?label=Linux/macOS%20CI\n   :target: https://travis-ci.org/thombashi/sqlitebiter\n   :alt: Linux/macOS CI status\n\n.. image:: https://img.shields.io/appveyor/ci/thombashi/sqlitebiter/master.svg?label=Windows%20CI\n   :target: https://ci.appveyor.com/project/thombashi/sqlitebiter\n   :alt: Windows CI status\n\n.. image:: https://img.shields.io/github/stars/thombashi/sqlitebiter.svg?style=social&label=Star\n    :target: https://github.com/thombashi/sqlitebiter\n    :alt: GitHub stars\n\nFeatures\n--------\n- Create a SQLite database file from:\n    - File(s):\n        - CSV / Tab separated values (TSV) / Space separated values (SSV)\n        - Microsoft Excel :superscript:`TM`\n        - HTML\n        - JSON\n        - `Jupyter Notebook <https://jupyter.org/>`__\n        - `Labeled Tab-separated Values (LTSV) <http://ltsv.org/>`__\n        - `Line-delimited JSON(LDJSON) <https://en.wikipedia.org/wiki/JSON_streaming#Line-delimited_JSON>`__ / NDJSON / JSON Lines\n        - Markdown\n        - Mediawiki\n        - SQLite\n    - `Google Sheets <https://www.google.com/intl/en_us/sheets/about/>`_\n    - URL (scrape tabular data from web pages)\n- Multi-byte character support\n- Automatic file encoding detection\n\nUsage\n=======\nCreate SQLite database from files\n-----------------------------------\n.. image:: https://cdn.jsdelivr.net/gh/thombashi/sqlitebiter@master/docs/svg/usage_example.svg\n\nCreate SQLite database from URL\n---------------------------------\nFollowing is an example that converts HTML table tags within a web page to SQLite tables by the web page URL.\n\n:Example:\n    .. code-block:: console\n\n        $ sqlitebiter url "https://en.wikipedia.org/wiki/Comparison_of_firewalls"\n        [INFO] sqlitebiter url: convert \'Comparison_of_firewalls\' to \'Comparison_of_firewalls_Wikipedia_html1\' table\n        [INFO] sqlitebiter url: convert \'Comparison_of_firewalls\' to \'Comparison_of_firewalls_Wikipedia_html2\' table\n        [INFO] sqlitebiter url: convert \'Comparison_of_firewalls\' to \'Comparison_of_firewalls_Wikipedia_html3\' table\n        [INFO] sqlitebiter url: convert \'Comparison_of_firewalls\' to \'Comparison_of_firewalls_Wikipedia_html4\' table\n        [INFO] sqlitebiter url: convert \'Comparison_of_firewalls\' to \'Comparison_of_firewalls_Wikipedia_html5\' table\n        [INFO] sqlitebiter url: convert \'Comparison_of_firewalls\' to \'Comparison_of_firewalls_Wikipedia_html6\' table\n        [INFO] sqlitebiter url: convert \'Comparison_of_firewalls\' to \'Comparison_of_firewalls_Wikipedia_html7\' table\n        [INFO] sqlitebiter url: convert \'Comparison_of_firewalls\' to \'Comparison_of_firewalls_Wikipedia_html8\' table\n        [INFO] sqlitebiter url: convert \'Comparison_of_firewalls\' to \'Comparison_of_firewalls_Wikipedia_html9\' table\n        [INFO] sqlitebiter url: convert \'Comparison_of_firewalls\' to \'Comparison_of_firewalls_Wikipedia_html10\' table\n        [INFO] sqlitebiter url: convert \'Comparison_of_firewalls\' to \'Comparison_of_firewalls_Wikipedia_html11\' table\n        [INFO] sqlitebiter url: converted results: source=1, success=11, created-table=11\n        [INFO] sqlitebiter url: database path: out.sqlite\n\n:Output:\n    .. code-block:: sql\n\n        $ sqlite3 out.sqlite .schema\n        CREATE TABLE IF NOT EXISTS \'_source_info_\' ("source_id" INTEGER NOT NULL, "dir_name" TEXT, "base_name" TEXT NOT NULL, "format_name" TEXT NOT NULL, "dst_table" TEXT NOT NULL, size INTEGER, mtime INTEGER);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html1\' (Firewall TEXT, License TEXT, [Cost and usage limits] TEXT, OS TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html2\' (Firewall TEXT, License TEXT, Cost TEXT, OS TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html3\' ([Can Target:] TEXT, [Changing default policy to accept/reject (by issuing a single rule)] TEXT, [IP destination address(es)] TEXT, [IP source address(es)] TEXT, [TCP/UDP destination port(s)] TEXT, [TCP/UDP source port(s)] TEXT, [Ethernet MAC destination address] TEXT, [Ethernet MAC source address] TEXT, [Inbound firewall (ingress)] TEXT, [Outbound firewall (egress)] TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html4\' ([Can:] TEXT, [work at OSI Layer 4 (stateful firewall)] TEXT, [work at OSI Layer 7 (application inspection)] TEXT, [Change TTL? (Transparent to traceroute)] TEXT, [Configure REJECT-with answer] TEXT, [DMZ (de-militarized zone) - allows for single/several hosts not to be firewalled.] TEXT, [Filter according to time of day] TEXT, [Redirect TCP/UDP ports (port forwarding)] TEXT, [Redirect IP addresses (forwarding)] TEXT, [Filter according to User Authorization] TEXT, [Traffic rate-limit / QoS] TEXT, Tarpit TEXT, Log TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html5\' ([Features:] TEXT, "Configuration: GUI_ text or both modes?" TEXT, "Remote Access: Web (HTTP)_ Telnet_ SSH_ RDP_ Serial COM RS232_ ..." TEXT, [Change rules without requiring restart?] TEXT, [Ability to centrally manage all firewalls together] TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html6\' ([Features:] TEXT, [Modularity: supports third-party modules to extend functionality?] TEXT, [IPS\xc2\xa0: Intrusion prevention system] TEXT, [Open-Source License?] TEXT, [supports IPv6\xc2\xa0?] TEXT, [Class: Home / Professional] TEXT, [Operating Systems on which it runs?] TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html7\' ([Can:] TEXT, "NAT44 (static_ dynamic w/o ports_ PAT)" TEXT, "NAT64_ NPTv6" TEXT, [IDS (Intrusion Detection System)] TEXT, [VPN (Virtual Private Network)] TEXT, [AV  (Anti-Virus)] TEXT, Sniffer TEXT, [Profile selection] TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html8\' ([vteFirewall software] TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html9\' (A TEXT, B TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html10\' (A TEXT, B TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html11\' (A TEXT, B TEXT);\n\nThe attributes within the converted SQLite database may include symbols as the above.\nSymbols within attributes can be replaced by using ``--replace-symbol`` option.\nIn the following example shows replace symbols to underscores.\n\n:Example:\n    .. code-block:: console\n\n        $ sqlitebiter --replace-symbol _ -q url "https://en.wikipedia.org/wiki/Comparison_of_firewalls"\n\n:Output:\n    .. code-block:: sql\n\n        $ sqlite3 out.sqlite .schema\n        CREATE TABLE IF NOT EXISTS \'_source_info_\' ("source_id" INTEGER NOT NULL, "dir_name" TEXT, "base_name" TEXT NOT NULL, "format_name" TEXT NOT NULL, "dst_table" TEXT NOT NULL, size INTEGER, mtime INTEGER);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html1\' (Firewall TEXT, License TEXT, "Cost_and_usage_limits" TEXT, OS TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html2\' (Firewall TEXT, License TEXT, Cost TEXT, OS TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html3\' ("Can_Target" TEXT, "Changing_default_policy_to_accept_reject_by_issuing_a_single_rule" TEXT, "IP_destination_address_es" TEXT, "IP_source_address_es" TEXT, "TCP_UDP_destination_port_s" TEXT, "TCP_UDP_source_port_s" TEXT, "Ethernet_MAC_destination_address" TEXT, "Ethernet_MAC_source_address" TEXT, "Inbound_firewall_ingress" TEXT, "Outbound_firewall_egress" TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html4\' (Can TEXT, "work_at_OSI_Layer_4_stateful_firewall" TEXT, "work_at_OSI_Layer_7_application_inspection" TEXT, "Change_TTL_Transparent_to_traceroute" TEXT, "Configure_REJECT_with_answer" TEXT, "DMZ_de_militarized_zone_allows_for_single_several_hosts_not_to_be_firewalled" TEXT, "Filter_according_to_time_of_day" TEXT, "Redirect_TCP_UDP_ports_port_forwarding" TEXT, "Redirect_IP_addresses_forwarding" TEXT, "Filter_according_to_User_Authorization" TEXT, "Traffic_rate_limit_QoS" TEXT, Tarpit TEXT, Log TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html5\' (Features TEXT, "Configuration_GUI_text_or_both_modes" TEXT, "Remote_Access_Web_HTTP_Telnet_SSH_RDP_Serial_COM_RS232" TEXT, "Change_rules_without_requiring_restart" TEXT, "Ability_to_centrally_manage_all_firewalls_together" TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html6\' (Features TEXT, "Modularity_supports_third_party_modules_to_extend_functionality" TEXT, "IPS\xc2\xa0_Intrusion_prevention_system" TEXT, "Open_Source_License" TEXT, "supports_IPv6" TEXT, "Class_Home_Professional" TEXT, "Operating_Systems_on_which_it_runs" TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html7\' (Can TEXT, "NAT44_static_dynamic_w_o_ports_PAT" TEXT, "NAT64_NPTv6" TEXT, "IDS_Intrusion_Detection_System" TEXT, "VPN_Virtual_Private_Network" TEXT, "AV_Anti_Virus" TEXT, Sniffer TEXT, "Profile_selection" TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html8\' ("vteFirewall_software" TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html9\' (A TEXT, B TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html10\' (A TEXT, B TEXT);\n        CREATE TABLE IF NOT EXISTS \'Comparison_of_firewalls_Wikipedia_html11\' (A TEXT, B TEXT);\n\nCommand help\n--------------\n::\n\n    Usage: sqlitebiter [OPTIONS] COMMAND [ARGS]...\n\n    Options:\n      --version                       Show the version and exit.\n      -o, --output-path PATH          Output path of the SQLite database file.\n                                      Defaults to \'out.sqlite\'.\n      -a, --append                    Append table(s) to existing database.\n      --add-primary-key PRIMARY_KEY_NAME\n                                      Add \'PRIMARY KEY AUTOINCREMENT\' column with\n                                      the specified name.\n      --convert-config TEXT           [experimental]\n                                      Configurations for data\n                                      conversion. The option can be used only for\n                                      url subcommand.\n      -i, --index INDEX_ATTR          Comma separated attribute names to create\n                                      indices.\n      --no-type-inference             All of the columns assume as TEXT data type\n                                      in creating tables.\n      --type-hint-header              Use headers suffix as type hints.\n                                      If there\n                                      are type hints, converting columns by\n                                      datatype corresponding with type hints.\n                                      The\n                                      following suffixes can be recognized as type\n                                      hints (case insensitive):\n                                      "text": TEXT\n                                      datatype.\n                                      "integer": INTEGER datatype.\n                                      "real": REAL datatype.\n      --replace-symbol TEXT           Replace symbols in attributes.\n      -v, --verbose\n      --debug                         For debug print.\n      -q, --quiet                     Suppress execution log messages.\n      -h, --help                      Show this message and exit.\n\n    Commands:\n      completion  A helper command to setup command completion.\n      configure   Configure the following application settings: (1) Default...\n      file        Convert tabular data within CSV/Excel/HTML/JSON/Jupyter...\n      gs          Convert a spreadsheet in Google Sheets to a SQLite database...\n      url         Scrape tabular data from a URL and convert data to a SQLite...\n\nFor more information\n~~~~~~~~~~~~~~~~~~~~~~\nMore examples are available at \nhttps://sqlitebiter.rtfd.io/en/latest/pages/usage/index.html\n\nInstallation\n============\n\nInstall via pip (recommended)\n------------------------------\n``sqlitebiter`` can be installed via\n`pip <https://pip.pypa.io/en/stable/installing/>`__ (Python package manager).\n\n:Example:\n    .. code:: console\n\n        pip install sqlitebiter\n\n\nInstallation for Debian/Ubuntu\n----------------------------------------------------------\n\nInstall from PPA (for Ubuntu)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n::\n\n    sudo add-apt-repository ppa:thombashi/ppa\n    sudo apt update\n    sudo apt install sqlitebiter\n\nInstall from a deb package\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n::\n\n    ARCHIVE_URL=$(curl -sL https://api.github.com/repos/thombashi/sqlitebiter/releases/latest | jq -r \'.assets[].browser_download_url\' | \\grep deb) &&\n    TEMP_DEB="$(mktemp)" &&\n    wget -O "${TEMP_DEB}" "${ARCHIVE_URL}" &&\n    sudo dpkg -i "${TEMP_DEB}"\n    rm -f "${TEMP_DEB}"\n\n\nInstalling executable files in Windows\n----------------------------------------------------------\n``sqlitebiter`` can be used in Windows environments without Python installation as follows:\n\n#. Navigate to https://github.com/thombashi/sqlitebiter/releases\n#. Download the latest version of the ``sqlitebiter_win_x64.zip``\n#. Unzip the file\n#. Execute ``sqlitebiter.exe`` in either Command Prompt or PowerShell\n\n\nInstallation for macOS via Homebrew\n----------------------------------------------------------\n\n.. code:: console\n\n    $ brew tap thombashi/sqlitebiter\n    $ brew install sqlitebiter\n\n- `Homebrew Formula <https://github.com/thombashi/homebrew-sqlitebiter>`__\n\n\nCommand Completion\n----------------------------------------------------------\n.. code:: console\n\n    To setup for bash:\n\n        sqlitebiter completion bash >> ~/.bashrc\n\n    To setup for zsh:\n\n        sqlitebiter completion zsh >> ~/.zshrc\n\n\nDependencies\n============\nPython 2.7+ or 3.5+\n\nPython package dependencies\n------------------------------------------------------------\n\nMandatory dependencies\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nFollowing mandatory Python packages are automatically installed during\n``sqlitebiter`` installation process:\n\n- `appconfigpy <https://github.com/thombashi/appconfigpy>`__\n- `click <http://click.pocoo.org/>`__\n- `colorama <https://github.com/tartley/colorama>`__\n- `logbook <https://logbook.readthedocs.io/en/stable/>`__\n- `msgfy <https://github.com/thombashi/msgfy>`__\n- `nbformat <https://jupyter.org/>`__\n- `path.py <https://github.com/jaraco/path.py>`__\n- `pathvalidate <https://github.com/thombashi/pathvalidate>`__\n- `pytablereader <https://github.com/thombashi/pytablereader>`__\n- `retryrequests <https://github.com/thombashi/retryrequests>`__\n- `SimpleSQLite <https://github.com/thombashi/SimpleSQLite>`__\n- `typepy <https://github.com/thombashi/typepy>`__\n\nGoogle Sheets dependencies (Optional)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nExtra Python packages are required to install to use Google Sheets feature (`gs` subcommand):\n\n- `gspread <https://github.com/burnash/gspread>`_\n- `oauth2client <https://github.com/google/oauth2client/>`_\n- `pyOpenSSL <https://pyopenssl.readthedocs.io/en/stable/>`_\n\nThe extra packages can be installed with the following `pip` command;\n\n.. code:: console\n\n    $ pip install sqlitebiter[gs]\n\nTest dependencies\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n- `pytest <https://docs.pytest.org/en/latest/>`__\n- `pytest-runner <https://github.com/pytest-dev/pytest-runner>`__\n- `responses <https://github.com/getsentry/responses>`__\n- `sqliteschema <https://github.com/thombashi/sqliteschema>`__\n- `tox <https://testrun.org/tox/latest/>`__\n\nMisc dependencies (Optional)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n- `lxml <https://lxml.de/installation.html>`__\n- `pypandoc <https://github.com/bebraw/pypandoc>`__\n    - required when converting MediaWiki files\n\n\nDependencies other than Python packages (Optional)\n------------------------------------------------------------\n- ``libxml2`` (faster HTML/Markdown conversion)\n- `pandoc <https://pandoc.org/>`__ (required when converting MediaWiki files)\n\nDocumentation\n===============\nhttps://sqlitebiter.rtfd.io/\n\n'