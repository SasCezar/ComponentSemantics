b'# Native R kernel for Jupyter [![b-Travis]][Travis] [![b-CRAN]][CRAN]\n\n[b-Travis]: https://travis-ci.org/IRkernel/IRkernel.svg?branch=master "Build status"\n[Travis]: https://travis-ci.org/IRkernel/IRkernel\n[b-CRAN]: https://www.r-pkg.org/badges/version/IRkernel "Comprehensive R Archive Network"\n[CRAN]: https://cran.r-project.org/package=IRkernel\n\nFor detailed requirements and install instructions see [irkernel.github.io](http://irkernel.github.io/)\n\n## Requirements\n\n* [Jupyter](http://jupyter.org).\n* A current [R installation](https://www.R-project.org).\n\n## Installation\n\nThis package is available on CRAN:\n\n```R\ninstall.packages(\'IRkernel\')\nIRkernel::installspec()  # to register the kernel in the current R installation\n```\n\nPer default `IRkernel::installspec()` will install a kernel with the name \xe2\x80\x9cir\xe2\x80\x9d and a\ndisplay name of \xe2\x80\x9cR\xe2\x80\x9d. Multiple calls will overwrite the kernel with a kernel spec pointing to the last\nR interpreter you called that commands from. You can install kernels for multiple versions of R\nby supplying a `name` and `displayname` argument to the `installspec()` call (You still need to\ninstall these packages in all interpreters you want to run as a jupyter kernel!):\n\n```r\n# in R 3.3\nIRkernel::installspec(name = \'ir33\', displayname = \'R 3.3\')\n# in R 3.2\nIRkernel::installspec(name = \'ir32\', displayname = \'R 3.2\')\n```\n\nNow both R versions are available as an R kernel in the notebook.\n\n### If you encounter problems during installation\n\n1. Have a look at the [full installation instructions](http://irkernel.github.io/installation/)!\n2. [Search the existing open and closed issues](https://github.com/IRkernel/IRkernel/issues?utf8=%E2%9C%93&q=is%3Aissue).\n3. If you are sure that this is a new problem, [file an issue](https://github.com/IRkernel/IRkernel/issues/new).\n\n## Running the notebook\n\nIf you have Jupyter installed, you can create a notebook using IRkernel from the dropdown menu.\n\nYou can also start other interfaces with an R kernel:\n\n```bash\n# \xe2\x80\x9cir\xe2\x80\x9d is the kernel name installed by the above `IRkernel::installspec()`\n# change if you used a different name!\njupyter qtconsole --kernel=ir\njupyter console --kernel=ir\n```\n\n## Run a stable release in a Docker container\n\nRefer to the [jupyter/docker-stacks r-notebook](https://github.com/jupyter/docker-stacks/tree/master/r-notebook) repository\n\nIf you have a Docker daemon running, e.g. reachable on localhost, start a container with:\n\n```bash\ndocker run -d -p 8888:8888 jupyter/r-notebook\n```\n\nOpen localhost:8888 in your browser. All notebooks from your session will be saved in the current directory.\n\nOn other platforms without docker, this can be started using `docker-machine` by replacing \xe2\x80\x9clocalhost\xe2\x80\x9d with an IP from `docker-machine ip <MACHINE>`. With the deprecated `boot2docker`, this IP will be `boot2docker ip`.\n\n## Develop and run from source in a Docker container\n\n```bash\nmake docker_dev_image #builds dev image and installs IRkernel dependencies from github\nmake docker_dev #mounts source, installs, and runs Jupyter notebook; docker_dev_image is a prerequisite\nmake docker_test #builds the package from source then runs the tests via R CMD check; docker_dev_image is a prerequisite\n```\n'