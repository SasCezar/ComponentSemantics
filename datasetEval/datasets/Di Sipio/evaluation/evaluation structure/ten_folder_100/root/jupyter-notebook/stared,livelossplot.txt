b'# Live Loss Plot\n\n![PyPI version](https://img.shields.io/pypi/pyversions/livelossplot.svg)\n![PyPI license](https://img.shields.io/pypi/l/livelossplot.svg)\n![PyPI status](https://img.shields.io/pypi/status/livelossplot.svg)\n[![Downloads](http://pepy.tech/badge/livelossplot)](http://pepy.tech/count/livelossplot)\n\nDon\'t train deep learning models blindfolded! Be impatient and look at each epoch of your training!\n\nA live training loss plot in [Jupyter Notebook](http://jupyter.org/) for [Keras](https://keras.io/), [PyTorch](http://pytorch.org/) and other frameworks. An open source Python package by [Piotr Migda\xc5\x82](https://p.migdal.pl/), and [others](https://github.com/stared/livelossplot/graphs/contributors). **Open for collaboration!** (Some tasks are as simple as writing code docstrings, so - no excuses! :))\n\n```\nfrom livelossplot.keras import PlotLossesCallback\n\nmodel.fit(X_train, Y_train,\n          epochs=10,\n          validation_data=(X_test, Y_test),\n          callbacks=[PlotLossesCallback()],\n          verbose=0)\n```\n\n![](livelossplot.gif)\n\nSo remember, [log your loss](https://twitter.com/pmigdal/status/943764924983017473)!\n\n* (The most FA)Q: Why not TensorBoard?\n* A: Jupyter Notebook compatibility (for exploration and teaching). Simplicity of use.\n\n## Installation\n\nTo install [this verson from PyPI](https://pypi.org/project/livelossplot/), type:\n\n```\npip install livelossplot\n```\n\nTo get the newest one from this repo (note that we are in the alpha stage, so there may be frequent updates), type:\n\n```\npip install git+git://github.com/stared/livelossplot.git\n```\n\n## Examples\n\nLook at notebook files with full working [examples](https://github.com/stared/livelossplot/blob/master/examples/):\n\n* [keras.ipynb](https://github.com/stared/livelossplot/blob/master/examples/keras.ipynb) - a Keras callback\n* [minimal.ipynb](https://github.com/stared/livelossplot/blob/master/examples/minimal.ipynb) - a bare API, to use anywhere\n* [pytorch.ipynb](https://github.com/stared/livelossplot/blob/master/examples/pytorch.ipynb) - a bare API, as applied to PyTorch\n* [2d_prediction_maps.ipynb](https://github.com/stared/livelossplot/blob/master/examples/2d_prediction_maps.ipynb) - example of custom plots - 2d prediction maps (0.4.1+)\n* [poutyne.ipynb](https://github.com/stared/livelossplot/blob/master/examples/poutyne.ipynb) - a Poutyne callback ([Poutyne](https://poutyne.org/) is a Keras-like framework for PyTorch)\n* [torchbearer.ipynb](https://github.com/stared/livelossplot/blob/master/examples/torchbearer.ipynb) - an example using the built in functionality from torchbearer ([torchbearer](https://github.com/ecs-vlc/torchbearer) is a model fitting library for PyTorch)\n* [neptune-minimal-terminal.py](https://github.com/stared/livelossplot/blob/master/examples/neptune-minimal-terminal.py) - a [Neptune.ML](https://neptune.ml/) Python script (so far the only way to use livelossplot outside of Jupyter)\n* [neptune-minimal-jupyter.ipynb](https://github.com/stared/livelossplot/blob/master/examples/neptune-minimal-jupyter.ipynb) - a [Neptune.ML](https://neptune.ml/) Jupyter Notebook integration\n\n## Overview\n\nText logs are easy, but it\'s easy to miss the most crucial information: is it learning, doing nothing or overfitting?\n\nVisual feedback allows us to keep track of the training process. Now there is one for Jupyter.\n\nIf you want to get serious - use [TensorBoard](https://www.tensorflow.org/programmers_guide/summaries_and_tensorboard) or even better - [Neptune - Machine Learning Lab](https://neptune.ml/) (as it allows to compare between models, in a Kaggle leaderboard style). Or, well use `tensorboard_dir="./logs"` or `target=\'neptune\'`. Now these are included as well!\n\nBut what if you just want to train a small model in Jupyter Notebook? Here is a way to do so, using `livelossplot` as a plug&play component.\n\nIt started as [this gist](https://gist.github.com/stared/dfb4dfaf6d9a8501cd1cc8b8cb806d2e). Since it went popular, I decided to rewrite it as a package.\n\nOh, an I am in general interested in data vis, see [Simple diagrams of convoluted neural networks](https://medium.com/inbrowserai/simple-diagrams-of-convoluted-neural-networks-39c097d2925b) (and overview of deep learning architecture diagrams):\n\n> A good diagram is worth a thousand equations\xe2\x80\x8a\xe2\x80\x94\xe2\x80\x8alet\xe2\x80\x99s create more of these!\n\n...or [my other data vis projects](https://p.migdal.pl/projects/).\n\n## To do\n\nIf you want more functionality - open an [Issue](https://github.com/stared/livelossplot/issues) or even better - prepare a [Pull Request](https://github.com/stared/livelossplot/pulls).\n'