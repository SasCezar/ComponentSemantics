b"# \xe7\x9b\xae\xe5\xbd\x95\n\n* [\xe4\xbd\xbf\xe7\x94\xa8\xe5\xbe\xaa\xe7\x8e\xaf\xe7\xa5\x9e\xe7\xbb\x8f\xe7\xbd\x91\xe7\xbb\x9c\xe7\xa0\xb4\xe8\xa7\xa3\xe9\xaa\x8c\xe8\xaf\x81\xe7\xa0\x81](#\xe4\xbd\xbf\xe7\x94\xa8\xe5\xbe\xaa\xe7\x8e\xaf\xe7\xa5\x9e\xe7\xbb\x8f\xe7\xbd\x91\xe7\xbb\x9c\xe7\xa0\xb4\xe8\xa7\xa3\xe9\xaa\x8c\xe8\xaf\x81\xe7\xa0\x81)\n* [\xe5\x9b\x9b\xe5\x88\x99\xe6\xb7\xb7\xe5\x90\x88\xe8\xbf\x90\xe7\xae\x97\xe8\xaf\x86\xe5\x88\xab\xef\xbc\x88\xe5\x88\x9d\xe8\xb5\x9b\xef\xbc\x89](#\xe5\x9b\x9b\xe5\x88\x99\xe6\xb7\xb7\xe5\x90\x88\xe8\xbf\x90\xe7\xae\x97\xe8\xaf\x86\xe5\x88\xab\xe5\x88\x9d\xe8\xb5\x9b)\n* [\xe5\x9b\x9b\xe5\x88\x99\xe6\xb7\xb7\xe5\x90\x88\xe8\xbf\x90\xe7\xae\x97\xe8\xaf\x86\xe5\x88\xab\xef\xbc\x88\xe5\x86\xb3\xe8\xb5\x9b\xef\xbc\x89](#\xe5\x9b\x9b\xe5\x88\x99\xe6\xb7\xb7\xe5\x90\x88\xe8\xbf\x90\xe7\xae\x97\xe8\xaf\x86\xe5\x88\xab\xe5\x86\xb3\xe8\xb5\x9b)\n\n# \xe4\xbd\xbf\xe7\x94\xa8\xe5\xbe\xaa\xe7\x8e\xaf\xe7\xa5\x9e\xe7\xbb\x8f\xe7\xbd\x91\xe7\xbb\x9c\xe7\xa0\xb4\xe8\xa7\xa3\xe9\xaa\x8c\xe8\xaf\x81\xe7\xa0\x81\n\n\xe5\xaf\xb9\xe4\xba\x8e\xe8\xbf\x99\xe7\xa7\x8d\xe6\x8c\x89\xe9\xa1\xba\xe5\xba\x8f\xe4\xb9\xa6\xe5\x86\x99\xe7\x9a\x84\xe6\x96\x87\xe5\xad\x97\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xbd\xbf\xe7\x94\xa8\xe5\xbe\xaa\xe7\x8e\xaf\xe7\xa5\x9e\xe7\xbb\x8f\xe7\xbd\x91\xe7\xbb\x9c\xe6\x9d\xa5\xe8\xaf\x86\xe5\x88\xab\xe5\xba\x8f\xe5\x88\x97\xe3\x80\x82\xe4\xb8\x8b\xe9\x9d\xa2\xe6\x88\x91\xe4\xbb\xac\xe6\x9d\xa5\xe4\xba\x86\xe8\xa7\xa3\xe4\xb8\x80\xe4\xb8\x8b\xe5\xa6\x82\xe4\xbd\x95\xe4\xbd\xbf\xe7\x94\xa8\xe5\xbe\xaa\xe7\x8e\xaf\xe7\xa5\x9e\xe7\xbb\x8f\xe7\xbd\x91\xe7\xbb\x9c\xe6\x9d\xa5\xe8\xaf\x86\xe5\x88\xab\xe8\xbf\x99\xe7\xb1\xbb\xe9\xaa\x8c\xe8\xaf\x81\xe7\xa0\x81\xe3\x80\x82\n\ncaptcha \xe9\x83\xa8\xe5\x88\x86\xe7\x9a\x84\xe4\xbb\xa3\xe7\xa0\x81\xe5\x92\x8c\xe4\xb9\x8b\xe5\x89\x8d\xe5\x8d\xb7\xe7\xa7\xaf\xe7\xa5\x9e\xe7\xbb\x8f\xe7\xbd\x91\xe7\xbb\x9c\xe8\xaf\x86\xe5\x88\xab\xe7\x9a\x84\xe4\xb8\x80\xe6\xa0\xb7\xef\xbc\x8c\xe5\x8f\xaa\xe6\x98\xaf\xe5\xb0\x86 `n_class` \xe6\x94\xb9\xe4\xb8\xba\xe4\xba\x86 `len(characters)+1`\xef\xbc\x8c\xe5\x9b\xa0\xe4\xb8\xba\xe6\x88\x91\xe4\xbb\xac\xe9\x9c\x80\xe8\xa6\x81\xe6\xb7\xbb\xe5\x8a\xa0\xe4\xb8\x80\xe4\xb8\xaa\xe7\xa9\xba\xe7\x99\xbd\xe7\xb1\xbb\xe7\x94\xa8\xe4\xba\x8e CTC Loss\xe3\x80\x82\n\n\xe5\x8f\x82\xe8\x80\x83\xe9\x93\xbe\xe6\x8e\xa5\xef\xbc\x9a[\xe4\xbd\xbf\xe7\x94\xa8\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe6\x9d\xa5\xe7\xa0\xb4\xe8\xa7\xa3 captcha \xe9\xaa\x8c\xe8\xaf\x81\xe7\xa0\x81](https://zhuanlan.zhihu.com/p/26078299)\n\n```py\nfrom captcha.image import ImageCaptcha\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport random\n\n%matplotlib inline\n%config InlineBackend.figure_format = 'retina'\n\nimport string\ncharacters = string.digits + string.ascii_uppercase\nprint(characters)\n\nwidth, height, n_len, n_class = 170, 80, 4, len(characters)+1\n\ngenerator = ImageCaptcha(width=width, height=height)\nrandom_str = ''.join([random.choice(characters) for j in range(4)])\nimg = generator.generate_image(random_str)\n\nplt.imshow(img)\nplt.title(random_str)\n```\n\n## CTC Loss\n\n\xe8\xbf\x99\xe4\xb8\xaa loss \xe6\x98\xaf\xe4\xb8\x80\xe4\xb8\xaa\xe7\x89\xb9\xe5\x88\xab\xe7\xa5\x9e\xe5\xa5\x87\xe7\x9a\x84 loss\xef\xbc\x8c\xe5\xae\x83\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x9c\xa8\xe5\x8f\xaa\xe7\x9f\xa5\xe9\x81\x93\xe5\xba\x8f\xe5\x88\x97\xe7\x9a\x84\xe9\xa1\xba\xe5\xba\x8f\xef\xbc\x8c\xe4\xb8\x8d\xe7\x9f\xa5\xe9\x81\x93\xe5\x85\xb7\xe4\xbd\x93\xe4\xbd\x8d\xe7\xbd\xae\xe7\x9a\x84\xe6\x83\x85\xe5\x86\xb5\xe4\xb8\x8b\xef\xbc\x8c\xe8\xae\xa9\xe6\xa8\xa1\xe5\x9e\x8b\xe6\x94\xb6\xe6\x95\x9b\xe3\x80\x82\xef\xbc\x88[warp-ctc](https://github.com/baidu-research/warp-ctc)\xef\xbc\x89\n\n![](imgs/deep-speech-ctc-small.png)\n\n\xe9\x82\xa3\xe4\xb9\x88\xe5\x9c\xa8 Keras \xe9\x87\x8c\xe9\x9d\xa2\xef\xbc\x8cCTC Loss \xe5\xb7\xb2\xe7\xbb\x8f\xe5\x86\x85\xe7\xbd\xae\xe4\xba\x86\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe7\x9b\xb4\xe6\x8e\xa5\xe5\xae\x9a\xe4\xb9\x89\xe8\xbf\x99\xe6\xa0\xb7\xe4\xb8\x80\xe4\xb8\xaa\xe5\x87\xbd\xe6\x95\xb0\xe5\x8d\xb3\xe5\x8f\xaf\xef\xbc\x8c\xe7\x94\xb1\xe4\xba\x8e\xe6\x88\x91\xe4\xbb\xac\xe4\xbd\xbf\xe7\x94\xa8\xe7\x9a\x84\xe6\x98\xaf\xe5\xbe\xaa\xe7\x8e\xaf\xe7\xa5\x9e\xe7\xbb\x8f\xe7\xbd\x91\xe7\xbb\x9c\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe9\xbb\x98\xe8\xae\xa4\xe4\xb8\xa2\xe6\x8e\x89\xe5\x89\x8d\xe9\x9d\xa2\xe4\xb8\xa4\xe4\xb8\xaa\xe8\xbe\x93\xe5\x87\xba\xef\xbc\x8c\xe5\x9b\xa0\xe4\xb8\xba\xe5\xae\x83\xe4\xbb\xac\xe9\x80\x9a\xe5\xb8\xb8\xe6\x97\xa0\xe6\x84\x8f\xe4\xb9\x89\xef\xbc\x8c\xe4\xb8\x94\xe4\xbc\x9a\xe5\xbd\xb1\xe5\x93\x8d\xe6\xa8\xa1\xe5\x9e\x8b\xe7\x9a\x84\xe8\xbe\x93\xe5\x87\xba\xe3\x80\x82\n\n* y\\_pred \xe6\x98\xaf\xe6\xa8\xa1\xe5\x9e\x8b\xe7\x9a\x84\xe8\xbe\x93\xe5\x87\xba\xef\xbc\x8c\xe6\x98\xaf\xe6\x8c\x89\xe9\xa1\xba\xe5\xba\x8f\xe8\xbe\x93\xe5\x87\xba\xe7\x9a\x8437\xe4\xb8\xaa\xe5\xad\x97\xe7\xac\xa6\xe7\x9a\x84\xe6\xa6\x82\xe7\x8e\x87\xef\xbc\x8c\xe5\x9b\xa0\xe4\xb8\xba\xe6\x88\x91\xe4\xbb\xac\xe8\xbf\x99\xe9\x87\x8c\xe7\x94\xa8\xe5\x88\xb0\xe4\xba\x86\xe5\xbe\xaa\xe7\x8e\xaf\xe7\xa5\x9e\xe7\xbb\x8f\xe7\xbd\x91\xe7\xbb\x9c\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe9\x9c\x80\xe8\xa6\x81\xe4\xb8\x80\xe4\xb8\xaa\xe7\xa9\xba\xe7\x99\xbd\xe5\xad\x97\xe7\xac\xa6\xe7\x9a\x84\xe7\xb1\xbb\xef\xbc\x9b\n* labels \xe6\x98\xaf\xe9\xaa\x8c\xe8\xaf\x81\xe7\xa0\x81\xef\xbc\x8c\xe6\x98\xaf\xe5\x9b\x9b\xe4\xb8\xaa\xe6\x95\xb0\xe5\xad\x97\xef\xbc\x8c\xe6\xaf\x8f\xe4\xb8\xaa\xe6\x95\xb0\xe5\xad\x97\xe5\xaf\xb9\xe5\xba\x94\xe5\xad\x97\xe7\xac\xa6\xe7\x9a\x84\xe7\xbc\x96\xe5\x8f\xb7\xef\xbc\x9b\n* input\\_length \xe8\xa1\xa8\xe7\xa4\xba y\\_pred \xe7\x9a\x84\xe9\x95\xbf\xe5\xba\xa6\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe8\xbf\x99\xe9\x87\x8c\xe6\x98\xaf15\xef\xbc\x9b\n* label\\_length \xe8\xa1\xa8\xe7\xa4\xba labels \xe7\x9a\x84\xe9\x95\xbf\xe5\xba\xa6\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe8\xbf\x99\xe9\x87\x8c\xe6\x98\xaf4\xe3\x80\x82\n\n```py\nfrom keras import backend as K\n\ndef ctc_lambda_func(args):\n    y_pred, labels, input_length, label_length = args\n    y_pred = y_pred[:, 2:, :]\n    return K.ctc_batch_cost(labels, y_pred, input_length, label_length)\n```\n\n## \xe6\xa8\xa1\xe5\x9e\x8b\xe7\xbb\x93\xe6\x9e\x84\n\n\xe6\x88\x91\xe4\xbb\xac\xe7\x9a\x84\xe6\xa8\xa1\xe5\x9e\x8b\xe7\xbb\x93\xe6\x9e\x84\xe6\x98\xaf\xe8\xbf\x99\xe6\xa0\xb7\xe8\xae\xbe\xe8\xae\xa1\xe7\x9a\x84\xef\xbc\x8c\xe9\xa6\x96\xe5\x85\x88\xe9\x80\x9a\xe8\xbf\x87\xe5\x8d\xb7\xe7\xa7\xaf\xe7\xa5\x9e\xe7\xbb\x8f\xe7\xbd\x91\xe7\xbb\x9c\xe5\x8e\xbb\xe8\xaf\x86\xe5\x88\xab\xe7\x89\xb9\xe5\xbe\x81\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe7\xbb\x8f\xe8\xbf\x87\xe4\xb8\x80\xe4\xb8\xaa\xe5\x85\xa8\xe8\xbf\x9e\xe6\x8e\xa5\xe9\x99\x8d\xe7\xbb\xb4\xef\xbc\x8c\xe5\x86\x8d\xe6\x8c\x89\xe6\xb0\xb4\xe5\xb9\xb3\xe9\xa1\xba\xe5\xba\x8f\xe8\xbe\x93\xe5\x85\xa5\xe5\x88\xb0\xe4\xb8\x80\xe7\xa7\x8d\xe7\x89\xb9\xe6\xae\x8a\xe7\x9a\x84\xe5\xbe\xaa\xe7\x8e\xaf\xe7\xa5\x9e\xe7\xbb\x8f\xe7\xbd\x91\xe7\xbb\x9c\xef\xbc\x8c\xe5\x8f\xab GRU\xef\xbc\x8c\xe5\x85\xa8\xe7\xa8\x8b\xe6\x98\xaf Gated Recurrent Unit\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x90\x86\xe8\xa7\xa3\xe4\xb8\xba\xe6\x98\xaf LSTM \xe7\x9a\x84\xe7\xae\x80\xe5\x8c\x96\xe7\x89\x88\xe3\x80\x82LSTM \xe6\x97\xa9\xe5\x9c\xa81997\xe5\xb9\xb4\xe5\xb0\xb1\xe5\xb7\xb2\xe7\xbb\x8f\xe8\xa2\xab\xe5\x8f\x91\xe6\x98\x8e\xe5\x87\xba\xe6\x9d\xa5\xe4\xba\x86\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf GRU \xe7\x9b\xb4\xe5\x88\xb02014\xe5\xb9\xb4\xe6\x89\x8d\xe5\x87\xba\xe7\x8e\xb0\xe3\x80\x82\xe7\xbb\x8f\xe8\xbf\x87\xe5\xae\x9e\xe9\xaa\x8c\xef\xbc\x8cGRU \xe6\x95\x88\xe6\x9e\x9c\xe6\xaf\x94 LSTM \xe8\xa6\x81\xe5\xa5\xbd\xe3\x80\x82\n\n\xe5\x8f\x82\xe8\x80\x83\xe9\x93\xbe\xe6\x8e\xa5\xef\xbc\x9ahttps://zhuanlan.zhihu.com/p/28297161\n\n```py\nfrom keras.models import *\nfrom keras.layers import *\nfrom keras.optimizers import *\nrnn_size = 128\n\ninput_tensor = Input((width, height, 3))\nx = input_tensor\nx = Lambda(lambda x:(x-127.5)/127.5)(x)\nfor i in range(3):\n    for j in range(2):\n        x = Convolution2D(32*2**i, 3, kernel_initializer='he_uniform')(x)\n        x = BatchNormalization()(x)\n        x = Activation('relu')(x)\n    x = MaxPooling2D((2, 2))(x)\n\nconv_shape = x.get_shape().as_list()\nrnn_length = conv_shape[1]\nrnn_dimen = conv_shape[2]*conv_shape[3]\nprint(conv_shape, rnn_length, rnn_dimen)\nx = Reshape(target_shape=(rnn_length, rnn_dimen))(x)\nrnn_length -= 2\n\nx = Dense(rnn_size, kernel_initializer='he_uniform')(x)\nx = BatchNormalization()(x)\nx = Activation('relu')(x)\nx = Dropout(0.2)(x)\n\ngru_1 = GRU(rnn_size, return_sequences=True, kernel_initializer='he_uniform', name='gru1')(x)\ngru_1b = GRU(rnn_size, return_sequences=True, kernel_initializer='he_uniform', \n             go_backwards=True, name='gru1_b')(x)\nx = add([gru_1, gru_1b])\n\ngru_2 = GRU(rnn_size, return_sequences=True, kernel_initializer='he_uniform', name='gru2')(x)\ngru_2b = GRU(rnn_size, return_sequences=True, kernel_initializer='he_uniform', \n             go_backwards=True, name='gru2_b')(x)\nx = concatenate([gru_2, gru_2b])\n\nx = Dropout(0.2)(x)\nx = Dense(n_class, activation='softmax')(x)\nbase_model = Model(inputs=input_tensor, outputs=x)\n\nlabels = Input(name='the_labels', shape=[n_len], dtype='float32')\ninput_length = Input(name='input_length', shape=[1], dtype='int64')\nlabel_length = Input(name='label_length', shape=[1], dtype='int64')\nloss_out = Lambda(ctc_lambda_func, output_shape=(1,), \n                  name='ctc')([x, labels, input_length, label_length])\n\nmodel = Model(inputs=[input_tensor, labels, input_length, label_length], outputs=[loss_out])\nmodel.compile(loss={'ctc': lambda y_true, y_pred: y_pred}, optimizer='adam')\n```\n\n\xe4\xbb\x8e Input \xe5\x88\xb0 \xe6\x9c\x80\xe5\x90\x8e\xe4\xb8\x80\xe4\xb8\xaa MaxPooling2D\xef\xbc\x8c\xe6\x98\xaf\xe4\xb8\x80\xe4\xb8\xaa\xe5\xbe\x88\xe6\xb7\xb1\xe7\x9a\x84\xe5\x8d\xb7\xe7\xa7\xaf\xe7\xa5\x9e\xe7\xbb\x8f\xe7\xbd\x91\xe7\xbb\x9c\xef\xbc\x8c\xe5\xae\x83\xe8\xb4\x9f\xe8\xb4\xa3\xe5\xad\xa6\xe4\xb9\xa0\xe5\xad\x97\xe7\xac\xa6\xe7\x9a\x84\xe5\x90\x84\xe4\xb8\xaa\xe7\x89\xb9\xe5\xbe\x81\xef\xbc\x8c\xe5\xb0\xbd\xe5\x8f\xaf\xe8\x83\xbd\xe5\x8c\xba\xe5\x88\x86\xe4\xb8\x8d\xe5\x90\x8c\xe7\x9a\x84\xe5\xad\x97\xe7\xac\xa6\xe3\x80\x82\xe5\xae\x83\xe8\xbe\x93\xe5\x87\xba shape \xe6\x98\xaf `[None, 17, 6, 128]`\xef\xbc\x8c\xe8\xbf\x99\xe4\xb8\xaa\xe5\xbd\xa2\xe7\x8a\xb6\xe7\x9b\xb8\xe5\xbd\x93\xe4\xba\x8e\xe6\x8a\x8a\xe4\xb8\x80\xe5\xbc\xa0\xe5\xae\xbd\xe4\xb8\xba 170\xef\xbc\x8c\xe9\xab\x98\xe4\xb8\xba 80 \xe7\x9a\x84\xe5\xbd\xa9\xe8\x89\xb2\xe5\x9b\xbe\xe5\x83\x8f (170, 80, 3)\xef\xbc\x8c\xe5\x8e\x8b\xe7\xbc\xa9\xe4\xb8\xba\xe5\xae\xbd\xe4\xb8\xba 17\xef\xbc\x8c\xe9\xab\x98\xe4\xb8\xba 6 \xe7\x9a\x84 128\xe7\xbb\xb4\xe7\x89\xb9\xe5\xbe\x81\xe7\x9a\x84\xe7\x89\xb9\xe5\xbe\x81\xe5\x9b\xbe (17, 6, 128)\xe3\x80\x82\n\n\xe7\x84\xb6\xe5\x90\x8e\xe6\x88\x91\xe4\xbb\xac\xe6\x8a\x8a\xe5\x9b\xbe\xe5\x83\x8f reshape \xe6\x88\x90 (17, 768)\xef\xbc\x8c\xe4\xb9\x9f\xe5\xb0\xb1\xe6\x98\xaf\xe6\x8a\x8a\xe9\xab\x98\xe5\x92\x8c\xe7\x89\xb9\xe5\xbe\x81\xe6\x94\xbe\xe5\x9c\xa8\xe4\xb8\x80\xe4\xb8\xaa\xe7\xbb\xb4\xe5\xba\xa6\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe9\x99\x8d\xe7\xbb\xb4\xe6\x88\x90 (17, 128)\xef\xbc\x8c\xe4\xb9\x9f\xe5\xb0\xb1\xe6\x98\xaf\xe4\xbb\x8e\xe5\xb7\xa6\xe5\x88\xb0\xe5\x8f\xb3\xe6\x9c\x8917\xe6\x9d\xa1\xe7\x89\xb9\xe5\xbe\x81\xef\xbc\x8c\xe6\xaf\x8f\xe4\xb8\xaa\xe7\x89\xb9\xe5\xbe\x81128\xe4\xb8\xaa\xe7\xbb\xb4\xe5\xba\xa6\xe3\x80\x82\n\n\xe8\xbf\x99128\xe4\xb8\xaa\xe7\xbb\xb4\xe5\xba\xa6\xe5\xb0\xb1\xe6\x98\xaf\xe8\xbf\x99\xe4\xb8\x80\xe6\x9d\xa1\xe5\x9b\xbe\xe5\x83\x8f\xe7\x9a\x84\xe9\x9d\x9e\xe5\xb8\xb8\xe9\xab\x98\xe7\xbb\xb4\xef\xbc\x8c\xe9\x9d\x9e\xe5\xb8\xb8\xe6\x8a\xbd\xe8\xb1\xa1\xe7\x9a\x84\xe6\xa6\x82\xe6\x8b\xac\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe6\x88\x91\xe4\xbb\xac\xe5\xb0\x8617\xe4\xb8\xaa\xe7\x89\xb9\xe5\xbe\x81\xe5\x90\x91\xe9\x87\x8f\xe4\xbe\x9d\xe6\xac\xa1\xe8\xbe\x93\xe5\x85\xa5\xe5\x88\xb0 GRU \xe4\xb8\xad\xef\xbc\x8cGRU \xe6\x9c\x89\xe8\x83\xbd\xe5\x8a\x9b\xe5\xad\xa6\xe4\xbc\x9a\xe4\xb8\x8d\xe5\x90\x8c\xe7\x89\xb9\xe5\xbe\x81\xe5\x90\x91\xe9\x87\x8f\xe7\x9a\x84\xe7\xbb\x84\xe5\x90\x88\xe4\xbc\x9a\xe4\xbb\xa3\xe8\xa1\xa8\xe4\xbb\x80\xe4\xb9\x88\xe5\xad\x97\xe7\xac\xa6\xef\xbc\x8c\xe5\x8d\xb3\xe4\xbd\xbf\xe6\x98\xaf\xe5\xad\x97\xe7\xac\xa6\xe4\xb9\x8b\xe9\x97\xb4\xe6\x9c\x89\xe7\xb2\x98\xe8\xbf\x9e\xe4\xb9\x9f\xe4\xb8\x8d\xe4\xbc\x9a\xe6\x80\x95\xe3\x80\x82\xe8\xbf\x99\xe9\x87\x8c\xe4\xbd\xbf\xe7\x94\xa8\xe4\xba\x86\xe5\x8f\x8c\xe5\x90\x91 GRU\xef\xbc\x8c\n\n\xe6\x9c\x80\xe5\x90\x8e Dropout \xe6\x8e\xa5\xe4\xb8\x80\xe4\xb8\xaa\xe5\x85\xa8\xe8\xbf\x9e\xe6\x8e\xa5\xe5\xb1\x82\xef\xbc\x8c\xe4\xbd\x9c\xe4\xb8\xba\xe5\x88\x86\xe7\xb1\xbb\xe5\x99\xa8\xe8\xbe\x93\xe5\x87\xba\xe6\xaf\x8f\xe4\xb8\xaa\xe5\xad\x97\xe7\xac\xa6\xe7\x9a\x84\xe6\xa6\x82\xe7\x8e\x87\xe3\x80\x82\n\n\xe8\xbf\x99\xe4\xb8\xaa\xe6\x98\xaf base\\_model \xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x84\xef\xbc\x8c\xe4\xb9\x9f\xe6\x98\xaf\xe6\x88\x91\xe4\xbb\xac\xe6\xa8\xa1\xe5\x9e\x8b\xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x84\xe3\x80\x82\xe9\x82\xa3\xe4\xb9\x88\xe5\x90\x8e\xe9\x9d\xa2\xe7\x9a\x84 labels, input\\_length, label\\_length \xe5\x92\x8c loss_out \xe9\x83\xbd\xe6\x98\xaf\xe4\xb8\xba\xe4\xba\x86\xe8\xbe\x93\xe5\x85\xa5\xe5\xbf\x85\xe8\xa6\x81\xe7\x9a\x84\xe6\x95\xb0\xe6\x8d\xae\xe6\x9d\xa5\xe8\xae\xa1\xe7\xae\x97 CTC Loss \xe7\x9a\x84\xe3\x80\x82\n\n\n## \xe6\xa8\xa1\xe5\x9e\x8b\xe5\x8f\xaf\xe8\xa7\x86\xe5\x8c\x96\n\n\xe5\x8f\xaf\xe8\xa7\x86\xe5\x8c\x96\xe7\x9a\x84\xe4\xbb\xa3\xe7\xa0\x81\xe5\x90\x8c\xe4\xb8\x8a\xef\xbc\x8c\xe8\xbf\x99\xe9\x87\x8c\xe5\x8f\xaa\xe8\xb4\xb4\xe5\x9b\xbe\xe3\x80\x82\n\n![](imgs/model2.png)\n\n\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9c\x8b\xe5\x88\xb0\xe6\xa8\xa1\xe5\x9e\x8b\xe6\xaf\x94\xe4\xb8\x8a\xe4\xb8\x80\xe4\xb8\xaa\xe6\xa8\xa1\xe5\x9e\x8b\xe5\xa4\x8d\xe6\x9d\x82\xe4\xba\x86\xe8\xae\xb8\xe5\xa4\x9a\xef\xbc\x8c\xe4\xbd\x86\xe5\xae\x9e\xe9\x99\x85\xe4\xb8\x8a\xe5\x8f\xaa\xe6\x98\xaf\xe5\x9b\xa0\xe4\xb8\xba\xe8\xbe\x93\xe5\x85\xa5\xe6\xaf\x94\xe8\xbe\x83\xe5\xa4\x9a\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe5\xae\x83\xe6\x98\xbe\xe5\xbe\x97\xe5\xbe\x88\xe5\xa4\xa7\xe3\x80\x82\xe8\xbf\x98\xe6\x9c\x89\xe4\xb8\x80\xe4\xb8\xaa\xe5\x80\xbc\xe5\xbe\x97\xe6\xb3\xa8\xe6\x84\x8f\xe7\x9a\x84\xe5\x9c\xb0\xe6\x96\xb9\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe7\x9a\x84\xe5\x9b\xbe\xe7\x89\x87\xe5\x9c\xa8\xe8\xbe\x93\xe5\x85\xa5\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\xe6\x98\xaf\xe7\xbb\x8f\xe8\xbf\x87\xe4\xba\x86\xe6\x97\x8b\xe8\xbd\xac\xe7\x9a\x84\xef\xbc\x8c\xe8\xbf\x99\xe6\x98\xaf\xe5\x9b\xa0\xe4\xb8\xba\xe6\x88\x91\xe4\xbb\xac\xe5\xb8\x8c\xe6\x9c\x9b\xe4\xbb\xa5\xe6\xb0\xb4\xe5\xb9\xb3\xe6\x96\xb9\xe5\x90\x91\xe8\xbe\x93\xe5\x85\xa5\xe5\xbe\xaa\xe7\x8e\xaf\xe7\xa5\x9e\xe7\xbb\x8f\xe7\xbd\x91\xe7\xbb\x9c\xef\xbc\x8c\xe8\x80\x8c\xe5\x9b\xbe\xe7\x89\x87\xe5\x9c\xa8 numpy \xe9\x87\x8c\xe9\xbb\x98\xe8\xae\xa4\xe6\x98\xaf\xe8\xbf\x99\xe6\xa0\xb7\xe7\x9a\x84\xe5\xbd\xa2\xe7\x8a\xb6\xef\xbc\x9a(height, width, 3)\xef\xbc\x8c\xe5\x9b\xa0\xe6\xad\xa4\xe6\x88\x91\xe4\xbb\xac\xe4\xbd\xbf\xe7\x94\xa8\xe4\xba\x86 `transpose` \xe5\x87\xbd\xe6\x95\xb0\xe5\xb0\x86\xe5\x9b\xbe\xe7\x89\x87\xe8\xbd\xac\xe4\xb8\xba\xe4\xba\x86(width, height, 3)\xe7\x9a\x84\xe6\xa0\xbc\xe5\xbc\x8f\xef\xbc\x8c\xe8\xbf\x99\xe6\xa0\xb7\xe5\xb0\xb1\xe8\x83\xbd\xe6\x8a\x8a X \xe8\xbd\xb4\xe8\xbd\xac\xe5\x88\xb0\xe7\xac\xac\xe4\xb8\x80\xe4\xb8\xaa\xe7\xbb\xb4\xe5\xba\xa6\xef\xbc\x8c\xe6\x96\xb9\xe4\xbe\xbf\xe8\xbe\x93\xe5\x85\xa5\xe5\x88\xb0\xe5\xbe\xaa\xe7\x8e\xaf\xe7\xa5\x9e\xe7\xbb\x8f\xe7\xbd\x91\xe7\xbb\x9c\xe3\x80\x82\n\n## \xe6\x95\xb0\xe6\x8d\xae\xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\n\n\xe6\xa0\xb9\xe6\x8d\xae\xe6\xa8\xa1\xe5\x9e\x8b\xe7\x9a\x84\xe8\xbe\x93\xe5\x85\xa5\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe9\x9c\x80\xe8\xa6\x81\xe8\xbe\x93\xe5\x85\xa5\xe5\x9b\x9b\xe4\xb8\xaa\xe6\x95\xb0\xe6\x8d\xae\xef\xbc\x9a\n\n* X \xe6\x98\xaf\xe4\xb8\x80\xe6\x89\xb9\xe5\x9b\xbe\xe7\x89\x87\xef\xbc\x9b\n* y \xe6\x98\xaf\xe6\xaf\x8f\xe4\xb8\xaa\xe5\x9b\xbe\xe7\x89\x87\xe5\xaf\xb9\xe5\xba\x94\xe7\x9a\x84 label\xef\xbc\x8c\xe6\x9c\x80\xe5\xa4\xa7\xe9\x95\xbf\xe5\xba\xa6\xe4\xb8\xba n_len\xef\xbc\x9b\n* input\\_length \xe8\xa1\xa8\xe7\xa4\xba\xe6\xa8\xa1\xe5\x9e\x8b\xe8\xbe\x93\xe5\x87\xba\xe7\x9a\x84\xe9\x95\xbf\xe5\xba\xa6\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe8\xbf\x99\xe9\x87\x8c\xe6\x98\xaf15\xef\xbc\x9b\n* label\\_length \xe8\xa1\xa8\xe7\xa4\xba labels \xe7\x9a\x84\xe9\x95\xbf\xe5\xba\xa6\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe8\xbf\x99\xe9\x87\x8c\xe6\x98\xaf4\xe3\x80\x82\n\n\xe6\x9c\x80\xe5\x90\x8e\xe8\xbf\x98\xe6\x9c\x89\xe4\xb8\x80\xe4\xb8\xaa\xe8\xbe\x93\xe5\x85\xa5\xe6\x98\xaf `np.ones(batch_size)`\xef\xbc\x8c\xe8\xbf\x99\xe6\x98\xaf\xe5\x9b\xa0\xe4\xb8\xba Keras \xe5\x9c\xa8\xe8\xae\xad\xe7\xbb\x83\xe6\xa8\xa1\xe5\x9e\x8b\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\xe5\xbf\x85\xe9\xa1\xbb\xe8\xbe\x93\xe5\x85\xa5\xe4\xb8\x80\xe4\xb8\xaa X \xe5\x92\x8c\xe4\xb8\x80\xe4\xb8\xaa y\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe8\xbf\x99\xe9\x87\x8c\xe6\x8a\x8a\xe4\xb8\x8a\xe9\x9d\xa2\xe5\x9b\x9b\xe4\xb8\xaa\xe9\x83\xbd\xe5\x90\x88\xe5\xb9\xb6\xe4\xb8\xba\xe4\xb8\x80\xe4\xb8\xaa X \xe4\xba\x86\xef\xbc\x8c\xe5\x9b\xa0\xe6\xad\xa4\xe5\xae\x9e\xe9\x99\x85\xe4\xb8\x8a y \xe6\xb2\xa1\xe6\x9c\x89\xe5\x8f\x82\xe4\xb8\x8e loss \xe7\x9a\x84\xe8\xae\xa1\xe7\xae\x97\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe9\x9a\x8f\xe4\xbe\xbf\xe7\xbc\x96\xe4\xb8\x80\xe4\xb8\xaa `batch_size` \xe9\x95\xbf\xe5\xba\xa6\xe7\x9a\x84\xe6\x95\xb0\xe6\x8d\xae\xe8\xbe\x93\xe5\x85\xa5\xe8\xbf\x9b\xe5\x8e\xbb\xe5\xb0\xb1\xe5\xa5\xbd\xe4\xba\x86\xe3\x80\x82\n\n```py\ndef gen(batch_size=128):\n    X = np.zeros((batch_size, width, height, 3), dtype=np.uint8)\n    y = np.zeros((batch_size, n_len), dtype=np.uint8)\n    generator = ImageCaptcha(width=width, height=height)\n    while True:\n        for i in range(batch_size):\n            random_str = ''.join([random.choice(characters) for j in range(n_len)])\n            X[i] = np.array(generator.generate_image(random_str)).transpose(1, 0, 2)\n            y[i] = [characters.find(x) for x in random_str]\n        yield [X, y, np.ones(batch_size)*rnn_length, np.ones(batch_size)*n_len], np.ones(batch_size)\n```\n\n\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xb8\xbe\xe4\xb8\xaa\xe4\xbe\x8b\xe5\xad\x90\xef\xbc\x8c\xe4\xbd\xbf\xe7\x94\xa8\xe4\xb8\x80\xe6\xac\xa1\xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\xef\xbc\x8c\xe7\x9c\x8b\xe7\x9c\x8b\xe8\xbe\x93\xe5\x87\xba\xe7\x9a\x84\xe6\x98\xaf\xe4\xbb\x80\xe4\xb9\x88\xe5\x86\x85\xe5\xae\xb9\xef\xbc\x9a\n\n```py\n(X_vis, y_vis, input_length_vis, label_length_vis), _ = next(gen(1))\nprint(X_vis.shape, y_vis, input_length_vis, label_length_vis)\n\nplt.imshow(X_vis[0].transpose(1, 0, 2))\nplt.title(''.join([characters[i] for i in y_vis[0]]))\n```\n\n\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9c\x8b\xe5\x88\xb0\xe8\xbe\x93\xe5\x87\xba\xe4\xba\x86\xe4\xb8\x8b\xe9\x9d\xa2\xe7\x9a\x84\xe5\x86\x85\xe5\xae\xb9\xef\xbc\x9a\n\n`(1, 170, 80, 3) [[29  4 21 21]] [ 15.] [ 4.]`\n\n![](imgs/generator_vis.png)\n\n\xe8\xbf\x99\xe9\x87\x8c\xef\xbc\x9a\n\n* X \xe7\x9a\x84 shape \xe6\x98\xaf `(1, 170, 80, 3)`\xef\xbc\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe6\x9c\x89 n \xe5\xbc\xa0\xe5\x9b\xbe\xef\xbc\x8cshape \xe5\xb0\xb1\xe6\x98\xaf `(n, 170, 80, 3)`\n* y \xe6\x98\xaf label\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9c\x8b\xe5\x88\xb0\xe7\x94\x9f\xe6\x88\x90\xe7\x9a\x84\xe5\x9b\xbe\xe7\x89\x87\xe6\x98\xaf T4LL\xef\xbc\x8c\xe9\x82\xa3\xe4\xb9\x88\xe6\x8c\x89\xe4\xb8\x8a\xe9\x9d\xa2\xe7\x9a\x84 characters\xef\xbc\x8clabel \xe5\xb0\xb1\xe6\x98\xaf `[29 4 21 21]`\xef\xbc\x8c\xe5\xa4\x96\xe9\x9d\xa2\xe8\xbf\x98\xe6\x9c\x89\xe4\xb8\x80\xe4\xb8\xaa\xe6\xa1\x86\xe6\x98\xaf\xe5\x9b\xa0\xe4\xb8\xba\xe8\xbf\x99\xe9\x87\x8c\xe9\x9d\xa2\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x9c\x89 n \xe4\xb8\xaa label\n* input\\_length \xe8\xa1\xa8\xe7\xa4\xba\xe6\xa8\xa1\xe5\x9e\x8b\xe8\xbe\x93\xe5\x87\xba\xe7\x9a\x84\xe9\x95\xbf\xe5\xba\xa6\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe8\xbf\x99\xe9\x87\x8c\xe6\x98\xaf15\xef\xbc\x9b\n* label\\_length \xe8\xa1\xa8\xe7\xa4\xba labels \xe7\x9a\x84\xe9\x95\xbf\xe5\xba\xa6\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe8\xbf\x99\xe9\x87\x8c\xe6\x98\xaf4\xe3\x80\x82\n\n## \xe8\xaf\x84\xe4\xbc\xb0\xe6\xa8\xa1\xe5\x9e\x8b\n\n\xe6\x88\x91\xe4\xbb\xac\xe4\xbc\x9a\xe9\x80\x9a\xe8\xbf\x87\xe8\xbf\x99\xe4\xb8\xaa\xe5\x87\xbd\xe6\x95\xb0\xe6\x9d\xa5\xe8\xaf\x84\xe4\xbc\xb0\xe6\x88\x91\xe4\xbb\xac\xe7\x9a\x84\xe6\xa8\xa1\xe5\x9e\x8b\xef\xbc\x8c\xe5\x92\x8c\xe4\xb8\x8a\xe9\x9d\xa2\xe7\x9a\x84\xe8\xaf\x84\xe4\xbc\xb0\xe6\xa0\x87\xe5\x87\x86\xe4\xb8\x80\xe6\xa0\xb7\xef\xbc\x8c\xe5\x8f\xaa\xe6\x9c\x89\xe5\x85\xa8\xe9\x83\xa8\xe6\xad\xa3\xe7\xa1\xae\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe6\x89\x8d\xe7\xae\x97\xe9\xa2\x84\xe6\xb5\x8b\xe6\xad\xa3\xe7\xa1\xae\xe3\x80\x82\xe8\xbf\x99\xe9\x87\x8c\xe6\x9c\x89\xe4\xb8\xaa\xe5\x9d\x91\xef\xbc\x8c\xe5\xb0\xb1\xe6\x98\xaf\xe6\xa8\xa1\xe5\x9e\x8b\xe6\x9c\x80\xe5\xbc\x80\xe5\xa7\x8b\xe8\xae\xad\xe7\xbb\x83\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\xef\xbc\x8c\xe5\xb9\xb6\xe4\xb8\x8d\xe4\xb8\x80\xe5\xae\x9a\xe4\xbc\x9a\xe8\xbe\x93\xe5\x87\xba\xe5\x9b\x9b\xe4\xb8\xaa\xe5\xad\x97\xe7\xac\xa6\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe6\x88\x91\xe4\xbb\xac\xe5\xa6\x82\xe6\x9e\x9c\xe9\x81\x87\xe5\x88\xb0\xe6\x89\x80\xe6\x9c\x89\xe7\x9a\x84\xe5\xad\x97\xe7\xac\xa6\xe9\x83\xbd\xe4\xb8\x8d\xe5\x88\xb0\xe5\x9b\x9b\xe4\xb8\xaa\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\xef\xbc\x8c\xe5\xb0\xb1\xe4\xb8\x8d\xe7\x94\xa8\xe8\xae\xa1\xe7\xae\x97\xe4\xba\x86\xef\xbc\x8c\xe4\xb8\x80\xe5\xae\x9a\xe6\x98\xaf\xe5\x85\xa8\xe9\x94\x99\xe3\x80\x82\xe9\x81\x87\xe5\x88\xb0\xe5\xa4\x9a\xe4\xba\x8e\xe5\x9b\x9b\xe4\xb8\xaa\xe5\xad\x97\xe7\xac\xa6\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\xef\xbc\x8c\xe5\x8f\xaa\xe5\x8f\x96\xe5\x89\x8d\xe5\x9b\x9b\xe4\xb8\xaa\xe3\x80\x82\n\n```py\ndef evaluate(batch_size=128, steps=10):\n    batch_acc = 0\n    generator = gen(batch_size)\n    for i in range(steps):\n        [X_test, y_test, _, _], _  = next(generator)\n        y_pred = base_model.predict(X_test)\n        shape = y_pred[:,2:,:].shape\n        ctc_decode = K.ctc_decode(y_pred[:,2:,:], input_length=np.ones(shape[0])*shape[1])[0][0]\n        out = K.get_value(ctc_decode)[:, :n_len]\n        if out.shape[1] == n_len:\n            batch_acc += (y_test == out).all(axis=1).mean()\n    return batch_acc / steps\n```\n\n## \xe8\xaf\x84\xe4\xbc\xb0\xe5\x9b\x9e\xe8\xb0\x83\n\n\xe5\x9b\xa0\xe4\xb8\xba Keras \xe6\xb2\xa1\xe6\x9c\x89\xe9\x92\x88\xe5\xaf\xb9 CTC \xe6\xa8\xa1\xe5\x9e\x8b\xe8\xae\xa1\xe7\xae\x97\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xe7\x9a\x84\xe9\x80\x89\xe9\xa1\xb9\xef\xbc\x8c\xe5\x9b\xa0\xe6\xad\xa4\xe6\x88\x91\xe4\xbb\xac\xe9\x9c\x80\xe8\xa6\x81\xe8\x87\xaa\xe5\xae\x9a\xe4\xb9\x89\xe4\xb8\x80\xe4\xb8\xaa\xe5\x9b\x9e\xe8\xb0\x83\xe5\x87\xbd\xe6\x95\xb0\xef\xbc\x8c\xe5\xae\x83\xe4\xbc\x9a\xe5\x9c\xa8\xe6\xaf\x8f\xe4\xb8\x80\xe4\xbb\xa3\xe8\xae\xad\xe7\xbb\x83\xe5\xae\x8c\xe6\x88\x90\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\xe8\xae\xa1\xe7\xae\x97\xe6\xa8\xa1\xe5\x9e\x8b\xe7\x9a\x84\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xe3\x80\x82\n\n```py\nfrom keras.callbacks import *\n\nclass Evaluator(Callback):\n    def __init__(self):\n        self.accs = []\n    \n    def on_epoch_end(self, epoch, logs=None):\n        acc = evaluate(steps=20)*100\n        self.accs.append(acc)\n        print('')\n        print('acc: %f%%' % acc)\n\nevaluator = Evaluator()\n```\n\n## \xe8\xae\xad\xe7\xbb\x83\xe6\xa8\xa1\xe5\x9e\x8b\n\n\xe6\x88\x91\xe4\xbb\xac\xe5\x85\x88\xe6\x8c\x89 `Adam(1e-3)` \xe7\x9a\x84\xe5\xad\xa6\xe4\xb9\xa0\xe7\x8e\x87\xe8\xae\xad\xe7\xbb\x8320\xe4\xbb\xa3\xef\xbc\x8c\xe8\xae\xa9\xe6\xa8\xa1\xe5\x9e\x8b\xe5\xbf\xab\xe9\x80\x9f\xe6\x94\xb6\xe6\x95\x9b\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe4\xbb\xa5 `Adam(1e-4)` \xe7\x9a\x84\xe5\xad\xa6\xe4\xb9\xa0\xe7\x8e\x87\xe5\x86\x8d\xe8\xae\xad\xe7\xbb\x8320\xe4\xbb\xa3\xe3\x80\x82\xe8\xbf\x99\xe9\x87\x8c\xe8\xae\xbe\xe7\xbd\xae\xe6\xaf\x8f\xe4\xbb\xa3\xe8\xae\xad\xe7\xbb\x83 400 \xe4\xb8\xaa step\xef\xbc\x8c\xe4\xb9\x9f\xe5\xb0\xb1\xe6\x98\xaf\xe6\xaf\x8f\xe4\xbb\xa3 `400*128=51200` \xe4\xb8\xaa\xe6\xa0\xb7\xe6\x9c\xac\xef\xbc\x8c\xe9\xaa\x8c\xe8\xaf\x81\xe9\x9b\x86\xe8\xae\xbe\xe7\xbd\xae\xe7\x9a\x84\xe6\x98\xaf `20*128=2048` \xe4\xb8\xaa\xe6\xa0\xb7\xe6\x9c\xac\xe3\x80\x82\n\n```py\nh = model.fit_generator(gen(128), steps_per_epoch=400, epochs=20,\n                        callbacks=[evaluator],\n                        validation_data=gen(128), validation_steps=20)\n```\n\n```py\nmodel.compile(loss={'ctc': lambda y_true, y_pred: y_pred}, optimizer=Adam(1e-4))\nh2 = model.fit_generator(gen(128), steps_per_epoch=400, epochs=20, \n                        callbacks=[evaluator],\n                        validation_data=gen(128), validation_steps=20)\n```\n\n\xe7\x84\xb6\xe5\x90\x8e\xe6\x88\x91\xe4\xbb\xac\xe5\xb0\x86 loss \xe5\x92\x8c acc \xe7\x9a\x84\xe6\x9b\xb2\xe7\xba\xbf\xe5\x9b\xbe\xe7\x94\xbb\xe5\x87\xba\xe6\x9d\xa5\xef\xbc\x9a\n\n```py\nplt.figure(figsize=(10, 4))\nplt.subplot(1, 2, 1)\nplt.plot(h.history['loss'] + h2.history['loss'])\nplt.plot(h.history['val_loss'] + h2.history['val_loss'])\nplt.legend(['loss', 'val_loss'])\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.ylim(0, 1)\n\nplt.subplot(1, 2, 2)\nplt.plot(evaluator.accs)\nplt.ylabel('acc')\nplt.xlabel('epoch')\n```\n\n![](imgs/loss_acc_3.png)\n\n\xe8\xae\xad\xe7\xbb\x83\xe5\x88\xb020\xe4\xbb\xa3\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\xef\xbc\x8c\xe6\xa8\xa1\xe5\x9e\x8b\xe6\x98\xaf\xe8\xbf\x99\xe6\xa0\xb7\xe7\x9a\x84\xe8\xa1\xa8\xe7\x8e\xb0\xef\xbc\x9a\n\n```\nEpoch 20/20\n399/400 [============================>.] - ETA: 0s - loss: 0.1593\nacc: 97.929688%\n400/400 [==============================] - 122s - loss: 0.1589 - val_loss: 0.1671\n```\n\n\xe8\xae\xad\xe7\xbb\x83\xe5\x88\xb040\xe4\xbb\xa3\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\xef\xbc\x8c\xe6\xa8\xa1\xe5\x9e\x8b\xe6\x98\xaf\xe8\xbf\x99\xe6\xa0\xb7\xe7\x9a\x84\xe8\xa1\xa8\xe7\x8e\xb0\xef\xbc\x9a\n\n```\nEpoch 20/20\n399/400 [============================>.] - ETA: 0s - loss: 0.1317\nacc: 99.570312%\n400/400 [==============================] - 123s - loss: 0.1315 - val_loss: 0.1130\n```\n\n## \xe6\xb5\x8b\xe8\xaf\x95\xe6\xa8\xa1\xe5\x9e\x8b\n\n```py\n(X_vis, y_vis, input_length_vis, label_length_vis), _ = next(gen(12))\n\ny_pred = base_model.predict(X_vis)\nshape = y_pred[:,2:,:].shape\nctc_decode = K.ctc_decode(y_pred[:,2:,:], input_length=np.ones(shape[0])*shape[1])[0][0]\nout = K.get_value(ctc_decode)[:, :4]\n\nplt.figure(figsize=(16, 8))\nfor i in range(12):\n    plt.subplot(3, 4, i+1)\n    plt.imshow(X_vis[i].transpose(1, 0, 2))\n    plt.title('pred:%s\\nreal :%s' % (''.join([characters[x] for x in out[i]]), \n                                     ''.join([characters[x] for x in y_vis[i]])))\n```\n\n![](imgs/test_model2.png)\n\n## \xe8\xaf\x84\xe4\xbc\xb0\xe6\xa8\xa1\xe5\x9e\x8b\n\n\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe5\xb0\x9d\xe8\xaf\x95\xe8\xae\xa1\xe7\xae\x97\xe6\xa8\xa1\xe5\x9e\x8b\xe7\x9a\x84\xe6\x80\xbb\xe4\xbd\x93\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xef\xbc\x8c\xe4\xbb\xa5\xe5\x8f\x8a\xe7\x9c\x8b\xe7\x9c\x8b\xe6\xa8\xa1\xe5\x9e\x8b\xe5\x88\xb0\xe5\xba\x95\xe9\x94\x99\xe5\x9c\xa8\xe5\x93\xaa\xe3\x80\x82\xe9\xa6\x96\xe5\x85\x88\xe7\x94\x9f\xe6\x88\x901024\xe4\xb8\xaa\xe6\xa0\xb7\xe6\x9c\xac\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe7\x94\xa8 `base_model` \xe8\xbf\x9b\xe8\xa1\x8c\xe9\xa2\x84\xe6\xb5\x8b\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe8\xa3\x81\xe5\x89\xaa\xe5\xb9\xb6\xe8\xbf\x9b\xe8\xa1\x8c ctc \xe8\xa7\xa3\xe7\xa0\x81\xef\xbc\x8c\xe6\x9c\x80\xe5\x90\x8e\xe8\xa3\x81\xe5\x89\xaa\xe5\x88\xb04\xe4\xb8\xaa label \xe5\xb9\xb6\xe4\xb8\x8e\xe7\x9c\x9f\xe5\xae\x9e\xe5\x80\xbc\xe8\xbf\x9b\xe8\xa1\x8c\xe5\xaf\xb9\xe6\xaf\x94\xe3\x80\x82\n\n```py\n(X_vis, y_vis, input_length_vis, label_length_vis), _ = next(gen(10000))\n\ny_pred = base_model.predict(X_vis, verbose=1)\nshape = y_pred[:,2:,:].shape\nctc_decode = K.ctc_decode(y_pred[:,2:,:], input_length=np.ones(shape[0])*shape[1])[0][0]\nout = K.get_value(ctc_decode)[:, :4]\n\n(y_vis == out).all(axis=1).mean()\n\n# 0.99460000000000004\n```\n\n\xe8\xbe\x93\xe5\x87\xba\xe7\xbb\x93\xe6\x9e\x9c\xe6\x98\xaf99.46%\xe7\x9a\x84\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xef\xbc\x8c\xe5\xb7\xb2\xe7\xbb\x8f\xe6\xaf\x94\xe4\xb8\x8a\xe4\xb8\x80\xe4\xb8\xaa\xe6\xa8\xa1\xe5\x9e\x8b\xe5\xbc\xba\xe5\xbe\x88\xe5\xa4\x9a\xe4\xba\x86\xe3\x80\x82\n\n\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe5\xaf\xb9\xe9\xa2\x84\xe6\xb5\x8b\xe9\x94\x99\xe7\x9a\x84\xe6\xa0\xb7\xe6\x9c\xac\xe8\xbf\x9b\xe8\xa1\x8c\xe7\xbb\x9f\xe8\xae\xa1\xef\xbc\x9a\n\n```py\nfrom collections import Counter\nCounter(''.join([characters[i] for i in y_vis[y_vis != out]]))\n\nCounter({'0': 37, 'O': 14, 'Q': 1, 'T': 1, 'W': 1})\n```\n\n\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x8f\x91\xe7\x8e\xb0\xe6\xa8\xa1\xe5\x9e\x8b\xe5\x9c\xa8 0 \xe5\x92\x8c O \xe7\x9a\x84\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xe7\xa8\x8d\xe5\xbe\xae\xe4\xbd\x8e\xe4\xb8\x80\xe7\x82\xb9\xef\xbc\x8c\xe5\x85\xb6\xe4\xbb\x96\xe7\x9a\x84\xe9\x94\x99\xe8\xaf\xaf\xe9\x83\xbd\xe5\x8f\xaa\xe6\x98\xaf\xe4\xb8\xaa\xe4\xbe\x8b\xe3\x80\x820\xe4\xb8\x8e O \xe7\xa1\xae\xe5\xae\x9e\xe6\x98\xaf\xe5\xbe\x88\xe9\x9a\xbe\xe5\x88\x86\xe8\xbe\xa8\xe7\x9a\x84\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe5\xb0\x9d\xe8\xaf\x95\xe7\x94\xa8\xe4\xbb\xa3\xe7\xa0\x81\xe7\x94\x9f\xe6\x88\x90\xe4\xb8\x80\xe4\xb8\xaa '0O0O' \xe7\x9a\x84\xe5\x9b\xbe\xe5\x83\x8f\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe7\x94\xa8\xe6\xa8\xa1\xe5\x9e\x8b\xe9\xa2\x84\xe6\xb5\x8b\xef\xbc\x9a\n\n```py\ncharacters2 = characters + ' '\n\ngenerator = ImageCaptcha(width=width, height=height)\nrandom_str = '0O0O'\nX_test = np.array(generator.generate_image(random_str))\nX_test = X_test.transpose(1, 0, 2)\nX_test = np.expand_dims(X_test, 0)\n\ny_pred = base_model.predict(X_test)\nshape = y_pred[:,2:,:].shape\nctc_decode = K.ctc_decode(y_pred[:,2:,:], input_length=np.ones(shape[0])*shape[1])[0][0]\nout = K.get_value(ctc_decode)[:, :4]\nout = ''.join([characters[x] for x in out[0]])\n\nplt.imshow(X_test[0].transpose(1, 0, 2))\nplt.title('pred:' + str(out))\n\nargmax = np.argmax(y_pred, axis=2)[0]\nlist(zip(argmax, ''.join([characters2[x] for x in argmax])))\n```\n\n![](imgs/0O0O.png)\n\n\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9c\x8b\xe5\x88\xb0\xe6\xa8\xa1\xe5\x9e\x8b\xe9\xa2\x84\xe6\xb5\x8b\xe5\xbe\x97\xe8\xbf\x98\xe6\x98\xaf\xe5\xbe\x88\xe5\x87\x86\xe7\x9a\x84\xe3\x80\x82\n\n## \xe6\x80\xbb\xe7\xbb\x93\n\n\xe6\xa8\xa1\xe5\x9e\x8b\xe7\x9a\x84\xe5\xa4\xa7\xe5\xb0\x8f\xe6\x98\xaf3.3MB\xef\xbc\x8c\xe5\x9c\xa8\xe6\x98\xbe\xe5\x8d\xa1\xe4\xb8\x8a\xe8\xb7\x9110000\xe5\xbc\xa0\xe9\xaa\x8c\xe8\xaf\x81\xe7\xa0\x81\xe9\x9c\x80\xe8\xa6\x81\xe7\x94\xa89\xe7\xa7\x92\xef\xbc\x8c\xe5\xb9\xb3\xe5\x9d\x87\xe4\xb8\x80\xe7\xa7\x92\xe8\xaf\x86\xe5\x88\xab\xe4\xb8\x80\xe5\x8d\x83\xe5\xbc\xa0\xe4\xbb\xa5\xe4\xb8\x8a\xef\xbc\x8c\xe5\xae\x8c\xe5\x85\xa8\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x8b\xbc\xe8\xbf\x87\xe7\xbd\x91\xe9\x80\x9f\xe3\x80\x82\xe5\x8d\xb3\xe4\xbd\xbf\xe6\x98\xaf\xe5\x9c\xa8\xe7\xac\x94\xe8\xae\xb0\xe6\x9c\xac\xe4\xb8\x8a\xe8\xb7\x91\xef\xbc\x8c\xe4\xb9\x9f\xe5\x8f\xaf\xe4\xbb\xa5\xe8\xb7\x91\xe5\x88\xb0\xe4\xb8\x80\xe7\xa7\x92\xe5\x87\xa0\xe5\x8d\x81\xe5\xbc\xa0\xe7\x9a\x84\xe9\x80\x9f\xe5\xba\xa6\xef\xbc\x8c\xe5\x9b\xa0\xe6\xad\xa4\xe6\xad\xa4\xe7\xb1\xbb\xe9\xaa\x8c\xe8\xaf\x81\xe7\xa0\x81\xe5\x8f\xaf\xe4\xbb\xa5\xe8\xaf\xb4\xe5\xb7\xb2\xe7\xbb\x8f\xe8\xa2\xab\xe7\xa0\xb4\xe8\xa7\xa3\xe4\xba\x86\xe3\x80\x82\n\n# \xe5\x9b\x9b\xe5\x88\x99\xe6\xb7\xb7\xe5\x90\x88\xe8\xbf\x90\xe7\xae\x97\xe8\xaf\x86\xe5\x88\xab\xef\xbc\x88\xe5\x88\x9d\xe8\xb5\x9b\xef\xbc\x89\n \n\xe6\x9c\xac\xe8\x8a\x82\xe4\xbc\x9a\xe8\xaf\xa6\xe7\xbb\x86\xe4\xbb\x8b\xe7\xbb\x8d\xe6\x88\x91\xe5\x9c\xa8\xe8\xbf\x9b\xe8\xa1\x8c\xe5\x9b\x9b\xe5\x88\x99\xe6\xb7\xb7\xe5\x90\x88\xe8\xbf\x90\xe7\xae\x97\xe8\xaf\x86\xe5\x88\xab\xe7\xab\x9e\xe8\xb5\x9b\xe5\x88\x9d\xe8\xb5\x9b\xe6\x97\xb6\xe7\x9a\x84\xe6\x89\x80\xe6\x9c\x89\xe6\x80\x9d\xe8\xb7\xaf\xe3\x80\x82\n\n\xe6\xa0\xb8\xe5\xbf\x83\xe6\x80\x9d\xe6\x83\xb3\xe5\x9c\xa8\xe5\x89\x8d\xe9\x9d\xa2\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe6\xad\xa4\xe5\xa4\x84\xe4\xbc\x9a\xe7\x9c\x81\xe7\x95\xa5\xe9\x83\xa8\xe5\x88\x86\xe9\x87\x8d\xe5\xa4\x8d\xe5\x86\x85\xe5\xae\xb9\xe3\x80\x82\n\n## \xe9\x97\xae\xe9\xa2\x98\xe6\x8f\x8f\xe8\xbf\xb0\n\n\xe6\x9c\xac\xe6\xac\xa1\xe7\xab\x9e\xe8\xb5\x9b\xe7\x9b\xae\xe7\x9a\x84\xe6\x98\xaf\xe4\xb8\xba\xe4\xba\x86\xe8\xa7\xa3\xe5\x86\xb3\xe4\xb8\x80\xe4\xb8\xaa OCR \xe9\x97\xae\xe9\xa2\x98\xef\xbc\x8c\xe9\x80\x9a\xe4\xbf\x97\xe5\x9c\xb0\xe8\xae\xb2\xe5\xb0\xb1\xe6\x98\xaf\xe5\xae\x9e\xe7\x8e\xb0\xe5\x9b\xbe\xe5\x83\x8f\xe5\x88\xb0\xe6\x96\x87\xe5\xad\x97\xe7\x9a\x84\xe8\xbd\xac\xe6\x8d\xa2\xe8\xbf\x87\xe7\xa8\x8b\xe3\x80\x82\n\n### \xe6\x95\xb0\xe6\x8d\xae\xe9\x9b\x86\n\n\xe5\x88\x9d\xe8\xb5\x9b\xe6\x95\xb0\xe6\x8d\xae\xe9\x9b\x86\xe4\xb8\x80\xe5\x85\xb1\xe5\x8c\x85\xe5\x90\xab10\xe4\xb8\x87\xe5\xbc\xa0180*60\xe7\x9a\x84\xe5\x9b\xbe\xe7\x89\x87\xe5\x92\x8c\xe4\xb8\x80\xe4\xb8\xaalabels.txt\xe7\x9a\x84\xe6\x96\x87\xe6\x9c\xac\xe6\x96\x87\xe4\xbb\xb6\xe3\x80\x82\xe6\xaf\x8f\xe5\xbc\xa0\xe5\x9b\xbe\xe7\x89\x87\xe5\x8c\x85\xe5\x90\xab\xe4\xb8\x80\xe4\xb8\xaa\xe6\x95\xb0\xe5\xad\xa6\xe8\xbf\x90\xe7\xae\x97\xe5\xbc\x8f\xef\xbc\x8c\xe8\xbf\x90\xe7\xae\x97\xe5\xbc\x8f\xe5\x8c\x85\xe5\x90\xab\xef\xbc\x9a\n\n3\xe4\xb8\xaa\xe8\xbf\x90\xe7\xae\x97\xe6\x95\xb0\xef\xbc\x9a3\xe4\xb8\xaa0\xe5\x88\xb09\xe7\x9a\x84\xe6\x95\xb4\xe5\x9e\x8b\xe6\x95\xb0\xe5\xad\x97\xef\xbc\x9b\n2\xe4\xb8\xaa\xe8\xbf\x90\xe7\xae\x97\xe7\xac\xa6\xef\xbc\x9a\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x98\xaf+\xe3\x80\x81-\xe3\x80\x81*\xef\xbc\x8c\xe5\x88\x86\xe5\x88\xab\xe4\xbb\xa3\xe8\xa1\xa8\xe5\x8a\xa0\xe6\xb3\x95\xe3\x80\x81\xe5\x87\x8f\xe6\xb3\x95\xe3\x80\x81\xe4\xb9\x98\xe6\xb3\x95\n0\xe6\x88\x961\xe5\xaf\xb9\xe6\x8b\xac\xe5\x8f\xb7\xef\xbc\x9a\xe6\x8b\xac\xe5\x8f\xb7\xe5\x8f\xaf\xe8\x83\xbd\xe6\x98\xaf0\xe5\xaf\xb9\xe6\x88\x96\xe8\x80\x851\xe5\xaf\xb9\n\n\xe5\x9b\xbe\xe7\x89\x87\xe7\x9a\x84\xe5\x90\x8d\xe7\xa7\xb0\xe4\xbb\x8e0.png\xe5\x88\xb099999.png\xef\xbc\x8c\xe4\xb8\x8b\xe9\x9d\xa2\xe6\x98\xaf\xe4\xb8\x80\xe4\xba\x9b\xe6\xa0\xb7\xe4\xbe\x8b\xe5\x9b\xbe\xe7\x89\x87\xef\xbc\x88\xe8\xbf\x99\xe9\x87\x8c\xe5\x8f\xaa\xe5\x8f\x96\xe4\xba\x86\xe4\xb8\x80\xe5\xbc\xa0\xef\xbc\x89\xef\xbc\x9a\n\n![](imgs/level1.png)\n\n\xe6\x96\x87\xe6\x9c\xac\xe6\x96\x87\xe4\xbb\xb6 labels.txt \xe5\x8c\x85\xe5\x90\xab10w\xe8\xa1\x8c\xe6\x96\x87\xe6\x9c\xac\xef\xbc\x8c\xe6\xaf\x8f\xe8\xa1\x8c\xe6\x96\x87\xe6\x9c\xac\xe5\x8c\x85\xe5\x90\xab\xe6\xaf\x8f\xe5\xbc\xa0\xe5\x9b\xbe\xe7\x89\x87\xe5\xaf\xb9\xe5\xba\x94\xe7\x9a\x84\xe5\x85\xac\xe5\xbc\x8f\xe4\xbb\xa5\xe5\x8f\x8a\xe5\x85\xac\xe5\xbc\x8f\xe7\x9a\x84\xe8\xae\xa1\xe7\xae\x97\xe7\xbb\x93\xe6\x9e\x9c\xef\xbc\x8c\xe5\x85\xac\xe5\xbc\x8f\xe5\x92\x8c\xe8\xae\xa1\xe7\xae\x97\xe7\xbb\x93\xe6\x9e\x9c\xe4\xb9\x8b\xe9\x97\xb4\xe7\xa9\xba\xe6\xa0\xbc\xe5\x88\x86\xe5\xbc\x80\xef\xbc\x8c\xe4\xbe\x8b\xe5\xa6\x82\xe5\x9b\xbe\xe7\x89\x87\xe4\xb8\xad\xe7\x9a\x84\xe7\xa4\xba\xe4\xbe\x8b\xe5\x9b\xbe\xe7\x89\x87\xe5\xaf\xb9\xe5\xba\x94\xe7\x9a\x84\xe6\x96\x87\xe6\x9c\xac\xe5\xa6\x82\xe4\xb8\x8b\xe6\x89\x80\xe7\xa4\xba\xef\xbc\x9a\n\n```\n(3-7)+5 1\n5-6+2 1\n(6+7)*2 26\n(4+2)+7 13\n(6*4)*4 96\n```\n\n### \xe8\xaf\x84\xe4\xbb\xb7\xe6\x8c\x87\xe6\xa0\x87\n\n\xe5\xae\x98\xe6\x96\xb9\xe7\x9a\x84\xe8\xaf\x84\xe4\xbb\xb7\xe6\x8c\x87\xe6\xa0\x87\xe6\x98\xaf\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xef\xbc\x8c\xe5\x88\x9d\xe8\xb5\x9b\xe5\x8f\xaa\xe6\x9c\x89\xe6\x95\xb4\xe6\x95\xb0\xe7\x9a\x84\xe5\x8a\xa0\xe5\x87\x8f\xe4\xb9\x98\xe8\xbf\x90\xe7\xae\x97\xef\xbc\x8c\xe6\x89\x80\xe5\xbe\x97\xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x9c\xe4\xb8\x80\xe5\xae\x9a\xe6\x98\xaf\xe6\x95\xb4\xe6\x95\xb0\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe8\xa6\x81\xe6\xb1\x82\xe5\xba\x8f\xe5\x88\x97\xe4\xb8\x8e\xe8\xbf\x90\xe7\xae\x97\xe7\xbb\x93\xe6\x9e\x9c\xe9\x83\xbd\xe6\xad\xa3\xe7\xa1\xae\xe6\x89\x8d\xe4\xbc\x9a\xe5\x88\xa4\xe5\xae\x9a\xe4\xb8\xba\xe6\xad\xa3\xe7\xa1\xae\xe3\x80\x82\n\n\xe6\x88\x91\xe4\xbb\xac\xe6\x9c\xac\xe5\x9c\xb0\xe9\x99\xa4\xe4\xba\x86\xe4\xbc\x9a\xe4\xbd\xbf\xe7\x94\xa8\xe5\xae\x98\xe6\x96\xb9\xe7\x9a\x84\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xe4\xbd\x9c\xe4\xb8\xba\xe8\xaf\x84\xe4\xbc\xb0\xe6\xa0\x87\xe5\x87\x86\xe4\xbb\xa5\xe5\xa4\x96\xef\xbc\x8c\xe8\xbf\x98\xe4\xbc\x9a\xe4\xbd\xbf\xe7\x94\xa8 CTC loss \xe6\x9d\xa5\xe8\xaf\x84\xe4\xbc\xb0\xe6\xa8\xa1\xe5\x9e\x8b\xe3\x80\x82\n\n## \xe4\xbd\xbf\xe7\x94\xa8 captcha \xe8\xbf\x9b\xe8\xa1\x8c\xe6\x95\xb0\xe6\x8d\xae\xe5\xa2\x9e\xe5\xbc\xba\n\n\xe5\xae\x98\xe6\x96\xb9\xe6\x8f\x90\xe4\xbe\x9b\xe4\xba\x8610\xe4\xb8\x87\xe5\xbc\xa0\xe5\x9b\xbe\xe7\x89\x87\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9b\xb4\xe6\x8e\xa5\xe4\xbd\xbf\xe7\x94\xa8\xe5\xae\x98\xe6\x96\xb9\xe6\x95\xb0\xe6\x8d\xae\xe8\xbf\x9b\xe8\xa1\x8c\xe8\xae\xad\xe7\xbb\x83\xef\xbc\x8c\xe4\xb9\x9f\xe5\x8f\xaf\xe4\xbb\xa5\xe9\x80\x9a\xe8\xbf\x87Captcha\xef\xbc\x8c\xe5\x8f\x82\xe7\x85\xa7\xe5\xae\x98\xe6\x96\xb9\xe8\xae\xad\xe7\xbb\x83\xe9\x9b\x86\xef\xbc\x8c\xe9\x9a\x8f\xe6\x9c\xba\xe7\x94\x9f\xe6\x88\x90\xe6\x9b\xb4\xe5\xa4\x9a\xe6\x95\xb0\xe6\x8d\xae\xef\xbc\x8c\xe8\xbf\x9b\xe8\x80\x8c\xe6\x8f\x90\xe9\xab\x98\xe5\x87\x86\xe7\xa1\xae\xe6\x80\xa7\xe3\x80\x82\xe6\xa0\xb9\xe6\x8d\xae\xe9\xa2\x98\xe7\x9b\xae\xe8\xa6\x81\xe6\xb1\x82\xef\xbc\x8clabel \xe5\xbf\x85\xe5\xae\x9a\xe6\x98\xaf\xe4\xb8\x89\xe4\xb8\xaa\xe6\x95\xb0\xe5\xad\x97\xef\xbc\x8c\xe4\xb8\xa4\xe4\xb8\xaa\xe8\xbf\x90\xe7\xae\x97\xe7\xac\xa6\xef\xbc\x8c\xe4\xb8\x80\xe5\xaf\xb9\xe6\x88\x96\xe6\xb2\xa1\xe6\x9c\x89\xe6\x8b\xac\xe5\x8f\xb7\xef\xbc\x8c\xe6\xa0\xb9\xe6\x8d\xae\xe6\x8b\xac\xe5\x8f\xb7\xe8\xa7\x84\xe5\x88\x99\xef\xbc\x8c\xe5\x8f\xaa\xe6\x9c\x89\xe5\x8f\xaf\xe8\x83\xbd\xe6\x98\xaf\xe6\xb2\xa1\xe6\x8b\xac\xe5\x8f\xb7\xef\xbc\x8c\xe5\xb7\xa6\xe6\x8b\xac\xe5\x8f\xb7\xe5\x92\x8c\xe5\x8f\xb3\xe6\x8b\xac\xe5\x8f\xb7\xef\xbc\x8c\xe5\x9b\xa0\xe6\xad\xa4\xe5\xbe\x88\xe5\xae\xb9\xe6\x98\x93\xe5\xb0\xb1\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x86\x99\xe5\x87\xba\xe6\x95\xb0\xe6\x8d\xae\xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\xe7\x9a\x84\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x82\n\n### \xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\n\n\xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\xe7\x9a\x84\xe7\x94\x9f\xe6\x88\x90\xe8\xa7\x84\xe5\x88\x99\xe5\xbe\x88\xe7\xae\x80\xe5\x8d\x95\xef\xbc\x9a\n\n```py\nimport string\nimport random\n\ndigits = string.digits\noperators = '+-*'\ncharacters = digits + operators + '() '\n\ndef generate():\n    seq = ''\n    k = random.randint(0, 2)\n    \n    if k == 1:\n        seq += '('\n    seq += random.choice(digits)\n    seq += random.choice(operators)\n    if k == 2:\n        seq += '('\n    seq += random.choice(digits)\n    if k == 1:\n        seq += ')'\n    seq += random.choice(operators)\n    seq += random.choice(digits)\n    if k == 2:\n        seq += ')'\n    \n    return seq\n```\n\n\xe7\x9b\xb8\xe4\xbf\xa1\xe5\xa4\xa7\xe5\xae\xb6\xe9\x83\xbd\xe8\x83\xbd\xe7\x9c\x8b\xe6\x87\x82\xe3\x80\x82\xe5\xbd\x93\xe7\x84\xb6\xef\xbc\x8c\xe6\x88\x91\xe5\x86\x99\xe6\x96\x87\xe7\xab\xa0\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\xe5\x8f\x88\xe6\x83\xb3\xe5\x88\xb0\xe4\xb8\x80\xe7\xa7\x8d\xe6\x9b\xb4\xe5\xa5\xbd\xe7\x9a\x84\xe5\x86\x99\xe6\xb3\x95\xef\xbc\x9a\n\n```py\nimport random\n\ndef generate():\n\tts = [u'{}{}{}{}{}', '({}{}{}){}{}', '{}{}({}{}{})']\n\tds = u'0123456789'\n\tos = u'+-*'\n\tcs = [random.choice(ds) if x%2 == 0 else random.choice(os) for x in range(5)]\n\treturn random.choice(ts).format(*cs)\n```\n\n\xe9\x99\xa4\xe4\xba\x86\xe7\x94\x9f\xe6\x88\x90\xe7\xae\x97\xe5\xbc\x8f\xe4\xbb\xa5\xe5\xa4\x96\xef\xbc\x8c\xe8\xbf\x98\xe6\x9c\x89\xe4\xb8\x80\xe4\xb8\xaa\xe5\x80\xbc\xe5\xbe\x97\xe6\xb3\xa8\xe6\x84\x8f\xe7\x9a\x84\xe5\x9c\xb0\xe6\x96\xb9\xe5\xb0\xb1\xe6\x98\xaf\xe5\x88\x9d\xe8\xb5\x9b\xe6\x89\x80\xe6\x9c\x89\xe7\x9a\x84\xe5\x87\x8f\xe5\x8f\xb7\xef\xbc\x88\xe4\xb9\x9f\xe5\xb0\xb1\xe6\x98\xaf\xe2\x80\x9c-\xe2\x80\x9d\xef\xbc\x89\xe9\x83\xbd\xe6\x98\xaf\xe7\xbb\x86\xe7\x9a\x84\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf\xe6\x88\x91\xe4\xbb\xac\xe7\x9b\xb4\xe6\x8e\xa5\xe7\x94\xa8 captcha \xe5\xba\x93\xe7\x94\x9f\xe6\x88\x90\xe5\x9b\xbe\xe5\x83\x8f\xe4\xbc\x9a\xe5\xbe\x97\xe5\x88\xb0\xe7\xb2\x97\xe7\x9a\x84\xe5\x87\x8f\xe5\x8f\xb7\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe6\x88\x91\xe4\xbb\xac\xe4\xbf\xae\xe6\x94\xb9\xe4\xba\x86 [image.py](https://github.com/lepture/captcha/blob/v0.2.2/captcha/image.py) \xe4\xb8\xad\xe7\x9a\x84\xe4\xbb\xa3\xe7\xa0\x81\xef\xbc\x8c\xe5\x9c\xa8 `_draw_character` \xe5\x87\xbd\xe6\x95\xb0\xe4\xb8\xad\xe6\x88\x91\xe4\xbb\xac\xe5\xa2\x9e\xe5\x8a\xa0\xe4\xba\x86\xe4\xb8\x80\xe5\x8f\xa5\xe5\x88\xa4\xe6\x96\xad\xef\xbc\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe6\x98\xaf\xe5\x87\x8f\xe5\x8f\xb7\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\xb0\xb1\xe4\xb8\x8d\xe8\xbf\x9b\xe8\xa1\x8c resize \xe6\x93\x8d\xe4\xbd\x9c\xef\xbc\x8c\xe8\xbf\x99\xe6\xa0\xb7\xe5\xb0\xb1\xe8\x83\xbd\xe9\x98\xb2\xe6\xad\xa2\xe5\x87\x8f\xe5\x8f\xb7\xe5\x8f\x98\xe7\xb2\x97\xef\xbc\x9a\n\n```py\n# line 191-194\nif c != '-':\n    im = im.resize((w2, h2))\n    im = im.transform((w, h), Image.QUAD, data)\n```\n\n\xe6\x88\x91\xe4\xbb\xac\xe7\xbb\xa7\xe8\x80\x8c\xe4\xbd\xbf\xe7\x94\xa8\xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\xe7\x94\x9f\xe6\x88\x90\xe5\x9b\x9b\xe5\x88\x99\xe8\xbf\x90\xe7\xae\x97\xe9\xaa\x8c\xe8\xaf\x81\xe7\xa0\x81\xef\xbc\x9a\n\n```py\nimport string\nimport os\n\ndigits = string.digits\noperators = '+-*'\ncharacters = digits + operators + '() '\nwidth, height, n_len, n_class = 180, 60, 7, len(characters) + 1\nfrom captcha.image import ImageCaptcha\ngenerator = ImageCaptcha(width=width, height=height,\n\tfont_sizes=range(35, 56), \n    fonts=['fonts/%s'%x for x in os.listdir('fonts') if '.tt' in x]\n)\ngenerator.generate_image('(1-2)-3')\n```\n\n![](imgs/level1_gen1.png)\n\n\xe4\xb8\x8a\xe5\x9b\xbe\xe5\xb0\xb1\xe6\x98\xaf\xe5\x8e\x9f\xe7\x89\x88\xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\xe7\x94\x9f\xe6\x88\x90\xe7\x9a\x84\xe5\x9b\xbe\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9c\x8b\xe5\x88\xb0\xe5\x87\x8f\xe5\x8f\xb7\xe6\x98\xaf\xe5\xbe\x88\xe7\xb2\x97\xe7\x9a\x84\xe3\x80\x82\n\n![](imgs/level1_gen2.png)\n\n\xe4\xb8\x8a\xe5\x9b\xbe\xe6\x98\xaf\xe4\xbf\xae\xe6\x94\xb9\xe8\xbf\x87\xe7\x9a\x84\xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9c\x8b\xe5\x88\xb0\xe5\x87\x8f\xe5\x8f\xb7\xe5\xb7\xb2\xe7\xbb\x8f\xe4\xb8\x8d\xe7\xb2\x97\xe4\xba\x86\xe3\x80\x82\n\n## \xe6\xa8\xa1\xe5\x9e\x8b\xe7\xbb\x93\xe6\x9e\x84\n\n```py\nfrom keras.layers import *\nfrom keras.models import *\nfrom make_parallel import make_parallel\nrnn_size = 128\n\ninput_tensor = Input((width, height, 3))\nx = input_tensor\nfor i in range(3):\n    x = Conv2D(32*2**i, (3, 3), kernel_initializer='he_normal')(x)\n    x = BatchNormalization()(x)\n    x = Activation('relu')(x)\n    x = Conv2D(32*2**i, (3, 3), kernel_initializer='he_normal')(x)\n    x = BatchNormalization()(x)\n    x = Activation('relu')(x)\n    x = MaxPooling2D(pool_size=(2, 2))(x)\n\nconv_shape = x.get_shape()\nx = Reshape(target_shape=(int(conv_shape[1]), int(conv_shape[2]*conv_shape[3])))(x)\n\nx = Dense(128, kernel_initializer='he_normal')(x)\nx = BatchNormalization()(x)\nx = Activation('relu')(x)\n\ngru_1 = GRU(rnn_size, return_sequences=True, kernel_initializer='he_normal', name='gru1')(x)\ngru_1b = GRU(rnn_size, return_sequences=True, go_backwards=True, kernel_initializer='he_normal', \n             name='gru1_b')(x)\ngru1_merged = add([gru_1, gru_1b])\n\ngru_2 = GRU(rnn_size, return_sequences=True, kernel_initializer='he_normal', name='gru2')(gru1_merged)\ngru_2b = GRU(rnn_size, return_sequences=True, go_backwards=True, kernel_initializer='he_normal', \n             name='gru2_b')(gru1_merged)\nx = concatenate([gru_2, gru_2b])\nx = Dropout(0.25)(x)\nx = Dense(n_class, kernel_initializer='he_normal', activation='softmax')(x)\nbase_model = Model(input=input_tensor, output=x)\n\nbase_model2 = make_parallel(base_model, 4)\n\nlabels = Input(name='the_labels', shape=[n_len], dtype='float32')\ninput_length = Input(name='input_length', shape=(1,), dtype='int64')\nlabel_length = Input(name='label_length', shape=(1,), dtype='int64')\nloss_out = Lambda(ctc_lambda_func, name='ctc')([base_model2.output, labels, input_length, label_length])\n\nmodel = Model(inputs=(input_tensor, labels, input_length, label_length), outputs=loss_out)\nmodel.compile(loss={'ctc': lambda y_true, y_pred: y_pred}, optimizer='adam')\n```\n\n\xe6\xa8\xa1\xe5\x9e\x8b\xe7\xbb\x93\xe6\x9e\x84\xe5\x83\x8f\xe4\xb9\x8b\xe5\x89\x8d\xe5\x86\x99\xe7\x9a\x84\xe6\x96\x87\xe7\xab\xa0\xe4\xb8\x80\xe6\xa0\xb7\xef\xbc\x8c\xe5\x8f\xaa\xe6\x98\xaf\xe6\x8a\x8a\xe5\x8d\xb7\xe7\xa7\xaf\xe6\xa0\xb8\xe7\x9a\x84\xe4\xb8\xaa\xe6\x95\xb0\xe6\x94\xb9\xe5\xa4\x9a\xe4\xba\x86\xe4\xb8\x80\xe7\x82\xb9\xef\xbc\x8c\xe5\x8a\xa0\xe4\xba\x86\xe4\xb8\x80\xe4\xba\x9b BN \xe5\xb1\x82\xef\xbc\x8c\xe5\xb9\xb6\xe4\xb8\x94\xe5\x9c\xa8\xe5\x9b\x9b\xe5\x8d\xa1\xe4\xb8\x8a\xe5\x81\x9a\xe4\xba\x86\xe4\xb8\x80\xe7\x82\xb9\xe5\xb0\x8f\xe6\x94\xb9\xe5\x8a\xa8\xe4\xbb\xa5\xe6\x94\xaf\xe6\x8c\x81\xe5\xa4\x9aGPU\xe8\xae\xad\xe7\xbb\x83\xe3\x80\x82\xe5\xa6\x82\xe6\x9e\x9c\xe4\xbd\xa0\xe6\x98\xaf\xe5\x8d\x95\xe5\x8d\xa1\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9b\xb4\xe6\x8e\xa5\xe5\x8e\xbb\xe6\x8e\x89 `base_model2 = make_parallel(base_model, 4)` \xe7\x9a\x84\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x82\n\nBN \xe5\xb1\x82\xe4\xb8\xbb\xe8\xa6\x81\xe6\x98\xaf\xe4\xb8\xba\xe4\xba\x86\xe8\xae\xad\xe7\xbb\x83\xe5\x8a\xa0\xe9\x80\x9f\xef\xbc\x8c\xe5\xae\x9e\xe9\xaa\x8c\xe7\xbb\x93\xe6\x9e\x9c\xe9\x9d\x9e\xe5\xb8\xb8\xe5\xa5\xbd\xef\xbc\x8c\xe6\xa8\xa1\xe5\x9e\x8b\xe6\x94\xb6\xe6\x95\x9b\xe5\xbf\xab\xe4\xba\x86\xe5\xbe\x88\xe5\xa4\x9a\xe3\x80\x82\n\nbase_model \xe7\x9a\x84\xe5\x8f\xaf\xe8\xa7\x86\xe5\x8c\x96\xef\xbc\x9a\n\n![](imgs/level1_base_model.png)\n\nmodel \xe7\x9a\x84\xe5\x8f\xaf\xe8\xa7\x86\xe5\x8c\x96\xef\xbc\x9a\n\n![](imgs/level1_model.png)\n\n## \xe6\xa8\xa1\xe5\x9e\x8b\xe8\xae\xad\xe7\xbb\x83\n\n\xe5\x9c\xa8\xe7\xbb\x8f\xe8\xbf\x87\xe5\x87\xa0\xe6\xac\xa1\xe6\xb5\x8b\xe8\xaf\x95\xe4\xbb\xa5\xe5\x90\x8e\xef\xbc\x8c\xe6\x88\x91\xe5\xb7\xb2\xe7\xbb\x8f\xe6\x8a\x9b\xe5\xbc\x83\xe4\xba\x86 evaluate \xe5\x87\xbd\xe6\x95\xb0\xef\xbc\x8c\xe5\x9b\xa0\xe4\xb8\xba\xe5\x9c\xa8\xe9\xaa\x8c\xe8\xaf\x81\xe9\x9b\x86\xe4\xb8\x8a\xe5\xb7\xb2\xe7\xbb\x8f\xe8\x83\xbd\xe5\x81\x9a\xe5\x88\xb0 100% \xe8\xaf\x86\xe5\x88\xab\xe7\x8e\x87\xe4\xba\x86\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe5\x8f\xaa\xe9\x9c\x80\xe8\xa6\x81\xe7\x9c\x8b val_loss \xe5\xb0\xb1\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xba\x86\xe3\x80\x82\xe5\x9c\xa8\xe7\xbb\x8f\xe8\xbf\x87\xe4\xb9\x8b\xe5\x89\x8d\xe7\x9a\x84\xe5\x87\xa0\xe6\xac\xa1\xe5\xb0\x9d\xe8\xaf\x95\xe4\xbb\xa5\xe5\x90\x8e\xef\xbc\x8c\xe6\x88\x91\xe5\x8f\x91\xe7\x8e\xb0\xe5\x9c\xa8\xe6\x9c\x89\xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\xe7\x9a\x84\xe6\x83\x85\xe5\x86\xb5\xe4\xb8\x8b\xef\xbc\x8c\xe8\xae\xad\xe7\xbb\x83\xe4\xbb\xa3\xe6\x95\xb0\xe8\xb6\x8a\xe5\xa4\x9a\xe8\xb6\x8a\xe5\xa5\xbd\xef\xbc\x8c\xe5\x9b\xa0\xe6\xad\xa4\xe7\x9b\xb4\xe6\x8e\xa5\xe7\x94\xa8 adam \xe8\xb7\x91\xe4\xba\x8650\xe4\xbb\xa3\xef\xbc\x8c\xe6\xaf\x8f\xe4\xbb\xa310\xe4\xb8\x87\xe6\xa0\xb7\xe6\x9c\xac\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9c\x8b\xe5\x88\xb0\xe6\xa8\xa1\xe5\x9e\x8b\xe5\x9c\xa810\xe4\xbb\xa3\xe4\xbb\xa5\xe5\x90\x8e\xe5\x9f\xba\xe6\x9c\xac\xe5\xb7\xb2\xe7\xbb\x8f\xe6\x94\xb6\xe6\x95\x9b\xe3\x80\x82\n\n![](imgs/level1_loss.png)\n\n\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9c\x8b\xe5\x88\xb0\xe6\xa8\xa1\xe5\x9e\x8b\xe5\x85\x88\xe5\x88\x86\xe4\xb8\xba\xe5\x9b\x9b\xe4\xbb\xbd\xef\xbc\x8c\xe5\x9c\xa8\xe5\x9b\x9b\xe4\xb8\xaa\xe6\x98\xbe\xe5\x8d\xa1\xe4\xb8\x8a\xe5\xb9\xb6\xe8\xa1\x8c\xe8\xae\xa1\xe7\xae\x97\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe5\x90\x88\xe5\xb9\xb6\xe7\xbb\x93\xe6\x9e\x9c\xef\xbc\x8c\xe8\xae\xa1\xe7\xae\x97\xe6\x9c\x80\xe5\x90\x8e\xe7\x9a\x84 ctc loss\xef\xbc\x8c\xe8\xbf\x9b\xe8\x80\x8c\xe8\xae\xad\xe7\xbb\x83\xe6\xa8\xa1\xe5\x9e\x8b\xe3\x80\x82\n\n## \xe7\xbb\x93\xe6\x9e\x9c\xe5\x8f\xaf\xe8\xa7\x86\xe5\x8c\x96\n\n\xe8\xbf\x99\xe9\x87\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\xaf\xb9\xe7\x94\x9f\xe6\x88\x90\xe7\x9a\x84\xe6\x95\xb0\xe6\x8d\xae\xe8\xbf\x9b\xe8\xa1\x8c\xe4\xba\x86\xe5\x8f\xaf\xe8\xa7\x86\xe5\x8c\x96\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9c\x8b\xe5\x88\xb0\xe6\xa8\xa1\xe5\x9e\x8b\xe5\x9f\xba\xe6\x9c\xac\xe5\xb7\xb2\xe7\xbb\x8f\xe5\x81\x9a\xe5\x88\xb0\xe4\xb8\x87\xe6\x97\xa0\xe4\xb8\x80\xe5\xa4\xb1\xef\xbc\x8c\xe7\x99\xbe\xe5\x8f\x91\xe7\x99\xbe\xe4\xb8\xad\xe3\x80\x82\n\n![](imgs/level1_visualization.png)\n\n\n\xe6\x89\x93\xe5\x8c\x85\xe6\x88\x90 docker \xe4\xbb\xa5\xe5\x90\x8e\xe6\x8f\x90\xe4\xba\xa4\xe5\x88\xb0\xe6\xaf\x94\xe8\xb5\x9b\xe7\xb3\xbb\xe7\xbb\x9f\xe4\xb8\xad\xef\xbc\x8c\xe7\xbb\x8f\xe8\xbf\x87\xe5\x8d\x81\xe5\x87\xa0\xe5\x88\x86\xe9\x92\x9f\xe7\x9a\x84\xe8\xbf\x90\xe8\xa1\x8c\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\xbe\x97\xe5\x88\xb0\xe4\xba\x86\xe5\xae\x8c\xe7\xbe\x8e\xe7\x9a\x841\xe5\x88\x86\xe3\x80\x82\n\n![](imgs/level1_score.png)\n\n## \xe6\x80\xbb\xe7\xbb\x93\n\n\xe5\x88\x9d\xe8\xb5\x9b\xe6\x98\xaf\xe9\x9d\x9e\xe5\xb8\xb8\xe7\xae\x80\xe5\x8d\x95\xe7\x9a\x84\xef\xbc\x8c\xe5\x9b\xa0\xe6\xad\xa4\xe6\x88\x91\xe4\xbb\xac\xe6\x89\x8d\xe8\x83\xbd\xe5\xbe\x97\xe5\x88\xb0\xe8\xbf\x99\xe4\xb9\x88\xe5\x87\x86\xe7\x9a\x84\xe5\x88\x86\xe6\x95\xb0\xef\xbc\x8c\xe4\xb9\x8b\xe5\x90\x8e\xe5\xae\x98\xe6\x96\xb9\xe8\xbf\x9b\xe4\xb8\x80\xe6\xad\xa5\xe6\x8f\x90\xe5\x8d\x87\xe4\xba\x86\xe9\x9a\xbe\xe5\xba\xa6\xef\xbc\x8c\xe5\xb0\x86\xe5\x88\x9d\xe8\xb5\x9b\xe6\xb5\x8b\xe8\xaf\x95\xe9\x9b\x86\xe6\x8f\x90\xe9\xab\x98\xe5\x88\xb0\xe4\xba\x8620\xe4\xb8\x87\xe5\xbc\xa0\xef\xbc\x8c\xe5\x9c\xa8\xe8\xbf\x99\xe4\xb8\xaa\xe9\x9b\x86\xe4\xb8\x8a\xe6\x88\x91\xe4\xbb\xac\xe7\x9a\x84\xe6\xa8\xa1\xe5\x9e\x8b\xe5\x8f\xaa\xe8\x83\xbd\xe6\x8b\xbf\xe5\x88\xb00.999925\xe7\x9a\x84\xe6\x88\x90\xe7\xbb\xa9\xef\xbc\x8c\xe5\x8f\xaf\xe8\xa1\x8c\xe7\x9a\x84\xe6\x94\xb9\xe8\xbf\x9b\xe6\x96\xb9\xe6\xb3\x95\xe6\x98\xaf\xe5\xb0\x86\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xe8\xbf\x9b\xe4\xb8\x80\xe6\xad\xa5\xe9\x99\x8d\xe4\xbd\x8e\xef\xbc\x8c\xe5\x85\x85\xe5\x88\x86\xe8\xae\xad\xe7\xbb\x83\xe6\xa8\xa1\xe5\x9e\x8b\xef\xbc\x8c\xe5\xb0\x86\xe5\xa4\x9a\xe4\xb8\xaa\xe6\xa8\xa1\xe5\x9e\x8b\xe7\xbb\x93\xe6\x9e\x9c\xe8\x9e\x8d\xe5\x90\x88\xe7\xad\x89\xe3\x80\x82\n\n### \xe5\xae\x98\xe6\x96\xb9\xe6\x89\xa9\xe5\x85\x85\xe6\xb5\x8b\xe8\xaf\x95\xe9\x9b\x86\xe7\x9a\x84\xe9\x9a\xbe\xe7\x82\xb9\n\n\xe5\x9c\xa8\xe6\x89\xa9\xe5\x85\x85\xe6\x95\xb0\xe6\x8d\xae\xe9\x9b\x86\xe4\xb8\x8a\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\x91\xe7\x8e\xb0\xe6\x9c\x89\xe4\xb8\x80\xe4\xba\x9b\xe5\x9b\xbe\xe7\x89\x87\xe9\xa2\x84\xe6\xb5\x8b\xe5\x87\xba\xe6\x9d\xa5\xe6\x97\xa0\xe6\xb3\x95\xe8\xae\xa1\xe7\xae\x97\xef\xbc\x8c\xe6\xaf\x94\xe5\xa6\x82 `[629,2271,6579,17416,71857,77631,95303,102187,117422,142660,183693]` \xe7\xad\x89\xef\xbc\x8c\xe8\xbf\x99\xe9\x87\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\x96 117422.png \xe4\xb8\xba\xe4\xbe\x8b\xe3\x80\x82\n\n![](imgs/level1_117422.png)\n\n\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9c\x8b\xe5\x88\xb0\xe8\x82\x89\xe7\x9c\xbc\xe5\x9f\xba\xe6\x9c\xac\xe6\x97\xa0\xe6\xb3\x95\xe8\xae\xa4\xe5\x87\xba\xe8\xbf\x99\xe4\xb8\xaa\xe5\x9b\xbe\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf\xe7\xbb\x8f\xe8\xbf\x87\xe4\xb8\x80\xe5\xae\x9a\xe7\x9a\x84\xe5\x9b\xbe\xe5\x83\x8f\xe5\xa4\x84\xe7\x90\x86\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x98\xbe\xe7\x8e\xb0\xe5\x87\xba\xe6\x9d\xa5\xe5\xae\x83\xe7\x9a\x84\xe7\x9c\x9f\xe5\xae\x9e\xe9\x9d\xa2\xe8\xb2\x8c\xef\xbc\x9a\n\n```py\nIMAGE_DIR = 'image_contest_level_1_validate'\nindex = 117422\n\nimg = cv2.imread('%s/%d.png' % (IMAGE_DIR, index))\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\nh = cv2.equalizeHist(gray)\n```\n\n\xe7\x84\xb6\xe5\x90\x8e\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9c\x8b\xe5\x88\xb0\xe8\xbf\x99\xe6\xa0\xb7\xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x9c\xef\xbc\x9a\n\n![](imgs/level1_preprocessing.png)\n\n\xe5\xbd\x93\xe7\x84\xb6\xef\xbc\x8c\xe8\xbf\x98\xe6\x9c\x89\xe4\xb8\x80\xe5\xbc\xa0\xe5\x9b\xbe\xe6\x98\xaf\xe6\x97\xa0\xe6\xb3\x95\xe9\x80\x9a\xe8\xbf\x87\xe9\xa2\x84\xe5\xa4\x84\xe7\x90\x86\xe5\xbe\x97\xe5\x88\xb0\xe7\xbb\x93\xe6\x9e\x9c\xe7\x9a\x84\xef\xbc\x8c142660\xef\xbc\x8c\xe8\xbf\x99\xe6\x9c\x89\xe5\x8f\xaf\xe8\x83\xbd\xe6\x98\xaf\xe7\xa8\x8b\xe5\xba\x8f\xe7\x9a\x84 bug \xe9\x80\xa0\xe6\x88\x90\xe7\x9a\x84\xe5\xb0\x8f\xe6\xa6\x82\xe7\x8e\x87\xe4\xba\x8b\xe4\xbb\xb6\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe5\x88\x9d\xe8\xb5\x9b\xe9\x99\xa4\xe4\xba\x86\xe6\x88\x91\xe4\xbb\xac\xe8\xb7\x91\xe4\xba\x86\xe4\xb8\x80\xe4\xb8\xaa docker \xe5\xbe\x97\xe5\x88\xb0\xe6\xbb\xa1\xe5\x88\x86\xe4\xbb\xa5\xe5\xa4\x96\xef\xbc\x8c\xe6\xb2\xa1\xe6\x9c\x89\xe7\xac\xac\xe4\xba\x8c\xe4\xb8\xaa\xe4\xba\xba\xe8\xbe\xbe\xe5\x88\xb0\xe6\xbb\xa1\xe5\x88\x86\xe3\x80\x82\n\n![](imgs/level1_142660.png)\n\n![](imgs/level1_leaderboard.png)\n\n# \xe5\x9b\x9b\xe5\x88\x99\xe6\xb7\xb7\xe5\x90\x88\xe8\xbf\x90\xe7\xae\x97\xe8\xaf\x86\xe5\x88\xab\xef\xbc\x88\xe5\x86\xb3\xe8\xb5\x9b\xef\xbc\x89\n \n\xe6\x9c\xac\xe8\x8a\x82\xe4\xbc\x9a\xe8\xaf\xa6\xe7\xbb\x86\xe4\xbb\x8b\xe7\xbb\x8d\xe6\x88\x91\xe5\x9c\xa8\xe8\xbf\x9b\xe8\xa1\x8c\xe5\x9b\x9b\xe5\x88\x99\xe6\xb7\xb7\xe5\x90\x88\xe8\xbf\x90\xe7\xae\x97\xe8\xaf\x86\xe5\x88\xab\xe7\xab\x9e\xe8\xb5\x9b\xe5\x86\xb3\xe8\xb5\x9b\xe6\x97\xb6\xe7\x9a\x84\xe6\x89\x80\xe6\x9c\x89\xe6\x80\x9d\xe8\xb7\xaf\xe3\x80\x82\n\n## \xe9\x97\xae\xe9\xa2\x98\xe6\x8f\x8f\xe8\xbf\xb0\n\n\xe6\x9c\xac\xe6\xac\xa1\xe7\xab\x9e\xe8\xb5\x9b\xe7\x9b\xae\xe7\x9a\x84\xe6\x98\xaf\xe4\xb8\xba\xe4\xba\x86\xe8\xa7\xa3\xe5\x86\xb3\xe4\xb8\x80\xe4\xb8\xaa OCR \xe9\x97\xae\xe9\xa2\x98\xef\xbc\x8c\xe9\x80\x9a\xe4\xbf\x97\xe5\x9c\xb0\xe8\xae\xb2\xe5\xb0\xb1\xe6\x98\xaf\xe5\xae\x9e\xe7\x8e\xb0\xe5\x9b\xbe\xe5\x83\x8f\xe5\x88\xb0\xe6\x96\x87\xe5\xad\x97\xe7\x9a\x84\xe8\xbd\xac\xe6\x8d\xa2\xe8\xbf\x87\xe7\xa8\x8b\xe3\x80\x82\n\n### \xe6\x95\xb0\xe6\x8d\xae\xe9\x9b\x86\n\n\xe5\x86\xb3\xe8\xb5\x9b\xe6\x95\xb0\xe6\x8d\xae\xe9\x9b\x86\xe4\xb8\x80\xe5\x85\xb1\xe5\x8c\x85\xe5\x90\xab10\xe4\xb8\x87\xe5\xbc\xa0\xe5\x9b\xbe\xe7\x89\x87\xe5\x92\x8c\xe4\xb8\x80\xe4\xb8\xaalabels.txt\xe7\x9a\x84\xe6\x96\x87\xe6\x9c\xac\xe6\x96\x87\xe4\xbb\xb6\xe3\x80\x82\xe6\xaf\x8f\xe5\xbc\xa0\xe5\x9b\xbe\xe7\x89\x87\xe5\x8c\x85\xe5\x90\xab\xe4\xb8\x80\xe4\xb8\xaa\xe6\x95\xb0\xe5\xad\xa6\xe8\xbf\x90\xe7\xae\x97\xe5\xbc\x8f\xef\xbc\x8c\xe8\xbf\x90\xe7\xae\x97\xe5\xbc\x8f\xe4\xb8\xad\xe5\x8c\x85\xe5\x90\xab\xef\xbc\x9a\n\n1. \xe5\x9b\xbe\xe7\x89\x87\xe5\xa4\xa7\xe5\xb0\x8f\xe4\xb8\x8d\xe5\x9b\xba\xe5\xae\x9a\n2. \xe5\x9b\xbe\xe7\x89\x87\xe4\xb8\xad\xe7\x9a\x84\xe6\x9f\x90\xe4\xb8\x80\xe5\x9d\x97\xe5\x8c\xba\xe5\x9f\x9f\xe4\xb8\xba\xe5\x85\xac\xe5\xbc\x8f\xe9\x83\xa8\xe5\x88\x86\n3. \xe5\x9b\xbe\xe7\x89\x87\xe4\xb8\xad\xe5\x8c\x85\xe5\x90\xab\xe4\xba\x8c\xe8\xa1\x8c\xe6\x88\x96\xe8\x80\x85\xe4\xb8\x89\xe8\xa1\x8c\xe7\x9a\x84\xe5\x85\xac\xe5\xbc\x8f\n4. \xe5\x85\xac\xe5\xbc\x8f\xe7\xb1\xbb\xe5\x9e\x8b\xe6\x9c\x89\xe4\xb8\xa4\xe7\xa7\x8d\xef\xbc\x9a\xe8\xb5\x8b\xe5\x80\xbc\xe5\x92\x8c\xe5\x9b\x9b\xe5\x88\x99\xe8\xbf\x90\xe7\xae\x97\xe7\x9a\x84\xe5\x85\xac\xe5\xbc\x8f\xe3\x80\x82\xe4\xb8\xa4\xe8\xa1\x8c\xe7\x9a\x84\xe5\x8c\x85\xe6\x8b\xac\xe7\x94\xb1\xe4\xb8\x80\xe4\xb8\xaa\xe8\xb5\x8b\xe5\x80\xbc\xe5\x85\xac\xe5\xbc\x8f\xe5\x92\x8c\xe4\xb8\x80\xe4\xb8\xaa\xe8\xae\xa1\xe7\xae\x97\xe5\x85\xac\xe5\xbc\x8f\xef\xbc\x8c\xe4\xb8\x89\xe8\xa1\x8c\xe7\x9a\x84\xe5\x8c\x85\xe6\x8b\xac\xe4\xb8\xa4\xe4\xb8\xaa\xe8\xb5\x8b\xe5\x80\xbc\xe5\x85\xac\xe5\xbc\x8f\xe5\x92\x8c\xe4\xb8\x80\xe4\xb8\xaa\xe8\xae\xa1\xe7\xae\x97\xe5\x85\xac\xe5\xbc\x8f\xe3\x80\x82\xe5\x8a\xa0\xe5\x8f\xb7\xef\xbc\x88+\xef\xbc\x89 \xe5\x8d\xb3\xe4\xbd\xbf\xe6\x97\x8b\xe8\xbd\xac\xe4\xb8\xba x \xef\xbc\x8c\xe4\xbb\x8d\xe4\xb8\xba\xe5\x8a\xa0\xe5\x8f\xb7\xef\xbc\x8c * \xe6\x98\xaf\xe4\xb9\x98\xe5\x8f\xb7\n5. \xe8\xb5\x8b\xe5\x80\xbc\xe7\xb1\xbb\xe7\x9a\x84\xe5\x85\xac\xe5\xbc\x8f\xef\xbc\x8c\xe5\x8f\x98\xe9\x87\x8f\xe5\x90\x8d\xe4\xb8\xba\xe4\xb8\x80\xe4\xb8\xaa\xe6\xb1\x89\xe5\xad\x97\xe3\x80\x82 \xe6\xb1\x89\xe5\xad\x97\xe6\x9d\xa5\xe8\x87\xaa\xe4\xb8\xa4\xe5\x8f\xa5\xe8\xaf\x97\xef\xbc\x88\xe4\xb8\x8d\xe5\x8c\x85\xe6\x8b\xac\xe9\x80\x97\xe5\x8f\xb7\xef\xbc\x89\xef\xbc\x9a \xe5\x90\x9b\xe4\xb8\x8d\xe8\xa7\x81\xef\xbc\x8c\xe9\xbb\x84\xe6\xb2\xb3\xe4\xb9\x8b\xe6\xb0\xb4\xe5\xa4\xa9\xe4\xb8\x8a\xe6\x9d\xa5\xef\xbc\x8c\xe5\xa5\x94\xe6\xb5\x81\xe5\x88\xb0\xe6\xb5\xb7\xe4\xb8\x8d\xe5\xa4\x8d\xe5\x9b\x9e \xe7\x83\x9f\xe9\x94\x81\xe6\xb1\xa0\xe5\xa1\x98\xe6\x9f\xb3\xef\xbc\x8c\xe6\xb7\xb1\xe5\x9c\xb3\xe9\x93\x81\xe6\x9d\xbf\xe7\x83\xa7\n6. \xe5\x9b\x9b\xe5\x88\x99\xe8\xbf\x90\xe7\xae\x97\xe7\x9a\x84\xe5\x85\xac\xe5\xbc\x8f\xe5\x8c\x85\xe6\x8b\xac\xe5\x8a\xa0\xe6\xb3\x95\xe3\x80\x81\xe5\x87\x8f\xe6\xb3\x95\xe3\x80\x81\xe4\xb9\x98\xe6\xb3\x95\xe3\x80\x81\xe5\x88\x86\xe6\x95\xb0\xe3\x80\x81\xe6\x8b\xac\xe5\x8f\xb7\xe3\x80\x82 \xe5\x85\xb6\xe4\xb8\xad\xe7\x9a\x84\xe6\x95\xb0\xe5\xad\x97\xe4\xb8\xba\xe5\xa4\x9a\xe4\xbd\x8d\xe6\x95\xb0\xe5\xad\x97\xef\xbc\x8c\xe6\xb1\x89\xe5\xad\x97\xe4\xb8\xba\xe5\x8f\x98\xe9\x87\x8f\xef\xbc\x8c\xe7\x94\xb1\xe4\xb8\x8a\xe9\x9d\xa2\xe7\x9a\x84\xe8\xaf\xad\xe5\x8f\xa5\xe8\xb5\x8b\xe5\x80\xbc\xe3\x80\x82\n7. \xe8\xbe\x93\xe5\x87\xba\xe7\xbb\x93\xe6\x9e\x9c\xe7\x9a\x84\xe6\xa0\xbc\xe5\xbc\x8f\xe4\xb8\xba\xef\xbc\x9a\xe5\x9b\xbe\xe7\x89\x87\xe4\xb8\xad\xe7\x9a\x84\xe5\x85\xac\xe5\xbc\x8f\xef\xbc\x8c\xe4\xb8\x80\xe4\xb8\xaa\xe8\x8b\xb1\xe6\x96\x87\xe7\xa9\xba\xe6\xa0\xbc\xef\xbc\x8c\xe8\xae\xa1\xe7\xae\x97\xe7\xbb\x93\xe6\x9e\x9c\xe3\x80\x82 \xe5\x85\xb6\xe4\xb8\xad\xef\xbc\x9a \xe4\xb8\x8d\xe5\x90\x8c\xe8\xa1\x8c\xe5\x85\xac\xe5\xbc\x8f\xe4\xb9\x8b\xe9\x97\xb4\xe4\xbd\xbf\xe7\x94\xa8\xe8\x8b\xb1\xe6\x96\x87\xe5\x88\x86\xe5\x8f\xb7\xe5\x88\x86\xe9\x9a\x94 \xe8\xae\xa1\xe7\xae\x97\xe7\xbb\x93\xe6\x9e\x9c\xe6\x97\xb6\xef\xbc\x8c\xe5\x88\x86\xe6\x95\xb0\xe6\x8c\x89\xe7\x85\xa7\xe6\xb5\xae\xe7\x82\xb9\xe6\x95\xb0\xe8\xae\xa1\xe7\xae\x97\xef\xbc\x8c\xe8\xae\xa1\xe7\xae\x97\xe7\xbb\x93\xe6\x9e\x9c\xe8\xaf\xaf\xe5\xb7\xae\xe4\xb8\x8d\xe8\xb6\x85\xe8\xbf\x870.01\xef\xbc\x8c\xe8\xa7\x86\xe4\xb8\xba\xe6\xad\xa3\xe7\xa1\xae\xe3\x80\x82\n8. \xe6\x95\xb4\xe4\xb8\xaalabel\xe6\x96\x87\xe4\xbb\xb6\xe4\xbd\xbf\xe7\x94\xa8UTF8\xe7\xbc\x96\xe7\xa0\x81\n\n\xe5\x86\xb3\xe8\xb5\x9b\xe6\xa0\xb7\xe4\xbe\x8b\xef\xbc\x9a\n\n![](imgs/level2.jpg)\n\n\xe5\x88\x9d\xe8\xb5\x9b\xe7\x9a\x84\xe9\xa2\x98\xe4\xb8\x8d\xe9\x9a\xbe\xef\xbc\x8c\xe5\x8f\xaa\xe9\x9c\x80\xe8\xa6\x81\xe8\xaf\x86\xe5\x88\xab\xe6\x96\x87\xe6\x9c\xac\xe5\xba\x8f\xe5\x88\x97\xe5\x8d\xb3\xe5\x8f\xaf\xef\xbc\x8c\xe5\x86\xb3\xe8\xb5\x9b\xe7\x9a\x84\xe7\xae\x97\xe5\xbc\x8f\xe6\xaf\x94\xe8\xbe\x83\xe5\xa4\x8d\xe6\x9d\x82\xef\xbc\x8c\xe9\x9c\x80\xe8\xa6\x81\xe5\x85\x88\xe7\xbb\x8f\xe8\xbf\x87\xe5\x9b\xbe\xe5\x83\x8f\xe5\xa4\x84\xe7\x90\x86\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe6\x89\x8d\xe8\x83\xbd\xe8\xbe\x93\xe5\x85\xa5\xe5\x88\xb0\xe7\xa5\x9e\xe7\xbb\x8f\xe7\xbd\x91\xe7\xbb\x9c\xe4\xb8\xad\xe8\xbf\x9b\xe8\xa1\x8c\xe7\xab\xaf\xe5\x88\xb0\xe7\xab\xaf\xe7\x9a\x84\xe6\x96\x87\xe6\x9c\xac\xe5\xba\x8f\xe5\x88\x97\xe8\xaf\x86\xe5\x88\xab\xe3\x80\x82\n\n### \xe8\xaf\x84\xe4\xbb\xb7\xe6\x8c\x87\xe6\xa0\x87\n\n\xe5\xae\x98\xe6\x96\xb9\xe7\x9a\x84\xe8\xaf\x84\xe4\xbb\xb7\xe6\x8c\x87\xe6\xa0\x87\xe6\x98\xaf\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xef\xbc\x8c\xe5\x88\x9d\xe8\xb5\x9b\xe5\x8f\xaa\xe6\x9c\x89\xe6\x95\xb4\xe6\x95\xb0\xe7\x9a\x84\xe5\x8a\xa0\xe5\x87\x8f\xe4\xb9\x98\xe8\xbf\x90\xe7\xae\x97\xef\xbc\x8c\xe6\x89\x80\xe5\xbe\x97\xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x9c\xe4\xb8\x80\xe5\xae\x9a\xe6\x98\xaf\xe6\x95\xb4\xe6\x95\xb0\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe8\xa6\x81\xe6\xb1\x82\xe5\xba\x8f\xe5\x88\x97\xe4\xb8\x8e\xe8\xbf\x90\xe7\xae\x97\xe7\xbb\x93\xe6\x9e\x9c\xe9\x83\xbd\xe6\xad\xa3\xe7\xa1\xae\xe6\x89\x8d\xe4\xbc\x9a\xe5\x88\xa4\xe5\xae\x9a\xe4\xb8\xba\xe6\xad\xa3\xe7\xa1\xae\xe3\x80\x82\n\n\xe4\xbd\x86\xe5\x86\xb3\xe8\xb5\x9b\xe7\x9a\x84\xe6\x95\xb0\xe5\xad\x97\xe9\x80\x9a\xe5\xb8\xb8\xe9\x83\xbd\xe6\x98\xaf\xe4\xba\x94\xe4\xbd\x8d\xe6\x95\xb0\xef\xbc\x8c\xe5\xb9\xb6\xe4\xb8\x94\xe4\xbc\x9a\xe6\x9c\x89\xe5\xbe\x88\xe5\xa4\x9a\xe4\xb9\x98\xe6\xb3\x95\xe5\x92\x8c\xe5\x8a\xa0\xe6\xb3\x95\xef\xbc\x8c\xe4\xbb\xa5\xe5\x8f\x8a\xe4\xb8\x80\xe5\xae\x9a\xe4\xbc\x9a\xe5\xad\x98\xe5\x9c\xa8\xe7\x9a\x84\xe4\xb8\x80\xe4\xb8\xaa\xe5\x88\x86\xe6\x95\xb0\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe7\xbb\x93\xe6\x9e\x9c\xe5\xbe\x88\xe5\xae\xb9\xe6\x98\x93\xe8\xb6\x85\xe5\x87\xba64\xe4\xbd\x8d\xe6\xb5\xae\xe7\x82\xb9\xe6\x95\xb0\xe6\x89\x80\xe8\x83\xbd\xe8\xa1\xa8\xe7\xa4\xba\xe7\x9a\x84\xe8\x8c\x83\xe5\x9b\xb4\xef\xbc\x8c\xe5\x9b\xa0\xe6\xad\xa4\xe5\xae\x98\xe6\x96\xb9\xe5\x9c\xa8\xe7\xbb\x8f\xe8\xbf\x87\xe8\xae\xa8\xe8\xae\xba\xe5\x90\x8e\xe5\x86\xb3\xe5\xae\x9a\xe5\x8f\xaa\xe8\x80\x83\xe8\x99\x91\xe6\x96\x87\xe6\x9c\xac\xe5\xba\x8f\xe5\x88\x97\xe7\x9a\x84\xe8\xaf\x86\xe5\x88\xab\xef\xbc\x8c\xe4\xb8\x8d\xe8\xaf\x84\xe4\xbb\xb7\xe8\xbf\x90\xe7\xae\x97\xe7\xbb\x93\xe6\x9e\x9c\xe3\x80\x82\n\n\xe8\x80\x8c\xe6\x88\x91\xe4\xbb\xac\xe6\x9c\xac\xe5\x9c\xb0\xe9\x99\xa4\xe4\xba\x86\xe4\xbc\x9a\xe4\xbd\xbf\xe7\x94\xa8\xe5\xae\x98\xe6\x96\xb9\xe7\x9a\x84\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xe4\xbd\x9c\xe4\xb8\xba\xe8\xaf\x84\xe4\xbc\xb0\xe6\xa0\x87\xe5\x87\x86\xe4\xbb\xa5\xe5\xa4\x96\xef\xbc\x8c\xe8\xbf\x98\xe4\xbc\x9a\xe4\xbd\xbf\xe7\x94\xa8 CTC loss \xe6\x9d\xa5\xe8\xaf\x84\xe4\xbc\xb0\xe6\xa8\xa1\xe5\x9e\x8b\xe3\x80\x82\n\n## \xe6\x95\xb0\xe6\x8d\xae\xe7\x9a\x84\xe6\x8e\xa2\xe7\xb4\xa2\n\n### \xe5\xae\x9a\xe4\xb9\x89\n\n\xe5\x86\xb3\xe8\xb5\x9b\xe7\x9a\x84\xe6\x95\xb0\xe6\x8d\xae\xe9\x9b\x86\xe6\x8e\xa2\xe7\xb4\xa2\xe5\xb0\xb1\xe5\xa4\x8d\xe6\x9d\x82\xe5\xbe\x97\xe5\xa4\x9a\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\x85\x88\xe6\x98\x8e\xe7\xa1\xae\xe4\xb8\xa4\xe4\xb8\xaa\xe6\xa6\x82\xe5\xbf\xb5\xef\xbc\x9a\n\n`\xe6\xb5\x81=42072;\xe5\x9c\xb3=86;(\xe5\x9c\xb3-(97510*45921))*\xe6\xb5\x81/35864`\n\n\xe5\x9c\xa8\xe8\xbf\x99\xe4\xb8\xaa\xe5\xbc\x8f\xe5\xad\x90\xe4\xb8\xad\xef\xbc\x8c`\xe6\xb5\x81=42072;\xe5\x9c\xb3=86;`\xe8\xa2\xab\xe7\xa7\xb0\xe4\xb8\xba\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xef\xbc\x8c`(\xe5\x9c\xb3-(97510*45921))*\xe6\xb5\x81/35864`\xe8\xa2\xab\xe7\xa7\xb0\xe4\xb8\xba\xe8\xa1\xa8\xe8\xbe\xbe\xe5\xbc\x8f\xef\xbc\x8c\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xe5\x92\x8c\xe8\xa1\xa8\xe8\xbe\xbe\xe5\xbc\x8f\xe7\xbb\x9f\xe7\xa7\xb0\xe4\xb8\xba\xe5\x85\xac\xe5\xbc\x8f\xef\xbc\x8c`+-*/`\xe8\xa2\xab\xe7\xa7\xb0\xe4\xb8\xba\xe8\xbf\x90\xe7\xae\x97\xe7\xac\xa6\xe3\x80\x82\n\n### \xe5\x88\x86\xe6\x9e\x90\n\n\xe9\xa6\x96\xe5\x85\x88\xe6\x88\x91\xe4\xbb\xac\xe5\xaf\xb9\xe6\xa0\xb7\xe6\x9c\xac\xe7\x9a\x84\xe6\xaf\x8f\xe4\xb8\xaa\xe5\xad\x97\xe5\x87\xba\xe7\x8e\xb0\xe7\x9a\x84\xe6\xac\xa1\xe6\x95\xb0\xe8\xbf\x9b\xe8\xa1\x8c\xe4\xba\x86\xe7\xbb\x9f\xe8\xae\xa1\xef\xbc\x9a\n\n![](imgs/level2_barplot.png)\n\n\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9c\x8b\xe5\x88\xb0\xe6\x95\xb0\xe5\xad\x97\xe7\x9a\x84\xe5\x88\x86\xe5\xb8\x83\xe5\xbe\x88\xe6\x9c\x89\xe6\x84\x8f\xe6\x80\x9d\xef\xbc\x8c0\xe5\x87\xba\xe7\x8e\xb0\xe7\x9a\x84\xe6\xac\xa1\xe6\x95\xb0\xe6\xaf\x94\xe5\x85\xb6\xe4\xbb\x96\xe6\x95\xb0\xe5\xad\x97\xe9\x83\xbd\xe4\xbd\x8e\xef\xbc\x8c\xe5\x85\xb6\xe4\xbb\x96\xe7\x9a\x84\xe6\x95\xb0\xe5\xad\x97\xe5\x87\xba\xe7\x8e\xb0\xe6\xac\xa1\xe6\x95\xb0\xe5\x9f\xba\xe6\x9c\xac\xe4\xb8\x80\xe6\xa0\xb7\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe7\xab\x8b\xe5\x8d\xb3\xe6\x8e\xa8\xe8\xbf\x99\xe6\x98\xaf\xe7\x9b\xb4\xe6\x8e\xa5\xe6\x8c\x89\xe9\x9a\x8f\xe6\x9c\xba\xe6\x95\xb0\xe7\x94\x9f\xe6\x88\x90\xe7\x9a\x84\xef\xbc\x8c0\xe4\xb8\x8d\xe8\x83\xbd\xe5\x87\xba\xe7\x8e\xb0\xe5\x9c\xa8\xe9\xa6\x96\xe4\xbd\x8d\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe6\xa6\x82\xe7\x8e\x87\xe5\x8f\x98\xe4\xbd\x8e\xe3\x80\x82\n\n\xe5\x88\x86\xe5\x8f\xb7\xe5\x92\x8c\xe7\xad\x89\xe5\x8f\xb7\xe5\x87\xba\xe7\x8e\xb0\xe7\x9a\x84\xe6\xac\xa1\xe6\x95\xb0\xe4\xb8\x80\xe6\xa0\xb7\xef\xbc\x8c\xe8\xbf\x99\xe6\x98\xaf\xe5\x9b\xa0\xe4\xb8\xba\xe6\xaf\x8f\xe4\xb8\xaa\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xe9\x83\xbd\xe6\x9c\x89\xe4\xb8\x80\xe4\xb8\xaa\xe7\xad\x89\xe5\x8f\xb7\xe5\x92\x8c\xe4\xb8\x80\xe4\xb8\xaa\xe5\x88\x86\xe5\x8f\xb7\xe3\x80\x82\xe5\xae\x83\xe5\x87\xba\xe7\x8e\xb0\xe7\x9a\x84\xe6\xa6\x82\xe7\x8e\x87\xe6\x98\xaf 1.65807\xef\xbc\x8c\xe5\x9b\xa0\xe6\xad\xa4\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x8c\x9c\xe5\x87\xba\xe4\xb8\x80\xe4\xb8\xaa\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xe5\x92\x8c\xe4\xb8\xa4\xe4\xb8\xaa\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xe7\x9a\x84\xe6\xaf\x94\xe4\xbe\x8b\xe6\x98\xaf 1:2\xe3\x80\x82\n\n\xe8\xbf\x90\xe7\xae\x97\xe7\xac\xa6\xe5\x87\xba\xe7\x8e\xb0\xe7\x9a\x84\xe6\xa6\x82\xe7\x8e\x87\xe9\x83\xbd\xe6\x98\xaf\xe4\xb8\x80\xe6\xa0\xb7\xe7\x9a\x84\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x8e\xa8\xe6\x96\xad\xe5\xae\x83\xe4\xbb\xac\xe6\x98\xaf\xe7\x9b\xb4\xe6\x8e\xa5\xe9\x9a\x8f\xe6\x9c\xba\xe5\x8f\x96\xe7\x9a\x84\xe3\x80\x82\n\n\xe6\x8b\xac\xe5\x8f\xb7\xe5\x87\xba\xe7\x8e\xb0\xe7\x9a\x84\xe6\xa6\x82\xe7\x8e\x87\xe6\x98\xaf 1.36505\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe7\xbb\x9f\xe8\xae\xa1\xe4\xba\x86\xe4\xb8\x80\xe4\xb8\x8b\xe6\x8b\xac\xe5\x8f\xb7\xe5\x87\xba\xe7\x8e\xb0\xe7\x9a\x84\xe6\x89\x80\xe6\x9c\x89\xe5\x8f\xaf\xe8\x83\xbd\xef\xbc\x9a\n\n```\n1+1+1+1\n\n(1+1)+1+1\n1+(1+1)+1\n1+1+(1+1)\n(1+1+1)+1\n1+(1+1+1)\n\n((1+1)+1)+1\n(1+(1+1))+1\n\n1+((1+1)+1)\n1+(1+(1+1))\n\n(1+1)+(1+1)\n```\n\n\xe4\xb8\x80\xe5\x85\xb1\xe6\x9c\x8911\xe7\xa7\x8d\xe5\x8f\xaf\xe8\x83\xbd\xef\xbc\x8c\xe6\x8c\x89\xe6\x8b\xac\xe5\x8f\xb7\xe7\x9a\x84\xe6\x95\xb0\xe9\x87\x8f\xe7\xbb\x9f\xe8\xae\xa1\xe6\x8b\xac\xe5\x8f\xb7\xe5\x87\xba\xe7\x8e\xb0\xe7\x9a\x84\xe9\xa2\x91\xe7\x8e\x87\xe5\x8f\xaf\xe4\xbb\xa5\xe5\xbe\x97\xe5\x87\xba 2*5/11.0+5/11.0 = 1.3636\xef\xbc\x8c\xe5\x9b\xa0\xe6\xad\xa4\xe6\x8b\xac\xe5\x8f\xb7\xe4\xb9\x9f\xe6\x98\xaf\xe4\xbb\x8e\xe4\xb8\x8a\xe9\x9d\xa2\xe5\x87\xa0\xe7\xa7\x8d\xe6\xa8\xa1\xe6\x9d\xbf\xe9\x9a\x8f\xe6\x9c\xba\xe5\x8f\x96\xe7\x9a\x84\xe3\x80\x82\n\n\xe4\xb8\xad\xe6\x96\x87\xe9\x99\xa4\xe4\xba\x86\xe2\x80\x9c\xe4\xb8\x8d\xe2\x80\x9d\xe5\xad\x97\xe5\x87\xba\xe7\x8e\xb0\xe4\xba\x86\xe4\xb8\xa4\xe6\xac\xa1\xef\xbc\x8c\xe6\xa6\x82\xe7\x8e\x87\xe7\xbf\xbb\xe5\x80\x8d\xef\xbc\x8c\xe5\x85\xb6\xe4\xbb\x96\xe5\xad\x97\xe6\xa6\x82\xe7\x8e\x87\xe5\x9f\xba\xe6\x9c\xac\xe7\x9b\xb8\xe7\xad\x89\xe3\x80\x82\xe4\xb8\xad\xe6\x96\x87\xe5\xad\x97\xe5\x8f\x96\xe8\x87\xaa\xe4\xba\x8e\xe4\xb8\x8b\xe9\x9d\xa2\xe4\xb8\xa4\xe5\x8f\xa5\xe8\xaf\x97\xef\xbc\x9a\xe2\x80\x9c\xe5\x90\x9b\xe4\xb8\x8d\xe8\xa7\x81\xef\xbc\x8c\xe9\xbb\x84\xe6\xb2\xb3\xe4\xb9\x8b\xe6\xb0\xb4\xe5\xa4\xa9\xe4\xb8\x8a\xe6\x9d\xa5\xef\xbc\x8c\xe5\xa5\x94\xe6\xb5\x81\xe5\x88\xb0\xe6\xb5\xb7\xe4\xb8\x8d\xe5\xa4\x8d\xe5\x9b\x9e \xe7\x83\x9f\xe9\x94\x81\xe6\xb1\xa0\xe5\xa1\x98\xe6\x9f\xb3\xef\xbc\x8c\xe6\xb7\xb1\xe5\x9c\xb3\xe9\x93\x81\xe6\x9d\xbf\xe7\x83\xa7\xe2\x80\x9d\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe4\xb9\x9f\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x8e\xa8\xe6\x96\xad\xe5\x87\xba\xe6\x98\xaf\xe6\x8c\x89\xe5\xad\x97\xe7\x9b\xb4\xe6\x8e\xa5\xe9\x9a\x8f\xe6\x9c\xba\xe5\x8f\x96\xe7\x9a\x84\xe3\x80\x82\n\n### \xe6\x80\xbb\xe7\xbb\x93\n\n* \xe4\xb8\xad\xe6\x96\x87\xe7\x9b\xb4\xe6\x8e\xa5\xe7\xad\x89\xe6\xa6\x82\xe7\x8e\x87\xe5\x8f\x96\xef\xbc\x8c\xe2\x80\x9c\xe4\xb8\x8d\xe2\x80\x9d\xe6\xa6\x82\xe7\x8e\x87\xe5\x8a\xa0\xe5\x80\x8d\n* \xe6\x8b\xac\xe5\x8f\xb7\xe4\xbb\x8e11\xe7\xa7\x8d\xe6\x83\x85\xe5\x86\xb5\xe4\xb8\xad\xe9\x9a\x8f\xe6\x9c\xba\xe5\x8f\x96\n* \xe8\xbf\x90\xe7\xae\x97\xe7\xac\xa6\xe6\xaf\x8f\xe6\xac\xa1\xe5\xbf\x85\xe5\x87\xba\xe5\x9b\x9b\xe4\xb8\xaa\n* 1/3\xe6\xa6\x82\xe7\x8e\x87\xe5\x8f\x96\xe4\xb8\x80\xe4\xb8\xaa\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xef\xbc\x8c2/3\xe6\xa6\x82\xe7\x8e\x87\xe5\x8f\x962\xe4\xb8\xaa\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\n* \xe8\xbf\x90\xe7\xae\x97\xe7\xac\xa6/\xe6\xb0\xb8\xe8\xbf\x9c\xe9\x83\xbd\xe4\xbc\x9a\xe5\x87\xba\xe7\x8e\xb0\xe4\xb8\x80\xe6\xac\xa1\xef\xbc\x8c\xe4\xb8\xad\xe6\x96\x87\xe5\x9c\xa8\xe4\xb8\x8a\n* \xe8\xbf\x90\xe7\xae\x97\xe7\xac\xa6+-*\xe9\x9a\x8f\xe6\x9c\xba\xe5\x8f\x96\xef\xbc\x8c\xe6\xa6\x82\xe7\x8e\x87\xe9\x83\xbd\xe6\x98\xaf1/3\n* \xe6\x95\xb0\xe5\xad\x97\xe5\x8f\x96\xe5\x80\xbc\xe8\x8c\x83\xe5\x9b\xb4\xe6\x98\xaf[0, 100000]\n\n## \xe6\x95\xb0\xe6\x8d\xae\xe9\xa2\x84\xe5\xa4\x84\xe7\x90\x86\n\n\xe7\x94\xb1\xe4\xba\x8e\xe5\x8e\x9f\xe5\xa7\x8b\xe7\x9a\x84\xe5\x9b\xbe\xe5\x83\x8f\xe5\x8d\x81\xe5\x88\x86\xe5\xb7\xa8\xe5\xa4\xa7\xef\xbc\x8c\xe7\x9b\xb4\xe6\x8e\xa5\xe8\xbe\x93\xe5\x85\xa5\xe5\x88\xb0 CNN \xe4\xb8\xad\xe4\xbc\x9a\xe6\x9c\x8990%\xe4\xbb\xa5\xe4\xb8\x8a\xe7\x9a\x84\xe5\x8c\xba\xe5\x9f\x9f\xe6\x98\xaf\xe6\xb2\xa1\xe6\x9c\x89\xe7\x94\xa8\xe7\x9a\x84\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe6\x88\x91\xe4\xbb\xac\xe9\x9c\x80\xe8\xa6\x81\xe5\xaf\xb9\xe5\x9b\xbe\xe5\x83\x8f\xe5\x81\x9a\xe9\xa2\x84\xe5\xa4\x84\xe7\x90\x86\xef\xbc\x8c\xe8\xa3\x81\xe5\x89\xaa\xe5\x87\xba\xe6\x9c\x89\xe7\x94\xa8\xe7\x9a\x84\xe9\x83\xa8\xe5\x88\x86\xe3\x80\x82\xe7\x84\xb6\xe5\x90\x8e\xe5\x9b\xa0\xe4\xb8\xba\xe5\x9b\xbe\xe5\x83\x8f\xe6\x9c\x89\xe4\xb8\xa4\xe5\x88\xb0\xe4\xb8\x89\xe4\xb8\xaa\xe5\xbc\x8f\xe5\xad\x90\xef\xbc\x8c\xe5\x9b\xa0\xe6\xad\xa4\xe6\x88\x91\xe4\xbb\xac\xe9\x87\x87\xe5\x8f\x96\xe7\x9a\x84\xe6\x96\xb9\xe6\xa1\x88\xe6\x98\xaf\xe4\xbb\x8e\xe5\xb7\xa6\xe8\x87\xb3\xe5\x8f\xb3\xe6\x8b\xbc\xe6\x8e\xa5\xe5\x9c\xa8\xe4\xb8\x80\xe8\xb5\xb7\xef\xbc\x8c\xe8\xbf\x99\xe6\xa0\xb7\xe7\x9a\x84\xe5\xa5\xbd\xe5\xa4\x84\xe6\x98\xaf\xe5\x9b\xbe\xe5\x83\x8f\xe6\xaf\x94\xe8\xbe\x83\xe5\xb0\x8f\xe3\x80\x82\xef\xbc\x88900\\*80=72000 vs 600\\*270=162000\xef\xbc\x89\n\n\xe6\x88\x91\xe4\xb8\xbb\xe8\xa6\x81\xe4\xbd\xbf\xe7\x94\xa8\xe4\xba\x86\xe4\xbb\xa5\xe4\xb8\x8b\xe5\x87\xa0\xe7\xa7\x8d\xe6\x8a\x80\xe6\x9c\xaf\xef\xbc\x9a\n\n* [\xe8\xbd\xac\xe7\x81\xb0\xe5\xba\xa6\xe5\x9b\xbe](http://docs.opencv.org/master/df/d9d/tutorial_py_colorspaces.html)\n* [\xe7\x9b\xb4\xe6\x96\xb9\xe5\x9b\xbe\xe5\x9d\x87\xe8\xa1\xa1](http://docs.opencv.org/master/d5/daf/tutorial_py_histogram_equalization.html)\n* [\xe4\xb8\xad\xe5\x80\xbc\xe6\xbb\xa4\xe6\xb3\xa2](http://docs.opencv.org/master/d4/d13/tutorial_py_filtering.html)\n* [\xe5\xbc\x80\xe9\x97\xad\xe8\xbf\x90\xe7\xae\x97](http://docs.opencv.org/master/d9/d61/tutorial_py_morphological_ops.html)\n* [\xe4\xba\x8c\xe5\x80\xbc\xe5\x8c\x96](http://docs.opencv.org/master/d7/d4d/tutorial_py_thresholding.html)\n* [\xe8\xbd\xae\xe5\xbb\x93\xe6\x9f\xa5\xe6\x89\xbe](http://docs.opencv.org/master/d4/d73/tutorial_py_contours_begin.html)\n* [\xe8\xbe\xb9\xe7\x95\x8c\xe7\x9f\xa9\xe5\xbd\xa2](http://docs.opencv.org/master/dd/d49/tutorial_py_contour_features.html)\n\n\xe9\xa6\x96\xe5\x85\x88\xe5\x85\x88\xe8\xbf\x9b\xe8\xa1\x8c\xe5\x88\x9d\xe6\xad\xa5\xe7\x9a\x84\xe5\x85\xb3\xe9\x94\xae\xe5\x8c\xba\xe5\x9f\x9f\xe6\x8f\x90\xe5\x8f\x96\xef\xbc\x9a\n\n```py\ndef plot(index):\n    img = cv2.imread('%s/%d.png'%(IMAGE_DIR, index))\n    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\n    eq = cv2.equalizeHist(gray)\n    b = cv2.medianBlur(eq, 9)\n    \n    m, n = img.shape[:2]\n    b2 = cv2.resize(b, (n//4, m//4))\n\n    m1 = cv2.morphologyEx(b2, cv2.MORPH_OPEN, np.ones((7, 40)))\n    m2 = cv2.morphologyEx(m1, cv2.MORPH_CLOSE, np.ones((4, 4)))\n    _, bw = cv2.threshold(m2, 127, 255, cv2.THRESH_BINARY_INV)\n    \n    bw = cv2.resize(bw, (n, m))\n\n    r = img.copy()\n    img2, ctrs, hier = cv2.findContours(bw, cv2.RETR_EXTERNAL, \n      cv2.CHAIN_APPROX_SIMPLE)\n    for ctr in ctrs:\n        x, y, w, h = cv2.boundingRect(ctr)\n        cv2.rectangle(r, (x, y), (x+w, y+h), (0, 255, 0), 10)\n```\n\n![](imgs/level2_preprocessing1.png)\n\n### \xe5\x8e\xbb\xe5\x99\xaa\n\n\xe9\xa6\x96\xe5\x85\x88\xe8\xa6\x81\xe5\xb0\x86\xe5\x9b\xbe\xe5\x83\x8f[\xe8\xbd\xac\xe7\x81\xb0\xe5\xba\xa6\xe5\x9b\xbe](http://docs.opencv.org/master/df/d9d/tutorial_py_colorspaces.html)\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe7\x94\xa8\xe5\x88\x9d\xe8\xb5\x9b\xe4\xbd\xbf\xe7\x94\xa8\xe7\x9a\x84[\xe7\x9b\xb4\xe6\x96\xb9\xe5\x9b\xbe\xe5\x9d\x87\xe8\xa1\xa1](http://docs.opencv.org/master/d5/daf/tutorial_py_histogram_equalization.html)\xe6\x8f\x90\xe9\xab\x98\xe5\x9b\xbe\xe5\x83\x8f\xe7\x9a\x84\xe5\xaf\xb9\xe6\xaf\x94\xe5\xba\xa6\xef\xbc\x8c\xe8\xbf\x99\xe9\x87\x8c\xe5\x99\xaa\xe7\x82\xb9\xe8\xbf\x98\xe5\x9c\xa8\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe9\x9c\x80\xe8\xa6\x81\xe8\xbf\x9b\xe8\xa1\x8c\xe6\xbb\xa4\xe6\xb3\xa2\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe8\xbf\x99\xe9\x87\x8c\xe4\xbd\xbf\xe7\x94\xa8\xe4\xba\x86[\xe4\xb8\xad\xe5\x80\xbc\xe6\xbb\xa4\xe6\xb3\xa2](http://docs.opencv.org/master/d4/d13/tutorial_py_filtering.html)\xef\xbc\x8c\xe5\xae\x83\xe8\x83\xbd\xe5\xbe\x88\xe5\xa5\xbd\xe5\x9c\xb0\xe6\xbb\xa4\xe6\x8e\x89\xe5\x99\xaa\xe7\x82\xb9\xe5\x92\x8c\xe5\xb9\xb2\xe6\x89\xb0\xe7\xba\xbf\xe3\x80\x82\xef\xbc\x88\xe4\xb8\x8a\xe5\x9b\xbe\xe7\x9a\x84 blur\xef\xbc\x89\n\n### \xe8\xbf\x9e\xe6\x8e\xa5\xe5\x85\xac\xe5\xbc\x8f\n\n\xe7\x8e\xb0\xe5\x9c\xa8\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaa\xe5\x85\xb3\xe5\xbf\x83\xe5\x85\xac\xe5\xbc\x8f\xe7\x9a\x84\xe6\x8f\x90\xe5\x8f\x96\xef\xbc\x8c\xe8\x80\x8c\xe4\xb8\x8d\xe5\x9c\xa8\xe6\x84\x8f\xe5\xad\x97\xe7\xac\xa6\xe7\x9a\x84\xe6\x8f\x90\xe5\x8f\x96\xef\xbc\x88\xe5\x9b\xa0\xe4\xb8\xba\xe6\x97\xa0\xe6\xb3\x95\xe4\xbf\x9d\xe8\xaf\x81\xe5\x87\x86\xe7\xa1\xae\xe6\x8f\x90\xe5\x8f\x96\xef\xbc\x89\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe6\x88\x91\xe4\xbb\xac\xe9\x9c\x80\xe8\xa6\x81\xe5\xb0\x86\xe8\xbf\x99\xe4\xba\x9b\xe5\xad\x97\xe7\xac\xa6\xe8\xbf\x9e\xe6\x8e\xa5\xe8\xb5\xb7\xe6\x9d\xa5\xe3\x80\x82\xe8\xbf\x99\xe9\x87\x8c\xe9\xa6\x96\xe5\x85\x88\xe5\xaf\xb9\xe5\x9b\xbe\xe5\x83\x8f\xe8\xbf\x9b\xe8\xa1\x8c\xe4\xba\x864\xe5\x80\x8d\xe7\x9a\x84\xe7\xbc\xa9\xe6\x94\xbe\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe4\xbd\xbf\xe7\x94\xa8\xe4\xba\x86\xe4\xb8\x80\xe7\xa7\x8d\xe5\x8f\xab\xe5\x81\x9a[\xe5\xbc\x80\xe9\x97\xad\xe8\xbf\x90\xe7\xae\x97](http://docs.opencv.org/master/d9/d61/tutorial_py_morphological_ops.html)\xe7\x9a\x84\xe7\xae\x97\xe6\xb3\x95\xe6\x9d\xa5\xe8\xbf\x9e\xe6\x8e\xa5\xe5\xad\x97\xe7\xac\xa6\xe3\x80\x82\xe5\x9b\xa0\xe4\xb8\xba\xe6\x88\x91\xe4\xbb\xac\xe8\xa6\x81\xe7\x9a\x84\xe6\x98\xaf\xe6\xa8\xaa\xe5\x90\x91\xe8\xbf\x9e\xe6\x8e\xa5\xef\xbc\x8c\xe7\xba\xb5\xe5\x90\x91\xe4\xb8\x8d\xe9\x9c\x80\xe8\xa6\x81\xe8\xbf\x9e\xe6\x8e\xa5\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe6\x88\x91\xe4\xbb\xac\xe9\x80\x89\xe6\x8b\xa9\xe4\xba\x86 (7, 40) \xe5\xa4\xa7\xe5\xb0\x8f\xe7\x9a\x84\xe5\xbc\x80\xe8\xbf\x90\xe7\xae\x97\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe4\xb8\xba\xe4\xba\x86\xe6\xbb\xa4\xe6\x8e\x89\xe4\xb8\x8d\xe5\xbf\x85\xe8\xa6\x81\xe7\x9a\x84\xe5\x99\xaa\xe5\xa3\xb0\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe4\xbd\xbf\xe7\x94\xa8\xe4\xba\x86 (4, 4) \xe7\x9a\x84\xe9\x97\xad\xe8\xbf\x90\xe7\xae\x97\xe3\x80\x82\xef\xbc\x88\xe4\xbd\x8d\xe4\xba\x8e\xe4\xb8\x8a\xe5\x9b\xbe\xe4\xb8\xad\xe9\x97\xb4\xe7\x9a\x84 m2\xef\xbc\x89\n\n### \xe5\x85\xb3\xe9\x94\xae\xe5\x8c\xba\xe5\x9f\x9f\xe6\x8f\x90\xe5\x8f\x96\n\n\xe5\x9c\xa8\xe6\x8b\xbc\xe6\x8e\xa5\xe5\xa5\xbd\xe5\x85\xac\xe5\xbc\x8f\xe4\xbb\xa5\xe5\x90\x8e\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\xb0\xb1\xe5\x8f\xaf\xe4\xbb\xa5\xe5\xaf\xb9\xe5\x9b\xbe\xe5\x83\x8f\xe4\xbd\xbf\xe7\x94\xa8[\xe8\xbd\xae\xe5\xbb\x93\xe6\x9f\xa5\xe6\x89\xbe](http://docs.opencv.org/master/d4/d73/tutorial_py_contours_begin.html)\xe7\x9a\x84\xe7\xae\x97\xe6\xb3\x95\xe4\xba\x86\xef\xbc\x8c\xe5\xbe\x88\xe5\xae\xb9\xe6\x98\x93\xe6\x88\x91\xe4\xbb\xac\xe5\xb0\xb1\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x8a\x93\xe5\x88\xb0\xe5\x9b\xbe\xe5\x83\x8f\xe7\x9a\x84\xe4\xb8\x89\xe4\xb8\xaa\xe8\xbe\xb9\xe7\xbc\x98\xe7\x82\xb9\xe9\x9b\x86\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe6\x88\x91\xe4\xbb\xac\xe4\xbd\xbf\xe7\x94\xa8[\xe8\xbe\xb9\xe7\x95\x8c\xe7\x9f\xa9\xe5\xbd\xa2](http://docs.opencv.org/master/dd/d49/tutorial_py_contour_features.html)\xe5\x87\xbd\xe6\x95\xb0\xe5\xbe\x97\xe5\x88\xb0\xe7\x9f\xa9\xe5\xbd\xa2\xe7\x9a\x84 (x, y, w, h)\xef\xbc\x8c\xe5\xae\x8c\xe6\x88\x90\xe5\x85\xb3\xe9\x94\xae\xe5\x8c\xba\xe5\x9f\x9f\xe6\x8f\x90\xe5\x8f\x96\xe3\x80\x82\xe6\x8f\x90\xe5\x8f\x96\xe4\xb9\x8b\xe5\x90\x8e\xe6\x88\x91\xe4\xbb\xac\xe5\xb0\x86\xe7\xbb\xbf\xe8\x89\xb2\xe7\x9a\x84\xe7\x9f\xa9\xe5\xbd\xa2\xe7\x94\xbb\xe5\x9c\xa8\xe4\xba\x86\xe5\x8e\x9f\xe5\x9b\xbe\xe4\xb8\x8a\xe3\x80\x82\xef\xbc\x88\xe4\xbd\x8d\xe4\xba\x8e\xe4\xb8\x8a\xe5\x9b\xbe\xe5\x8f\xb3\xe4\xb8\x8b\xe8\xa7\x92\xe7\x9a\x84 rect\xef\xbc\x89\n\n### \xe5\xbe\xae\xe8\xb0\x83\n\n\xe7\x94\xb1\xe4\xba\x8e\xe4\xb9\x8b\xe5\x89\x8d\xe4\xbd\xbf\xe7\x94\xa8\xe4\xba\x86\xe5\xbe\x88\xe5\xa4\xa7\xe7\x9a\x84 kernel \xe8\xbf\x9b\xe8\xa1\x8c\xe6\xbb\xa4\xe6\xb3\xa2\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe8\xbf\x99\xe9\x87\x8c\xe9\x9c\x80\xe8\xa6\x81\xe8\xbf\x9b\xe8\xa1\x8c\xe4\xb8\x80\xe4\xb8\xaa\xe5\xbe\xae\xe8\xb0\x83\xe7\x9a\x84\xe6\x93\x8d\xe4\xbd\x9c\xef\xbc\x9a\n\n```py\n# \xe5\xbe\xae\xe8\xb0\x83\xe4\xb8\x89\xe4\xb8\xaa\xe5\x85\xac\xe5\xbc\x8f\nd = 20\nd2 = 5\nimgs = []\nsizes = []\nfor i, ctr in enumerate(ctrs):\n    x, y, w, h = cv2.boundingRect(ctr)\n    roi = img[max(0, y-d):min(m, y+h+d),max(0, x-d):min(n, x+w+d)]\n    p, q, _ = roi.shape\n    \n    x = b[max(0, y-d):min(m, y+h+d),max(0, x-d):min(n, x+w+d)]\n    x = cv2.morphologyEx(x, cv2.MORPH_CLOSE, np.ones((3, 3)))\n    _, x = cv2.threshold(x, 127, 255, cv2.THRESH_BINARY_INV)\n    _, x, _ = cv2.findContours(x, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)\n    x, y, w, h = cv2.boundingRect(np.vstack(x))\n    roi2 = roi[max(0, y-d2):min(p, y+h+d2),max(0, x-d2):min(q, x+w+d2)]\n    imgs.append(roi2)\n    sizes.append(roi2.shape)\n```\n\n\xe9\xa6\x96\xe5\x85\x88\xe9\x80\x9a\xe8\xbf\x87\xe4\xb9\x8b\xe5\x89\x8d\xe7\x9a\x84\xe7\x9f\xa9\xe5\xbd\xa2\xef\xbc\x8c\xe6\x89\xa9\xe5\x85\x8520\xe5\x83\x8f\xe7\xb4\xa0\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe8\xa3\x81\xe5\x89\xaa\xe5\x87\xba\xe5\x85\xb3\xe9\x94\xae\xe5\x8c\xba\xe5\x9f\x9f\xef\xbc\x8c\xe8\xbf\x99\xe9\x87\x8c\xe6\x98\xaf\xe7\x9b\xb4\xe6\x8e\xa5\xe5\xaf\xb9\xe6\xbb\xa4\xe6\xb3\xa2\xe7\x9a\x84\xe5\x9b\xbe\xe8\xa3\x81\xe5\x89\xaa\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe5\x88\x86\xe8\xbe\xa8\xe7\x8e\x87\xe5\xbe\x88\xe9\xab\x98\xe3\x80\x82\xe7\x84\xb6\xe5\x90\x8e\xe7\xbb\x8f\xe8\xbf\x87\xe7\xae\x80\xe5\x8d\x95\xe7\x9a\x84\xe9\x97\xad\xe8\xbf\x90\xe7\xae\x97\xe6\xbb\xa4\xe6\xb3\xa2\xef\xbc\x8c\xe4\xba\x8c\xe5\x80\xbc\xe5\x8c\x96\xef\xbc\x8c\xe6\x8f\x90\xe5\x8f\x96\xe8\xbe\xb9\xe6\xa1\x86\xef\xbc\x8c\xe8\xbf\x99\xe9\x87\x8c\xe5\x8d\xb3\xe4\xbd\xbf\xe6\x9c\x89\xe5\x99\xaa\xe7\x82\xb9\xe4\xb9\x9f\xe4\xb8\x8d\xe7\x94\xa8\xe6\x8b\x85\xe5\xbf\x83\xef\xbc\x8c\xe8\xa3\x81\xe5\xa4\x9a\xe4\xba\x86\xe4\xb8\x8d\xe8\xa6\x81\xe7\xb4\xa7\xef\xbc\x8c\xe8\xa3\x81\xe5\xb0\x91\xe4\xba\x86\xe6\x89\x8d\xe9\xba\xbb\xe7\x83\xa6\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe8\xa3\x81\xe5\x87\xba\xe6\x9d\xa5\xe7\x9a\x84\xe5\x9b\xbe\xe5\x8f\xaf\xe8\x83\xbd\xe4\xbc\x9a\xe6\xaf\x94\xe8\xbe\x83\xe5\xb0\x8f\xef\xbc\x8c\xe5\x9b\xa0\xe4\xb8\xba\xe6\xbb\xa4\xe6\xb3\xa2\xe8\xbf\x87\xe4\xba\x86\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe5\x86\x8d\xe6\x89\xa9\xe5\x85\x855\xe4\xb8\xaa\xe5\x83\x8f\xe7\xb4\xa0\xef\xbc\x8c\xe8\xbe\xbe\xe5\x88\xb0\xe4\xb8\x8d\xe9\x94\x99\xe7\x9a\x84\xe6\x95\x88\xe6\x9e\x9c\xe3\x80\x82\n\n\xe4\xbb\xa5\xe4\xb8\x8b\xe6\x98\xaf\xe5\x87\xa0\xe4\xb8\xaa\xe4\xbe\x8b\xe5\xad\x90\xef\xbc\x9a\n\n![](imgs/level2_preprocessing2.png)\n\n![](imgs/level2_preprocessing3.png)\n\n![](imgs/level2_preprocessing4.png)\n\n### \xe8\xbf\x9e\xe6\x8e\xa5\xe4\xb8\x89\xe4\xb8\xaa\xe5\x85\xac\xe5\xbc\x8f\n\n\xe8\xa3\x81\xe5\x87\xba\xe6\x9d\xa5\xe5\x87\x86\xe7\xa1\xae\xe7\x9a\x84\xe5\x85\xac\xe5\xbc\x8f\xe4\xbb\xa5\xe5\x90\x8e\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\xb0\xb1\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9b\xb4\xe6\x8e\xa5\xe8\xbf\x9b\xe8\xa1\x8c\xe6\xa8\xaa\xe5\x90\x91\xe8\xbf\x9e\xe6\x8e\xa5\xe4\xba\x86\xef\xbc\x9a\n\n```py\n# \xe8\xbf\x9e\xe6\x8e\xa5\xe4\xb8\x89\xe4\xb8\xaa\xe5\x85\xac\xe5\xbc\x8f\nsizes = np.array(sizes)\nimg2 = np.zeros((sizes[:,0].max(), sizes[:,1].sum()+2*(len(sizes)-1), 3),\n                dtype=np.uint8)\nx = 0\nfor a in imgs[::-1]:\n    w = a.shape[1]\n    img2[:a.shape[0], x:x+w] = a\n    x += w + 2\n```\n\n\xe4\xb8\x8b\xe5\x9b\xbe\xe6\x98\xaf\xe6\x8b\xbc\xe6\x8e\xa5\xe5\xa5\xbd\xe7\x9a\x84\xe5\x9b\xbe\xe5\x83\x8f\xef\xbc\x9a\n\n![](imgs/level2_preprocessing5.png)\n\n### \xe5\xb9\xb6\xe8\xa1\x8c\xe9\xa2\x84\xe5\xa4\x84\xe7\x90\x86\n\n\xe5\xa6\x82\xe6\x9e\x9c\xe7\x9b\xb4\xe6\x8e\xa5\xe4\xbd\xbf\xe7\x94\xa8 python \xe7\x9a\x84 for \xe5\xbe\xaa\xe7\x8e\xaf\xe5\x8e\xbb\xe8\xb7\x91\xef\xbc\x8c\xe5\x8f\xaa\xe8\x83\xbd\xe5\x8d\xa0\xe7\x94\xa8\xe4\xb8\x80\xe4\xb8\xaa\xe6\xa0\xb8\xe7\x9a\x84 CPU \xe5\x88\xa9\xe7\x94\xa8\xe7\x8e\x87\xef\xbc\x8c\xe4\xb8\xba\xe4\xba\x86\xe5\x85\x85\xe5\x88\x86\xe5\x88\xa9\xe7\x94\xa8 CPU\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe4\xbd\xbf\xe7\x94\xa8\xe4\xba\x86\xe5\xa4\x9a\xe8\xbf\x9b\xe8\xa1\x8c\xe5\xb9\xb6\xe8\xa1\x8c\xe9\xa2\x84\xe5\xa4\x84\xe7\x90\x86\xe7\x9a\x84\xe6\x96\xb9\xe6\xb3\x95\xe8\xae\xa9\xe6\xaf\x8f\xe4\xb8\xaa CPU \xe9\x83\xbd\xe8\x83\xbd\xe6\xbb\xa1\xe8\xbd\xbd\xe8\xbf\x90\xe8\xa1\x8c\xe3\x80\x82\xe4\xb8\xba\xe4\xba\x86\xe8\x83\xbd\xe5\xa4\x9f\xe5\xae\x9e\xe6\x97\xb6\xe6\x9f\xa5\xe7\x9c\x8b\xe8\xbf\x9b\xe5\xba\xa6\xef\xbc\x8c\xe6\x88\x91\xe4\xbd\xbf\xe7\x94\xa8\xe4\xba\x86 tqdm \xe8\xbf\x99\xe4\xb8\xaa\xe8\xbf\x9b\xe5\xba\xa6\xe6\x9d\xa1\xe7\x9a\x84\xe5\xba\x93\xe3\x80\x82\n\n```py\np = Pool(12)\n\nn = 100000\nif __name__ == '__main__':\n    rs = []\n    for r in tqdm(p.imap_unordered(f, range(n)), total=n):\n        rs.append(r)\n```\n\n![](imgs/level2_preprocessing6.png)\n\n### \xe6\x80\xbb\xe7\xbb\x93\n\n\xe8\xbf\x99\xe9\x87\x8c\xe6\x88\x91\xe4\xbb\xac\xe6\x8a\x8a\xe5\x90\x84\xe4\xb8\xaa\xe9\x87\x8f\xe4\xb9\x8b\xe9\x97\xb4\xe7\x9a\x84\xe5\x85\xb3\xe7\xb3\xbb\xe9\x83\xbd\xe7\x94\xbb\xe5\x87\xba\xe6\x9d\xa5\xe4\xba\x86\xef\xbc\x8c\xe5\xbe\x88\xe6\x9c\x89\xe6\x84\x8f\xe6\x80\x9d\xe3\x80\x82\n\n```py\npd.plotting.scatter_matrix(df, alpha=0.1, figsize=(14,8), diagonal='kde');\n```\n\n![](imgs/level2_scatter_matrix.png)\n\n\xe5\x85\xb6\xe4\xb8\xad\xe7\x9a\x84 x, y \xe8\xa1\xa8\xe7\xa4\xba\xe5\x85\xac\xe5\xbc\x8f\xe7\x9a\x84\xe8\xb5\xb7\xe5\xa7\x8b\xe5\x9d\x90\xe6\xa0\x87\xef\xbc\x8cw, h \xe8\xa1\xa8\xe7\xa4\xba\xe5\x85\xac\xe5\xbc\x8f\xe7\x9a\x84\xe5\xae\xbd\xe5\x92\x8c\xe9\xab\x98\xef\xbc\x8cn, m \xe8\xa1\xa8\xe7\xa4\xba\xe5\x8e\x9f\xe5\x9b\xbe\xe7\x9a\x84\xe5\xae\xbd\xe5\x92\x8c\xe9\xab\x98\xef\xbc\x8cr \xe8\xa1\xa8\xe7\xa4\xba\xe6\x9c\x89\xe5\x87\xa0\xe4\xb8\xaa\xe5\x85\xac\xe5\xbc\x8f\xe3\x80\x82\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xbb\x8e\xe5\x9b\xbe\xe4\xb8\xad\xe7\x9c\x8b\xe5\x88\xb0\xef\xbc\x8cx, y \xe6\xb2\xa1\xe6\x9c\x89\xe6\x98\x8e\xe6\x98\xbe\xe7\x9a\x84\xe8\xa7\x84\xe5\xbe\x8b\xef\xbc\x8c\xe7\xa8\x8d\xe5\xbe\xae\xe6\x9c\x89\xe4\xb8\x80\xe7\x82\xb9\xe8\xa7\x84\xe5\xbe\x8b\xe5\xb0\xb1\xe6\x98\xaf\xe8\xb6\x8a\xe5\xae\xbd\xe7\x9a\x84\xe5\x9b\xbe\xe8\x83\xbd\xe5\xbe\x97\xe5\x88\xb0\xe7\x9a\x84 x \xe8\xb6\x8a\xe5\xa4\xa7\xef\xbc\x88\xe5\xba\x9f\xe8\xaf\x9d\xef\xbc\x8c\xe5\xae\xbd1000\xe7\x9a\x84\xe5\x9b\xbe\xe4\xb8\x8d\xe5\x8f\xaf\xe8\x83\xbd\xe6\x9c\x89\xe5\x85\xac\xe5\xbc\x8f\xe5\x87\xba\xe7\x8e\xb0\xe5\x9c\xa81200\xef\xbc\x89\xe3\x80\x82\n\nw \xe4\xb9\x9f\xe6\xb2\xa1\xe6\x9c\x89\xe6\x98\x8e\xe6\x98\xbe\xe7\x9a\x84\xe8\xa7\x84\xe5\xbe\x8b\xef\xbc\x8c\xe6\x98\xaf\xe5\x85\xb8\xe5\x9e\x8b\xe7\x9a\x84\xe6\xad\xa3\xe6\x80\x81\xe5\x88\x86\xe5\xb8\x83\xef\xbc\x8c\xe8\x80\x8c h \xe5\x88\x99\xe6\x9c\x89\xe4\xb8\xa4\xe4\xb8\xaa\xe5\xb3\xb0\xef\xbc\x8c\xe8\xbf\x99\xe6\x98\xaf\xe5\x9b\xa0\xe4\xb8\xba\xe5\x85\xac\xe5\xbc\x8f\xe6\x9c\x89\xe4\xb8\xa4\xe4\xb8\xaa\xe5\x92\x8c\xe4\xb8\x89\xe4\xb8\xaa\xe7\x9a\x84\xe5\xb7\xae\xe5\x88\xab\xe3\x80\x82\n\nm, n \xe5\xbe\x88\xe6\x9c\x89\xe8\xa7\x84\xe5\xbe\x8b\xef\xbc\x8c\xe5\xae\x83\xe4\xbb\xac\xe6\x98\xaf\xe6\x8c\x89\xe6\x9f\x90\xe5\x87\xa0\xe4\xb8\xaa\xe5\x9b\xba\xe5\xae\x9a\xe7\x9a\x84\xe6\x95\xb0\xe9\x9a\x8f\xe6\x9c\xba\xe5\x8f\x96\xe7\x9a\x84\xef\xbc\x8cm \xe7\x9a\x84\xe5\x8f\x96\xe5\x80\xbc\xe6\x98\xaf\xe4\xbb\x8e [400, 500, 600, 700, 800, 900, 1000] \xe4\xb8\xad\xe9\x9a\x8f\xe6\x9c\xba\xe9\x80\x89\xe5\x8f\x96\xe7\x9a\x84\xef\xbc\x8cn \xe6\x98\xaf\xe4\xbb\x8e [800, 1600, 2400, 3200, 4000] \xe4\xb8\xad\xe9\x9a\x8f\xe6\x9c\xba\xe5\x8f\x96\xe7\x9a\x84\xe3\x80\x82\n\n```py\nCounter(df['m'])\nCounter({400: 14233,\n         500: 14414,\n         600: 14332,\n         700: 14304,\n         800: 14293,\n         900: 14299,\n         1000: 14125})\n\nCounter(df['n'])\nCounter({800: 19872, 1600: 19937, 2400: 20128, 3200: 19975, 4000: 20088})\n```\n\n## \xe6\xa8\xa1\xe5\x9e\x8b\xe7\xbb\x93\xe6\x9e\x84\n\n\xe7\x94\xb1\xe4\xba\x8e\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaa\xe5\xaf\xb9 `base_model` \xe8\xbf\x9b\xe8\xa1\x8c\xe4\xba\x86\xe4\xbf\xae\xe6\x94\xb9\xef\xbc\x8cctc \xe9\x83\xa8\xe5\x88\x86\xe7\x9b\xb4\xe6\x8e\xa5\xe7\x85\xa7\xe6\x90\xac\xe4\xb9\x8b\xe5\x89\x8d\xe7\x9a\x84\xe4\xbb\xa3\xe7\xa0\x81\xe5\x8d\xb3\xe5\x8f\xaf\xef\xbc\x8c\xe5\x9b\xa0\xe6\xad\xa4\xe8\xbf\x99\xe9\x87\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaa\xe8\xae\xa8\xe8\xae\xba `base_model`\xef\xbc\x8c\xe4\xb8\x8b\xe9\x9d\xa2\xe6\x98\xaf\xe4\xbb\xa3\xe7\xa0\x81\xef\xbc\x9a\n\n```py\ndef ctc_lambda_func(args):\n    y_pred, labels, input_length, label_length = args\n    y_pred = y_pred[:, 2:, :]\n    return K.ctc_batch_cost(labels, y_pred, input_length, label_length)\n\nrnn_size = 128\nl2_rate = 1e-5\n\ninput_tensor = Input((width, height, 3))\nx = input_tensor\nfor i, n_cnn in enumerate([3, 4, 6]):\n    for j in range(n_cnn):\n        x = Conv2D(32*2**i, (3, 3), padding='same', kernel_initializer='he_uniform', \n                   kernel_regularizer=l2(l2_rate))(x)\n        x = BatchNormalization(gamma_regularizer=l2(l2_rate), beta_regularizer=l2(l2_rate))(x)\n        x = Activation('relu')(x)\n    x = MaxPooling2D((2, 2))(x)\n\n# x = AveragePooling2D((1, 2))(x)\ncnn_model = Model(input_tensor, x, name='cnn')\n\ninput_tensor = Input((width, height, 3))\nx = cnn_model(input_tensor)\n\nconv_shape = x.get_shape().as_list()\nrnn_length = conv_shape[1]\nrnn_dimen = conv_shape[3]*conv_shape[2]\n\nprint conv_shape, rnn_length, rnn_dimen\n\nx = Reshape(target_shape=(rnn_length, rnn_dimen))(x)\nrnn_length -= 2\nrnn_imp = 0\n\nx = Dense(rnn_size, kernel_initializer='he_uniform', kernel_regularizer=l2(l2_rate), bias_regularizer=l2(l2_rate))(x)\nx = BatchNormalization(gamma_regularizer=l2(l2_rate), beta_regularizer=l2(l2_rate))(x)\nx = Activation('relu')(x)\n# x = Dropout(0.2)(x)\n\ngru_1 = GRU(rnn_size, implementation=rnn_imp, return_sequences=True, name='gru1')(x)\ngru_1b = GRU(rnn_size, implementation=rnn_imp, return_sequences=True, go_backwards=True, name='gru1_b')(x)\ngru1_merged = add([gru_1, gru_1b])\n\ngru_2 = GRU(rnn_size, implementation=rnn_imp, return_sequences=True, name='gru2')(gru1_merged)\ngru_2b = GRU(rnn_size, implementation=rnn_imp, return_sequences=True, go_backwards=True, name='gru2_b')(gru1_merged)\nx = concatenate([gru_2, gru_2b])\n\n# x = Dropout(0.2)(x)\nx = Dense(n_class, activation='softmax', kernel_regularizer=l2(l2_rate), bias_regularizer=l2(l2_rate))(x)\nrnn_out = x\nbase_model = Model(input_tensor, x)\n```\n\n\xe5\x9c\xa8\xe7\xbb\x8f\xe8\xbf\x87\xe5\xa4\x9a\xe6\xac\xa1\xe7\x9a\x84\xe4\xbb\xa3\xe7\xa0\x81\xe8\xbf\xad\xe4\xbb\xa3\xe4\xbb\xa5\xe5\x90\x8e\xef\xbc\x8c\xe6\x88\x91\xe5\xb0\x86 cnn \xe6\x89\x93\xe5\x8c\x85\xe4\xb8\xba\xe4\xba\x86\xe4\xb8\x80\xe4\xb8\xaa model\xef\xbc\x8c\xe8\xbf\x99\xe6\xa0\xb7\xe6\xa8\xa1\xe5\x9e\x8b\xe4\xbc\x9a\xe7\xae\x80\xe6\xb4\x81\xe5\xbe\x88\xe5\xa4\x9a\xef\xbc\x9a\n\n![](imgs/level2_basemodel.png)\n\n\xe6\xa8\xa1\xe5\x9e\x8b\xe6\x80\x9d\xe8\xb7\xaf\xe6\x98\xaf\xe8\xbf\x99\xe6\xa0\xb7\xe7\x9a\x84\xef\xbc\x9a\xe9\xa6\x96\xe5\x85\x88\xe8\xbe\x93\xe5\x85\xa5\xe4\xb8\x80\xe5\xbc\xa0\xe5\x9b\xbe\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe9\x80\x9a\xe8\xbf\x87 cnn \xe5\xaf\xbc\xe5\x87\xba (112, 10, 128) \xe7\x9a\x84\xe7\x89\xb9\xe5\xbe\x81\xe5\x9b\xbe\xef\xbc\x8c\xe5\x85\xb6\xe4\xb8\xad112\xe5\xb0\xb1\xe6\x98\xaf\xe8\xbe\x93\xe5\x85\xa5\xe5\x88\xb0 rnn \xe7\x9a\x84\xe5\xba\x8f\xe5\x88\x97\xe9\x95\xbf\xe5\xba\xa6\xef\xbc\x8c10 \xe6\x8c\x87\xe7\x9a\x84\xe6\x98\xaf\xe6\xaf\x8f\xe4\xb8\x80\xe6\x9d\xa1\xe7\x89\xb9\xe5\xbe\x81\xe7\x9a\x84\xe9\xab\x98\xe5\xba\xa6\xe6\x98\xaf10\xe5\x83\x8f\xe7\xb4\xa0\xef\xbc\x8c\xe5\xb0\x86\xe5\x90\x8e\xe9\x9d\xa2 (10, 128) \xe7\x9a\x84\xe7\x89\xb9\xe5\xbe\x81\xe5\x90\x88\xe5\xb9\xb6\xe6\x88\x901280\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe7\xbb\x8f\xe8\xbf\x87\xe4\xb8\x80\xe4\xb8\xaa\xe5\x85\xa8\xe8\xbf\x9e\xe6\x8e\xa5\xe9\x99\x8d\xe7\xbb\xb4\xe5\x88\xb0128\xe7\xbb\xb4\xef\xbc\x8c\xe5\xb0\xb1\xe5\xbe\x97\xe5\x88\xb0\xe4\xba\x86 (112, 128) \xe7\x9a\x84\xe7\x89\xb9\xe5\xbe\x81\xef\xbc\x8c\xe8\xbe\x93\xe5\x85\xa5\xe5\x88\xb0 RNN \xe4\xb8\xad\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe7\xbb\x8f\xe8\xbf\x87\xe4\xb8\xa4\xe5\xb1\x82\xe5\x8f\x8c\xe5\x90\x91 GRU \xe8\xbe\x93\xe5\x87\xba112\xe4\xb8\xaa\xe5\xad\x97\xe7\x9a\x84\xe6\xa6\x82\xe7\x8e\x87\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe7\x94\xa8 CTC loss \xe5\x8e\xbb\xe4\xbc\x98\xe5\x8c\x96\xe6\xa8\xa1\xe5\x9e\x8b\xef\xbc\x8c\xe5\xbe\x97\xe5\x88\xb0\xe8\x83\xbd\xe5\xa4\x9f\xe5\x87\x86\xe7\xa1\xae\xe8\xaf\x86\xe5\x88\xab\xe5\xad\x97\xe7\xac\xa6\xe5\xba\x8f\xe5\x88\x97\xe7\x9a\x84\xe6\xa8\xa1\xe5\x9e\x8b\xe3\x80\x82\n\n### CNN\n\nCNN \xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x84\xe5\xa6\x82\xe4\xb8\x8b\xe5\x9b\xbe\xef\xbc\x9a\n\n![](imgs/level2_cnn_model.png)\n\n\xe7\x90\x86\xe8\xae\xba\xe6\x9c\x80\xe5\xa4\xa7\xe5\xba\x8f\xe5\x88\x97\xe9\x95\xbf\xe5\xba\xa6\xe4\xb8\xba46\xe4\xb8\xaa\xe5\xad\x97\xe7\xac\xa6\xef\xbc\x88\xe6\x95\xb0\xe5\xad\x97\xe5\x8f\xaf\xe8\x83\xbd\xe4\xb8\xba100000\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe6\x98\xaf `2*9+3*6+4+4+2=46`\xef\xbc\x8c\xe5\xaf\xb9\xe4\xba\x8e CTC \xe6\x9d\xa5\xe8\xaf\xb4\xef\xbc\x8c\xe6\x88\x91\xe4\xbb\xac\xe6\x9c\x80\xe5\xa5\xbd\xe8\xa6\x81\xe8\xbe\x93\xe5\x85\xa5\xe5\xa4\xa7\xe4\xba\x8e\xe6\x9c\x80\xe5\xa4\xa7\xe9\x95\xbf\xe5\xba\xa62\xe5\x80\x8d\xe7\x9a\x84\xe5\xba\x8f\xe5\x88\x97\xef\xbc\x8c\xe6\x89\x8d\xe8\x83\xbd\xe6\x94\xb6\xe6\x95\x9b\xe5\xbe\x97\xe6\xaf\x94\xe8\xbe\x83\xe5\xa5\xbd\xe3\x80\x82\xe4\xb9\x8b\xe5\x89\x8d\xe6\x88\x91\xe7\x9b\xb4\xe6\x8e\xa5\xe5\x8d\xb7\xe7\xa7\xaf\xe5\x88\xb050\xe5\xb7\xa6\xe5\x8f\xb3\xe4\xba\x86\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe5\xaf\xb9\xe4\xba\x8e\xe8\xbf\x9e\xe7\xbb\xad\xe5\xad\x97\xe7\xac\xa6\xe6\x9d\xa5\xe8\xaf\xb4\xef\xbc\x8c\xe6\xb2\xa1\xe6\x9c\x89\xe7\xa9\xba\xe7\x99\xbd\xe8\x83\xbd\xe5\xb0\x86\xe5\xae\x83\xe4\xbb\xac\xe5\x88\x86\xe9\x9a\x94\xe5\xbc\x80\xe6\x9d\xa5\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe6\x94\xb6\xe6\x95\x9b\xe6\x95\x88\xe6\x9e\x9c\xe4\xbc\x9a\xe5\xb7\xae\xe5\xbe\x88\xe5\xa4\x9a\xe3\x80\x82\xe8\xbf\x99\xe9\x87\x8c\xe7\x9a\x84\xe6\x9c\x80\xe5\xa4\xa7\xe5\xba\x8f\xe5\x88\x97\xe9\x95\xbf\xe5\xba\xa6\xe6\x88\x91\xe4\xb9\x8b\xe5\x89\x8d\xe6\x80\xbb\xe6\x98\xaf\xe7\xae\x97\xe9\x94\x99\xef\xbc\x8c\xe5\x9b\xa0\xe4\xb8\xba\xe6\x88\x91\xe7\x94\xa8\xe7\x9a\x84\xe6\x98\xaf Python2\xef\xbc\x8c\xe6\xb2\xa1\xe6\x9c\x89 decode \xe6\x88\x90 utf-8 \xe7\x9a\x84\xe8\xaf\x9d\xef\xbc\x8c\xe4\xb8\x80\xe4\xb8\xaa\xe4\xb8\xad\xe6\x96\x87\xe5\x8d\xa0\xe4\xb8\x89\xe4\xb8\xaa\xe5\xad\x97\xe8\x8a\x82\xe3\x80\x82\n\nCNN \xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x84\xe7\x94\xb1\xe5\x8e\x9f\xe6\x9d\xa5\xe7\x9a\x84\xe4\xb8\xa4\xe5\xb1\x82\xe5\x8d\xb7\xe7\xa7\xaf\xe4\xb8\x80\xe5\xb1\x82\xe6\xb1\xa0\xe5\x8c\x96\xef\xbc\x8c\xe6\x94\xb9\xe4\xb8\xba\xe4\xba\x86\xe5\xa4\x9a\xe5\xb1\x82\xe5\x8d\xb7\xe7\xa7\xaf\xef\xbc\x8c\xe4\xb8\x80\xe5\xb1\x82\xe6\xb1\xa0\xe5\x8c\x96\xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x84\xef\xbc\x8c\xe7\x94\xb1\xe4\xba\x8e\xe5\x8d\xb7\xe7\xa7\xaf\xe5\xb1\x82\xe5\x88\x86\xe5\x88\xab\xe6\x98\xaf3\xef\xbc\x8c4\xe5\x92\x8c6\xe5\xb1\x82\xef\xbc\x8c\xe6\x88\x91\xe7\xa7\xb0\xe4\xb9\x8b\xe4\xb8\xba 346 \xe7\xbb\x93\xe6\x9e\x84\xe3\x80\x82\n\n### GRU\n\n\xe4\xb8\xba\xe4\xbb\x80\xe4\xb9\x88\xe4\xbd\xbf\xe7\x94\xa8 RNN \xe5\x91\xa2\xef\xbc\x8c\xe8\xbf\x99\xe9\x87\x8c\xe6\x88\x91\xe4\xb8\xbe\xe4\xb8\x80\xe4\xb8\xaa\xe5\xbe\x88\xe7\xbb\x8f\xe5\x85\xb8\xe7\x9a\x84\xe4\xbe\x8b\xe5\xad\x90\xef\xbc\x9a\xe7\xa0\x94\xe8\xa1\xa8\xe7\xa9\xb6\xe6\x98\x8e\xef\xbc\x8c\xe6\xb1\x89\xe5\xad\x97\xe7\x9a\x84\xe5\xba\x8f\xe9\xa1\xba\xe5\xb9\xb6\xe4\xb8\x8d\xe5\xae\x9a\xe4\xb8\x80\xe8\x83\xbd\xe5\xbd\xb1\xe9\x98\x85\xe5\x93\x8d\xe8\xaf\xbb\xef\xbc\x8c\xe6\xaf\x94\xe5\xa6\x82\xe5\xbd\x93\xe4\xbd\xa0\xe7\x9c\x8b\xe5\xae\x8c\xe8\xbf\x99\xe5\x8f\xa5\xe8\xaf\x9d\xe5\x90\x8e\xef\xbc\x8c\xe6\x89\x8d\xe5\x8f\x91\xe8\xbf\x99\xe7\x8e\xb0\xe9\x87\x8c\xe7\x9a\x84\xe5\xad\x97\xe5\x85\xa8\xe6\x98\xaf\xe9\x83\xbd\xe4\xb9\xb1\xe7\x9a\x84\xe3\x80\x82\n\n\xe4\xba\xba\xe7\x9c\xbc\xe5\x8e\xbb\xe9\x98\x85\xe8\xaf\xbb\xe4\xb8\x80\xe6\xae\xb5\xe8\xaf\x9d\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\xef\xbc\x8c\xe6\x98\xaf\xe4\xbc\x9a\xe9\xa1\xbe\xe5\x8f\x8a\xe5\x88\xb0\xe4\xb8\x8a\xe4\xb8\x8b\xe6\x96\x87\xe7\x9a\x84\xef\xbc\x8c\xe4\xb8\x8d\xe6\x98\xaf\xe4\xbe\x9d\xe6\xac\xa1\xe5\x8d\x95\xe4\xb8\xaa\xe5\xad\x97\xe7\xac\xa6\xe7\x9a\x84\xe8\xaf\x86\xe5\x88\xab\xef\xbc\x8c\xe5\x9b\xa0\xe6\xad\xa4\xe5\xbc\x95\xe5\x85\xa5 RNN \xe5\x8e\xbb\xe8\xaf\x86\xe5\x88\xab\xe4\xb8\x8a\xe4\xb8\x8b\xe6\x96\x87\xe8\x83\xbd\xe5\xa4\x9f\xe6\x9e\x81\xe5\xa4\xa7\xe6\x8f\x90\xe5\x8d\x87\xe6\xa8\xa1\xe5\x9e\x8b\xe7\x9a\x84\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xe3\x80\x82\xe5\x9c\xa8\xe5\x86\xb3\xe8\xb5\x9b\xe4\xb8\xad\xef\xbc\x8c\xe5\xba\x8f\xe5\x88\x97\xe6\x9c\x89\xe5\x87\xa0\xe4\xb8\xaa\xe5\x9c\xb0\xe6\x96\xb9\xe9\x83\xbd\xe6\x98\xaf\xe6\x9c\x89\xe4\xb8\x8a\xe4\xb8\x8b\xe6\x96\x87\xe5\x85\xb3\xe7\xb3\xbb\xe7\x9a\x84\xef\xbc\x9a\n\n* \xe5\x89\x8d\xe9\x9d\xa2\xe4\xb8\x80\xe4\xb8\xaa\xe6\x88\x96\xe4\xb8\xa4\xe4\xb8\xaa\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xe4\xb8\x80\xe5\xae\x9a\xe6\x98\xaf \xe4\xb8\xad\xe6\x96\x87=\xe6\x95\xb0\xe5\xad\x97; \xe8\xbf\x99\xe6\xa0\xb7\xe7\x9a\x84\xe5\xbd\xa2\xe5\xbc\x8f\n* \xe5\xb7\xa6\xe6\x8b\xac\xe5\x8f\xb7\xe4\xb8\x80\xe5\xae\x9a\xe4\xbc\x9a\xe6\x9c\x89\xe5\x8f\xb3\xe6\x8b\xac\xe5\x8f\xb7\n* \xe6\x8b\xac\xe5\x8f\xb7\xe7\x9a\x84\xe4\xbd\x8d\xe7\xbd\xae\xe6\x98\xaf\xe6\x9c\x89\xe8\xaf\xad\xe6\xb3\x95\xe8\xa7\x84\xe5\x88\x99\xe7\x9a\x84\n* \xe4\xb8\x80\xe5\xae\x9a\xe4\xbc\x9a\xe6\x9c\x89\xe4\xb8\x80\xe4\xb8\xaa\xe5\x88\x86\xe5\xbc\x8f\n* \xe5\x88\x86\xe5\xbc\x8f\xe7\x9a\x84\xe5\x88\x86\xe5\xad\x90\xe4\xb8\x80\xe5\xae\x9a\xe6\x98\xaf\xe4\xb8\xad\xe6\x96\x87\n* \xe5\xa6\x82\xe6\x9e\x9c\xe5\x8f\xaa\xe6\x9c\x89\xe4\xb8\x80\xe4\xb8\xaa\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xef\xbc\x8c\xe9\x82\xa3\xe4\xb9\x88\xe8\xa1\xa8\xe8\xbe\xbe\xe5\xbc\x8f\xe4\xb8\xad\xe7\x9a\x84\xe4\xb8\xad\xe6\x96\x87\xe4\xb8\x80\xe5\xae\x9a\xe6\x98\xaf\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xe7\x9a\x84\xe4\xb8\xad\xe6\x96\x87\n* \xe5\xa6\x82\xe6\x9e\x9c\xe6\x9c\x89\xe4\xb8\xa4\xe4\xb8\xaa\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xef\xbc\x8c\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xe5\xae\xb9\xe6\x98\x93\xe7\x9c\x8b\xe6\xb8\x85\xef\xbc\x8c\xe8\xa1\xa8\xe8\xbe\xbe\xe5\xbc\x8f\xe4\xb8\x8d\xe5\xae\xb9\xe6\x98\x93\xe7\x9c\x8b\xe6\xb8\x85\xef\xbc\x8c\xe9\x82\xa3\xe4\xb9\x88\xe5\x8f\xaf\xe4\xbb\xa5\xe9\x80\x9a\xe8\xbf\x87\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xe7\x9a\x84\xe4\xb8\xad\xe6\x96\x87\xe5\x8e\xbb\xe4\xbf\xae\xe6\xad\xa3\xe8\xa1\xa8\xe8\xbe\xbe\xe5\xbc\x8f\xe7\x9a\x84\xe4\xb8\xad\xe6\x96\x87\xef\xbc\x8c\xe7\x89\xb9\xe5\x88\xab\xe6\x98\xaf\xe5\x88\x86\xe5\xad\x90\xe4\xb8\xad\xe6\x96\x87\xe8\xa2\xab\xe8\xa3\x81\xe6\x8e\x89\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\n\n### \xe5\x85\xb6\xe4\xbb\x96\xe5\x8f\x82\xe6\x95\xb0\n\n\xe7\x9b\xb8\xe6\xaf\x94\xe4\xb9\x8b\xe5\x89\x8d\xe5\x88\x9d\xe8\xb5\x9b\xe7\x9a\x84\xe6\xa8\xa1\xe5\x9e\x8b\xef\xbc\x8c\xe8\xbf\x99\xe9\x87\x8c\xe8\xbf\x9b\xe8\xa1\x8c\xe4\xba\x86\xe4\xb8\x80\xe4\xba\x9b\xe4\xbf\xae\xe6\x94\xb9\xef\xbc\x9a\n\n* padding \xe5\x8f\x98\xe4\xb8\xba\xe4\xba\x86 same\xef\xbc\x8c\xe4\xb8\x8d\xe7\x84\xb6\xe6\x88\x91\xe8\xa7\x89\xe5\xbe\x97\xe7\x89\xb9\xe5\xbe\x81\xe5\x9b\xbe\xe7\x9a\x84\xe9\xab\x98\xe5\xba\xa6\xe4\xb8\x8d\xe5\xa4\x9f\xef\xbc\x8c\xe6\x97\xa0\xe6\xb3\x95\xe8\xaf\x86\xe5\x88\xab\xe5\x88\x86\xe6\x95\xb0\n* \xe5\xa2\x9e\xe5\x8a\xa0\xe4\xba\x86 l2 \xe6\xad\xa3\xe5\x88\x99\xe5\x8c\x96\xef\xbc\x8closs loss \xe5\x8f\x98\xe5\xbe\x97\xe6\x9b\xb4\xe5\xa4\xa7\xe4\xba\x86\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xe5\x8f\x98\xe5\xbe\x97\xe6\x9b\xb4\xe9\xab\x98\xe4\xba\x86\xef\xbc\x88\xe6\xb7\xbb\xe5\x8a\xa0 l2 \xe7\x9a\x84\xe9\x83\xa8\xe5\x88\x86\xe5\x8c\x85\xe6\x8b\xac\xe5\x8d\xb7\xe7\xa7\xaf\xe5\xb1\x82\xe7\x9a\x84 kernel\xef\xbc\x8cBN \xe5\xb1\x82\xe7\x9a\x84 gamma \xe5\x92\x8c beta\xef\xbc\x8c\xe4\xbb\xa5\xe5\x8f\x8a\xe5\x85\xa8\xe8\xbf\x9e\xe6\x8e\xa5\xe5\xb1\x82\xe7\x9a\x84 weights \xe5\x92\x8c bias\xef\xbc\x89\n* \xe5\x90\x84\xe4\xb8\xaa\xe5\xb1\x82\xe7\x9a\x84\xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe5\x8f\x98\xe4\xb8\xba\xe4\xba\x86 he_uniform\xef\xbc\x8c\xe6\x95\x88\xe6\x9e\x9c\xe6\xaf\x94\xe4\xb9\x8b\xe5\x89\x8d\xe5\xa5\xbd\n* \xe5\x8e\xbb\xe6\x8e\x89\xe4\xba\x86 dropout\xef\xbc\x8c\xe4\xb8\x8d\xe6\xb8\x85\xe6\xa5\x9a\xe5\xbd\xb1\xe5\x93\x8d\xe5\xa6\x82\xe4\xbd\x95\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf\xe5\x8f\x8d\xe6\xad\xa3\xe6\x9c\x89\xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\xef\xbc\x8c\xe5\xba\x94\xe8\xaf\xa5\xe4\xb8\x8d\xe4\xbc\x9a\xe5\x87\xba\xe7\x8e\xb0\xe8\xbf\x87\xe6\x8b\x9f\xe5\x90\x88\xe7\x9a\x84\xe6\x83\x85\xe5\x86\xb5\n* \xe4\xbf\xae\xe6\x94\xb9\xe8\xbf\x87 GRU \xe7\x9a\x84 implementation \xe4\xb8\xba2\xef\xbc\x8c\xe5\x8e\x9f\xe5\x9b\xa0\xe6\x98\xaf\xe5\xb8\x8c\xe6\x9c\x9b\xe6\x98\xbe\xe5\x8d\xa1\xe8\x83\xbd\xe5\x8a\xa0\xe9\x80\x9f GRU \xe7\x9a\x84\xe9\x80\x9f\xe5\xba\xa6\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf\xe4\xbc\xbc\xe4\xb9\x8e\xe9\x80\x9f\xe5\xba\xa6\xe8\xbf\x98\xe4\xb8\x8d\xe5\xa6\x82\xe8\xae\xbe\xe7\xbd\xae\xe4\xb8\xba0\xef\xbc\x8c\xe4\xbd\xbf\xe7\x94\xa8 CPU \xe6\x9d\xa5\xe8\xb7\x91\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe5\x8f\x88\xe6\x94\xb9\xe5\x9b\x9e\xe6\x9d\xa5\xe4\xba\x86\n\nl2 \xe6\xad\xa3\xe5\x88\x99\xe5\x8c\x96\xe7\x9a\x84\xe5\x8f\x82\xe6\x95\xb0\xe7\x9b\xb4\xe6\x8e\xa5\xe5\x8f\x82\xe8\x80\x83\xe4\xba\x86 Xception \xe8\xae\xba\xe6\x96\x87\xe7\x9a\x84 4.3 \xe8\x8a\x82\xe7\xbb\x99\xe7\x9a\x84\xe5\x8f\x82\xe6\x95\xb0\xef\xbc\x9a\n\n> Weight decay: The Inception V3 model uses a weight decay (L2 regularization) rate of 4e-5, which has been carefully tuned for performance on ImageNet. We found this rate to be quite suboptimal for Xception and instead settled for 1e-5.\n\n## \xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\n\n\xe4\xb8\xba\xe4\xba\x86\xe5\xbe\x97\xe5\x88\xb0\xe6\x9b\xb4\xe5\xa4\x9a\xe7\x9a\x84\xe6\x95\xb0\xe6\x8d\xae\xef\xbc\x8c\xe6\x8f\x90\xe9\xab\x98\xe6\xa8\xa1\xe5\x9e\x8b\xe7\x9a\x84\xe6\xb3\x9b\xe5\x8c\x96\xe8\x83\xbd\xe5\x8a\x9b\xef\xbc\x8c\xe6\x88\x91\xe4\xbd\xbf\xe7\x94\xa8\xe4\xba\x86\xe4\xb8\x80\xe7\xa7\x8d\xe5\xbe\x88\xe7\xae\x80\xe5\x8d\x95\xe7\x9a\x84\xe6\x95\xb0\xe6\x8d\xae\xe6\x89\xa9\xe5\x85\x85\xe5\x8a\x9e\xe6\xb3\x95\xef\xbc\x8c\xe9\x82\xa3\xe5\xb0\xb1\xe6\x98\xaf\xe6\xa0\xb9\xe6\x8d\xae\xe8\xa1\xa8\xe8\xbe\xbe\xe5\xbc\x8f\xe4\xb8\xad\xe7\x9a\x84\xe4\xb8\xad\xe6\x96\x87\xe9\x9a\x8f\xe6\x9c\xba\xe6\x8c\x91\xe9\x80\x89\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xef\xbc\x8c\xe7\xbb\x84\xe6\x88\x90\xe6\x96\xb0\xe7\x9a\x84\xe6\xa0\xb7\xe6\x9c\xac\xe3\x80\x82\xe8\xbf\x99\xe9\x87\x8c\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\x96\xe4\xba\x86\xe5\x89\x8d 350*256=89600 \xe4\xb8\xaa\xe6\xa0\xb7\xe6\x9c\xac\xe6\x9d\xa5\xe7\x94\x9f\xe6\x88\x90\xef\xbc\x8c\xe7\x94\xa8\xe4\xb9\x8b\xe5\x90\x8e\xe7\x9a\x84 10240 \xe4\xb8\xaa\xe6\xa0\xb7\xe6\x9c\xac\xe6\x9d\xa5\xe5\x81\x9a\xe9\xaa\x8c\xe8\xaf\x81\xe9\x9b\x86\xef\xbc\x8c\xe8\xbf\x98\xe6\x9c\x89\xe4\xb8\x80\xe7\x82\xb9\xe9\x9b\xb6\xe5\xa4\xb4\xe5\x9b\xa0\xe4\xb8\xba\xe5\xa4\xaa\xe5\xb0\x91\xe5\xb0\xb1\xe6\xb2\xa1\xe6\x9c\x89\xe7\x94\xa8\xe4\xba\x86\xe3\x80\x82\n\n\xe5\xaf\xbc\xe5\x85\xa5\xe6\x95\xb0\xe6\x8d\xae\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\xef\xbc\x8c\xe5\x85\x88\xe8\xaf\xbb\xe5\x8f\x96\xe8\xbf\x90\xe7\xae\x97\xe5\xbc\x8f\xe7\x9a\x84\xe5\x9b\xbe\xe5\x83\x8f\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe6\x8c\x89\xe4\xb8\xad\xe6\x96\x87\xe5\xaf\xbc\xe5\x85\xa5\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xe7\x9a\x84\xe5\x9b\xbe\xe5\x83\x8f\xe5\x88\xb0\xe5\xad\x97\xe5\x85\xb8\xe4\xb8\xad\xe3\x80\x82\xe5\x9b\xa0\xe4\xb8\xba\xe5\xad\x97\xe5\x85\xb8\xe4\xb8\xad\xe7\x9a\x84 key \xe6\x98\xaf\xe6\x97\xa0\xe5\xba\x8f\xe7\x9a\x84\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe6\x88\x91\xe4\xbb\xac\xe5\x9c\xa8\xe5\xad\x97\xe5\x85\xb8\xe4\xb8\xad\xe5\xad\x98\xe7\x9a\x84\xe6\x98\xaf list\xef\xbc\x8c\xe5\x88\x97\xe8\xa1\xa8\xe6\x98\xaf\xe6\x9c\x89\xe5\xba\x8f\xe7\x9a\x84\xe3\x80\x82\n\n```py\nfrom collections import defaultdict\n\ncn_imgs = defaultdict(list)\ncn_labels = defaultdict(list)\nss_imgs = []\nss_labels = []\n\nfor i in tqdm(range(n1)):\n    ss = df[0][i].decode('utf-8').split(';')\n    m = len(ss)-1\n    ss_labels.append(ss[-1])\n    ss_imgs.append(cv2.imread('crop_split2/%d_%d.png'%(i, 0)).transpose(1, 0, 2))\n    for j in range(m):\n        cn_labels[ss[j][0]].append(ss[j])\n        cn_imgs[ss[j][0]].append(cv2.imread('crop_split2/%d_%d.png'%(i, m-j)).transpose(1, 0, 2))\n```\n\n\xe7\x84\xb6\xe5\x90\x8e\xe5\xae\x9e\xe7\x8e\xb0\xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\xef\xbc\x8c\xe8\xbf\x99\xe9\x87\x8c\xe7\xbb\xa7\xe6\x89\xbf\xe4\xba\x86 keras \xe9\x87\x8c\xe7\x9a\x84 Sequence \xe7\xb1\xbb\xef\xbc\x9a\n\n```py\nfrom keras.utils import Sequence\n\nclass SGen(Sequence):\n    def __init__(self, batch_size):\n        self.batch_size = batch_size\n        self.X_gen = np.zeros((batch_size, width, height, 3), dtype=np.uint8)\n        self.y_gen = np.zeros((batch_size, n_len), dtype=np.uint8)\n        self.input_length = np.ones(batch_size)*rnn_length\n        self.label_length = np.ones(batch_size)*38\n    \n    def __len__(self):\n        return 350*256 // self.batch_size\n    \n    def __getitem__(self, idx):\n        self.X_gen[:] = 0\n        for i in range(self.batch_size):\n            try:\n                random_index = random.randint(0, n1-1)\n                cls = []\n                ss = ss_labels[random_index]\n                cs = re.findall(ur'[\\u4e00-\\u9fff]', df[0][random_index].decode('utf-8').split(';')[-1])\n                random.shuffle(cs)\n                x = 0\n                for c in cs:\n                    random_index2 = random.randint(0, len(cn_labels[c])-1)\n                    cls.append(cn_labels[c][random_index2])\n                    img = cn_imgs[c][random_index2]\n                    w, h, _ = img.shape\n                    self.X_gen[i, x:x+w, :h] = img\n                    x += w+2\n                img = ss_imgs[random_index]\n                w, h, _ = img.shape\n                self.X_gen[i, x:x+w, :h] = img\n                cls.append(ss)\n\n                random_str = u';'.join(cls)\n                self.y_gen[i,:len(random_str)] = [characters.find(x) for x in random_str]\n                self.y_gen[i,len(random_str):] = n_class-1\n                self.label_length[i] = len(random_str)\n            except:\n                pass\n        \n        return [self.X_gen, self.y_gen, self.input_length, self.label_length], np.ones(self.batch_size)\n```\n\n\xe9\xa6\x96\xe5\x85\x88\xe9\x9a\x8f\xe6\x9c\xba\xe5\x8f\x96\xe4\xb8\x80\xe4\xb8\xaa\xe8\xa1\xa8\xe8\xbe\xbe\xe5\xbc\x8f\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe7\x94\xa8\xe6\xad\xa3\xe5\x88\x99\xe8\xa1\xa8\xe8\xbe\xbe\xe5\xbc\x8f\xe6\x89\xbe\xe9\x87\x8c\xe9\x9d\xa2\xe7\x9a\x84\xe4\xb8\xad\xe6\x96\x87\xef\xbc\x8c\xe5\x86\x8d\xe4\xbb\x8e{\xe4\xb8\xad\xe6\x96\x87\xef\xbc\x9a\xe5\x9b\xbe\xe5\x83\x8f\xe6\x95\xb0\xe7\xbb\x84}\xe7\x9a\x84\xe5\xad\x97\xe5\x85\xb8\xe4\xb8\xad\xe9\x9a\x8f\xe6\x9c\xba\xe5\x8f\x96\xe5\x9b\xbe\xe5\x83\x8f\xef\xbc\x8c\xe7\xbb\x8f\xe8\xbf\x87\xe4\xb9\x8b\xe5\x89\x8d\xe9\xa2\x84\xe5\xa4\x84\xe7\x90\x86\xe7\x9a\x84\xe6\x96\xb9\xe5\xbc\x8f\xe6\x8b\xbc\xe6\x8e\xa5\xe6\x88\x90\xe4\xb8\x80\xe4\xb8\xaa\xe6\x96\xb0\xe7\x9a\x84\xe5\xba\x8f\xe5\x88\x97\xe3\x80\x82\n\n\xe6\xaf\x94\xe5\xa6\x82\xe9\x9a\x8f\xe6\x9c\xba\xe5\x8f\x96\xe4\xba\x86\xe4\xb8\x80\xe4\xb8\xaa `85882*(\xe6\xb2\xb3/76020-37023)-\xe9\x93\x81`\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe6\x88\x91\xe4\xbb\xac\xe4\xbb\x8e\xe9\x93\x81\xe7\x9a\x84\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xe4\xb8\xad\xe9\x9a\x8f\xe6\x9c\xba\xe5\x8f\x96\xe4\xb8\x80\xe4\xb8\xaa\xef\xbc\x8c\xe5\x86\x8d\xe4\xbb\x8e\xe6\xb2\xb3\xe7\x9a\x84\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xe4\xb8\xad\xe9\x9a\x8f\xe4\xbe\xbf\xe5\x8f\x96\xe4\xb8\x80\xe4\xb8\xaa\xef\xbc\x8c\xe6\x8b\xbc\xe8\xb5\xb7\xe6\x9d\xa5\xe5\xb0\xb1\xe8\x83\xbd\xe5\xbe\x97\xe5\x88\xb0\xe4\xb8\x8b\xe5\x9b\xbe\xef\xbc\x9a\n\n![](imgs/level2_generator.png)\n\n\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9c\x8b\xe5\x88\xb0\xe8\x83\x8c\xe6\x99\xaf\xe9\xa2\x9c\xe8\x89\xb2\xe6\x98\xaf\xe4\xb8\x8d\xe5\x90\x8c\xe7\x9a\x84\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf\xe5\xb9\xb6\xe4\xb8\x8d\xe5\xbd\xb1\xe5\x93\x8d\xe6\xa8\xa1\xe5\x9e\x8b\xe5\x8e\xbb\xe8\xaf\x86\xe5\x88\xab\xe3\x80\x82\n\n## \xe8\xae\xad\xe7\xbb\x83\n\n\xe6\x88\x91\xe4\xbb\xac\xe8\xae\xad\xe7\xbb\x83\xe7\x9a\x84\xe7\xad\x96\xe7\x95\xa5\xe6\x98\xaf\xe5\x85\x88\xe7\x94\xa8 Adam() \xe9\xbb\x98\xe8\xae\xa4\xe7\x9a\x84\xe5\xad\xa6\xe4\xb9\xa0\xe7\x8e\x87 1e-3 \xe5\xbf\xab\xe9\x80\x9f\xe6\x94\xb6\xe6\x95\x9b50\xe4\xbb\xa3\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe7\x94\xa8 Adam(1e-4) \xe8\xb7\x9150\xe4\xbb\xa3\xef\xbc\x8c\xe8\xbe\xbe\xe5\x88\xb0\xe4\xb8\x80\xe4\xb8\xaa\xe4\xb8\x8d\xe9\x94\x99\xe7\x9a\x84 loss\xef\xbc\x8c\xe6\x9c\x80\xe5\x90\x8e\xe7\x94\xa8 Adam(1e-5)\xe5\xbe\xae\xe8\xb0\x8350\xe4\xbb\xa3\xef\xbc\x8c\xe6\xaf\x8f\xe4\xb8\x80\xe4\xbb\xa3\xe9\x83\xbd\xe4\xbf\x9d\xe5\xad\x98\xe6\x9d\x83\xe5\x80\xbc\xef\xbc\x8c\xe5\xb9\xb6\xe4\xb8\x94\xe6\x8a\x8a\xe9\xaa\x8c\xe8\xaf\x81\xe9\x9b\x86\xe7\x9a\x84\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xe8\xb7\x91\xe5\x87\xba\xe6\x9d\xa5\xe3\x80\x82\xe5\x9b\xbe\xe4\xb8\xad\xe7\x9a\x84\xe7\xbb\xbf\xe8\x89\xb2\xe7\x9a\x84\xe7\xba\xbf 0.9977 \xe5\xb0\xb1\xe6\x98\xaf\xe6\x8c\x89\xe4\xb8\x8a\xe9\x9d\xa2\xe7\x9a\x84\xe6\x96\xb9\xe6\xb3\x95\xe8\xae\xad\xe7\xbb\x83\xe7\x9a\x84\xe6\xa8\xa1\xe5\x9e\x8b\xef\xbc\x8c\n\n![](imgs/loss.png)\n\n\xe5\xbd\x93\xe7\x84\xb6\xe6\x88\x91\xe4\xbb\xac\xe8\xbf\x98\xe5\xb0\x9d\xe8\xaf\x95\xe8\xbf\x87\xe5\x85\x88\xe6\x8c\x89 1e-3 \xe7\x9a\x84\xe5\xad\xa6\xe4\xb9\xa0\xe7\x8e\x87\xe8\xae\xad\xe7\xbb\x8320\xe4\xbb\xa3\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e 1e-4 \xe5\x92\x8c 1e-5 \xe4\xba\xa4\xe6\x9b\xbf\xe8\xae\xad\xe7\xbb\x832\xe6\xac\xa1\xef\xbc\x8c\xe6\xaf\x8f\xe6\xac\xa1\xe8\xae\xad\xe7\xbb\x83\xe5\x8f\x96\xe9\xaa\x8c\xe8\xaf\x81\xe9\x9b\x86 loss \xe6\x9c\x80\xe4\xbd\x8e\xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x9c\xe7\xbb\xa7\xe7\xbb\xad\xe8\xae\xad\xe7\xbb\x83\xef\xbc\x8c\xe4\xb9\x9f\xe5\xb0\xb1\xe6\x98\xaf\xe5\x9b\xbe\xe4\xb8\xad\xe7\xba\xa2\xe8\x89\xb2\xe7\x9a\x84\xe7\xba\xbf\xef\xbc\x8c\xe8\x99\xbd\xe7\x84\xb6\xe9\x80\x9f\xe5\xba\xa6\xe5\xbf\xab\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xe4\xb8\x8d\xe5\xa4\x9f\xe5\xa5\xbd\xe3\x80\x82\n\n\xe4\xb9\x8b\xe5\x90\x8e\xe6\x88\x91\xe4\xbb\xac\xe5\xb0\x86\xe5\x85\xa8\xe9\x83\xa8\xe8\xae\xad\xe7\xbb\x83\xe9\x9b\x86\xe9\x83\xbd\xe7\x94\xa8\xe4\xba\x8e\xe8\xae\xad\xe7\xbb\x83\xef\xbc\x8c\xe5\xbe\x97\xe5\x88\xb0\xe4\xba\x86\xe8\x93\x9d\xe8\x89\xb2\xe7\x9a\x84\xe7\xba\xbf\xef\xbc\x8c\xe6\x95\x88\xe6\x9e\x9c\xe5\x92\x8c\xe7\xbb\xbf\xe8\x89\xb2\xe5\xb7\xae\xe4\xb8\x8d\xe5\xa4\x9a\xe3\x80\x82\n\n## \xe9\xa2\x84\xe6\xb5\x8b\xe7\xbb\x93\xe6\x9e\x9c\n\n\xe8\xaf\xbb\xe5\x8f\x96\xe6\xb5\x8b\xe8\xaf\x95\xe9\x9b\x86\xe7\x9a\x84\xe6\xa0\xb7\xe6\x9c\xac\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe7\x94\xa8 `base_model` \xe8\xbf\x9b\xe8\xa1\x8c\xe9\xa2\x84\xe6\xb5\x8b\xef\xbc\x8c\xe8\xbf\x99\xe4\xb8\xaa\xe8\xbf\x87\xe7\xa8\x8b\xe5\xbe\x88\xe7\xae\x80\xe5\x8d\x95\xef\xbc\x8c\xe5\xb0\xb1\xe4\xb8\x8d\xe8\xae\xb2\xe4\xba\x86\xe3\x80\x82\n\n```py\nX = np.zeros((n, width, height, channels), dtype=np.uint8)\n\nfor i in tqdm(range(n)):\n    img = cv2.imread('crop_split2_test/%d.png'%i).transpose(1, 0, 2)\n    a, b, _ = img.shape\n    X[i, :a, :b] = img\n\nbase_model = load_model('model_346_split2_3_%s.h5' % z)\nbase_model2 = make_parallel(base_model, 4)\n\ny_pred = base_model2.predict(X, batch_size=500, verbose=1)\nout = K.get_value(K.ctc_decode(y_pred[:,2:], input_length=np.ones(y_pred.shape[0])*rnn_length)[0][0])[:, :n_len]\n```\n\n\xe8\xbe\x93\xe5\x87\xba\xe5\x88\xb0\xe6\x96\x87\xe4\xbb\xb6\xe7\x9a\x84\xe9\x83\xa8\xe5\x88\x86\xe6\x9c\x89\xe4\xb8\x80\xe7\x82\xb9\xe5\x80\xbc\xe5\xbe\x97\xe4\xb8\x80\xe6\x8f\x90\xef\xbc\x8c\xe5\xb0\xb1\xe6\x98\xaf\xe5\xa6\x82\xe4\xbd\x95\xe8\xae\xa1\xe7\xae\x97\xe5\x87\xba\xe7\x9c\x9f\xe5\xae\x9e\xe5\x80\xbc\xef\xbc\x9a\n\n```py\nss = map(decode, out)\n\nvals = []\nerrs = []\nerrsid = []\nfor i in tqdm(range(100000)):\n    val = ''\n    try:\n        a = ss[i].split(';')\n        s = a[-1]\n        for x in a[:-1]:\n            x, c = x.split('=')\n            s = s.replace(x, c+'.0')\n        val = '%.2f' % eval(s)\n    except:\n#         disp3(i)\n        errs.append(ss[i])\n        errsid.append(i)\n        ss[i] = ''\n    \n    vals.append(val)\n    \nwith open('result_%s.txt' % z, 'w') as f:\n    f.write('\\n'.join(map(' '.join, list(zip(ss, vals)))).encode('utf-8'))\n    \nprint len(errs)\nprint 1-len(errs)/100000.\n\n# output\n22\n0.99978\n```\n\n\xe5\x85\xb6\xe4\xb8\xad\xe7\x9a\x84\xe6\x80\x9d\xe8\xb7\xaf\xe8\xaf\xb4\xe8\xb5\xb7\xe6\x9d\xa5\xe4\xb9\x9f\xe5\xbe\x88\xe7\xae\x80\xe5\x8d\x95\xef\xbc\x8c\xe5\xb0\xb1\xe6\x98\xaf\xe5\xb0\x86\xe8\xa1\xa8\xe8\xbe\xbe\xe5\xbc\x8f\xe4\xb8\xad\xe7\x9a\x84\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xe4\xb8\xad\xe6\x96\x87\xe6\x9b\xbf\xe6\x8d\xa2\xe4\xb8\xba\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xe7\x9a\x84\xe6\x95\xb0\xe5\xad\x97\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe7\x9b\xb4\xe6\x8e\xa5\xe7\x94\xa8 python eval \xe5\xbe\x97\xe5\x88\xb0\xe7\xbb\x93\xe6\x9e\x9c\xef\xbc\x8c\xe7\xae\x97\xe4\xb8\x8d\xe5\x87\xba\xe6\x9d\xa5\xe7\x9a\x84\xe7\x9b\xb4\xe6\x8e\xa5\xe7\x95\x99\xe7\xa9\xba\xe5\x8d\xb3\xe5\x8f\xaf\xe3\x80\x82\xe8\xbf\x99\xe4\xb8\xaa0.9977\xe6\xa8\xa1\xe5\x9e\x8b\xe7\x9a\x84\xe5\x8f\xaf\xe7\xae\x97\xe7\x8e\x87\xe8\xbe\xbe\xe5\x88\xb0\xe4\xba\x860.99978\xef\xbc\x8c\xe4\xb9\x9f\xe5\xb0\xb1\xe6\x98\xaf\xe8\xaf\xb4\xe5\x8d\x81\xe4\xb8\x87\xe4\xb8\xaa\xe6\xa0\xb7\xe6\x9c\xac\xe9\x87\x8c\xe9\x9d\xa2\xe5\x8f\xaa\xe6\x9c\x8922\xe4\xb8\xaa\xe6\xa0\xb7\xe6\x9c\xac\xe4\xb8\x8d\xe5\x8f\xaf\xe7\xae\x97\xef\xbc\x8c\xe5\xbd\x93\xe7\x84\xb6\xef\xbc\x8c\xe5\xae\x9e\xe9\x99\x85\xe4\xb8\x8a\xe8\xbf\x98\xe6\x98\xaf\xe6\x9c\x89\xe4\xb8\x80\xe4\xba\x9b\xe6\xa0\xb7\xe6\x9c\xac\xe5\x8d\xb3\xe4\xbd\xbf\xe5\x8f\xaf\xe7\xae\x97\xef\xbc\x8c\xe4\xb9\x9f\xe4\xbc\x9a\xe5\x9b\xa0\xe4\xb8\xba\xe5\x90\x84\xe7\xa7\x8d\xe5\x8e\x9f\xe5\x9b\xa0\xe8\xaf\x86\xe5\x88\xab\xe9\x94\x99\xef\xbc\x8c\xe6\xaf\x94\xe5\xa6\x825\xe5\x92\x8c6\xe5\xb0\xb1\xe6\x98\xaf\xe9\x94\x99\xe8\xaf\xaf\xe7\x9a\x84\xe9\x87\x8d\xe7\x81\xbe\xe5\x8c\xba\xef\xbc\x8c\xe6\x9f\x90\xe4\xba\x9b\xe6\x95\xb0\xe5\xad\x97\xe8\xa2\xab\xe5\xb9\xb2\xe6\x89\xb0\xe7\xba\xbf\xe5\x88\x87\xe8\xbf\x87\xef\xbc\x8c\xe5\xaf\xbc\xe8\x87\xb4\xe8\x82\x89\xe7\x9c\xbc\xe9\x83\xbd\xe8\xbe\xa8\xe8\xae\xa4\xe4\xb8\x8d\xe6\xb8\x85\xe7\xad\x89\xe3\x80\x82\n\n## \xe6\xa8\xa1\xe5\x9e\x8b\xe7\xbb\x93\xe6\x9e\x9c\xe8\x9e\x8d\xe5\x90\x88\n\n\xe6\xa8\xa1\xe5\x9e\x8b\xe7\xbb\x93\xe6\x9e\x9c\xe8\x9e\x8d\xe5\x90\x88\xe7\x9a\x84\xe8\xa7\x84\xe5\x88\x99\xe5\xbe\x88\xe7\xae\x80\xe5\x8d\x95\xef\xbc\x8c\xe5\xaf\xb9\xe6\x89\x80\xe6\x9c\x89\xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x9c\xe8\xbf\x9b\xe8\xa1\x8c\xe6\xac\xa1\xe6\x95\xb0\xe7\xbb\x9f\xe8\xae\xa1\xef\xbc\x8c\xe5\x85\x88\xe5\x8e\xbb\xe6\x8e\x89\xe7\xa9\xba\xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x9c\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe5\x8f\x96\xe6\x9c\x80\xe9\xab\x98\xe6\xac\xa1\xe6\x95\xb0\xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x9c\xe5\x8d\xb3\xe5\x8f\xaf\xef\xbc\x8c\xe5\x85\xb6\xe5\xae\x9e\xe5\xb0\xb1\xe6\x98\xaf\xe7\xae\x80\xe5\x8d\x95\xe7\x9a\x84\xe6\x8a\x95\xe7\xa5\xa8\xe3\x80\x82\n\n```py\nimport glob\nimport numpy as np\nfrom collections import Counter\n\ndef fun(x):\n    c = Counter(x)\n    c[' '] = 0\n    return c.most_common()[0][0]\n\nss = [open(fname, 'r').read().split('\\n') for fname in glob.glob('result_model*.txt')]\ns = np.array(ss).T\nwith open('result.txt', 'w') as f:\n    f.write('\\n'.join(map(fun, s)))\n```\n\n\xe5\xb0\x86\xe4\xb8\x8a\xe9\x9d\xa2 loss \xe5\x9b\xbe\xe4\xb8\xad\xe7\x9a\x84\xe4\xb8\x89\xe4\xb8\xaa\xe6\xa8\xa1\xe5\x9e\x8b\xe7\xbb\x93\xe6\x9e\x9c\xe8\x9e\x8d\xe5\x90\x88\xe4\xbb\xa5\xe5\x90\x8e\xef\xbc\x8c\xe6\x9c\x80\xe5\x90\x8e\xe5\xbe\x97\xe5\x88\xb0\xe4\xba\x860.99868\xe7\x9a\x84\xe6\xb5\x8b\xe8\xaf\x95\xe9\x9b\x86\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xe3\x80\x82\n\n## \xe5\x85\xb6\xe4\xbb\x96\xe5\xb0\x9d\xe8\xaf\x95\n\n### \xe4\xb8\x8d\xe5\xae\x9a\xe9\x95\xbf\xe5\x9b\xbe\xe5\x83\x8f\xe8\xaf\x86\xe5\x88\xab\n\n\xe5\x9c\xa8\xe6\xaf\x94\xe8\xb5\x9b\xe5\x88\x9a\xe5\xbc\x80\xe5\xa7\x8b\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\xef\xbc\x8c\xe5\xb0\x9d\xe8\xaf\x95\xe8\xbf\x87\xe5\xb0\x86\xe5\x9b\xbe\xe5\x83\x8f\xe7\x9a\x84\xe5\xae\xbd\xe5\xba\xa6\xe8\xae\xbe\xe7\xbd\xae\xe4\xb8\xba None\xef\xbc\x8c\xe4\xb9\x9f\xe5\xb0\xb1\xe6\x98\xaf\xe4\xb8\x8d\xe5\xae\x9a\xe9\x95\xbf\xe7\x9a\x84\xe5\xae\xbd\xe5\xba\xa6\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf\xe7\x94\xb1\xe4\xba\x8e\xe6\x97\xa0\xe6\xb3\x95\xe8\xa7\xa3\xe5\x86\xb3 reshape \xe7\x9a\x84\xe9\x97\xae\xe9\xa2\x98\xef\xbc\x8c\xe8\xbf\x99\xe4\xb8\xaa\xe6\x96\xb9\xe6\xa1\x88\xe8\xa2\xab\xe5\x90\xa6\xe4\xba\x86\xe3\x80\x82\n\n### \xe5\x88\x86\xe5\x88\xab\xe8\xaf\x86\xe5\x88\xab\n\n\xe4\xb9\x8b\xe5\x89\x8d\xe5\xb0\x9d\xe8\xaf\x95\xe8\xbf\x87\xe5\x9b\xbe\xe5\x83\x8f\xe5\x88\x87\xe6\x88\x90\xe5\x87\xa0\xe5\x9d\x97\xef\xbc\x8c\xe5\x88\x86\xe5\x88\xab\xe8\xaf\x86\xe5\x88\xab\xef\xbc\x8c\xe8\xb5\x8b\xe5\x80\xbc\xe5\xbc\x8f\xe5\x92\x8c\xe8\xa1\xa8\xe8\xbe\xbe\xe5\xbc\x8f\xe7\x9a\x84\xe6\xa8\xa1\xe5\x9e\x8b\xe5\x88\x86\xe5\xbc\x80\xef\xbc\x8c\xe8\x80\x83\xe8\x99\x91\xe5\x88\xb0\xe7\x94\xb1\xe4\xba\x8e\xe6\x97\xa0\xe6\xb3\x95\xe5\xbe\x97\xe5\x88\xb0\xe4\xb8\x8a\xe4\xb8\x8b\xe6\x96\x87\xe7\x9a\x84\xe4\xbf\xa1\xe6\x81\xaf\xef\xbc\x8c\xe5\x8f\xaf\xe8\x83\xbd\xe4\xbc\x9a\xe4\xb8\xa2\xe5\xa4\xb1\xe4\xb8\x80\xe5\xae\x9a\xe7\x9a\x84\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xef\xbc\x8c\xe5\x81\x9a\xe5\x88\xb0\xe4\xb8\x80\xe5\x8d\x8a\xe5\x90\xa6\xe6\x8e\x89\xe4\xba\x86\xe8\xbf\x99\xe4\xb8\xaa\xe6\x96\xb9\xe6\xa1\x88\xe3\x80\x82\n\n### \xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\xe5\xb0\x9d\xe8\xaf\x95\n\n\xe6\x88\x91\xe4\xbb\xac\xe5\xb0\x9d\xe8\xaf\x95\xe8\xbf\x87\xe5\x86\x99\xe4\xb8\x80\xe4\xb8\xaa\xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf\xe7\x94\xb1\xe4\xba\x8e\xe5\x92\x8c\xe5\xae\x98\xe6\x96\xb9\xe7\xbb\x99\xe7\x9a\x84\xe5\x9b\xbe\xe5\x83\x8f\xe5\xb7\xae\xe5\xa4\xaa\xe8\xbf\x9c\xef\xbc\x8c\xe5\xb9\xb6\xe4\xb8\x94\xe5\xae\x9e\xe9\x99\x85\xe6\xb5\x8b\xe8\xaf\x95\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\xe8\xa6\x81\xe4\xb9\x88\xe6\x98\xaf\xe7\x94\x9f\xe6\x88\x90\xe7\x9a\x84\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xe9\xab\x98\xef\xbc\x8c\xe5\xae\x98\xe6\x96\xb9\xe7\x9a\x84\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xe4\xbd\x8e\xef\xbc\x8c\xe8\xa6\x81\xe4\xb9\x88\xe5\x8f\x8d\xe8\xbf\x87\xe6\x9d\xa5\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe6\xb2\xa1\xe6\x9c\x89\xe6\x8a\x95\xe5\x85\xa5\xe4\xbd\xbf\xe7\x94\xa8\xe3\x80\x82\n\n![](imgs/level2_generator2.png)\n\n\xe4\xb8\x8a\xe5\x9b\xbe\xe7\xac\xac\xe4\xb8\x80\xe4\xb8\xaa\xe6\x98\xaf\xe5\xae\x98\xe6\x96\xb9\xe7\x9a\x84\xe5\x9b\xbe\xe5\x83\x8f\xef\xbc\x8c\xe5\x90\x8e\xe9\x9d\xa2\xe4\xba\x94\xe4\xb8\xaa\xe6\x98\xaf\xe6\x88\x91\xe4\xbb\xac\xe7\x9a\x84\xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\xe7\x94\x9f\xe6\x88\x90\xe7\x9a\x84\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9c\x8b\xe5\x88\xb0\xe6\x88\x91\xe4\xbb\xac\xe7\x9a\x84\xe5\xad\x97\xe6\xb2\xa1\xe6\x9c\x89\xe5\xae\x98\xe6\x96\xb9\xe7\x9a\x84\xe7\xb4\xa7\xe5\x87\x91\xef\xbc\x8c\xe7\xad\x89\xe5\x8f\xb7\xe4\xb9\x9f\xe4\xb8\x8d\xe5\xa4\xaa\xe4\xb8\x80\xe6\xa0\xb7\xef\xbc\x8c\xe5\x88\x86\xe5\xbc\x8f\xe6\x88\x91\xe4\xbb\xac\xe7\x9a\x84\xe5\xad\x97\xe5\x8f\x88\xe5\xa4\xaa\xe7\xb4\xa7\xe5\x87\x91\xe4\xba\x86\xe3\x80\x82\n\n### \xe5\x85\xb6\xe4\xbb\x96 CNN \xe6\xa8\xa1\xe5\x9e\x8b\xe7\x9a\x84\xe5\xb0\x9d\xe8\xaf\x95\n\n\xe9\x99\xa4\xe4\xba\x86\xe8\x87\xaa\xe5\xb7\xb1\xe6\x90\xad\xe6\xa8\xa1\xe5\x9e\x8b\xef\xbc\x8c\xe6\x88\x91\xe8\xbf\x98\xe5\xb0\x9d\xe8\xaf\x95\xe8\xbf\x87\xe7\x94\xa8 ResNet\xef\xbc\x8cDenseNet \xe6\x9b\xbf\xe6\x8d\xa2 CNN\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe5\x8e\xbb\xe8\xae\xad\xe7\xbb\x83\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf\xe7\x94\xb1\xe4\xba\x8e\xe6\x9c\xac\xe8\xba\xab\xe8\xbf\x99\xe4\xba\x9b\xe6\xa8\xa1\xe5\x9e\x8b\xe5\xb0\xb1\xe5\xbe\x88\xe5\xa4\xa7\xef\xbc\x8c\xe8\xae\xad\xe7\xbb\x83\xe8\xb5\xb7\xe6\x9d\xa5\xe9\x80\x9f\xe5\xba\xa6\xe5\xbe\x88\xe6\x85\xa2\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe4\xb8\xbb\xe8\xa6\x81\xe9\x97\xae\xe9\xa2\x98\xe5\x8f\x88\xe4\xb8\x8d\xe5\x9c\xa8\xe6\xa8\xa1\xe5\x9e\x8b\xe4\xb8\x8d\xe5\xa4\x9f\xe5\xa4\x8d\xe6\x9d\x82\xef\xbc\x8c\xe5\x9b\xa0\xe4\xb8\xba\xe4\xbb\x8e\xe7\xbb\x98\xe5\x88\xb6\xe5\x87\xba\xe6\x9d\xa5\xe7\x9a\x84 loss \xe6\x9b\xb2\xe7\xba\xbf\xe6\x9d\xa5\xe7\x9c\x8b\xef\xbc\x8c\xe8\x99\xbd\xe7\x84\xb6\xe5\x89\x8d\xe9\x9d\xa2\xe7\x9a\x84 val_loss \xe4\xb8\x80\xe7\x9b\xb4\xe5\x9c\xa8\xe6\x8a\x96\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf\xe5\x9c\xa8\xe7\xac\xac50\xe4\xbb\xa3\xe5\xad\xa6\xe4\xb9\xa0\xe7\x8e\x87\xe4\xb8\x8b\xe9\x99\x8d\xe4\xbb\xa5\xe5\x90\x8e\xe5\xb0\xb1\xe9\x9d\x9e\xe5\xb8\xb8\xe5\xb9\xb3\xe7\xbc\x93\xe4\xba\x86\xef\xbc\x8c\xe8\xbf\x99\xe6\xa8\xa1\xe5\x9e\x8b\xe6\x98\xaf\xe6\xb2\xa1\xe6\x9c\x89\xe8\xbf\x87\xe6\x8b\x9f\xe5\x90\x88\xe7\x9a\x84\xef\xbc\x9a\n\n![](imgs/level2_loss.png)\n\n### \xe6\x9b\xbf\xe6\x8d\xa2 GRU \xe4\xb8\xba LSTM\n\n\xe5\x9c\xa8\xe6\xaf\x94\xe8\xb5\x9b\xe6\x9c\x80\xe5\x90\x8e\xe5\xb0\x9d\xe8\xaf\x95\xe8\xbf\x87\xe5\xb0\x86 GRU \xe6\x9b\xbf\xe6\x8d\xa2\xe4\xb8\xba LSTM\xef\xbc\x8c\xe5\xbe\x97\xe5\x88\xb0\xe7\x9a\x84\xe7\xbb\x93\xe6\x9e\x9c\xe6\x98\xaf\xe5\x8d\x81\xe5\x88\x86\xe7\xb1\xbb\xe4\xbc\xbc\xe7\x9a\x84\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf\xe6\x8f\x90\xe4\xba\xa4\xe4\xb8\x8a\xe5\x8e\xbb\xe4\xbb\xa5\xe5\x90\x8e\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\xe6\x9c\x89\xe8\xbd\xbb\xe5\xbe\xae\xe4\xb8\x8b\xe9\x99\x8d\xef\xbc\x88\xe5\xa4\x9a\xe9\x94\x99\xe4\xba\x86\xe5\x87\xa0\xe4\xb8\xaa\xe6\xa0\xb7\xe6\x9c\xac\xef\xbc\x8c\xe5\x8f\xaf\xe8\x83\xbd\xe6\x98\xaf\xe8\xbf\x90\xe6\xb0\x94\xe9\x97\xae\xe9\xa2\x98\xef\xbc\x89\xef\xbc\x8c\xe4\xb9\x8b\xe5\x89\x8d\xe5\x81\x9a\xe9\xaa\x8c\xe8\xaf\x81\xe7\xa0\x81\xe8\xaf\x86\xe5\x88\xab\xe7\x9a\x84\xe6\x97\xb6\xe5\x80\x99\xe4\xb9\x9f\xe6\x98\xaf\xe6\x9b\xbf\xe6\x8d\xa2\xe8\xbf\x87\xef\xbc\x8c\xe6\x95\x88\xe6\x9e\x9c\xe5\xb7\xae\xe4\xb8\x8d\xe5\xa4\x9a\xef\xbc\x8c\xe5\x9b\xa0\xe6\xad\xa4\xe6\xb2\xa1\xe6\x9c\x89\xe7\xbb\xa7\xe7\xbb\xad\xe5\xb0\x9d\xe8\xaf\x95\xe3\x80\x82\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8a\xe8\xbf\x99\xe4\xb8\xaa\xe5\xba\x8f\xe5\x88\x97\xe9\x95\xbf\xe5\xba\xa6\xe5\xb9\xb6\xe6\xb2\xa1\xe6\x9c\x89\xe5\xbe\x88\xe9\x95\xbf\xef\xbc\x8cGRU \xe5\x92\x8c LSTM \xe5\xbd\xb1\xe5\x93\x8d\xe4\xb8\x8d\xe5\xa4\xa7\xe3\x80\x82\n\n![](imgs/level2_loss_lstm.png)\n\n## \xe6\x80\xbb\xe7\xbb\x93\n\n### \xe5\xaf\xb9\xe9\xa1\xb9\xe7\x9b\xae\xe7\x9a\x84\xe6\x80\x9d\xe8\x80\x83\n\n\xe6\x9c\xac\xe9\xa1\xb9\xe7\x9b\xae\xe4\xb8\xad\xef\xbc\x8c\xe9\x9c\x80\xe8\xa6\x81\xe6\xb3\xa8\xe6\x84\x8f\xe4\xbb\xa5\xe4\xb8\x8b\xe5\x87\xa0\xe4\xb8\xaa\xe9\x87\x8d\xe8\xa6\x81\xe7\x9a\x84\xe7\x82\xb9\xef\xbc\x9a\n\n* \xe6\x95\xb0\xe6\x8d\xae\xe5\x87\x86\xe5\xa4\x87\xef\xbc\x9a\n * \xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x90\x8c\xe4\xbc\xa0\xe7\xbb\x9f\xe5\x9b\xbe\xe5\x83\x8f\xe5\xa4\x84\xe7\x90\x86\xe6\x8a\x80\xe6\x9c\xaf\xe7\xbb\x93\xe5\x90\x88\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe8\xbe\xbe\xe5\x88\xb0\xe6\x9b\xb4\xe5\xa5\xbd\xe7\x9a\x84\xe5\x87\x86\xe7\xa1\xae\xe7\x8e\x87\n * \xe6\x96\x87\xe6\x9c\xac\xe8\xaf\x86\xe5\x88\xab\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x9e\x84\xe9\x80\xa0\xe9\xaa\x8c\xe8\xaf\x81\xe7\xa0\x81\xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\xe8\xbf\x9b\xe8\xa1\x8c\xe6\x95\xb0\xe6\x8d\xae\xe5\xa2\x9e\xe5\xbc\xba\xef\xbc\x8c\xe5\xa2\x9e\xe5\x8a\xa0\xe8\xae\xad\xe7\xbb\x83\xe6\xa0\xb7\xe6\x9c\xac\xe6\x95\xb0\n* \xe6\xa8\xa1\xe5\x9e\x8b\xe4\xbc\x98\xe5\x8c\x96\xef\xbc\x9a\n * \xe5\xa6\x82\xe4\xbd\x95\xe6\xa0\xb9\xe6\x8d\xae\xe9\xa1\xb9\xe7\x9b\xae\xe7\x89\xb9\xe7\x82\xb9\xef\xbc\x8c\xe5\xaf\xb9\xe6\xa8\xa1\xe5\x9e\x8b\xe7\xbb\x93\xe6\x9e\x84\xe8\xbf\x9b\xe8\xa1\x8c\xe8\xb0\x83\xe6\x95\xb4\xef\xbc\x8c\xe5\xa6\x82CNN \xe9\x83\xa8\xe5\x88\x86\xe5\x87\x8f\xe5\xb0\x91\xe6\xb1\xa0\xe5\x8c\x96\xe5\xb1\x82\xe4\xbd\xbf\xe7\x94\xa8\xef\xbc\x8c\xe7\xad\x89\xe7\xad\x89\n * \xe4\xb8\xba\xe4\xba\x86\xe9\x98\xb2\xe6\xad\xa2\xe8\xbf\x87\xe6\x8b\x9f\xe5\x90\x88\xef\xbc\x8c\xe5\x9c\xa8\xe6\xa8\xa1\xe5\x9e\x8b\xe4\xb8\xad\xe5\xbc\x95\xe5\x85\xa5 L2 \xe6\xad\xa3\xe5\x88\x99\xe5\x8c\x96\n* \xe6\xa8\xa1\xe5\x9e\x8b\xe8\xae\xad\xe7\xbb\x83\xef\xbc\x9a\n * \xe4\xbd\xbf\xe7\x94\xa8\xe5\xad\xa6\xe4\xb9\xa0\xe7\x8e\x87\xe8\xa1\xb0\xe5\x87\x8f\xe7\xad\x96\xe7\x95\xa5\xef\xbc\x8c\xe8\xae\xad\xe7\xbb\x83\xe6\xa8\xa1\xe5\x9e\x8b\n * \xe5\xaf\xb9\xe5\xa4\x8d\xe6\x9d\x82\xe7\x9a\x84\xe6\xa8\xa1\xe5\x9e\x8b\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe5\xb0\x86\xe5\x90\x8c\xe4\xb8\x80\xe6\x89\xb9\xe6\xac\xa1\xe8\xbe\x93\xe5\x85\xa5\xe6\x95\xb0\xe6\x8d\xae\xe5\x88\x86\xe6\x91\x8a\xe7\xbb\x99\xe5\xa4\x9a\xe4\xb8\xaaGPU\xe8\xbf\x9b\xe8\xa1\x8c\xe8\xae\xa1\xe7\xae\x97\xe3\x80\x82\n\n### \xe6\x9c\x89\xe8\xb6\xa3\xe7\x9a\x84\xe6\xa0\xb7\xe6\x9c\xac\n\n#### 95170\n\n\xe5\x9c\xa8\xe6\xb5\x8b\xe8\xaf\x95\xe9\x9b\x86\xe9\x87\x8c\xe6\x9c\x89\xe4\xb8\x80\xe4\xb8\xaa 95170.png \xe6\xa0\xb7\xe6\x9c\xac\xe5\xbe\x88\xe9\x9a\xbe\xe5\x88\x86\xe5\x89\xb2\xef\xbc\x9a\n\n![](imgs/level2_95170.png)\n\n\xe5\x9b\xa0\xe4\xb8\xba\xe5\xae\x83\xe7\x9a\x84\xe5\xad\x97\xe5\xa4\xaa\xe6\xb5\x85\xe4\xba\x86\xef\xbc\x8c\xe5\xbe\x88\xe9\x9a\xbe\xe8\xa2\xab\xe5\x88\x87\xe5\x89\xb2\xe5\x87\xba\xe6\x9d\xa5\xef\xbc\x8c\xe8\x82\x89\xe7\x9c\xbc\xe4\xb9\x9f\xe5\x9f\xba\xe6\x9c\xac\xe6\x97\xa0\xe6\xb3\x95\xe5\x88\x86\xe8\xbe\xa8\xe3\x80\x82\n\n\xe5\xae\x83\xe7\x9a\x84\xe8\xa1\xa8\xe8\xbe\xbe\xe5\xbc\x8f\xe4\xb9\x9f\xe5\xbe\x88\xe9\x9a\xbe\xe5\x88\x87\xef\xbc\x8c\xe7\xa8\x8d\xe6\x9c\x89\xe4\xb8\x8d\xe6\x85\x8e\xe5\xb0\xb1\xe5\x88\x87\xe6\x8e\x89\xe4\xb8\xad\xe6\x96\x87\xe4\xba\x86\xef\xbc\x9a\n\n![](imgs/level2_95170_0.png)\n\n#### \xe5\xb9\xb2\xe6\x89\xb0\xe7\xba\xbf\n\n\xe5\x9c\xa8\xe6\x88\x91\xe4\xbb\xac\xe5\x88\x86\xe5\x89\xb2\xe7\x9a\x84\xe9\xaa\x8c\xe8\xaf\x81\xe9\x9b\x86\xe4\xb8\xad\xef\xbc\x8c\xe5\x8f\x91\xe7\x8e\xb0\xe4\xba\x86\xe8\xa2\xab\xe5\xb9\xb2\xe6\x89\xb0\xe7\xba\xbf\xe6\x88\x90\xe5\x8a\x9f\xe5\xb9\xb2\xe6\x89\xb0\xe7\x9a\x84\xe6\xa0\xb7\xe6\x9c\xac\xef\xbc\x9a\n\n![](imgs/level2_sample1.png)\n\n\xe6\x88\x91\xe4\xbb\xac\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9c\x8b\xe5\x88\xb0\xe7\xac\xac\xe4\xb8\x80\xe4\xb8\xaa 7 \xe5\x80\xbe\xe6\x96\x9c\xe4\xbb\xa5\xe5\x90\x8e\xe5\x8a\xa0\xe4\xb8\x8a\xe4\xb8\x80\xe6\x9d\xa1\xe5\xb9\xb2\xe6\x89\xb0\xe7\xba\xbf\xef\xbc\x8c\xe5\xbe\x88\xe5\xae\xb9\xe6\x98\x93\xe5\xb0\xb1\xe8\xa2\xab\xe6\xa8\xa1\xe5\x9e\x8b\xe8\xae\xa4\xe6\x88\x904\xe4\xba\x86\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf\xe4\xba\xba\xe7\xb1\xbb\xe5\x8d\xb4\xe4\xb8\x8d\xe4\xbc\x9a\xe7\x8a\xaf\xe8\xbf\x99\xe6\xa0\xb7\xe7\x9a\x84\xe9\x94\x99\xef\xbc\x8c\xe8\xbf\x99\xe4\xb9\x9f\xe6\x98\xaf CNN \xe5\x92\x8c \xe4\xba\xba\xe7\xb1\xbb\xe4\xb9\x8b\xe9\x97\xb4\xe7\x9a\x84\xe5\x8c\xba\xe5\x88\xab\xef\xbc\x8c\xe7\x9b\xae\xe6\xb5\x8b\xe5\x8d\xb7\xe7\xa7\xaf\xe5\xb1\x82\xe8\x87\xaa\xe5\x8a\xa8\xe6\x8a\x8a\xe5\x9b\xbe\xe5\x83\x8f\xe8\xbd\xac\xe7\x81\xb0\xe5\xba\xa6\xe5\x9b\xbe\xe4\xba\x86\xe3\x80\x82\n\n### \xe5\x8f\xaf\xe8\x83\xbd\xe7\x9a\x84\xe6\x94\xb9\xe8\xbf\x9b\n\n* \xe5\xb0\x86\xe7\x9c\x9f\xe6\xad\xa3\xe7\x9a\x84\xe7\x94\x9f\xe6\x88\x90\xe5\x99\xa8\xe5\x86\x99\xe5\x87\xba\xe6\x9d\xa5\xef\xbc\x8c\xe8\xbf\x99\xe6\xa0\xb7\xe5\xb0\xb1\xe5\x8f\xaf\xe4\xbb\xa5\xe8\x8e\xb7\xe5\x8f\x96\xe6\x97\xa0\xe7\xa9\xb7\xe6\x97\xa0\xe5\xb0\xbd\xe7\x9a\x84\xe6\xa0\xb7\xe6\x9c\xac\xef\xbc\x8c\xe8\x80\x8c\xe4\xb8\x8d\xe6\x98\xaf\xe4\xbd\xbf\xe7\x94\xa8\xe5\xb7\xb2\xe6\x9c\x89\xe7\x9a\x84\xe6\xa0\xb7\xe6\x9c\xac\xe8\xbf\x9b\xe8\xa1\x8c\xe6\x8b\xbc\xe6\x8e\xa5\xef\xbc\x8c\xe5\xaf\xb95\xe5\x92\x8c6\xe7\x9a\x84\xe8\xaf\x86\xe5\x88\xab\xef\xbc\x8c\xe4\xbb\xa5\xe5\x8f\x8a\xe5\xbe\x88\xe5\xa4\x9a\xe6\xa8\xaa\xe5\x90\x91\xe7\x9a\x84\xe4\xb8\xad\xe6\x96\x87\xe7\x9a\x84\xe8\xaf\x86\xe5\x88\xab\xef\xbc\x8c\xe4\xbc\x9a\xe6\x9c\x89\xe5\xbe\x88\xe5\xa5\xbd\xe7\x9a\x84\xe5\xb8\xae\xe5\x8a\xa9\xef\xbc\x8c\xe5\x9b\xa0\xe4\xb8\xba\xe5\xae\x83\xe4\xbb\xac\xe5\x9c\xa8\xe5\xb7\xb2\xe6\x9c\x89\xe6\xa0\xb7\xe6\x9c\xac\xe4\xb8\xad\xe5\x8d\x81\xe5\x88\x86\xe7\xbd\x95\xe8\xa7\x81\xef\xbc\x8c\xe4\xbb\xa5\xe8\x87\xb3\xe4\xba\x8e\xe6\xa8\xa1\xe5\x9e\x8b\xe6\x97\xa0\xe6\xb3\x95\xe5\x87\x86\xe7\xa1\xae\xe5\x88\x86\xe8\xbe\xa85\xe5\x92\x8c6\xef\xbc\x8c\xe4\xbb\xa5\xe5\x8f\x8a\xe6\xa8\xaa\xe5\x90\x91\xe7\x9a\x84\xe4\xb8\xad\xe6\x96\x87\n* \xe5\x81\x9a\xe6\x9b\xb4\xe5\xa5\xbd\xe7\x9a\x84\xe9\xa2\x84\xe5\xa4\x84\xe7\x90\x86\xef\xbc\x8c\xe6\xaf\x94\xe5\xa6\x82\xe5\xb9\xb2\xe6\x89\xb0\xe7\xba\xbf\xe5\x92\x8c\xe5\xad\x97\xe7\x9a\x84\xe9\xa2\x9c\xe8\x89\xb2\xe6\x98\xaf\xe4\xb8\x8d\xe5\x90\x8c\xe7\x9a\x84\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe9\x80\x9a\xe8\xbf\x87\xe7\xa8\x8b\xe5\xba\x8f\xe5\x8e\xbb\xe9\x99\xa4\xef\xbc\x8c\xe5\x88\x87\xe5\x9b\xbe\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x9b\xb4\xe7\xb2\xbe\xe5\x87\x86\xe4\xb8\x80\xe4\xba\x9b\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x9e\x81\xe5\xa4\xa7\xe6\x8f\x90\xe9\xab\x98\xe8\xae\xad\xe7\xbb\x83\xe9\x80\x9f\xe5\xba\xa6\n* \xe4\xbd\xbf\xe7\x94\xa8\xe5\x85\xb6\xe4\xbb\x96\xe7\x9a\x84\xe6\xa8\xa1\xe5\x9e\x8b\xef\xbc\x8c\xe6\xaf\x94\xe5\xa6\x82\xe7\xbe\xa4\xe9\x87\x8c\xe6\x9c\x89\xe4\xba\xba\xe6\x8f\x90\xe5\x88\xb0\xe7\x9a\x84 attention \xe6\xa8\xa1\xe5\x9e\x8b\xef\xbc\x8c\xe6\x88\x96\xe8\x80\x85\xe7\x9c\x8b\xe7\x9c\x8b OCR \xe7\x9b\xb8\xe5\x85\xb3\xe7\x9a\x84\xe8\xae\xba\xe6\x96\x87\xef\xbc\x8c\xe6\x89\xbe\xe6\x9b\xb4\xe5\xa4\x9a\xe7\x9a\x84\xe6\xa8\xa1\xe5\x9e\x8b\xef\xbc\x8c\xe8\x9e\x8d\xe5\x90\x88\xe7\xbb\x93\xe6\x9e\x9c\xef\xbc\x8c\xe6\xaf\x94\xe7\x9b\xb4\xe6\x8e\xa5\xe8\xb7\x91\xe7\xb1\xbb\xe4\xbc\xbc\xe7\xbb\x93\xe6\x9e\x84\xe7\x9a\x84\xe6\xa8\xa1\xe5\x9e\x8b\xe6\x9d\xa5\xe8\x9e\x8d\xe5\x90\x88\xe7\x9a\x84\xe6\x95\x88\xe6\x9e\x9c\xe4\xbc\x9a\xe5\xa5\xbd\xe5\xbe\x88\xe5\xa4\x9a\n"