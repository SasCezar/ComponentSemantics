b'.. image:: https://travis-ci.org/kynan/nbstripout.svg?branch=master\n    :target: https://travis-ci.org/kynan/nbstripout\n.. image:: https://img.shields.io/pypi/dm/nbstripout.svg\n    :target: https://pypi.python.org/pypi/nbstripout\n.. image:: https://img.shields.io/pypi/v/nbstripout.svg\n    :target: https://pypi.python.org/pypi/nbstripout\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg\n    :target: https://raw.githubusercontent.com/kynan/nbstripout/master/LICENSE.txt\n.. image:: https://img.shields.io/pypi/pyversions/nbstripout.svg\n    :target: https://pypi.python.org/pypi/nbstripout\n\nnbstripout: strip output from Jupyter and IPython notebooks\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOpens a notebook, strips its output, and writes the outputless version to the\noriginal file.\n\nUseful mainly as a git filter or pre-commit hook for users who don\'t want to\ntrack output in VCS.\n\nThis does mostly the same thing as the `Clear All Output` command in the\nnotebook UI.\n\nBased on https://gist.github.com/minrk/6176788.\n\nScreencast\n==========\n\nThis screencast demonstrates the use and working principles behind the\nnbstripout utility and how to use it as a Git filter:\n\n.. image:: http://i.imgur.com/7oQHuJ5.png\n    :target: https://www.youtube.com/watch?v=BEMP4xacrVc\n\nInstallation\n============\n\nYou can download and install the latest version of ``nbstripout`` from PyPI_,\nthe Python package index, as follows: ::\n\n    pip install --upgrade nbstripout\n\nWhen using the Anaconda_ Python distribution, install ``nbstripout`` via the\nconda_ package manager from conda-forge_: ::\n\n    conda install -c conda-forge nbstripout\n\nUsage\n=====\n\nStrip output from IPython / Jupyter notebook (modifies the files in-place): ::\n\n    nbstripout FILE.ipynb [FILE2.ipynb ...]\n\nForce processing of non ``.ipynb`` files: ::\n\n    nbstripout -f FILE.ipynb.bak\n\nWrite to stdout e.g. to use as part of a shell pipeline: ::\n\n    cat FILE.ipynb | nbstripout > OUT.ipynb\n\nor ::\n\n    nbstripout -t FILE.ipynb | other-command\n\nSet up the git filter and attributes as described in the manual installation\ninstructions below: ::\n\n    nbstripout --install\n\nSet up the git filter using ``.gitattributes`` ::\n\n    nbstripout --install --attributes .gitattributes\n\nSet up the git filter in your global ``~/.gitconfig`` ::\n\n    nbstripout --install --global\n\nRemove the git filter and attributes: ::\n\n    nbstripout --uninstall\n\nRemove the git filter from your global ``~/.gitconfig`` and attributes ::\n\n    nbstripout --uninstall --global\n\nRemove the git filter and attributes from ``.gitattributes``: ::\n\n    nbstripout --uninstall --attributes .gitattributes\n\nCheck if ``nbstripout`` is installed in the current repository\n(exits with code 0 if installed, 1 otherwise): ::\n\n    nbstripout --is-installed\n\nPrint status of ``nbstripout`` installation in the current repository and\nconfiguration summary of filter and attributes if installed\n(exits with code 0 if installed, 1 otherwise): ::\n\n    nbstripout --status\n\nPrint the version: ::\n\n    nbstripout --version\n\nShow this help page: ::\n\n    nbstripout --help\n\nConfiguration files\n+++++++++++++++++++\n\nThe following table shows in which files the ``nbstripout`` filter and\nattribute configuration is written to for given extra flags to ``--install``\nand ``--uninstall``:\n\n======================================== ================ ========================\nflags                                    filters          attributes\n======================================== ================ ========================\nnone                                     ``.git/config``  ``.git/info/attributes``\n``--global``                             ``~/.gitconfig`` ``.git/info/attributes``\n``--attributes=.gitattributes``          ``.git/config``  ``.gitattributes``\n``--global --attributes=.gitattributes`` ``~/.gitconfig`` ``.gitattributes``\n======================================== ================ ========================\n\nInstall globally\n++++++++++++++++\n\nUsually, ``nbstripout`` is installed per repository so you can choose where to\nuse it or not. You can choose to set the attributes in ``.gitattributes`` and\ncommit this file to your repository, however there is no way to have git set up\nthe filters automatically when someone clones a repository. This is by design,\nto prevent you from executing arbitrary and potentially malicious code when\ncloning a repository.\n\nTo install ``nbstripout`` for all your repositories such that you no longer\nneed to run the installation once per repository, install as follows: ::\n\n    mkdir -p ~/.config/git  # This folder may not exist\n    nbstripout --install --global --attributes=~/.config/git/attributes\n\nThis will set up the filters and diff driver in your ``~/.gitconfig`` and\ninstruct git to apply them to any ``.ipynb`` file in any repository.\n\nNote that you need to uninstall with the same flags: ::\n\n    nbstripout --uninstall --global --attributes=~/.config/git/attributes\n\nApply retroactively\n+++++++++++++++++++\n\n``nbstripout`` can be used to rewrite an existing Git repository using\n``git filter-branch`` to strip output from existing notebooks. This invocation\nuses ``--index-filter`` and operates on all ipynb-files in the repo: ::\n\n    git filter-branch -f --index-filter \'\n        git checkout -- :*.ipynb\n        find . -name "*.ipynb" -exec nbstripout "{}" +\n        git add . --ignore-removal\n    \'\n\nIf the repository is large and the notebooks are in a subdirectory it will run\nfaster with ``git checkout -- :<subdir>/*.ipynb``. You will get a warning for\ncommits that do not contain any notebooks, which can be suppressed by piping\nstderr to ``/dev/null``.\n\nThis is a potentially slower but simpler invocation using ``--tree-filter``: ::\n\n    git filter-branch -f --tree-filter \'find . -name "*.ipynb" -exec nbstripout "{}" +\'\n\nKeeping some output\n+++++++++++++++++++\n\nDo not strip the execution count/prompt number ::\n\n    nbstripout --keep-count\n\nDo not strip the output ::\n\n    nbstripout --keep-output\n\nTo mark special cells so that the output is not striped, set the\n``"keep_output": true`` metadata on the cell.  To do this, select the\n"Edit Metadata" Cell Toolbar, and then use the "Edit Metadata" button\non the desired cell to enter something like::\n\n    {\n      "keep_output": true,\n    }\n\nAnother use-case is to preserve initialization cells that might load\ncustomized CSS etc. critical for the display of the notebook.  To\nsupport this, we also keep output for cells with::\n\n    {\n      "init_cell": true,\n    }\n\nThis is the same metadata used by the `init_cell nbextension`__.\n\n__ https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tree/master/src/jupyter_contrib_nbextensions/nbextensions/init_cell\n\nStripping metadata\n++++++++++++++++++\n\nThis is configurable via ``git config (--global) filter.nbstripout.extrakeys``.\nAn example would be: ::\n\n    git config --global filter.nbstripout.extrakeys \'\n      metadata.celltoolbar metadata.kernel_spec.display_name\n      metadata.kernel_spec.name metadata.language_info.codemirror_mode.version\n      metadata.language_info.pygments_lexer metadata.language_info.version\n      metadata.toc metadata.notify_time metadata.varInspector\n      cell.metadata.heading_collapsed cell.metadata.hidden\n      cell.metadata.code_folding cell.metadata.tags cell.metadata.init_cell\'\n\nExcluding files and folders\n+++++++++++++++++++++++++++\n\nTo exclude specific files or folders from being processed by the ``nbstripout``\nfilters, add the path and exception to your filter specifications\ndefined in ``.git/info/attributes`` or ``.gitattributes``: ::\n\n    docs/** filter= diff=\n\nThis will disable ``nbstripout`` for any file in the ``docs`` directory.: ::\n\n    notebooks/Analysis.ipynb filter= diff=\n\nThis will disable ``nbstripout`` for the file ``Analysis.ipynb`` located in\nthe ``notebooks`` directory.\n\nTo check which attributes a given file has with the current config, run ::\n\n    git check-attr -a -- path/to/file\n\nFor a file to which the filter applies you will see the following: ::\n\n    $ git check-attr -a -- foo.ipynb\n    foo.ipynb: diff: ipynb\n    foo.ipynb: filter: nbstripout\n\nFor a file in your excluded folder you will see the following: ::\n\n    $ git check-attr -a -- docs/foo.ipynb\n    foo.ipynb: diff:\n    foo.ipynb: filter:\n\nManual filter installation\n==========================\n\nSet up a git filter and diff driver using nbstripout as follows: ::\n\n    git config filter.nbstripout.clean \'/path/to/nbstripout\'\n    git config filter.nbstripout.smudge cat\n    git config filter.nbstripout.required true\n    git config diff.ipynb.textconv \'/path/to/nbstripout -t\'\n\nThis will add a section to the ``.git/config`` file of the current repository.\n\nIf you want the filter to be installed globally for your user, add the\n``--global`` flag to the ``git config`` invocations above to have the\nconfiguration written to your ``~/.gitconfig`` and apply to all repositories.\n\nCreate a file ``.gitattributes`` (if you want it versioned with the repository)\nor ``.git/info/attributes`` (to apply it only to the current repository) with\nthe following content: ::\n\n    *.ipynb filter=nbstripout\n    *.ipynb diff=ipynb\n\nThis instructs git to use the filter named _nbstripout_ and the diff driver\nnamed _ipynb_ set up in the git config above for every ``.ipynb`` file in the\nrepository.\n\nIf you want the attributes be set for ``.ipynb`` files in any of your git\nrepositories, add those two lines to ``~/.config/git/attributes``. Note that\nthis file and the ``~/.config/git`` directory may not exist.\n\nUsing ``nbstripout`` as a pre-commit hook\n=========================================\n\n`pre-commit`_ is a framework for managing git `pre-commit hooks`_.\n\nOnce you have `pre-commit`_ installed, add the follwong to the\n``.pre-commit-config.yaml`` in your repository: ::\n\n    repos:\n    - repo: https://github.com/kynan/nbstripout\n      rev: master\n      hooks:\n        - id: nbstripout\n          files: ".ipynb"\n\nThen run ``pre-commit install`` to activate the hook.\n\n.. warning::\n  In this mode, ``nbstripout`` is used as a git hook to strip any ``.ipynb``\n  files before committing. This also modifies your working copy!\n\n  In its regular mode, ``nbstripout`` acts as a filter and only modifies what\n  git gets to see for committing or diffing. The working copy stays intact.\n\n.. _pre-commit: https://pre-commit.com\n.. _pre-commit hooks: https://git-scm.com/docs/githooks\n\nTroubleshooting\n===============\n\nShow files processed by nbstripout filter\n+++++++++++++++++++++++++++++++++++++++++\n\nGit has `no builtin support <https://stackoverflow.com/a/52065333/396967>`_\nfor listing files a clean or smudge filter operates on. As a workaround,\nchange the setup of your filter in ``.git/config`` or ``~/.gitconfig`` as\nfollows to see the filenames either filter operates on: ::\n\n    [filter "nbstripout"]\n        clean  = "f() { echo >&2 \\"clean: nbstripout $1\\"; nbstripout; }; f %f"\n        smudge = "f() { echo >&2 \\"smudge: cat $1\\"; cat; }; f %f"\n        required = true\n\nMercurial usage\n===============\n\nMercurial does not have the equivalent of smudge filters.  One can use\nan encode/decode hook but this has some issues.  An alternative\nsolution is to provide a set of commands that first run ``nbstripout``,\nthen perform these operations. This is the approach of the `mmf-setup`_\npackage.\n\n.. _mmf-setup: http://bitbucket.org/mforbes/mmf_setup\n.. _Anaconda: https://www.continuum.io/anaconda-overview\n.. _conda: http://conda.pydata.org\n.. _conda-forge: http://conda-forge.github.io\n.. _PyPI: https://pypi.io\n'