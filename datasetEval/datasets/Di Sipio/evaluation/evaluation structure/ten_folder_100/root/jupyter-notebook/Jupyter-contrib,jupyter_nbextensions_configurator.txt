b'Jupyter Nbextensions Configurator\n=================================\n\n[![Join the chat at https://gitter.im/jupyter-contrib/jupyter_nbextensions_configurator](https://img.shields.io/gitter/room/jupyter-contrib/jupyter_nbextensions_configurator.svg?maxAge=3600)](https://gitter.im/jupyter-contrib/jupyter_nbextensions_configurator?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![GitHub issues](https://img.shields.io/github/issues/jupyter-contrib/jupyter_nbextensions_configurator.svg?maxAge=3600)](https://github.com/jupyter-contrib/jupyter_nbextensions_configurator/issues)\n<br/>\n[![Travis-CI Build Status](https://img.shields.io/travis/Jupyter-contrib/jupyter_nbextensions_configurator.svg?maxAge=3600&label=Travis)](https://travis-ci.org/Jupyter-contrib/jupyter_nbextensions_configurator)\n[![Coveralls python test coverage](https://img.shields.io/coveralls/Jupyter-contrib/jupyter_nbextensions_configurator/master.svg?maxAge=3600&label=Coveralls)](https://coveralls.io/github/Jupyter-contrib/jupyter_nbextensions_configurator)\n[![Codecov python test coverage](https://img.shields.io/codecov/c/github/Jupyter-contrib/jupyter_nbextensions_configurator/master.svg?maxAge=3600&label=Codecov)](https://codecov.io/gh/Jupyter-contrib/jupyter_nbextensions_configurator)\n<br/>\n[![GitHub tag](https://img.shields.io/github/tag/jupyter-contrib/jupyter_nbextensions_configurator.svg?maxAge=3600&label=GitHub)](https://github.com/jupyter-contrib/jupyter_nbextensions_configurator)\n[![PyPI](https://img.shields.io/pypi/v/jupyter_nbextensions_configurator.svg?maxAge=3600)](https://pypi.python.org/pypi/jupyter_nbextensions_configurator)\n[![Conda forge](https://anaconda.org/conda-forge/jupyter_nbextensions_configurator/badges/version.svg)](https://anaconda.org/conda-forge/jupyter_nbextensions_configurator)\n\n\nA server extension for [jupyter notebook](https://github.com/jupyter/notebook)\nwhich provides configuration interfaces for notebook extensions (nbextensions).\n\nThe `jupyter_nbextensions_configurator` jupyter server extension provides\ngraphical user interfaces for configuring which nbextensions are enabled\n(load automatically for every notebook).\nIn addition, for nbextensions which include an appropriate yaml descriptor file\n(see below), the interface also renders their markdown readme files, and\nprovides controls to configure the nbextensions\' options.\n\nThis project was spun out of work from\n[`ipython-contrib/IPython-notebook-extensions`][contrib repo url].\n\n[contrib repo url]: https://github.com/ipython-contrib/IPython-notebook-extensions\n\n\nInstallation\n------------\n\nFor those using conda, you can now get `jupyter_nbextensions_configurator` from\nthe excellent [conda-forge](https://conda-forge.github.io/)\n[channel](https://anaconda.org/conda-forge) in a single command:\n\n    conda install -c conda-forge jupyter_nbextensions_configurator\n\nFor those not using conda, the installation has two steps:\n\n 1. Installing the pip package. This should be as simple as\n\n        pip install jupyter_nbextensions_configurator\n\n 2. Configuring the notebook server to load the server extension. A `jupyter`\n    subcommand is provided for this. You can enable the serverextension and the\n    configurator nbextensions listed below for the current user with\n\n        jupyter nbextensions_configurator enable --user\n\n    The command accepts the same flags as the `jupyter serverextension` command\n    provided by notebook versions >= 4.2, including `--system` to enable in\n    system-wide config (the default), or `--sys-prefix` to enable in config\n    files inside python\'s `sys.prefix`, such as for a virtual environment.\n    The provided `jupyter nbextensions_configurator` command can also be used\n    to `disable`.\n\n\nOnce installed, you\'ll need to restart the notebook server. Once restarted, you\nshould be able to find the configurator user interfaces as described below.\n\n\nUsage\n-----\n\nOnce `jupyter_nbextensions_configurator` is installed and enabled, and your\nnotebook server has been restarted, you should be able to find the nbextensions\nconfiguration interface at the url `<base_url>nbextensions`, where\n`<base_url>` is described below (for simple installs, it\'s usually just `/`, so\nthe UI is at `/nbextensions`).\n\n![configurator UI page](src/jupyter_nbextensions_configurator/static/nbextensions_configurator/icon.png)\n\n\n### base_url\n\nFor most single-user notebook servers, the dashboard (the file-browser or\n\'tree\' view) is at\n\n    http://localhost:8888/tree\n\nSo the `base_url` is the part between the host (`http://localhost:8888`) and\n`tree`, so in this case it\'s the default value of just `/`.\nIf you have a non-default base url (such as with JupyterHub), you\'ll need to\nprepend it to the url. So, if your dashboard is at\n\n    http://localhost:8888/custom/base/url/tree\n\nthen you\'ll find the configurator UI page at\n\n    http://localhost:8888/custom/base/url/nbextensions\n\n\n### tree tab\n\nIn addition to the main standalone page, the nbextensions configurator\ninterface is also available as a tab on the dashboard:\n\n<img alt="configurator UI in a dashboard tab" src="src/jupyter_nbextensions_configurator/static/nbextensions_configurator/tree_tab/icon.png" width="440">\n\nThe dashboard tab is provided via an nbextension called\n"Nbextensions dashboard tab", with requirejs uri\n`nbextensions_configurator/tree_tab/main`.\nSince version [0.2.0](#020), this nbextension is enabled by default on enabling\nthe `jupyter_nbextensions_configurator` serverextension, but it can be disabled\nas with any other nbextension if you don\'t want to use it.\n\n\n### edit menu item\n\n`jupyter_nbextensions_configurator` provides a second small nbextension, which\nsimply adds an item to the notebook-view edit menu, which links to the\nconfigurator UI page:\n\n<img alt="configurator edit menu item" src="src/jupyter_nbextensions_configurator/static/nbextensions_configurator/config_menu/icon.png" width="600">\n\nSimilarly to the tree tab nbextension detailed above, since version\n[0.2.0](#020), the edit menu item nbextension is enabled by default when\nenabling the main `jupyter_nbextensions_configurator` serverextension, but can\nbe disabled at any time in the same way as other nbextensions.\n\n\nYAML file format\n----------------\n\nYou don\'t need to know about the yaml files in order simply to use\n`jupyter_nbextensions_configurator`.\nAn nbextension is \'found\' by the `jupyter_nbextensions_configurator` server\nextension when a special yaml file describing the nbextension and its options\nis found in the notebook server\'s `nbextensions_path`.\nThe yaml file can have any name with the file extension `.yaml` or `.yml`, and\ndescribes the nbextension and its options to\n`jupyter_nbextensions_configurator`.\n\nThe case-sensitive keys in the yaml file are as follows:\n\n * `Type`,            (**required**) a case-sensitive identifier, must be `IPython Notebook Extension` or `Jupyter Notebook Extension`\n * `Main`,            (**required**) the main javascript file that is loaded, typically `main.js`\n * `Name`,            the name of the nbextension\n * `Section`,         which view the nbextension should be loaded in (defaults to `notebook`, but can alternatively be `tree`, `edit`, or to load in all views, `common`).\n * `Description`,     a short explanation of the nbextension\n * `Link`,            a URL for more documentation. If this is a relative url with a `.md` file extension (recommended!), the markdown readme is rendered in the configurator UI.\n * `Icon`,            a URL for a small icon for the configurator UI (rendered 120px high, should preferably end up 400px wide. Recall HDPI displays may benefit from a 2x resolution icon).\n * `Compatibility`,   Jupyter major version compatibility, e.g. `3.x` or `4.x`, `3.x 4.x`, `3.x, 4.x, 5.x`\n * `Parameters`,      an optional list of configuration parameters. Each item is a dictionary with (some of) the following keys\n   * `name`,          (**required**) the name used to store the configuration variable in the config json. It follows a json-like structure, so you can use `.` to separate sub-objects e.g. `myextension.buttons_to_add.play`.\n   * `description`,   a description of the configuration parameter\n   * `default`,       a default value used to populate the tag in the configurator UI, if no value is found in config. Note that this is more of a hint to the user than anything functional - since it\'s only set in the yaml file, the javascript implementing the nbextension in question might actually use a different default, depending on the implementation.\n   * `input_type`,    controls the type of html tag used to render the parameter in the configurator UI. Valid values include `text`, `textarea`, `checkbox`, [html5 input tags such as `number`, `url`, `color`, ...], plus a final type of `list`\n   * `list_element`,  a dictionary with the same `default` and `input_type` keys as a `Parameters` entry, used to render each element of the list for parameters with input_type `list`\n   * finally, extras such as `min`, `step` and `max` may be used by `number` tags for validation\n* `tags`,             a list of string tags describing the nbextension, to allow for filtering\n\nExample:\n\n```yaml\nType: Jupyter Notebook Extension\nName: Limit Output\nSection: notebook\nDescription: This nbextension limits the number of characters that can be printed below a codecell\ntags:\n- usability\n- limit\n- output\nLink: readme.md\nIcon: icon.png\nMain: main.js\nCompatibility: 4.x\nParameters:\n- name: limit_output\n  description: Number of characters to limit output to\n  input_type: number\n  default: 10000\n  step: 1\n  min: 0\n- name: limit_output_message\n  description: Message to append when output is limited\n  input_type: text\n  default: \'**OUTPUT MUTED**\'\n```\n\n\nTroubleshooting\n---------------\n\nIf you encounter problems with this server extension, you can:\n * check the [issues page][this repo issues] for the [github repository][this repo].\n   If you can\'t find one that fits your problem, please create a new one!\n * ask in the project\'s [gitter chatroom][gitter url]\n\nFor debugging, useful information can (sometimes) be found by:\n\n * Checking for error messages in the browser\'s [JavaScript console][javascript console howto].\n * Checking for messages in the notebook server\'s logs. This is particularly\n   useful when the server is run with the `--debug` flag, to get as many logs\n   as possible.\n\n[this repo]: https://github.com/jupyter-contrib/jupyter_nbextensions_configurator\n[this repo issues]: https://github.com/jupyter-contrib/jupyter_nbextensions_configurator/issues\n[gitter url]: https://gitter.im/jupyter-contrib/jupyter_nbextensions_configurator\n[javascript console howto]: webmasters.stackexchange.com/questions/8525/how-to-open-the-javascript-console-in-different-browsers\n\n\nChanges\n=======\n\n0.4.0\n-----\n * Show error messages when failing to load a config file, allowing remaining\n   files to load ok.\n * use pip for conda recipe installation, instead of `python setup.py`\n\n0.3.0\n-----\n * don\'t use `notebook.base.handlers.json_errors`\n   for notebook >= 5.2.0, as it\'s deprecated.\n * auto-pad 3-char colour codes (e.g. `#BEC`) to 6-char, as otherwise the\n   HTML5 controls don\'t initialize correctly.\n\n0.2.8\n-----\n * Split specification checking into a separate function\n * Fixes for bugs in notebook 5.1.0\n\n0.2.7\n-----\n * Require newer version of\n   [`jupyter_contrib_core`](https://github.com/jupyter-contrib/jupyter_contrib_core)\n   for notebook 5 compatibility.\n\n0.2.6\n-----\n * Require newer version of\n   [`jupyter_contrib_core`](https://github.com/jupyter-contrib/jupyter_contrib_core)\n   in order to ensure setting the correct config key when enabling.\n\n0.2.5\n-----\n * Deduplicate entries in `nbextensions_path` before checking them, to prevent\n   displaying duplictae entries for nbextesions in the same place. Also add\n   tests for deduplication.\n * Open yaml files using utf-8 encoding, allowing non-ascii characters,\n   courtesy of [@haobibo](https://github.com/haobibo).\n * List configurator\'s own nbextensions as compatible with notebook 5.x\n * CI updates for 5.x testing, and working around a conda bug.\n\n0.2.4\n-----\n * Allow filtering based on name and description text as well as section & tags\n * Add a clear-filter control\n * Allow unconfigurable nbextensions to be \'forgotten\'\n   (enabled/disabled status erased completely)\n * Allow refreshing the nbextensions list, see for details\n   [#29](https://github.com/Jupyter-contrib/jupyter_nbextensions_configurator/issues/29)\n * Add tooltip for parameter reset, as requested in\n   [#29](https://github.com/Jupyter-contrib/jupyter_nbextensions_configurator/issues/29)\n * Add IPython CodeMirror mode to markdown renderer\n * Don\'t embed nbextensions data into the standalone `/nbextensions` page. This\n   allows us to serve the page quicker, then get nbextensions data (slow\n   request) from the json api.\n * Improved log messages, with prefixes, both on client & server side\n * Fix bug preventing matching first tag\n * Fix bug preventing render of markdown containing unknown CodeMirror mode(s)\n * Fix minor css margin issue with visible/not visible compatibility\n * Make tests more robust against misleading timing-based failures\n * Update jupyterhub test spawner to match hub version 0.7 api\n * Update CI to use selenium 3, allowing us to test on recent firefox versions\n * Add yet another new coverage argument for CI\n\n0.2.3\n-----\n* On the dashboard, select the configurator tree tab automatically if the\n  appropriate URL hash is present\n* Add filtering of visible nbextensions by names, tags and sections\n* Add jupyterhub-based tests, to hopefully catch some issues relating to the\n  jupyterhub `SingleUserServer`, like\n  [#11](https://github.com/Jupyter-contrib/jupyter_nbextensions_configurator/issues/11)\n  and\n  [#14](https://github.com/Jupyter-contrib/jupyter_nbextensions_configurator/issues/14)\n  in future\n* README updates\n* Bugfix for Enable/Disable application help strings, which both started with\n  `Enable` :blush:\n\n0.2.2\n-----\n* Bugfix courtesy of [@bielern](https://github.com/bielern). Fix for a bug\n  which was preventing the serverextension from loading from a\n  `jupyterhub`-spawned singleuser notebook server\n* Alterations to the in-repo conda recipe, to use git versioning & build number\n\n0.2.1\n-----\n* Fix bug introduced in bc2f8b821b2164823cbba4e85d5e921dfd484b11, which\n  prevented disabling nbextensions when using notebook versions < 4.2.\n  Add test to ensure that a disabled nbextension\'s js doesn\'t load, rather than\n  just checking json config file.\n\n0.2.0\n-----\n* Use `jupyter_contrib_core` package for notebook compatibility shims and some\n  testing utilities.\n* Automatically enable configurator\'s own nbextensions when running the app.\n* Replace references to CI and other services attached to `jcb91` in favour of\n  [`Jupyter-contrib` repository][this repo] versions, where possible.\n\n0.1.1\n-----\nRemove tests dependency on `ipython_genutils`\n\n0.1.0\n-----\nFirst public release!\n'