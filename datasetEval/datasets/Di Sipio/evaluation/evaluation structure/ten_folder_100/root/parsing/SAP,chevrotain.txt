b"[![Join the chat at https://gitter.im/chevrotain-parser/Lobby](https://badges.gitter.im/chevrotain-parser/Lobby.svg)](https://gitter.im/chevrotain-parser/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![npm](https://img.shields.io/npm/v/chevrotain.svg)](https://www.npmjs.com/package/chevrotain)\n[![CircleCI](https://circleci.com/gh/SAP/chevrotain.svg?style=svg)](https://circleci.com/gh/SAP/chevrotain)\n[![styled with prettier](https://img.shields.io/badge/styled_with-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![Greenkeeper badge](https://badges.greenkeeper.io/SAP/chevrotain.svg)](https://greenkeeper.io/)\n\n# Chevrotain\n\n## Introduction\n\nChevrotain is a [**blazing fast**][benchmark] and [**feature rich**](http://sap.github.io/chevrotain/docs/features/blazing_fast.html) **Parser Building Toolkit** for **JavaScript**.\nIt can be used to build parsers/compilers/interpreters for various use cases ranging from simple configuration files,\nto full fledged programing languages.\n\nA more in depth description of Chevrotain can be found in this great article on: [Parsing in JavaScript: Tools and Libraries](https://tomassetti.me/parsing-in-javascript/#chevrotain).\n\nIt is important to note that Chevrotain is **NOT** a parser generator. It solves the same kind of problems as a parser generator, just **without any code generation**. Chevrotain Grammars are pure code which can be created/debugged/edited\nas any other pure code without requiring any new tools or processes.\n\n## TLDR\n\n-   [**Online Playground**](https://sap.github.io/chevrotain/playground/)\n-   **[Getting Started Tutorial](https://sap.github.io/chevrotain/docs/tutorial/step0_introduction.html)**\n-   [**Performance benchmark**][benchmark]\n\n## Installation\n\n-   **npm**: `npm install chevrotain`\n-   **Browser**:\n    The npm package contains Chevrotain as concatenated and minified files ready for use in a browser.\n    These can also be accessed directly via [UNPKG](https://unpkg.com/) in a script tag.\n    -   Latest:\n        -   `https://unpkg.com/chevrotain/lib/chevrotain.js`\n        -   `https://unpkg.com/chevrotain/lib/chevrotain.min.js`\n    -   Explicit version number:\n        -   `https://unpkg.com/chevrotain@6.5.0/lib/chevrotain.js`\n        -   `https://unpkg.com/chevrotain@6.5.0/lib/chevrotain.min.js`\n\n## Documentation & Resources\n\n-   **[Getting Started Tutorial](https://sap.github.io/chevrotain/docs/tutorial/step1_lexing.html)**.\n\n-   **[Sample Grammars](https://github.com/SAP/chevrotain/blob/master/examples/grammars)**.\n\n-   **[FAQ](https://sap.github.io/chevrotain/docs/FAQ.html).**\n\n-   **[Other Examples](https://github.com/SAP/chevrotain/blob/master/examples)**.\n\n-   **[HTML API docs](https://sap.github.io/chevrotain/documentation).**\n\n    -   [The Parsing DSL Docs](https://sap.github.io/chevrotain/documentation/6_5_0/classes/parser.html#at_least_one).\n\n## Dependencies\n\nThere is a single dependency to [regexp-to-ast](https://github.com/bd82/regexp-to-ast) library.\nThis dependency is included in the bundled artifacts, for ease of consumption in browsers.\n\n## Compatibility\n\nChevrotain runs on any modern JavaScript ES5.1 runtime.\nThat includes any modern nodejs version, modern browsers and even IE11.\n\n-   Uses [UMD](https://github.com/umdjs/umd) to work with common module loaders (browser global / amd / commonjs).\n\n## Contributions\n\nContributions are **greatly** appreciated.\nSee [CONTRIBUTING.md](./CONTRIBUTING.md) for details.\n\n## Where used\n\nSome interesting samples:\n\n-   [Prettier Java Plugin Parser][sample_prettier_java]\n-   [JHipster Domain Language][sample_jhipster]\n-   [Metabase BI expression Parser][sample_metabase].\n-   [Three.js VRML Parser][sample_threejs]\n-   [Argdown Parser][sample_argdown]\n-   [Stardog Union Parsers (GraphQL/SPARQL/and more...)][sample_stardog]\n-   [Bombadil Toml Parser][sample_bombadil]\n-   [Eve Interactive Programing Language Parser][sample_eve].\n-   [BioModelAnalyzer's ChatBot Parser][sample_biomodel].\n\n[benchmark]: https://sap.github.io/chevrotain/performance/\n[sample_metabase]: https://github.com/metabase/metabase/blob/136dfb17954f4e4302b3bf2fee99ff7b7b12fd7c/frontend/src/metabase/lib/expressions/parser.js\n[sample_jhipster]: https://github.com/jhipster/jhipster-core/blob/master/lib/dsl/jdl_parser.js\n[sample_eve]: https://github.com/witheve/Eve/blob/master/src/parser/parser.ts\n[sample_biomodel]: https://github.com/Microsoft/BioModelAnalyzer/blob/master/ChatBot/src/NLParser/NLParser.ts\n[sample_bombadil]: https://github.com/sgarciac/bombadil/blob/master/src/parser.ts\n[sample_argdown]: https://github.com/christianvoigt/argdown/blob/master/packages/argdown-core/src/parser.ts\n[sample_threejs]: https://github.com/mrdoob/three.js/blob/dev/examples/js/loaders/VRMLLoader.js\n[sample_prettier_java]: https://github.com/jhipster/prettier-java/tree/master/packages/java-parser/src/productions\n[sample_stardog]: https://github.com/stardog-union/millan/tree/master/src\n[languages]: https://github.com/SAP/chevrotain/tree/master/examples/implementation_languages\n[backtracking]: https://github.com/SAP/chevrotain/blob/master/examples/parser/backtracking/backtracking.js\n[custom_apis]: https://sap.github.io/chevrotain/docs/guide/custom_apis.html\n"