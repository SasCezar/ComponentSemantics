b'# phply\n\nphply is a parser for the PHP programming language written using PLY, a\nLex/YACC-style parser generator toolkit for Python.\n\n## Why?\n\nGood question. Because I\'m crazy. Because it seemed possible.\n\nThings I\'m interested in doing with it:\n\n* Converting PHP code to Python\n* Running PHP templates in a Python environment\n* Learning more about parsing "industrial" languages, warts and all\n\n## What does it stand for?\n\n* phply -> PHP PLY\n* phply -> PHP Hypertext Preprocessor Python Lex YACC\n* phply -> PHP Hypertext Preprocessor Hypertext Preprocessor Python Lex Yet Another Compiler Compiler\n* (... to be completed ...)\n\n## How do you pronounce it?\n\nIf you\'re conservative, it\'s pronounced "pee aich ply". If you\'re liberal,\nit\'s "fiply". And if you\'re anarchist, pronounce it however you want. Who am I\nto tell you what to do?\n\n## What\'s working?\n\n* Lexer matching the standard PHP lexer token-for-token\n* Parser and abstract syntax tree for most of the PHP grammar\n* Script to convert PHP source to JSON-based ASTs\n* Script to convert PHP source to Jinja2 source (experimental)\n\n## What\'s not?\n\nSome things can\'t be parsed yet. They are getting fewer by the day, but there\nis still a fair amount of work to do:\n\n* Labels and goto\n* Some other stuff, probably\n\n## Who\'s working on it?\n\nSee the [AUTHORS](https://github.com/viraptor/phply/blob/master/AUTHORS) file.\n\n## Troubleshooting\n\n### Couldn\'t create \'phply.parsetab\'\n\nPhply relies on `ply` to generate and cache some tables required for the parser.\nThese have been generated with the latest available version of ply for the phply\nrelease. If you installed phply under a different user and a new `ply` was\nreleased, the parsetab file cannot be automatically updated. Your options are\nto:\n\n* raise an issue for phply\n* rebuild the package yourself\n\n## How do I use it?\n\n* Lexer test: python phply/phplex.py\n* Parser test: python phply/phpparse.py\n* JSON dump: cd tools; python php2json.py < input.php > output.json\n* Jinja2 conversion: cd tools; python php2jinja.py < input.php > output.html\n* Fork me on GitHub and start hacking :)\n'