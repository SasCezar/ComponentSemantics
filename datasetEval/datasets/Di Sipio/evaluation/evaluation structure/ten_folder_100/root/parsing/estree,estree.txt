b'# The ESTree Spec\n\nOnce upon a time, an [unsuspecting Mozilla engineer](http://calculist.org) created an API in Firefox that exposed the SpiderMonkey engine\'s JavaScript parser as a JavaScript API. Said engineer [documented the format it produced](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API), and this format caught on as a lingua franca for tools that manipulate JavaScript source code.\n\nMeanwhile JavaScript is evolving, notably with the upcoming release of ES2015. This site will serve as a community standard for people involved in building and using these tools to help evolve this format to keep up with the evolution of the JavaScript language.\n\n# Discussion\n\nWe\'ve started the process of bringing together various communities using this format to move it forward into the ES2015 era and beyond. Feel free to join us! We\'ll be discussing in the issue tracker and in `#esprima` on Freenode.\n\n# AST Descriptor Syntax\n\nThe spec uses a custom syntax to describe its structures.  For example, at the\ntime of writing, \'es2015.md\' contained a description of `Program` as seen below\n\n```js\nextend interface Program {\n    sourceType: "script" | "module";\n    body: [ Statement | ModuleDeclaration ];\n}\n```\n\n# Participating Members\n\n* Dave Herman (Mozilla)\n* Ingvar Stepanyan, Adrian Heine ([Acorn](https://github.com/acornjs/acorn))\n* [Nicholas C. Zakas](https://github.com/nzakas) ([ESLint](https://github.com/eslint))\n* [Ariya Hidayat](https://github.com/ariya) ([Esprima](https://github.com/jquery/esprima))\n* Michael Ficarra ([@michaelficarra](https://github.com/michaelficarra))\n* [Henry Zhu](https://github.com/hzoo), [Logan Smyth](https://github.com/loganfsmyth), [Daniel Tschinder](https://github.com/danez) ([Babel](https://github.com/babel))\n\n# Inactive Members\n\n* Sebastian McKenzie ([Babel](https://github.com/babel/babel))\n* Kyle Simpson ([@getify](https://github.com/getify))\n* [Mike Sherov](https://github.com/mikesherov) ([Esprima](https://github.com/jquery/esprima))\n\n# Philosophy\n\nSuggested additions and modifications must follow these guidelines:\n\n1. **Backwards compatible:** Non-additive modifications to existing constructs will not be considered unless immense support is in favor of such changes. ([eg. #65](https://github.com/estree/estree/issues/65))\n2. **Contextless:** Nodes should not retain any information about their parent. ie. a `FunctionExpression` should not be aware of if it\'s a concise method. (eg. [#5](https://github.com/estree/estree/issues/5))\n3. **Unique:** Information should not be duplicated. ie. a `kind` property should not be present on `Literal` if the type can be discerned from the `value`. (eg. [#61](https://github.com/estree/estree/issues/61))\n4. **Extensible:** New nodes should be specced to easily allow future spec additions. This means expanding the coverage of node types. ie. `MetaProperty` over `NewTarget` to cover future meta properties. (eg. [#32](https://github.com/estree/estree/pull/32))\n'