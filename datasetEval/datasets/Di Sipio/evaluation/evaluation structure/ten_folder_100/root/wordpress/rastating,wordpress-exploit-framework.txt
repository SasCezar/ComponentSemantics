b'<p align="center"><img src="https://raw.githubusercontent.com/rastating/wordpress-exploit-framework/gh-pages/static/wordpress-exploit-framework-200px.png" /></p>\n\n<h1 align="center">WordPress Exploit Framework</h1>\n<p align="center">\n  <a href="https://travis-ci.org/rastating/wordpress-exploit-framework"><img src="https://travis-ci.org/rastating/wordpress-exploit-framework.svg?branch=development" alt="Build Status" height="20" /></a> <a href="https://codeclimate.com/github/rastating/wordpress-exploit-framework/maintainability"><img src="https://api.codeclimate.com/v1/badges/5414ccc4e7a1f5e38c79/maintainability" alt="Maintainability" height="20" /></a> <a href="https://coveralls.io/github/rastating/wordpress-exploit-framework?branch=development"><img src="https://coveralls.io/repos/github/rastating/wordpress-exploit-framework/badge.svg?branch=development" alt="Coverage Status" height="20" /></a> <a href="https://badge.fury.io/rb/wpxf"><img src="https://badge.fury.io/rb/wpxf@2x.png" alt="Gem Version" height="20"></a>\n</p>\n\n<p align="center">\n  A Ruby framework designed to aid in the penetration testing of WordPress systems.\n</p>\n\n<hr>\n\n### Installation\nTo install the latest stable build, run `gem install wpxf`.\n\nAfter installation, you can launch the WordPress Exploit Framework console by running `wpxf`.\n\n### What do I need to run it?\nRuby >= 2.4.4 is required to run WordPress Exploit Framework.\n\n### Troubleshooting Installation\n#### Debian Systems\nIf you have issues installing WPXF\'s dependencies (in particular, Nokogiri), first make sure you have all the tooling necessary to compile C extensions:\n\n```\nsudo apt-get install build-essential patch\n```\n\nIt\xe2\x80\x99s possible that you don\xe2\x80\x99t have important development header files installed on your system. Here\xe2\x80\x99s what you should do if you should find yourself in this situation:\n\n```\nsudo apt-get install ruby-dev zlib1g-dev liblzma-dev libsqlite3-dev\n```\n\n#### Windows Systems\nIf you are experiencing errors that indicate that `libcurl.dll` could not be loaded, you will need to ensure the latest libcurl binary is included in your Ruby bin folder, or any other folder that is in your environment\'s PATH variable.\n\nThe latest version can be downloaded from http://curl.haxx.se/download.html. As of 16/05/2016, the latest release is marked as `Win32 2000/XP zip\t7.40.0 libcurl SSL`. After downloading the archive, extract the contents of the bin directory into your Ruby bin directory (if prompted, don\'t overwrite any existing DLLs).\n\n### How do I use it?\nStart the WordPress Exploit Framework console by running `wpxf`.\n\nOnce loaded, you\'ll be presented with the wpxf prompt, from here you can search for modules using the `search` command or load a module using the `use` command.\n\nLoading a module into your environment will allow you to set options with the `set` command and view information about the module using `info`.\n\nBelow is an example of how one would load the symposium_shell_upload exploit module, set the module and payload options and run the exploit against the target.\n\n```\nwpxf > use exploit/shell/symposium_shell_upload\n\n[+] Loaded module: #<Wpxf::Exploit::SymposiumShellUpload:0x3916f20>\n\nwpxf [exploit/shell/symposium_shell_upload] > set host wp-sandbox\n\n[+] Set host => wp-sandbox\n\nwpxf [exploit/shell/symposium_shell_upload] > set target_uri /wordpress/\n\n[+] Set target_uri => /wordpress/\n\nwpxf [exploit/shell/symposium_shell_upload] > set payload exec\n\n[+] Loaded payload: #<Wpxf::Payloads::Exec:0x434d078>\n\nwpxf [exploit/shell/symposium_shell_upload] > set cmd echo "Hello, world!"\n\n[+] Set cmd => echo "Hello, world!"\n\nwpxf [exploit/shell/symposium_shell_upload] > run\n\n[-] Preparing payload...\n[-] Uploading the payload...\n[-] Executing the payload...\n[+] Result: Hello, world!\n[+] Execution finished successfully\n```\nFor a full list of supported commands, take a look at [This Wiki Page](https://github.com/rastating/wordpress-exploit-framework/wiki/Supported-Commands).\n\n### What is the difference between auxiliary and exploit modules?\nAuxiliary modules do not allow you to run payloads on the target machine, but instead allow you to extract information from the target, escalate privileges or provide denial of service functionality.\n\nExploit modules require you to specify a payload which subsequently gets executed on the target machine, allowing you to run arbitrary code to extract information from the machine, establish a remote shell or anything else that you want to do within the context of the web server.\n\n### What payloads are available?\n* **bind_php:** uploads a script that will bind to a specific port and allow WPXF to establish a remote shell.\n* **custom:** uploads and executes a custom PHP script.\n* **download_exec:** downloads and runs a remote executable file.\n* **meterpreter_bind_tcp:** a Meterpreter bind TCP payload generated using msfvenom.\n* **meterpreter_reverse_tcp:** a Meterpreter reverse  TCP payload generated using msfvenom.\n* **exec:** runs a shell command on the remote server and returns the output to the WPXF session.\n* **reverse_tcp:** uploads a script that will establish a reverse TCP shell.\n\nAll these payloads, with the exception of `custom` and the Meterpreter payloads, will delete themselves after they have been executed, to avoid leaving them lying around on the target machine after use or in the event that they are being used to establish a shell which fails.\n\n### How can I write my own modules and payloads?\nGuides on writing modules and payloads can be found on [The Wiki](https://github.com/rastating/wordpress-exploit-framework/wiki) and full documentation of the API can be found at https://rastating.github.io/wordpress-exploit-framework\n\n## License\nCopyright (C) 2015-2018 rastating\n\nRunning WordPress Exploit Framework against websites without prior mutual consent may be illegal in your country. The author and parties involved in its development accept no liability and are not responsible for any misuse or damage caused by WordPress Exploit Framework.\n\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.\n'