b"# WP2Static\n\nWP2Static is a WordPress plugin to generate a static copy of your site and deploy to GitHub Pages, S3, Netlify etc.\nIncrease security, pageload speed and hosting options. Connect WordPress into your CI/CD workflow.\n\n__Note: GitHub repo is a read-only mirror. Our main repos and information on contributing are hosted at [https://code.wp2static.com](https://code.wp2static.com).__\n\n## Static Site Generator for WordPress\n\nWatch the developer's [talk from WordCamp Brisbane 2018](http://www.youtube.com/watch?v=HPc4JjBvkrU)\n\n\n## Table of contents\n\n* [External resources](#external-resources)\n* [Opinionated software](#opinionated-software)\n* [Installation](#installation)\n* [WP-CLI commands](#wp-cli-commands)\n* [Hooks](#hooks)\n  * [Modify the initial list of URLs to crawl](#modify-the-initial-list-of-urls-to-crawl)\n  * [Post-deployment hook](#post-deployment-hook)\n* [Development](#development)\n* [Localisation / translations](#localisation--translations)\n* [Support](#support)\n* [Notes](#notes)\n* [Sponsorship / supporting open-source](#sponsorship--supporting-open-source)\n\n## External resources\n\n - [WordPress.org plugin page](https://wordpress.org/plugins/static-html-output-plugin)\n - [Marketing site](https://wp2static.com)\n - [Documentation](https://docs.wp2static.com)\n - [Forum](https://forum.wp2static.com)\n - [Twitter](https://twitter.com/wp2static)\n\n## Opinionated software\n\n - ~~speed over beautiful code~~ code quality is now prioritized! Thanks @szepeviktor, @arswright!\n - human readable code over short variable names\n - own-code vs adding libraries\n - benchmarking over opinions (performance)\n - less clicks == better UX\n - user configurable options vs developer opinions\n\n\n## WP-CLI commands\n\n - `wp wp2static options --help`\n```\nNAME\n\n  wp wp2static options\n\nDESCRIPTION\n\n  Read / write plugin options\n\nSYNOPSIS\n\n  wp wp2static options\n\nOPTIONS\n\n  <list> [--reveal-sensitive-values]\n\n  Get all option names and values (explicitly reveal sensitive values)\n\n  <get> <option-name>\n\n  Get or set a specific option via name\n\n  <set> <option-name> <value>\n\n  Set a specific option via name\n\n\nEXAMPLES\n\n  List all options\n\n    wp wp2static options list\n\n  List all options (revealing sensitive values)\n\n    wp wp2static options list --reveal_sensitive_values\n\n  Get option\n\n    wp wp2static options get selected_deployment_option\n\n  Set option\n\n    wp wp2static options set baseUrl 'https://mystaticsite.com'\n```\n - `wp wp2static generate`\n\n```\nGenerating static copy of WordPress site\nSuccess: Generated static site archive in 00:00:04\n```\n\n - `wp wp2static deploy --test`\n - `wp wp2static deploy`\n - `wp wp2static generate`\n\n```\nGenerating static copy of WordPress site\nSuccess: Generated static site archive in 00:00:04\n```\n\n - `wp wp2static deploy --test`\n - `wp wp2static deploy`\n\n```\nDeploying static site via: zip\nSuccess: Deployed to: zip in 00:00:01\nSending confirmation email...\n```\n\n## Hooks\n\n### Modify the initial list of URLs to crawl\n\n - `wp2static_modify_initial_crawl_list`\n - Filter hook\n\n*signature*\n```php\napply_filters(\n    'wp2static_modify_initial_crawl_list',\n    $url_queue\n);\n```\n\n*example usage*\n```php\nfunction add_additional_urls( $url_queue ) {\n    $additional_urls = array(\n        'http://mydomain.com/custom_link_1/',\n        'http://mydomain.com/custom_link_2/',\n    );\n\n    $url_queue = array_merge(\n        $url_queue,\n        $additional_urls\n    );\n\n    return $url_queue;\n}\n\nadd_filter( 'wp2static_modify_initial_crawl_list', 'add_additional_urls' );\n```\n### Post-deployment hook\n\n - `wp2static_post_deploy_trigger`\n - Action hook\n\n*signature*\n```php\ndo_action(\n  'wp2static_post_deploy_trigger',\n  $archive\n);\n```\n\n*example usage*\n```php\nfunction printArchiveInfo( $archive ) {\n    error_log( print_r( $archive, true ) );\n}\n\nadd_filter( 'wp2static_post_deploy_trigger', 'printArchiveInfo' );\n```\n\n*example response*\n```\nArchive Object\n(\n    [settings] => Array\n        (\n            [selected_deployment_option] => github\n            [baseUrl] => https://leonstafford.github.io/demo-site-wordpress-static-html-output-plugin/\n            [wp_site_url] => http://example.test/\n            [wp_site_path] => /srv/www/example.com/current/web/wp/\n            [wp_uploads_path] => /srv/www/example.com/current/web/app/uploads\n            [wp_uploads_url] => http://example.test/app/uploads\n            [wp_active_theme] => /wp/wp-content/themes/twentyseventeen\n            [wp_themes] => /srv/www/example.com/current/web/app/themes\n            [wp_uploads] => /srv/www/example.com/current/web/app/uploads\n            [wp_plugins] => /srv/www/example.com/current/web/app/plugins\n            [wp_content] => /srv/www/example.com/current/web/app\n            [wp_inc] => /wp-includes\n            [crawl_increment] => 1\n        )\n\n    [path] => /srv/www/example.com/current/web/app/uploads/wp-static-html-output-1547668758/\n    [name] => wp-static-html-output-1547668758\n    [crawl_list] =>\n    [export_log] =>\n)\n\n```\n### Add deployment option to UI\n\n - `wp2static_add_deployment_method_option_to_ui`\n - Filter hook\n\n*signature*\n```php\napply_filters(\n    'wp2static_modify_initial_crawl_list',\n    $options\n);\n```\n\n*example usage*\n```php\nfunction add_deployment_option_to_ui( $deploy_options ) {\n    $deploy_options['azure'] = array('Microsoft Azure');\n\n    return $deploy_options;\n}\n\nadd_filter(\n    'wp2static_add_deployment_method_option_to_ui',\n    'add_deployment_option_to_ui'\n);\n```\n### Load deployment option template\n\n - `wp2static_load_deploy_option_template`\n - Filter hook\n\n*signature*\n```php\napply_filters(\n    'wp2static_load_deploy_option_template',\n    $options\n);\n```\n\n*example usage*\n```php\nfunction load_deployment_option_template( $templates ) {\n    $templates[] =  '/path/to/deployment_settings_block.phtml';\n\n    return $templates;\n}\n\nadd_filter(\n    'wp2static_load_deploy_option_template',\n    'load_deployment_option_template'\n);\n```\n### Register new plugin option key\n\n - `wp2static_add_option_keys`\n - Filter hook\n\n*signature*\n```php\napply_filters(\n    'wp2static_add_option_keys',\n    $options\n);\n```\n\n*example usage*\n```php\nfunction addWP2StaticOption( $options ) {\n    $new_options = array(\n        'baseUrl-azure',\n        'azStorageAccountName',\n        'azContainerName',\n        'azAccessKey',\n        'azPath',\n    );\n\n    $options = array_merge(\n        $options,\n        $new_options\n    );\n\n    return $options;\n}\n\nadd_filter(\n    'wp2static_load_deploy_option_template',\n    'addWP2StaticOption'\n);\n```\n### Whitelist plugin option keys\n\n - `wp2static_whitelist_option_keys`\n - Filter hook\n\n*signature*\n```php\napply_filters(\n    'wp2static_whitelist_option_keys',\n    $options\n);\n```\n\n*example usage*\n```php\nfunction whitelistWP2StaticOption( $options ) {\n    $whitelist_options = array(\n      'baseUrl-azure',\n    );\n\n    $options = array_merge(\n        $options,\n        $whitelist_options\n    );\n\n    return $options;\n}\n\nadd_filter(\n    'wp2static_load_deploy_option_template',\n    'addWP2StaticOption'\n);\n```\n\n### Add deployment option for CLI usage\n\nEvery Add-on listens for this event, checks selected deployment method matches\n Add-on type and triggers the deployment actions specific to the Add-on.\n\n - `wp2static_addon_trigger_deploy`\n - Action hook\n\n*signature*\n```php\ndo_action(\n  'wp2static_addon_trigger_deploy',\n  $method\n);\n```\n\n*example usage*\n```php\nfunction runBackendDeployment( $method ) {\n    if ( $method !== 'bunnycdn' ) {\n        return;\n    }\n\n    $bunnyCDN = new WP2Static\\BunnyCDN();\n    $bunnyCDN->bootstrap();\n    $bunnyCDN->prepareDeploy( true );\n    $bunnyCDN->bunnycdn_transfer_files();\n    $bunnyCDN->bunnycdn_purge_cache();\n}\n\nadd_filter( 'wp2static_addon_trigger_deploy', 'runBackendDeployment' );\n```\n## Development\n\nThis repo contains the latest code, which you can clone/download to get the bleeding edge, else install via the [official WordPress Plugin page](https://wordpress.org/plugins/static-html-output-plugin/)\n\nIf you'd like to contribute, please follow the usual GitHub procedures (create an Issue, fork repo, submit PR). If you're unsure about any of that, contact me and I'll be happy to help.\n\nIn trying to make development/contributing easier, we'll keep requirements to a minimum. If you prefer Docker, Local by FlyWheel, Valet, Bedrock, Linux, BSD, Mac, they're all fine. This is a WordPress plugin, so anywhere you can run WordPress, you can do development on this :)\n\n### Installing from source\n\n - `git clone -b git@github.com:WP2Static/wp2static.git static-html-output-plugin`\n - `cd static-html-output-plugin`\n - `npm i`\n - `composer install`\n - `composer buildjs`\n\n### Running tests\n\n - `composer test`\n\nEnd to end tests, driven viu the UI via Puppeteer, Jest and Chromium can be run with:\n\n - `jest` (assuming globally installed Jest via `npm i -g jest`)\n\nA new WP site for testing is created when running via CircleCI. For local testing, point to a test WordPress site with the following environment variables defined:\n\n - `WP2STATIC_E2E_TEST_URL`\n - `WP2STATIC_E2E_TEST_USER`\n - `WP2STATIC_E2E_TEST_PASS`\n\n\n### Localisation / translations\n\nLocalisation has fallen behind on this project. I welcome anyone who can contribute some expertise in this area / help me get the project easier to translate.\n\nOur official [translation page](https://translate.wordpress.org/projects/wp-plugins/static-html-output-plugin) on wordpress.org.\n\n\n## Support\n\nPlease [raise an issue](https://github.com/leonstafford/wp2static/issues/new) here on GitHub or on the plugin's [support forum](https://forum.wp2static.com).\n\nSupport email is [mailto:help@wp2static.com](help@wp2static.com)\n\n## Notes\n\nWhen cloning the repo for direct use, clone it into a dir named after the official WP plugin's slug, `static-html-output-plugin`, this will make life easier.\n\n## Sponsorship / supporting open-source\n\nI'm committed (git-pun) to keeping this software open-source and free from selling out user data to a 3rd party. As of version 6, we'll no longer be using Freemius for this reason. We'll accept payments with Snipcart + Stripe, but they will have no knowledge of your WordPress website or any info not required for a payment. The only thing that tracks you on our marketing website is a YouTube embed, which I'll soon switch to an image to avoid that. I rock OpenBSD on my workstation and increasingly on servers because they are an open source project done very well.\n\nThere is no big company behind this software, besides a sole proprietership in my name, in order to comply with taxation requirements for me as an Australian resident.\n\nHelp keep me doing what I love: building and supporting this software.\n\n - [Buy a commercial license](https://wp2static.com)\n\nLeon\n\n[me@ljs.dev](mailto:me@ljs.dev)\n"