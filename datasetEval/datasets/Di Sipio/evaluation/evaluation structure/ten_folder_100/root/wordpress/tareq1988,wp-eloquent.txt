b'# Eloquent Wrapper for WordPress\n\nThis is a library package to use Laravel\'s [Eloquent ORM](http://laravel.com/docs/5.0/eloquent) with WordPress.\n\n\n## Package Installation\n\nTo install this package, edit your `composer.json` file:\n\n```js\n{\n    "require": {\n        "tareq1988/wp-eloquent": "dev-master"\n    }\n}\n```\n\nNow run:\n\n`$ composer install`\n\n# Usage Example\n\n## Basic Usage\n\n```php\n\n$db = \\WeDevs\\ORM\\Eloquent\\Database::instance();\n\nvar_dump( $db->table(\'users\')->find(1) );\nvar_dump( $db->select(\'SELECT * FROM wp_users WHERE id = ?\', [1]) );\nvar_dump( $db->table(\'users\')->where(\'user_login\', \'john\')->first() );\n\n// OR with DB facade\nuse \\WeDevs\\ORM\\Eloquent\\Facades\\DB;\n\nvar_dump( DB::table(\'users\')->find(1) );\nvar_dump( DB::select(\'SELECT * FROM wp_users WHERE id = ?\', [1]) );\nvar_dump( DB::table(\'users\')->where(\'user_login\', \'john\')->first() );\n```\n\n## Creating Models For Custom Tables\nYou can use custom tables of the WordPress databases to create models:\n\n```\n\tnamespace whatever;\n\n\n\tclass CustomTableModel extends \\WeDevs\\ORM\\Eloquent\\Model {\n\n\t\t/**\n\t\t * Name for table without prefix\n\t\t *\n\t\t * @var string\n\t\t */\n\t\tprotected $table = \'table_name\';\n\n\n\t\t/**\n\t\t * Columns that can be edited - IE not primary key or timestamps if being used\n\t\t */\n\t\tprotected $fillable = [\n\t\t\t\'city\',\n\t\t\t\'state\',\n\t\t\t\'country\'\n\t\t];\n\n\t\t/**\n\t\t * Disable created_at and update_at columns, unless you have those.\n\t\t */\n\t\tpublic $timestamps = false;\n\n\t\t/** Everything below this is best done in an abstract class that custom tables extend */\n\n\t\t/**\n\t\t * Set primary key as ID, because WordPress\n\t\t *\n\t\t * @var string\n\t\t */\n\t\tprotected $primaryKey = \'ID\';\n\n\t\t/**\n\t\t * Make ID guarded -- without this ID doesn\'t save.\n\t\t *\n\t\t * @var string\n\t\t */\n\t\tprotected $guarded = [ \'ID\' ];\n\n\t\t/**\n\t\t * Overide parent method to make sure prefixing is correct.\n\t\t *\n\t\t * @return string\n\t\t */\n\t\tpublic function getTable()\n\t\t{\n\t\t\t//In this example, it\'s set, but this is better in an abstract class\n\t\t\tif( isset( $this->table ) ){\n\t\t\t\t$prefix =  $this->getConnection()->db->prefix;\n\t\t\t\treturn $prefix . $this->table;\n\n\t\t\t}\n\n\t\t\treturn parent::getTable();\n\t\t}\n\n\t}\n```\n\n### Retrieving All Rows From A Table\n\n```php\n$users = $db->table(\'users\')->get();\n\nforeach ($users as $user) {\n    var_dump($user->display_name);\n}\n```\n\nHere `users` is the table name **without prefix**. The prefix will be applied automatically.\n\n\n### Other Examples\n\n - [Queries](http://laravel.com/docs/5.0/queries)\n - [Eloquent ORM](http://laravel.com/docs/5.0/eloquent)\n\n## Writing a Model\n\n```php\nuse \\WeDevs\\ORM\\Eloquent\\Model as Model;\n\nclass Employee extends Model {\n\n}\n\nvar_dump( Employee::all()->toArray() ); // gets all employees\nvar_dump( Employee::find(1) ); // find employee with ID 1\n```\nThe class name `Employee` will be translated into `PREFIX_employees` table to run queries. But as usual, you can override the table name.\n\n### In-built Models for WordPress\n\n- Post\n- Comment\n- Post Meta\n- User\n- User Meta\n\n\n```php\nuse WeDevs\\ORM\\WP\\Post as Post;\n\nvar_dump( Post::all() ); //returns only posts with WordPress post_type "post"\n```\n\n#### Filter `Post` by `post_status` and `post_type`\n```php\nuse WeDevs\\ORM\\WP\\Post as Post;\nvar_dump(Post::type(\'page\')->get()->toArray()); // get pages\nvar_dump(Post::status(\'publish\')->get()->toArray()); // get posts with publish status\nvar_dump(Post::type(\'page\')->status(\'publish\')->get()->toArray()); // get pages with publish status\n```\n\n## How it Works\n\n - Eloquent is mainly used here as the query builder\n - [WPDB](http://codex.wordpress.org/Class_Reference/wpdb) is used to run queries built by Eloquent\n - Hence, we have the benfit to use plugins like `debug-bar` or `query-monitor` to get SQL query reporting.\n - It doesn\'t create any extra MySQL connection\n\n\n## Minimum Requirement\n - PHP 5.6.4+\n - WordPress 4.0+\n\n## Author\n[Tareq Hasan](https://tareq.co)\n'