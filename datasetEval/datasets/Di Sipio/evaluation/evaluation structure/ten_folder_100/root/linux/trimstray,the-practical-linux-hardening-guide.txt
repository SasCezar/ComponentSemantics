b'<h2 align="center"><code>The Practical Linux Hardening Guide</code></h2>\n\n<br>\n\n<p align="center">\n  <a href="https://github.com/trimstray/the-practical-linux-hardening-guide">\n    <img src="https://github.com/trimstray/the-practical-linux-hardening-guide/blob/master/static/img/main_preview.jpg" alt="Master">\n  </a>\n</p>\n\n<br>\n\n<p align="center">"<i>Did you know all your doors were locked?</i>" - Riddick (The Chronicles of Riddick)</p>\n\n<br>\n\n<p align="center">\n  <a href="https://github.com/trimstray/the-practical-linux-hardening-guide/pulls">\n    <img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?longCache=true" alt="Pull Requests">\n  </a>\n  <a href="http://www.gnu.org/licenses/">\n    <img src="https://img.shields.io/badge/License-GNU-blue.svg?longCache=true" alt="License">\n  </a>\n</p>\n\n<div align="center">\n  <sub>Created by\n  <a href="https://twitter.com/trimstray">trimstray</a> and\n  <a href="https://github.com/trimstray/the-practical-linux-hardening-guide/graphs/contributors">contributors</a>\n</div>\n\n<br>\n\n****\n\n# Table of Contents\n\n- **[Introduction](#introduction)**\n  - [Prologue](#prologue)\n  - [The Importance of Hardening Linux](#the-importance-of-hardening-linux)\n  - [How to Harden Linux](#how-to-harden-linux)\n  - [Which Distribution Should be Used](#which-distribution-should-be-used)\n  - [How to Read This Guide](#how-to-read-this-guide)\n  - [Okay. Let\'s start, 3, 2, 1... STOP!](#okay-lets-start-3-2-1-stop)\n- **[Policy Compliance](#policy-compliance)**\n  - [Center of Internet Security (CIS)](#center-of-internet-security-cis)\n  - [Security Technical Implementation Guide (STIG)](#security-technical-implementation-guide-stig)\n  - [National Institute of Standards and Technology (NIST)](#national-institute-of-standards-and-technology-nist)\n  - [Payment Card Industry Data Security Standard (PCI-DSS)](#payment-card-industry-data-security-standard-pci-dss)\n- **[Security Content Automation Protocol (SCAP)](#security-content-automation-protocol-scap)**\n  - [SCAP Security Guide](#scap-security-guide)\n  - [OpenSCAP Base](#openscap-base)\n  - [SCAP Workbench](#scap-workbench)\n- **[DevSec Hardening Framework](#devsec-hardening-framework)**\n- **[Contributing & Support](#contributing--support)**\n- **[License](#license)**\n\n## Introduction\n\n### Prologue\n\n**[The Practical Linux Hardening Guide](https://trimstray.github.io/the-practical-linux-hardening-guide/)** provides a high-level overview of hardening GNU/Linux systems. It is not an official standard or handbook but it _touches_ and _uses_ industry standards.\n\nThis guide also provides you with _practical step-by-step instructions_ for building your own hardened systems and services. One of the main goals is to create a single document covering _internal_ and _external_ threats.\n\nA few rules for this project:\n\n- useful, simple, and not tiring\n- include a lot of security tips from the C2S/CIS\n- contains also non-related rules with C2S/CIS\n- based on a minimal [RHEL7](https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux) and [CentOS 7](https://www.centos.org/) installations\n- it\'s not exhaustive about Linux hardening\n- some hardening rules/descriptions can be done better\n- you can think of it as a checklist\n\nThe Practical Linux Hardening Guide use following [OpenSCAP](https://www.open-scap.org/) configurations:\n\n- [U.S. Government Commercial Cloud Services (C2S) baseline inspired by CIS v2.1.1](https://static.open-scap.org/ssg-guides/ssg-rhel7-guide-C2S.html)\n\n  > C2S for Red Hat Enterprise Linux 7 v0.1.43.\n\n- [Red Hat Enterprise Linux 7 Security Technical Implementation Guide (STIG)](https://www.stigviewer.com/stig/red_hat_enterprise_linux_7/)\n\n  > The requirements are derived from the (NIST) 800-53 and related documents.\n\nPlease also remember:\n\n  > This guide contains my comments that may differ from certain industry principles. If you are not sure what to do please see **[Policy Compliance](#policy-compliance)**.\n\n### The Importance of Hardening Linux\n\nSimply speaking, hardening is the process of making a system more secure. Out of the box, Linux servers don\xe2\x80\x99t come "hardened" (e.g. with the attack surface minimized). It\xe2\x80\x99s up to you to prepare for each eventuality and set up systems to notify you of any suspicious activity in the future.\n\nThe process of hardening servers involves both IT ops. and security teams and require changes to the default configuration according to industry benchmarks.\n\nAlso for me, hardening is the fine art of doing the right things, even if they don\'t always look to have a big impact. It\'s always a balance between ease of use and protection.\n\nYou need to harden your system to protect your assets as much as possible. Why is it important? Please read a great, short article that [explains the hardening process](https://linux-audit.com/linux-server-hardening-most-important-steps-to-secure-systems/) step by step by [Michael Boelen](https://michaelboelen.com/).\n\n### How to Harden Linux\n\nIn my opinion, you should drop all non-industry policies, articles, manuals, and others especially on production environments and standalone home servers. These lists exist to give a false sense of security and aren\'t based on authority standards.\n\n<p align="center">\n  <a href="https://github.com/trimstray/the-practical-linux-hardening-guide">\n    <img src="https://github.com/trimstray/the-practical-linux-hardening-guide/blob/master/static/img/meme_01.png" alt="Master">\n  </a>\n</p>\n\nThere are a lot of great GNU/Linux hardening policies available to provide safer operating systems compatible with security protocols. For me, CIS and the STIGs compliances are about the best prescriptive guides - but of course you can choose a different one (e.g. PCI-DSS, DISA).\n\n  > Most of all you should use [Security Benchmarks/Policies](#policy-compliance) which describe consensus best practices for the secure configuration of target systems.\n\nConfiguring your systems in compliance eliminates the most common vulnerabilities. For example, CIS has been shown to eliminate 80-95% of known vulnerabilities.\n\nOn the other hand, these standards are complicated checklists (often for newbies, difficult to implement). In my opinion, ideally, real world implementation is automated via something like OpenSCAP.\n\n  > You should use a rational approach because more is not better. Each environment is different, so even though security rules should all work in theory, sometimes things will not work as expected.\n\nHardening is not a simple process. Here are general rules following common best practices:\n\n- never use root account for anything that does not require it\n- only `sudo` individual commands\n- never set a server to run as root (except for initialization time) and ensure that it exits all unnecessary privileges before accepting requests\n- secure your firewall the best you can and forbid all unnecessary access\n- do not install unnecessary or unstable software\n\n### Which Distribution Should be Used\n\nThis guide is tested on **Red Hat Enterprise Linux 7** and **CentOS 7** distributions because these are:\n\n- free (CentOS) and open source\n- enterprise-class\n- stable and reliable\n- with great community support\n- built on coherent snapshots of old packages\n\nBoth distributions allow the use of **[certified tools](#scap-security-guide)** which can parse and evaluate each component of the SCAP standard.\n\nIf you use another distribution - no problem, this guide is also for you.\n\n### How to Read This Guide\n\nHere is the structure of the chapters:\n\n```\n Chapter - e.g. Core Layer\n    |\n    |-- Subsection - e.g. Maintaining Software\n    |       \\\n    |        |-- Rationale\n    |        |-- Solution (+ policies)\n    |        |-- Comments\n    |        |-- Useful resources\n    |\n    |-- Subsection - e.g. Accounts and Access\n    |       \\\n    |        |-- Rationale\n    |        |-- Solution (+ policies)\n    |        |-- Comments\n    |        |-- Useful resources\n```\n\nLevels of understanding:\n\n- _Chapter_ and _subsection_ offers a general overview\n- _Rationale_ tells you the reasoning behind the changes\n- _Solution_ and _policies_ are always compliant with the standard and on this basis, make changes\n- _Comments_ helps you figure out what you can change or add to the _solution_\n- _Useful resources_ provide deeper understanding\n\n### Okay. Let\'s start, 3, 2, 1... STOP!\n\nMaking major changes to your systems can be risky.\n\nThe most important rule of system hardening that reasonable admins follow is:\n\n  > **`A production environment is the real instance of the app so make your changes on the dev/test!`**\n\nThe second most important rule is:\n\n  > **`Don\xe2\x80\x99t do anything that will affect the availability of the service or your system.`**\n\nThe third rule is:\n\n  > **`Make backups of the entire virtual machine and important components.`**\n\nAnd the last rule is:\n\n  > **`Think about what you actually do with your server.`**\n\n## Policy Compliance\n\n### Center of Internet Security (CIS)\n\nThe Center of Internet Security (CIS) is a nonprofit organization focused on improving public and private sector cybersecurity readiness and response.\n\nPlease see **[CIS Benchmarks](https://www.cisecurity.org/cis-benchmarks/)**.\n\n### Security Technical Implementation Guide (STIG)\n\nA Security Technical Implementation Guide (STIG) is a cybersecurity methodology for standardizing security protocols within networks, servers, computers, and logical designs to enhance overall security.\n\nPlease see **[Stigviewer](https://www.stigviewer.com/stigs)** to explore all stigs.\n\n### National Institute of Standards and Technology (NIST)\n\nThe National Institute of Standards and Technology (NIST) is a physical sciences laboratory and a non-regulatory agency of the United States Department of Commerce.\n\nPlease see **[National Checklist Program (NCP)](https://nvd.nist.gov/ncp/repository)**.\n\n### Payment Card Industry Data Security Standard (PCI-DSS)\n\nPayment Card Industry Data Security Standard (PCI-DSS) compliance is a requirement for any business that stores, processes, or transmits cardholder data.\n\nIn accordance with PCI-DSS requirements, establish a formal policy and supporting procedures for developing configuration standards for system components that are consistent with industry-accepted hardening standards like:\n\n- Center of Internet Security (CIS)\n- International Organization for Standardization (ISO)\n- SysAdmin, Audit, Network, and Security (SANS) Institute\n- National Institute of Standards and Technology (NIST)\n\n## Security Content Automation Protocol (SCAP)\n\nSecurity Content Automation Protocol (SCAP) provides a mechanism to check configurations, vulnerability management and evaluate policy compliance for a variety of systems.\n\nOne of the most popular implementations of SCAP is OpenSCAP and it is very helpful for vulnerability assessment and as a hardening helper. OpenSCAP can easily handle the SCAP standards and generate neat, HTML-based reports.\n\nPlease see **[SCAP Security Policies](https://www.open-scap.org/security-policies/)**, **[OpenSCAP User Manual](https://static.open-scap.org/openscap-1.2/oscap_user_manual.html)**, and **[OpenSCAP Static](https://static.open-scap.org/)**.\n\n### SCAP Security Guide\n\nThe auditing system settings with SCAP Security Guide project contains guidance for settings for Red Hat/CentOS and it\'s validated by NIST.\n\nYou should inspect the security content of your system with `oscap info` module:\n\n```bash\n# For RHEL:\noscap info /usr/share/xml/scap/ssg/content/ssg-rhel7-ds.xml\n\n# For CentOS:\noscap info /usr/share/xml/scap/ssg/content/ssg-centos7-ds.xml\n```\n\n### OpenSCAP Base\n\nThe OpenSCAP scanner will only provide meaningful results if the content you want it to process is correct and up to date. The `oscap` tool scans your system, validates security compliance content, and generates reports and guides based on these scans.\n\nOfficial [OpenSCAP Base](https://www.open-scap.org/tools/openscap-base/) documentation says:\n\n  > _The command-line tool, called `oscap`, offers a multi-purpose tool designed to format content into documents or scan the system based on this content. Whether you want to evaluate DISA STIGs, NIST\xe2\x80\x98s USGCB, or Red Hat\xe2\x80\x99s Security Response Team\xe2\x80\x99s content, all are supported by OpenSCAP._\n\nBefore use, please read **[Using OSCAP](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/sect-using_oscap)** documentation.\n\n```bash\n# Installation:\nyum install openscap-scanner\n\n# Make a RHEL7 machine e.g. PCI-DSS compliant:\noscap xccdf eval --report report.html --profile xccdf_org.ssgproject.content_profile_pci-dss /usr/share/xml/scap/ssg/content/ssg-rhel7-ds.xml\n\n# Make a CentOS machine e.g. PCI-DSS compliant:\noscap xccdf eval --report report.html --profile xccdf_org.ssgproject.content_profile_pci-dss /usr/share/xml/scap/ssg/content/ssg-centos7-ds.xml\n```\n\n### SCAP Workbench\n\nSCAP Workbench is a utility that offers an easy way to perform common `oscap` tasks on local or remote systems.\n\nBefore use, please read **[Using SCAP Workbench](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/sect-using_scap_workbench)** documentation.\n\n```bash\n# Installation:\nyum install scap-security-guide scap-workbench\n```\n\n## DevSec Hardening Framework\n\n  > _Security + DevOps: Automatic Server Hardening._\n\nThis project covers some of the things in this guide which can be automated (e.g. setting of grub password or enforcing the permissions of the common directories). Its a good start if you want to make changes and see how it works from the level of automation tools.\n\nProject: **[DevSec Hardening Framework](https://dev-sec.io)** and :octocat: GitHub repository: **[dev-sec](https://github.com/dev-sec/)**.\n\nThanks [@artem-sidorenko](https://github.com/artem-sidorenko)!\n\n## Contributing & Support\n\nIf you find something which doesn\'t make sense, or something doesn\'t seem right, please make a pull request and please add valid and well-reasoned explanations about your changes or comments.\n\nBefore adding a pull request, please see the **[contributing guidelines](.github/CONTRIBUTING.md)**.\n\nIf this project is useful and important for you or if you really like _The Practical Linux Hardening Guide_, you can bring **positive energy** by giving some **good words** or **supporting this project**. Thank you!\n\n## License\n\nFor license information, please see [LICENSE](https://github.com/trimstray/the-practical-linux-hardening-guide/blob/master/LICENSE.md).\n\n---\n\n<h4><p align="center">:beginner: To start please go to the <a href="https://github.com/trimstray/the-practical-linux-hardening-guide/wiki">Wiki</a>.</p></h4>\n'