b'# StatsD [![Build Status][travis-ci_status_img]][travis-ci_statsd] [![Join the chat at https://gitter.im/statsd/statsd](https://badges.gitter.im/statsd/statsd.svg)](https://gitter.im/statsd/statsd?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\nA network daemon that runs on the [Node.js][node] platform and\nlistens for statistics, like counters and timers, sent over [UDP][udp] or\n[TCP][tcp] and sends aggregates to one or more pluggable backend services (e.g.,\n[Graphite][graphite]).\n\n## Key Concepts\n\n* *buckets*\n  Each stat is in its own "bucket". They are not predefined anywhere. Buckets\ncan be named anything that will translate to Graphite (periods make folders,\netc)\n\n* *values*\n  Each stat will have a value. How it is interpreted depends on modifiers. In\ngeneral values should be integers.\n\n* *flush*\n  After the flush interval timeout (defined by `config.flushInterval`,\n  default 10 seconds), stats are aggregated and sent to an upstream backend service.\n\n\n## Installation and Configuration\n\n### Docker\nStatsd supports docker in two ways:\n* The official docker image on [docker hub](https://hub.docker.com/r/statsd/statsd)\n* Building the image from the bundled [Dockerfile](./Dockerfile)\n\n### Manual installation\n * Install Node.js (All [`Current` and `LTS` Node.js versions](https://nodejs.org/en/about/releases/) are supported.)\n * Clone the project\n * Create a config file from `exampleConfig.js` and put it somewhere\n * Start the Daemon:\n   `node stats.js /path/to/config`\n\n## Usage\nThe basic line protocol expects metrics to be sent in the format:\n\n    <metricname>:<value>|<type>\n\nSo the simplest way to send in metrics from your command line if you have\nStatsD running with the default UDP server on localhost would be:\n\n    echo "foo:1|c" | nc -u -w0 127.0.0.1 8125\n\n## More Specific Topics\n* [Metric Types][docs_metric_types]\n* [Graphite Integration][docs_graphite]\n* [Supported Servers][docs_server]\n* [Supported Backends][docs_backend]\n* [Admin TCP Interface][docs_admin_interface]\n* [Server Interface][docs_server_interface]\n* [Backend Interface][docs_backend_interface]\n* [Metric Namespacing][docs_namespacing]\n* [Statsd Cluster Proxy][docs_cluster_proxy]\n\n## Debugging\nThere are additional config variables available for debugging:\n\n* `debug` - log exceptions and print out more diagnostic info\n* `dumpMessages` - print debug info on incoming messages\n\nFor more information, check the `exampleConfig.js`.\n\n\n## Tests\nA test framework has been added using node-unit and some custom code to start\nand manipulate statsd. Please add tests under test/ for any new features or bug\nfixes encountered. Testing a live server can be tricky, attempts were made to\neliminate race conditions but it may be possible to encounter a stuck state. If\ndoing dev work, a `killall statsd` will kill any stray test servers in the\nbackground (don\'t do this on a production machine!).\n\nTests can be executed with `./run_tests.sh`.\n\n## History\nstatsd was originally written at ([Etsy][etsy]) and released with a [blog post][blog post]\nabout how it works and why we created it.\n\n## Inspiration\nStatsD was inspired (heavily) by the project (of the same name) at Flickr.\nHere\'s a post where Cal Henderson described it in depth:\n[Counting and timing][counting-timing]\nCal re-released the code recently:\n[Perl StatsD][Flicker-StatsD]\n\n\n\n[graphite]: http://graphite.readthedocs.org/\n[etsy]: http://www.etsy.com\n[blog post]: http://codeascraft.etsy.com/2011/02/15/measure-anything-measure-everything/\n[node]: http://nodejs.org\n[nodemods]: http://nodejs.org/api/modules.html\n[counting-timing]: http://code.flickr.com/blog/2008/10/27/counting-timing/\n[Flicker-StatsD]: https://github.com/iamcal/Flickr-StatsD\n[udp]: http://en.wikipedia.org/wiki/User_Datagram_Protocol\n[tcp]: http://en.wikipedia.org/wiki/Transmission_Control_Protocol\n[docs_metric_types]: https://github.com/statsd/statsd/blob/master/docs/metric_types.md\n[docs_graphite]: https://github.com/statsd/statsd/blob/master/docs/graphite.md\n[docs_server]: https://github.com/statsd/statsd/blob/master/docs/server.md\n[docs_backend]: https://github.com/statsd/statsd/blob/master/docs/backend.md\n[docs_admin_interface]: https://github.com/statsd/statsd/blob/master/docs/admin_interface.md\n[docs_server_interface]: https://github.com/statsd/statsd/blob/master/docs/server_interface.md\n[docs_backend_interface]: https://github.com/statsd/statsd/blob/master/docs/backend_interface.md\n[docs_namespacing]: https://github.com/etsy/statsd/blob/master/docs/namespacing.md\n[docs_cluster_proxy]: https://github.com/etsy/statsd/blob/master/docs/cluster_proxy.md\n[travis-ci_status_img]: https://travis-ci.org/statsd/statsd.svg?branch=master\n[travis-ci_statsd]: https://travis-ci.org/statsd/statsd\n'