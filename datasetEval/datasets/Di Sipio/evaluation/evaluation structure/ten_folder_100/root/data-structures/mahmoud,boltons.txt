b'# Boltons\n\n*boltons should be builtins.*\n\n<a href="https://boltons.readthedocs.io/en/latest/"><img src="https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat"></a>\n<a href="https://pypi.python.org/pypi/boltons"><img src="https://img.shields.io/pypi/v/boltons.svg"></a>\n<a href="https://anaconda.org/conda-forge/boltons"><img src="https://img.shields.io/conda/vn/conda-forge/boltons.svg"></a>\n<a href="https://pypi.python.org/pypi/boltons"><img src="https://img.shields.io/pypi/pyversions/boltons.svg"></a>\n<a href="http://calver.org"><img src="https://img.shields.io/badge/calver-YY.MINOR.MICRO-22bfda.svg"></a>\n\n**Boltons** is a set of over 230 BSD-licensed, pure-Python utilities\nin the same spirit as \xe2\x80\x94 and yet conspicuously missing from \xe2\x80\x94\n[the standard library][stdlib], including:\n\n  * [Atomic file saving][atomic], bolted on with [fileutils][fileutils]\n  * A highly-optimized [OrderedMultiDict][omd], in [dictutils][dictutils]\n  * *Two* types of [PriorityQueue][pq], in [queueutils][queueutils]\n  * [Chunked][chunked] and [windowed][windowed] iteration, in [iterutils][iterutils]\n  * Recursive data structure [iteration and merging][remap], with [iterutils.remap][iterutils.remap]\n  * Exponential backoff functionality, including jitter, through [iterutils.backoff][iterutils.backoff]\n  * A full-featured [TracebackInfo][tbinfo] type, for representing stack traces,\n    in [tbutils][tbutils]\n\n**[Full and extensive docs are available on Read The Docs.][rtd]** See\nwhat\'s new [by checking the CHANGELOG][changelog].\n\nBoltons is tested against Python 2.6, 2.7, 3.4, 3.5, 3.6, and 3.7, as well as CPython\n_nightly_ and PyPy/PyPy3.\n\n[stdlib]: https://docs.python.org/2.7/library/index.html\n[rtd]: https://boltons.readthedocs.org/en/latest/\n[changelog]: https://github.com/mahmoud/boltons/blob/master/CHANGELOG.md\n\n[atomic]: https://boltons.readthedocs.org/en/latest/fileutils.html#boltons.fileutils.atomic_save\n[omd]: https://boltons.readthedocs.org/en/latest/dictutils.html#boltons.dictutils.OrderedMultiDict\n[pq]: https://boltons.readthedocs.org/en/latest/queueutils.html#boltons.queueutils.PriorityQueue\n[chunked]: https://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.chunked\n[windowed]: https://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.windowed\n[tbinfo]: https://boltons.readthedocs.org/en/latest/tbutils.html#boltons.tbutils.TracebackInfo\n\n[fileutils]: https://boltons.readthedocs.org/en/latest/fileutils.html#module-boltons.fileutils\n[ioutils]: https://boltons.readthedocs.org/en/latest/ioutils.html#module-boltons.ioutils\n[dictutils]: https://boltons.readthedocs.org/en/latest/dictutils.html#module-boltons.dictutils\n[queueutils]: https://boltons.readthedocs.org/en/latest/queueutils.html#module-boltons.queueutils\n[iterutils]: https://boltons.readthedocs.org/en/latest/iterutils.html#module-boltons.iterutils\n[iterutils.remap]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.remap\n[iterutils.backoff]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.backoff\n[tbutils]: https://boltons.readthedocs.org/en/latest/tbutils.html#module-boltons.tbutils\n\n[remap]: http://sedimental.org/remap.html\n\n## Installation\n\nBoltons can be added to a project in a few ways. There\'s the obvious one:\n\n```bash\npip install boltons\n```\n\nThen, [thanks to PyPI][boltons_pypi], dozens of boltons are just an import away:\n\n```python\nfrom boltons.cacheutils import LRU\nmy_cache = LRU()\n```\n\nHowever, due to the nature of utilities, application developers might\nwant to consider other options, including vendorization of individual\nmodules into a project. Boltons is pure-Python and has no\ndependencies. If the whole project is too big, each module is\nindependent, and can be copied directly into a project. See the\n[Integration][integration] section of the docs for more details.\n\n[boltons_pypi]: https://pypi.python.org/pypi/boltons\n[integration]: https://boltons.readthedocs.org/en/latest/architecture.html#integration\n\n## Third-party packages\n\nThe majority of boltons strive to be "good enough" for a wide range of\nbasic uses, leaving advanced use cases to Python\'s [myriad specialized\n3rd-party libraries][pypi]. In many cases the respective ``boltons`` module\nwill describe 3rd-party alternatives worth investigating when use\ncases outgrow `boltons`. If you\'ve found a natural "next-step"\nlibrary worth mentioning, see the next section!\n\n[pypi]: https://pypi.python.org/pypi\n\n## Gaps\n\nFound something missing in the standard library that should be in\n`boltons`? Found something missing in `boltons`? First, take a\nmoment to read the very brief [architecture statement][architecture] to make\nsure the functionality would be a good fit.\n\nThen, if you are very motivated, submit [a Pull Request][prs]. Otherwise,\nsubmit a short feature request on [the Issues page][issues], and we will\nfigure something out.\n\n[architecture]: https://boltons.readthedocs.org/en/latest/architecture.html\n[issues]: https://github.com/mahmoud/boltons/issues\n[prs]: https://github.com/mahmoud/boltons/pulls\n'