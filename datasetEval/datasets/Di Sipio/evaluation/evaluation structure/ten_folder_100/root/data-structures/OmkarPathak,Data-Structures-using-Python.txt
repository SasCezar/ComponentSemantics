b'# Data-Structures-using-Python\nThis is my repository for Data Structures using Python.\nThis repository mainly aims at implementation of various Data Structures using Python.\n\nOmkar Pathak,<br />\nPune, Maharashtra, India.<br />\n\n# Arrays\n\n* [Arrays Concept](https://github.com/OmkarPathak/Data-Structures-using-Python/blob/master/Arrays/Arrays.ipynb)\n    * [Array implementation](Arrays/Arrays.py)\n    * [Reversing an Array](Arrays/P01_ReversingArray.py)\n    * [Array Rotation](Arrays/P02_ArrayRotation.py)\n    * [Get the missing number](Arrays/P03_GetMissingNumber.py)\n    * [Check the number that occurs odd number of times](Arrays/P04_OddNumberOfTimes.py)\n    * [Determine two elements in an array whose sum is equal to specified sum](Arrays/P05_CheckForPairSum.py)\n\n# Linked Lists\n\n* [Linked Lists Concept](https://github.com/OmkarPathak/Data-Structures-using-Python/blob/master/Linked%20Lists/Linked%20Lists.ipynb)\n    * [Singly Linked List implementation](Linked%20Lists/SinglyLinkedList.py)\n    * [Doubly Linked List implementation](Linked%20Lists/DoublyLinkedList.py)\n    * [Finding the length of linked list](Linked%20Lists/P01_FindingLengthOfLinkedList.py)\n    * [Reversing the linked list](Linked%20Lists/P02_ReversingLinkedList.py)\n\n# Stack\n\n* [Stack Concept](https://github.com/OmkarPathak/Data-Structures-using-Python/tree/master/Stack/Stack.ipynb)\n    * [Stack implementation](https://github.com/OmkarPathak/Data-Structures-using-Python/tree/master/Stack/Stack.py)\n    * [Infix to Postfix conversion](Stack/P01_InfixToPostfix.py)\n    * [Balanced Parenthesis](Stack/P02_BalancedParenthesis.py)\n    * [Decimal to Binary conversion using Stack](Stack/P03_DecimalToBinary.py)\n    * [Reversing a String using stack](Stack/P04_ReverseString.py)\n\n# Queue\n\n* [Queue Concept](https://github.com/OmkarPathak/Data-Structures-using-Python/tree/master/Queue/Queue.ipynb)\n    * [Queue implementation](Queue/Queue.py)\n    * [Circular Queue](Queue/CicularQueue.py)\n    * [Double Ended Queue](Queue/Deque.py)\n    * [Priority Queue](Queue/PriorityQueue.py)\n\n# Tree\n\n* [Tree Concept](https://github.com/OmkarPathak/Data-Structures-using-Python/blob/master/Trees/Tree.ipynb)\n    * [Tree implementation](Trees/Tree.py)\n    * [Binary Search Tree](Trees/BinarySearchTree.py)\n    * [Breadth First Traversal](Trees/P01_BreadthFirstTraversal.py)\n    * [Count Leaf Nodes](Trees/P02_CountLeafNodes.py)\n    * [Construct tree from inorder and preorder](Trees/P03_TreeFromInorderAndPreorder.py)\n    * [Finding root to leaf paths](Trees/P04_RootToLeafPaths.py)\n    * [Finding the inorder predecessor and successor](Trees/P05_InorderPredecessorAndSuccessor.py)\n\n# Graph\n\n* [Graph Concept](https://github.com/OmkarPathak/Data-Structures-using-Python/tree/master/Graph/Graph.ipynb)\n    * [Graph implementation](Graph/Graph.py)\n    * [Breadth First Search Traversal](Graph/P01_BreadthFirstSearch.py)\n    * [Depth First Search Traversal](Graph/P02_DepthFirstSearch.py)\n    * [Detect Cycle in Directed Graph](Graph/P03_DetectCycleInDirectedGraph.py)\n    * [Detect Cycle in Undirected Graph](Graph/P04_DetectCycleInUndirectedGraph.py)\n    * [Topologocal Sort](Graph/P05_TopologicalSort.py)\n    * [Prim\'s Algorithm using Adjacency Matrix](Graph/P06_Prim\'s-Algorithm.py)\n\n# Heap\n\n* [Heap Concept](https://github.com/OmkarPathak/Data-Structures-using-Python/blob/master/Heap/Heap.ipynb)\n    * [Heap implementation (Min Heap)](Heap/Heap.py)\n    * [Heap Sort](Heap/P01_HeapSort.py)\n    * [Implementing a Max Heap](Heap/P02_MaxHeap.py)\n\n# Dynamic Programming\n\n* [Fibonacci Series](Dynamic%20Programming/P01_Fibonnaci.py)\n* [Longest Increasing Subsequence](Dynamic%20Programming/P02_LongestIncreasingSubsequence.py)\n* [Longest Continuous Odd Subsequence](Dynamic%20Programming/P03_LongestContinuousOddSubsequence.py)\n\n# Donation\n\nIf you have found my softwares to be of any use to you, do consider helping me pay my internet bills. This would encourage me to create many such softwares :)\n\n| PayPal | <a href="https://paypal.me/omkarpathak27" target="_blank"><img src="https://www.paypalobjects.com/webstatic/mktg/logo/AM_mc_vs_dc_ae.jpg" alt="Donate via PayPal!" title="Donate via PayPal!" /></a> |\n|:-------------------------------------------:|:-------------------------------------------------------------:|\n| \xe2\x82\xb9 (INR)  | <a href="https://www.instamojo.com/@omkarpathak/" target="_blank"><img src="https://www.soldermall.com/images/pic-online-payment.jpg" alt="Donate via Instamojo" title="Donate via instamojo" /></a> |\n'