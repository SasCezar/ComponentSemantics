b'# Data Structures and Algorithms \nClean example implementations of data structures and algorithms written in different languages.\n<br><br>\n[![Gitter chat](https://badges.gitter.im/VAR-solutions/Algorithms.png)](https://gitter.im/VAR-solutions/Algorithms "Gitter chat")\n[![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg)](http://opensource.org/licenses/MIT)\n[![Issues](http://img.shields.io/github/issues/VAR-solutions/Algorithms.svg)](https://github.com/VAR-solutions/Algorithms/issues)\n#### List of implementations\n\n[Algorithms list(not updated)](#)\n\n## Contribution!\n * Contributions are always welcome. Language doesn\'t matter. Just make sure you\'re implementing an algorithm.\n * PRs are welcome. To begin developing, follow the structure:\n\n   > Algorithm-Type/algorithm_name/language-name/file_name.extension\n   \n   e.g\n   > Sorting/bubble_sort/python/bubble_sort.py\n\n * If there is an implementation of the same algorithm in your language, do not give a PR for that.\n * Please include a description for the algorithm that you are implementing. It doesn\'t matter if it\'s copied from somewhere as long as it helps people that are learning new algorithm.\n * Graphical examples would be very helpful too.\n * Don\'t forget to include tests.\n * Don\'t remove previous implementations of algorithms. Just add a new file with your own implementation.\n * Beautify and clean up your code for easier reading\n\n## Resources\n\n Curated list of resources dealing with algorithms.\n\n * **Sites**\n   * [Algorithms - Tutorials point](https://www.tutorialspoint.com/data_structures_algorithms/index.htm)\n   * [Algorithms - Princetone edu](http://algs4.cs.princeton.edu/home/)\n   * [Data structures and algorithms - Hackr](https://hackr.io/tutorials/learn-data-structures-algorithms)\n   * [Data science - Topcoder](https://www.topcoder.com/community/data-science/data-science-tutorials/)\n   * [Fundamentals Of Algorithms- Geeks For Geeks](http://www.geeksforgeeks.org/fundamentals-of-algorithms/)\n   * [Visual Algorithm - visualising data structures and algorithms through animation](https://visualgo.net/en)\n   * [Rosetta Code](http://rosettacode.org/wiki/Rosetta_Code)\n   * [GeeksforGeeks](https://www.geeksforgeeks.org)\n* **Online classes (Free)**\n  * Coursera \n      * [Introduction to algorithms Part 1](https://www.coursera.org/learn/algorithms-part1)\n      * [Algorithms specialization 4 courses](https://www.coursera.org/specializations/algorithms)\n   * Khan Academy \n     * [Algorithms](https://www.khanacademy.org/computing/computer-science/algorithms)\n   * Udacity\n      * [Computability, Complexity & Algorithms](https://www.udacity.com/course/computability-complexity-algorithms--ud061)\n      * [Intro to algorithms](https://www.udacity.com/course/intro-to-algorithms--cs215)\n   * EdX\n      * [Algorithms](https://www.edx.org/course/algorithms-iitbombayx-cs213-3x-0)\n      * [Algorithms and data structures](https://www.edx.org/course/algorithms-data-structures-microsoft-dev285x)\n     * [Algorithm Design and Analysis](https://courses.edx.org/courses/course-v1:PennX+SD3x+2T2017/course/)\n     * [Graph Algorithms](https://www.edx.org/course/graph-algorithms-uc-san-diegox-algs202x)\n     * [Data Structures](https://www.edx.org/course/data-structures-uc-san-diegox-algs201x)\n      * [Algorithmic Design and Techniques](https://www.edx.org/course/algorithmic-design-techniques-uc-san-diegox-algs200x)\n     * [String Processing and Pattern Matching Algorithms](https://www.edx.org/course/string-processing-pattern-matching-uc-san-diegox-algs204x)\n     * [Graph Algorithms in Genome Sequencing](https://www.edx.org/course/graph-algorithms-genome-sequencing-uc-san-diegox-algs206x)\n\n     * [Algorithms and Data Structures Capstone](https://www.edx.org/course/algorithms-data-structures-capstone-uc-san-diegox-algs207x)\n     * [Data Structures](https://www.youtube.com/user/mycodeschool)\n     * [Algorithms and Data Structures Capstone](https://www.edx.org/course/algorithms-data-structures-capstone-uc-san-diegox-algs207x) \n     * [Data Structures and Algorithms](https://www.programiz.com/dsa)\n * **Coding Practice Sites**\n    * [HackerRank](https://www.hackerrank.com/)\n    * [HackerEarth](https://www.hackerearth.com/)\n    * [SPOJ](http://www.spoj.com/)\n    * [TopCoder](https://www.topcoder.com/)\n    * [CodeChef](https://www.codechef.com/)\n    * [Codeforces](http://codeforces.com/)\n    * [Project Euler](https://projecteuler.net/)\n    * [LeetCode](https://leetcode.com/)\n    * [CodinGame](https://www.codingame.com/)\n    * [CodeWars](https://codewars.com/)\n    * [Coderbyte](https://www.coderbyte.com/)\n    * [HireVue](https://www.hirevue.com/)\n    * [FreeCodeCamp](https://www.freecodecamp.org/)\n    * [CodeSignal](https://codesignal.com/)\n    \n# Project Maintainers.\n* [Vishal Gaur](https://github.com/i-vishi):tada:<br>\n* [Ravi Varshney](https://github.com/ravivarshney01):tada:<br>\n* [Ananya Tewari](https://github.com/antew7):tada:<br>\n'