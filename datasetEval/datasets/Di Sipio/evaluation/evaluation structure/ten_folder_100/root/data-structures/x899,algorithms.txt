b'# Algorithms\nData Structure Libraries and Algorithms implementation in Go\n\n[![GoDoc](https://godoc.org/github.com/x899/algorithms?status.svg)](https://godoc.org/github.com/x899/algorithms) [![Go Report Card](https://goreportcard.com/badge/github.com/x899/algorithms)](https://goreportcard.com/report/github.com/x899/algorithms)\n\n**Disclaimer**<br />\nThis repository is meant to be used as a reference to learn data structure and\nalgorithm in Go programming language.<br />To reduce unnecessary language\ncomplexity, all the programs only uses integer or string dataset.\n\n**Documentation**<br />\n[Click to view goDoc Documentation](https://godoc.org/github.com/x899/algorithms)\n\n## Data structure\n* Sorting Algorithms\n\t* [Bubble Sort](https://en.wikipedia.org/wiki/Bubble_sort)\n\t* [Selection Sort](https://en.wikipedia.org/wiki/Selection_sort)\n\t* [Insertion Sort](https://en.wikipedia.org/wiki/Insertion_sort)\n\t* [Merge Sort](https://en.wikipedia.org/wiki/Merge_sort)\n\t* [Quick Sort](https://en.wikipedia.org/wiki/Quicksort)\n\t* [Quick Select](https://en.wikipedia.org/wiki/Quickselect)\n\t* [Shell Sort](https://en.wikipedia.org/wiki/Shellsort)\n\t* [Heap Sort](https://en.wikipedia.org/wiki/Heapsort)\n* [Stack (Array Implementation)](https://en.wikipedia.org/wiki/Stack_(abstract_data_type))\n\t* Infix to Postfix\n\t* Infix to Prefix\n\t* Infix Evaluation\n* [Queue (Array Implementation)](https://en.wikipedia.org/wiki/Queue_(abstract_data_type))\n* LinkedList\n\t* [Singly Linked List](https://en.wikipedia.org/wiki/Linked_list)\n\t* [Doubly Linked List](https://en.wikipedia.org/wiki/Doubly_linked_list)\n* [Shuffle (Using Fisher-Yates (Knuth) shuffling algorithm)](https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle)\n* [Binary Search Tree](https://en.wikipedia.org/wiki/Binary_search_tree)\n* [Binary Heap](https://en.wikipedia.org/wiki/Binary_heap)\n    * Min Heap\n    * Max Heap\n* [Red Black Tree](https://en.wikipedia.org/wiki/Red%E2%80%93black_tree)\n* Search\n    * [Binary Search](https://en.wikipedia.org/wiki/Binary_search_algorithm)\n\n## TO DO\n* Vertical Order Traversal of Tree\n* Order Statistics of Tree\n* Red Black Tree Deletion\n* B-Tree\n* Deque using circular array\n* Tree Varient\n* Graph Varient\n* [cocktail sort](https://en.wikipedia.org/wiki/Cocktail_shaker_sort)\n* [gnome sort](https://en.wikipedia.org/wiki/Gnome_sort)\n* [comb sort](https://en.wikipedia.org/wiki/Comb_sort)\n* [odd-even sort](https://en.wikipedia.org/wiki/Odd%E2%80%93even_sort)\n* [counting sort](https://en.wikipedia.org/wiki/Counting_sort)\n\n## Contribution\nFeel Free to contribute.<br />\nPlease follow standard GoLang Guidelines.\n'