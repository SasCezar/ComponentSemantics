b"# algorithms.js\n\n[![Build Status](https://travis-ci.org/felipernb/algorithms.js.svg?branch=master)](https://travis-ci.org/felipernb/algorithms.js)\n[![Coverage Status](https://coveralls.io/repos/github/felipernb/algorithms.js/badge.svg?branch=master)](https://coveralls.io/github/felipernb/algorithms.js?branch=master)\n[![Dependency Status](https://david-dm.org/felipernb/algorithms.js.svg)](https://david-dm.org/felipernb/algorithms.js)\n[![devDependency Status](https://david-dm.org/felipernb/algorithms.js/dev-status.svg)](https://david-dm.org/felipernb/algorithms.js#info=devDependencies)\n[![Inline docs](http://inch-ci.org/github/felipernb/algorithms.js.svg?branch=master)](http://inch-ci.org/github/felipernb/algorithms.js)\n[![npm](https://img.shields.io/npm/dt/algorithms.svg?maxAge=2592000)](https://www.npmjs.com/package/algorithms)\n\n![](http://www.quickmeme.com/img/8d/8d30a19413145512ad5a05c46ec0da545df5ed79e113fcf076dc03c7514eb631.jpg)\n\n\n## Atwood's Law applied to CS101.\n\nClassic algorithms and data structures implemented in JavaScript, you know... FOR SCIENCE.\n\n### Installing\n```\nnpm install --save algorithms\n```\n\n### Contents\n\n#### Data Structures\n\n```javascript\nrequire('algorithms/data_structures');\n// or\nrequire('algorithms').DataStructures;\n```\n* AVLTree\n* BST\n* DisjointSetForest\n* FenwickTree\n* Graph\n* HashTable\n* Heap\n  - MaxHeap\n  - MinHeap\n* LinkedList\n* PriorityQueue\n* Queue\n* Set (HashSet)\n* Stack\n* Treap\n\n#### Geometry algorithms\n\n```javascript\nrequire('algorithms/geometry');\n// or\nrequire('algorithms').Geometry;\n```\n\n* BezierCurve\n\n#### Graph algorithms\n\n```javascript\nrequire('algorithms/graph');\n// or\nrequire('algorithms').Graph;\n```\n\n* breadthFirstSearch\n* depthFirstSearch\n* eulerPath\n* topologicalSort\n\n##### Shortest path\n* bellmanFord\n* bfsShortestPath\n* dijkstra\n* floydWarshall\n* SPFA (Shortest Path Faster Algorithm)\n\n##### Minimum spanning tree\n* prim\n* kruskal\n\n#### Math algorithms\n\n```javascript\nrequire('algorithms/math');\n// or\nrequire('algorithms').Math;\n```\n* collatzConjecture\n* extendedEuclidean\n* fastPower\n* fibonacci\n* findDivisors\n* fisherYates\n* gcd (Greatest common divisor)\n* greatestDifference\n* lcm (Least common multiple)\n* newtonSqrt\n* nextPermutation\n* powerSet\n* reservoirSampling\n* shannonEntropy\n\n#### Search algorithms\n\n```javascript\nrequire('algorithms/search');\n// or\nrequire('algorithms').Search;\n```\n\n* bfs (breadth-first search for binary trees)\n* binarySearch\n* dfs (depth-first search for binary trees)\n * inOrder (default)\n * postOrder\n * preOrder\n\n#### Sorting algorithms\n\n```javascript\nrequire('algorithms/sorting');\n// or\nrequire('algorithms').Sorting;\n```\n\n* bubbleSort\n* countingSort\n* heapSort\n* insertionSort\n* quicksort\n* radixSort\n* selectionSort\n* shellSort\n* shortBubbleSort\n\n#### String algorithms\n\n```javascript\nrequire('algorithms/string');\n// or\nrequire('algorithms').String;\n```\n\n* hamming\n* huffman\n * decode\n * encode\n* knuthMorrisPratt\n* levenshtein\n* longestCommonSubsequence\n* longestCommonSubstring\n* rabinKarp\n\n### Contributing\n\nThis project uses [Google JavaScript Style Guide](https://google.github.io/styleguide/javascriptguide.xml) which can be a bit strict, but is really helpful in order to have more readable and less error-prone code\n"