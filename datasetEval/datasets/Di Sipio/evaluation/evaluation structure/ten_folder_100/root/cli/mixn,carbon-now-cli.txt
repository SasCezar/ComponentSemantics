b'# [![Carbon CLI](static/banner.png)](https://github.com/mixn/carbon-now-cli)\n\n> \xf0\x9f\x8e\xa8 Beautiful images of your code \xe2\x80\x94 from right inside your terminal.\n\n[![Build Status](https://badgen.net/travis/mixn/carbon-now-cli?icon=travis)](https://travis-ci.org/mixn/carbon-now-cli) [![XO code style](https://badgen.net/badge/code%20style/XO?color=cyan)](https://github.com/xojs/xo) [![Featured in awesome-nodejs](https://awesome.re/badge.svg)](https://github.com/sindresorhus/awesome-nodejs#command-line-apps) [![Twitter Follow](https://img.shields.io/twitter/follow/mixn.svg?style=social&label=Follow)](https://twitter.com/mixn) [![Maintenance](https://badgen.net/badge/Maintained%3F/Yes/green)](https://github.com/mixn/carbon-now-cli/graphs/commit-activity) [![MIT license](https://badgen.net/badge/License/MIT/blue)](https://github.com/mixn/carbon-now-cli/blob/master/license)\n\n## Table of Contents\n\n- [Description](#description)\n- [Features](#features)\n- [Installation](#installation)\n- [Usage](#usage)\n- [Examples](#examples)\n- [Presets](#presets)\n- [License](#license)\n\n## Description\n\n[carbon.now.sh](https://carbon.now.sh/) by [@dawn_labs](https://twitter.com/dawn_labs) is a wonderful tool that lets you generate beautiful images of your source code through an intuitive UI, while letting you customize aspects like fonts, themes, window controls and much more.\n\n`carbon-now-cli` gives you the **full power of Carbon** \xe2\x80\x94 right at your fingertips, **inside the terminal**.\n\nGenerate beautiful images from a source file, or *sections of a source file*, by running a single command.\n\nWant to customize **everything** before generating the image? Run it in \xe2\x9a\xa1\xef\xb8\x8f **interactive mode** \xe2\x9a\xa1\xef\xb8\x8f. \xf0\x9f\x98\x8e\n\n![Basic example](static/demo.gif)\n\n## Features\n\n- \xf0\x9f\x96\xbc Downloads the **real**, **high-quality** image (*no DOM screenshots*)\n- \xe2\x9c\xa8 Detects file type **automatically**\n- \xf0\x9f\x97\x82 Supports **all** file extensions supported by [carbon.now.sh](https://carbon.now.sh) and [more](https://github.com/mixn/carbon-now-cli/blob/master/src/helpers/language-map.json)\n- \xe2\x9a\xa1\xef\xb8\x8f [Interactive mode](#fully-customized) via `--interactive`\n- \xf0\x9f\x8e\x92 [Presets](#presets): save and reuse your favorite settings\n- \xf0\x9f\x96\xb1 [Selective highlighting](#selective) via `--start` and `--end`\n- \xf0\x9f\x93\x8e [Copies image to clipboard](#copying-to-clipboard) via `--copy` (**cross-OS** \xf0\x9f\x98\xb1)\n- \xf0\x9f\x93\x9a Accepts [file, `stdin` or clipboard content](#input-sources) as input\n- \xf0\x9f\x90\xb6 Displays image directly in supported terminals\n- \xe2\x8f\xb1 Reports each step and therefore *shortens the wait*\n- \xf0\x9f\x91\x80 Saves to [given location](#full-example) or [only opens in browser](#full-example) for manual finish\n- \xf0\x9f\x8c\x88 Supports saving as `.png` or `.svg` \xe2\x80\x94 just like Carbon\n- \xf0\x9f\x93\x8f Supports `2x`, `4x` or `1x` resolutions \xe2\x80\x94 just like Carbon\n- \xe2\x9c\x85 Tested\n- \xe2\x9b\x8f Maintained\n\n## Installation\n\n#### npm\n```\n$ npm i -g carbon-now-cli\n```\n\n#### yarn\n```\n$ yarn global add carbon-now-cli\n```\n\n#### npx\n```\n$ npx carbon-now-cli <file>\n```\n\n#### Requirements\n\n![Minimum Node.js version](https://badgen.net/badge/node/%3E=8.3/green)\n\n## Usage\n\n```\n$ carbon-now --help\n\nBeautiful images of your code \xe2\x80\x94 from right inside your terminal.\n\nUsage\n  $ carbon-now <file>\n  $ pbpaste | carbon-now\n  $ carbon-now --from-clipboard\n\nOptions\n  -s, --start          Starting line of <file>\n  -e, --end            Ending line of <file>\n  -i, --interactive    Interactive mode\n  -l, --location       Image save location, default: cwd\n  -t, --target         Image name, default: original-hash.{png|svg}\n  -o, --open           Open in browser instead of saving\n  -c, --copy           Copy image to clipboard\n  -p, --preset         Use a saved preset\n  -h, --headless       Use only non-experimental Puppeteer features\n  --config             Use a different, local config (read-only)\n  --from-clipboard     Read input from clipboard instead of file\n\nExamples\n  See: https://github.com/mixn/carbon-now-cli#examples\n```\n\n## Examples\n\nAssuming you have a file `unfold.js` with this content\n\n```javascript\n// Example from https://carbon.now.sh/\nconst unfold = (f, seed) => {\n  const go = (f, seed, acc) => {\n    const res = f(seed)\n    return res ? go(f, res[1], acc.concat([res[0]])) : acc\n  }\n  return go(f, seed, [])\n};\n```\n\nand you\xe2\x80\x99d like to make a beautiful image out of it. You could approach this in several ways.\n\n#### Basic\n\n```\n$ carbon-now unfold.js\n```\n\nTakes the entire source of `unfold.js`, uses Carbon\xe2\x80\x99s default settings and saves as `.png` into your `cwd`.\n\n**Result**:\n\n![Basic example](static/example-1.png)\n\n**Note**: `carbon-now` will be smart enough to reuse your last used settings, instead of the default ones. \xf0\x9f\xa4\x93\n\n#### Fully customized\n\n```\n$ carbon-now unfold.js -i\n```\n\nLaunches an interactive mode, prompting questions, allowing you to customize every aspect of Carbon, like syntax theme, font-family, padding, drop-shadow, etc.\n\nGiven this input\xe2\x80\xa6\n\n![Example 2, Input](static/example-2-1.png)\n\n\xe2\x80\xa6the result will look like so \xf0\x9f\x98\x8d:\n\n![Example 2, Output](static/example-2-2.png)\n\nIf you\xe2\x80\x99re not sure what each question, e.g. \xe2\x80\x9cMake squared image?\xe2\x80\x9d, refers to, just confirm by hitting **Enter** \xe2\x80\x94 it will default to a sensible, nice-looking thing.\n\nIf needed, you can always check the [default settings](https://github.com/mixn/carbon-now-cli/blob/master/src/helpers/default-settings.js).\n\n#### Selective\n\n```\n$ carbon-now unfold.js -s 3 -e 6\n```\n\nReads and creates an image based on lines `3` to `6`, instead of the entire file. Will throw an error if `-s` > `-e`.\n\nSelective mode can of course be combined with interactive mode, just with like any other option. \xf0\x9f\x98\x8a\n\n**Result**:\n\n![Example 3](static/example-3.png)\n\n**Note**: `carbon-now` will be smart enough to reuse your last used settings, instead of the default ones. \xf0\x9f\xa4\x93\n\n#### Copying to clipboard\n\n![Copying to Clipboard](static/clipboard-demo.gif)\n\nIt is [sometimes desired to just put the image in the clipboard](https://github.com/mixn/carbon-now-cli/issues/3#issue-339776815), so that it can be instantly pasted into other apps (like Keynote \xf0\x9f\x92\xbb or Twitter \xf0\x9f\x90\xa6). This is what the `--copy`/`-c` flag is for.\n\n```\n$ carbon-now unfold.js -c\n```\n\nwill copy the image to clipboard instead of downloading it to a given directory.\n\nPlease be aware that this requires some binaries to be present on certain OS.\n\n##### Linux\n\n[`xclip`](https://linux.die.net/man/1/xclip) is required. You can install it via\n\n```\nsudo apt-get install xclip\n```\n\n##### Windows\n\n[`NirCmd`](http://www.nirsoft.net/utils/nircmd.html) is required. It can be installed via\n\n```\nchoco install nircmd\n```\n\nAlso make sure the `nircmd` command is globally accessible/inside your Windows directory.\n\n#### Input Sources\n\nYou\xe2\x80\x99ll sometimes find yourself in a situation where you\xe2\x80\x99d like to create an image based on a piece of code, but don\xe2\x80\x99t want to be creating a file for it first.\n\nIn addition to files, `carbon-now-cli` therefore also accepts input coming from `stdin` or the clipboard.\n\n##### `stdin`\n\n```\n$ pbpaste | carbon-now\n$ echo \'<h1>Hi</h1>\' | carbon-now\n```\n\n##### Clipboard\n\n```\n$ carbon-now --from-clipboard\n```\n\n#### Full Example\n\nFor demonstration purposes, here is an example using all options.\n\n```\n$ carbon-now unfold.js -s 3 -e 6 -l ~/Desktop -t example-23 -i\n```\n\nThis saves a beautiful image of lines `3` to `6` to `~/Desktop/example-23.png`, after accepting custom wishes via interactive mode.\n\nIf you\xe2\x80\x99re not sure how exactly the image will turn out, you can always use `-o` or `--open`.\n\n```\n$ carbon-now unfold.js -s 3 -e 6 -i -o\n```\n\nThis will open the image in the browser for final touches, instead of saving it immediately. \xf0\x9f\x98\x8c\n\n## Presets\n\n#### About\n\nThe most requested feature after `carbon-now-cli`\xe2\x80\x99s initial release has been the support for **reusable settings**, to not having to go through the entire process of answering all questions in interactive mode each time.\n\nPresets are officially included as of `v1.1.0` of `carbon-now-cli`. \xf0\x9f\x8e\x89\n\n#### Creating a preset\n\nHowever you use the `carbon-now` command, a `~/.carbon-now.json` file will be created for you. This is where all your presets and the settings of the last interactive run will live.\n\nWhen running `carbon-now` with `-i`, you\xe2\x80\x99ll be asked the following two questions last:\n\n![Presets 1](static/presets-1.png)\n\nAnswering with yes and naming the preset (in this case `presentation`) will result in the preset being saved to `~/.carbon-now.json`. In this particular case, `~/.carbon-now.json` will look like so:\n\n```\n{\n  "latest-preset": {\n    "t": "base16-light",\n    "bg": "none",\n    "wt": "none",\n    "wc": true,\n    "fm": "Inconsolata",\n    "fs": "18px",\n    "ln": true,\n    "ds": true,\n    "dsyoff": "3px",\n    "dsblur": "5px",\n    "wa": true,\n    "pv": "15px",\n    "ph": "15px",\n    "si": false,\n    "wm": false,\n    "es": "2x",\n    "type": "png"\n  },\n  "presentation": {\n    "t": "base16-light",\n    "bg": "none",\n    "wt": "none",\n    "wc": true,\n    "fm": "Inconsolata",\n    "fs": "18px",\n    "ln": true,\n    "ds": true,\n    "dsyoff": "3px",\n    "dsblur": "5px",\n    "wa": true,\n    "pv": "15px",\n    "ph": "15px",\n    "si": false,\n    "wm": false,\n    "es": "2x",\n    "type": "png"\n  }\n}\n```\n\n`latest-preset` will be overwritten after each interactive run. `presentation` is meant to stay until you eventually decide to delete it manually.\n\n#### Using a saved preset\n\nReusing presets is as easy and straight-forward as:\n\n```\ncarbon-now unfold.js -p <name-of-preset>\n```\n\nIf a given preset or `~/.carbon-now.json` doesn\xe2\x80\x99t exist, `carbon-now-cli` will fall back to the [default settings](https://github.com/mixn/carbon-now-cli/blob/master/src/helpers/default-settings.js).\n\nTaken the `presentation` preset we have created above, this is all we have to do:\n\n```\ncarbon-now unfold.js -p presentation\n```\n\n**Result**:\n\n![Presets 1](static/presets-2.png)\n\n#### Reusing the last used settings\n\n*It just works!* \xe2\x84\xa2 \xf0\x9f\x8e\x89\n\nAny time you use `-i`, `carbon-now-cli` will automatically reuse those settings for its next run.\n\nSo you can `carbon-now <file> -i` and `carbon-now <file>` from there on \xe2\x80\x94 the output will always look as pretty as the one where you\xe2\x80\x99ve used `-i`. \xf0\x9f\x98\x8a\n\n#### Local configs\n\nIt is possible to use local configuration files via the `--config` flag.\n\nThis is convenient if you\xe2\x80\x99re using `carbon-now-cli` via a script and would like to share presets among the users of your project.\n\n```\ncarbon-now unfold.js --config local-config.json -p dark\n```\n\nLocal configs differ from `~/.carbon-now.json` in the sense that they behave in a **read-only** manner, hence:\n\n1. `local-config.json` won\xe2\x80\x99t be created if it doesn\xe2\x80\x99t exist\n2. `latest-preset` will not be written to `local-config.json`\n\n## License\n\nMIT \xc2\xa9 [Milo\xc5\xa1 Sutanovac](https://twitter.com/mixn)\n'