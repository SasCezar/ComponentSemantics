b'# httpstat\n\n![screenshot](screenshot.png)\n\nhttpstat visualizes `curl(1)` statistics in a way of beauty and clarity.\n\nIt is a **single file\xf0\x9f\x8c\x9f** Python script that has **no dependency\xf0\x9f\x91\x8f** and is compatible with **Python 3\xf0\x9f\x8d\xbb**.\n\n\n## Installation\n\nThere are three ways to get `httpstat`:\n\n- Download the script directly: `wget https://raw.githubusercontent.com/reorx/httpstat/master/httpstat.py`\n\n- Through pip: `pip install httpstat`\n\n- Through homebrew (macOS only): `brew install httpstat`\n\n> For Windows users, @davecheney\'s [Go version](https://github.com/davecheney/httpstat) is suggested. \xe2\x86\x92 [download link](https://github.com/davecheney/httpstat/releases)\n\n## Usage\n\nSimply:\n\n```bash\npython httpstat.py httpbin.org/get\n```\n\nIf installed through pip or brew, you can use `httpstat` as a command:\n\n```bash\nhttpstat httpbin.org/get\n```\n\n### cURL Options\n\nBecause `httpstat` is a wrapper of cURL, you can pass any cURL supported option after the url (except for `-w`, `-D`, `-o`, `-s`, `-S` which are already used by `httpstat`):\n\n```bash\nhttpstat httpbin.org/post -X POST --data-urlencode "a=b" -v\n```\n\n### Environment Variables\n\n`httpstat` has a bunch of environment variables to control its behavior.\nHere are some usage demos, you can also run `httpstat --help` to see full explanation.\n\n<details>\n<summary><strong><code>HTTPSTAT_SHOW_BODY</code></strong></summary>\n\nSet to `true` to show response body in the output, note that body length\nis limited to 1023 bytes, will be truncated if exceeds. Default is `false`.\n</details>\n\n\n<details>\n<summary><strong><code>HTTPSTAT_SHOW_IP</code></strong></summary>\n\nBy default httpstat shows remote and local IP/port address.\nSet to `false` to disable this feature. Default is `true`.\n</details>\n\n\n<details>\n<summary><strong><code>HTTPSTAT_SHOW_SPEED</code></strong></summary>\n\nSet to `true` to show download and upload speed.  Default is `false`.\n\n```bash\nHTTPSTAT_SHOW_SPEED=true httpstat http://cachefly.cachefly.net/10mb.test\n\n...\nspeed_download: 3193.3 KiB/s, speed_upload: 0.0 KiB/s\n```\n</details>\n\n\n<details>\n<summary><strong><code>HTTPSTAT_SAVE_BODY</code></strong></summary>\n\nBy default httpstat stores body in a tmp file,\nset to `false` to disable this feature. Default is `true`\n</details>\n\n\n<details>\n<summary><strong><code>HTTPSTAT_CURL_BIN</code></strong></summary>\n\nIndicate the cURL bin path to use. Default is `curl` from current shell $PATH.\n\nThis exampe uses brew installed cURL to make HTTP2 request:\n\n```bash\nHTTPSTAT_CURL_BIN=/usr/local/Cellar/curl/7.50.3/bin/curl httpstat https://http2.akamai.com/ --http2\n\nHTTP/2 200\n...\n```\n\n> cURL must be compiled with nghttp2 to enable http2 feature\n> ([#12](https://github.com/reorx/httpstat/issues/12)).\n</details>\n\n\n<details>\n<summary><strong><code>HTTPSTAT_DEBUG</code></strong></summary>\n\nSet to `true` to see debugging logs. Default is `false`\n</details>\n\n\nFor convenience, you can export these environments in your `.zshrc` or `.bashrc`,\nexample:\n\n```bash\nexport HTTPSTAT_SHOW_IP=false\nexport HTTPSTAT_SHOW_SPEED=true\nexport HTTPSTAT_SAVE_BODY=false\n```\n\n## Related Projects\n\nHere are some implementations in various languages:\n\n\n- Go: [davecheney/httpstat](https://github.com/davecheney/httpstat)\n\n  This is the Go alternative of httpstat, it\'s written in pure Go and relies no external programs. Choose it if you like solid binary executions (actually I do).\n\n- Go (library): [tcnksm/go-httpstat](https://github.com/tcnksm/go-httpstat)\n\n  Other than being a cli tool, this project is used as library to help debugging latency of HTTP requests in Go code, very thoughtful and useful, see more in this [article](https://medium.com/@deeeet/trancing-http-request-latency-in-golang-65b2463f548c#.mm1u8kfnu)\n\n- Bash: [b4b4r07/httpstat](https://github.com/b4b4r07/httpstat)\n\n  This is what exactly I want to do at the very beginning, but gave up due to not confident in my bash skill, good job!\n\n- Node: [yosuke-furukawa/httpstat](https://github.com/yosuke-furukawa/httpstat)\n\n  [b4b4r07](https://twitter.com/b4b4r07) mentioned this in his [article](http://www.tellme.tokyo/entry/2016/09/25/213810), could be used as a HTTP client also.\n\n- PHP: [talhasch/php-httpstat](https://github.com/talhasch/php-httpstat)\n\n  The PHP implementation by @talhasch\n\nSome code blocks in `httpstat` are copied from other projects of mine, have a look:\n\n- [reorx/python-terminal-color](https://github.com/reorx/python-terminal-color) Drop-in single file library for printing terminal color.\n\n- [reorx/getenv](https://github.com/reorx/getenv) Environment variable definition with type.\n'