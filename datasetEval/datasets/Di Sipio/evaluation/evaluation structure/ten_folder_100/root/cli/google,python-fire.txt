b'# Python Fire [![PyPI](https://img.shields.io/pypi/pyversions/fire.svg?style=plastic)](https://github.com/google/python-fire) [![PyPI version](https://badge.fury.io/py/fire.svg)](https://badge.fury.io/py/fire)\n_Python Fire is a library for automatically generating command line interfaces\n(CLIs) from absolutely any Python object._\n\n- Python Fire is a simple way to create a CLI in Python. [[1]](docs/benefits.md#simple-cli)\n- Python Fire is a helpful tool for developing and debugging Python code. [[2]](docs/benefits.md#debugging)\n- Python Fire helps with exploring existing code or turning other people\'s code\ninto a CLI. [[3]](docs/benefits.md#exploring)\n- Python Fire makes transitioning between Bash and Python easier. [[4]](docs/benefits.md#bash)\n- Python Fire makes using a Python REPL easier by setting up the REPL with the\nmodules and variables you\'ll need already imported and created. [[5]](docs/benefits.md#repl)\n\n\n## Installation\n\nTo install Python Fire with pip, run: `pip install fire`\n\nTo install Python Fire with conda, run: `conda install fire -c conda-forge`\n\nTo install Python Fire from source, first clone the repository and then run:\n`python setup.py install`\n\n\n## Basic Usage\n\nYou can call `Fire` on any Python object:<br>\nfunctions, classes, modules, objects, dictionaries, lists, tuples, etc.\nThey all work!\n\nHere\'s an example of calling Fire on a function.\n\n```python\nimport fire\n\ndef hello(name="World"):\n  return "Hello %s!" % name\n\nif __name__ == \'__main__\':\n  fire.Fire(hello)\n```\n\nThen, from the command line, you can run:\n\n```bash\npython hello.py  # Hello World!\npython hello.py --name=David  # Hello David!\npython hello.py --help  # Shows usage information.\n```\n\nHere\'s an example of calling Fire on a class.\n\n```python\nimport fire\n\nclass Calculator(object):\n  """A simple calculator class."""\n\n  def double(self, number):\n    return 2 * number\n\nif __name__ == \'__main__\':\n  fire.Fire(Calculator)\n```\n\nThen, from the command line, you can run:\n\n```bash\npython calculator.py double 10  # 20\npython calculator.py double --number=15  # 30\n```\n\nTo learn how Fire behaves on functions, objects, dicts, lists, etc, and to learn\nabout Fire\'s other features, see the [Using a Fire CLI page](docs/using-cli.md).\n\nFor additional examples, see [The Python Fire Guide](docs/guide.md).\n\n\n## Why is it called Fire?\n\nWhen you call `Fire`, it fires off (executes) your command.\n\n\n## Where can I learn more?\n\nPlease see [The Python Fire Guide](docs/guide.md).\n\n\n## Reference\n\n| Setup   | Command             | Notes\n| :------ | :------------------ | :---------\n| install | `pip install fire`  |\n\n| Creating a CLI | Command                | Notes\n| :--------------| :--------------------- | :---------\n| import         | `import fire`          |\n| Call           | `fire.Fire()`          | Turns the current module into a Fire CLI.\n| Call           | `fire.Fire(component)` | Turns `component` into a Fire CLI.\n\nUsing a CLI                                     | Command                                 | Notes\n:---------------------------------------------- | :-------------------------------------- | :----\n[Help](docs/using-cli.md#help-flag)             | `command --help` or `command -- --help` |\n[REPL](docs/using-cli.md#interactive-flag)      | `command -- --interactive`              | Enters interactive mode.\n[Separator](docs/using-cli.md#separator-flag)   | `command -- --separator=X`              | Sets the separator to `X`. The default separator is `-`.\n[Completion](docs/using-cli.md#completion-flag) | `command -- --completion [shell]`       | Generates a completion script for the CLI.\n[Trace](docs/using-cli.md#trace-flag)           | `command -- --trace`                    | Gets a Fire trace for the command.\n[Verbose](docs/using-cli.md#verbose-flag)       | `command -- --verbose`                  |\n\n_Note that these flags are separated from the Fire command by an isolated `--`._\n\n## License\n\nLicensed under the\n[Apache 2.0](https://github.com/google/python-fire/blob/master/LICENSE) License.\n\n## Disclaimer\n\nThis is not an official Google product.\n'