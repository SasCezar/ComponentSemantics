b'# IntelliJ-HCL plugin\n\nProvides [HCL language](https://github.com/hashicorp/hcl) and [Terraform](https://terraform.io) configuration files (`.tf`) support for [IntelliJ Platform](https://www.jetbrains.org/pages/viewpage.action?pageId=983889)-based IDEs\n\nThe HCL format is used for [Nomad](https://www.nomadproject.io/)(`.nomad` files).\n\n[Plugin page](https://plugins.jetbrains.com/plugin/7808) in [IntelliJ platform plugin repository](https://plugins.jetbrains.com).\n\n### Features:\n##### For both .hcl and .tf file formats:\n* Syntax highlighting\n* Structure outline in the \'Structure\' tool window\n* Code formatter with the \'Reformat code\' action available\n* Code folding\n* Comment/Uncomment action\n\n#### Terraform configs (.tf) files\n* Interpolations syntax highlighting\n* (WIP) Properties validation (according to the properties required for resource/provider, type checking)\n* (WIP) Go to definition from resource to provider\n\n#### Terraform configs Interpolation Language\n* Syntax highlighting\n* Autocompletion for [predefined methods](https://www.terraform.io/docs/configuration/interpolation.html) \n* (WIP) Go to declaration on resources, providers, properties, etc.\n\n\n### Planned features:\n#### Terraform configs (.tf) files\n* Find usages for resources, providers, variables\n\n#### Terraform configs Interpolation Language\n\n\n### Terraform External Metadata\n\nStarting from version 0.6.14 it\'s possible to use external source of Terraform model.\nPreviously plugins updates were necessary once something was updated in Terraform itself or providers.\n\nPlugin reads metadata from specially-formatted json files located at (in order):\n * `TERRAFORM_GLOBAL_DIR/schemas` (intended for schemas for your custom providers/provisioners) and \n * `TERRAFORM_GLOBAL_DIR/metadata-repo/terraform/model` (semi-automatically updated schemas) and\n * Plugin itself\n\nHere `TERRAFORM_GLOBAL_DIR` stands for `$HOME/.terraform.d` on Linux/macOS and `%APPDATA%/terraform.d` on Windows.\n\n:information_source: Recommended approach is to clone [special repo](https://github.com/VladRassokhin/terraform-metadata) as `TERRAFORM_GLOBAL_DIR/metadata-repo` \nand later update it from time to time.\n\n:warning: As of plugin version 0.6.14 IntelliJ restart is required once metadata is updated on disk\n\nLinux/macOS user may use commands like:\n```bash\n# To initial clone\nmkdir -p "$HOME/.terraform.d/"\ngit clone https://github.com/VladRassokhin/terraform-metadata "$HOME/.terraform.d/metadata-repo"\n\n# To update metadata\ngit -C "$HOME/.terraform.d/metadata-repo" pull\n# Don\'t forget to restart IntelliJ after that\n```'