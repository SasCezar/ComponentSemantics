b'Terraform Provider\n==================\n\n- Website: https://www.terraform.io\n- [![Gitter chat](https://badges.gitter.im/hashicorp-terraform/Lobby.svg)](https://gitter.im/hashicorp-terraform/Lobby)\n- Mailing list: [Google Groups](http://groups.google.com/group/terraform-tool)\n\n<img src="https://cdn.rawgit.com/hashicorp/terraform-website/master/content/source/assets/images/logo-hashicorp.svg" width="600px">\n\nRequirements\n------------\n\n-\t[Terraform](https://www.terraform.io/downloads.html) 0.10.x\n-\t[Go](https://golang.org/doc/install) 1.11 (to build the provider plugin)\n\nBuilding The Provider\n---------------------\n\nClone repository to: `$GOPATH/src/github.com/terraform-providers/terraform-provider-github`\n\n```sh\n$ mkdir -p $GOPATH/src/github.com/terraform-providers; cd $GOPATH/src/github.com/terraform-providers\n$ git clone git@github.com:terraform-providers/terraform-provider-github.git\n```\n\nEnter the provider directory and build the provider\n\n```sh\n$ cd $GOPATH/src/github.com/terraform-providers/terraform-provider-github\n$ make build\n# or if you\'re on a mac:\n$ gnumake build\n```\n\nUsing the provider\n----------------------\n\nDetailed documentation for the GitHub provider can be found [here](https://www.terraform.io/docs/providers/github/index.html).\n\nDeveloping the Provider\n---------------------------\n\nIf you wish to work on the provider, you\'ll first need [Go](http://www.golang.org) installed on your machine (version 1.11+ is *required*). You\'ll also need to correctly setup a [GOPATH](http://golang.org/doc/code.html#GOPATH), as well as adding `$GOPATH/bin` to your `$PATH`.\n\nTo compile the provider, run `make build`. This will build the provider and put the provider binary in the `$GOPATH/bin` directory.\n\n```sh\n$ make build\n...\n$ $GOPATH/bin/terraform-provider-github\n...\n```\n\nIn order to test the provider, you can simply run `make test`.\n\n```sh\n$ make test\n```\n\nIn order to run the full suite of Acceptance tests, run `make testacc`.\n\n*Note:* Acceptance tests create real resources, and often cost money to run.\n\n```sh\n$ make testacc\n```\n\nAcceptance test prerequisites\n-----------------------------\nIn order to successfully run the full suite of acceptance tests, you will need to have the following:\n\n### GitHub personal access token\nYou will need to create a [personal access token](https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line) for\ntesting. It will need to have the following scopes selected:\n* repo\n* admin:org\n* admin:public_key\n* admin:repo_hook\n* admin:org_hook\n* user\n* delete_repo\n* admin:gpg_key\n\nOnce the token has been created, it must be exported in your environment as `GITHUB_TOKEN`.\n\n### GitHub organization\nIf you do not have an organization already that you are comfortable running tests again, you will need to [create one](https://help.github.com/en/articles/creating-a-new-organization-from-scratch). The free "Team for Open Source" org type is fine for these tests. The name of the\norganization must then be exported in your environment as `GITHUB_ORGANIZATION`.\n\n### Test repository\nIn the organization you are using above, create a test repository named `test-repo`. Make sure the repository is configured as follows:\n* The description should be `Test description, used in GitHub Terraform provider acceptance test.`\n* The website url should be `http://www.example.com`\n* Create two topics within the repo named `test-topic` and `second-test-topic`\n* In the repo settings, make sure all features and merge button options are enabled.\n\n### GitHub users\nExport your github username (the one you used to create the personal access token above) as `GITHUB_TEST_USER`. You will need to export a\ndifferent github username as `GITHUB_TEST_COLLABORATOR`. Please note that these usernames cannot be the same as each other, and both of them\nmust be real github usernames. The collaborator user does not need to be added as a collaborator to your test repo or organization, but as\nthe acceptance tests do real things (and will trigger some notifications for this user), you should probably make sure the person you specify knows that you\'re doing this just to be nice.'