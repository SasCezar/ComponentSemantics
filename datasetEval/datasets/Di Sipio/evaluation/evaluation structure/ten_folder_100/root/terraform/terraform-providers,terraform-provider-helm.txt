b'Terraform Provider for Helm\n[![Build Status](https://travis-ci.org/terraform-providers/terraform-provider-helm.svg?branch=master)](https://travis-ci.org/terraform-providers/terraform-provider-helm)\n[![GitHub tag (latest SemVer)](https://img.shields.io/github/v/tag/terraform-providers/terraform-provider-helm?label=release)](https://github.com/terraform-providers/terraform-provider-helm/releases)\n[![license](https://img.shields.io/github/license/terraform-providers/terraform-provider-helm.svg)]()\n===========================\n\nThis is a [Helm](https://github.com/kubernetes/helm) provider for [Terraform](https://www.terraform.io/).\n\nThe provider manages the installed [Charts](https://github.com/kubernetes/charts) in your Kubernetes cluster, in the same way of Helm does, through Terraform. It will also install Tiller automatically if it is not already present.\n\nContents\n--------\n\n* [Developing the Provider](#developing-the-provider)\n* [Example](#example)\n* [Documentation](https://www.terraform.io/docs/providers/helm/index.html)\n  * [Resource: helm_release](https://www.terraform.io/docs/providers/helm/release.html)\n  * [Resource: helm_repository](https://www.terraform.io/docs/providers/helm/repository.html)\n\n\nDeveloping the Provider\n------------\n\n### Installation from sources\n\nIf you wish to compile the provider from source code, you\'ll first need [Go](http://www.golang.org) installed on your machine (version >=1.9 is *required*). You\'ll also need to correctly setup a [GOPATH](http://golang.org/doc/code.html#GOPATH), as well as adding `$GOPATH/bin` to your `$PATH`.\n\nClone repository to: `$GOPATH/src/github.com/terraform-providers/terraform-provider-helm`\n\n```sh\n> mkdir -p $GOPATH/src/github.com/terraform-providers\n> git clone https://github.com/terraform-providers/terraform-provider-helm.git $GOPATH/src/github.com/terraform-providers/terraform-provider-helm\n```\n\nEnter the provider directory and build the provider\n\n```sh\n> cd $GOPATH/src/github.com/terraform-providers/terraform-provider-helm\n> make build\n```\n\nNow copy the compiled binary to the Terraform\'s plugins folder, if is your first plugin maybe isn\'t present.\n\n```sh\n> mkdir -p ~/.terraform.d/plugins/\n> mv terraform-provider-helm ~/.terraform.d/plugins/\n```\n\nExample\n-------\n\nThis is a small example of how to install the mariadb chart on your default\nkubernetes cluster, since the provider was initialized, all the configuration\nis retrieved from the environment. Please read the [documentation](https://www.terraform.io/docs/providers/helm/index.html) for more\ninformation.\n\nYou should have a local configured copy of kubectl.\n\n```hcl\nresource "helm_release" "my_database" {\n    name      = "my-database"\n    chart     = "stable/mariadb"\n\n    set {\n        name  = "mariadbUser"\n        value = "foo"\n    }\n\n    set {\n        name = "mariadbPassword"\n        value = "qux"\n    }\n\n    set_string {\n        name = "image.tags"\n        value = "registry\\\\.io/terraform-provider-helm\\\\,example\\\\.io/terraform-provider-helm"\n    }\n}\n```\n\nLicense\n-------\n\nMozilla Public License 2.0, see [LICENSE](LICENSE)\n'