b'# Kubernetes cluster setup automation\n\n> This is part of the Hobby Kube project. Functionality of the modules is described in the [guide](https://github.com/hobby-kube/guide).\n\nDeploy a secure Kubernetes cluster on [Hetzner Cloud](https://www.hetzner.com/cloud), [Scaleway](https://www.scaleway.com/) or [DigitalOcean](https://www.digitalocean.com/) using [Terraform](https://www.terraform.io/).\n\n## Setup\n\n### Requirements\n\nThe following packages are required to be installed locally:\n\n```sh\nbrew install terraform kubectl jq wireguard-tools\n```\n\nModules are using ssh-agent for remote operations. Add your SSH key with `ssh-add -K` if Terraform repeatedly fails to connect to remote hosts.\n\n### Configuration\n\n**Important:** Modify only [main.tf](main.tf) in project root, comment or uncomment sections as needed. All variables in [variables.tf](variables.tf) can be set\neither directly or from environment variable.\n\nExport the following environment variables depending on the modules you\'re using:\n\n#### Set number of hosts (nodes)\n\n```sh\nexport TF_VAR_node_count=3\n```\n\n#### Set number of etcd members\n\nThe first N nodes will be part of the etcd cluster.\n3 or 5 are good values, see [here](https://coreos.com/etcd/docs/latest/faq.html#system-requirements).\n\n```sh\nexport TF_VAR_etcd_node_count=3\n```\n\n#### Using Hetzner Cloud as provider\n\n```sh\nexport TF_VAR_hcloud_token=<token>\nexport TF_VAR_hcloud_ssh_keys=<keys>\nexport TF_VAR_hcloud_ssh_keys=\'["<description-key1>", "<description-key2>"]\'\n# Defaults:\n# export TF_VAR_hcloud_location="nbg1"\n# export TF_VAR_hcloud_type="cx11"\n# export TF_VAR_hcloud_image="ubuntu-18.04"\n```\n\nSSH keys are referenced by their description. Visit the Hetzner Cloud console at\n`https://console.hetzner.cloud/projects/<project-id>/access/sshkeys`\n\n#### Using Scaleway as provider\n\n```sh\nexport TF_VAR_scaleway_organization=<access_key>\nexport TF_VAR_scaleway_token=<token>\n# Defaults:\n# export TF_VAR_scaleway_region="ams1"\n# export TF_VAR_scaleway_type="DEV1-S"\n# export TF_VAR_scaleway_image="Ubuntu Bionic"\n\n```\n\n#### Using DigitalOcean as provider\n\n```sh\nexport TF_VAR_digitalocean_token=<token>\nexport TF_VAR_digitalocean_ssh_keys=<keys>\nexport TF_VAR_digitalocean_ssh_keys=\'["<id-key1>", "<id-key2>"]\'\n# Defaults:\n# export TF_VAR_digitalocean_region="fra1"\n# export TF_VAR_digitalocean_size="1gb"\n# export TF_VAR_digitalocean_image="ubuntu-18-04-x64"\n```\n\nYou can get SSH key IDs using [this API](https://developers.digitalocean.com/documentation/v2/#list-all-keys).\n\n#### Using Cloudflare for DNS entries\n\n```sh\nexport TF_VAR_domain=<domain> # e.g. example.org\nexport TF_VAR_cloudflare_email=<email>\nexport TF_VAR_cloudflare_api_token=<token>\n```\n\n#### Using Amazon Route 53 for DNS entries\n\n```sh\nexport TF_VAR_domain=<domain> # e.g. example.org shall be already added to hosted zones.\nexport TF_VAR_aws_access_key=<ACCESS_KEY>\nexport TF_VAR_aws_secret_key=<SECRET_KEY>\nexport TF_VAR_aws_region=<region> # e.g. eu-west-1\n```\n\n#### Install additional APT packages\n\nEach provider takes an optional variable to install further packages during provisioning:\n\n```\nmodule "provider" {\n  # ...\n  apt_packages = ["ceph-common", "nfs-common"]\n}\n```\n\n### Execute\n\nFrom the root of this project...\n\n```sh\n# fetch the required modules\n$ terraform init\n\n# see what `terraform apply` will do\n$ terraform plan\n\n# execute it\n$ terraform apply\n```\n\n## Using modules independently\n\nModules in this repository can be used independently:\n\n```hcl\nmodule "kubernetes" {\n  source = "github.com/hobby-kube/provisioning/service/kubernetes"\n}\n```\n\nAfter adding this to your plan, run `terraform get` to fetch the module.\n'