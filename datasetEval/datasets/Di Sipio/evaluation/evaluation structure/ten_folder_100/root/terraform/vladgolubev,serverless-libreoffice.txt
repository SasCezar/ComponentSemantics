b'# Serverless LibreOffice\n\n[![](https://cdn-images-1.medium.com/max/1600/1*4q_I8VM6Gtmtw6TAjORylA.png)](https://vladholubiev.com/serverless-libreoffice)\n\n<p align="center">\n  <a href="https://medium.com/@vladholubiev/how-to-run-libreoffice-in-aws-lambda-for-dirty-cheap-pdfs-at-scale-b2c6b3d069b4">\n    \xf0\x9f\x91\x89\xf0\x9f\x8f\xbb Read the blog post on Medium: How to Run LibreOffice in AWS Lambda for Dirty-Cheap PDFs at\xc2\xa0Scale \xf0\x9f\x91\x88\xf0\x9f\x8f\xbb\n  </a>\n</p>\n\n# Show Me the Code\n\nThis repo contains code used to run the [online demo](https://vladholubiev.com/serverless-libreoffice).\n\n\n```\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 compile.sh  <-- commands used to compile LibreOffice for Lambda\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 infra       <-- terraform config to deploy example Lambda\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 iam.tf\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 lambda.tf\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 main.tf\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 s3.tf\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 vars.tf\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 src         <-- example Lambda function node in Node.js used for website demo\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 handler.js\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 libreoffice.js\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 logic.js\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 package.json <-- put lo.tar.gz in this folder to deploy. Download it below\n    \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 s3.js\n```\n\nCompiled and ready to use archive can be downloaded under [Releases section](https://github.com/vladgolubev/serverless-libreoffice/releases). Also check out [NPM package with bundled LibreOffice for Lambda (85 MB)](https://github.com/shelfio/aws-lambda-libreoffice).\n\n\xe2\x9c\xa8 Check out a new [Lambda Layer with LibreOffice](https://github.com/shelfio/libreoffice-lambda-layer)!\n\n# How to compile by yourself\n\n> Check out a comprehensive [step-by-step tutorial](STEP_BY_STEP.md) from 0 to deployed function. \n\n1. Go to [Lambda Execution Environment and Available Libraries](https://docs.aws.amazon.com/lambda/latest/dg/current-supported-versions.html) page to get the latest AMI id\n2.  Click on [this link](https://console.aws.amazon.com/ec2/v2/home#Images:visibility=public-images;search=amzn-ami-hvm-2017.03.1.20170812-x86_64-gp2) to get AMI id for your region\n3. Spin up a `c5.2xlarge` spot instance with ~ 100 GB of storage attached\n4. Follow the steps in `compile.sh` file in the repo\n\n# Help\n\n* [List of RPM Packages available in AWS Lambda](https://gist.github.com/vladgolubev/1dac4ed47a5febf110c668074c6b671c)\n* [List of Libraries available in AWS Lambda](https://gist.github.com/vladgolubev/439559fc7597a4fb51eaa9e97b72f319)\n\n# Related Projects\n\n* [Docker in AWS Lambda](https://github.com/vladgolubev/docker-in-aws-lambda)\n* [NPM package with bundled LibreOffice for Lambda (85 MB)](https://github.com/shelfio/aws-lambda-libreoffice)\n* [Lambda Layer with LibreOffice](https://github.com/shelfio/libreoffice-lambda-layer)\n\n# How To Help\n\n## Reduce Cold Start Time\n\nCurrently \xc6\x9b unpacks 109 MB .tar.gz to `/tmp` folder which takes ~1-2 seconds on cold start.\n\nWould be nice to create a single compressed executable to save unpack time and increase portability.\nI tried using [Ermine](http://www.magicermine.com/) packager and it works!!\nBut unfortunately this is commercial software.\nSimilar open-source analogue [Statifier](http://statifier.sourceforge.net/) produces broken binaries.\n\nMaybe someone has another idea how to create a single executable from a folder full of shared objects.\n\n**UPD:** TODO: Check out [node-packer](https://github.com/pmq20/node-packer) and [libsquash](https://github.com/pmq20/libsquash) (no FUSE required!)\n\n## Further Size Reduction\n\nI am not a Linux or C++ expert, so for sure I missed some easy "hacks"\nto reduce size of compiled LibreOffice.\n\nMostly I just excluded from compilation as much unrelated stuff as possible.\nAnd stripped symbols from shared objects.\n\nHere is the list of: [available RPM packages](https://gist.github.com/vladgolubev/1dac4ed47a5febf110c668074c6b671c)\nand [libraries](https://gist.github.com/vladgolubev/439559fc7597a4fb51eaa9e97b72f319)\navailable in AWS Lambda Environment, which can be helpful.\n\n## License\n\nMIT \xc2\xa9 [Vlad Holubiev](https://vladholubiev.com)\n'