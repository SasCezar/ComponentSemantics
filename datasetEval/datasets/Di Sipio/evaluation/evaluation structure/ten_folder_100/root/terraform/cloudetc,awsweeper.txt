b'# AWSweeper\n\n<p align="right">\n  <a href="https://github.com/cloudetc/awsweeper/releases/latest">\n    <img alt="Release" src="https://img.shields.io/github/release/cloudetc/awsweeper.svg?style=flat-square">\n  </a>\n  <a href="https://gitlab.com/jckuester/awsweeper/commits/master">\n    <img alt="pipeline status" src="https://gitlab.com/jckuester/awsweeper/badges/master/pipeline.svg" />\n  </a>\n  <a href="https://goreportcard.com/report/github.com/cloudetc/awsweeper">\n    <img alt="Go Report" src="https://goreportcard.com/badge/github.com/cloudetc/awsweeper?style=flat-square" />\n  </a>\n  <a href="https://godoc.org/github.com/cloudetc/awsweeper">\n    <img alt="Go Doc" src="https://img.shields.io/badge/godoc-reference-blue.svg?style=flat-square" />\n  </a>\n  <a href="https://github.com/cloudetc/awsweeper/blob/master/LICENSE">\n    <img alt="Software License" src="https://img.shields.io/github/license/cloudetc/awsweeper.svg?style=flat-square" />\n  </a>\n</p>\n\nAWSweeper wipes out all (or parts) of the resources in your AWS account. Resources to be deleted can be filtered by their ID, tags or\ncreation date using [regular expressions](https://golang.org/pkg/regexp/syntax/) declared in a yaml file (see [config.yml](example/config.yml)).\n\nAWSweeper [can delete many](#supported-resources), but not all resources yet. Your help\nsupporting more resources is very much appreciated ([please read this issue](https://github.com/cloudetc/awsweeper/issues/21)\n to see how easy it is). Note that AWSweeper is based on the cloud-agnostic Terraform API for deletion - so it\'s planned to support\n deleting Azure and Google Cloud Platform resources soon, too.\n\nHappy erasing!\n\n[![AWSweeper tutorial](img/asciinema-tutorial.gif)](https://asciinema.org/a/149097)\n\n## Download\n\nReleases for your platform are [here](https://github.com/cloudetc/awsweeper/releases).\n\n## Usage\n\n    awsweeper [options] <config.yml>\n\nTo see options available run `awsweeper --help`.\n\n## Filtering\n\nResources to be deleted are filtered by a yaml configuration. To learn how, have a look at the following example:\n\n    aws_instance:\n      - id: ^foo.*\n        tags:\n          foo: bar\n          bla: blub\n        created:\n          before: 2018-06-14\n          after: 2018-10-28 12:28:39.0000\n      - tags:\n          foo: bar\n         created:\n           before: 2018-06-14\n      - tags:\n          foo: NOT(bar)\n        created:\n          after: 2018-06-14\n    aws_iam_role:\n\nThis config would delete all instances which ID matches `^foo.*` *and* which have tags `foo: bar` *and* `bla: blub`\n*and* which have been created between `2018-10-28 12:28:39 +0000 UTC` and `2018-06-14`. Additionally, it would delete instances\nwith tag `foo: bar` and which are older than `2018-06-14`.\n\nFurthermore, this config would delete all IAM roles, as there is no list of filters provided for this resource type.\n\nThe general syntax of the filter config is as follows:\n\n    <resource type>:\n      # filter 1\n      - id: <regex to filter by id> | NOT(<regex to filter by id>)\n        tags:\n          <key>: <regex to filter value> | NOT(<regex to filter value>)\n          ...\n        created:\n          before: <timestamp> (optional)\n          after: <timestamp> (optional)\n      # filter 2\n      - ...\n    <resource type>:\n      ...\n\nA more detailed description of the ways to filter resources:\n\n##### 1) All resources of a particular type\n\n   [Terraform types](https://www.terraform.io/docs/providers/aws/index.html) are used to identify resources of a particular type\n   (e.g., `aws_security_group` selects all resources that are security groups, `aws_iam_role` all roles,\n   or `aws_instance` all EC2 instances).\n\n   In the example above, by simply adding `security_group:` (no further filters for IDs or tags),\n   all security groups in your account would be deleted. Use the [all.yml](./all.yml), to delete all (currently supported)\n   resources.\n\n##### 2) By tags\n\n   You can narrow down on particular types of resources by the tags they have.\n\n   If most of your resources have tags, this is probably the best to filter them\n   for deletion. But be aware: not all resources support tags and can be filtered this way.\n\n   In the example above, all EC2 instances are terminated that have a tag with key `foo` and value `bar` as well as\n   `bla` and value `blub`.\n   \n   The tag filter can be negated by surrounding the regex with `NOT(...)`\n\n##### 3) By ID\n\n   You can narrow down on particular types of resources by filtering on their IDs.\n\n   To see what the IDs of your resources are (could be their name, ARN, a random number),\n   run awsweeper in dry-run mode: `awsweeper --dry-run all.yml`. This way, nothing is deleted but\n   all the IDs and tags of your resources are printed. Then, use this information to create the yaml file.\n\n   In the example above, all roles which name starts with `foo` are deleted (the ID of roles is their name).\n\n   The id filter can be negated by surrounding the regex with `NOT(...)`\n\n##### 4) By creation date\n\n   You can select resources by filtering on the date they have been created using an absolute or relative date.\n\n   The supported formats are:\n   * Relative\n     * Nanosecond: `1ns`\n     * Microsecond: `1us`\n     * Millisecond: `1ms`\n     * Second: `1s`\n     * Minute: `1m`\n     * Hour: `1h`\n     * Day: `1d`\n     * Week: `1w`\n     * Month: `1M`\n     * Year: `1y`\n   * Absolute:\n     * RCF3339Nano, short dates: `2006-1-2T15:4:5.999999999Z07:00`\n     * RFC3339Nano, short date, lower-case "t": `2006-1-2t15:4:5.999999999Z07:00`\n     * Space separated, no time zone: `2006-1-2 15:4:5.999999999`\n     * Date only: `2006-1-2`\n\n## Dry-run mode\n\n Use `awsweeper --dry-run <config.yml>` to only show what\nwould be deleted. This way, you can fine-tune your yaml configuration until it works the way you want it to.\n\n## Supported resources\n\nAWSweeper can currently delete many but not [all of the existing types of AWS resources](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html):\n\n- aws_ami\n- aws_autoscaling_group\n- aws_cloudformation_stack\n- aws_ebs_snapshot\n- aws_ebs_volume\n- aws_efs_file_system\n- aws_eip\n- aws_elb\n- aws_iam_group\n- aws_iam_instance_profile\n- aws_iam_policy\n- aws_iam_role\n- aws_iam_user\n- aws_instance\n- aws_internet_gateway\n- aws_key_pair\n- aws_kms_alias\n- aws_kms_key\n- aws_launch_configuration\n- aws_nat_gateway\n- aws_network_acl\n- aws_network_interface\n- aws_route53_zone\n- aws_route_table\n- aws_s3_bucket\n- aws_security_group\n- aws_subnet\n- aws_vpc\n- aws_vpc_endpoint\n\nNote that the above list contains [terraform types](https://www.terraform.io/docs/providers/aws/index.html) which must be used instead of [AWS resource types](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html) to identify resources in the yaml configuration.\nThe reason is that AWSweeper is build upon the already existing delete routines provided by the [Terraform AWS provider](https://github.com/terraform-providers/terraform-provider-aws).\n\n## Acceptance tests\n\n***WARNING:*** Running acceptance tests create real resources that might cost you money.\n\nRun all acceptance tests with\n\n    make testacc\n\nor use\n\n    make testacc TESTARGS=\'-run=TestAccVpc*\'\n\nto test the working of AWSweeper for a just single resource, such as `aws_vpc`.\n\n## Disclaimer\n\nThis tool is thoroughly tested. However, you are using this tool at your own risk! I will not take any responsibility if you delete any critical resources in your\nproduction environments.\n'