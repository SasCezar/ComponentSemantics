b'Terraform Provider\n==================\n\n- Website: https://www.terraform.io\n- [![Gitter chat](https://badges.gitter.im/hashicorp-terraform/Lobby.png)](https://gitter.im/hashicorp-terraform/Lobby)\n- Mailing list: [Google Groups](http://groups.google.com/group/terraform-tool)\n\n<img src="https://cdn.rawgit.com/hashicorp/terraform-website/master/content/source/assets/images/logo-hashicorp.svg" width="600px">\n\nRequirements\n------------\n\n-\t[Terraform](https://www.terraform.io/downloads.html) 0.10.x\n-\t[Go](https://golang.org/doc/install) 1.11 (to build the provider plugin)\n\nBuilding The Provider\n---------------------\n\nClone repository to: `$GOPATH/src/github.com/terraform-providers/terraform-provider-digitalocean`\n\n```sh\n$ mkdir -p $GOPATH/src/github.com/terraform-providers; cd $GOPATH/src/github.com/terraform-providers\n$ git clone git@github.com:terraform-providers/terraform-provider-digitalocean\n```\n\nEnter the provider directory and build the provider\n\n```sh\n$ cd $GOPATH/src/github.com/terraform-providers/terraform-provider-digitalocean\n$ make build\n```\n\nUsing the provider\n----------------------\n\nSee the [DigitalOcean Provider documentation](https://www.terraform.io/docs/providers/do/index.html) to get started using the DigitalOcean provider.\n\nDeveloping the Provider\n---------------------------\n\nIf you wish to work on the provider, you\'ll first need [Go](http://www.golang.org) installed on your machine (version 1.11+ is *required*). You\'ll also need to correctly setup a [GOPATH](http://golang.org/doc/code.html#GOPATH), as well as adding `$GOPATH/bin` to your `$PATH`.\n\nTo compile the provider, run `make build`. This will build the provider and put the provider binary in the `$GOPATH/bin` directory.\n\n```sh\n$ make build\n...\n$ $GOPATH/bin/terraform-provider-digitalocean\n...\n```\n\nIn order to test the provider, you can simply run `make test`.\n\n```sh\n$ make test\n```\n\nIn order to run the full suite of acceptance tests, run `make testacc`.\n\n*Note:* Acceptance tests create real resources, and often cost money to run.\n\n```sh\n$ make testacc\n```\n\nIn order to run a specific acceptance test, use the `TESTARGS` environment variable. For example, the following command will run `TestAccDigitalOceanDomain_Basic` acceptance test only:\n\n```sh\n$ make testacc TESTARGS=\'-run=TestAccDigitalOceanDomain_Basic\'\n```\n\nFor information about writing acceptance tests, see the main Terraform [contributing guide](https://github.com/hashicorp/terraform/blob/master/.github/CONTRIBUTING.md#writing-acceptance-tests).\n'