b'# Terraform ECS Fargate\n\nA set of Terraform templates used for provisioning web application stacks on [AWS ECS Fargate][fargate].\n\n![diagram](diagram.png)\n\nThe templates are designed to be customized.  The optional components can be removed by simply deleting the `.tf` file.\n\nThe templates are used for managing infrastructure concerns and, as such, the templates deploy a [default backend docker image](env/dev/ecs.tf#L26).  We recommend using the [fargate CLI](https://github.com/turnerlabs/fargate) for managing application concerns like deploying your actual application images and environment variables on top of this infrastructure.  The fargate CLI can be used to deploy applications from your laptop or in CI/CD pipelines.\n\n## Components\n\n### base\n\nThese components are shared by all environments.\n\n| Name | Description | Optional |\n|------|-------------|:---:|\n| [main.tf][bm] | AWS provider, output |  |\n| [state.tf][bs] | S3 bucket backend for storing Terraform remote state  |  |\n| [ecr.tf][be] | ECR repository for application (all environments share)  |  ||\n\n### env/dev\n\nThese components are for a specific environment. There should be a corresponding directory for each environment\nthat is needed.\n\n| Name | Description | Optional |\n|------|-------------|:----:|\n| [main.tf][edm] | Terrform remote state, AWS provider, output |  |\n| [ecs.tf][ede] | ECS Cluster, Service, Task Definition, ecsTaskExecutionRole, CloudWatch Log Group |  |\n| [lb.tf][edl] | ALB, Target Group, S3 bucket for access logs  |  |\n| [nsg.tf][edn] | NSG for ALB and Task |  |\n| [lb-http.tf][edlhttp] | HTTP listener, NSG rule. Delete if HTTPS only | Yes |\n| [lb-https.tf][edlhttps] | HTTPS listener, NSG rule. Delete if HTTP only | Yes |\n| [dashboard.tf][edd] | CloudWatch dashboard: CPU, memory, and HTTP-related metrics | Yes |\n| [role.tf][edr] | Application Role for container | Yes |\n| [cicd.tf][edc] | IAM user that can be used by CI/CD systems | Yes |\n| [autoscale-perf.tf][edap] | Performance-based auto scaling | Yes |\n| [autoscale-time.tf][edat] | Time-based auto scaling | Yes |\n| [logs-logzio.tf][edll] | Ship container logs to logz.io | Yes |\n| [secretsmanager.tf][edsm] | Add a Secrets Manager secret with a CMK KMS key. Also gives app role and ECS task definition role access to read secrets from Secrets Manager | Yes |\n| [ssm-parameters.tf][ssm] | Add a CMK KMS key for use with SSM Parameter Store. Also gives ECS task definition role access to read secrets from parameter store. | Yes |\n| [ecs-event-stream.tf][ees] | Add an ECS event log dashboard | Yes |\n\n\n## Usage\n\nTypically, the base Terraform will only need to be run once, and then should only\nneed changes very infrequently. After the base is built, each environment can be built.\n\n```\n# Move into the base directory\n$ cd base\n\n# Sets up Terraform to run\n$ terraform init\n\n# Executes the Terraform run\n$ terraform apply\n\n# Now, move into the dev environment\n$ cd ../env/dev\n\n# Sets up Terraform to run\n$ terraform init\n\n# Executes the Terraform run\n$ terraform apply\n```\n\n##### Important (after initial `terraform apply`)\n\nThe generated base `.tfstate` is not stored in the remote state S3 bucket. Ensure the base `.tfstate` is checked into your infrastructure repo. The default Terraform `.gitignore` [generated by GitHub](https://github.com/github/gitignore/blob/master/Terraform.gitignore) will ignore all `.tfstate` files; you\'ll need to modify this!\n\n## fargate-create\n\nAlternatively you can use the [fargate-create CLI](https://github.com/turnerlabs/fargate-create) to scaffold new projects based on this template.\n\ninstall\n```shell\ncurl -s get-fargate-create.turnerlabs.io | sh\n```\n\ncreate an input vars file (`terraform.tfvars`)\n```hcl\n# app/env to scaffold\napp = "my-app"\nenvironment = "dev"\n\ninternal = true\ncontainer_port = "8080"\nreplicas = "1"\nhealth_check = "/health"\nregion = "us-east-1"\naws_profile = "default"\nsaml_role = "admin"\nvpc = "vpc-123"\nprivate_subnets = "subnet-123,subnet-456"\npublic_subnets = "subnet-789,subnet-012"\ntags = {\n  application   = "my-app"\n  environment   = "dev"\n  team          = "my-team"\n  customer      = "my-customer"\n  contact-email = "me@example.com"\n}\n```\n\n```shell\n$ fargate-create -f terraform.tfvars\n```\n\n\n## Additional Information\n\n+ [Base README][base]\n\n+ [Environment `dev` README][env-dev]\n\n\n\n[fargate]: https://aws.amazon.com/fargate/\n[bm]: ./base/main.tf\n[bs]: ./base/state.tf\n[be]: ./base/ecr.tf\n[edm]: ./env/dev/main.tf\n[ede]: ./env/dev/ecs.tf\n[edl]: ./env/dev/lb.tf\n[edn]: ./env/dev/nsg.tf\n[edlhttp]: ./env/dev/lb-http.tf\n[edlhttps]: ./env/dev/lb-https.tf\n[edd]: ./env/dev/dashboard.tf\n[edr]: ./env/dev/role.tf\n[edc]: ./env/dev/cicd.tf\n[edap]: ./env/dev/autoscale-perf.tf\n[edat]: ./env/dev/autoscale-time.tf\n[edll]: ./env/dev/logs-logzio.tf\n[edsm]: ./env/dev/secretsmanager.tf\n[ssm]: ./env/dev/ssm-parameters.tf\n[ees]: ./env/dev/ecs-event-stream.tf\n[base]: ./base/README.md\n[env-dev]: ./env/dev/README.md\n'