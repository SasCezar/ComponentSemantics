b'![architecture](img/logo_wide_50dpi.png)\n\n[![Build Status](https://travis-ci.org/kubenow/KubeNow.svg?branch=master)](https://travis-ci.org/kubenow/KubeNow)\n[![Documentation Status](https://readthedocs.org/projects/kubenow/badge/?version=master)](http://kubenow.readthedocs.io)\n<span class="badge-slack"><a href="https://kubenow-slackin.herokuapp.com" title="Invite yourself to our Slack team"><img src="https://kubenow-slackin.herokuapp.com/badge.svg" alt="Slackin button"/></a></span>\n<span class="badge-patreon"><a href="https://patreon.com/kubenow" title="Donate to this project using Patreon"><img src="https://img.shields.io/badge/patreon-donate-yellow.svg" alt="Patreon donate button" /></a></span>\n\nKubeNow is a cloud agnostic platform for microservices, based on Docker and Kubernetes. Other than lighting-fast Kubernetes operations, KubeNow helps you in lifting your final application configuring DNS records and distributed storage. Once you have defined your application as a Helm package, lifting it is as simple as:\n\n```bash\nkn init <aws|gce|openstack|azure> my-awesome-deployemt\ncd my-awesome-deployemt\nkn apply\nkn helm install my-app-package\n```\n\n## Table of Contents\n\n- [Architecture](#architecture)\n- [Manifesto](#manifesto)\n- [Getting Started](#getting-started)\n- [Donate](#donate)\n- [Roadmap](#roadmap)\n\n## Architecture\nDeploying a KubeNow cluster you will get:\n\n - A Kubernetes cluster up and running in ~10 minutes (provisioned with [kubeadm](http://kubernetes.io/docs/getting-started-guides/kubeadm/))\n - [Flannel](https://github.com/coreos/flannel) networking\n - [Traefik](https://traefik.io/) HTTP reverse proxy and load balancer\n - [Cloudflare](https://www.cloudflare.com/) dynamic DNS configuration\n - [GlusterFS](https://www.gluster.org/) distributed file system\n\n![architecture](img/architecture.png)\n\nIn a KubeNow cluster there are 3 instance types:\n\n- **Master**: it runs the Kubernetes master, and it optionally acts as an ingress controller proxying from the Internet to the application services through its public IP.\n- **Service**: it runs a Kubernetes node and it hosts application services.\n- **Edge**: it is a specialized service node with a public IP associated, it acts as an ingress controller proxying from the Internet to the application services. It can run application services as well. Edge nodes are optional.\n- **Storage**: it is a specialized service node that runs only a GlusterFS server. One or more *glusternodes* can be used to provide distributed storage for the application services. Glusternodes are optional.\n\n**Cloudflare** can be optionally used to setup DNS records and SSL/TSL (HTTPS) encryption.\n\n## Manifesto\n\n- We want fast deployments: each instance provision itself independently and immutable images are used\n- We use existing provisioning tools: [Terraform](https://www.terraform.io/), [Packer](https://www.packer.io/), [Ansible](https://www.ansible.com/) and [kubeadm](http://kubernetes.io/docs/getting-started-guides/kubeadm)\n- We avoid resources that are available only for a specific cloud provider\n- We provision IaaS, PaaS and SaaS: lifting a distributed application should be possible with a few commands\n\n## Getting started\nWant to try KubeNow? The documentation is available at http://kubenow.readthedocs.io.\n\n## Donate\nYou can support KubeNow throug [Patreon](https://patreon.com/kubenow), more information available at https://patreon.com/kubenow.\n\n## Roadmap\n\n### Core\n- [x] Kubernetes\n- [ ] High Availability\n- [x] Scaling\n- [ ] Autoscaling\n- [ ] Dashboard\n\n### Cloud Providers\n- [x] OpenStack\n- [x] Google Cloud Platform\n- [x] Amazon Web Services\n- [x] Microsoft Azure\n- [ ] Local\n- [ ] Bare Metal\n\n### Load balancer\n- [x] Traefik\n\n### Networking\n- [x] Flannel\n\n### Big Data Frameworks\n- [ ] Spark\n\n### Storage\n- [x] GlusterFS\n\n### SSL/TSL (HTTPS)\n- [x] Cloudflare\n- [ ] Let\'s Encrypt\n'