b'## DOMPDF Wrapper for Laravel 5\n\n### For Laravel 4.x, check the [0.4 branch](https://github.com/barryvdh/laravel-dompdf/tree/0.4)!\n\nRequire this package in your composer.json and update composer. This will download the package and the dompdf + fontlib libraries also.\n\n    composer require barryvdh/laravel-dompdf\n\n## Installation\n\n### Laravel 5.x:\n\nAfter updating composer, add the ServiceProvider to the providers array in config/app.php\n\n    Barryvdh\\DomPDF\\ServiceProvider::class,\n\nYou can optionally use the facade for shorter code. Add this to your facades:\n\n    \'PDF\' => Barryvdh\\DomPDF\\Facade::class,\n\n### Lumen:\n\nAfter updating composer add the following lines to register provider in `bootstrap/app.php`\n\n  ```\n  $app->register(\\Barryvdh\\DomPDF\\ServiceProvider::class);\n  ```\n  \nTo change the configuration, copy the config file to your config folder and enable it in `bootstrap/app.php`:\n\n  ```\n  $app->configure(\'dompdf\');\n  ```\n  \n## Using\n\nYou can create a new DOMPDF instance and load a HTML string, file or view name. You can save it to a file, or stream (show in browser) or download.\n\n    $pdf = App::make(\'dompdf.wrapper\');\n    $pdf->loadHTML(\'<h1>Test</h1>\');\n    return $pdf->stream();\n\nOr use the facade:\n\n    $pdf = PDF::loadView(\'pdf.invoice\', $data);\n    return $pdf->download(\'invoice.pdf\');\n\nYou can chain the methods:\n\n    return PDF::loadFile(public_path().\'/myfile.html\')->save(\'/path-to/my_stored_file.pdf\')->stream(\'download.pdf\');\n\nYou can change the orientation and paper size, and hide or show errors (by default, errors are shown when debug is on)\n\n    PDF::loadHTML($html)->setPaper(\'a4\', \'landscape\')->setWarnings(false)->save(\'myfile.pdf\')\n\nIf you need the output as a string, you can get the rendered PDF with the output() function, so you can save/output it yourself.\n\nUse `php artisan vendor:publish` to create a config file located at `config/dompdf.php` which will allow you to define local configurations to change some settings (default paper etc).\nYou can also use your ConfigProvider to set certain keys.\n\n### Configuration\nThe defaults configuration settings are set in `config/dompdf.php`. Copy this file to your own config directory to modify the values. You can publish the config using this command:\n\n    php artisan vendor:publish --provider="Barryvdh\\DomPDF\\ServiceProvider"\n\nYou can still alter the dompdf options in your code before generating the pdf using this command:\n\n    PDF::setOptions([\'dpi\' => 150, \'defaultFont\' => \'sans-serif\']);\n    \nAvailable options and their defaults:\n* __rootDir__: "{app_directory}/vendor/dompdf/dompdf"\n* __tempDir__: "/tmp" _(available in config/dompdf.php)_\n* __fontDir__: "{app_directory}/storage/fonts/" _(available in config/dompdf.php)_\n* __fontCache__: "{app_directory}/storage/fonts/" _(available in config/dompdf.php)_\n* __chroot__: "{app_directory}" _(available in config/dompdf.php)_\n* __logOutputFile__: "/tmp/log.htm"\n* __defaultMediaType__: "screen" _(available in config/dompdf.php)_\n* __defaultPaperSize__: "a4" _(available in config/dompdf.php)_\n* __defaultFont__: "serif" _(available in config/dompdf.php)_\n* __dpi__: 96 _(available in config/dompdf.php)_\n* __fontHeightRatio__: 1.1 _(available in config/dompdf.php)_\n* __isPhpEnabled__: false _(available in config/dompdf.php)_\n* __isRemoteEnabled__: true _(available in config/dompdf.php)_\n* __isJavascriptEnabled__: true _(available in config/dompdf.php)_\n* __isHtml5ParserEnabled__: false _(available in config/dompdf.php)_\n* __isFontSubsettingEnabled__: false _(available in config/dompdf.php)_\n* __debugPng__: false\n* __debugKeepTemp__: false\n* __debugCss__: false\n* __debugLayout__: false\n* __debugLayoutLines__: true\n* __debugLayoutBlocks__: true\n* __debugLayoutInline__: true\n* __debugLayoutPaddingBox__: true\n* __pdfBackend__: "CPDF" _(available in config/dompdf.php)_\n* __pdflibLicense__: ""\n* __adminUsername__: "user"\n* __adminPassword__: "password"\n\n### Tip: UTF-8 support\nIn your templates, set the UTF-8 Metatag:\n\n    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>\n\n### Tip: Page breaks\nYou can use the CSS `page-break-before`/`page-break-after` properties to create a new page.\n\n    <style>\n    .page-break {\n        page-break-after: always;\n    }\n    </style>\n    <h1>Page 1</h1>\n    <div class="page-break"></div>\n    <h1>Page 2</h1>\n    \n### License\n\nThis DOMPDF Wrapper for Laravel is open-sourced software licensed under the [MIT license](http://opensource.org/licenses/MIT)\n'