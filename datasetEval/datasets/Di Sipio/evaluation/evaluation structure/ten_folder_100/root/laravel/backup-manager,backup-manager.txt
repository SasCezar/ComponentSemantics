b"# Database Backup Manager\n\n[![Latest Stable Version](https://poser.pugx.org/backup-manager/backup-manager/version.png)](https://packagist.org/packages/backup-manager/backup-manager)\n[![License](https://poser.pugx.org/backup-manager/backup-manager/license.png)](https://packagist.org/packages/backup-manager/backup-manager)\n[![Build Status](https://travis-ci.org/backup-manager/backup-manager.svg?branch=master)](https://travis-ci.org/backup-manager/backup-manager)\n[![Coverage Status](https://coveralls.io/repos/backup-manager/backup-manager/badge.svg?branch=master&service=github)](https://coveralls.io/github/backup-manager/backup-manager?branch=master)\n[![Total Downloads](https://poser.pugx.org/backup-manager/backup-manager/downloads.png)](https://packagist.org/packages/backup-manager/backup-manager)\n\nThis package provides a framework-agnostic database backup manager for dumping to and restoring databases from S3, Dropbox, FTP, SFTP, and Rackspace Cloud.\n\n- use version 2 for &gt;=PHP 7.3\n- use version 1 for &lt;PHP 7.2\n\n[Watch a video tour](https://www.youtube.com/watch?v=vWXy0R8OavM) showing the Laravel driver in action to give you an idea what is possible.\n\n- supports `MySQL` and `PostgreSQL`\n- compress with `Gzip`\n- framework-agnostic\n- dead simple configuration\n- [Laravel Driver](http://github.com/backup-manager/laravel)\n- [Symfony Driver](http://github.com/backup-manager/symfony)\n\n### Table of Contents\n\n- [Stability Notice](#stability-notice)\n- [Quick and Dirty](#quick-and-dirty)\n- [Requirements](#requirements)\n- [Installation](#installation)\n- [Usage](#usage)\n- [Contribution Guidelines](#contribution-guidelines)\n- [Maintainers](#maintainers)\n- [License](#license)\n\n### Quick and Dirty\n\n**Configure your databases.**\n\n```php\n// config/database.php\n'development' => [\n    'type' => 'mysql',\n    'host' => 'localhost',\n    'port' => '3306',\n    'user' => 'root',\n    'pass' => 'password',\n    'database' => 'test',\n    // If singleTransaction is set to true, the --single-transcation flag will be set.\n    // This is useful on transactional databases like InnoDB.\n    // http://dev.mysql.com/doc/refman/5.7/en/mysqldump.html#option_mysqldump_single-transaction\n    'singleTransaction' => false,\n    // Do not dump the given tables\n    // Set only table names, without database name\n    // Example: ['table1', 'table2']\n    // http://dev.mysql.com/doc/refman/5.7/en/mysqldump.html#option_mysqldump_ignore-table\n    'ignoreTables' => [],\n    // using ssl to connect to your database - active ssl-support (mysql only):\n    'ssl'=>false,\n    // add additional options to dump-command (like '--max-allowed-packet')\n    'extraParams'=>null,\n],\n'production' => [\n    'type' => 'postgresql',\n    'host' => 'localhost',\n    'port' => '5432',\n    'user' => 'postgres',\n    'pass' => 'password',\n    'database' => 'test',\n],\n```\n\n**Configure your filesystems.**\n\n```php\n// config/storage.php\n'local' => [\n    'type' => 'Local',\n    'root' => '/path/to/working/directory',\n],\n's3' => [\n    'type' => 'AwsS3',\n    'key'    => '',\n    'secret' => '',\n    'region' => 'us-east-1',\n    'version' => 'latest',\n    'bucket' => '',\n    'root'   => '',\n],\n'b2' => [\n    'type' => 'B2',\n    'key'    => '',\n    'accountId' => '',\n    'bucket' => '',\n],\n'gcs' => [\n    'type' => 'Gcs',\n    'key'    => '',\n    'secret' => '',\n    'version' => 'latest',\n    'bucket' => '',\n    'root'   => '',\n],\n'rackspace' => [\n    'type' => 'Rackspace',\n    'username' => '',\n    'key' => '',\n    'container' => '',\n    'zone' => '',\n    'root' => '',\n],\n'dropbox' => [\n    'type' => 'DropboxV2',\n    'token' => '',\n    'key' => '',\n    'secret' => '',\n    'app' => '',\n    'root' => '',\n],\n'ftp' => [\n    'type' => 'Ftp',\n    'host' => '',\n    'username' => '',\n    'password' => '',\n    'root' => '',\n    'port' => 21,\n    'passive' => true,\n    'ssl' => true,\n    'timeout' => 30,\n],\n'sftp' => [\n    'type' => 'Sftp',\n    'host' => '',\n    'username' => '',\n    'password' => '',\n    'root' => '',\n    'port' => 21,\n    'timeout' => 10,\n    'privateKey' => '',\n],\n'flysystem' => [\n    'type' => 'Flysystem',\n    'name => 's3_backup',\n    //'prefix' => 'upload',\n],\n'doSpaces' => [\n  'type' => 'AwsS3',\n  'key' => '',\n  'secret' => '',\n  'region' => '',\n  'bucket' => '',\n  'root' => '',\n  'endpoint' => '',\n],\n'webdav' => [\n    'type' => 'Webdav',\n    'baseUri' => 'http://myserver.com',\n    'userName' => '',\n    'password' => '',\n    'prefix' => '',\n],\n```\n\n**Backup to / restore from any configured database.**\n\nBackup the development database to `Amazon S3`. The S3 backup path will be `test/backup.sql.gz` in the end, when `gzip` is done with it.\n\n```php\nuse BackupManager\\Filesystems\\Destination;\n\n$manager = require 'bootstrap.php';\n$manager->makeBackup()->run('development', [new Destination('s3', 'test/backup.sql')], 'gzip');\n```\n\n**Backup to / restore from any configured filesystem.**\n\nRestore the database file `test/backup.sql.gz` from `Amazon S3` to the `development` database.\n\n```php\n$manager = require 'bootstrap.php';\n$manager->makeRestore()->run('s3', 'test/backup.sql.gz', 'development', 'gzip');\n```\n\n> This package does not allow you to backup from one database type and restore to another. A MySQL dump is not compatible with PostgreSQL.\n\n### Requirements\n\n- PHP 5.5\n- MySQL support requires `mysqldump` and `mysql` command-line binaries\n- PostgreSQL support requires `pg_dump` and `psql` command-line binaries\n- Gzip support requires `gzip` and `gunzip` command-line binaries\n\n\n### Installation\n\n**Composer**\n\nRun the following to include this via Composer\n\n```shell\ncomposer require backup-manager/backup-manager\n```\n\nThen, you'll need to select the appropriate packages for the adapters that you want to use.\n\n```shell\n# to support s3\ncomposer require league/flysystem-aws-s3-v3\n\n# to support b2\ncomposer require mhetreramesh/flysystem-backblaze\n\n# to support google cs\ncomposer require league/flysystem-aws-s3-v2\n\n# to install the preferred dropbox v2 driver\ncomposer required spatie/flysystem-dropbox\n\n# to install legacy dropbox v2 driver\ncomposer require srmklive/flysystem-dropbox-v2\n\n# to support rackspace\ncomposer require league/flysystem-rackspace\n\n# to support sftp\ncomposer require league/flysystem-sftp\n\n# to support webdav (supported by owncloud nad many other)\ncomposer require league/flysystem-webdav\n```\n\n### Usage\n\nOnce installed, the package must be bootstrapped (initial configuration) before it can be used. \n\nWe've provided a native PHP example [here](https://github.com/backup-manager/backup-manager/tree/master/examples).\n\nThe required bootstrapping can [be found in the example here](https://github.com/backup-manager/backup-manager/blob/master/examples/standalone/bootstrap.php).\n\n\n### Contribution Guidelines\n\nWe recommend using the vagrant configuration supplied with this package for development and contribution. Simply install VirtualBox, Vagrant, and Ansible then run `vagrant up` in the root folder. A virtualmachine specifically designed for development of the package will be built and launched for you.\n\nWhen contributing please consider the following guidelines:\n\n- Code style is PSR-2\n    - Interfaces should NOT be suffixed with `Interface`, Traits should NOT be suffixed with `Trait`.\n- All methods and classes must contain docblocks.\n- Ensure that you submit tests that have minimal 100% coverage. Given the project's simplicity it just makes sense.\n- When planning a pull-request to add new functionality, it may be wise to [submit a proposal](https://github.com/backup-manager/backup-manager/issues/new) to ensure compatibility with the project's goals.\n\n### Maintainers\n\nThis package is maintained by [Shawn McCool](http://shawnmc.cool) and you!\n\n### License\n\nThis package is licensed under the [MIT license](https://github.com/backup-manager/backup-manager/blob/master/LICENSE). Go wild.\n"