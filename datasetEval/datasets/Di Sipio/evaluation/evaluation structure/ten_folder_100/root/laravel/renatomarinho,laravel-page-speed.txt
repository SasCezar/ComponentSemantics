b'<p align="center">\n    <img width="400" src="https://raw.githubusercontent.com/renatomarinho/laravel-page-speed/master/art/logo.png" alt="Laravel Page Speed logo" />\n</p>\n\n<p align="center">\n<a href="https://gitscrum.com"><img src="https://gitscrum.com/badges/project.svg?project=gitscrum/bulls-eye-gitscrum-37" alt="Git Scrum"></a>\n<a href="https://travis-ci.org/renatomarinho/laravel-page-speed"><img src="https://travis-ci.org/renatomarinho/laravel-page-speed.svg?branch=master" alt="Build Status"></a>\n<a href="https://packagist.org/packages/renatomarinho/laravel-page-speed"><img src="https://poser.pugx.org/renatomarinho/laravel-page-speed/license" alt="License"></a>\n<a href="https://packagist.org/packages/renatomarinho/laravel-page-speed"><img src="https://poser.pugx.org/renatomarinho/laravel-page-speed/version" alt="Latest Stable Version"></a>\n<a href="https://packagist.org/packages/renatomarinho/laravel-page-speed"><img src="https://poser.pugx.org/renatomarinho/laravel-page-speed/downloads" alt="Total Downloads"></a>\n</p>\n\n# Laravel Page Speed\n\n### Simple package to minify HTML output on demand which results in a 35%+ optimization.\n\n## Installation\n\nYou can install the package via composer:\n\n```bash\n$ composer require renatomarinho/laravel-page-speed\n```\n### Laravel 5.5 and up\n\nLaravel 5.5 and up uses Package Auto-Discovery, so doesn\'t require you to manually add the ServiceProvider.\n\n### Laravel 5.4 or 5.3\n\nAdd the Service Provider to the providers array in **config/app.php**:\n\n`RenatoMarinho\\LaravelPageSpeed\\ServiceProvider::class`\n\n *This is required for publishing the configuration file:*\n\n### Publish configuration file\n\n `php artisan vendor:publish --provider="RenatoMarinho\\LaravelPageSpeed\\ServiceProvider"`\n\n## Do not forget to register middlewares\n\nNext, the `\\RenatoMarinho\\LaravelPageSpeed\\Middleware\\CollapseWhitespace::class` and other middleware must be registered in the kernel:\n\n```php\n//app/Http/Kernel.php\n\nprotected $middleware = [\n    ...\n    \\RenatoMarinho\\LaravelPageSpeed\\Middleware\\InlineCss::class,\n    \\RenatoMarinho\\LaravelPageSpeed\\Middleware\\ElideAttributes::class,\n    \\RenatoMarinho\\LaravelPageSpeed\\Middleware\\InsertDNSPrefetch::class,\n    \\RenatoMarinho\\LaravelPageSpeed\\Middleware\\RemoveComments::class,\n    \\RenatoMarinho\\LaravelPageSpeed\\Middleware\\TrimUrls::class,\n    \\RenatoMarinho\\LaravelPageSpeed\\Middleware\\RemoveQuotes::class,\n    \\RenatoMarinho\\LaravelPageSpeed\\Middleware\\CollapseWhitespace::class,\n]\n```\n\n### Before\n\n![Before of Laravel Page Speed][link-before]\n\n### After\n\n![After of Laravel Page Speed][link-after]\n\n## Roadmap : Filters\n\n<table>\n    <tr>\n        <td><strong>Name</strong></td>\n        <td><strong>Description</strong></td>\n        <td><strong>Available</strong></td>\n    </tr>\n    <tr>\n        <td>inline_css</td>\n        <td>Inlines small external CSS files</td>\n        <td>YES</td>\n    </tr>\n    <tr>\n        <td>elide_attributes</td>\n        <td>Removes unnecessary attributes in HTML tags</td>\n        <td>YES</td>\n    </tr>\n    <tr>\n        <td>insert_dns_prefetch</td>\n        <td>Injects <link rel="dns-prefetch" href="//www.example.com"> tags in the HEAD to enable the browser to do DNS prefetching</td>\n        <td>YES</td>\n    </tr>\n    <tr>\n        <td>remove_quotes</td>\n        <td>Removes unnecessary quotes in HTML tags</td>\n        <td>YES</td>\n    </tr>\n    <tr>\n        <td>trim_urls</td>\n        <td>Removes unnecessary prefixes from URLs</td>\n        <td>YES</td>\n    </tr>\n    <tr>\n        <td>collapse_whitespace</td>\n        <td>Removes unnecessary whitespace in HTML</td>\n        <td>YES</td>\n    </tr>\n    <tr>\n        <td>remove_comments</td>\n        <td>Removes HTML comments</td>\n        <td>YES</td>\n    </tr>\n    <tr>\n        <td>combine_css</td>\n        <td>Combines multiple CSS files into one</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>combine_heads</td>\n        <td>Combines multiple <head> elements into one</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>combine_javascript</td>\n        <td>Combines multiple JavaScript files into one</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>dedup_inlined_images</td>\n        <td>Replaces repeated inlined images with JavaScript that loads the data from the first instance of the image</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>defer_javascript</td>\n        <td>Defers the execution of javascript in the HTML</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>pedantic</td>\n        <td>Adds default type attributes to script and style tags that are missing them</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>extend_cache</td>\n        <td>Improves cacheability</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>fallback_rewrite_css_urls</td>\n        <td>Rewrite URLs in CSS even if CSS is not parseable</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>flatten_css_imports</td>\n        <td>Flattens @import rules in CSS by replacing the rule with the contents of the imported resource</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>hint_preload_subresources</td>\n        <td>Inserts link: headers to preload CSS and JavaScript resources</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>inline_google_font_css</td>\n        <td>Inlines small font-loading CSS from Google Fonts API</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>inline_import_to_link</td>\n        <td>Inlines style tags comprising only CSS @imports by converting them to an equivalent link</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>inline_javascript</td>\n        <td>Inlines small external Javascript files</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>inline_preview_images</td>\n        <td>Delays original images; serves inlined, low-quality placeholder images until originals are loaded</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>insert_ga</td>\n        <td>Inserts Google Analytics javascript snippet</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>lazyload_images</td>\n        <td>Loads images when they become visible in the client viewport</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>local_storage_cache</td>\n        <td>Loads inlined CSS and image resources into HTML5 local storage whence the client fetches them subsequently rather than the server sending them again</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>make_show_ads_async</td>\n        <td>Converts synchronous Google AdSense tags to asynchronous format</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>make_google_analytics_async</td>\n        <td>Converts synchronous Google Analytics code to load asynchronously</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>move_css_above_scripts</td>\n        <td>Moves CSS above scripts</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>move_css_to_head</td>\n        <td>Moves CSS into the <head> element</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>outline_css</td>\n        <td>Moves large inline \'style\' tags into external files for cacheability</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>outline_javascript</td>\n        <td>Moves large inline \'script\' tags into external files for cacheability</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>prioritize_critical_css</td>\n        <td>Instruments the page, inlines its critical CSS at the top, and lazily loads the rest</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>resize_mobile_images</td>\n        <td>Just like inline_preview_images, but uses smaller placeholder images for mobile browsers</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>resize_rendered_image_dimensions</td>\n        <td>Resize images to rendered dimensions</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>responsive_images</td>\n        <td>Serve responsive images using the srcset attribute</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>rewrite_css</td>\n        <td>Minifies CSS</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>rewrite_images</td>\n        <td>Rescales, and compresses images; inlines small ones</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>rewrite_javascript</td>\n        <td>Minifies Javascript</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>rewrite_style_attributes</td>\n        <td>Rewrite the CSS in style attributes by applying the configured rewrite_css filter to it</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>rewrite_style_attributes_with_url</td>\n        <td>Rewrite the CSS in style attributes by applying the configured rewrite_css filter to it, but only if the attribute contains the text \'url(\'</td>\n        <td>NO</td>\n    </tr>\n    <tr>\n        <td>sprite_images</td>\n        <td>Sprites images</td>\n        <td>NO</td>\n    </tr>\n\n</table>\n\n<hr />\n\n## Configuration\n\nAfter installing package, you may need to configure some options.\n\n### Disable Service\n\nYou would probably like to set up the local environment to get a readable output.\n\n```php\n//config/laravel-page-speed.php\n\n//Set this field to false to disable the laravel page speed service.\n\'enable\' => env(\'LARAVEL_PAGE_SPEED_ENABLE\', true),\n```\n### Skip routes\n\nYou would probably like to configure the package to skip some routes.\n\n```php\n//config/laravel-page-speed.php\n\n//You can use * as wildcard.\n\'skip\' => [\n    \'*.pdf\', //Ignore all routes with final .pdf\n    \'*/downloads/*\',//Ignore all routes that contain \'downloads\'\n    \'assets/*\', // Ignore all routes with the \'assets\' prefix\n];\n```\n\nBy default this field comes configured with some options, so feel free to configure according to your needs...\n\n> *Notice*: This package skip automatically \'binary\' and \'streamed\' responses. See [File Downloads][link-file-download].\n\n## Warning\n\n**\\RenatoMarinho\\LaravelPageSpeed\\Middleware\\TrimUrls::class** is considered **medium risk**. It can cause problems if it uses the wrong base URL. This can happen, for example, if you serve HTML that will be pasted verbatim into other HTML pages. If URLs are trimmed on the first page, they will be incorrect for the page they are inserted into. In this case, just disable the middleware.\n\n## Testing\n\n``` bash\n$ composer test\n```\n\n## Contributing\n\nPlease see [CONTRIBUTING](CONTRIBUTING.md) for details.\n\n## Credits\n\n- [Renato Marinho][link-author]\n- [Jo\xc3\xa3o Roberto P. Borges][link-maintainer]\n- [Caneco](https://twitter.com/caneco) (for the logo)\n- [All Contributors][link-contributors]\n\n## Inspiration\n\n#### Mod Page Speed (https://www.modpagespeed.com/)\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n\n[link-before]: https://i.imgur.com/cN3MWYh.png\n[link-after]: https://i.imgur.com/IKWKLkL.png\n[link-author]: https://github.com/renatomarinho\n[link-maintainer]: https://github.com/joaorobertopb\n[link-contributors]: ../../contributors\n[link-file-download]: https://laravel.com/docs/6.0/responses#file-downloads\n'