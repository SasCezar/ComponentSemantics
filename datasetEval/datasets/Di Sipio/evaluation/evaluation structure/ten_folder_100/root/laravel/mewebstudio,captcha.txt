b'# Captcha for Laravel 5 & 6\n\n[![Build Status](https://travis-ci.org/mewebstudio/captcha.svg?branch=master)](https://travis-ci.org/mewebstudio/captcha) [![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/mewebstudio/captcha/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/mewebstudio/captcha/?branch=master)\n[![Latest Stable Version](https://poser.pugx.org/mews/captcha/v/stable.svg)](https://packagist.org/packages/mews/captcha)\n[![Latest Unstable Version](https://poser.pugx.org/mews/captcha/v/unstable.svg)](https://packagist.org/packages/mews/captcha)\n[![License](https://poser.pugx.org/mews/captcha/license.svg)](https://packagist.org/packages/mews/captcha)\n[![Total Downloads](https://poser.pugx.org/mews/captcha/downloads.svg)](https://packagist.org/packages/mews/captcha)\n\nA simple [Laravel 5/6](http://www.laravel.com/) service provider for including the [Captcha for Laravel](https://github.com/mewebstudio/captcha).\n\nfor Laravel 4 [Captcha for Laravel Laravel 4](https://github.com/mewebstudio/captcha/tree/master-l4)\n\n## Preview\n![Preview](https://image.ibb.co/kZxMLm/image.png)\n\n## Installation\n\nThe Captcha Service Provider can be installed via [Composer](http://getcomposer.org) by requiring the\n`mews/captcha` package and setting the `minimum-stability` to `dev` (required for Laravel 5) in your\nproject\'s `composer.json`.\n\n```json\n{\n    "require": {\n        "laravel/framework": "5.0.*",\n        "mews/captcha": "~2.0"\n    },\n    "minimum-stability": "dev"\n}\n```\n\nor\n\nRequire this package with composer:\n```\ncomposer require mews/captcha\n```\n\nUpdate your packages with ```composer update``` or install with ```composer install```.\n\nIn Windows, you\'ll need to include the GD2 DLL `php_gd2.dll` in php.ini. And you also need include `php_fileinfo.dll` and `php_mbstring.dll` to fit the requirements of `mews/captcha`\'s dependencies.\n\n\n\n\n## Usage\n\nTo use the Captcha Service Provider, you must register the provider when bootstrapping your Laravel application. There are\nessentially two ways to do this.\n\nFind the `providers` key in `config/app.php` and register the Captcha Service Provider.\n\n```php\n    \'providers\' => [\n        // ...\n        \'Mews\\Captcha\\CaptchaServiceProvider\',\n    ]\n```\nfor Laravel 5.1+\n```php\n    \'providers\' => [\n        // ...\n        Mews\\Captcha\\CaptchaServiceProvider::class,\n    ]\n```\n\nFind the `aliases` key in `config/app.php`.\n\n```php\n    \'aliases\' => [\n        // ...\n        \'Captcha\' => \'Mews\\Captcha\\Facades\\Captcha\',\n    ]\n```\nfor Laravel 5.1+\n```php\n    \'aliases\' => [\n        // ...\n        \'Captcha\' => Mews\\Captcha\\Facades\\Captcha::class,\n    ]\n```\n\n## Configuration\n\nTo use your own settings, publish config.\n\n```$ php artisan vendor:publish```\n\n`config/captcha.php`\n\n```php\nreturn [\n    \'default\'   => [\n        \'length\'    => 5,\n        \'width\'     => 120,\n        \'height\'    => 36,\n        \'quality\'   => 90,\n        \'math\'      => true, //Enable Math Captcha\n    ],\n    // ...\n];\n```\n\n## Example Usage\n```php\n\n    // [your site path]/Http/routes.php\n    Route::any(\'captcha-test\', function() {\n        if (request()->getMethod() == \'POST\') {\n            $rules = [\'captcha\' => \'required|captcha\'];\n            $validator = validator()->make(request()->all(), $rules);\n            if ($validator->fails()) {\n                echo \'<p style="color: #ff0000;">Incorrect!</p>\';\n            } else {\n                echo \'<p style="color: #00ff30;">Matched :)</p>\';\n            }\n        }\n    \n        $form = \'<form method="post" action="captcha-test">\';\n        $form .= \'<input type="hidden" name="_token" value="\' . csrf_token() . \'">\';\n        $form .= \'<p>\' . captcha_img() . \'</p>\';\n        $form .= \'<p><input type="text" name="captcha"></p>\';\n        $form .= \'<p><button type="submit" name="check">Check</button></p>\';\n        $form .= \'</form>\';\n        return $form;\n    });\n```\n\n# Return Image\n```php\ncaptcha();\n```\nor\n```php\nCaptcha::create();\n```\n\n\n# Return URL\n```php\ncaptcha_src();\n```\nor\n```\nCaptcha::src(\'default\');\n```\n\n# Return HTML\n```php\ncaptcha_img();\n```\nor\n```php\nCaptcha::img();\n```\n\n# To use different configurations\n```php\ncaptcha_img(\'flat\');\n\nCaptcha::img(\'inverse\');\n```\netc.\n\nBased on [Intervention Image](https://github.com/Intervention/image)\n\n^_^\n\n## Links\n* [Intervention Image](https://github.com/Intervention/image)\n* [L5 Captcha on Github](https://github.com/mewebstudio/captcha)\n* [L5 Captcha on Packagist](https://packagist.org/packages/mews/captcha)\n* [For L4 on Github](https://github.com/mewebstudio/captcha/tree/master-l4)\n* [License](http://www.opensource.org/licenses/mit-license.php)\n* [Laravel website](http://laravel.com)\n* [Laravel Turkiye website](http://www.laravel.gen.tr)\n* [MeWebStudio website](http://www.mewebstudio.com)\n'