b'# Log activity inside your Laravel app\n\n[![Latest Version on Packagist](https://img.shields.io/packagist/v/spatie/laravel-activitylog.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-activitylog)\n[![Build Status](https://img.shields.io/travis/spatie/laravel-activitylog/master.svg?style=flat-square)](https://travis-ci.org/spatie/laravel-activitylog)\n[![Code coverage](https://scrutinizer-ci.com/g/spatie/laravel-activitylog/badges/coverage.png)](https://scrutinizer-ci.com/g/spatie/laravel-activitylog)\n[![Quality Score](https://img.shields.io/scrutinizer/g/spatie/laravel-activitylog.svg?style=flat-square)](https://scrutinizer-ci.com/g/spatie/laravel-activitylog)\n[![StyleCI](https://styleci.io/repos/61802818/shield)](https://styleci.io/repos/61802818)\n[![Total Downloads](https://img.shields.io/packagist/dt/spatie/laravel-activitylog.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-activitylog)\n\nThe `spatie/laravel-activitylog` package provides easy to use functions to log the activities of the users of your app. It can also automatically log model events. \nThe Package stores all activity in the `activity_log` table.\n\nHere\'s a demo of how you can use it:\n\n```php\nactivity()->log(\'Look, I logged something\');\n```\n\nYou can retrieve all activity using the `Spatie\\Activitylog\\Models\\Activity` model.\n\n```php\nActivity::all();\n```\n\nHere\'s a more advanced example:\n```php\nactivity()\n   ->performedOn($anEloquentModel)\n   ->causedBy($user)\n   ->withProperties([\'customProperty\' => \'customValue\'])\n   ->log(\'Look, I logged something\');\n   \n$lastLoggedActivity = Activity::all()->last();\n\n$lastLoggedActivity->subject; //returns an instance of an eloquent model\n$lastLoggedActivity->causer; //returns an instance of your user model\n$lastLoggedActivity->getExtraProperty(\'customProperty\'); //returns \'customValue\'\n$lastLoggedActivity->description; //returns \'Look, I logged something\'\n```\n\n\nHere\'s an example on [event logging](https://docs.spatie.be/laravel-activitylog/v3/advanced-usage/logging-model-events).\n\n```php\n$newsItem->name = \'updated name\';\n$newsItem->save();\n\n//updating the newsItem will cause the logging of an activity\n$activity = Activity::all()->last();\n\n$activity->description; //returns \'updated\'\n$activity->subject; //returns the instance of NewsItem that was saved\n```\n\nCalling `$activity->changes()` will return this array:\n\n```php\n[\n   \'attributes\' => [\n        \'name\' => \'updated name\',\n        \'text\' => \'Lorum\',\n    ],\n    \'old\' => [\n        \'name\' => \'original name\',\n        \'text\' => \'Lorum\',\n    ],\n];\n```\n\n\n## Documentation\nYou\'ll find the documentation on [https://docs.spatie.be/laravel-activitylog](https://docs.spatie.be/laravel-activitylog).\n\nFind yourself stuck using the package? Found a bug? Do you have general questions or suggestions for improving the activity log? Feel free to [create an issue on GitHub](https://github.com/spatie/laravel-activitylog/issues), we\'ll try to address it as soon as possible.\n\nIf you\'ve found a security issue please mail [freek@spatie.be](mailto:freek@spatie.be) instead of using the issue tracker.\n\n\n## Installation\n\nYou can install the package via composer:\n\n``` bash\ncomposer require spatie/laravel-activitylog\n```\n\nThe package will automatically register itself.\n\nYou can publish the migration with:\n```bash\nphp artisan vendor:publish --provider="Spatie\\Activitylog\\ActivitylogServiceProvider" --tag="migrations"\n```\n\n*Note*: The default migration assumes you are using integers for your model IDs. If you are using UUIDs, or some other format, adjust the format of the subject_id and causer_id fields in the published migration before continuing.\n\nAfter publishing the migration you can create the `activity_log` table by running the migrations:\n\n\n```bash\nphp artisan migrate\n```\n\nYou can optionally publish the config file with:\n```bash\nphp artisan vendor:publish --provider="Spatie\\Activitylog\\ActivitylogServiceProvider" --tag="config"\n```\n\nThis is the contents of the published config file:\n\n```php\nreturn [\n\n    /*\n     * If set to false, no activities will be saved to the database.\n     */\n    \'enabled\' => env(\'ACTIVITY_LOGGER_ENABLED\', true),\n\n    /*\n     * When the clean-command is executed, all recording activities older than\n     * the number of days specified here will be deleted.\n     */\n    \'delete_records_older_than_days\' => 365,\n\n    /*\n     * If no log name is passed to the activity() helper\n     * we use this default log name.\n     */\n    \'default_log_name\' => \'default\',\n\n    /*\n     * You can specify an auth driver here that gets user models.\n     * If this is null we\'ll use the default Laravel auth driver.\n     */\n    \'default_auth_driver\' => null,\n\n    /*\n     * If set to true, the subject returns soft deleted models.\n     */\n    \'subject_returns_soft_deleted_models\' => false,\n\n    /*\n     * This model will be used to log activity.\n     * It should be implements the Spatie\\Activitylog\\Contracts\\Activity interface\n     * and extend Illuminate\\Database\\Eloquent\\Model.\n     */\n    \'activity_model\' => \\Spatie\\Activitylog\\Models\\Activity::class,\n\n    /*\n     * This is the name of the table that will be created by the migration and\n     * used by the Activity model shipped with this package.\n     */\n    \'table_name\' => \'activity_log\',\n\n     /*\n      * This is the database connection that will be used by the migration and\n      * the Activity model shipped with this package. In case it\'s not set\n      * Laravel database.default will be used instead.\n      */\n    \'database_connection\' => env(\'ACTIVITY_LOGGER_DB_CONNECTION\'),\n];\n```\n\n## Changelog\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information about recent changes.\n\n## Upgrading\n\nPlease see [UPGRADING](UPGRADING.md) for details.\n\n\n## Testing\n\n``` bash\ncomposer test\n```\n\n## Contributing\n\nPlease see [CONTRIBUTING](CONTRIBUTING.md) for details.\n\n## Security\n\nIf you discover any security related issues, please email freek@spatie.be instead of using the issue tracker.\n\n## Postcardware\n\nYou\'re free to use this package, but if it makes it to your production environment we highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using.\n\nOur address is: Spatie, Samberstraat 69D, 2060 Antwerp, Belgium.\n\nWe publish all received postcards [on our company website](https://spatie.be/en/opensource/postcards).\n\n## Credits\n\n- [Freek Van der Herten](https://github.com/freekmurze)\n- [Sebastian De Deyne](https://github.com/sebastiandedeyne)\n- [All Contributors](../../contributors)\n\n## Support us\n\nSpatie is a webdesign agency based in Antwerp, Belgium. You\'ll find an overview of all our open source projects [on our website](https://spatie.be/opensource).\n\nDoes your business depend on our contributions? Reach out and support us on [Patreon](https://www.patreon.com/spatie). \nAll pledges will be dedicated to allocating workforce on maintenance and new awesome stuff.\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n'