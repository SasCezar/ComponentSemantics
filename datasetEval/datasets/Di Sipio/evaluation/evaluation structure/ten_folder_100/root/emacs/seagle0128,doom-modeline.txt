b'# doom-modeline\n\n[![Build Status](https://travis-ci.org/seagle0128/doom-modeline.svg?branch=master)](https://travis-ci.org/seagle0128/doom-modeline)\n[![MELPA](https://melpa.org/packages/doom-modeline-badge.svg)](https://melpa.org/#/doom-modeline)\n[![MELPA Stable](https://stable.melpa.org/packages/doom-modeline-badge.svg)](https://stable.melpa.org/#/doom-modeline)\n[![License](http://img.shields.io/:license-gpl3-blue.svg)](http://www.gnu.org/licenses/gpl-3.0.html)\n\n<!-- markdown-toc start - Don\'t edit this section. Run M-x markdown-toc-refresh-toc -->\n**Table of Contents**\n\n- [doom-modeline](#doom-modeline)\n    - [Feature](#feature)\n    - [Screenshots](#screenshots)\n    - [Install](#install)\n        - [Manual](#manual)\n        - [Use-package](#use-package)\n    - [Customize](#customize)\n    - [FAQ](#faq)\n\n<!-- markdown-toc end -->\n\nA fancy and fast mode-line inspired by minimalism design.\n\nIt\'s integrated into [Centaur Emacs](https://github.com/seagle0128/.emacs.d), [Doom\nEmacs](https://github.com/hlissner/doom-emacs) and\n[Spacemacs](https://github.com/syl20bnr/spacemacs).\n\n## Feature\n\nThe `doom-modeline` was designed for minimalism, and offers:\n\n- A match count panel (for `anzu`, `iedit`, `multiple-cursors`, `symbol-overlay`,\n  `evil-search` and `evil-substitute`)\n- An indicator for recording a macro\n- Current environment version (e.g. `python`, `ruby`, `go`, etc.) in the major-mode\n- A customizable mode-line height (see `doom-modeline-height`)\n- A minor modes segment which is compatible with `minions`\n- An error/warning count segment for `flymake`/`flycheck`\n- A workspace number segment for `eyebrowse`\n- A perspective name segment for `persp-mode`\n- A window number segment for `ace-window`, `winum` and `window-numbering`\n- An indicator for modal editing state, including `evil`, `overwrite`, `god`, `ryo` and\n  `xah-fly-keys`, etc.\n- An indicator for `battery` status\n- An indicator for current input method\n- An indicator for debug state\n- An indicator for remote host\n- An indicator for LSP state with `lsp-mode` or `eglot`\n- An indicator for GitHub notifications\n- An indicator for unread emails with `mu4e-alert`\n- An indicator for IRC notifications with `circe`, `rcirc` or `erc`\n- An indicator for buffer position which is compatible with `nyan-mode`\n- An indicator for party `parrot`\n- An indicator for PDF page number with `pdf-tools`\n- An indicator for markdown/org preview with `grip`\n- Truncated file name, file icon, buffer state and project name in buffer\n  information segment, which is compatible with `project`, `projectile` and\n  `find-file-in-project`.\n- New mode-line for `Info-mode` buffers\n- New package mode-line for `paradox`\n- New mode-line for `helm` buffers\n- New mode-line for `git-timemachine` buffers\n\n## Screenshots\n\n![modeline](https://user-images.githubusercontent.com/140797/49694177-10dcd280-fbc0-11e8-8d21-971ede6afdb5.png\n "Mode-line")\n\n![search_replace](https://user-images.githubusercontent.com/140797/49694189-6913d480-fbc0-11e8-93ae-9578455dcd2c.png\n"Search and Replace")\n\n![macro](https://user-images.githubusercontent.com/140797/49694199-cc056b80-fbc0-11e8-9bb1-533b1e64da66.png\n"Macro")\n\n![no_icons](https://user-images.githubusercontent.com/140797/51301117-0805d900-1a69-11e9-957d-b4c7a70a1cf8.png\n"No Icons")\n\n![color_icon_cpp](https://user-images.githubusercontent.com/140797/50414928-3c63ec00-0853-11e9-9b26-6a1df278d332.png\n"Color C++ icon")\n\n![color_icon_java](https://user-images.githubusercontent.com/140797/50415081-1428bd00-0854-11e9-9ae5-91805290c524.png\n"Color Java icon")\n\n![color_icon_elisp](https://user-images.githubusercontent.com/140797/50415381-9f568280-0855-11e9-9478-34a6dd614d96.png\n"Color Elisp icon")\n\n![evil_normal_state_icon](https://user-images.githubusercontent.com/140797/68990534-332aa600-088f-11ea-920f-20c9527a6466.png\n"Evil Normal State icon")\n\n![evil_insert_state_icon](https://user-images.githubusercontent.com/140797/68990540-4dfd1a80-088f-11ea-8e53-ab77af4c58c2.png\n"Evil Insert State icon")\n\n![evil_normal_state](https://user-images.githubusercontent.com/140797/49694476-b8103880-fbc5-11e8-9c18-91f5e9258333.png\n"Evil Normal State")\n\n![evil_insert_state](https://user-images.githubusercontent.com/140797/49694461-8b5c2100-fbc5-11e8-993e-d97baa9f01af.png\n"Evil Insert State")\n\n![lsp_version](https://user-images.githubusercontent.com/140797/53592864-c751c180-3bc9-11e9-9914-493007c013d5.png\n"Perspective, LSP, Version, VCS and Flycheck")\n\n![perspective](https://user-images.githubusercontent.com/140797/49694481-e0983280-fbc5-11e8-8cb2-c8d2e782bcdb.png\n "Perspective, LSP, Version and VCS")\n\n![notifications](https://user-images.githubusercontent.com/140797/53592683-64602a80-3bc9-11e9-8054-91f79aa930b9.png\n"Notifications")\n\n![minions](https://user-images.githubusercontent.com/140797/50301291-de857c00-04c1-11e9-84c5-bfbc8de8295f.png\n"Minions and minor modes")\n\n![debug](https://user-images.githubusercontent.com/140797/50302008-c57dca80-04c3-11e9-8578-50154ef4f9f0.png\n"Debug state")\n\n![nyan_parrot](https://user-images.githubusercontent.com/140797/51301061-da209480-1a68-11e9-9f64-905d889df9d6.png\n"Nyan and Parrot")\n\n![irc](https://user-images.githubusercontent.com/140797/69004814-20c67000-0954-11ea-8489-f5a527a80574.png\n"IRC Notifications")\n\n![battery](https://user-images.githubusercontent.com/140797/53593622-ba35d200-3bcb-11e9-85b3-38d64d05c127.png\n"Battery")\n\n![package](https://user-images.githubusercontent.com/140797/57503916-e769d380-7324-11e9-906d-44c79f7408a3.png\n"Package")\n\n![info](https://user-images.githubusercontent.com/140797/57506248-d96c8080-732d-11e9-8167-644c8fc4e0db.png\n"Info")\n\n![helm](https://user-images.githubusercontent.com/140797/57506112-6531dd00-732d-11e9-8a5e-22166f42dd4c.png\n"Helm")\n\n## Install\n\n### Manual\n\nFrom melpa, `M-x package-install RET doom-modeline RET`.\n\nIn `init.el`,\n\n``` emacs-lisp\n(require \'doom-modeline)\n(doom-modeline-mode 1)\n```\n\n### Use-package\n\n``` emacs-lisp\n(use-package doom-modeline\n      :ensure t\n      :hook (after-init . doom-modeline-mode))\n```\n\nThis package requires the fonts included with `all-the-icons` to be installed.\nRun `M-x all-the-icons-install-fonts` to do so. Please refer to the\n[installation guide](https://github.com/domtronn/all-the-icons.el#installation).\n\nStrongly recommend to use\n[doom-themes](https://github.com/hlissner/emacs-doom-themes) at the same time.\n\n## Customize\n\nRun `M-x customize-group RET doom-modeline RET` or set the variables.\n\n``` emacs-lisp\n;; How tall the mode-line should be. It\'s only respected in GUI.\n;; If the actual char height is larger, it respects the actual height.\n(setq doom-modeline-height 25)\n\n;; How wide the mode-line bar should be. It\'s only respected in GUI.\n(setq doom-modeline-bar-width 3)\n\n;; How to detect the project root.\n;; The default priority of detection is `ffip\' > `projectile\' > `project\'.\n;; nil means to use `default-directory\'.\n;; The project management packages have some issues on detecting project root.\n;; e.g. `projectile\' doesn\'t handle symlink folders well, while `project\' is unable\n;; to hanle sub-projects.\n;; You can specify one if you encounter the issue.\n(setq doom-modeline-project-detection \'project)\n\n;; Determines the style used by `doom-modeline-buffer-file-name\'.\n;;\n;; Given ~/Projects/FOSS/emacs/lisp/comint.el\n;;   truncate-upto-project => ~/P/F/emacs/lisp/comint.el\n;;   truncate-from-project => ~/Projects/FOSS/emacs/l/comint.el\n;;   truncate-with-project => emacs/l/comint.el\n;;   truncate-except-project => ~/P/F/emacs/l/comint.el\n;;   truncate-upto-root => ~/P/F/e/lisp/comint.el\n;;   truncate-all => ~/P/F/e/l/comint.el\n;;   relative-from-project => emacs/lisp/comint.el\n;;   relative-to-project => lisp/comint.el\n;;   file-name => comint.el\n;;   buffer-name => comint.el<2> (uniquify buffer name)\n;;\n;; If you are experiencing the laggy issue, especially while editing remote files\n;; with tramp, please try `file-name\' style.\n;; Please refer to https://github.com/bbatsov/projectile/issues/657.\n(setq doom-modeline-buffer-file-name-style \'truncate-upto-project)\n\n;; Whether display icons in mode-line. Respects `all-the-icons-color-icons\'.\n;; While using the server mode in GUI, should set the value explicitly.\n(setq doom-modeline-icon (display-graphic-p))\n\n;; Whether display the icon for `major-mode\'. Respects `doom-modeline-icon\'.\n(setq doom-modeline-major-mode-icon t)\n\n;; Whether display the colorful icon for `major-mode\'.\n;; Respects `doom-modeline-major-mode-icon\'.\n(setq doom-modeline-major-mode-color-icon t)\n\n;; Whether display the icon for the buffer state. It respects `doom-modeline-icon\'.\n(setq doom-modeline-buffer-state-icon t)\n\n;; Whether display the modification icon for the buffer.\n;; Respects `doom-modeline-icon\' and `doom-modeline-buffer-state-icon\'.\n(setq doom-modeline-buffer-modification-icon t)\n\n;; Whether to use unicode as a fallback (instead of ASCII) when not using icons.\n(setq doom-modeline-unicode-fallback nil)\n\n;; Whether display the minor modes in mode-line.\n(setq doom-modeline-minor-modes (featurep \'minions))\n\n;; If non-nil, a word count will be added to the selection-info modeline segment.\n(setq doom-modeline-enable-word-count nil)\n\n;; Major modes in which to display word count continuously.\n;; Also applies to any derived modes. Respects `doom-modeline-enable-word-count\'.\n(setq doom-modeline-continuous-word-count-modes \'(text-mode))\n\n;; Whether display the buffer encoding.\n(setq doom-modeline-buffer-encoding t)\n\n;; Whether display the indentation information.\n(setq doom-modeline-indent-info nil)\n\n;; If non-nil, only display one number for checker information if applicable.\n(setq doom-modeline-checker-simple-format t)\n\n;; The maximum number displayed for notifications.\n(setq doom-modeline-number-limit 99)\n\n;; The maximum displayed length of the branch name of version control.\n(setq doom-modeline-vcs-max-length 12)\n\n;; Whether display the perspective name. Non-nil to display in mode-line.\n(setq doom-modeline-persp-name t)\n\n;; If non nil the default perspective name is displayed in the mode-line.\n(setq doom-modeline-display-default-persp-name nil)\n\n;; Whether display the `lsp\' state. Non-nil to display in mode-line.\n(setq doom-modeline-lsp t)\n\n;; Whether display the GitHub notifications. It requires `ghub\' package.\n(setq doom-modeline-github nil)\n\n;; The interval of checking GitHub.\n(setq doom-modeline-github-interval (* 30 60))\n\n;; Whether display the modal state icon.\n;; Including `evil\', `overwrite\', `god\', `ryo\' and `xah-fly-keys\', etc.\n(setq doom-modeline-modal-icon t)\n\n;; Whether display the mu4e notifications. It requires `mu4e-alert\' package.\n(setq doom-modeline-mu4e t)\n\n;; Whether display the IRC notifications. It requires `circe\' or `erc\' package.\n(setq doom-modeline-irc t)\n\n;; Function to stylize the irc buffer names.\n(setq doom-modeline-irc-stylize \'identity)\n\n;; Whether display the environment version.\n(setq doom-modeline-env-version t)\n;; Or for individual languages\n(setq doom-modeline-env-enable-python t)\n(setq doom-modeline-env-enable-ruby t)\n(setq doom-modeline-env-enable-perl t)\n(setq doom-modeline-env-enable-go t)\n(setq doom-modeline-env-enable-elixir t)\n(setq doom-modeline-env-enable-rust t)\n\n;; Change the executables to use for the language version string\n(setq doom-modeline-env-python-executable "python") ; or `python-shell-interpreter\'\n(setq doom-modeline-env-ruby-executable "ruby")\n(setq doom-modeline-env-perl-executable "perl")\n(setq doom-modeline-env-go-executable "go")\n(setq doom-modeline-env-elixir-executable "iex")\n(setq doom-modeline-env-rust-executable "rustc")\n\n;; What to dispaly as the version while a new one is being loaded\n(setq doom-modeline-env-load-string "...")\n\n;; Hooks that run before/after the modeline version string is updated\n(setq doom-modeline-before-update-env-hook nil)\n(setq doom-modeline-after-update-env-hook nil)\n```\n\n## FAQ\n\n1. I am experiencing the laggy issue, how to resolve it?\n\n   Add this configuration into your init file:\n\n   ``` emacs-lisp\n   ;; Don\xe2\x80\x99t compact font caches during GC.\n   (setq inhibit-compacting-font-caches t)\n   ```\n\n1. A ridiculous path is displayed on mode-line while visiting a symbolink.\n\n    It\'s the default behaviors of Vanilla Emacs. If you want to display the real\n    names, please put this into your init file.\n\n    ``` emacs-lisp\n    (setq find-file-visit-truename t)\n    ```\n\n    If the file is controlled by vc, refer to the documentation of\n    `vc-follow-symlinks`.\n\n1. Can I add my mode-line segments myself? How to do that?\n\n   Of course. Just add the segments into `global-mode-string`.\n\n1. Why doesn\'t change of branch reflect in modeline?\n\n   Actually it\'s related to `magit` and `vc-mode`.\n   - Workaround:\n     - Revert the buffers manually.\n     - `(setq auto-revert-check-vc-info t)` brings the performance issue.\n   - Refer to:\n     - [The mode-line information isn\xe2\x80\x99t always\n       up-to-date](https://magit.vc/manual/magit/The-mode_002dline-information-isn_0027t-always-up_002dto_002ddate.html)\n     - [Maybe provide an alternative to VC\'s mode-line\n       information](https://github.com/magit/magit/issues/2687)\n\n1. How can I define my own mode-line?\n\n   Use `doom-modeline-def-modeline` to define your own mode-line and set it as\n   default.\n\n   For example:\n   - Define your custom doom-modeline\n\n   ```emacs-lisp\n   (doom-modeline-def-modeline \'my-simple-line\n     \'(bar matches buffer-info remote-host buffer-position parrot selection-info)\n     \'(misc-info minor-modes input-method buffer-encoding major-mode process vcs checker))\n   ```\n\n   - Set it to default using the `doom-modeline-mode-hook`:\n\n   ```emacs-lisp\n   (defun setup-custom-doom-modeline ()\n     (doom-modeline-set-modeline \'my-simple-line \'default))\n\n   (add-hook \'doom-modeline-mode-hook \'setup-custom-doom-modeline)\n   ```\n\n1. How to specify font size in modeline?\n\n    For example:\n\n    ``` emacs-lisp\n    (setq doom-modeline-height 1)\n    (set-face-attribute \'mode-line nil :height 100)\n    (set-face-attribute \'mode-line-inactive nil :height 100)\n    ```\n\n    or\n\n    ```emacs-lisp\n    (custom-set-faces\n      \'(mode-line ((t (:height 0.9))))\n      \'(mode-line-inactive ((t (:height 0.9)))))\n    ```\n\n    Please refer to [#189](https://github.com/seagle0128/doom-modeline/issues/189).\n\n1. How to disable symbolic links expanding in mode-line?\n\n   If you encounter the issue like this\n\n   ![Screenshot](https://user-images.githubusercontent.com/9449246/62822565-c3f93380-bb74-11e9-95f6-f9c24a6cbd14.png)\n\n   please try this setting\n\n   ```elisp\n   ;; built-in `project\' on 26+\n   (setq doom-modeline-project-detection \'project)\n   ;; or `find-in-project\' if it\'s installed\n   (setq doom-modeline-project-detection \'ffip)\n   ```\n\n   For more details, refer to\n   [#209](https://github.com/seagle0128/doom-modeline/issues/209) and\n   [#224](https://github.com/seagle0128/doom-modeline/issues/224).\n\n## Donate\n\nIf you think it\'s helpful for you, please consider paying a cup of coffee for\nme. Thank you! :smile:\n\n<img\nsrc="https://user-images.githubusercontent.com/140797/65818854-44204900-e248-11e9-9cc5-3e6339587cd8.png"\nalt="Alipay" width="120"/>\n&nbsp;&nbsp;&nbsp;&nbsp;\n<img\nsrc="https://user-images.githubusercontent.com/140797/65818844-366ac380-e248-11e9-931c-4bd872d0566b.png"\nalt="Wechat Pay" width="120"/>\n&nbsp;&nbsp;&nbsp;&nbsp;\n<a href="https://paypal.me/seagle0128" target="_blank">\n<img\nsrc="https://www.paypalobjects.com/digitalassets/c/website/marketing/apac/C2/logos-buttons/optimize/Online_Primary_Acceptance_Mark_RGB_V2_medium.jpg"\nalt="PayPal"/>\n</a>\n'