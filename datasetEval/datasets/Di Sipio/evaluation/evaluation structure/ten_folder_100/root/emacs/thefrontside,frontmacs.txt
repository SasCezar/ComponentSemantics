b'# Frontmacs\n\n[![ELPA Version](https://cdn.rawgit.com/thefrontside/frontmacs/master/elpa.svg?raw=true)](http://elpa.frontside.io/archive-contents)\n[![Build Status](https://travis-ci.org/thefrontside/frontmacs.svg?branch=master)](https://travis-ci.org/thefrontside/frontmacs)\n[![Join the chat at https://gitter.im/thefrontside/frontmacs](https://badges.gitter.im/thefrontside/frontmacs.svg)](https://gitter.im/thefrontside/frontmacs?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nA _package-based_, web-centric, customizable, awesome-by-default,\nacceptance-tested Emacs distribution curated by your friends at\n[Frontside][frontside].\n\nWe\'ve been using Emacs for years here at [Frontside][frontside], and\nhave finally decided to share the configuration for our favorite\neditor with the world. Why did we make our own?\n\n### Package Based.\n\nWe\'ve been satisfied users of many a starter kit over the years, from\nthe original [Emacs Starter Kit][2], to [Prelude][3] and\n[Spacemacs][4]. Most starter kits you come across _begin_ with a\nfork. You clone the repo, and then you\'re off to the races maintaining\nyour own version. Any customizations you make are made to files\nunder version control and so upgrading and keeping up with the\ncommunity is a constant battle of merges, rebases, throw-aways and\nultimately do overs. We know because we\'ve [been there][5].\n\nThis is painful enough when you\'re maintaining your own fork, but\nevery time we wanted to make a customization from which the entire\nteam could benefit, it involved everybody doing the same merge, rebase,\nthrow-away dance. But, it turns out that Emacs has a mechanism to\ndistribute elisp code without having to use git. It\'s called `ELPA`\nand it\'s awesome. You can think of it like a Ruby gem or an NPM\npackage, and this is what Frontmacs uses for deployment.\n\nWe don\'t want to maintain code, we just want to enter a few keystrokes\nand download more awesome. And that\'s what we get by using elisp\npackages to install Frontmacs. Now, anytime we fix a bug or make an\nimprovement, the entire team can benefit with a simple upgrade.\n\n### Web technologies\n\nWe are specialists in UI, and so it is natural that our Emacs\ndistribution reflect that expertise. If you work in the web, then you\ncan be sure that Frontmacs will be an able partner in slinging modern\nJavaScript using modern frameworks. Whether it\'s React, React Native,\nAngular, Ember, SASS.... whatever.\n\n### Awesome by Default\n\nEmacs is true ultimate power! But that doesn\'t mean that it should be\nintimidating or terrifying to set up. Frontmacs aims to have\neverything you would expect to have a modern development environment\nto have out of the box: navigation, completion, etc...\n\nIt draws power in a shared configuration in which everybody has a\nstake. More knowledge shared means fewer bugs arise, and those that do\nget resolved more quickly.\n\n\n### Customizable\n\nJust because the default set of packages is heavily curated, doesn\'t\nmean that there shouldn\'t be room for you to innovate and exercise\nyour creative muscles.\n\nIn fact, because Frontmacs is distributed as an Emacs Lisp package, it is\n_decoupled_ from git and so you are now free to maintain your own\ncustomizations in your own repository without fear of conflicting with\nthe main distribution.\n\n### Acceptance Tested\n\nMost of the planet doesn\'t treat editor configuration as software. We\ndo.\n\nWhenever you integrate a bunch of different packages from across the\ninternet, you\'re bound to run into conflicts over things like\nkey-bindings, or function advice.\n\nMaking changes to an editing experience shared by many people is a\nresponsibility we take very seriously. That\'s why Frontmacs makes sure\nthat critical behaviors are tested so that you won\'t get bad upgrades\nthat ruin your day. If you do, you can run the test suite to find out\nexactly what went wrong and where.\n\n---\n\n## Installation\n\nDownload the bootstrap script into your emacs directory\n\n```\n$ cd ~/.emacs.d\n$ wget https://raw.githubusercontent.com/thefrontside/frontmacs/master/scripts/init-frontmacs.el\n```\n\nadd the following lines to the top of your `init.el`:\n\n``` emacs-lisp\n;; boot frontmacs\n(load (expand-file-name "init-frontmacs.el" user-emacs-directory))\n```\n\nRestart your Emacs and away you go!\n\n---\n\n## Configuration\n\nFrontmacs will create several files and directories in your Emacs\ndirectory (usually `$HOME/.emacs.d`) to help with configuration and\ninitialization. The first is `config.el` This file is loaded _before_\nFrontmacs actually initializes, and so it\'s a chance to set any\nwell defined customizations. But don\'t worry, Frontmacs will generate\nthis file for you so that you can see what all configuration variables\nare available.\n\nFor everything else, there are all of the files contained in\n`$HOME/.emacs.d/initializers`. Every elisp file contained in this\ndirectory will be evaluated _after_ Frontmacs has been fully\nconfigured and initialized, so settings made in these files will\noverride anything that comes with Frontmacs out of the box. For\nexample, you can create your Ruby configuration with a file called:\n\n`$HOME/.emacs.d/initializers/ruby.el`\n\n``` emacs-lisp\n(eval-after-load \'rspec-mode\n  \'(rspec-install-snippets))\n\n(add-to-list \'auto-mode-alist \'("Gemfile" . ruby-mode))\n(add-to-list \'auto-mode-alist \'("\\\\.gemspec\\\\\'" . ruby-mode))\n```\n\nJust drop any `.el` file into the `initializers/` directory, and\nFrontmacs will evaluate it.\n\n> Note: When in doubt about whether you should put something in `config.el` or a\n> custom initializer, use an initializer.\n\n---\n\n## Development\n\nYou will need a patched version of `Cask` to do development on.\n\n```\n$ git clone -b specify-package-descriptor --depth=1 https://github.com/cowboyd/cask.git $HOME/.cask\n$ export PATH=$HOME/.cask/bin:$PATH\n```\n\n### install dependencies\n\n```\n$ cask install\n```\n\n### Run an emacs using nothing but the local frontmacs\n\n```\n$ make runlocal\n```\n\n[frontside]: http://frontside.io\n[2]: https://github.com/technomancy/emacs-starter-kit\n[3]: https://github.com/bbatsov/prelude\n[4]: http://spacemacs.org/\n[5]: https://github.com/thefrontside/.emacs.d\n'