b'# Emacs Markdown Mode [![MELPA badge][melpa-badge]][melpa-link] [![MELPA stable badge][melpa-stable-badge]][melpa-stable-link] [![Travis CI Build Status][travis-badge]][travis-link] [![Guide to Markdown Mode for Emacs][leanpub-badge]][leanpub-link]\n\n  [melpa-link]: https://melpa.org/#/markdown-mode\n  [melpa-stable-link]: https://stable.melpa.org/#/markdown-mode\n  [melpa-badge]: https://melpa.org/packages/markdown-mode-badge.svg\n  [melpa-stable-badge]: https://stable.melpa.org/packages/markdown-mode-badge.svg\n  [travis-link]: https://travis-ci.org/jrblevin/markdown-mode\n  [travis-badge]: https://travis-ci.org/jrblevin/markdown-mode.svg?branch=master\n  [leanpub-link]: https://leanpub.com/markdown-mode\n  [leanpub-badge]: https://img.shields.io/badge/leanpub-guide-orange.svg\n\nmarkdown-mode is a major mode for editing [Markdown][]-formatted\ntext.  The latest stable version is markdown-mode 2.3, released on\nAugust 31, 2017.  See the [release notes][] for details.\nmarkdown-mode is free software, licensed under the GNU GPL,\nversion 3 or later.\n\n![Markdown Mode Screenshot](https://jblevins.org/projects/markdown-mode/screenshots/20170818-001.png)\n\n[Markdown]: http://daringfireball.net/projects/markdown/\n[release notes]: https://jblevins.org/projects/markdown-mode/rev-2-3\n\n## Documentation\n\n<a href="https://leanpub.com/markdown-mode">\n<img src="https://jblevins.org/projects/markdown-mode/guide-v2.3.png" align="right" height="350" width="231">\n</a>\n\nThe primary documentation for Markdown Mode is available below, and\nis generated from comments in the source code.  For a more in-depth\ntreatment, the [_Guide to Markdown Mode for Emacs_][guide] covers\nMarkdown syntax, advanced movement and editing in Emacs,\nextensions, configuration examples, tips and tricks, and a survey\nof other packages that work with Markdown Mode.  Finally, Emacs is\nalso a self-documenting editor.  This means that the source code\nitself contains additional documentation: each function has its own\ndocstring available via <kbd>C-h f</kbd> (`describe-function`), individual\nkeybindings can be investigated with <kbd>C-h k</kbd> (`describe-key`), and\na complete list of keybindings is available using <kbd>C-h m</kbd>\n(`describe-mode`).\n\n [guide]: https://leanpub.com/markdown-mode\n\n## Installation\n\n_Note:_ To use all of the features of `markdown-mode`, you\'ll need\nto install the Emacs package itself and also have a local Markdown\nprocessor installed (e.g., Markdown.pl, MultiMarkdown, or Pandoc).\nThe external processor is not required for editing, but will be\nused for rendering HTML for preview and export. After installing\nthe Emacs package, be sure to configure `markdown-command` to point\nto the preferred Markdown executable on your system.  See the\nCustomization section below for more details.\n\nThe recommended way to install `markdown-mode` is to install the package\nfrom [MELPA Stable](https://stable.melpa.org/#/markdown-mode)\nusing `package.el`. First, configure `package.el` and the MELPA Stable\nrepository by adding the following to your `.emacs`, `init.el`,\nor equivalent startup file:\n\n```lisp\n(require \'package)\n(add-to-list \'package-archives\n             \'("melpa-stable" . "https://stable.melpa.org/packages/"))\n(package-initialize)\n```\n\nThen, after restarting Emacs or evaluating the above statements, issue\nthe following command: <kbd>M-x package-install RET markdown-mode RET</kbd>.\nWhen installed this way, the major modes `markdown-mode` and `gfm-mode`\nwill be autoloaded and `markdown-mode` will be used for file names\nending in either `.md` or `.markdown`.\n\nAlternatively, if you manage loading packages with [use-package][]\nthen you can automatically install and configure `markdown-mode` by\nadding a declaration such as this one to your init file (as an\nexample; adjust settings as desired):\n\n```lisp\n(use-package markdown-mode\n  :ensure t\n  :mode (("README\\\\.md\\\\\'" . gfm-mode)\n         ("\\\\.md\\\\\'" . markdown-mode)\n         ("\\\\.markdown\\\\\'" . markdown-mode))\n  :init (setq markdown-command "multimarkdown"))\n```\n\n[MELPA Stable]: http://stable.melpa.org/\n[use-package]: https://github.com/jwiegley/use-package\n\n**Direct Download**\n\nAlternatively you can manually download and install markdown-mode.\nFirst, download the [latest stable version][markdown-mode.el] and\nsave the file where Emacs can find it (i.e., a directory in your\n`load-path`). You can then configure `markdown-mode` and `gfm-mode`\nto load automatically by adding the following to your init file:\n\n```lisp\n(autoload \'markdown-mode "markdown-mode"\n   "Major mode for editing Markdown files" t)\n(add-to-list \'auto-mode-alist \'("\\\\.markdown\\\\\'" . markdown-mode))\n(add-to-list \'auto-mode-alist \'("\\\\.md\\\\\'" . markdown-mode))\n\n(autoload \'gfm-mode "markdown-mode"\n   "Major mode for editing GitHub Flavored Markdown files" t)\n(add-to-list \'auto-mode-alist \'("README\\\\.md\\\\\'" . gfm-mode))\n```\n\n[markdown-mode.el]: https://jblevins.org/projects/markdown-mode/markdown-mode.el\n\n**Development Version**\n\nTo follow or contribute to markdown-mode development, you can\nbrowse or clone the Git repository\n[on GitHub](https://github.com/jrblevin/markdown-mode):\n\n```\ngit clone https://github.com/jrblevin/markdown-mode.git\n```\n\nIf you prefer to install and use the development version, which may\nbecome unstable at some times, you can either clone the Git\nrepository as above or install markdown-mode from\n[MELPA](https://melpa.org/#/markdown-mode).\n\nIf you clone the repository directly, then make sure that Emacs can\nfind it by adding the following line to your startup file:\n\n```lisp\n(add-to-list \'load-path "/path/to/markdown-mode/repository")\n```\n\n**Packaged Installation**\n\nmarkdown-mode is also available in several package managers. You\nmay want to confirm that the package you install contains the\nlatest stable version first (and please notify the package\nmaintainer if not).\n\n   * Debian Linux: [elpa-markdown-mode][] and [emacs-goodies-el][]\n   * Ubuntu Linux: [elpa-markdown-mode][elpa-ubuntu] and [emacs-goodies-el][emacs-goodies-el-ubuntu]\n   * RedHat and Fedora Linux: [emacs-goodies][]\n   * NetBSD: [textproc/markdown-mode][]\n   * MacPorts: [markdown-mode.el][macports-package] ([pending][macports-ticket])\n   * FreeBSD: [textproc/markdown-mode.el][freebsd-port]\n\n [elpa-markdown-mode]: https://packages.debian.org/sid/lisp/elpa-markdown-mode\n [elpa-ubuntu]: http://packages.ubuntu.com/search?keywords=elpa-markdown-mode\n [emacs-goodies-el]: http://packages.debian.org/emacs-goodies-el\n [emacs-goodies-el-ubuntu]: http://packages.ubuntu.com/search?keywords=emacs-goodies-el\n [emacs-goodies]: https://apps.fedoraproject.org/packages/emacs-goodies\n [textproc/markdown-mode]: http://pkgsrc.se/textproc/markdown-mode\n [macports-package]: https://trac.macports.org/browser/trunk/dports/editors/markdown-mode.el/Portfile\n [macports-ticket]: http://trac.macports.org/ticket/35716\n [freebsd-port]: http://svnweb.freebsd.org/ports/head/textproc/markdown-mode.el\n\n**Dependencies**\n\nTo enable editing of code blocks in indirect buffers using <kbd>C-c \'</kbd>,\nyou will need to install the [`edit-indirect`][ei] package.\n\n  [ei]: https://github.com/Fanael/edit-indirect/\n\n## Usage\n\nKeybindings are grouped by prefixes based on their function.  For\nexample, the commands for styling text are grouped under <kbd>C-c C-s</kbd>\nand toggle commands begin with <kbd>C-c C-x</kbd>.  The primary commands in\neach group will are described below.  You can obtain a list of all\nkeybindings by pressing <kbd>C-c C-h</kbd>.  Movement and shifting commands\ntend to be associated with paired delimiters such as <kbd>M-{</kbd> and\n<kbd>M-}</kbd> or <kbd>C-c <</kbd> and <kbd>C-c ></kbd>.  Outline navigation keybindings the\nsame as in `org-mode`.  Finally, commands for running Markdown or\ndoing maintenance on an open file are grouped under the <kbd>C-c C-c</kbd>\nprefix.  The most commonly used commands are described below. You\ncan obtain a list of all keybindings by pressing <kbd>C-c C-h</kbd>.\n\n  * Links and Images: <kbd>C-c C-l</kbd> and <kbd>C-c C-i</kbd>\n\n    <kbd>C-c C-l</kbd> (`markdown-insert-link`) is a general command for\n    inserting new link markup or editing existing link markup. This\n    is especially useful when markup or URL hiding is enabled, so\n    that URLs can\'t easily be edited directly.  This command can be\n    used to insert links of any form: either inline links,\n    reference links, or plain URLs in angle brackets.  The URL or\n    `[reference]` label, link text, and optional title are entered\n    through a series of interactive prompts.  The type of link is\n    determined by which values are provided:\n\n    *   If both a URL and link text are given, insert an inline link:\n        `[text](url)`.\n    *   If both a `[reference]` label and link text are given, insert\n        a reference link: `[text][reference]`.\n    *   If only link text is given, insert an implicit reference link:\n        `[text][]`.\n    *   If only a URL is given, insert a plain URL link:\n        `<url>`.\n\n    Similarly, <kbd>C-c C-i</kbd> (`markdown-insert-image`) is a general\n    command for inserting or editing image markup.  As with the link\n    insertion command, through a series interactive prompts you can\n    insert either an inline or reference image:\n\n    *   If both a URL and alt text are given, insert an inline\n        image: `![alt text](url)`.\n    *   If both a `[reference]` label and alt text are given,\n        insert a reference link: `![alt text][reference]`.\n\n    If there is an existing link or image at the point, these\n    command will edit the existing markup rather than inserting new\n    markup.  Otherwise, if there is an active region, these commands\n    use the region as either the default URL (if it seems to be a\n    URL) or link text value otherwise.  In that case, the region\n    will be deleted and replaced by the link.\n\n    Note that these functions can be used to convert links and\n    images from one type to another (inline, reference, or plain\n    URL) by selectively adding or removing properties via the\n    interactive prompts.\n\n    If a reference label is given that is not yet defined, you\n    will be prompted for the URL and optional title and the\n    reference will be inserted according to the value of\n    `markdown-reference-location`.  If a title is given, it will be\n    added to the end of the reference definition and will be used\n    to populate the title attribute when converted to HTML.\n\n    Images associated with image links may be displayed\n    inline in the buffer by pressing <kbd>C-c C-x C-i</kbd>\n    (`markdown-toggle-inline-images`).  This is a toggle command, so\n    pressing this once again will remove inline images.\n    By default, only local images are displayed.  However, remote\n    images will also be downloaded and displayed if\n    `markdown-display-remote-images` is non-nil.\n\n    Large images may be scaled down to fit in the buffer using\n    `markdown-max-image-size`, a cons cell of the form `(max-width\n    . max-height)`.  Resizing requires Emacs to be built with\n    ImageMagick support.\n\n  * Text Styles: <kbd>C-c C-s</kbd>\n\n    <kbd>C-c C-s i</kbd> inserts markup to make a region or word italic. If\n    there is an active region, make the region italic.  If the point\n    is at a non-italic word, make the word italic.  If the point is\n    at an italic word or phrase, remove the italic markup.\n    Otherwise, simply insert italic delimiters and place the point\n    in between them.  Similarly, use <kbd>C-c C-s b</kbd> for bold, <kbd>C-c C-s c</kbd>\n    for inline code, and <kbd>C-c C-s k</kbd> for inserting `<kbd>` tags.\n\n    <kbd>C-c C-s q</kbd> inserts a blockquote using the active region, if\n    any, or starts a new blockquote. <kbd>C-c C-s Q</kbd> is a variation\n    which always operates on the region, regardless of whether it\n    is active or not (i.e., when `transient-mark-mode` is off but\n    the mark is set).  The appropriate amount of indentation, if\n    any, is calculated automatically given the surrounding context,\n    but may be adjusted later using the region indentation\n    commands.\n\n    <kbd>C-c C-s p</kbd> behaves similarly for inserting preformatted code\n    blocks (with <kbd>C-c C-s P</kbd> being the region-only counterpart)\n    and <kbd>C-c C-s C</kbd> inserts a GFM style backquote fenced code block.\n\n  * Headings: <kbd>C-c C-s</kbd>\n\n    To insert or replace headings, there are two options.  You can\n    insert a specific level heading directly or you can have\n    `markdown-mode` determine the level for you based on the previous\n    heading.  As with the other markup commands, the heading\n    insertion commands use the text in the active region, if any,\n    as the heading text.  Otherwise, if the current line is not\n    blank, they use the text on the current line.  Finally, the\n    setext commands will prompt for heading text if there is no\n    active region and the current line is blank.\n\n    <kbd>C-c C-s h</kbd> inserts a heading with automatically chosen type and\n    level (both determined by the previous heading).  <kbd>C-c C-s H</kbd>\n    behaves similarly, but uses setext (underlined) headings when\n    possible, still calculating the level automatically.\n    In cases where the automatically-determined level is not what\n    you intended, the level can be quickly promoted or demoted\n    (as described below).  Alternatively, a <kbd>C-u</kbd> prefix can be\n    given to insert a heading _promoted_ (lower number) by one\n    level or a <kbd>C-u C-u</kbd> prefix can be given to insert a heading\n    demoted (higher number) by one level.\n\n    To insert a heading of a specific level and type, use <kbd>C-c C-s 1</kbd>\n    through <kbd>C-c C-s 6</kbd> for atx (hash mark) headings and <kbd>C-c C-s !</kbd> or\n    <kbd>C-c C-s @</kbd> for setext headings of level one or two, respectively.\n    Note that <kbd>!</kbd> is <kbd>S-1</kbd> and <kbd>@</kbd> is <kbd>S-2</kbd>.\n\n    If the point is at a heading, these commands will replace the\n    existing markup in order to update the level and/or type of the\n    heading.  To remove the markup of the heading at the point,\n    press <kbd>C-c C-k</kbd> to kill the heading and press <kbd>C-y</kbd> to yank the\n    heading text back into the buffer.\n\n  * Horizontal Rules: <kbd>C-c C-s -</kbd>\n\n    <kbd>C-c C-s -</kbd> inserts a horizontal rule.  By default, insert the\n    first string in the list `markdown-hr-strings` (the most\n    prominent rule).  With a <kbd>C-u</kbd> prefix, insert the last string.\n    With a numeric prefix <kbd>N</kbd>, insert the string in position <kbd>N</kbd>\n    (counting from 1).\n\n  * Footnotes: <kbd>C-c C-s f</kbd>\n\n    <kbd>C-c C-s f</kbd> inserts a footnote marker at the point, inserts a\n    footnote definition below, and positions the point for\n    inserting the footnote text.  Note that footnotes are an\n    extension to Markdown and are not supported by all processors.\n\n  * Wiki Links: <kbd>C-c C-s w</kbd>\n\n    <kbd>C-c C-s w</kbd> inserts a wiki link of the form `[[WikiLink]]`.  If\n    there is an active region, use the region as the link text.  If the\n    point is at a word, use the word as the link text.  If there is\n    no active region and the point is not at word, simply insert\n    link markup.  Note that wiki links are an extension to Markdown\n    and are not supported by all processors.\n\n  * Markdown and Maintenance Commands: <kbd>C-c C-c</kbd>\n\n    *Compile:* <kbd>C-c C-c m</kbd> will run Markdown on the current buffer\n    and show the output in another buffer.  *Preview*: <kbd>C-c C-c p</kbd>\n    runs Markdown on the current buffer and previews, stores the\n    output in a temporary file, and displays the file in a browser.\n    *Export:* <kbd>C-c C-c e</kbd> will run Markdown on the current buffer\n    and save the result in the file `basename.html`, where\n    `basename` is the name of the Markdown file with the extension\n    removed.  *Export and View:* press <kbd>C-c C-c v</kbd> to export the\n    file and view it in a browser.  *Open:* <kbd>C-c C-c o</kbd> will open\n    the Markdown source file directly using `markdown-open-command`.\n    *Live Export*: Press <kbd>C-c C-c l</kbd> to turn on\n    `markdown-live-preview-mode` to view the exported output\n    side-by-side with the source Markdown. **For all export commands,\n    the output file will be overwritten without notice.**\n    `markdown-live-preview-window-function` can be customized to open\n    in a browser other than `eww`.  If you want to force the\n    preview window to appear at the bottom or right, you can\n    customize `markdown-split-window-direction`.\n\n    To summarize:\n\n      - <kbd>C-c C-c m</kbd>: `markdown-command` > `*markdown-output*` buffer.\n      - <kbd>C-c C-c p</kbd>: `markdown-command` > temporary file > browser.\n      - <kbd>C-c C-c e</kbd>: `markdown-command` > `basename.html`.\n      - <kbd>C-c C-c v</kbd>: `markdown-command` > `basename.html` > browser.\n      - <kbd>C-c C-c w</kbd>: `markdown-command` > kill ring.\n      - <kbd>C-c C-c o</kbd>: `markdown-open-command`.\n      - <kbd>C-c C-c l</kbd>: `markdown-live-preview-mode` > `*eww*` buffer.\n\n    <kbd>C-c C-c c</kbd> will check for undefined references.  If there are\n    any, a small buffer will open with a list of undefined\n    references and the line numbers on which they appear.  In Emacs\n    22 and greater, selecting a reference from this list and\n    pressing <kbd>RET</kbd> will insert an empty reference definition at the\n    end of the buffer.  Similarly, selecting the line number will\n    jump to the corresponding line.\n\n    <kbd>C-c C-c u</kbd> will check for unused references.  This will\n    also open a small buffer if any are found, similar to undefined\n    reference checking.  The buffer for unused references will contain\n    `X` buttons that remove unused references when selected.\n\n    <kbd>C-c C-c n</kbd> renumbers any ordered lists in the buffer that are\n    out of sequence.\n\n    <kbd>C-c C-c ]</kbd> completes all headings and normalizes all horizontal\n    rules in the buffer.\n\n  * Following Links: <kbd>C-c C-o</kbd>\n\n    Press <kbd>C-c C-o</kbd> when the point is on an inline or reference\n    link to open the URL in a browser.  When the point is at a\n    wiki link, open it in another buffer (in the current window,\n    or in the other window with the <kbd>C-u</kbd> prefix).  Use <kbd>M-p</kbd> and\n    <kbd>M-n</kbd> to quickly jump to the previous or next link of any type.\n\n  * Doing Things: <kbd>C-c C-d</kbd>\n\n    Use <kbd>C-c C-d</kbd> to do something sensible with the object at the point:\n\n      - Jumps between reference links and reference definitions.\n        If more than one link uses the same reference label, a\n        window will be shown containing clickable buttons for\n        jumping to each link.  Pressing <kbd>TAB</kbd> or <kbd>S-TAB</kbd> cycles\n        between buttons in this window.\n      - Jumps between footnote markers and footnote text.\n      - Toggles the completion status of GFM task list items\n        (checkboxes).\n      - Re-aligns table columns.\n\n  * Promotion and Demotion: <kbd>C-c C--</kbd> and <kbd>C-c C-=</kbd>\n\n    Headings, horizontal rules, and list items can be promoted and\n    demoted, as well as bold and italic text.  For headings,\n    "promotion" means *decreasing* the level (i.e., moving from\n    `<h2>` to `<h1>`) while "demotion" means *increasing* the\n    level.  For horizontal rules, promotion and demotion means\n    moving backward or forward through the list of rule strings in\n    `markdown-hr-strings`.  For bold and italic text, promotion and\n    demotion means changing the markup from underscores to asterisks.\n    Press <kbd>C-c C--</kbd> or <kbd>C-c LEFT</kbd> to promote the element at the point\n    if possible.\n\n    To remember these commands, note that <kbd>-</kbd> is for decreasing the\n    level (promoting), and <kbd>=</kbd> (on the same key as <kbd>+</kbd>) is for\n    increasing the level (demoting).  Similarly, the left and right\n    arrow keys indicate the direction that the atx heading markup\n    is moving in when promoting or demoting.\n\n  * Completion: <kbd>C-c C-]</kbd>\n\n    Complete markup is in normalized form, which means, for\n    example, that the underline portion of a setext header is the\n    same length as the heading text, or that the number of leading\n    and trailing hash marks of an atx header are equal and that\n    there is no extra whitespace in the header text.  <kbd>C-c C-]</kbd>\n    completes the markup at the point, if it is determined to be\n    incomplete.\n\n  * Editing Lists: <kbd>M-RET</kbd>, <kbd>C-c UP</kbd>, <kbd>C-c DOWN</kbd>, <kbd>C-c LEFT</kbd>, and <kbd>C-c RIGHT</kbd>\n\n    New list items can be inserted with <kbd>M-RET</kbd> or <kbd>C-c C-j</kbd>.  This\n    command determines the appropriate marker (one of the possible\n    unordered list markers or the next number in sequence for an\n    ordered list) and indentation level by examining nearby list\n    items.  If there is no list before or after the point, start a\n    new list.  As with heading insertion, you may prefix this\n    command by <kbd>C-u</kbd> to decrease the indentation by one level.\n    Prefix this command by <kbd>C-u C-u</kbd> to increase the indentation by\n    one level.\n\n    Existing list items (and their nested sub-items) can be moved\n    up or down with <kbd>C-c UP</kbd> or <kbd>C-c DOWN</kbd> and indented or\n    outdented with <kbd>C-c RIGHT</kbd> or <kbd>C-c LEFT</kbd>.\n\n  * Editing Subtrees: <kbd>C-c UP</kbd>, <kbd>C-c DOWN</kbd>, <kbd>C-c LEFT</kbd>, and <kbd>C-c RIGHT</kbd>\n\n    Entire subtrees of ATX headings can be promoted and demoted\n    with <kbd>C-c LEFT</kbd> and <kbd>C-c RIGHT</kbd>, which are the same keybindings\n    used for promotion and demotion of list items.   If the point is in\n    a list item, the operate on the list item.  Otherwise, they operate\n    on the current heading subtree.  Similarly, subtrees can be\n    moved up and down with <kbd>C-c UP</kbd> and <kbd>C-c DOWN</kbd>.\n\n    These commands currently do not work properly if there are\n    Setext headings in the affected region.\n\n    Please note the following "boundary" behavior for promotion and\n    demotion.  Any level-six headings will not be demoted further\n    (i.e., they remain at level six, since Markdown and HTML define\n    only six levels) and any level-one headings will promoted away\n    entirely (i.e., heading markup will be removed, since a\n    level-zero heading is not defined).\n\n  * Shifting the Region: <kbd>C-c <</kbd> and <kbd>C-c ></kbd>\n\n    Text in the region can be indented or outdented as a group using\n    <kbd>C-c ></kbd> to indent to the next indentation point (calculated in\n    the current context), and <kbd>C-c <</kbd> to outdent to the previous\n    indentation point.  These keybindings are the same as those for\n    similar commands in `python-mode`.\n\n  * Killing Elements: <kbd>C-c C-k</kbd>\n\n    Press <kbd>C-c C-k</kbd> to kill the thing at point and add important\n    text, without markup, to the kill ring.  Possible things to\n    kill include (roughly in order of precedece): inline code,\n    headings, horizonal rules, links (add link text to kill ring),\n    images (add alt text to kill ring), angle URIs, email\n    addresses, bold, italics, reference definitions (add URI to\n    kill ring), footnote markers and text (kill both marker and\n    text, add text to kill ring), and list items.\n\n  * Outline Navigation: <kbd>C-c C-n</kbd>, <kbd>C-c C-p</kbd>, <kbd>C-c C-f</kbd>, <kbd>C-c C-b</kbd>, and <kbd>C-c C-u</kbd>\n\n    These keys are used for hierarchical navigation in lists and\n    headings.  When the point is in a list, they move between list\n    items.  Otherwise, they move between headings.  Use <kbd>C-c C-n</kbd> and\n    <kbd>C-c C-p</kbd> to move between the next and previous visible\n    headings or list items of any level.  Similarly, <kbd>C-c C-f</kbd> and\n    <kbd>C-c C-b</kbd> move to the next and previous visible headings or\n    list items at the same level as the one at the point.  Finally,\n    <kbd>C-c C-u</kbd> will move up to the parent heading or list item.\n\n  * Movement by Markdown paragraph: <kbd>M-{</kbd>, <kbd>M-}</kbd>, and <kbd>M-h</kbd>\n\n    Paragraphs in `markdown-mode` are regular paragraphs,\n    paragraphs inside blockquotes, individual list items, headings,\n    etc.  These keys are usually bound to `forward-paragraph` and\n    `backward-paragraph`, but the built-in Emacs functions are\n    based on simple regular expressions that fail in Markdown\n    files.  Instead, they are bound to `markdown-forward-paragraph`\n    and `markdown-backward-paragraph`.  To mark a paragraph,\n    you can use <kbd>M-h</kbd> (`markdown-mark-paragraph`).\n\n  * Movement by Markdown block: <kbd>C-M-{</kbd>, <kbd>C-M-}</kbd>, and <kbd>C-c M-h</kbd>\n\n    Markdown blocks are regular paragraphs in many cases, but\n    contain many paragraphs in other cases: blocks are considered\n    to be entire lists, entire code blocks, and entire blockquotes.\n    To move backward one block use <kbd>C-M-{</kbd>\n    (`markdown-beginning-block`) and to move forward use <kbd>C-M-}</kbd>\n    (`markdown-end-of-block`).  To mark a block, use <kbd>C-c M-h</kbd>\n    (`markdown-mark-block`).\n\n  * Movement by Defuns: <kbd>C-M-a</kbd>, <kbd>C-M-e</kbd>, and <kbd>C-M-h</kbd>\n\n    The usual Emacs commands can be used to move by defuns\n    (top-level major definitions).  In markdown-mode, a defun is a\n    section.  As usual, <kbd>C-M-a</kbd> will move the point to the\n    beginning of the current or preceding defun, <kbd>C-M-e</kbd> will move\n    to the end of the current or following defun, and <kbd>C-M-h</kbd> will\n    put the region around the entire defun.\n\n  * Table Editing:\n\n    Markdown Mode includes support for editing tables, which\n    have the following basic format:\n\n        | Right | Left | Center | Default |\n        |------:|:-----|:------:|---------|\n        |    12 | 12   | 12     | 12      |\n        |   123 | 123  | 123    | 123     |\n        |     1 | 1    | 1      | 1       |\n\n    The first line contains column headers. The second line\n    contains a separator line between the headers and the content.\n    Each following line is a row in the table.  Columns are always\n    separated by the pipe character.  The colons indicate column\n    alignment.\n\n    A table is re-aligned automatically each time you press <kbd>TAB</kbd>\n    or <kbd>RET</kbd> inside the table.  <kbd>TAB</kbd> also moves to the next\n    field (<kbd>RET</kbd> to the next row) and creates new table rows at\n    the end of the table or before horizontal separator lines.  The\n    indentation of the table is set by the first line.  Column\n    centering inside Emacs is not supported.\n\n    Beginning pipe characters are required for proper detection of\n    table borders inside Emacs.  Any line starting with `|-` or `|:`\n    is considered as a horizontal separator line and will be\n    expanded on the next re-align to span the whole table width.  No\n    padding is allowed between the beginning pipe character and\n    header separator symbol.  So, to create the above table, you\n    would only type\n\n        |Right|Left|Center|Default|\n        |-\n\n    and then press <kbd>TAB</kbd> to align the table and start filling in\n    cells.\n\n    Then you can jump with <kbd>TAB</kbd> from one cell to the next or with\n    <kbd>S-TAB</kbd> to the previous one.  <kbd>RET</kbd> will jump to the to the\n    next cell in the same column, and create a new row if there is\n    no such cell or if the next row is beyond a separator line.\n\n    You can also convert selected region to a table. Basic editing\n    capabilities include inserting, deleting, and moving of columns\n    and rows, and table re-alignment, sorting, transposition:\n\n      - <kbd>C-c UP</kbd> or <kbd>C-c DOWN</kbd> - Move the current row up or down.\n      - <kbd>C-c LEFT</kbd> or <kbd>C-c RIGHT</kbd> - Move the current column left or right.\n      - <kbd>C-c S-UP</kbd> - Kill the current row.\n      - <kbd>C-c S-DOWN</kbd> - Insert a row above the current row. With a\n        prefix argument, row line is created below the current one.\n      - <kbd>C-c S-LEFT</kbd> - Kill the current column.\n      - <kbd>C-c S-RIGHT</kbd> - Insert a new column to the left of the current one.\n      - <kbd>C-c C-d</kbd> - Re-align the current table (`markdown-do`).\n      - <kbd>C-c C-c ^</kbd> - Sort the rows of a table by a specified column.\n        This command prompts you for the column number and a sort\n        method (alphabetical or numerical, optionally in reverse).\n      - <kbd>C-c C-c |</kbd> - Convert the region to a table.  This function\n        attempts to recognize comma, tab, and space separated data\n        and then splits the data into cells accordingly.\n      - <kbd>C-c C-c t</kbd> - Transpose table at point.\n\n    The table editing functions try to handle markup hiding\n    correctly when calculating column widths, however, columns\n    containing hidden markup may not always be aligned properly.\n\n    <kbd>C-c C-s t</kbd> (`markdown-insert-table`) is a general command for inserting new table.\n    The command prompts for table size and column alignment and inserts an empty pipe table at point.\n\n  * Viewing Modes:\n\n    Read-only viewing modes, `markdown-view-mode` and `gfm-view-mode`\n    are provided for viewing Markdown content.  These modes provide\n    simplified keybindings for navigating the buffer.  Many of these\n    are like `help-mode` and `view-mode`, such as <kbd>SPC</kbd>,\n    <kbd>DEL</kbd>, <kbd><</kbd>, and <kbd>></kbd> for scrolling,\n    <kbd>q</kbd> for quitting, and <kbd>?</kbd> or <kbd>h</kbd> for\n    help.  Other keys are provided that mirror the outline navigation\n    commands when editing: <kbd>n</kbd>, <kbd>p</kbd>, <kbd>f</kbd>,\n    <kbd>b</kbd>, and <kbd>u</kbd>.  Both of these modes enable markup\n    hiding by default, but this can be customized by setting\n    `markdown-hide-markup-in-view-modes`.\n\n  * Miscellaneous Commands:\n\n    When the [`edit-indirect`][ei] package is installed, <kbd>C-c \'</kbd>\n    (`markdown-edit-code-block`) can be used to edit a code block\n    in an indirect buffer in the native major mode. Press <kbd>C-c C-c</kbd>\n    to commit changes and return or <kbd>C-c C-k</kbd> to cancel.  You can\n    also give a prefix argument to the insertion command, as in\n    <kbd>C-u C-c C-s C</kbd>, to edit the code block in an indirect buffer\n    upon insertion.\n\nAs noted, many of the commands above behave differently depending\non whether Transient Mark mode is enabled or not.  When it makes\nsense, if Transient Mark mode is on and the region is active, the\ncommand applies to the text in the region (e.g., <kbd>C-c C-s b</kbd> makes the\nregion bold).  For users who prefer to work outside of Transient\nMark mode, since Emacs 22 it can be enabled temporarily by pressing\n<kbd>C-SPC C-SPC</kbd>.  When this is not the case, many commands then\nproceed to look work with the word or line at the point.\n\nWhen applicable, commands that specifically act on the region even\noutside of Transient Mark mode have the same keybinding as their\nstandard counterpart, but the letter is uppercase.  For example,\n`markdown-insert-blockquote` is bound to <kbd>C-c C-s q</kbd> and only acts on\nthe region in Transient Mark mode while `markdown-blockquote-region`\nis bound to <kbd>C-c C-s Q</kbd> and always applies to the region (when nonempty).\n\nNote that these region-specific functions are useful in many\ncases where it may not be obvious.  For example, yanking text from\nthe kill ring sets the mark at the beginning of the yanked text\nand moves the point to the end.  Therefore, the (inactive) region\ncontains the yanked text.  So, <kbd>C-y</kbd> followed by <kbd>C-c C-s Q</kbd> will\nyank text and turn it into a blockquote.\n\nmarkdown-mode attempts to be flexible in how it handles\nindentation.  When you press <kbd>TAB</kbd> repeatedly, the point will cycle\nthrough several possible indentation levels corresponding to things\nyou might have in mind when you press <kbd>RET</kbd> at the end of a line or\n<kbd>TAB</kbd>.  For example, you may want to start a new list item,\ncontinue a list item with hanging indentation, indent for a nested\npre block, and so on.  Outdenting is handled similarly when backspace\nis pressed at the beginning of the non-whitespace portion of a line.\n\nmarkdown-mode supports outline-minor-mode as well as org-mode-style\nvisibility cycling for atx- or hash-style headings.  There are two\ntypes of visibility cycling: Pressing <kbd>S-TAB</kbd> cycles globally between\nthe table of contents view (headings only), outline view (top-level\nheadings only), and the full document view.  Pressing <kbd>TAB</kbd> while the\npoint is at a heading will cycle through levels of visibility for the\nsubtree: completely folded, visible children, and fully visible.\nNote that mixing hash and underline style headings will give undesired\nresults.\n\n## Customization\n\nAlthough no configuration is *necessary* there are a few things\nthat can be customized.  The <kbd>M-x customize-mode</kbd> command\nprovides an interface to all of the possible customizations:\n\n  * `markdown-command` - the command used to run Markdown (default:\n    `markdown`).  This variable may be customized to pass\n    command-line options to your Markdown processor of choice.  It can\n    also be a function; in this case `markdown` will call it with three\n    arguments: the beginning and end of the region to process, and\n    a buffer to write the output to.\n\n  * `markdown-command-needs-filename` - set to `t` if\n    `markdown-command` does not accept standard input (default:\n    `nil`).  When `nil`, `markdown-mode` will pass the Markdown\n    content to `markdown-command` using standard input (`stdin`).\n    When set to `t`, `markdown-mode` will pass the name of the file\n    as the final command-line argument to `markdown-command`.  Note\n    that in the latter case, you will only be able to run\n    `markdown-command` from buffers which are visiting a file.  If\n    `markdown-command` is a function, `markdown-command-needs-filename`\n    is ignored.\n\n  * `markdown-open-command` - the command used for calling a standalone\n    Markdown previewer which is capable of opening Markdown source files\n    directly (default: `nil`).  This command will be called\n    with a single argument, the filename of the current buffer.\n    A representative program is the Mac app [Marked 2][], a\n    live-updating Markdown previewer which can be [called from a\n    simple shell script](https://jblevins.org/log/marked-2-command).\n    This variable can also be a function; in this case `markdown-open`\n    will call it without arguments to preview the current buffer.\n\n  * `markdown-hr-strings` - list of strings to use when inserting\n    horizontal rules.  Different strings will not be distinguished\n    when converted to HTML--they will all be converted to\n    `<hr/>`--but they may add visual distinction and style to plain\n    text documents.  To maintain some notion of promotion and\n    demotion, keep these sorted from largest to smallest.\n\n  * `markdown-bold-underscore` - set to a non-nil value to use two\n    underscores when inserting bold text instead of two asterisks\n    (default: `nil`).\n\n  * `markdown-italic-underscore` - set to a non-nil value to use\n    underscores when inserting italic text instead of asterisks\n    (default: `nil`).\n\n  * `markdown-asymmetric-header` - set to a non-nil value to use\n    asymmetric header styling, placing header characters only on\n    the left of headers (default: `nil`).\n\n  * `markdown-header-scaling` - set to a non-nil value to use\n    a variable-pitch font for headings where the size corresponds\n    to the level of the heading (default: `nil`).\n\n  * `markdown-header-scaling-values` - list of scaling values,\n    relative to baseline, for headers of levels one through six,\n    used when `markdown-header-scaling` is non-nil\n    (default: `(2.0 1.7 1.4 1.1 1.0 1.0)`).\n\n  * `markdown-marginalize-headers` - put opening atx header markup\n    in the left margin when non-nil (default: `nil`).\n\n  * `markdown-marginalize-headers-margin-width` - width of margin\n    used for marginalized headers (default: 6).\n\n  * `markdown-list-indent-width` - depth of indentation for lists\n    when inserting, promoting, and demoting list items (default: 4).\n\n  * `markdown-indent-function` - the function to use for automatic\n    indentation (default: `markdown-indent-line`).\n\n  * `markdown-indent-on-enter` - Set to a non-nil value to\n    automatically indent new lines when <kbd>RET</kbd> is pressed.\n    Set to `indent-and-new-item` to additionally continue lists\n    when <kbd>RET</kbd> is pressed (default: `t`).\n\n  * `markdown-enable-wiki-links` - syntax highlighting for wiki\n    links (default: `nil`).  Set this to a non-nil value to turn on\n    wiki link support by default.  Wiki link support can be toggled\n    later using the function `markdown-toggle-wiki-links`."\n\n  * `markdown-wiki-link-alias-first` - set to a non-nil value to\n    treat aliased wiki links like `[[link text|PageName]]`\n    (default: `t`).  When set to nil, they will be treated as\n    `[[PageName|link text]]`.\n\n  * `markdown-uri-types` - a list of protocol schemes (e.g., "http")\n    for URIs that `markdown-mode` should highlight.\n\n  * `markdown-enable-math` - font lock for inline and display LaTeX\n    math expressions (default: `nil`).  Set this to `t` to turn on\n    math support by default.  Math support can be toggled\n    interactively later using <kbd>C-c C-x C-e</kbd>\n    (`markdown-toggle-math`).\n\n  * `markdown-enable-html` - font lock for HTML tags and attributes\n    (default: `t`).\n\n  * `markdown-css-paths` - CSS files to link to in XHTML output\n    (default: `nil`).\n\n  * `markdown-content-type` - used to set to the `http-equiv`\n    attribute to be included in the XHTML `<head>` block (default:\n    `"text/html"`).  Set to an alternate value `application/xhtml+xml`\n    if needed, or set to an empty string to remove the attribute.  See\n    also: `markdown-coding-system`.\n\n  * `markdown-coding-system` - used for specifying the character\n    set identifier in the `http-equiv` attribute when included\n    (default: `nil`).  See `markdown-content-type`, which must\n    be set for this variable to have any effect.  When set to `nil`,\n    `buffer-file-coding-system` will be used to automatically\n    determine the coding system string (falling back to\n    `utf-8` when unavailable).  Common settings are `iso-8859-1`\n    and `iso-latin-1`.\n\n  * `markdown-xhtml-header-content` - additional content to include\n    in the XHTML `<head>` block (default: `""`).\n\n  * `markdown-xhtml-body-preamble` - additional content to include in\n    the XHTML <body> block, before the output (default: `""`).  This\n    is useful for enclosing additional elements around the Markdown\n    output.\n\n  * `markdown-xhtml-body-epilogue` - additional content to include in\n    the XHTML <body> block, after the output (default: `""`).  This is\n    useful for enclosing additional elements around the Markdown\n    output.\n\n  * `markdown-xhtml-standalone-regexp` - a regular expression which\n    `markdown-mode` uses to determine whether the output of\n    `markdown-command` is a standalone XHTML document or an XHTML\n    fragment (default: `"^\\\\(<\\\\?xml\\\\|<!DOCTYPE\\\\|<html\\\\)"`).  If\n    this regular expression not matched in the first five lines of\n    output, `markdown-mode` assumes the output is a fragment and\n    adds a header and footer.\n\n  * `markdown-link-space-sub-char` - a character to replace spaces\n    when mapping wiki links to filenames (default: `"_"`).\n    For example, use an underscore for compatibility with the\n    Python Markdown WikiLinks extension.  In `gfm-mode`, this is\n    set to `"-"` to conform with GitHub wiki links.\n\n  * `markdown-reference-location` - where to insert reference\n    definitions (default: `header`).  The possible locations are\n    the end of the document (`end`), after the current block\n    (`immediately`), the end of the current subtree (`subtree`),\n    or before the next header (`header`).\n\n  * `markdown-footnote-location` - where to insert footnote text\n    (default: `end`).  The set of location options is the same as\n    for `markdown-reference-location`.\n\n  * `markdown-nested-imenu-heading-index` - Use nested imenu\n    heading instead of a flat index (default: `t`).  A nested\n    index may provide more natural browsing from the menu, but a\n    flat list may allow for faster keyboard navigation via tab\n    completion.\n\n  * `markdown-add-footnotes-to-imenu` - Add footnote definitions to\n    the end of the imenu index (default: `t`).\n\n  * `comment-auto-fill-only-comments` - variable is made\n    buffer-local and set to `nil` by default.  In programming\n    language modes, when this variable is non-nil, only comments\n    will be filled by auto-fill-mode.  However, comments in\n    Markdown documents are rare and the most users probably intend\n    for the actual content of the document to be filled.  Making\n    this variable buffer-local allows `markdown-mode` to override\n    the default behavior induced when the global variable is non-nil.\n\n  * `markdown-gfm-additional-languages`, - additional languages to\n    make available, aside from those predefined in\n    `markdown-gfm-recognized-languages`, when inserting GFM code\n    blocks (default: `nil`). Language strings must have be trimmed\n    of whitespace and not contain any curly braces. They may be of\n    arbitrary capitalization, though.\n\n  * `markdown-gfm-use-electric-backquote` - use\n    `markdown-electric-backquote` for interactive insertion of GFM\n    code blocks when backquote is pressed three times (default: `t`).\n\n  * `markdown-make-gfm-checkboxes-buttons` - Whether GitHub\n    Flavored Markdown style task lists (checkboxes) should be\n    turned into buttons that can be toggled with mouse-1 or RET. If\n    non-nil (default), then buttons are enabled.  This works in\n    `markdown-mode` as well as `gfm-mode`.\n\n  * `markdown-hide-urls` - Determines whether URL and reference\n    labels are hidden for inline and reference links (default: `nil`).\n    When non-nil, inline links will appear in the buffer as\n    `[link](\xe2\x88\x9e)` instead of\n    `[link](http://perhaps.a/very/long/url/)`.  To change the\n    placeholder (composition) character used, set the variable\n    `markdown-url-compose-char`.  URL hiding can be toggled\n    interactively using <kbd>C-c C-x C-l</kbd> (`markdown-toggle-url-hiding`)\n    or from the Markdown | Links & Images menu.\n\n  * `markdown-hide-markup` - Determines whether all possible markup\n    is hidden or otherwise beautified (default: `nil`).   The actual\n    buffer text remains unchanged, but the display will be altered.\n    Brackets and URLs for links will be hidden, asterisks and\n    underscores for italic and bold text will be hidden, text\n    bullets for unordered lists will be replaced by Unicode\n    bullets, and so on.  Since this includes URLs and reference\n    labels, when non-nil this setting supersedes `markdown-hide-urls`.\n    Markup hiding can be toggled using <kbd>C-c C-x C-m</kbd>\n    (`markdown-toggle-markup-hiding`) or from the Markdown | Show &\n    Hide menu.\n\n    Unicode bullets are used to replace ASCII list item markers.\n    The list of characters used, in order of list level, can be\n    specified by setting the variable `markdown-list-item-bullets`.\n    The placeholder characters used to replace other markup can\n    be changed by customizing the corresponding variables:\n    `markdown-blockquote-display-char`,\n    `markdown-hr-display-char`, and\n    `markdown-definition-display-char`.\n\n  * `markdown-fontify-code-blocks-natively` - Whether to fontify\n    code in code blocks using the native major mode.  This only\n    works for fenced code blocks where the language is specified\n    where we can automatically determine the appropriate mode to\n    use.  The language to mode mapping may be customized by setting\n    the variable `markdown-code-lang-modes`.  This can be toggled\n    interactively by pressing <kbd>C-c C-x C-f</kbd>\n    (`markdown-toggle-fontify-code-blocks-natively`).\n\n  * `markdown-gfm-uppercase-checkbox` - When non-nil, complete GFM\n    task list items with `[X]` instead of `[x]` (default: `nil`).\n    This is useful for compatibility with `org-mode`, which doesn\'t\n    recognize the lowercase variant.\n\n  * `markdown-translate-filename-function` - A function to be used to\n    translate filenames in links.\n\nAdditionally, the faces used for syntax highlighting can be modified to\nyour liking by issuing <kbd>M-x customize-group RET markdown-faces</kbd>\nor by using the "Markdown Faces" link at the bottom of the mode\ncustomization screen.\n\n[Marked 2]: https://itunes.apple.com/us/app/marked-2/id890031187?mt=12&uo=4&at=11l5Vs&ct=mm\n\n## Extensions\n\nBesides supporting the basic Markdown syntax, Markdown Mode also\nincludes syntax highlighting for `[[Wiki Links]]`.  This can be\nenabled by setting `markdown-enable-wiki-links` to a non-nil value.\nWiki links may be followed by pressing <kbd>C-c C-o</kbd> when the point\nis at a wiki link.  Use <kbd>M-p</kbd> and <kbd>M-n</kbd> to quickly jump to the\nprevious and next links (including links of other types).\nAliased or piped wiki links of the form `[[link text|PageName]]`\nare also supported.  Since some wikis reverse these components, set\n`markdown-wiki-link-alias-first` to nil to treat them as\n`[[PageName|link text]]`.  If `markdown-wiki-link-fontify-missing`\nis also non-nil, Markdown Mode will highlight wiki links with\nmissing target file in a different color.  By default, Markdown\nMode only searches for target files in the current directory.\nSearch in subdirectories can be enabled by setting\n`markdown-wiki-link-search-subdirectories` to a non-nil value.\nSequential parent directory search (as in [Ikiwiki][]) can be\nenabled by setting `markdown-wiki-link-search-parent-directories`\nto a non-nil value.\n\n[Ikiwiki]: https://ikiwiki.info\n\n[SmartyPants][] support is possible by customizing `markdown-command`.\nIf you install `SmartyPants.pl` at, say, `/usr/local/bin/smartypants`,\nthen you can set `markdown-command` to `"markdown | smartypants"`.\nYou can do this either by using <kbd>M-x customize-group markdown</kbd>\nor by placing the following in your `.emacs` file:\n\n```lisp\n(setq markdown-command "markdown | smartypants")\n```\n\n[SmartyPants]: http://daringfireball.net/projects/smartypants/\n\nSyntax highlighting for mathematical expressions written\nin LaTeX (only expressions denoted by `$..$`, `$$..$$`, or `\\[..\\]`)\ncan be enabled by setting `markdown-enable-math` to a non-nil value,\neither via customize or by placing `(setq markdown-enable-math t)`\nin `.emacs`, and then restarting Emacs or calling\n`markdown-reload-extensions`.\n\n## GitHub Flavored Markdown (GFM)\n\nA [GitHub Flavored Markdown][GFM] mode, `gfm-mode`, is also\navailable.  The GitHub implementation differs slightly from\nstandard Markdown in that it supports things like different\nbehavior for underscores inside of words, automatic linking of\nURLs, strikethrough text, and fenced code blocks with an optional\nlanguage keyword.\n\nThe GFM-specific features above apply to `README.md` files, wiki\npages, and other Markdown-formatted files in repositories on\nGitHub.  GitHub also enables [additional features][GFM comments] for\nwriting on the site (for issues, pull requests, messages, etc.)\nthat are further extensions of GFM.  These features include task\nlists (checkboxes), newlines corresponding to hard line breaks,\nauto-linked references to issues and commits, wiki links, and so\non.  To make matters more confusing, although task lists are not\npart of [GFM proper][GFM], [since 2014][] they are rendered (in a\nread-only fashion) in all Markdown documents in repositories on the\nsite.  These additional extensions are supported to varying degrees\nby `markdown-mode` and `gfm-mode` as described below.\n\n* **URL autolinking:** Both `markdown-mode` and `gfm-mode` support\n  highlighting of URLs without angle brackets.\n\n* **Multiple underscores in words:** You must enable `gfm-mode` to\n  toggle support for underscores inside of words. In this mode\n  variable names such as `a_test_variable` will not trigger\n  emphasis (italics).\n\n* **Fenced code blocks:** Code blocks quoted with backquotes, with\n  optional programming language keywords, are highlighted in\n  both `markdown-mode` and `gfm-mode`.  They can be inserted with\n  <kbd>C-c C-s C</kbd>.  If there is an active region, the text in the\n  region will be placed inside the code block.  You will be\n  prompted for the name of the language, but may press enter to\n  continue without naming a language.\n\n* **Strikethrough:** Strikethrough text is supported in both\n  `markdown-mode` and `gfm-mode`.  It can be inserted (and toggled)\n  using <kbd>C-c C-s s</kbd>.\n\n* **Task lists:** GFM task lists will be rendered as checkboxes\n  (Emacs buttons) in both `markdown-mode` and `gfm-mode` when\n  `markdown-make-gfm-checkboxes-buttons` is set to a non-nil value\n  (and it is set to t by default).  These checkboxes can be\n  toggled by clicking `mouse-1`, pressing <kbd>RET</kbd> over the button,\n  or by pressing <kbd>C-c C-d</kbd> (`markdown-do`) with the point anywhere\n  in the task list item.  A normal list item can be turned to a\n  check list item by the same command, or more specifically\n  <kbd>C-c C-s [</kbd> (`markdown-insert-gfm-checkbox`).\n\n* **Wiki links:** Generic wiki links are supported in\n  `markdown-mode`, but in `gfm-mode` specifically they will be\n  treated as they are on GitHub: spaces will be replaced by hyphens\n  in filenames and the first letter of the filename will be\n  capitalized.  For example, `[[wiki link]]` will map to a file\n  named `Wiki-link` with the same extension as the current file.\n  If a file with this name does not exist in the current directory,\n  the first match in a subdirectory, if any, will be used instead.\n\n* **Newlines:** Neither `markdown-mode` nor `gfm-mode` do anything\n  specifically with respect to newline behavior.  If you use\n  `gfm-mode` mostly to write text for comments or issues on the\n  GitHub site--where newlines are significant and correspond to\n  hard line breaks--then you may want to enable `visual-line-mode`\n  for line wrapping in buffers.  You can do this with a\n  `gfm-mode-hook` as follows:\n\n    ```lisp\n    ;; Use visual-line-mode in gfm-mode\n    (defun my-gfm-mode-hook ()\n      (visual-line-mode 1))\n    (add-hook \'gfm-mode-hook \'my-gfm-mode-hook)\n    ```\n\n* **Preview:** GFM-specific preview can be powered by setting\n  `markdown-command` to use [Docter][].  This may also be\n  configured to work with [Marked 2][] for `markdown-open-command`.\n\n[GFM]: http://github.github.com/github-flavored-markdown/\n[GFM comments]: https://help.github.com/articles/writing-on-github/\n[since 2014]: https://github.com/blog/1825-task-lists-in-all-markdown-documents\n[Docter]: https://github.com/alampros/Docter\n\n## Acknowledgments\n\nmarkdown-mode has benefited greatly from the efforts of the many\nvolunteers who have sent patches, test cases, bug reports,\nsuggestions, helped with packaging, etc.  Thank you for your\ncontributions!  See the [contributors graph][contrib] for details.\n\n [contrib]: https://github.com/jrblevin/markdown-mode/graphs/contributors\n\n## Bugs\n\nmarkdown-mode is developed and tested primarily for compatibility\nwith GNU Emacs 24.4 and later.  If you find any bugs in\nmarkdown-mode, please construct a test case or a patch and open a\nticket on the [GitHub issue tracker][issues].  See the\ncontributing guidelines in `CONTRIBUTING.md` for details on\ncreating pull requests.\n\n [issues]: https://github.com/jrblevin/markdown-mode/issues\n\n## History\n\nmarkdown-mode was written and is maintained by Jason Blevins.  The\nfirst version was released on May 24, 2007.\n\n  * 2007-05-24: [Version 1.1][]\n  * 2007-05-25: [Version 1.2][]\n  * 2007-06-05: [Version 1.3][]\n  * 2007-06-29: [Version 1.4][]\n  * 2007-10-11: [Version 1.5][]\n  * 2008-06-04: [Version 1.6][]\n  * 2009-10-01: [Version 1.7][]\n  * 2011-08-12: [Version 1.8][]\n  * 2011-08-15: [Version 1.8.1][]\n  * 2013-01-25: [Version 1.9][]\n  * 2013-03-24: [Version 2.0][]\n  * 2016-01-09: [Version 2.1][]\n  * 2017-05-26: [Version 2.2][]\n  * 2017-08-31: [Version 2.3][]\n\n[Version 1.1]: https://jblevins.org/projects/markdown-mode/rev-1-1\n[Version 1.2]: https://jblevins.org/projects/markdown-mode/rev-1-2\n[Version 1.3]: https://jblevins.org/projects/markdown-mode/rev-1-3\n[Version 1.4]: https://jblevins.org/projects/markdown-mode/rev-1-4\n[Version 1.5]: https://jblevins.org/projects/markdown-mode/rev-1-5\n[Version 1.6]: https://jblevins.org/projects/markdown-mode/rev-1-6\n[Version 1.7]: https://jblevins.org/projects/markdown-mode/rev-1-7\n[Version 1.8]: https://jblevins.org/projects/markdown-mode/rev-1-8\n[Version 1.8.1]: https://jblevins.org/projects/markdown-mode/rev-1-8-1\n[Version 1.9]: https://jblevins.org/projects/markdown-mode/rev-1-9\n[Version 2.0]: https://jblevins.org/projects/markdown-mode/rev-2-0\n[Version 2.1]: https://jblevins.org/projects/markdown-mode/rev-2-1\n[Version 2.2]: https://jblevins.org/projects/markdown-mode/rev-2-2\n[Version 2.3]: https://jblevins.org/projects/markdown-mode/rev-2-3\n'