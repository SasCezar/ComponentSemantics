b'#+TITLE: Parinfer Mode\n#+AUTHOR: DogLooksGood\n\n[[https://melpa.org/#/parinfer][file:https://melpa.org/packages/parinfer-badge.svg]] [[https://stable.melpa.org/#/parinfer][file:https://stable.melpa.org/packages/parinfer-badge.svg]]\n\n[[file:images/logo.png]]\n\n* About Smart Mode\nCurrently this project is rewriting for providing smart mode on branch `smart`.\n* Demo\n[[file:images/demo.gif]]\n\n* Table of contents\n- [[#what-is-parinfer][What Is Parinfer]]\n- [[#installation][Installation]]\n- [[#indent-and-paren-modes][Indent And Paren Modes]]\n- [[#configurations][Configurations]]\n- [[#credits][Credits]]\n- [[#license][License]]\n- [[#contribution][Contribution]]\n\n* What Is Parinfer\n*Parinfer* is a proof-of-concept editor mode for Lisp programming languages.\nIt will infer some changes to keep Parens and Indentation inline with one another.\nParinfer consists of two modes:\n\n- Indent Mode :: Indent Mode gives you full control of indentation, while Parinfer corrects parens.\n- Paren Mode :: Paren Mode gives you full control of parens, while Parinfer corrects indentation.\n\nTo learn more about Parinfer, please take a look at its [[https://shaunlebron.github.io/parinfer/][home page]].\n\nAnd the *parinfer-mode* is the implementation on Emacs with [[https://github.com/oakmac/parinfer-elisp][parinfer-elisp]].\n\n* Installation\nParinfer is available on MELPA(and MELPA Stable) now, I recommend to install with [[https://github.com/jwiegley/use-package][use-package]].\n\nAdd following code to your ~.emacs~ or ~init.el~.\n\n#+BEGIN_SRC elisp\n  (use-package parinfer\n    :ensure t\n    :bind\n    (("C-," . parinfer-toggle-mode))\n    :init\n    (progn\n      (setq parinfer-extensions\n            \'(defaults       ; should be included.\n              pretty-parens  ; different paren styles for different modes.\n              evil           ; If you use Evil.\n              lispy          ; If you use Lispy. With this extension, you should install Lispy and do not enable lispy-mode directly.\n              paredit        ; Introduce some paredit commands.\n              smart-tab      ; C-b & C-f jump positions and smart shift with tab & S-tab.\n              smart-yank))   ; Yank behavior depend on mode.\n      (add-hook \'clojure-mode-hook #\'parinfer-mode)\n      (add-hook \'emacs-lisp-mode-hook #\'parinfer-mode)\n      (add-hook \'common-lisp-mode-hook #\'parinfer-mode)\n      (add-hook \'scheme-mode-hook #\'parinfer-mode)\n      (add-hook \'lisp-mode-hook #\'parinfer-mode)))\n#+END_SRC\n\n* Indent And Paren Modes\nToggle *Indent Mode* and *Paren Mode* with command ~parinfer-toggle-mode~.\n\n** Avoid unexpect buffer changes.\nWhenever you switch to *Indent Mode*, parinfer-mode will correct all parens of current buffer.\n\nAfter opening a file, the parinfer-mode enable *Indent Mode* if it won\'t make any changes.\nOtherwise, *Paren Mode* will be enabled, you can switch to *Indent Mode* manually later.\n\nAlternatively, you can use ~parinfer-diff~ command to see how will *Indent Mode* modify the buffer with ~Ediff~.\n\n[[file:images/diff_demo.gif]]\n\nAnd there are some keybindings in Ediff:\n| Key  | Description                                               |\n|------+-----------------------------------------------------------|\n| ~q~  | Quit diff.                                                |\n| ~b~  | B->A in Ediff, this can apply change to your origin code. |\n| ~ra~ | Restore A in Ediff, this can revert change.               |\n| ~n~  | Move to next difference.                                  |\n| ~p~  | Move to previous difference.                              |\n\nAlso, There\'s a command ~parinfer-auto-fix~ to fix wrong indentation for whole buffer. (Only works with balanced parens)\n\n* Configurations\n** parinfer-auto-switch-indent-mode\n#+BEGIN_SRC emacs-lisp\n  (setq parinfer-auto-switch-indent-mode nil)  ;; default\n#+END_SRC\n\n~t~ for enable, Parinfer will auto switch to *Indent Mode* whenever parens are balance in *Paren Mode*.\n\n** parinfer-auto-switch-indent-mode-when-closing\n#+BEGIN_SRC emacs-lisp\n  (setq parinfer-auto-switch-indent-mode-when-closing nil)  ;; default\n#+END_SRC\n\n~t~ for enable, Parinfer will auto switch to *Indent Mode* when the inserted close parens (~)~, ~]~, ~}~) balance the parens of current sexp.\n** parinfer-delay-invoke-threshold\n#+BEGIN_SRC emacs-lisp\n  (setq parinfer-delay-invoke-threshold 6000)  ;; default\n#+END_SRC\n\nWhen the length of text for processing is longer than this, Parinfer will process text after a idle delay instead of process immediately.\n\n** parinfer-delay-invoke-idle\n#+BEGIN_SRC emacs-lisp\n  (setq parinfer-delay-invoke-idle 0.3)  ;; default\n#+END_SRC\n\nThe idle seconds before Parinfer processing text on large sexp.\n\n** parinfer-extensions\n#+BEGIN_SRC emacs-lisp\n  (setq parinfer-extensions \'(defaults pretty-parens smart-yank))\n#+END_SRC\n\nThe extensions that will be enabled. The list could contain followings:\n\n| Extension     | Function                                                                              |\n|---------------+---------------------------------------------------------------------------------------|\n| defaults      | Should be enabled, basic compatibility                                                |\n| pretty-parens | Use dim style for *Indent Mode*, rainbow delimiters for *Paren Mode*                  |\n| smart-yank    | Yank will preserve indentation in *Indent Mode*, will preserve parens in *Paren Mode* |\n| smart-tab     | ~C-f~ & ~C-b~ on empty line will goto next/previous import indentation.               |\n| paredit       | Introduce some paredit commands from paredit-mode.                                    |\n| lispy         | Integration with Lispy.                                                               |\n| evil          | Integration with Evil.                                                                |\n| one           | Experimental on fuzz *Indent Mode* and *Paren Mode*. Not recommanded.                 |\n\n** parinfer-lighters\n#+BEGIN_SRC emacs-lisp\n  (setq parinfer-lighters \'(" Parinfer:Indent" . "Parinfer:Paren"))\n#+END_SRC\n\n* Troubleshooting\nIf Parinfer seems to be indenting incorrectly, ensure ~indent-tabs-mode~ is set to ~nil~ via ~(setq-default indent-tabs-mode nil)~. While Parinfer\'s theoretical model is able to correctly handle indentation with tabs, ~parinfer-mode~ can currently only handle indentation using spaces.\n\n* Credits\n- [[https://github.com/shaunlebron][shaunlebron]] :: Create [[https://shaunlebron.github.io/parinfer/][Parinfer]].\n- [[https://github.com/oakmac][oakmac]] :: Bring Parinfer to Emacs with [[https://github.com/oakmac/parinfer-elisp][parinfer-elisp]].\n- [[https://github.com/tumashu][tumashu]] :: Help me a lot in writing this plugin.\n- [[https://github.com/purcell][purcell]] & [[https://github.com/syohex][syohex]] :: Advice and Tips for writing emacs plugin\n\n* Contribution\nPlease open an issue if there\'s any bug or suggestion, and PR is welcomed!\n\n* License\nparinferlib.el from [[https://github.com/oakmac/parinfer-elisp][parinfer-elisp]], is licensed under the [[https://github.com/oakmac/parinfer-elisp/blob/master/LICENSE.md][ISC]].\n\nRest part licensed under the GPLv3.\n'