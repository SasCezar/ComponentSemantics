b'# Helm Dash\n\n[![Build Status](https://api.travis-ci.org/areina/helm-dash.svg?branch=master)](http://travis-ci.org/areina/helm-dash)\n[![Coverage Status](https://img.shields.io/coveralls/areina/helm-dash.svg)](https://coveralls.io/r/areina/helm-dash?branch=master)\n[![MELPA](http://melpa.org/packages/helm-dash-badge.svg)](http://melpa.org/#/helm-dash)\n[![MELPA Stable](http://stable.melpa.org/packages/helm-dash-badge.svg)](http://stable.melpa.org/#/helm-dash)\n[![Tag Version](https://img.shields.io/github/tag/areina/helm-dash.svg)](https://github.com/areina/helm-dash/tags)\n[![License](http://img.shields.io/:license-gpl3-blue.svg)](http://www.gnu.org/licenses/gpl-3.0.html)\n\n## What\'s it\n\nThis package uses [Dash](http://www.kapeli.com/dash) docsets inside\nemacs to browse documentation. Here\'s an\n[article](http://puntoblogspot.blogspot.com.es/2014/01/ann-helm-dash-documentation-browser-for.html)\nexplaining the basic usage of it.\n\nIt doesn\'t require Dash app.\n\n![](https://raw.github.com/areina/helm-dash/master/misc/helm-dash.gif)\n\n## What\'s not\n\nIf you\'re looking for dash.el, the list library, please go to\n[dash.el](http://www.github.com/magnars/dash.el)\n\n\n## Requirements\n\n- [helm](https://github.com/emacs-helm/helm)\n- sqlite3\n\n## Installation\n\nIt\'s available on [MELPA](https://melpa.org).\n\nNow, it\'s possible to choose between install the stable or development version\nof helm-dash. [Here](https://github.com/milkypostman/melpa#stable-packages)\nthere is an explanation about stable packages and MELPA and\n[here](https://github.com/areina/helm-dash/tags) a list of our tags.\n\n`m-x package-install helm-dash RET`\n\n\n## Installing docsets\n\nHelm-dash uses the same docsets as [Dash](http://www.kapeli.com/dash).\nYou can install them with `m-x helm-dash-install-docset` for the\nofficial docsets or `m-x helm-dash-install-user-docset` for user\ncontributed docsets (experimental).\n\nTo install a docset from a file in your drive you can use `m-x\nhelm-dash-install-docset-from-file\'. That function takes as input\na `tgz` file that you obtained, starting from a folder named `<docset\nname>.docset`, with the command:\n\n`tar --exclude=\'.DS_Store\' -cvzf <docset name>.tgz <docset name>.docset`\n\nas explained [here](https://kapeli.com/docsets#dashdocsetfeed).\n\n## Usage\n\n`m-x helm-dash RET` will run helm with your active docsets\nloaded. Typing substrings of what you search will find-as-you-type.\n\n- The search starts from 3 chars.\n- Install new docsets with m-x helm-dash-install-docset\n- After installing a new docset, add the name of the docset to\n  `helm-dash-common-docsets\' or in \'helm-dash-docsets\' (which is ment\n  to be buffer local)\n\n`m-x helm-dash-at-point RET` is like helm-dash, but it will prefill\nthe search input with the symbol at point.\n\nThe command `helm-dash-reset-connections` will clear the connections\nto all sqlite db\'s. Use it in case of errors when adding new docsets.\nThe next call to `helm-dash` will recreate them.\n\n## Variables to customize\n\n`helm-dash-docsets-path` is the prefix for your docsets. Defaults to ~/.docsets\n\n`helm-dash-min-length` tells helm-dash from which length to start\nsearching. Defaults to 3.\n\n`helm-dash-browser-func` is a function to encapsulate the way to browse\nDash\' docsets. Defaults to browse-url. For example, if you want to use eww to\nbrowse your docsets, you can do: `(setq helm-dash-browser-func \'eww)`.\n\nWhen `helm-dash-enable-debugging` is non-nil stderr from sqlite queries is\ncaptured and displayed in a buffer. The default value is `t`. Setting this\nto `nil` may speed up queries on some machines (capturing stderr requires\nthe creation and deletion of a temporary file for each query).\n\n\n## Sets of Docsets\n\n### Common docsets\n\n`helm-dash-common-docsets\' is a list that should contain the docsets\nto be active always. In all buffers.\n\n### Buffer local docsets\n\nDifferent subsets of docsets can be activated depending on the\nbuffer. For the moment (it may change in the future) we decided it\'s a\nplain local variable you should setup for every different\nfiletype. This way you can also do fancier things like project-wise\ndocsets sets.\n\n``` elisp\n(defun go-doc ()\n  (interactive)\n  (setq-local dash-docs-docsets \'("Go")))\n\n(add-hook \'go-mode-hook \'go-doc)\n```\n\n### Only one docset\n\nTo narrow the search to just one docset, type its name in the\nbeginning of the search followed by a space. If the docset contains\nspaces, no problemo, we handle it :D.\n\n## FAQ\n\n- Does it work in osX?\n\nsqlite queries. Provisionally, we\'re executing shell-commands directly. Our\nidea is come back to use [esqlite](http://www.github.com/mhayashi1120/Emacs-esqlite)\nwhen some issues will be fixed.\n\nhelm-dash has been tested only in linux.  We\'ve been notified that it\ndoesn\'t work in Mac, so we ask for elisp hackers who own something\nthat runs Mac OSX if they could take a look at it.\n\nHints: It looks like something with \'end of line\' differences. The\nsuspicious are\n[esqlite](http://www.github.com/mhayashi1120/Emacs-esqlite) (which\nhelm-dash requires) or\n[pcsv](http://www.github.com/mhayashi1120/Emacs-pcsv) (which esqlite\nrequires)\n\n- I\'m using mac osx and pages open but not in the correct anchor\n\n[bug on **mac osx**\'s browse-url](https://github.com/areina/helm-dash/issues/36)\nwhich can\'t open urls with #. If you find this issue, and want to\ndebug, great, otherwise, you can use eww or w3 or w3m which will work\njust fine\n\n- I get nil for every search I do\n\nmake sure you don\'t have sqlite3 .mode column but .mode list (the default). check your .sqliterc\n\n- When selecting an item in helm-dash, no browser lookup occurs with firefox >= 38.0.and emacs >= 24.4\n\ntry:\n```\n(setq browse-url-browser-function \'browse-url-generic\n      browse-url-generic-program "/path/to/firefox")\n(setq helm-dash-browser-func \'browse-url-generic)\n```\n\n\n## Contribution\n\nWe \xe2\x99\xa5 feedback, issues or pull requests. Feel free to contribute in helm-dash.\n\nWe\'re trying to add tests to the project, if you send a PR please consider add\nnew or update the existing ones.\n\nInstall [Cask](https://github.com/cask/cask) if you haven\'t already, then:\n\n    $ cd /path/to/helm-dash\n    $ cask\n\nRun all tests with:\n\n    $ make\n\n\n## Authors\n\n- Toni Reina <areina0@gmail.com>\n- Raimon Grau <raimonster@gmail.com>\n'