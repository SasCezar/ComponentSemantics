b'* Emacs Dashboard [[https://melpa.org/#/dashboard][https://melpa.org/packages/dashboard-badge.svg]] [[https://stable.melpa.org/#/dashboard][https://stable.melpa.org/packages/dashboard-badge.svg]] [[https://circleci.com/gh/emacs-dashboard][https://img.shields.io/circleci/project/emacs-dashboard/emacs-dashboard/master.svg]]\n\nAn extensible emacs startup screen showing you what\'s most important.\n\n* Features\n  1. Displays an awesome Emacs banner!\n  2. Recent files\n  3. Bookmarks list\n  4. Recent projectile projects list (Depends on `projectile` package)\n  5. Org mode agenda\n  6. Register list\n\n* Screenshot\n\n[[./screenshot.png]]\n\n* Dependencies\nYou will need the following packages which are all available on Melpa:\n\n1. page-break-lines - [[https://github.com/purcell/page-break-lines]]\n2. (optional) projectile - [[https://github.com/bbatsov/projectile]]\n3. (optional) all-the-icons - [[https://github.com/domtronn/all-the-icons.el]]\n\n* Usage\n\n#+BEGIN_SRC shell\nM-x package-install RET dashboard\n#+END_SRC\n\n #+BEGIN_SRC elisp\n(require \'dashboard)\n(dashboard-setup-startup-hook)\n;; Or if you use use-package\n(use-package dashboard\n  :ensure t\n  :config\n  (dashboard-setup-startup-hook))\n #+END_SRC\n\nBy default, this will show three lists, recent files and bookmarks and org-agenda items.\nOne more widget is implemented by Dashboard but it\'s made optional because of it\'s dependency on a third party application, which is\n`projects` which shows you the list of known projectile projects.\n\n** Emacs Daemon\n\nIn addition to the above, configure =initial-buffer-choice= to show\nDashboard in frames created with =emacsclient -c= as follows:\n\n#+BEGIN_SRC elisp\n(setq initial-buffer-choice (lambda () (get-buffer "*dashboard*")))\n#+END_SRC\n\n* Configuration\n\nTo update the banner or banner title\n\n#+BEGIN_SRC elisp\n;; Set the title\n(setq dashboard-banner-logo-title "Welcome to Emacs Dashboard")\n;; Set the banner\n(setq dashboard-startup-banner [VALUE])\n;; Value can be\n;; \'official which displays the official emacs logo\n;; \'logo which displays an alternative emacs logo\n;; 1, 2 or 3 which displays one of the text banners\n;; "path/to/your/image.png" which displays whatever image you would prefer\n\n;; Content is not centered by default. To center, set\n(setq dashboard-center-content t)\n\n;; To disable shortcut "jump" indicators for each section, set\n(setq dashboard-show-shortcuts nil)\n#+END_SRC\n\nTo customize which widgets are displayed, you can use the following snippet\n#+BEGIN_SRC elisp\n(setq dashboard-items \'((recents  . 5)\n                        (bookmarks . 5)\n                        (projects . 5)\n                        (agenda . 5)\n                        (registers . 5)))\n #+END_SRC\nThis will add the recent files, bookmarks, projects, org-agenda and registers widgets to your dashboard each displaying 5 items.\n\nTo add your own custom widget is pretty easy, define your widget\'s callback function and add it to `dashboard-items` as such:\n#+BEGIN_SRC elisp\n(defun dashboard-insert-custom (list-size)\n  (insert "Custom text"))\n(add-to-list \'dashboard-item-generators  \'(custom . dashboard-insert-custom))\n(add-to-list \'dashboard-items \'(custom) t)\n #+END_SRC\n\nTo add icons to the widget headings and their items:\n#+BEGIN_SRC elisp\n(setq dashboard-set-heading-icons t)\n(setq dashboard-set-file-icons t)\n#+END_SRC\n\nTo modify heading icons with another icon from all-the-icons octicons:\n#+BEGIN_SRC elisp\n(dashboard-modify-heading-icons \'((recents . "file-text")\n                                  (bookmarks . "book")))\n#+END_SRC\n\nTo show navigator below the banner:\n#+BEGIN_SRC emacs-lisp\n(setq dashboard-set-navigator t)\n#+END_SRC\n\nTo customize the buttons of the navigator like this:\n#+BEGIN_SRC emacs-lisp\n;; Format: "(icon title help action face prefix suffix)"\n(setq dashboard-navigator-buttons\n      `(;; line1\n        ((,(all-the-icons-octicon "mark-github" :height 1.1 :v-adjust 0.0)\n         "Homepage"\n         "Browse homepage"\n         (lambda (&rest _) (browse-url "homepage")))\n        ("\xe2\x98\x85" "Star" "Show stars" (lambda (&rest _) (show-stars)) warning)\n        ("?" "" "?/h" #\'show-help nil "<" ">"))\n         ;; line 2\n        ((,(all-the-icons-faicon "linkedin" :height 1.1 :v-adjust 0.0)\n          "Linkedin"\n          ""\n          (lambda (&rest _) (browse-url "homepage")))\n         ("\xe2\x9a\x91" nil "Show flags" (lambda (&rest _) (message "flag")) error))))\n#+END_SRC\n\nTo show info about the packages loaded and the init time:\n#+BEGIN_SRC elisp\n(setq dashboard-set-init-info t)\n#+END_SRC\n\nAlso, the message can be customized like this:\n#+BEGIN_SRC elisp\n(setq dashboard-init-info "This is an init message!")\n#+END_SRC\n\nA randomly selected footnote will be displayed. To disable it:\n#+BEGIN_SRC elisp\n(setq dashboard-set-footer nil)\n#+END_SRC\n\nTo customize it and customize its icon;\n\n#+BEGIN_SRC elisp\n(setq dashboard-footer "Dashboard is pretty cool!")\n(setq dashboard-footer-icon (all-the-icons-octicon "dashboard"\n                                                   :height 1.1\n                                                   :v-adjust -0.05\n                                                   :face \'font-lock-keyword-face))\n#+END_SRC\n\n** Org mode\xe2\x80\x99s agenda\n\n   To display today\xe2\x80\x99s agenda items on the dashboard, add ~agenda~ to ~dashboard-items~:\n\n#+BEGIN_SRC elisp\n(add-to-list \'dashboard-items \'(agenda) t)\n#+END_SRC\n\nTo show agenda for the upcoming seven days set the variable ~show-week-agenda-p~ to ~t~.\n#+BEGIN_SRC elisp\n(setq show-week-agenda-p t)\n#+END_SRC\n\nNote that setting list-size for the agenda list is intentionally ignored; all agenda items for the current day will be displayed.\n\nTo customize which categories from the agenda items should be visible in the dashboard set the ~dashboard-org-agenda-categories~ to the list of categories you need.\n\n#+BEGIN_SRC elisp\n(setq dashboard-org-agenda-categories \'("Tasks" "Appointments"))\n #+END_SRC\n\n** Faces\n\nIt is possible to customize Dashboard\'s appearance using the following faces:\n\n- ~dashboard-banner-logo-title~ ::\n     Highlights the banner title.\n- ~dashboard-text-banner~ ::\n     Highlights text banners.\n- ~dashboard-heading~ ::\n     Highlights widget headings.\n- ~widget-button~ ::\n     Highlights widget items.\n\n* Shortcuts\n\nYou can use any of the following shortcuts inside Dashboard\n\n|----------------------------+------------------|\n| Shortcut                   | Function         |\n|----------------------------+------------------|\n| Tab Or C-i                 | Next Item        |\n| Shift-Tab                  | Previous Item    |\n| Return / Mouse Click / C-m | Open             |\n| r                          | Recent files     |\n| m                          | Bookmarks        |\n| p                          | Projects         |\n| a                          | Org-Mode Agenda  |\n| e                          | Registers        |\n| g                          | Refresh contents |\n| {                          | Previous section |\n| }                          | Next section     |\n|----------------------------+------------------|\n\n* Wish List\n  1. [X] Center content\n  2. [X] More banner options\n  3. [X] Customizing the list of widgets to display\n  4. [X] Integrate Org-mode\'s agenda\n  5. [ ] Listing Perspectives\n\n* Contributions\n\nTo contribute your changes to this package, please do the following:\n\n1. Fork the repo\n2. Clone a local copy\n3. Make your changes\n4. Push and create your PR\n\nWhen working on this package, it\'s typical to uninstall dashboard,\ndevelop your changes and then install this as "development version".\n\nThis is accomplished with the following steps:\n\n#+BEGIN_SRC shell\n# In emacs:\nM-x package-delete dashboard-<version> RET\n#+END_SRC\n\n#+BEGIN_SRC shell\nmake build\nmake install\n#+END_SRC\n\n** Prerequisites\n\n  * [[https://github.com/cask/cask][Cask]]\n'