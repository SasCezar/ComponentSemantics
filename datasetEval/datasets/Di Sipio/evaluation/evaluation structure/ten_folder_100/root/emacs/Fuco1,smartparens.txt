b'# Smartparens\n\n[![Join the chat at https://gitter.im/smartparens/Lobby](https://badges.gitter.im/smartparens/Lobby.svg)](https://gitter.im/smartparens/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![MELPA](http://melpa.org/packages/smartparens-badge.svg)](http://melpa.org/#/smartparens)\n[![Documentation Status](https://readthedocs.org/projects/smartparens/badge/?version=latest)](http://smartparens.readthedocs.io/en/latest/?badge=latest)\n[![MELPA Stable](http://stable.melpa.org/packages/smartparens-badge.svg)](http://stable.melpa.org/#/smartparens)\n[![Documentation Status](https://readthedocs.org/projects/smartparens/badge/?version=stable)](http://smartparens.readthedocs.io/en/latest/?badge=stable)\n[![Build Status](https://travis-ci.org/Fuco1/smartparens.png?branch=master)](https://travis-ci.org/Fuco1/smartparens)\n[![Coverage Status](https://coveralls.io/repos/github/Fuco1/smartparens/badge.svg)](https://coveralls.io/github/Fuco1/smartparens)\n[![Paypal logo](https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=A5PMGVKCQBT88)\n[![Patreon](https://c5.patreon.com/external/logo/logomarkOrange.svg)](https://www.patreon.com/user?u=3282358&ty=h)\n\n<!-- markdown-toc start - Don\'t edit this section. Run M-x markdown-toc-generate-toc again -->\n**Table of Contents**\n\n- [Smartparens](#smartparens)\n    - [Getting Started](#getting-started)\n    - [Usage](#usage)\n    - [Contributing](#contributing)\n        - [Language Support](#language-support)\n    - [Supporting Smartparens](#supporting-smartparens)\n    - [Related Projects](#related-projects)\n\n<!-- markdown-toc end -->\n\nSmartparens is a minor mode for dealing with pairs in Emacs.\n\nIt can automatically insert pairs:\n\n![smartparens insert](images/smartparens-insert.gif)\n\nwrap, unwrap and rewrap pairs:\n\n![smartparens wrapping](images/smartparens-wrap.gif)\n\nexpand and contract pairs:\n\n![smartparens slurping](images/smartparens-slurp.gif)\n\nnavigate pairs:\n\n![smartparens navigating](images/smartparens-navigate.gif)\n\nand much more!\n\n## Getting Started\n\nWe generally target GNU Emacs version 24.3 and newer, however,\neverything should work mostly fine on anything newer than version 24.\n\nYou can install smartparens from [MELPA](http://melpa.org/).  Once\ninstalled, enable the [default configuration](https://github.com/Fuco1/smartparens/wiki/Default-configuration):\n\n```elisp\n(require \'smartparens-config)\n```\n\nYou can now use smartparens with `M-x smartparens-mode`. To\nautomatically enable smartparens in a programming mode:\n\n```elisp\n;; Always start smartparens mode in js-mode.\n(add-hook \'js-mode-hook #\'smartparens-mode)\n```\n\nYou may want to try `smartparens-strict-mode`. This enforces that\npairs are always balanced, so commands like `kill-line` keep your code\nwell-formed.\n\n## Usage\n\nInside Emacs, `M-x sp-cheat-sheet` will show you all the commands\navailable, with examples.\n\nThere\'s also a\n[great article demonstrating movement and editing in smartparens](http://ebzzry.io/en/emacs-pairs/)\nand [extensive documentation in the wiki](https://github.com/Fuco1/smartparens/wiki).\n\n## Contributing\n\nWe love pull requests. Please include tests. Smartparens uses\n[ert-runner](https://github.com/rejeep/ert-runner.el) for testing. To\nrun all the tests, run:\n\n```\n$ cask exec ert-runner\n```\n\nAlternatively, you can open the individual files in Emacs, then\n`M-x eval-buffer` `M-x ert`.\n\nYou can learn more about how we test on the [testing](https://github.com/Fuco1/smartparens/wiki/Testing) wiki page.\n\n### Language Support\n\nSmartparens has a default configuration that works well for most\nlanguages. For language-specific behaviour, smartparens has a separate\n`smartparens-FOO.el` file for every language and\n`smartparens-config.el` loads these automatically.\n\n## Supporting Smartparens\n\nIf you want to support this project, you can:\n\n* Contribute code. If you have an idea that is not yet implemented and\n  will benefit this project, feel free to implement it and submit a\n  pull request. If you have any concerns whether your contribution\n  will be accepted, ask beforehand. You can email the author or\n  [start an issue](https://github.com/Fuco1/smartparens/issues/new) on\n  the tracker.\n\n* Contribute ideas. Even if you can\'t code Emacs Lisp, you can still\n  contribute valuable ideas for other programmers to implement. Simply\n  [start new issue](https://github.com/Fuco1/smartparens/issues/new)\n  on the tracker and submit your suggestion.\n\n* You can make a financial donation through\n  [PayPal](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=A5PMGVKCQBT88)\n  or [Patreon](https://www.patreon.com/user?u=3282358&ty=h).  If you\n  like smartparens and can spare a modest amount on a donation, feel\n  free to do so.  These donations are expressions of your gratitude\n  and are used for my personal "rewards" (books, games, music etc.).\n  You can also gift me a game on\n  [Steam](http://steamcommunity.com/profiles/76561198265034071/wishlist)\n  or buy something on\n  [Amazon](http://www.amazon.com/gp/registry/wishlist/2I8DOQH8OZEUR).\n  Regardless of the donations, smartparens will always be free both as\n  in beer and as in speech.\n\n## Related Projects\n\nOther Emacs projects that deal with pairs include:\n\n* [autopair](https://github.com/capitaomorte/autopair)\n* [textmate](http://code.google.com/p/emacs-textmate/)\n* [wrap-region](https://github.com/rejeep/wrap-region)\n* [electric-pair-mode](http://www.emacswiki.org/emacs/ElectricPair)\n* [paredit](http://emacswiki.org/emacs/ParEdit)\n\nSmartparens aims to provide a superset of these features, in all\nprogramming languages.\n'