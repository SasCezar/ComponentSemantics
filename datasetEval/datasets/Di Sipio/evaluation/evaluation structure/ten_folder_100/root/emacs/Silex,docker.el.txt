b'[![MELPA](http://melpa.org/packages/docker-badge.svg)](http://melpa.org/#/docker)\n[![MELPA Stable](http://stable.melpa.org/packages/docker-badge.svg)](http://stable.melpa.org/#/docker)\n\n# docker.el\n\nEmacs integration for [Docker](https://www.docker.com)!\n\nSupports docker containers, images, volumes, networks, docker-machine and docker-compose.\n\n## Screenshots\n\n### List images\n\n![Images list](screenshots/image-ls.png)\n\n### Image run\n\n![Image run](screenshots/image-run.png)\n\n## Installation\n\nThe recommended way to install docker.el is through [MELPA](https://github.com/milkypostman/melpa).\n\nHere is a example [use-package](https://github.com/jwiegley/use-package) configuration:\n\n``` elisp\n(use-package docker\n  :ensure t\n  :bind ("C-c d" . docker))\n```\n\n## Quickstart\n\nUse <kbd>M-x docker</kbd>, select a resource then then mark or unmark items using the following keybindings (for more\nmarking possibilities, check out https://github.com/politza/tablist):\n\n| Binding            | Description          |\n|--------------------|----------------------|\n| <kbd>?</kbd>       | List actions         |\n| <kbd>l</kbd>       | Configure listing    |\n| <kbd>m</kbd>       | Mark item            |\n| <kbd>u</kbd>       | Unmark item          |\n| <kbd>t</kbd>       | Toggle marks         |\n| <kbd>U</kbd>       | Unmark all           |\n| <kbd>s</kbd>       | Sort                 |\n| <kbd>* r</kbd>     | Mark items by regexp |\n| <kbd><</kbd>       | Shrink column        |\n| <kbd>></kbd>       | Enlarge column       |\n| <kbd>C-c C-e</kbd> | Export to csv        |\n\nThen select an action and follow the instructions.\n\n## Supported commands\n\n- docker container: attach, cp, diff, inspect, kill, logs, pause, rename, restart, rm, start, stop, unpause\n- docker image: inspect, pull, push, rm, run, tag\n- docker network: rm\n- docker volume: rm\n- docker-machine: create, env, restart, rm, start, stop\n- docker-compose: build, config, create, down, exec, logs, pull, push, remove, restart, run, start, stop, up\n\nYou can also enter `dired` or open a file inside a container or volume.\n\n## Customizations\n\nThanks to [transient](https://github.com/magit/transient), all the transients arguments can be set temporarily or\npermanently. See https://magit.vc/manual/transient/Saving-Values.html#Saving-Values for more information.\n\nHere is a list of other customizations you can set:\n\n| Variable                          | Description                           | Default          |\n|-----------------------------------|---------------------------------------|------------------|\n| docker-command                    | The docker binary to use              | `docker`         |\n| docker-container-default-sort-key | Sort key for docker containers        | `("Image")`      |\n| docker-container-shell-file-name  | Shell to use when entering containers | `/bin/sh`        |\n| docker-image-default-sort-key     | Sort key for docker images            | `("Repository")` |\n| docker-machine-default-sort-key   | Sort key for docker machines          | `("Name")`       |\n| docker-network-default-sort-key   | Sort key for docker networks          | `("Name")`       |\n| docker-run-as-root                | Run docker as root                    | `nil`            |\n| docker-volume-default-sort-key    | Sort key for docker volumes           | `("Driver")`     |\n\n## FAQ\n\n### How to use docker-machine under OSX / MacOS?\n\nThe following configuration is required (some of it can probably be simplified by using\nhttps://github.com/purcell/exec-path-from-shell).\n\n``` elisp\n(setenv "PATH" (concat (getenv "PATH") ":/usr/local/bin"))\n(setq exec-path (append exec-path \'("/usr/local/bin")))\n;; Use "docker-machine env box" command to find out your environment variables\n(setenv "DOCKER_TLS_VERIFY" "1")\n(setenv "DOCKER_HOST" "tcp://10.11.12.13:2376")\n(setenv "DOCKER_CERT_PATH" "/Users/foo/.docker/machine/machines/box")\n(setenv "DOCKER_MACHINE_NAME" "box")\n```\n\nThis is necessary and useful if you use `docker-machine`.\nNotice though that there is also a native MacOS Docker implementation\n(now called Docker Desktop)\nwhich does not depend on VirtualBox and which does not require these tweaks.\n\n## Contributions\n\nThey are very welcome, either as suggestions or as pull requests by opening tickets\non the [issue tracker](https://github.com/Silex/docker.el/issues).\n'