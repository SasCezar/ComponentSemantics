b'[![MELPA](http://melpa.org/packages/jdee-badge.svg)](http://melpa.org/#/jdee)\n[![Build Status](https://travis-ci.org/jdee-emacs/jdee.png?branch=master)](https://travis-ci.org/jdee-emacs/jdee)\n\n# JDEE\n\nThe JDEE is an add-on software package that turns Emacs into a\ncomprehensive system for creating, editing, debugging, and documenting\nJava applications.\n\n## About the project\n\nAs of 2015-07-13, https://github.com/jdee-emacs/jdee/ is the primary source repository.\n\nSee [CHANGES.md](CHANGES.md) for migration instructions.\n\nAdditional information can be found at http://jdee.sourceforge.net/rootpage.html and at https://github.com/jdee-emacs/jdee/wiki\n\n## Requirements\n\nEmacs 24.4 is the oldest version that JDEE can be expected to run in.\n\nIf you install JDEE through the Emacs package system, it will take\ncare of installing the prerequisites for you:\n* flycheck\n* memoize\n* dash\nThese packages can be found on ELPA and/or MELPA.\n\nJDEE also requires [JDEE Server](http://github.com/jdee-emacs/jdee-server) for some operations.\n\n## Installing with the Emacs package system\n\nThe project is available in MELPA. To install it do the following:\n1. Add MELPA to your `.emacs` or `init.el` if you don\'t have it:\n```emacs-lisp\n;;; Add this at the top of the init.el file:\n(require \'package)\n(add-to-list \'package-archives\n             \'("melpa" . "https://melpa.org/packages/"))\n(when (< emacs-major-version 24)\n  ;; For important compatibility libraries like cl-lib\n  (add-to-list \'package-archives \'("gnu" . "http://elpa.gnu.org/packages/")))\n(package-initialize)\n```\n2. Install JDEE from Emacs using its package manager:\n```\nM-x list-packages\n```\nThere select JDEE and install: i x\n\n3. Install [JDEE Server](http://github.com/jdee-emacs/jdee-server) from github\n\nFollow short readme at [JDEE Server](http://github.com/jdee-emacs/jdee-server).\n\n4. Customize `jdee-server-dir` to make it point to directory with JDEE Server jars.\n\n_Warning!_ Don\'t install JDEE Server inside JDEE installed from MELPA (`~/.emacs.d/elpa/jdee-xxx`), because it will be deleted with next update of JDEE! Create a separate directory, for example: `~/.emacs.d/jdee-server`.\n\nCustomized `jdee-server-dir` in your init file should look something like:\n```emacs-lisp\n(custom-set-variables\n \'(jdee-server-dir "/Users/you/.emacs.d/jdee-server"))\n```\n\nFor additional information, see the [old installation instructions](http://htmlpreview.github.com/?https://github.com/peterwvj/jdee/blob/master/doc/flat/install.html).\n\n## Installing from source (for JDEE devs only)\n\n1. Clone [the github repository](https://github.com/jdee-emacs/jdee/).\n2. Open the cloned JDEE directory in dired.\n3. Being in dired, install using command: ```package-install-from-buffer```\n\nFor development you will need to install Cask:\n\n1. Install [Cask](http://cask.readthedocs.io/en/latest/index.html).\n\n2. Run ```cask install``` from the JDEE directory (make sure that the\n   ```cask``` command is in your PATH).\n\n3. Run the tests: ```make test```\n\nTo use this built distribution without installation, in your .emacs add:\n\n```emacs-lisp\n  (add-to-list \'load-path "/path/to/jdee")\n  (require \'jdee)\n```\n\n## Building the documentation in other formats\nJDEE ships with documentation in Info format, but if you want you can generate the docs in other formats too.\n\nTo generate Info, HTML and PDF documentation:\n\n- Install texinfo.\n\n- For PDF generation, you also need texi2dvi, texinfo-tex, texlive-ec\n  and texlive-cm-super.\n\n- In the doc/ subdirectory, run: ```makeinfo --info --html --pdf jdee.texi```\n\n## Features\n\nSome of the features of JDEE include:\n\n- source code editing with syntax highlighting, auto indentation using the\n  native GNU Emacs Java mode\n- Symbol completion (jdee-complete-in-line)\n- Code generation: templates, import insertion/deletion/ordering\n  etc.\n- browse JDK doc, using the browser of your choice (jdee-help-symbol and\n  jdee-help-docsets)\n- browse your source code (jdee-find-class* and semantic integration)\n- compilation with automatic jump from error messages to responsible line in the\n  source code using ant (jdee-ant-build).\n- run Java application in an interactive (comint) Emacs buffer\n- integrated debugging with interactive debug command buffer and automatic\n  display of current source file/line when stepping through code (jdee-debug)\n- supports Oracle/OpenJDK Java 7\n- runs on any platform supported by GNU Emacs 24.3 and later\n- easily and infinitely customizable\n\n### [Known Issues](https://github.com/jdee-emacs/jdee/issues)\n\n- Static imports don\'t quite work\n- Limited support for Java template beyond basic highlighting, parsing, and\n  indenting.\n- Indentation after multi-line annotations might be unexpected\n\n### Troubleshooting\n\n- If you notice a bug, open an issue on Github\n  [Issues](https://github.com/jdee-emacs/jdee/issues)\n\n## Authors\n\n- Paul Kinnucan (original author and contributor)\n- Przemys\xc5\x82aw Wojnowski (primary maintainer/owner)\n- Paul Landes (maintainer)\n- Shyamal Prasad (maintainer)\n- Phil Lord (maintainer)\n'