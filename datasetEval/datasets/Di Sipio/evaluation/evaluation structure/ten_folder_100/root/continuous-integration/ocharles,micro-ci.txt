b'# micro-ci\n\nHello, thanks for checking out `micro-ci`.\n\n`micro-ci` is a tiny continuous integration server, that tries to do\nvery little. By this, we mean off loading as much logic as possible to\nother systems. In particular, this continuous integration server\n*only* supports GitHub and Nix.\n\nThis project is in its infancy, but if you\'d like to play along at\nhome, here\'s how.\n\n![Example](./example.png)\n\n## Getting Started\n\n1. **Get an OAuth token.**\n\n   Navigate to https://github.com/settings/tokens and generate a new\n   OAuth token. It only needs the `repo:status` permission.\n\n2. **Add the webhook.**\n\n   Go to https://github.com/$YOUR_NAME/$YOUR_REPO/settings/hooks,\n   changing `$YOUR_NAME` and `$YOUR_REPO` appropriately. Add a webhook\n   with a URL of the format: `http://$PUBLIC_HOST:8080/github/web-hook`,\n   where `$PUBLIC_HOST` is the publically accessible host of the\n   server that will be running your builds.\n   \n   Set:\n   \n   * Content type: `application/json`\n   * Secret: (anything you want)\n   * Which events: at least "pull request", but you can also just use\n     "everything".\n\n4. **Configure the server**.\n\n\tIn the directory you plan to run `micro-ci` from, you\'ll need a\n    `config.dhall` file. A template is:\n\t\n\t```dhall\n\t{\n      repoRoot = "repositories",\n      secret = ...,\n      oauth = ...\n\t}\n\t```\n\t\n\tFill in `oauth` and `secret` according to values previously retrieved/entered.\n\t \n4. **Run the server**.\n\n\tOn the machine that will run the builds, run\n\t\n\t```\n\tnix-build ci.nix -A micro-ci\n\t./result/bin/micro-ci\n\t```\n\n5. **Add a `ci.nix` file to your project**.\n\n\tFinally, write a `ci.nix` file in your project. This Nix\n    expression should evaluate to an attribute-set of derivations.\n\t\n\tFor example, a Haskell project could use:\n\t\n\t```nix\n\twith (import <nixpkgs> {});\n\t{\n\t  cabal-build = haskellPackages.callPackage ./default.nix {};\n\t}\n\t```\n\t\n\tBut you can be as clever as you want. All that `micro-ci` cares\n    about is if the derivation can be evaluated.\n\n6. *Optional*: **Add status checks**\n\n\tOpen a pull request to check that everything works. If it looks\n    good, you can enforce `micro-ci` to pass all jobs. Head to\n    https://github.com/$YOUR_NAME/$YOUR_REPO/settings/branches and set\n    up a protected branch and add the `ci.nix` statuses.\n'