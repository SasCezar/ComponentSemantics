b'# Buildkite Agent ![Build status](https://badge.buildkite.com/08e4e12a0a1e478f0994eb1e8d51822c5c74d395.svg?branch=master)\n\n_Note: This is the development branch of the buildkite-agent, and may not contain files or code in the current stable release._\n\nThe buildkite-agent is a small, reliable, and cross-platform build runner that makes it easy to run automated builds on your own infrastructure. It\xe2\x80\x99s main responsibilities are polling [buildkite.com](https://buildkite.com/) for work, running build jobs, reporting back the status code and output log of the job, and uploading the job\'s artifacts.\n\nFull documentation is available at [buildkite.com/docs/agent](https://buildkite.com/docs/agent)\n\n```\n$ buildkite-agent --help\nUsage:\n\n  buildkite-agent <command> [arguments...]\n\nAvailable commands are:\n\n  start      Starts a Buildkite agent\n  annotate   Annotate the build page within the Buildkite UI with text from within a Buildkite job\n  artifact   Upload/download artifacts from Buildkite jobs\n  meta-data  Get/set data from Buildkite jobs\n  pipeline   Make changes to the pipeline of the currently running build\n  step       Make changes to a step (this includes any jobs that were created from the step)\n  bootstrap  Run a Buildkite job locally\n  help       Shows a list of commands or help for one command\n\nUse "buildkite-agent <command> --help" for more information about a command.\n```\n\n## Installing\n\nThe agents page on Buildkite has personalised instructions for installing the agent with Ubuntu (via apt), Debian (via apt), macOS (via homebrew), Windows and Linux. You can also run the agent [via Docker](https://hub.docker.com/r/buildkite/agent).\n\n## Starting\n\nTo start an agent all you need is your agent token, which you can find on your Agents page within Buildkite.\n\n```bash\nbuildkite-agent start --token\n```\n\n## Development\n\nThese instructions assume you are running a recent macOS, but could easily be adapted to Linux and Windows.\n\n```bash\n# Make sure you have go 1.11+ installed.\nbrew install go\n\n# Download the code somewhere, no GOPATH required\ngit clone https://github.com/buildkite/agent.git\ncd agent\n\n# Create a temporary builds directory\nmkdir /tmp/buildkite-builds\n\n# Build an agent binary and start the agent\ngo build -i -o /usr/local/bin/buildkite-agent .\nbuildkite-agent start --debug --build-path=/tmp/buildkite-builds --token "abc"\n\n# Or, run the agent directly and skip the build step\ngo run *.go start --debug --build-path=/tmp/buildkite-builds --token "abc"\n```\n\n### Dependency management\n\nWe\'re using Go 1.13+ and [Go Modules](https://github.com/golang/go/wiki/Modules) to manage our Go dependencies. We are keeping the dependencies vendored to remain backwards compatible with older go versions.\n\nIf you are using Go 1.11+ and have the agent in your `GOPATH`, you will need to enable modules via the environment variable:\n\n```bash\nexport GO111MODULE=on\n```\n\nIf you introduce a new package:\n\n```bash\ngo get github.com/my/new/package\n```\n\nThen you can write that package to the `vendor/` with:\n\n```bash\ngo mod vendor\n```\n\n## Contributing\n\n1. Fork it\n1. Create your feature branch (`git checkout -b my-new-feature`)\n1. Commit your changes (`git commit -am \'Add some feature\'`)\n1. Push to the branch (`git push origin my-new-feature`)\n1. Create new Pull Request\n\n## Contributors\n\nMany thanks to our fine contributors! @adill, @airhorns, @alexjurkiewicz, @bendrucker, @bradfeehan, @byroot, @cab, @caiofbpa, @colinrymer, @cysp, @daveoflynn, @daveoxley, @daveslutzkin, @davidk-zenefits, @DazWorrall, @dch, @deoxxa, @dgoodlad, @donpinkster, @essen, @grosskur, @jgavris, @joelmoss, @jules2689, @julianwa, @kouky, @marius92mc, @mirdhyn, @mousavian, @nikyoudale, @pda, @rprieto, @samritchie, @silarsis, @skevy, @stefanmb, @tekacs, @theojulienne, @tommeier, @underscorediscovery, and @wolfeidau.\n\n## Copyright\n\nCopyright (c) 2014-2019 Buildkite Pty Ltd. See [LICENSE](./LICENSE.txt) for details.\n'