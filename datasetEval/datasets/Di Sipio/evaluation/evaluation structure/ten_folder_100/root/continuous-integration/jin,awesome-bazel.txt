b'# Awesome Bazel [![Awesome](https://awesome.re/badge.svg)](https://awesome.re)\n\n<p align="center">\n\t<img height="300" src="https://bazel.build/images/bazel-icon.svg"></img>\n</p>\n<h3 align="center">{Fast, Correct} - Choose two</h3>\n\n> Bazel is an open-source build and test tool similar to Make, Maven, and Gradle. It uses a human-readable, high-level build language. Bazel supports projects in multiple languages and builds outputs for multiple platforms. Bazel supports large codebases across multiple repositories, and large numbers of users. *(via [docs](https://docs.bazel.build/versions/master/bazel-overview.html))*\n\nA curated list of [Bazel](https://bazel.build) [rules](#rules), [tooling](#tooling) and [resources](#resources).\n\nHave something to contribute or discuss? [Open a pull request](https://github.com/jin/awesome-bazel/pulls) or [create an issue](https://github.com/jin/awesome-bazel/issues).\n\n---\n\n## Contents\n\n- [Rules](#rules)\n- [Tooling](#tooling)\n  - [Toolchains](#toolchains)\n  - [Starlark](#starlark)\n  - [Migration](#migration)\n  - [Editor plugins](#editors)\n  - [Misc](#misc)\n- [Resources](#resources)\n  - [Tutorials](#tutorials)\n  - [Projects](#projects)\n  - [Articles](#articles)\n  - [Videos](#videos)\n  - [Podcasts](#podcasts)\n  - [Books](#books)\n  - [Slides](#slides)\n  - [Blogs](#blogs)\n  - [Community](#community)\n  - [Misc](#misc)\n\n\n## Rules\n\n<table class="table table-condensed table-bordered table-params">\n  <colgroup>\n    <col class="col-language">\n    <col classname="rule-repo">\n  </colgroup>\n  <thead>\n    <tr>\n      <th colspan="1">Language/Platform</th>\n      <th colspan="1">Repository/Documentation</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>.NET (C#, Nuget)</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_dotnet">bazelbuild/rules_dotnet</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Amazon web services (AWS)</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/evertz/ev_rules_aws">evertz/ev_rules_aws</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Android</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_android">bazelbuild/rules_android</a></li>\n          <li><a href="https://github.com/quittle/bazel_android_sdk_downloader">quittle/bazel_android_sdk_downloader</a></li>: Drop-in replacement for android_sdk_repository to automatically download the Android SDK.\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Apple (iOS, macOS, tvOS, watchOS)</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_apple">bazelbuild/rules_apple</a></li>\n          <li><a href="https://github.com/ios-bazel-users/ios-bazel-users">ios-bazel-users/ios-bazel-users</a>: Resources for using Bazel for iOS development</li>\n          <li><a href="https://github.com/thii/rules_apple_extras">thii/rules_apple_extras</a>: Extra rules for Apple platforms</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>ANTLR</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/marcohu/rules_antlr">marcohu/rules_antlr</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>ARM Mbed OS</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/mjbots/rules_mbed">mjbots/rules_mbed</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Bison</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/jmillikin/rules_bison">jmillikin/rules_bison</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>BOSH</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/xoebus/rules_bosh">xoebus/rules_bosh</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>C++</td>\n      <td>\n        <ul>\n          <li><a href="https://docs.bazel.build/versions/master/be/c-cpp.html">https://docs.bazel.build/versions/master/be/c-cpp.html</a></li>\n        </ul>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_cc">bazelbuild/rules_cc</a></li>\n        </ul>\n        <ul>\n          <li>\n            <div><a href="https://github.com/nelhage/rules_boost">nelhage/rules_boost</a>: Rules for Boost C++ libraries</div>\n          </li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Closure</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_closure">bazelbuild/rules_closure</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>CSS</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_postcss">bazelbuild/rules_postcss</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>CMake</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_foreign_cc">bazelbuild/rules_foreign_cc</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>CocoaPods</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/pinterest/PodToBUILD">pinterest/PodToBUILD</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>CODEOWNERS</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/zegl/rules_codeowners">zegl/rules_codeowners</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>D</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_d">bazelbuild/rules_d</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Dart</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/dart-lang/bazel">dart-lang/bazel</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Docker</td>\n      <td>\n        <ul>\n          <li>\n            <a href="https://github.com/bazelbuild/rules_docker">bazelbuild/rules_docker</a>\n          </li>\n          <li>\n            <div><a href="https://github.com/rmohr/rules_container_rpm">rmohr/rules_container_rpm</a>: Install RPMs without a container daemon with bazel</div>\n          </li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>ECS</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/dan-compton/ecsonnet">dan-compton/ecsonnet</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Elm</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/EdSchouten/rules_elm">EdSchouten/rules_elm</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Emscripten</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/ribrdb/rules_emscripten">ribrdb/rules_emscripten</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Flex</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/jmillikin/rules_flex">jmillikin/rules_flex</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Go</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_go">bazelbuild/rules_go</a></li>\n        </ul>\n        <ul>\n          <li>\n            <div><a href="https://github.com/bazelbuild/bazel-gazelle">Gazelle</a>: Generate Bazel BUILD files for Go related_projects </div>\n          </li>\n          <li>\n            <div><a href="https://github.com/bazelbuild/bazel-gazelle#update-repos">update-repos</a>: Tool in Gazelle for adding Go dependencies as `go_repository` to WORKSPACE</div>\n          </li>\n          <li>\n            <div><a href="https://github.com/ActiveState/rules_vendor">ActiveState/rules_vendor</a>: Bazel support for packaging Go vendored dependencies</div>\n          </li>\n          <li>\n            <div><a href="https://github.com/jmhodges/bazel_gomock">jmhodges/bazel_gomock</a>: Support for generating code with `mockgen`</div>\n          </li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Graal</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/andyscott/rules_graal">andyscott/rules_graal</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Grafana</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/etsy/rules_grafana">etsy/rules_grafana</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Groovy</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_groovy">bazelbuild/rules_groovy</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>GWT</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_gwt">bazelbuild/rules_gwt</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Haskell</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/tweag/rules_haskell">tweag/rules_haskell</a></li>\n        </ul>\n        <ul>\n          <li>\n            <div><a href="https://github.com/FormationAI/hazel">FormationAI/hazel</a>: Generate rules for third-party Haskell dependencies</div>\n          </li>\n          <li>\n            <div><a href="https://github.com/google/cabal2bazel">google/cabal2bazel</a>: Import Cabal packages from Hackage as Bazel packages</div>\n          </li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Helm (Kubernetes)</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/tmc/rules_helm">tmc/rules_helm</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Homebrew</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/tmc/rules_homebrew">tmc/rules_homebrew</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Hugo</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/stackb/rules_hugo">stackb/rules_hugo</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Idris</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/BryghtWords/rules_idris">BryghtWords/rules_idris</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Java</td>\n      <td>\n        <ul>\n          <li><a href="https://docs.bazel.build/versions/master/be/java.html">https://docs.bazel.build/versions/master/be/java.html</a></li>\n        </ul>\n        </ul>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_java">bazelbuild/rules_java</a></li>\n        </ul>\n        <ul>\n          <li>\n            <div><a href="https://github.com/bazelbuild/tools_jvm_autodeps">bazelbuild/tools_jvm_autodeps</a> (Jadep): Generate BUILD files automatically for an existing Java project with class dependency analysis.</div>\n          </li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Kotlin</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_kotlin">bazelbuild/rules_kotlin</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Kubernetes</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_k8s">bazelbuild/rules_k8s</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>LaTeX</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/ProdriveTechnologies/bazel-latex">ProdriveTechnologies/bazel-latex</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>LLVM toolchain</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/vsco/bazel-toolchains">vsco/bazel-toolchains</a></li>\n          <li><a href="https://github.com/grailbio/bazel-toolchain">grailbio/bazel-toolchain</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>M4</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/jmillikin/rules_m4">jmillikin/rules_m4</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Maven</td>\n      <td>\n        <ul>\n          <li>\n            <div><a href="https://github.com/johnynek/bazel-deps">johnynek/bazel-deps</a>: Generate Bazel dependencies transitively for Maven artifacts, with Scala support.</div>\n          </li>\n          <li>\n            <div><a href="https://github.com/pubref/rules_maven">pubref/rules_maven</a></div>\n          </li>\n          <li>\n            <div><a href="https://github.com/bazelbuild/gmaven_rules">bazelbuild/gmaven_rules</a>: Repository rules for Maven artifacts hosted on Google Maven repository</div>\n          </li>\n          <li>\n            <div><a href="https://github.com/square/bazel_maven_repository">square/bazel_maven_repository</a>: Access maven deps as "@maven//some/maven/group_id:artifact_id" (incorporating transitive dependencies)</div>\n          </li>\n          <li>\n            <div><a href="https://github.com/bazelbuild/rules_jvm_external">bazelbuild/rules_jvm_external</a>: Rules to resolve and fetch artifacts transitively from Maven repositories</div>\n          </li>\n          <li>\n            <div><a href="https://github.com/menny/bazel-mvn-deps">menny/bazel-mvn-deps</a>: A simple Maven dependency graph generator for Bazel</div>\n          </li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Maya</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/mdilena/bazel-maya">mdilena/bazel-maya</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>NativeScript</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/NativeScript/nativescript-dev-bazel">NativeScript/nativescript-dev-bazel</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Nixpkgs</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/tweag/rules_nixpkgs">tweag/rules_nixpkgs</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Node.js / JavaScript</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_nodejs">bazelbuild/rules_nodejs</a></li>\n\t  <li><a href="https://github.com/ecosia/bazel_rules_nodejs_contrib">ecosia/bazel_rules_nodejs_contrib</a></li>\n          <li><a href="https://github.com/dropbox/rules_node">dropbox/rules_node</a></li>\n          <li><a href="https://github.com/pubref/rules_node">pubref/rules_node</a></li>\n          <li><a href="https://github.com/zenclabs/bazel-javascript">zenclabs/bazel-javascript</a></li>\n          <li><a href="https://github.com/vistarmedia/rules_js">vistarmedia/rules_js</a></li>\n          <li><a href="https://github.com/thelgevold/rules_svelte">thelgevold/rules_svelte</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>OCaml</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/jin/rules_ocaml">jin/rules_ocaml</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>OCI Containers</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/guymers/bazel_rules_container">guymers/bazel_rules_container</a></li>\n          <li><a href="https://github.com/guymers/containers_by_bazel">guymers/containers_by_bazel</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>OpenAPI/Swagger</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/meetup/rules_openapi">meetup/rules_openapi</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Pandoc</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/ProdriveTechnologies/bazel-pandoc">ProdriveTechnologies/bazel-pandoc</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>PHP</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/kburnik/php_codebase">kburnik/php_codebase</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Protobuf</td>\n      <td>\n        <ul>\n          <li><a href="https://docs.bazel.build/versions/master/be/protocol-buffer.html">https://docs.bazel.build/versions/master/be/protocol-buffer.html</a>: Native protocol buffer rules</li>\n        </ul>\n        <ul>\n          <li><a href="https://github.com/rules-proto-grpc/rules_proto_grpc">rules-proto-grpc/rules_proto_grpc</a>: Bazel rules for building Protocol Buffers & gRPC code and libraries</li>\n        </ul>\n        <ul>\n          <li><a href="https://github.com/stackb/rules_proto">stackb/rules_proto</a>: Modern bazel build rules for protobuf / gRPC</li>\n        </ul>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_proto">bazelbuild/rules_proto</a>: Starlark implementation of the Protobuf rules in Bazel</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Purescript</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/felixmulder/rules_purescript">felixmulder/rules_purescript</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Python</td>\n      <td>\n        <ul>\n          <li><a href="https://docs.bazel.build/versions/master/be/python.html">https://docs.bazel.build/versions/master/be/python.html</a></li>\n          <li><a href="https://github.com/bazelbuild/rules_python/">bazelbuild/rules_python</a></li>\n        </ul>\n        <ul>\n          <li>\n            <div><a href="https://github.com/benley/bazel_rules_pex">benley/rules_pex</a></div>\n          </li>\n          <li>\n            <div><a href="https://github.com/TriggerMail/rules_pyz">TriggerMail/rules_pyz</a>: Python rules with PyPI package support</div>\n          </li>\n          <li>\n            <div><a href="https://github.com/georgeliaw/rules_wheel">georgeliaw/rules_wheel</a>: Rules for building Python wheels </div>\n          </li>\n          <li>\n            <div><a href="https://github.com/tuomasr/pazel">tuomasr/pazel</a>: Generate Bazel BUILD files for Python </div>\n          </li>\n          <li>\n            <div><a href="https://github.com/zenreach/ramsay">zenreach/ramsay</a>: Generate Bazel BUILD files for Python rules_pyz </div>\n          </li>\n          <li>\n            <div><a href="https://github.com/weisi/bazel_for_gcloud_python">weisi/bazel_for_gcloud_python</a>: Rules to build Python 3 and deploy to Google App Engine and Google Cloud Functions</div>\n          </li>\n          <li>\n            <div><a href="https://github.com/apt-itude/rules_pip">apt-itude/rules_pip</a>: Rules for <code>pip</code> requirements files </div>\n          </li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Ragel</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/jmillikin/rules_ragel">jmillikin/rules_ragel</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>R</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/grailbio/rules_r">grailbio/rules_r</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>ReasonML, BuckleScript</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/ostera/rules_reason">ostera/rules_reason</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Ruby</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/yugui/rules_ruby">yugui/rules_ruby</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Rust</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_rust">bazelbuild/rules_rust</a></li>\n        </ul>\n        <ul>\n          <li>\n            <div><a href="https://github.com/google/cargo-raze">google/cargo-raze</a>: Generate Bazel BUILD files for Rust Crates</div>\n          </li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Sass</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_sass">bazelbuild/rules_sass</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Scala</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_scala">bazelbuild/rules_scala</a></li>\n          <li><a href="https://github.com/higherkindness/rules_scala">higherkindness/rules_scala</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>SonarQube</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/Zetten/bazel-sonarqube">Zetten/bazel-sonarqube</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Swift</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_swift">bazelbuild/rules_swift</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Terraform</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/ceason/rules_terraform">ceason/rules_terraform</a></li>\n          <li><a href="https://github.com/mitchelldavis/rules_terraform">mitchelldavis/rules_terraform</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Twirl</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/lucidsoftware/rules_twirl">lucidsoftware/rules_twirl</a></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>TypeScript</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/bazelbuild/rules_typescript">bazelbuild/rules_typescript</a></li>\n          <li><a href="https://github.com/sconover/rules_multi_tsc">sconover/rules_multi_tsc</a>: Bazel rules that support breaking a typescript codebase into small, independently-compilable libraries.</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>Web (HTML, CSS, JS, assets)</td>\n      <td>\n        <ul>\n          <li><a href="https://github.com/quittle/rules_web">quittle/rules_web</a></li>\n        </ul>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n## Tooling\n\n### General\n\n- [graknlabs/bazel-distribution](https://github.com/graknlabs/bazel-distribution) - Assemble and deploy software distributions to common platforms, e.g. APT, Brew, GitHub, Maven, NPM, PIP, RPM, etc.\n- [bazelbuild/bazel-watcher](https://github.com/bazelbuild/bazel-watcher) - Automatically run Bazel commands when source files change\n- [nadirizr/dazel](https://github.com/nadirizr/dazel) - Run Bazel inside a Docker container via a seamless proxy\n- [spotify/bazel-tools](https://github.com/spotify/bazel-tools) - Spotify\'s production tools for dealing with very large Bazel-managed repositories.\n- [atlassian/bazel-tools](https://github.com/atlassian/bazel-tools) - Atlassian\'s reusable bits for Bazel\n- [gerrit/bazlets](https://github.com/GerritCodeReview/bazlets) - Gerrit\'s re-usable building blocks for Bazel build tool\n- [Bazel Code Search](https://source.bazel.build) - Browse Bazel\'s codebase with cross references.\n- [heroku-buildpack-bazel](https://github.com/google/heroku-buildpack-bazel) - Heroku buildpack for Bazel\n- [hchauvin/bazel-coverage-report](https://github.com/hchauvin/bazel-coverage-report) - A multi-language coverage report generator for Bazel\n- [bazel-arcanist](https://github.com/igorgatis/bazel-arcanist) - Integration with Arcanist with `arc test` and `arc lint`\n- [Asana/bazeltsc](https://github.com/Asana/bazeltsc) - TypeScript compiler that knows how to run as a Bazel persistent worker\n- [bazelbuild/sandboxfs](https://github.com/bazelbuild/sandboxfs) - A virtual file system for sandboxing\n- [JetBrains/teamcity-bazel-plugin](https://github.com/JetBrains/teamcity-bazel-plugin) - TeamCity plugin for Bazel ([blogpost](https://blog.jetbrains.com/teamcity/2018/11/bazel-plugin-for-teamcity/))\n- [philwo/bazelisk](https://github.com/philwo/bazelisk) - A user-friendly launcher for Bazel\n- [bzl-io/bzl](https://github.com/bzl-io/bzl) - a wrapper around the bazel build tool to extend its functionality\n\n### Toolchains\n\nToolchains enable authors to decouple their rule logic from platform-based selection of tools.\n\n- [bazelbuilds/bazel-toolchains](https://github.com/bazelbuild/bazel-toolchains) -  Bazel toolchain configurations to enable Google Cloud Remote Build Execution via Docker containers\n- [vsco/bazel-toolchains](https://github.com/vsco/bazel-toolchains) - A collection of Bazel C++ build infrastructure based on Chromium\'s LLVM toolchain\n- [grailbio/bazel-toolchain](https://github.com/grailbio/bazel-toolchain) - LLVM toolchain for bazel\n\n\n### Starlark\n\nStarlark (formerly called Skylark) is Bazel\'s domain-specific language for writing BUILD definitions and rules.\n\n- [Official documentation](https://docs.bazel.build/versions/master/skylark/language.html)\n- [Language description](https://github.com/bazelbuild/starlark/)\n- [Starlark in Go](https://github.com/google/skylark)\n- [Starlark in Rust](https://github.com/google/starlark-rust)\n- [Skydoc](https://github.com/bazelbuild/skydoc) - Starlark documentation generator\n- [Sphinx-Bazel](https://sphinx-bazel.readthedocs.io/en/latest/) - [Sphinx](http://www.sphinx-doc.org/en/master/) extension to read Bazel files to generate documentation ([GitHub](https://github.com/useblocks/sphinx-bazel))\n- [Skylib](https://github.com/bazelbuild/bazel-skylib) - Common useful functions for writing custom build rules with Starlark\n- [Bazel Common Libraries](https://github.com/google/bazel-common) - Common functionality for Google\'s open-source libraries that are built with Bazel.\n\n### Remote caching and execution\n\n- [bazel-remote](https://github.com/buchgr/bazel-remote) - A remote cache for Bazel using HTTP/1.1 with `--remote_rest_cache`\n- [bazelbuild/bazel-buildfarm](https://github.com/bazelbuild/bazel-buildfarm) - Self-hosted remote caching and execution service written in Java\n- [Buildbarn](https://github.com/buildbarn) - Self-hosted remote caching and execution service written in Go\n- [BuildGrid](https://gitlab.com/BuildGrid/buildgrid) - Self-hosted remote caching and execution service written in Python\n- [Asana/bazels3cache](https://github.com/Asana/bazels3cache) - Small web server for a Bazel cache that proxies to S3, allowing Bazel to work offline and has async uploads to make Bazel faster.\n- [Zenreach/hydroponics](https://github.com/zenreach/hydroponics) - Serverless CI for Bazel making use of S3 for caching.\n\n### Project generators\n\nTools for generating WORKSPACE and BUILD files from source code.\n\n- [blakefiler.py](https://gist.github.com/jart/082b1078a065b79949508bbe1b7d8ef0) - Generate a Makefile and tarball-able distribution using `bazel query`\n- [Lavender](https://github.com/tmandry/lavender) - Generate Visual Studio projects that uses Bazel for the actual building\n- [Jadep: Java Automated Dependencies](https://github.com/bazelbuild/tools_jvm_autodeps) - Generate BUILD files automatically for an existing Java project with class dependency analysis.\n- [BUILD File Generator](https://github.com/bazelbuild/BUILD_file_generator) - Similar tool for existing Java projects.\n- [Gazelle](https://github.com/bazelbuild/bazel-gazelle) - BUILD file generator for Go projects.\n- [Pazel](https://github.com/tuomasr/pazel) - Generate Bazel BUILD files for Python\n- [Tulsi for Xcode](https://github.com/bazelbuild/tulsi) - A project generator for Xcode projects\n- [pinterest/xchammer](https://github.com/pinterest/xchammer) - XCHammer generates Xcode projects from a Bazel Workspace\n- [create-bazel-workspace](https://github.com/jin/create-bazel-workspace) - Generate a new multi-language Bazel workspace with minimal configuration\n- [Gazelle JS Plugin](https://github.com/ecosia/bazel_rules_nodejs_contrib#build-file-generation) Generate BUILD files automatically for an existing Javascript or Typescript project with npm dependency analysis.\n- [llvmbzlgen](https://github.com/kythe/llvmbzlgen) - Tools for generating Bazel BUILD targets from LLVM CMakeLists\n\n### Editors\n\n- [IntelliJ plugin (compatible with Android Studio and CLion)](https://ij.bazel.build)\n- [Eclipse plugin](https://github.com/bazelbuild/eclipse)\n- [Vim plugin](https://github.com/bazelbuild/vim-bazel)\n- Emacs Support\n\t- [codesuki/bazel-mode](https://github.com/codesuki/bazel-mode):\n\t- [brown/bazel-mode](https://github.com/brown/bazel-mode)\n- [VSCode](https://github.com/dprogm/vscode-bazel-tools)\n- [bazelbuild/vscode-bazel](bazelbuild/vscode-bazel)\n- [PyCharm](https://github.com/tomhanetz/bazel-for-human-beings)\n- [sconover/rules_intellij_generate](https://github.com/sconover/rules_intellij_generate) - Plugin-less Bazel/IntelliJ integration\n- [georgewfraser/java-language-server](https://github.com/georgewfraser/java-language-server) - Java Language Server (LSP) with support for Bazel-built projects\n\n### BUILD file tools\n\n[bazelbuild/buildtools](https://github.com/bazelbuild/buildtools) contains:\n\n- Buildifier - Prettifier for BUILD files\n- Buildozer - Manipulate BUILD file contents from the command line\n- unused_deps - Find unneeded dependencies in BUILD files\n\n### Migration\n\n- [bazelbuild/migration-tooling](https://github.com/bazelbuild/migration-tooling) - Migrate an existing Maven project to Bazel.\n- [johnynek/bazel-deps](https://github.com/johnynek/bazel-deps) - Generate bazel dependencies transitively for Maven artifacts, with scala support.\n- [rules_maven](https://github.com/pubref/rules_maven) - Rules to define Maven dependencies\n- [bazelize-maven-plugin](https://github.com/OrhanKupusoglu/bazelize-maven-plugin) - Maven plugin for migration from Maven to Bazel\n- [bazelbuild/gmaven_rules](https://github.com/bazelbuild/gmaven_rules) - Transitive WORKSPACE rules for Google\'s Maven repository\n- [stripe/sbt-bazel](https://github.com/stripe/sbt-bazel) - Easily convert SBT projects to Bazel workspaces\n- [wix-incubator/exodus](https://github.com/wix-incubator/exodus) - Easily migrate your JVM code from Maven to Bazel\n\n## Resources\n\n### Designs\n\n- [bazelbuild/proposals](https://github.com/bazelbuild/proposals) - Index of all design documents and proposals for Bazel.\n- [Bazel\'s design process](https://bazel.build/designs/index.html)\n\n### Tutorials\n\n#### Official\n\n- [Java](https://docs.bazel.build/versions/master/tutorial/java.html)\n- [C++](https://docs.bazel.build/versions/master/tutorial/cpp.html)\n- [Android](https://docs.bazel.build/versions/master/tutorial/android-app.html)\n- [iOS](https://docs.bazel.build/versions/master/tutorial/ios-app.html)\n\n#### Toolchains\n- [c++ toolchains](https://docs.bazel.build/versions/master/tutorial/cc-toolchain-config.html)\n\n#### Codelabs\n\n- [Building Android Apps with Bazel](https://codelabs.developers.google.com/codelabs/bazel-android-intro/index.html)\n\n#### Community\n\n- [Aspects: the fan-fic of build rules](https://www.kchodorow.com/blog/2017/01/10/aspects-the-fan-fic-of-build-rules/)\n- [Real-world Bazel](https://github.com/cgbystrom/real-world-bazel) - BUILD files collected from public GitHub projects for reference and learning purposes.\n- [Bazel Lesson 1](https://github.com/sayrer/bazel-lesson-1) and [Bazel Lesson 2](https://github.com/sayrer/bazel-lesson-2) - Gradually build a multi-language Bazel project.\n\n### Projects\n\nA list of projects built with Bazel:\n\n- [bazelment/trunk](https://github.com/bazelment/trunk): A collection of C++/Java OSS with BUILD files. e.g. grpc, guava, netty.\n- [tensorflow/tensorflow](https://github.com/tensorflow/tensorflow): Computation using data flow graphs for scalable machine learning.\n- [abseil/abseil-cpp](https://github.com/abseil/abseil-cpp) - OSS collection of C++ code (compliant to C++11) designed to augment the C++ standard library.\n- [GoogleCloudPlatform/distroless](https://github.com/GoogleCloudPlatform/distroless) - Language focused docker images, minus the operating system.\n- [google/subpar](https://github.com/google/subpar) - Subpar is a utility for creating self-contained python executables. It is designed to work well with Bazel.\n- [alexeagle/angular-bazel-example](https://github.com/alexeagle/angular-bazel-example): Building an Angular application with Bazel\n\t- ABC: Angular Buildtools Convergence [https://g.co/ng/abc](https://g.co/ng/abc)\n- [google/startup-os](https://github.com/google/startup-os) - Working examples of Google\'s Open Source tools and Cloud.\n- [lucperkins/colossus](https://github.com/lucperkins/colossus) - An example microservice architecture for Kubernetes using Bazel, Go, Java, Docker, Kubernetes, Minikube, Gazelle, gRPC, Prometheus, Grafana, and more.\n\n\n### Articles\n\n- [Build mobile apps with Bazel. Part 2: iOS](https://tulipemoutarde.be/posts/bazel-for-mobile-apps-part-2/) - Francois Stephany\n- [Build mobile apps with Bazel. Part 1: Android](https://tulipemoutarde.be/posts/bazel-for-mobile-apps-part-1/) - Francois Stephany\n- [(In Japanese) Building C++ with Bazel / C++\xe3\x83\x93\xe3\x83\xab\xe3\x83\x89\xe7\x92\xb0\xe5\xa2\x83\xe3\x81\xa8\xe3\x81\x97\xe3\x81\xa6\xe3\x81\xaeBazel\xe5\xb0\x8e\xe5\x85\xa5\xe8\xa9\xa6\xe8\xa1\x8c](http://blog.matsuokah.jp/entry/2015/12/15/080000)\n- [Nix + Bazel = fully reproducible, incremental builds](https://www.tweag.io/posts/2018-03-15-bazel-nix.html)\n- [Production Code Splitting With Bazel](https://medium.com/@gregmagolan/production-code-splitting-with-bazel-8a7da242bf83) - Greg Magolan (Google)\n- [Build large polyglot projects with Bazel... now with Haskell support](https://www.tweag.io/posts/2018-02-28-bazel-haskell.html)\n- [Managing a Go monorepo with Bazel](https://filipnikolovski.com/managing-go-monorepo-with-bazel/) - Filip Nikolovski (InPlayer)\n- [How to Create a Persistent Worker for Bazel](https://medium.com/@mmorearty/how-to-create-a-persistent-worker-for-bazel-7738bba2cabb) - Mike Morearty (Asana)\n- [We Switched from Maven to Bazel and Builds Got 10x Faster](https://redfin.engineering/we-switched-from-maven-to-bazel-and-builds-got-10x-faster-b265a7845854) - Jason Lunz (Redfin)\n- [Angular Bazel Build With Dev Server](http://www.syntaxsuccess.com/viewarticle/angular-bazel-build-with-dev-server) - Torgeir "Tor" Helgevold\n- [Bazel Conference 2017](https://medium.com/@justin_16029/bazel-conference-2017-85a4f397d69c) - Justin Poehnelt\n- [What Angular is doing with Bazel and Closure](https://medium.com/@Jakeherringbone/what-angular-is-doing-with-bazel-and-closure-21f526f64a34)\n- [Building Docker Images Without Docker](https://medium.com/bitnami-perspectives/building-docker-images-without-docker-c619061b13a9)\n- [Bazel Golang Hello World](https://chrislovecnm.com/golang/bazel/bazel-hello-world)\n- [Migrating from Gradle to Bazel](https://www.pgrs.net/2015/09/01/migrating-from-gradle-to-bazel)\n- [Benchmarking the Bazel build system on real-life C++](http://nicolovaligi.com/benchmark-bazel-build-cpp.html)\n- [Migrating Gypsum and CodeSwitch to Bazel](http://jayconrod.com/posts/97/migrating-to-bazel-part-1) - Jay Conrod (Google)\n\n### Videos\n\n- [KubeCon Europe 2019: Reproducible Development and Deployment with Bazel and Telepresence](https://www.youtube.com/watch?v=tD0FIlxO1AQ) - Christian Roggia (Engel & V\xc3\xb6lkers)\n- [ScalaSphere 2018: Using Bazel to build Scala](https://www.youtube.com/watch?v=iSLDQPsWvGs) - Andy Scott (Stripe)\n- [GopherChina 2018: Bazel build //:Go](https://www.youtube.com/watch?v=oTS_xxZyhG8) - Yuan He (\xe6\xb5\x81\xe5\x88\xa9\xe8\xaf\xb4/liulishuo.com)\n- [How I love being ejected: Customizing your Angular build with Bazel](https://www.youtube.com/watch?v=ieRJwFGWEOM) - Greg Magolan (Angular team)\n- [SF Scala: Bazel - a Brief Overview](https://www.youtube.com/watch?v=m9Vypu4AYc4) - Ulf Adams (Google)\n- [Bazel for building Angular applications at Angular Lunch](https://www.youtube.com/watch?v=KmaE6z_ECRg) - Kyle Cordes\n- [Deep Dive of Google\'s Angular Build Toolchain](https://www.youtube.com/watch?v=z9Q_2N9oaG8) - Alex Eagle (Google)\n- [Bazel Conference 2017 Opening Remarks](https://www.youtube.com/watch?v=3eFllvz8_0k) - Helen Altshuler, John Field, Ulf Adams (Google)\n- [Bazel Remote Execution and Remote Caching w/ Two Sigma and Uber](https://www.youtube.com/watch?v=_bPyEbAyC0s) - Alpha Lam (Two Sigma), George Gensure (Uber)\n- [Tensorflow with Bazel \xe2\x80\x94 Lessons Learned](https://www.youtube.com/watch?v=Rw-KrbfyABQ) - Gunhan Gulsoy (Google)\n- [Building Real-time Systems with Bazel w/ SpaceX](https://www.youtube.com/watch?v=t_3bckhV_YI) - Matt Sachtler, Patrick Conrad (SpaceX)\n- [Hacks and Tips for Incremental Adoption of Bazel for iOS w/ Pinterest](https://www.youtube.com/watch?v=wewAVF-DVhs) - Rahul Malik, Brandon Kase, Jerry Marino (Pinterest)\n- [Front End Development with Bazel: Angular/TypeScript and Persistent Workers w/ Asana](https://www.youtube.com/watch?v=0pgERydGyqo) - Mike Morearty (Asana), Alex Eagle (Google)\n- [Scala with Bazel w/ Wix, Stripe, Databricks](https://www.youtube.com/watch?v=wCkqtM44BvU) - Ittai Zeidman (Wix), Oscar Boykin (Stripe), Ahir Reddy (DataBricks)\n- [Skylark: The Bazel Extensibility Language](https://www.youtube.com/watch?v=xLgIKcbF6SA) - Laurent Le Brun (Google)\n- [Using Bazel for Fast, Correct Docker Deployments w/ Databricks](https://www.youtube.com/watch?v=RS1aiQqgUTA) - Miles Yucht (Databricks), Matthew Moore (Google)\n- [Platforms and Toolchains in Bazel](https://www.youtube.com/watch?v=TXwmwPB0i_Y) - John Cater (Google)\n- [Building Kubernetes \\[a Go binary\\] with Bazel](https://www.youtube.com/watch?v=j6ZVaJlokhM) - Jeff Grafton (Google)\n- [Integration testing with Bazel w/Dropbox](https://www.youtube.com/watch?v=muvU1DYrY0w) - Benjamin Peterson (Dropbox)\n- [Bazel Conference 2017 playlist](https://www.youtube.com/playlist?list=PLxNYxgaZ8RseY0KmkXQSt0StE71E7yizG)\n- [GothamGo 2017: A Go implementation of the Skylark Configuration Language](https://www.youtube.com/watch?v=9P_YKVhncWI) - Alan Donovan (Google)\n- [Bazel: Google\'s Extensible, Multilingual, Scalable Build System DevTools@Scale2017](https://www.youtube.com/watch?v=-M0FoRNpF8s) - Dmitry Lomov (Google)\n- [Building Go with Bazel at Golang UK Conference 2017](https://www.youtube.com/watch?v=2TKxuERTnks) - Paul Bellamy\n- [Building Software At Google Scale](https://www.youtube.com/watch?v=6GCDfoAOKIY) - Ulf Adams, Helen Altshuler, David Stanke (Google)\n- [Bazel: Google\'s own build tool, now publicly available in Beta](https://www.youtube.com/watch?v=G-4jqDgILCM) - Paul Johnston\n- [Bazel at FrOSCon](https://www.youtube.com/watch?v=8p0RquTT69M) - Klaus Aehlig (Google)\n- [Building Python with Bazel](https://www.youtube.com/watch?v=i2Gu7lMVeEw) - Benjamin Peterson (Dropbox)\n- [Bazel at the Dart Developer Summit 2016](https://www.youtube.com/watch?v=zZnGUknpFMM) - Damien Martin-Guillerez (Google)\n\n### Podcasts\n- [Bazel with Tony Aiuto; Google Cloud Podcast #153 | Oct 31, 2018](https://www.gcppodcast.com/categories/bazel/) - Tony Aiuto\n- [AiA 247: Bazel with Alex Eagle; Adventures in Angular | Jul 9th 2019](https://player.fm/series/all-angular-podcasts-by-devchattv/aia-247-bazel-with-alex-eagle) - Alex Eagle (Google)\n\n### Books\n- [Beginning Bazel: Building and Testing for Java, Go, and More](https://www.amazon.com/Beginning-Bazel-Building-Testing-Java/dp/1484251938) - P.J. McNerney;  Apress, 1st ed. edition (December 24, 2019) 978-1484251935\n\n### Slides\n\n- [Building Gerrit with Bazel at Gerrit User Conference 2016](http://ostrovsky.org/gerrit/bazel-build-gerrit/) - David Ostrovsky\n\n### Blogs\n\n- [Official Bazel Blog](https://blog.bazel.build)\n- [Kristina Chodorow\'s blogposts on Bazel](https://www.kchodorow.com/blog/category/bazel)\n\n### Community\n\n- [#bazelbuild on Slack](https://slack.bazel.build)\n- [BuildTeamWorld on Slack](https://buildteamworld.herokuapp.com) - A community slack for BuildFarm, BuildGrid, Bazel and general build teams.\n- [`#bazel` on Freenode](http://webchat.freenode.net/?channels=bazel)\n- [Stack Overflow](http://stackoverflow.com/questions/tagged/bazel)\n- [Bazel users mailing list](https://groups.google.com/forum/#!forum/bazel-discuss)\n- [Bazel developers mailing list](https://groups.google.com/forum/#!forum/bazel-dev)\n\n### Misc\n\n- [Why Google Stores Billions of Lines of Code in a Single Repository\n](https://cacm.acm.org/magazines/2016/7/204032-why-google-stores-billions-of-lines-of-code-in-a-single-repository/fulltext) ([Video](https://www.youtube.com/watch?v=W71BTkUbdqE) at @Scale 2015)\n'