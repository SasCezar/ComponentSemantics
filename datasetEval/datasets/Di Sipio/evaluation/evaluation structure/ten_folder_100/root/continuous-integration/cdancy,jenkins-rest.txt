b'\n[![Build Status](https://travis-ci.org/cdancy/jenkins-rest.svg?branch=master)](https://travis-ci.org/cdancy/jenkins-rest)\n[![codecov](https://codecov.io/gh/cdancy/jenkins-rest/branch/master/graph/badge.svg)](https://codecov.io/gh/cdancy/jenkins-rest)\n[![Download](https://api.bintray.com/packages/cdancy/java-libraries/jenkins-rest/images/download.svg) ](https://bintray.com/cdancy/java-libraries/jenkins-rest/_latestVersion)\n[![Stack Overflow](https://img.shields.io/badge/stack%20overflow-jenkins&#8211;rest-4183C4.svg)](https://stackoverflow.com/questions/tagged/jenkins+rest)\n\n# jenkins-rest\n\nJava client is built on the top of jclouds for working with Jenkins REST API.\n\n## Setup\n\nClient\'s can be built like so:\n```\nJenkinsClient client = JenkinsClient.builder()\n.endPoint("http://127.0.0.1:8080") // Optional. Defaults to http://127.0.0.1:8080\n.credentials("admin:password") // Optional.\n.build();\n\nSystemInfo systemInfo = client.api().systemApi().systemInfo();\nassertTrue(systemInfo.jenkinsVersion().equals("1.642.4"));\n```\n      \n## Latest release\n\nCan be found in jcenter like so:\n```\n<dependency>\n  <groupId>com.cdancy</groupId>\n  <artifactId>jenkins-rest</artifactId>\n  <version>X.Y.Z</version>\n  <classifier>sources|tests|javadoc|all</classifier> (Optional)\n</dependency>\n```\n\n## Documentation\n\n* javadocs can be found via [github pages here](http://cdancy.github.io/jenkins-rest/docs/javadoc/)\n* the [jenkins-rest wiki](https://github.com/cdancy/jenkins-rest/wiki)\n\n## Property based setup\n\nClient instances do NOT need to supply the endPoint or credentials as a part of instantiating the JenkinsClient object. \nInstead one can supply them through system properties, environment variables, or a combination \nof the two. System properties will be searched first and if not found, will attempt to \nquery the environment.\n\nSetting the `endpoint` can be done with any of the following (searched in order):\n\n- `jenkins.rest.endpoint`\n- `jenkinsRestEndpoint`\n- `JENKINS_REST_ENDPOINT`\n\nSetting the `credentials` can be done with any of the following (searched in order):\n\n- `jenkins.rest.credentials`\n- `jenkinsRestCredentials`\n- `JENKINS_REST_CREDENTIALS`\n\n## Credentials\n\njenkins-rest credentials can take 1 of 2 forms:\n\n- Colon delimited username and password: __admin:password__ \n- Base64 encoded username and password: __YWRtaW46cGFzc3dvcmQ=__ \n\n## Examples\n\nThe [mock](https://github.com/cdancy/jenkins-rest/tree/master/src/test/java/com/cdancy/jenkins/rest/features) and [live](https://github.com/cdancy/jenkins-rest/tree/master/src/test/java/com/cdancy/jenkins/rest/features) tests provide many examples\nthat you can use in your own code.\n\n## Components\n\n- jclouds \\- used as the backend for communicating with Jenkins REST API\n- AutoValue \\- used to create immutable value types both to and from the jenkins program\n    \n## Testing\n\nRunning mock tests can be done like so:\n\n\t./gradlew clean build mockTest\n\t\nRunning integration tests can be done like so (requires existing jenkins instance):\n\n\t./gradlew clean build integTest \n\t\n# Additional Resources\n\n* [Jenkins REST API](http://wiki.jenkins-ci.org/display/JENKINS/Remote+access+API)\n* [Apache jclouds](https://jclouds.apache.org/start/)\n\n'