b'[![PHP Censor](http://ci.php-censor.info/build-status/image/2?branch=master&label=PHPCensor&style=flat-square)](http://ci.php-censor.info/build-status/view/2?branch=master)\n[![Travis CI](https://img.shields.io/travis/php-censor/php-censor/master.svg?label=TravisCI&style=flat-square)](https://travis-ci.org/php-censor/php-censor?branch=master)\n[![Codecov](https://img.shields.io/codecov/c/github/php-censor/php-censor.svg?label=Codecov&style=flat-square)](https://codecov.io/gh/php-censor/php-censor)\n[![Latest Version](https://img.shields.io/packagist/v/php-censor/php-censor.svg?label=Version&style=flat-square)](https://packagist.org/packages/php-censor/php-censor)\n[![Total downloads](https://img.shields.io/packagist/dt/php-censor/php-censor.svg?label=Downloads&style=flat-square)](https://packagist.org/packages/php-censor/php-censor)\n[![License](https://img.shields.io/packagist/l/php-censor/php-censor.svg?label=License&style=flat-square)](https://packagist.org/packages/php-censor/php-censor)\n   \n   \n<p align="center">\n    <img width="500" height="auto" src="docs/images/php-censor-black.png" alt="PHP Censor" />\n</p>\n   \n   \n**PHP Censor** is an open source, self-hosted, continuous integration server for PHP projects \n([PHPCI](https://www.phptesting.org) fork). [Official twitter @php_censor](https://twitter.com/php_censor).\n\nActual PHP Censor versions and release branches:\n\n| Version            | Branch            | Status                            | Minimal PHP Version |\n| :----------------- | :-------------    | :-------------------------------- | :------------------ |\n| `1.0`              | `release-1.0`     | Last stable version               | `5.6`               |\n| `1.1`              | `release-1.1`     | Current stable version            | `5.6`               |\n| `1.2`              | `master`          | Future stable minor version (WIP) | `5.6`               |\n| `2.0`              | `pre-release-2.0` | Future stable major version (WIP) | `7.1`               |\n\n[![Dashboard](docs/screenshots/dashboard.png)](docs/screenshots/dashboard.png)\n\nMore [screenshots](docs/en/screenshots.md).\n\n* [System requirements](#system-requirements)\n* [Features](#features)\n* [Changelog](#changelog)\n* [Roadmap](#roadmap)\n* [Installing](#installing)\n* [Installing via Docker](#installing-via-docker)\n* [Updating](#updating)\n* [Configuring project](#configuring-project)\n* [Migrations](#migrations)\n* [Tests](#tests)\n* [Documentation](#documentation)\n* [License](#license)\n\n## System requirements\n\n* Unix-like OS (**Windows isn\'t supported**);\n\n* PHP 5.6+ (with OpenSSL support and enabled functions: `exec()`, `shell_exec()` and `proc_open()`);\n\n* Web-server (Nginx or Apache2);\n\n* Database (MySQL/MariaDB or PostgreSQL);\n\n* Beanstalkd queue;\n\n## Features\n\n* Clone project from [GitHub](docs/en/sources/github.md), [Bitbucket](docs/en/sources/bitbucket.md) (Git/Hg), \n[GitLab](docs/en/sources/gitlab.md), [Git](docs/en/sources/git.md), Hg (Mercurial), SVN (Subversion) or from local \ndirectory;\n\n* Set up and tear down database tests for [PostgreSQL](docs/en/plugins/pgsql.md), [MySQL](docs/en/plugins/mysql.md) or \n[SQLite](docs/en/plugins/sqlite.md);\n\n* Install [Composer](docs/en/plugins/composer.md) dependencies;\n\n* Run tests for PHPUnit, Atoum, Behat, Codeception and PHPSpec;\n\n* Check code via Lint, PHPParallelLint, Pdepend, PHPCodeSniffer, PHPCpd, PHPCsFixer, PHPDocblockChecker, PHPLoc, \nPHPMessDetector, PHPTalLint and TechnicalDebt;\n\n* Run through any combination of the other [supported plugins](docs/en/README.md#plugins), including Campfire, \nCleanBuild, CopyBuild, Deployer, Env, Git, Grunt, Gulp, PackageBuild, Phar, Phing, Shell and Wipe;\n\n* Send notifications to Email, XMPP, Slack, IRC, Flowdock, HipChat and \n[Telegram](https://github.com/LEXASOFT/PHP-Censor-Telegram-Plugin);\n\n* Use your LDAP-server for authentication;\n\n## Changelog\n\n[Versions changelog](CHANGELOG.md).\n\n## Roadmap\n\nSee [milestones](https://github.com/php-censor/php-censor/milestones).\n\n## Installing\n\n* Go to the directory in which you want to install PHP Censor, for example: `/var/www`:\n\n```bash\ncd /var/www\n```\n\n* Create project by Composer:\n\n```bash\ncomposer create-project \\\n    php-censor/php-censor \\\n    php-censor.local \\\n    --keep-vcs\n```\n\nOr download [latest archive](https://github.com/php-censor/php-censor/releases/latest) from GitHub, unzip it and run \n`composer install`.\n\n* Create an empty database for your application (MySQL/MariaDB or PostgreSQL);\n\n* Install Beanstalkd Queue (Optional, if you are going to use a queue with Worker):\n\n```bash\n# For Debian-based\naptitude install beanstalkd\n```\n\n* Install PHP Censor itself:\n\n```bash\ncd ./php-censor.local\n\n# Interactive installation\n./bin/console php-censor:install\n\n# Non-interactive installation\n./bin/console php-censor:install \\\n    --url=\'http://php-censor.local\' \\\n    --db-type=pgsql \\\n    --db-host=localhost \\\n    --db-pgsql-sslmode=prefer \\\n    --db-name=php-censor \\\n    --db-user=php-censor \\\n    --db-password=php-censor \\\n    --db-port=default \\ # Value \'default\': 5432 for PostgreSQL and 3306 for MySQL\n    --admin-name=admin \\\n    --admin-password=admin \\\n    --admin-email=\'admin@php-censor.local\' \\\n    --queue-use=1 \\\n    --queue-host=localhost \\\n    --queue-port=11300 \\\n    --queue-name=php-censor\n\n# Non-interactive installation with prepared config.yml file\n./bin/console php-censor:install \\\n    --config-from-file=yes \\\n    --admin-name=admin \\\n    --admin-password=admin \\\n    --admin-email=\'admin@php-censor.local\'\n```\n\n* [Add a virtual host to your web server](docs/en/virtual_host.md), pointing to the `public` directory within your new\nPHP Censor directory. You\'ll need to set up rewrite rules to point all non-existent requests to PHP Censor;\n\n* [Set up the PHP Censor Worker](docs/en/workers/worker.md);\n\n## Installing via Docker\n\nIf you want to install PHP Censor as a Docker container, you can use \n[php-censor/docker-php-censor](https://github.com/php-censor/docker-php-censor) project.\n\n## Updating\n\n* Go to your PHP Censor directory (to `/var/www/php-censor.local` for example):\n\n    ```bash\n    cd /var/www/php-censor.local\n    ```\n\n* Pull the latest code from the repository by Git (If you want the latest `master` branch):\n\n    ```bash\n    git checkout master\n    git pull -r\n    ```\n\n    Or pull the latest version:\n\n    ```bash\n    git fetch\n    git checkout <version>\n    ```\n\n* Update the Composer dependencies: `composer install`\n\n* Update the database scheme:\n\n    ```bash\n    ./bin/console php-censor-migrations:migrate\n    ```\n\n* Restart Supervisord workers (If you use workers and Supervisord):\n\n    ```bash\n    sudo supervisorctl status\n    sudo supervisorctl restart <worker:worker_00>\n    ...\n    sudo supervisorctl restart <worker:worker_nn>\n    ```\n    \n    Or restart Systemd workers (If you use workers and Systemd):\n    \n    ```bash\n    sudo systemctl restart <worker@1.service>\n    ...\n    sudo systemctl restart <worker@n.service>\n    ```\n\n## Configuring project\n\nThere are several ways to set up the project:\n\n* Add project without any project config (Runs "zero-config" plugins, including: Composer, TechnicalDebt, PHPLoc, \nPHPCpd, PHPCodeSniffer, PHPMessDetector, PHPDocblockChecker, PHPParallelLint, PHPUnit and Codeception);\n\n* Similar to [Travis CI](https://travis-ci.org), to support PHP Censor in your project, you simply need to add a \n`.php-censor.yml` file to the root of your repository;\n\n* Add project config in PHP Censor project page (And it will cancel file config from project repository);\n\nThe project config should look something like this:\n\n```yml\nsetup:\n  composer:\n    action:    "install"\n    directory: "."\ntest:\n  php_unit:\n    config: "phpunit.xml"\n  php_mess_detector:\n    allow_failures: true\n  php_code_sniffer:\n    standard: "PSR2"\n  php_cpd:\n    allow_failures: true\ncomplete:\n  email:\n    default_mailto_address: admin@php-censor.local\n```\n\nMore details about [configuring project](docs/en/configuring_project.md).\n\n## Migrations\n\nRun to apply latest migrations:\n\n```bash\ncd /path/to/php-censor\n./bin/console php-censor-migrations:migrate\n```\n\nRun to create a new migration:\n\n```bash\ncd /path/to/php-censor\n./bin/console php-censor-migrations:create NewMigrationName\n```\n\n## Tests\n\n```bash\ncd /path/to/php-censor\n\n./vendor/bin/phpunit --configuration ./phpunit.xml.dist --coverage-html ./tests/runtime/coverage -vvv --colors=always\n```\n\nFor Phar plugin tests set \'phar.readonly\' setting to Off (0) in `php.ini` config. Otherwise the tests will be skipped.  \n\nFor database tests create an empty \'test_db\' database on \'localhost\' with user/password: `root/<empty>` \nfor MySQL and with user/password: `postgres/<empty>` for PostgreSQL (You can change default test user, password and \ndatabase name in `phpunit.xml[.dist]` config constants). If connection failed the tests will be skipped.\n\n## Documentation\n\n[Full PHP Censor documentation](docs/en/README.md).\n\n## License\n\nPHP Censor is open source software licensed under the [BSD-2-Clause license](LICENSE).\n'