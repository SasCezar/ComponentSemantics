b'# Concourse: the continuous thing-doer.\n\nConcourse is an automation system written in Go. It is most commonly used for\nCI/CD, and is built to scale to any kind of automation pipeline, from simple to\ncomplex.\n\n![booklit pipeline](screenshots/booklit-pipeline.png)\n\nConcourse is very opinionated about a few things: idempotency, immutability,\ndeclarative config, stateless workers, and reproducible builds.\n\n## Installation\n\nConcourse is distributed as a single `concourse` binary, available on the [Releases page](https://github.com/concourse/concourse/releases/latest).\n\nIf you want to just kick the tires, jump ahead to the [Quick Start](#quick-start).\n\nIn addition to the `concourse` binary, there are a few other supported formats.\nConsult their GitHub repos for more information:\n\n* [Docker image](https://github.com/concourse/concourse-docker)\n* [BOSH release](https://github.com/concourse/concourse-bosh-release)\n* [Kubernetes Helm chart](https://github.com/helm/charts/tree/master/stable/concourse)\n\n\n## Quick Start\n\n```sh\n$ wget https://concourse-ci.org/docker-compose.yml\n$ docker-compose up\nCreating docs_concourse-db_1 ... done\nCreating docs_concourse_1    ... done\n```\n\nConcourse will be running at [127.0.0.1:8080](http://127.0.0.1:8080). You can\nlog in with the username/password as `test`/`test`.\n\nNext, install `fly` by downloading it from the web UI and target your local\nConcourse as the `test` user:\n\n```sh\n$ fly -t ci login -c http://127.0.0.1:8080 -u test -p test\nlogging in to team \'main\'\n\ntarget saved\n```\n\n### Configuring a Pipeline\n\nThere is no GUI for configuring Concourse. Instead, pipelines are configured as\ndeclarative YAML files:\n\n```yaml\nresources:\n- name: booklit\n  type: git\n  source: {uri: "https://github.com/vito/booklit"}\n\njobs:\n- name: unit\n  plan:\n  - get: booklit\n    trigger: true\n  - task: test\n    file: booklit/ci/test.yml\n```\n\nMost operations are done via the accompanying `fly` CLI. If you\'ve got Concourse\n[installed](https://concourse-ci.org/install.html), try saving the above example\nas `booklit.yml`, [target your Concourse\ninstance](https://concourse-ci.org/fly.html#fly-login), and then run:\n\n```sh\nfly -t $target set-pipeline -p booklit -c booklit.yml\n```\n\nThese pipeline files are self-contained, maximizing portability from one\nConcourse instance to the next.\n\n\n### Learn More\n\n* The [Official Site](https://concourse-ci.org) for documentation,\n  reference material, and example pipelines (which no longer live in this repository).\n* The [Concourse Tutorial](https://concoursetutorial.com) by Stark & Wayne is\n  great for a guided introduction to all the core concepts.\n* See Concourse in action with our [production pipelines](https://ci.concourse-ci.org/)\n* Hang around in the [forums](https://discuss.concourse-ci.org) or in\n  [Discord](https://discord.gg/MeRxXKW).\n* See what we\'re working on on the [project board](https://github.com/orgs/concourse/projects). \n\n\n## Contributing\n\nOur user base is basically everyone that develops software (and wants it to\nwork).\n\nIt\'s a lot of work, and we need your help! If you\'re interested, check out our\n[contributing docs](CONTRIBUTING.md).\n'