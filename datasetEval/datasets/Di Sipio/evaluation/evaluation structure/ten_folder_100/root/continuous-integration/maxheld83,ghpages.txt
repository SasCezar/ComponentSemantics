b'# GitHub Action to Deploy Static Assets to GitHub Pages\n\n[![Actions Status](https://wdp9fww0r9.execute-api.us-west-2.amazonaws.com/production/badge/maxheld83/ghpages)](https://github.com/maxheld83/ghpages/actions)\n[![View Action](https://img.shields.io/badge/view-action-blue.svg)](https://github.com/marketplace/actions/github-pages-deploy)\n\n<img src="https://github.com/maxheld83/ghpages/blob/master/action-running.gif?raw=true" align="right" width=200/>\n\nThis action simply lets you deploy arbitrary folders of static content from your workflow\'s working directory (`/github/workspace`) to [GitHub pages](https://pages.github.com).\nThis works by having your action instance `git push` your chosen asset folder (`BUILD_DIR`) to the `gh-pages` branch of your GitHub repository for the `gh-pages` branch to be served.\nIf you are running this action inside an [organization or user repository](https://help.github.com/articles/user-organization-and-project-pages/) (named `username/username.github.io`) it will deploy to the `master` branch instead.\n\nRemember to add appropriate [filter action](https://github.com/actions/bin/tree/master/filter) as dependencies on this action to avoid deploying from all branches, as well as to avoid "infinite loops" where the deployment itself would trigger another run.\n\nRemember that you may also have to adjust your [repository settings](https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/).\n\nBecause this action deploys to separate, "deploy-only" branches, you can not use it if you want to deploy from a repo subdirectory such as `docs/`.\nIn those cases you really don\'t need a GitHub Action, because you would be committing the build artifacts yourself.\nFor details see the [GitHub Pages Documentation](https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/). \n\nThere are already great GitHub actions to use static site generators *and* then deploy to GitHub Pages (for [jekyll](https://github.com/helaili/jekyll-action), [jekyll](https://github.com/BryanSchuetz/jekyll-deploy-gh-pages), [zola](https://github.com/shalzz/zola-deploy-action) and surely many more to come).\nThis action isn\'t that, though I\'ve borrowed much of the git action from these works.\n\n**This action will not build anything, it just deploys.**\n\n\n## Secrets\n\n<img src="https://github.com/maxheld83/ghpages/blob/master/action-config.png?raw=true" align="right" width=200/>\n\nDeployment to GitHub pages happens by `git push`ing to the `gh-pages` (or `master`) branch.\nTo authorise this, the GitHub action needs a secret.\nFor now, somewhat confusingly, the `GITHUB_TOKEN` [available for every repo](https://developer.github.com/actions/creating-workflows/storing-secrets/) *does* suffice to push to `gh-pages`, but *does not* suffice to trigger a  page build on GitHub, or even propagate the content to the GitHub content-delivery network.\n\nYou therefore **have to [create a custom Personal Access Token (PAT)](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/)** much like you\'d do for external services (say, Travis). This token must be created with `repo` permissions in order to deploy to Github Pages.\nYou then have to paste this token into the GitHub UI as a secret under the name `GH_PAT` (repository settings/secrets) and call it in the action as in the below.\n\nI\'ve asked GitHub to streamline this process.\nThe discussion is documented [here](https://github.com/maxheld83/ghaction-ghpages/issues/1).\n\n\n## Environment Variables\n\nJust `BUILD_DIR`, the build directory relative to your repository root.\nYou can also pass `.` if you want to push your repository root.\n\n\n## Arguments\n\nNone.\n\n\n## Example Usage\n\n<img src="https://github.com/maxheld83/ghpages/blob/master/action-in-use.png?raw=true" align="right" width=200/>\n\n```\naction "Deploy to GitHub Pages" {\n  uses = "maxheld83/ghpages@v0.2.1"\n  env = {\n    BUILD_DIR = "public/"\n  }\n  secrets = ["GH_PAT"]\n}\n```\n'