b'<img width="255" alt="" src="https://github.com/lesovsky/pgcenter/raw/master/doc/images/pgcenter-logo.png" align="right">\n\n[![Web site](https://img.shields.io/badge/pgCenter-org-orange.svg)](https://pgcenter.org)\n[![GitHub release](https://img.shields.io/github/release/lesovsky/pgcenter.svg?style=flat)](https://github.com/lesovsky/pgcenter/releases/)\n[![Build Status](https://travis-ci.org/lesovsky/pgcenter.svg)](https://travis-ci.org/lesovsky/pgcenter)\n[![Go Report Card](https://goreportcard.com/badge/lesovsky/pgcenter)](https://goreportcard.com/report/lesovsky/pgcenter)\n\n---\npgCenter is a command-line admin tool for observing and troubleshooting Postgres.\n\n- [Main goal](#main-goal)\n- [Key features](#key-features)\n- [Supported statistics](#supported-statistics)\n  - [PostgreSQL statistics](#postgresql-statistics)\n  - [System statistics](#system-statistics)\n- [Install notes](#install-notes)\n- [Usage notes](#usage-notes)\n- [Known issues](#known-issues)\n- [Thanks](#thanks)\n\n---\n#### Main goal\nPostgres provides various activity statistics that include detailed information about its behaviour: connections, statements, database operations, replication, resources usage and more. General purpose of the statistics is to help DBAs to monitor and troubleshoot Postgres. However, these statistics provided in textual form retrieved from SQL functions and views, and Postgres doesn\'t provide any tools for working with them.\npgCenter\'s main goal is to help Postgres DBA manage statistics that the\xd1\x83 have in their databases and see all the necessary data in convenient format based on builtin stats views and functions.\n\n![](doc/images/pgcenter-demo.gif)\n\n#### Key features\n- Top-like interface that allows you to monitor stats changes as you go. See details [here](doc/pgcenter-top-readme.md).\n- Configuration management function  allows viewing and editing of current configuration files and reloading the service, if needed.\n- Logfiles functions allow you to quickly check Postgres logs without stopping statistics monitoring.\n- "Poor man\xe2\x80\x99s monitoring" allows you to collect Postgres statistics into files and build reports later on. See details [here](doc/pgcenter-record-readme.md).\n- Wait events profiler allows to see what wait events occur during queries execution. See details [here](doc/pgcenter-profile-readme.md).\n\n#### Supported statistics\nWhen troubleshooting Postgres it\'s always important to keep an eye not only on Postgres metrics, but also system metrics, since Postgres utilizes system resources, such as cpu, memory, storage and network when working. pgCenter allows you to see both kinds of statistics related to Postgres and your system.\n\n##### PostgreSQL statistics\npgCenter supports majority of statistics views available in Postgres, and at the same time, uses additional SQL functions applied to statistics to show these in a more convenient way. The following stats are available:\n\n- current summary activity - a compilation/selection  of metrics from different sources - postgres uptime, version, recovery status, number of clients grouped by their states, number of (auto)vacuums, statements per second, age of the longest transaction and the longest vacuum;\n- [pg_stat_activity](https://www.postgresql.org/docs/current/static/monitoring-stats.html#PG-STAT-ACTIVITY-VIEW) - information related to the current activity of connected clients and Postgres background processes.\n- [pg_stat_database](https://www.postgresql.org/docs/current/static/monitoring-stats.html#PG-STAT-DATABASE-VIEW) - database-wide statistics, such as number of commits/rollbacks, handled tuples, deadlocks, temporary files, etc.\n- [pg_stat_replication](https://www.postgresql.org/docs/current/static/monitoring-stats.html#PG-STAT-REPLICATION-VIEW) - statistics on replication, connected standby hosts and their activity.\n- [pg_stat_user_tables](https://www.postgresql.org/docs/current/static/monitoring-stats.html#PG-STAT-ALL-TABLES-VIEW), [pg_statio_user_tables](https://www.postgresql.org/docs/current/static/monitoring-stats.html#PG-STATIO-ALL-TABLES-VIEW) - statistics on accesses (including IO) to tables.\n- [pg_stat_user_indexes](https://www.postgresql.org/docs/current/static/monitoring-stats.html#PG-STAT-ALL-INDEXES-VIEW), [pg_statio_user_indexes](https://www.postgresql.org/docs/current/static/monitoring-stats.html#PG-STATIO-ALL-INDEXES-VIEW) - statistics on accesses (including IO) to indexes.\n- [pg_stat_user_functions](https://www.postgresql.org/docs/current/static/monitoring-stats.html#PG-STAT-USER-FUNCTIONS-VIEW) - statistics on execution of functions.\n- [pg_stat_statements](https://www.postgresql.org/docs/current/static/pgstatstatements.html) - statistics on SQL statements executed including time and resources usage.\n- statistics on tables sizes based on `pg_relation_size()` and `pg_total_relation_size()` functions;\n- [pg_stat_progress_vacuum](https://www.postgresql.org/docs/current/progress-reporting.html#VACUUM-PROGRESS-REPORTING) - information about progress of (auto)vacuums status.\n- [pg_stat_progress_cluster](https://www.postgresql.org/docs/current/progress-reporting.html#CLUSTER-PROGRESS-REPORTING) - information about progress of CLUSTER and VACUUM FULL operations.\n- [pg_stat_progress_create_index](https://www.postgresql.org/docs/current/progress-reporting.html#CREATE-INDEX-PROGRESS-REPORTING) - information about progress of CREATE INDEX and REINDEX operations.\n\n##### System statistics\n`pgcenter top` also provides system usage information based on statistics from `procfs` filesystem:\n\n- load average and CPU usage time (user, system, nice, idle, iowait, software and hardware interrupts, steal);\n- memory and swap usage, amount of cached and dirty memory, writeback activity;\n- storage devices statistics: iops, throughput, latencies, average queue and requests size, devices utilization;\n- network interfaces statistics: throughput in bytes and packets, different kind of errors, saturation and utilization.\n\nIn case of connecting to remote Postgres there is possibility to use additional SQL functions used for retrieving `/proc` statistics from remote host. For more information see details [here](doc/pgcenter-config-readme.md).\n\n#### Install notes\npgCenter is written on Go language and distributed as a single precompiled binary file. Download it from [releases](https://github.com/lesovsky/pgcenter/releases), unpack and it\'s ready to use.\n\nAdditional information and usage examples available [here](doc/examples.md).\n\n#### Usage notes\n- pgCenter has been developed to work on Linux and hasn\'t been tested on other OS (operating systems), therefore, it is not recommended to use it on alternative systems because it will not operate properly.\n- pgCenter can also be run using Docker.\n- pgCenter supports a wide range of PostgreSQL versions, despite of difference in statistics between each version. If pgCenter is unable to read a particular stat, it will show a descriptive error message.\n- ideally, pgCenter requires `SUPERUSER` database privileges, or at least privileges that will allow you to view statistics, read settings, logfiles and send signals to other backends. Roles with such privileges (except reading logs) have been introduced in Postgres 10, see details [here](https://www.postgresql.org/docs/current/static/default-roles.html).\n- it is recommended to run pgCenter on the same host where Postgres is running. This is because for Postgres pgCenter is just a simple client application and it may have the same problems as other applications that work with Postgres, such as network-related problems, slow responses, etc.\n- it is possible to run pgCenter on one host and connect to Postgres which runs on another host, but some functions may not work - this fully applies to `pgcenter top` command.\n- pgCenter also supports Amazon RDS for PostgreSQL, but as mentioned above, some functions will not work and also system stats will not be available, because of PostgreSQL RDS instances don\'t support untrusted procedural languages due to security reasons.\n\n#### Known issues\npgCenter is beta software, thus in some circumstances, segfaults and panics may occur. When panics occur please do let me know - this helps me in making necessary changes and improve this software. To make sure that I can reproduce an issue you\xe2\x80\x99ve been having and can address it accordingly please follow these steps:\n\n- build pgCenter from the master branch and try to reproduce the bug/crash. \n- create an [issue](https://github.com/lesovsky/pgcenter/issues) and include clear instructions on how the bug could be reproduced.\n- also, please list the information about your operating system, its release version and version of Postgres.\n\n#### Thanks\n- Sebastien Godard for [sysstat](https://github.com/sysstat/sysstat).\n- Brendan Gregg and Tim Cook for [nicstat](http://sourceforge.net/projects/nicstat/).\n- Pavel St\xc4\x9bhule for his [articles](http://postgres.cz/wiki/PostgreSQL).\n- Pavel Alexeev, package maintainer on EPEL testing repo (Fedora/Centos).\n- Manuel R\xc3\xbcger, ebuild maintainer on [mrueg overlay](https://gpo.zugaina.org/dev-db/pgcenter) (Gentoo Linux).\n- Anton Novojilov, package maintainer on RHEL/CentOS Linux (Essential Kaos repo).\n- Nikolay A. Fetisov, package maintainer at [Sisyphus](http://www.sisyphus.ru/ru/srpm/pgcenter) ALT Linux.\n- Devrim G\xc3\xbcnd\xc3\xbcz, package maintainer on official [PostgreSQL yum repo](https://yum.postgresql.org/).\n- Thank you for using pgCenter!\n'