b'[![GitHub version](https://badge.fury.io/gh/ritz078%2Fng-embed.svg)](https://badge.fury.io/gh/ritz078%2Fng-embed)\n[![NPM version](https://badge.fury.io/js/ng-embed.svg)](https://npmjs.org/package/ng-embed)\n[![Bower version](https://badge.fury.io/bo/ng-embed.svg)](http://bower.io/search/?q=ng-embed)\n[![Dependency Status](https://david-dm.org/ritz078/ng-embed/status.svg?theme=shields.io)](https://david-dm.org/ritz078/ng-embed)\n[![devDependency Status](https://david-dm.org/ritz078/ng-embed/dev-status.svg?theme=shields.io)](https://david-dm.org/ritz078/ng-embed#info=devDependencies)\n\n[![Chat](http://img.shields.io/badge/gitter.im-ritz078/ngEmbed-blue.svg)](https://gitter.im/ritz078/ng-embed)\n[![Issues](http://img.shields.io/github/issues/ritz078/ng-embed.svg)](https://github.com/ritz078/ng-embed/issues)\n[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n\n\n# ngEmbed\n\nAn AngularJS filter/directive for  converting text into emoticons, embedding videos (youtube/vimeo/mp4,ogg), audio, pdf, highlighting code syntax and embedding almost every service in an ordinary text string .\n\nThe demo examples are given [here](http://riteshkr.com/ng-embed)\n\n**PS : The jquery version of this module is [embed-js](http://github.com/ritz078/embed-js).**\n\n\n## Contents\n\n* [Features](#features)\n* [Dependencies](#dependencies)\n* [Installation](#installation)\n* [CDN](#cdn)\n* [Getting Started](#getting-started)\n* [Filter Usage](#filter-usage)\n* [Directive Usage](#directive-usage)\n\t- [Options](#options)\n* [Default Template](#default-template)\n* [Template Variables](#template-variables)\n* [Releases](#releases)\n* [Contributing](#contributing)\n\n## Features\n\n* Converts emoticon text codes into emoticons :smile: , :heart:\n* Finds links in text input and turns them into html links.\n* Youtube and Vimeo video embedding with video details fetched from the api.\n* HTML5 player supported media embedding (mp3,mp4,ogg)\n* PDF viewing with preview and then the actual pdf in a frame.\n* Inline Code Syntax highlighting (uses highlight.js)\n* Twitter tweet embedding supported\n* CodePen, jsBin, jsFiddle, Ideone, plunker and Github gist embed supported\n* Soundcloud and Spotify support\n* Twitch TV, dotSub, Dailymotion, TED, LiveLeak and UStream support.\n\n\n## Dependencies\n\n+ [AngularJs](https://angularjs.org/) 1.2 or above\n+ [angular-sanitize](https://angularjs.org/) 1.2 or above\n+ [highlight.js](https://highlightjs.org/) (Optional if code highlighting required)\n+ [Twitter widget js](https://platform.twitter.com/widgets.js) (if twitter embedding required)\n\n## Installation\n\nInstall through [bower](http://bower.io/search/?q=ng-embed)\n```html\nbower install --save ng-embed\n```\nInstall through [npm](https://www.npmjs.org/package/ng-embed)\n```html\nnpm install --save ng-embed\n```\n\n## CDN\n\n* [cdnjs](https://cdnjs.com/libraries/ng-embed)\n\n## Getting Started\n\nLoad [ng-embed.min.css] stylesheet file\n```html\n <link rel="stylesheet" href="path/to/ng-embed.min.css"/>\n```\n\nThen load [angular.min.js] and [angular-sanitize.min.js] dependencies before loading [ng-embed.min.js]\n```html\n<script src="path/to/angular.min.js"></script>\n<script src="path/to/angular-sanitize.min.js"></script>\n\n<!--==== Optional =====-->\n<script src="path/to/highlight.min.js"></script>\n<script src="https://platform.twitter.com/widgets.js"></script>\n<!--===================-->\n\n<script src="path/to/ng-embed.min.js"></script>\n```\n\nLoad \'ngEmbed\' as a dependency\n```javascript\nangular.module(\'yourAppname\', [\'ngEmbed\'])\n```\n\n## Filter Use\n\nYou can use the filter for basic use. Its features are limited to converting text into [emojis](http://www.emoji-cheat-sheet.com/), font smileys and HTML Links.\n\n```html\n<div ng-bind-html="variable | embed"></div>\n```\n\nor with custom options\n\n```html\n<div ng-bind-html="variable | embed:customOptions"></div>\n\n<div ng-bind-html="variable | embed:{sanitizeHtml:false,linkTarget:\'_blank\'}"></div>\n```\n\n**Options**\n\nDefaults:\n\n```javascript\nvar embed = {\n\tfontSmiley  :true,    // toggle converting ascii smileys into font smileys\n\tsanitizeHtml: true,   // toggle converting html code into text\n\temoji       :true,    // toggle converting emojis short names into images\n\tlink        :true,    // toggle converting urls into anchor tags\n    linkTarget  :\'_self\'  //_blank|_self|_parent|_top|framename|cordova\n }\n```\n\n## Directive Usage\n\nThe directive supports many features in additions to the features supported by the filter and is fully customizable.\n\n**Directive**\n```html\n<ng-embed \n embed-data="text"\n embed-template-url="template.html"\n embed-options="options"\n ></ng-embed>\n```\n\nAttribute|Description\n---------|-----------\n**embed-data**|The scope variable that contains the text string to be processed\n**embed-options**|The scope variable that contains the options object (mandatory)\n**embed-template-url**|User defined template for the processed text\n\n### Options\n\n```javascript\nangular.module(\'yourAppName\',[\'ngEmbed\'])\n\n.controller(\'yourControllerName\',[\'$scope\',function($scope){\n\n// Default options\n\t$scope.options = {\n\t  watchEmbedData   : false,     // watch embed data and render on change \n\t  \n\t  sanitizeHtml     : true,      // convert html to text\n\t  \n\t  fontSmiley       : true,      // convert ascii smileys into font smileys\n\t  emoji            : true,      // convert emojis short names into images\n\t  \n\t  link             : true,      // convert links into anchor tags\n\t  linkTarget       : \'_self\',   //_blank|_self|_parent|_top|framename\n\t  \n\t  pdf              : {\n\t\tembed: true                 // show pdf viewer.\n\t  },\n\t  \n\t  image            : {\n\t\tembed: false                // toggle embedding image after link, supports gif|jpg|jpeg|tiff|png|svg|webp.\n\t  },\n\t  \n\t  audio            : {\n\t\tembed: true                 // toggle embedding audio player, supports wav|mp3|ogg\n\t  },\n\t  \n\t  basicVideo       : false,     // embed video player, supports ogv|webm|mp4\n\t  gdevAuth         :\'xxxxxxxx\', // Google developer auth key for YouTube data api\n\t  video            : {\n\t\t  embed           : false,    // embed YouTube/Vimeo videos\n\t\t  width           : null,     // width of embedded player\n\t\t  height          : null,     // height of embedded player\n\t\t  ytTheme         : \'dark\',   // YouTube player theme (light/dark)\n\t\t  details         : false,    // display video details (like title, description etc.)\n\t\t  thumbnailQuality: \'medium\', // quality of the thumbnail low|medium|high\n\t\t  autoPlay        : true     // autoplay embedded videos\n\t  },\n\t  twitchtvEmbed    : true,\n\t  dailymotionEmbed : true,\n\t  tedEmbed         : true,\n\t  dotsubEmbed      : true,\n\t  liveleakEmbed    : true,\n\t  ustreamEmbed    : true,\n\t  \n\t  soundCloudEmbed  : true,\n\t  soundCloudOptions: {\n\t\t  height      : 160,\n\t\t  themeColor: \'f50000\',\n\t\t  autoPlay    : false,\n\t\t  hideRelated : false,\n\t\t  showComments: true,\n\t\t  showUser    : true,\n\t\t  showReposts : false,\n\t\t  visual      : false,         // Show/hide the big preview image\n\t\t  download    : false          // Show/Hide download buttons\n\t  },\n\t  spotifyEmbed     : true,\n\t  \n\t  tweetEmbed       : true,        // toggle embedding tweets\n\t  tweetOptions     : {\n\t\t\t// The maximum width of a rendered Tweet in whole pixels. Must be between 220 and 550 inclusive.\n\t\t\tmaxWidth  : 550,\n\t\t\t// Toggle expanding links in Tweets to photo, video, or link previews.\n\t\t\thideMedia : false,\n\t\t\t// When set to true or 1 a collapsed version of the previous Tweet in a conversation thread\n\t\t\t// will not be displayed when the requested Tweet is in reply to another Tweet.\n\t\t\thideThread: false,\n\t\t\t// Specifies whether the embedded Tweet should be floated left, right, or center in\n\t\t\t// the page relative to the parent element.Valid values are left, right, center, and none.\n\t\t\t// Defaults to none, meaning no alignment styles are specified for the Tweet.\n\t\t\talign     : \'none\',\n\t\t\t// Request returned HTML and a rendered Tweet in the specified.\n\t\t\t// Supported Languages listed here (https://dev.twitter.com/web/overview/languages)\n\t\t\tlang      : \'en\'\n\t\t},\n\t  \n\t  code             : {\n\t\thighlight  : true,        // highlight code written in 100+ languages supported by highlight\n\t\t\t\t\t\t\t\t  // requires highlight.js (https://highlightjs.org/) as dependency.\n\t\tlineNumbers: false        // display line numbers\n\t  },\n\t  codepenEmbed     : true,\n\t  codepenHeight    : 300,\n\t  jsfiddleEmbed    : true,\n\t  jsfiddleHeight   : 300,\n\t  jsbinEmbed       : true,\n\t  jsbinHeight      : 300,\n\t  plunkerEmbed     : true,\n\t  githubgistEmbed  : true,\n\t  ideoneEmbed      : true,\n\t  ideoneHeight     : 300\n\t};\n\t\n  }]);\n```\n\n## Default Template\n```html\n<!--====== Main text with emoticons and link ============-->\n\n<div ng-bind-html="neText"></div>\n\n<!--==========Video Embedding code (Youtube and vimeo)============-->\n\n<div class="ne-video" ng-if="video.host" class="fade">\n<div class="ne-video-preview" ng-hide="nePlayVideo">\n  <div class="ne-video-thumb" ng-click="nePlayVideo=!nePlayVideo">\n    <img ng-src="{{video.thumbnail}}" alt=""/>\n    <i class="fa fa-play-circle-o"></i>\n  </div>\n<div class="ne-video-detail">\n<div class="ne-video-title">\n  <a ng-href="{{video.url}}">{{video.title}}</a>\n</div>\n<div class="ne-video-desc">\n  {{video.description}}\n</div>\n<div class="ne-video-stats">\n  <span><i class="fa fa-eye"></i> {{video.views}}</span>\n  <span><i class="fa fa-heart"></i> {{video.likes}}</span>\n</div>\n</div>\n</div>\n<div class="ne-video-player" ng-if="nePlayVideo">\n  <iframe ng-src="{{video.embedSrc}}" frameBorder="0" width="{{video.width}}" height="{{video.height}}" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\n</div>\n</div>\n\n<!--=====video player for mp4 and other html5 player supported videos==-->\n\n<div class="ne-video" ng-if="video.basic">\n<div class="ne-video-player">\n  <div class="player">\n    <video ng-src="{{video.basic}}" controls></video>\n  </div>\n</div>\n</div>\n\n<!--====== image preview code (gif|jpg|jpeg|tiff|png|svg|webp) =======-->\n\n<div ng-init="neImageLong=false" ng-class="{false:\'ne-image\', true:\'ne-image ne-image-long\'}[neImageLong]"\nng-if="image.url">\n<div class="ne-image-wrapper">\n  <img ng-src="{{image.url}}" ng-click="neImageLong=!neImageLong" alt=""/>\n</div>\n</div>\n<div class="ne-pdf" ng-if="pdf.url">\n<div class="ne-pdf-preview" ng-hide="neShowPdf">\n  <div class="ne-pdf-icon">\n    <i class="fa fa-file-pdf-o"></i>\n  </div>\n  <div class="ne-pdf-detail" >\n  <div class="ne-pdf-title">\n    <a href="">{{pdf.url}}</a>\n  </div>\n  <div class="ne-pdf-view">\n    <button><i class="fa fa-download"></i> <a ng-href="{{pdf.url}}" target="_blank">Download</a></button>\n    <button ng-click="neShowPdf=!neShowPdf"><i class="fa fa-eye"></i> View PDF</button>\n  </div>\n</div>\n</div>\n\n<!--====== pdf viewer =========-->\n\n<div class="ne-pdf-viewer" ng-if="neShowPdf" ng-show="neShowPdf">\n  <iframe ng-src="{{pdf.url}}" frameBorder="0"></iframe>\n</div>\n</div>\n\n<!--===== audio player ===========-->\n\n<div class="ne-audio" ng-if="audio.url">\n<audio ng-src="{{audio.url}}" controls></audio>\n</div>\n\n<div ng-if="tweets" ng-repeat="tweet in tweets">\n<div ng-bind-html="tweet"></div>\n</div>\n<div ng-if="videoServices" class="ne-video" ng-repeat="v in videoServices">\n<div class="ne-video-player">\n  <div class="player">\n    <div ng-bind-html="v"></div>\n  </div>\n</div>\n</div>\n<div ng-if="audioServices" class="ne-audio" ng-repeat="a in audioServices">\n<div ng-bind-html="a"></div>\n</div>\n<div ng-if="codeServices" class="ne-embed" ng-repeat="c in codeServices">\n<div ng-bind-html="c"></div>\n</div>\n<div ng-if="gist" class="ne-gist" ng-repeat="g in gist">\n<ne-gist id="{{g}}"></ne-gist>\n</div>\n```\n\n  Change the styling of the default template by styling the classes or provide a custom template. The default template is provided as an example.\n\n  There are certain variables that are available for the template. Its structure is given below.\n\n### Template Variables\n\nThese variable can be used while you are creating your custom template.\n\n  ```javascript\nvar video={\n\t  host            :String,   // youtube/vimeo\n\t  title           :String,   // Title of the video\n\t  thumbnail       :String,   // Url of the video thumbnail\n\t  description     :String,   // Description of the video truncating after 250 characters replacing linebreak (especially for vimeo)\n\t  rawDescription  :String,   // Description of the video as sent by the server\n\t  views           :Number,   // Number of video views\n\t  likes           :Number,   // No. of likes\n\t  uploader        :String    // username of video uploader\n\t  uploaderPage    :String    // url of uploader\'s page\n\t  uploadDate      :Date,     // Date of video upload\n\t  url             :String,   // video url\n\t  embedSrc        :String,   // video embed url\n\t  width           :Number,\n\t  height          :Number    // dimensions of the embedded video\n}\n\nvar image \t={url:String}\n\nvar audio \t={url:String}\n\nvar pdf\t\t={url:String}\n\nvar codeServices    :Array        // array of embed code of links of jsbin, jsfiddle, ideone and codepen\n\nvar audioServices   :Array        //array of embed code of spotify and soundcloud\n\nvar videoServices   :Array        // Array of embed code of dailymotion, ted, liveleak, dotsub and twitch tv\n\nvar gist            :Array        // Array of all gist ids.\n```\n\n## Examples\n\nThe examples are given [here](http://riteshkr.com/ng-embed)\n\n## Releases\n\nOlder releases are listed in [RELEASES.md](RELEASES.md)\n\n## Contributing\n\n* If you are interested in contributing to this project, you are most welcome.\n* Start by filing an [issue](https://github.com/ritz078/ngEmbed/issues) concerning whatever you\xe2\x80\x99d like to see changed.\n* In case of larger changes, get the issue allotted\n* In case of bugfixes or very minor additions, feel free to file a pull request on the master # branch.\n* Please run the default grunt-task before filing any pull requests.\n\n## License\n\nngEmbed &copy; 2014-2017+ Ritesh Kumar. <br>\nReleased under the [MIT] License.<br>\nAuthored and maintained by [Ritesh Kumar](https://github.com/ritz078) with help from [contributors](https://github.com/ritz078/ng-embed/contributors).'