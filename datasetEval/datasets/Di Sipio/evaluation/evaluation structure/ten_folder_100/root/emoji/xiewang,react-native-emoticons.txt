b"# React Native Emoticons\nreact native emoticons component, including emoji\n\n![emoticons](docs/emoticons.gif)\n\n### latest screenshot sample\n![emoticons](docs/sample2.png )\n\n<!--![Markdown](http://i2.muimg.com/1949/cda818de0596cd04.gif)-->\n## Install\n\n```js\nnpm install react-native-emoticons\n```\n\n## Usage\n\n### UI Component\n\n- step 1\n\n\tImport the component package.\n\t\n\t```js\n\timport Emoticons from 'react-native-emoticons';\n\t```\n- step 2\n\n\tWrite the component code in the proper place of your page render.\n\t\n\t```js\n\t<Emoticons\n\t\t onEmoticonPress={this._onEmoticonPress.bind(this)}\n\t\t onBackspacePress={this._onBackspacePress.bind(this)}\n\t\t show={this.state.showEmoticons}\n\t\t concise={true}\n\t\t showHistoryBar={true}\n\t\t showPlusBar={true}\n     />\n\t```\n\t> **Tip:**  The attribute `onEmoticonPress ` can get the emoticos results like `{code:'\xf0\x9f\x98\x81', name: 'GRIMACING FACE'}`. The attribute `show ` will control that if the component is visible.  The attribute `onBackspacePress ` will add a function for backspace button. \n\n### props\n\n| Prop | Type | Description | Required | Default |\n|---|---|---|---|---|\n|**`onEmoticonPress `**|`Function `| callback function when the emoticons is pressed |`Yes`|None|\n|**`onBackspacePress `**|`Function `| callback function when the backspace button is pressed |`YES`|None|\n|**`show `**|`Bool `| show the component |`YES`| false |\n|**`concise `**|`Bool `| concise mod with less emoji |`No`| true |\n|**`showHistoryBar `**|`Bool `| enable history function |`No`| true |\n|**`showPlusBar `**|`Bool `| enable more emoticons function(is on developing, if you have interesting on this, welcome pull request.)|`No`| true |\n|**`asyncRender `**|`Bool `| async render |`No`| false |\n\n### API\n\nImport\n\n```js\nimport * as emoticons from 'react-native-emoticons';\n```\n\n1. stringify\n\t\n\t```js\n\t//Most database can't restore the emoji string\xf0\x9f\x98\xa4,so we map \n\t//them to common string.\n\t\n\tconst string = emoticons.stringify('This is source emoji \xf0\x9f\x98\x81');\n\tconsole.log(string);\n\t```\n\t```js\n\t//output\n\t'This is source emoji [GRIMACING FACE]'\n\t```\n\t\n2. parse\n\n\t```js\n\t//If we want to show the emoji(fetch from database) in view page\n\t//we need parse the string\n\t\n\tconst emoji = emoticons.parse('This is source emoji [GRIMACING FACE]');\n\tconsole.log(emoji);\n\t```\n\t```js\n\t//output\n\t'This is source emoji \xf0\x9f\x98\x81'\n\t```\n\n3. splitter\n\n\t```js\n\t//this api is for backspace function\n\tconst emoji = emoticons.splitter('emoji\xf0\x9f\x98\x81');\n\tconsole.log(emoji);\n\t```\n\t```js\n\t//output\n\t['e','m','o','j','i','\xf0\x9f\x98\x81']\n\t```\n\n\n## Further\n\t\n###\tSupport custom emoticons like `weixin`\n"