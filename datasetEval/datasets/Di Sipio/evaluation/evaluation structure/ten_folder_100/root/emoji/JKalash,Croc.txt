b'<img src="https://cdn.rawgit.com/jkalash/croc/4dd2f48/Resources/Croc.svg" width="370"/>\n\n**Croc** is a library for parsing emojis on iOS. It provides a simple and lightweight interface for detecting, generating, categorizing and managing emoji characters, making emoji-powered features an easy task for developers. \n\n[![Build Status](https://travis-ci.org/JKalash/Croc.svg?branch=master)](https://travis-ci.org/JKalash/Croc)\n[![CocoaPods Compatible](https://img.shields.io/cocoapods/v/Croc.svg)](https://img.shields.io/cocoapods/v/Croc.svg)\n[![CocoaPods](https://img.shields.io/cocoapods/dt/Croc.svg)](https://img.shields.io/cocoapods/dt/Croc.svg)\n[![Carthage Compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)\n[![Platform](https://img.shields.io/cocoapods/p/Croc.svg?style=flat)](https://jkalash.github.io/)\n[![License](https://img.shields.io/cocoapods/l/Croc.svg?style=flat)](http://cocoapods.org/pods/Croc)\n[![Swift-4.0](http://img.shields.io/badge/Swift-4.1%2B-orange.svg)]()\n[![Codecov](https://codecov.io/github/jkalash/croc/coverage.svg?branch=master)](https://codecov.io/github/jkalash/croc)\n[![Donate](https://img.shields.io/badge/Donate-PayPal-blue.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=MHHC3G7U6UHE2)\n\n## Usage\n\n### Checking for emojis\n\n![checking emojis](https://github.com/jkalash/croc/raw/master/Resources/checking_emojis.png)\n\n### Querying for emojis\n\n![querying emojis](https://github.com/jkalash/croc/raw/master/Resources/querying_emojis.png)\n\n## Installation\n\n### CocoaPods\n\n[CocoaPods](http://cocoapods.org) is a dependency manager for Cocoa projects. You can install it with the following command:\n\n```bash\n$ gem install cocoapods\n```\n\n> CocoaPods 1.1+ is required to build Croc\n\nTo integrate Croc into your Xcode project using CocoaPods, specify it in your `Podfile`:\n\n```ruby\nsource \'https://github.com/CocoaPods/Specs.git\'\nplatform :ios, \'10.0\'\nuse_frameworks!\n\ntarget \'<Your Target Name>\' do\n    pod \'Croc\'\nend\n```\n\nThen, run the following command:\n\n```bash\n$ pod install\n```\n\n### Carthage\n\n[Carthage](https://github.com/Carthage/Carthage) is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks.\n\nYou can install Carthage with [Homebrew](http://brew.sh/) using the following command:\n\n```bash\n$ brew update\n$ brew install carthage\n```\n\nTo integrate Croc into your Xcode project using Carthage, specify it in your `Cartfile`:\n\n```ogdl\ngithub "JKalash/Croc"\n```\n\nRun `carthage update` to build the framework and drag the built `Croc.framework` into your Xcode project.\n\n### Swift Package Manager\n\nThe [Swift Package Manager](https://swift.org/package-manager/) is a tool for automating the distribution of Swift code and is integrated into the `swift` compiler. It is in early development, but Croc does support its use on supported platforms. \n\nOnce you have your Swift package set up, adding Croc as a dependency is as easy as adding it to the `dependencies` value of your `Package.swift`.\n\n#### Swift 3\n\n```swift\ndependencies: [\n    .Package(url: "https://github.com/JKalash/Croc.git", majorVersion: 0)\n]\n```\n\n#### Swift 4\n\n```swift\ndependencies: [\n    .package(url: "https://github.com/JKalash/Croc.git", from: "0.0.0")\n]\n```\n\n### Manually\n\nIf you prefer not to use any of the aforementioned dependency managers, you can integrate Croc into your project manually.\n\n#### Embedded Framework\n\n- Open up Terminal, `cd` into your top-level project directory, and run the following command "if" your project is not initialized as a git repository:\n\n  ```bash\n  $ git init\n  ```\n\n- Add Croc as a git [submodule](http://git-scm.com/docs/git-submodule) by running the following command:\n\n  ```bash\n  $ git submodule add https://github.com/JKalash/Croc.git\n  ```\n\n- Open the new `Croc` folder, and drag the `Croc.xcodeproj` into the Project Navigator of your application\'s Xcode project.\n\n    > It should appear nested underneath your application\'s blue project icon. Whether it is above or below all the other Xcode groups does not matter.\n\n- Select the `Croc.xcodeproj` in the Project Navigator and verify the deployment target matches that of your application target.\n- Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the "Targets" heading in the sidebar.\n- In the tab bar at the top of that window, open the "General" panel.\n- Click on the `+` button under the "Embedded Binaries" section.\n- You will see two different `Croc.xcodeproj` folders each with two different versions of the `Croc.framework` nested inside a `Products` folder.\n\n    > It does not matter which `Products` folder you choose from, but it does matter whether you choose the top or bottom `Croc.framework`.\n\n- Select the top `Croc.framework` for iOS and the bottom one for OS X.\n\n    > You can verify which one you selected by inspecting the build log for your project. The build target for `Croc` will be listed as either `CrociOS`, `CrocOSX`, `CrocTVOS` or `CrocWatchOS`.\n\n- And that\'s it!\n\n  > The `Croc.framework` is automagically added as a target dependency, linked framework and embedded framework in a copy files build phase which is all you need to build on the simulator and a device.\n\n## Requirements\n\n- iOS 8.0+ / macOS 10.9+ / tvOS 9.0+ / watchOS 2.0+\n- Xcode 8.3+\n- Swift 3.1+\n\n## Author\n\nJoseph Kalash, josephkalash@gmail.com\n\n## Donation\nIf this project helps you reduce time to develop, you can give me a cup of coffee :) \n\n[![forthebadge](https://forthebadge.com/images/badges/built-with-love.svg)](https://monzo.me/josephkalash)\n\n## License\n\nCroc is released under the MIT license. [See LICENSE](https://github.com/JKalash/Croc/blob/master/LICENSE) for details.\n'