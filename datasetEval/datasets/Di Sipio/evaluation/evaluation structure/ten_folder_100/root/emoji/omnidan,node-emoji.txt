b'# node-emoji\n\n[![NPM version (1.0.3)](https://img.shields.io/npm/v/node-emoji.svg?style=flat-square)](https://www.npmjs.com/package/node-emoji) [![NPM Downloads](https://img.shields.io/npm/dm/node-emoji.svg?style=flat-square)](https://www.npmjs.com/package/node-emoji) [![Build Status](https://img.shields.io/travis/omnidan/node-emoji/master.svg?style=flat-square)](https://travis-ci.org/omnidan/node-emoji) [![Dependencies](https://img.shields.io/david/omnidan/node-emoji.svg?style=flat-square)](https://david-dm.org/omnidan/node-emoji) [![https://paypal.me/DanielBugl/9](https://img.shields.io/badge/donate-paypal-yellow.svg?style=flat-square)](https://paypal.me/DanielBugl/9)\n\n_simple emoji support for node.js projects_\n\n![node-emoji example](https://i.imgur.com/yIo5Uux.png)\n\n**Help wanted:** We are looking for volunteers to maintain this project, if you are interested, feel free to contact me at [me@omnidan.net](mailto:me@omnidan.net)\n\n## Installation\nTo install `node-emoji`, you need [node.js](http://nodejs.org/) and [npm](https://github.com/npm/npm#super-easy-install). :rocket:\n\nOnce you have that set-up, just run `npm install --save node-emoji` in your project directory. :ship:\n\nYou\'re now ready to use emoji in your node projects! Awesome! :metal:\n\n## Usage\n```javascript\nvar emoji = require(\'node-emoji\')\nemoji.get(\'coffee\') // returns the emoji code for coffee (displays emoji on terminals that support it)\nemoji.which(emoji.get(\'coffee\')) // returns the string "coffee"\nemoji.get(\':fast_forward:\') // `.get` also supports github flavored markdown emoji (http://www.emoji-cheat-sheet.com/)\nemoji.emojify(\'I :heart: :coffee:!\') // replaces all :emoji: with the actual emoji, in this case: returns "I \xe2\x9d\xa4\xef\xb8\x8f \xe2\x98\x95\xef\xb8\x8f!"\nemoji.random() // returns a random emoji + key, e.g. `{ emoji: \'\xe2\x9d\xa4\xef\xb8\x8f\', key: \'heart\' }`\nemoji.search(\'cof\') // returns an array of objects with matching emoji\'s. `[{ emoji: \'\xe2\x98\x95\xef\xb8\x8f\', key: \'coffee\' }, { emoji: \xe2\x9a\xb0\', key: \'coffin\'}]`\nemoji.unemojify(\'I \xe2\x9d\xa4\xef\xb8\x8f \xf0\x9f\x8d\x95\') // replaces the actual emoji with :emoji:, in this case: returns "I :heart: :pizza:"\nemoji.find(\'\xf0\x9f\x8d\x95\') // Find the `pizza` emoji, and returns `({ emoji: \'\xf0\x9f\x8d\x95\', key: \'pizza\' })`;\nemoji.find(\'pizza\') // Find the `pizza` emoji, and returns `({ emoji: \'\xf0\x9f\x8d\x95\', key: \'pizza\' })`;\nemoji.hasEmoji(\'\xf0\x9f\x8d\x95\') // Validate if this library knows an emoji like `\xf0\x9f\x8d\x95`\nemoji.hasEmoji(\'pizza\') // Validate if this library knowns a emoji with the name `pizza`\nemoji.strip(\'\xe2\x9a\xa0\xef\xb8\x8f \xe3\x80\xb0\xef\xb8\x8f \xe3\x80\xb0\xef\xb8\x8f low disk space\') // Strips the string from emoji\'s, in this case returns: "low disk space".\nemoji.replace(\'\xe2\x9a\xa0\xef\xb8\x8f \xe3\x80\xb0\xef\xb8\x8f \xe3\x80\xb0\xef\xb8\x8f low disk space\', (emoji) => `${emoji.key}:`) // Replace emoji\'s by callback method: "warning: low disk space"\n```\n\n## Options\n\n### onMissing\n`emoji.emojify(str, onMissing)`\n\nAs second argument, `emojify` takes an handler to parse unknown emojis. Provide a function to add your own handler:\n\n```js\nvar onMissing = function (name) {\n  return name;\n});\n\nvar emojified = emoji.emojify(\'I :unknown_emoji: :star: :another_one:\', onMissing);\n// emojified: I unknown_emoji \xe2\xad\x90\xef\xb8\x8f another_one\n```\n\n### format\n`emoji.emojify(str, onMissing, format)`\n\nAs third argument, `emojify` takes an handler to wrap parsed emojis. Provide a function to place emojis in custom elements, and to apply your custom styling:\n\n```js\nvar format = function (code, name) {\n  return \'<img alt="\' + code + \'" src="\' + name + \'.png" />\';\n});\n\nvar emojified = emoji.emojify(\'I :unknown_emoji: :star: :another_one:\', null, format);\n// emojified: I <img alt="\xe2\x9d\xa4\xef\xb8\x8f" src="heart.png" /> <img alt="\xe2\x98\x95\xef\xb8\x8f" src="coffee.png" />\n```\n\n## Adding new emoji\nEmoji come from js-emoji (Thanks a lot :thumbsup:). You can get a JSON file with all emoji here: https://raw.githubusercontent.com/omnidan/node-emoji/master/lib/emoji.json\n\nTo update the list or add custom emoji, clone this repository and put them into `lib/emojifile.js`.\nThen run `npm run-script emojiparse` in the project directory or `node emojiparse` in the lib directory.\nThis should generate the new emoji.json file and output `Done.`.\n\nThat\'s all, you now have more emoji you can use! :clap:\n\n## Support / Donations\nIf you want to support node-emoji development, please consider donating (it helps me keeping my projects active and alive!):\n\n * Paypal: [![daniel.bugl@gmail.com](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=YBMS9EKTNPZHJ)\n * Bitcoin: [1J5eKsrAcPPLv5gPxSjSUkXnbJpkhndFgA](bitcoin:1J5eKsrAcPPLv5gPxSjSUkXnbJpkhndFgA)\n\n\n## License\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fomnidan%2Fnode-emoji.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fomnidan%2Fnode-emoji?ref=badge_large)\n'