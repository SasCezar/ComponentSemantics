b'# Emojix\n[![Apache 2.0 License](https://img.shields.io/badge/license-Apache%202.0-blue.svg?style=flat)](http://www.apache.org/licenses/LICENSE-2.0.html) [![Release](https://jitpack.io/v/nekocode/Emojix.svg)](https://jitpack.io/#nekocode/Emojix)\n\nThis library adds **[apple style emojis](http://unicode.org/emoji/charts/full-emoji-list.html)** on your android application in the easiest way. **Unlike [emojicon](https://github.com/rockerhieu/emojicon), this library is non-invasive. Only need to add a little code to your project.**\n\nThis library will increase your apk size about 5 MB, because it contains all emoji icon files.\n\n### Preview\n![preview](art/preview.png)\n\n### Using with gradle\n- Add the JitPack repository to your root build.gradle:\n```gradle\nrepositories {\n    maven { url "https://jitpack.io" }\n}\n```\n\n- Add the dependency to your sub build.gradle:\n```gradle\ndependencies {\n    compile \'com.github.nekocode:Emojix:{lastest-version}\'\n}\n```\n\n### Usage\n\nJust wrap the `Activity` Context, it will let all the `TextView`s (or other views inherit from `TextView`) replace the emoji characters with apple style icons:\n\n```java\n@Override\nprotected void attachBaseContext(Context newBase) {\n    super.attachBaseContext(Emojix.wrap(newBase));\n}\n```\n\nNow, everything is OK! Anyway, for implementing emoji to the whole application you can add these code to your `BaseActivity`.\n\nNote that if it is not working with any views, you can wrap them manually:\n\n```java\nEmojix.wrapView(view);\n```\n\n### Thanks\n\nThanks to the [emojicon](https://github.com/rockerhieu/emojicon) and [Calligraphy](https://github.com/chrisjenx/Calligraphy) projects. This project is based on their contributions.\n'