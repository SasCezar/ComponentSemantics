b'<img align="right" width="200" src="https://raw.githubusercontent.com/typectrl/ngx-emoji-mart/master/misc/preview.png" />\n\n# ngx-emoji-mart\n\n[![npm](https://badge.fury.io/js/%40ctrl%2Fngx-emoji-mart.svg)](https://www.npmjs.org/package/@ctrl/ngx-emoji-mart)\n[![travis](https://travis-ci.org/TypeCtrl/ngx-emoji-mart.svg?branch=master)](https://travis-ci.org/TypeCtrl/ngx-emoji-mart)\n[![codecov](https://img.shields.io/codecov/c/github/typectrl/ngx-emoji-mart.svg)](https://codecov.io/github/typectrl/ngx-emoji-mart)\n\n**DEMO**: https://ngx-emoji-mart.netlify.com/\n\nThis project is a port of [emoji-mart](https://github.com/missive/emoji-mart) by missive\n\n- [Installation](#installation)\n- [Components](#components)\n  - [Picker](#picker)\n  - [Emoji](#emoji)\n- [Custom emojis](#custom-emojis)\n- [Headless search](#headless-search)\n- [Storage](#storage)\n- [Features](#features)\n\n## Installation\n\n```sh\nnpm install @ctrl/ngx-emoji-mart\n```\n\n## Dependencies\n\nLatest version available for each version of Angular\n\n| @ctrl/ngx-emoji-mart | Angular |\n| -------------------- | ------- |\n| 0.17.0               | 6.x 7.x |\n| 1.0.0                | >8      |\n\n## Components\n\n### Picker\n\nImport Module in ngModule\n\n```ts\nimport { PickerModule } from \'@ctrl/ngx-emoji-mart\';\n```\n\nImport styles in styles.scss if using SASS\n\n```scss\n@import \'~@ctrl/ngx-emoji-mart/picker\';\n```\n\nOr angular-cli can also include it via angular-cli.json\n\n```\n"styles": [\n  "styles.scss",\n  "../node_modules/@ctrl/ngx-emoji-mart/picker.css"\n]\n```\n\nuse component\n\n```html\n<emoji-mart title="Pick your emoji\xe2\x80\xa6" emoji="point_up"></emoji-mart>\n<emoji-mart set="emojione"></emoji-mart>\n<emoji-mart (emojiClick)="addEmoji($event)"></emoji-mart>\n<emoji-mart\n  [style]="{ position: \'absolute\', bottom: \'20px\', right: \'20px\' }"\n></emoji-mart>\n<emoji-mart\n  [i18n]="{ search: \'Recherche\', categories: { search: \'R\xc3\xa9sultats de recherche\', recent: \'R\xc3\xa9cents\' } }"\n></emoji-mart>\n```\n\n| Prop                   | Default                   | Description                                                                                                                                                                              |\n| ---------------------- | ------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **autoFocus**          | `false`                   | Auto focus the search input when mounted                                                                                                                                                 |\n| **color**              | `#ae65c5`                 | The top bar anchors select and hover color                                                                                                                                               |\n| **emoji**              | `department_store`        | emoji shown when no emojis are hovered, set to an empty string to show nothing                                                                                                           |\n| **include**            | `[]`                      | Only load included categories. Accepts [I18n categories keys](#i18n). Order will be respected, except for the `recent` category which will always be the first.                          |\n| **exclude**            | `[]`                      | Don\'t load excluded categories. Accepts [I18n categories keys](#i18n).                                                                                                                   |\n| **custom**             | `[]`                      | [Custom emojis](#custom-emojis)                                                                                                                                                          |\n| **recent**             |                           | Pass your own frequently used emojis as array of string IDs                                                                                                                              |\n| **emojiSize**          | `24`                      | The emoji width and height                                                                                                                                                               |\n| **(emojiClick)**       |                           | not triggered on return key in search bar. Params: `{ emoji, $event }`                                                                                                                   |\n| **(emojiSelect)**      |                           | whenever an emoji is selected. returns `{ emoji, $event }`                                                                                                                               |\n| **perLine**            | `9`                       | Number of emojis per line. While there\xe2\x80\x99s no minimum or maximum, this will affect the picker\xe2\x80\x99s width. This will set _Frequently Used_ length as well (`perLine * totalFrequentLines (4)`) |\n| **totalFrequentLines** | `4`                       | number of lines of frequently used emojis                                                                                                                                                |\n| **i18n**               | [`{\xe2\x80\xa6}`](#i18n)            | [An object](#i18n) containing localized strings                                                                                                                                          |\n| **isNative**           | `false`                   | Renders the native unicode emoji                                                                                                                                                         |\n| **set**                | `apple`                   | The emoji set: `\'apple\', \'google\', \'twitter\', \'emojione\', \'messenger\', \'facebook\'`                                                                                                       |\n| **sheetSize**          | `64`                      | The emoji [sheet size](#sheet-sizes): `16, 20, 32, 64`                                                                                                                                   |\n| **backgroundImageFn**  | `((set, sheetSize) => \xe2\x80\xa6)` | A Fn that returns that image sheet to use for emojis. Useful for avoiding a request if you have the sheet locally.                                                                       |\n| **emojisToShowFilter** | `((emoji) => true)`       | A Fn to choose whether an emoji should be displayed or not                                                                                                                               |\n| **showPreview**        | `true`                    | Display preview section                                                                                                                                                                  |\n| **emojiTooltip**       | `false`                   | Show emojis short name when hovering (title)                                                                                                                                             |\n| **skin**               | `1`                       | Default skin color: `1, 2, 3, 4, 5, 6`                                                                                                                                                   |\n| **style**              |                           | Inline styles applied to the root element. Useful for positioning                                                                                                                        |\n| **title**              | `Emoji Mart\xe2\x84\xa2`             | The title shown when no emojis are hovered                                                                                                                                               |\n| **hideObsolete**       | `true`                    | Hides ex: "cop" emoji in favor of female and male emoji                                                                                                                                  |\n| **notFoundEmoji**      | `sleuth_or_spy`           | The emoji shown when there are no search results                                                                                                                                         |\n| **categoriesIcons**    | see `svgs/index.ts`       | the anchor icons                                                                                                                                                                         |\n| **searchIcons**        | see `svgs/index.ts`       | the search/close icon in the search bar                                                                                                                                                  |\n| **showSingleCategory** |                           | show only one category at a time to increase rendering performance                                                                                                                       |\n\n#### I18n\n\n```ts\nsearch: \'Search\',\nemojilist: \'List of emoji\',\nnotfound: \'No Emoji Found\',\nclear: \'Clear\',\ncategories: {\n  search: \'Search Results\',\n  recent: \'Frequently Used\',\n  people: \'Smileys & People\',\n  nature: \'Animals & Nature\',\n  foods: \'Food & Drink\',\n  activity: \'Activity\',\n  places: \'Travel & Places\',\n  objects: \'Objects\',\n  symbols: \'Symbols\',\n  flags: \'Flags\',\n  custom: \'Custom\',\n},\nskintones: {\n  1: \'Default Skin Tone\',\n  2: \'Light Skin Tone\',\n  3: \'Medium-Light Skin Tone\',\n  4: \'Medium Skin Tone\',\n  5: \'Medium-Dark Skin Tone\',\n  6: \'Dark Skin Tone\',\n},\n```\n\n#### Sheet sizes\n\nSheets are served from [unpkg](https://unpkg.com), a global CDN that serves files published to [npm](https://www.npmjs.com).\n\n| Set       | sheetSize | Size    |\n| --------- | --------- | ------- |\n| apple     | 16        | 334 KB  |\n| apple     | 20        | 459 KB  |\n| apple     | 32        | 1.08 MB |\n| apple     | 64        | 2.94 MB |\n| emojione  | 16        | 315 KB  |\n| emojione  | 20        | 435 KB  |\n| emojione  | 32        | 1020 KB |\n| emojione  | 64        | 2.33 MB |\n| facebook  | 16        | 322 KB  |\n| facebook  | 20        | 439 KB  |\n| facebook  | 32        | 1020 KB |\n| facebook  | 64        | 2.5 MB  |\n| google    | 16        | 301 KB  |\n| google    | 20        | 409 KB  |\n| google    | 32        | 907 KB  |\n| google    | 64        | 2.17 MB |\n| messenger | 16        | 325 KB  |\n| messenger | 20        | 449 MB  |\n| messenger | 32        | 1.05 MB |\n| messenger | 64        | 2.69 MB |\n| twitter   | 16        | 288 KB  |\n| twitter   | 20        | 389 KB  |\n| twitter   | 32        | 839 KB  |\n| twitter   | 64        | 1.82 MB |\n\n#### Examples of `emoji` object:\n\n```ts\n{\n  id: \'smiley\',\n  name: \'Smiling Face with Open Mouth\',\n  colons: \':smiley:\',\n  text: \':)\',\n  emoticons: [\n    \'=)\',\n    \'=-)\'\n  ],\n  skin: null,\n  native: \'\xf0\x9f\x98\x83\'\n}\n\n{\n  id: \'santa\',\n  name: \'Father Christmas\',\n  colons: \':santa::skin-tone-3:\',\n  text: \'\',\n  emoticons: [],\n  skin: 3,\n  native: \'\xf0\x9f\x8e\x85\xf0\x9f\x8f\xbc\'\n}\n\n{\n  id: \'octocat\',\n  name: \'Octocat\',\n  colons: \':octocat\',\n  text: \'\',\n  emoticons: [],\n  custom: true,\n  imageUrl: \'https://assets-cdn.github.com/images/icons/emoji/octocat.png?v7\'\n}\n```\n\n### Emoji\n\n```ts\nimport { EmojiModule } from \'@ctrl/ngx-emoji-mart/ngx-emoji\';\n```\n\n```html\n<ngx-emoji [emoji]="{ id: \'santa\', skin: 3 }" size="16"></ngx-emoji>\n<ngx-emoji emoji=":santa::skin-tone-3:" size="16"></ngx-emoji>\n<ngx-emoji emoji="santa" set="emojione" size="16"></ngx-emoji>\n```\n\n| Prop                                         | Required | Default                   | Description                                                                                                      |\n| -------------------------------------------- | :------: | ------------------------- | ---------------------------------------------------------------------------------------------------------------- |\n| **emoji**                                    |    \xe2\x9c\x93     |                           | Either a string or an `emoji` object                                                                             |\n| **size**                                     |    \xe2\x9c\x93     |                           | The emoji width and height.                                                                                      |\n| **native**                                   |          | `false`                   | Renders the native unicode emoji                                                                                 |\n| **(emojiClick)**                             |          |                           | Params: `{ emoji, $event }`                                                                                      |\n| **(emojiLeave)**                             |          |                           | Params: `{ emoji, $event }`                                                                                      |\n| **(emojiOver)**                              |          |                           | Params: `{ emoji, $event }`                                                                                      |\n| [**fallback**](#unsupported-emojis-fallback) |          |                           | Params: `(emoji, props) => {}`                                                                                   |\n| **set**                                      |          | `apple`                   | The emoji set: `\'apple\', \'google\', \'twitter\', \'emojione\'`                                                        |\n| **sheetSize**                                |          | `64`                      | The emoji [sheet size](#sheet-sizes): `16, 20, 32, 64`                                                           |\n| **backgroundImageFn**                        |          | `((set, sheetSize) => \xe2\x80\xa6)` | Fn that returns that image sheet to use for emojis. Useful for avoiding a request if you have the sheet locally. |\n| **skin**                                     |          | `1`                       | Skin color: `1, 2, 3, 4, 5, 6`                                                                                   |\n| **tooltip**                                  |          | `false`                   | Show emoji short name when hovering (title)                                                                      |  |\n| **hideObsolete**                             |          | `false`                   | Hides ex: "cop" emoji in favor of female and male emoji                                                          |  |\n\n#### Unsupported emojis fallback\n\nCertain sets don\xe2\x80\x99t support all emojis (i.e. Messenger & Facebook don\xe2\x80\x99t support `:shrug:`). By default the Emoji component will not render anything so that the emojis\xe2\x80\x99 don\xe2\x80\x99t take space in the picker when not available. When using the standalone Emoji component, you can however render anything you want by providing the `fallback` props.\n\nTo have the component render `:shrug:` you would need to:\n\n```ts\nemojiFallback = (emoji: any, props: any) =>\n  emoji ? `:${emoji.shortNames[0]}:` : props.emoji;\n```\n\n```html\n<ngx-emoji\n  set="messenger"\n  emoji="shrug"\n  size="24"\n  [fallback]="emojiFallback"\n></ngx-emoji>\n```\n\n## Custom emojis\n\nYou can provide custom emojis which will show up in their own category. You can either use a single image as imageUrl or use a spritesheet as shown in the second object.\n\n```ts\nconst customEmojis = [\n  {\n    name: \'Octocat\',\n    shortNames: [\'octocat\'],\n    text: \'\',\n    emoticons: [],\n    keywords: [\'github\'],\n    imageUrl: \'https://assets-cdn.github.com/images/icons/emoji/octocat.png?v7\',\n  },\n  {\n    name: \'Test Flag\',\n    shortNames: [\'test\'],\n    text: \'\',\n    emoticons: [],\n    keywords: [\'test\', \'flag\'],\n    spriteUrl:\n      \'https://unpkg.com/emoji-datasource-twitter@4.0.4/img/twitter/sheets-256/64.png\',\n    sheet_x: 1,\n    sheet_y: 1,\n    size: 64,\n    sheetColumns: 52,\n    sheetRows: 52,\n  },\n];\n```\n\n```html\n<emoji-mart [custom]="customEmojis"></emoji-mart>\n```\n\n## Headless search\n\nThe `Picker` doesn\xe2\x80\x99t have to be mounted for you to take advantage of the advanced search results.\n\n```ts\nimport { EmojiSearch } from \'@ctrl/ngx-emoji-mart\';\nclass ex {\n  constructor(private emojiSearch: EmojiSearch) {\n    this.emojiSearch.search(\'christmas\').map(o => o.native);\n    // => [\xf0\x9f\x8e\x84, \xf0\x9f\x8e\x85\xf0\x9f\x8f\xbc, \xf0\x9f\x94\x94, \xf0\x9f\x8e\x81, \xe2\x9b\x84\xef\xb8\x8f, \xe2\x9d\x84\xef\xb8\x8f]\n  }\n}\n```\n\n## Display emoji as custom element\n\n```ts\n// $event is from (emojiClick)\nconst styles = this.emoji.emojiSpriteStyles($event.emoji.sheet, \'twitter\'); // pass emoji sheet\nconst el = document.createElement(\'div\');\nObject.assign(el.style, styles); // apply styles to new element\ndocument.body.appendChild(el);\n```\n\n## Storage\n\nBy default EmojiMart will store user chosen skin and frequently used emojis in `localStorage`.\n\nPossible keys are:\n\n| Key        | Value                            | Description                                                                                                     |\n| ---------- | -------------------------------- | --------------------------------------------------------------------------------------------------------------- |\n| skin       | `1, 2, 3, 4, 5, 6`               |                                                                                                                 |\n| frequently | `{ \'astonished\': 11, \'+1\': 22 }` | An object where the key is the emoji name and the value is the usage count                                      |\n| last       | \'astonished\'                     | (Optional) Used by `frequently` to be sure the latest clicked emoji will always appear in the \xe2\x80\x9cRecent\xe2\x80\x9d category |\n\n## Features\n\n### Powerful search\n\n#### Short name, name and keywords\n\nNot only does **Emoji Mart** return more results than most emoji picker, they\xe2\x80\x99re more accurate and sorted by relevance.\n\n<img width="338" alt="summer" src="https://raw.githubusercontent.com/typectrl/ngx-emoji-mart/master/misc/emoticons.png">\n\n#### Emoticons\n\nThe only emoji picker that returns emojis when searching for emoticons.\n\n<img width="338" alt="emoticons" src="https://raw.githubusercontent.com/typectrl/ngx-emoji-mart/master/misc/emoticons.png">\n\n### Fully customizable\n\n#### Anchors color, title and default emoji\n\n<img width="338" alt="customizable-color" src="https://raw.githubusercontent.com/typectrl/ngx-emoji-mart/master/misc/customizable-color.png"><br><img width="338" alt="pick-your-emoji" src="https://raw.githubusercontent.com/typectrl/ngx-emoji-mart/master/misc/pick-your-emoji.png">\n\n#### Emojis sizes and length\n\n<img width="296" alt="size-and-length" src="https://raw.githubusercontent.com/typectrl/ngx-emoji-mart/master/misc/size-and-length.png">\n\n#### Default skin color\n\nAs the developer, you have control over which skin color is used by default.\n\n<img width="205" alt="skins" src="https://raw.githubusercontent.com/typectrl/ngx-emoji-mart/master/misc/skins.png">\n\nIt can however be overwritten as per user preference.\n\n<img width="98" alt="customizable-skin" src="https://raw.githubusercontent.com/typectrl/ngx-emoji-mart/master/misc/customizable-skin.png">\n\n#### Multiple sets supported\n\nApple / Google / Twitter / EmojiOne / Messenger / Facebook\n\n<img width="214" alt="sets" src="https://raw.githubusercontent.com/typectrl/ngx-emoji-mart/master/misc/sets.png">\n\n---\n\n> GitHub [@scttcper](https://github.com/scttcper) &nbsp;&middot;&nbsp;\n> Twitter [@scttcper](https://twitter.com/scttcper)\n'