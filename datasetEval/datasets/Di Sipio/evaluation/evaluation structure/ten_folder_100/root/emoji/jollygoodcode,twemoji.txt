b'# Twemoji\n\n[![Gem Version](https://badge.fury.io/rb/twemoji.svg)](https://badge.fury.io/rb/twemoji)\n[![Build Status](https://travis-ci.org/jollygoodcode/twemoji.svg)][travis]\n[![Inline docs](http://inch-ci.org/github/jollygoodcode/twemoji.svg?branch=master)][inch-doc]\n\n[gem]: https://rubygems.org/gems/twemoji\n[travis]: https://travis-ci.org/jollygoodcode/twemoji\n[inch-doc]: http://inch-ci.org/github/jollygoodcode/twemoji\n\nTwitter [opensourced Twitter Emoji](http://twitter.github.io/twemoji/) and the official JavaScript implementation is available at [twemoji](https://github.com/twitter/twemoji).\n\nThis RubyGem `twemoji` is a minimum implementation of Twitter Emoji in Ruby so that you can use emoji in your Ruby/Rails apps too!\n\n__Note:__ This gem might not implement all the features available in the JavaScript implementation.\n\n## Twemoji Gem and twemoji.js versions\n\n- Twemoji Gem 3.x supports twemoji.js V2 (1661 emojis) [Preview](https://jollygoodcode.github.io/twemoji/)\n- Twemoji Gem 2.x supports twemoji.js V1 (874 emojis) [Preview](http://jollygoodcode.github.io/twemoji/v1/)\n\n*Preview pages\' Images is CC-BY 4.0 by [Twitter/Twemoji](https://github.com/twitter/twemoji).*\n\n## Installation\n\nAdd this line to your application\'s Gemfile:\n\n```ruby\ngem "twemoji"\n```\n\nAnd then execute:\n\n    $ bundle\n\nOr install it yourself as:\n\n    $ gem install twemoji\n\n## Integration\n\n- [Integration with `HTML::Pipeline`](https://github.com/jollygoodcode/twemoji/wiki/Integrate-with-HTML%3A%3APipeline)\n\n## Twemoji and Rails\n\n- [Checkout this tutorial: Twemoji in Rails](https://github.com/jollygoodcode/jollygoodcode.github.io/issues/18)\n\n## Rails Helper\n\n`$ touch app/helpers/emoji_helper.rb`\n\n```ruby\nmodule EmojiHelper\n  def emojify(content, **options)\n    Twemoji.parse(h(content), options).html_safe if content.present?\n  end\nend\n```\n\nIn your ERb view:\n\n```erb\n<%= emojify "I like chocolate :heart_eyes:!" %>\n```\n\nwill render\n\n```\nI like chocolate <img class="emoji" draggable="false" title=":heart_eyes:" alt="\xf0\x9f\x98\x8d" src="https://twemoji.maxcdn.com/2/72x72/1f60d.png">!\n```\n\nMore options could be passed in, please see [Twemoji.parse options](https://github.com/jollygoodcode/twemoji#twemojiparse-options) for more details.\n\n## Usage\n\n### API\n\n#### `Twemoji.find_by` text or code or unicode\n\n```ruby\n> Twemoji.find_by(text: ":heart_eyes:")\n=> "1f60d"\n\n> Twemoji.find_by(code: "1f60d")\n=> ":heart_eyes:"\n\n> Twemoji.find_by(unicode: "\xf0\x9f\x98\x8d")\n=> ":heart_eyes:"\n\n> Twemoji.find_by(unicode: "\\u{1f60d}")\n=> ":heart_eyes:"\n```\n\n#### `Twemoji.find_by_text`\n\n```ruby\n> Twemoji.find_by_text(":heart_eyes:")\n=> "1f60d"\n```\n\n#### `Twemoji.find_by_code`\n\n```ruby\n> Twemoji.find_by_code("1f60d")\n=> ":heart_eyes:"\n```\n\n#### `Twemoji.find_by_unicode`\n\n```ruby\n> Twemoji.find_by(unicode: "\xf0\x9f\x98\x8d")\n=> ":heart_eyes:"\n```\n\n#### `Twemoji.render_unicode`\n\n```ruby\n> Twemoji.render_unicode ":heart_eyes:"\n=> "\xf0\x9f\x98\x8d"\n\n> Twemoji.render_unicode "1f60d"\n=> "\xf0\x9f\x98\x8d"\n```\n\n#### `Twemoji.parse`\n\nParses for both name tokens (e.g. :heart_eyes:) or unicode values (e.g. `\\u1f60d`).\n\nParsing by name token:\n\n```ruby\n> Twemoji.parse "I like chocolate :heart_eyes:!"\n=> \'I like chocolate <img draggable="false" title=":heart_eyes:" alt="\xf0\x9f\x98\x8d" src="https://twemoji.maxcdn.com/2/svg/1f60d.svg" class="emoji">!\'\n```\n\nParsing by name unicode values:\n\n```ruby\n> Twemoji.parse "I like chocolate \xf0\x9f\x98\x8d!"\n=> \'I like chocolate <img draggable="false" title=":heart_eyes:" alt="\xf0\x9f\x98\x8d" src="https://twemoji.maxcdn.com/2/svg/1f60d.svg" class="emoji">!\'\n```\n\nParsing by both name and unicode:\n\n```ruby\n> Twemoji.parse ":cookie: \xf0\x9f\x8e\x82"\n=> \'<img draggable="false" title=":cookie:" alt="\xf0\x9f\x8d\xaa" src="https://twemoji.maxcdn.com/2/svg/1f36a.svg" class="emoji"> <img draggable="false" title=":birthday:" alt="\xf0\x9f\x8e\x82" src="https://twemoji.maxcdn.com/2/svg/1f382.svg" class="emoji">\'\n```\n\n##### `Twemoji.parse` options\n\n##### `asset_root`\n\nDefault assets root url. Defaults to `https://twemoji.maxcdn.com/2/`:\n\n```ruby\n> Twemoji.parse "I like chocolate :heart_eyes:!", asset_root: "foocdn.com"\n=> \'I like chocolate <img draggable="false" title=":heart_eyes:" alt="\xf0\x9f\x98\x8d" src="foocdn.com/svg/1f60d.svg" class="emoji">!\'\n```\n\n##### `file_ext`\n\nDefault assets file extensions. Defaults to `svg`.\n\nCan change to `"png"`:\n\n```ruby\n> Twemoji.parse \'I like chocolate :heart_eyes:!\', file_ext: "png"\n=> \'I like chocolate <img draggable="false" title=":heart_eyes:" alt="\xf0\x9f\x98\x8d" src="https://twemoji.maxcdn.com/2/72x72/1f60d.png" class="emoji">!\'\n```\n\n##### `class_name`\n\nDefault image CSS class name. Defaults to `"emoji"`.\n\n```ruby\n> Twemoji.parse "I like chocolate :heart_eyes:!", class_name: "superemoji"\n=> \'I like chocolate <img draggable="false" title=":heart_eyes:" alt="\xf0\x9f\x98\x8d" src="https://twemoji.maxcdn.com/2/svg/1f60d.svg" class="superemoji">!\'\n```\n\n##### `img_attrs`\n\nList of image attributes for the `img` tag. Optional.\n\n```ruby\n> Twemoji.parse "I like chocolate :heart_eyes:!", class_name: "twemoji", img_attrs: { style: "height: 1.3em;" }\n=> \'I like chocolate <img draggable="false" title=":heart_eyes:" alt="\xf0\x9f\x98\x8d" src="https://twemoji.maxcdn.com/2/svg/1f60d.svg" class="twemoji" style="height: 1.3em;">!\'\n```\n\nattribute value can apply proc-like object, remove `:` from title attribute:\n\n```ruby\n> no_colons = ->(name) { name.gsub(":", "") }\n\n> Twemoji.parse "I like chocolate :heart_eyes:!", class_name: "twemoji", img_attrs: { title: no_colons }\n=> \'I like chocolate <img draggable="false" title="heart_eyes" alt="\xf0\x9f\x98\x8d" src="https://twemoji.maxcdn.com/2/svg/1f60d.svg" class="twemoji">!\'\n```\n\n#### `Twemoji.emoji_pattern`\n\n```ruby\n> Twemoji.emoji_pattern\n=> /(:mahjong:|:black_joker:| ... |:registered_sign:|:shibuya:)/\n```\n\n#### `Twemoji.emoji_pattern_unicode`\n\n```ruby\n> Twemoji.emoji_pattern_unicode\n```\n\n#### `Twemoji.emoji_pattern_all` = `emoji_pattern` + `emoji_pattern_unicode`\n\n```ruby\n> Twemoji.emoji_pattern_all\n```\n\n#### JSON for your front-end\n\nWe prepare two constants: [Twemoji.png](lib/twemoji/png.rb) and [Twemoji.svg](lib/twemoji/svg.rb) (**not loaded by default**), you need to require them to use:\n\n```ruby\nrequire "twemoji/png" # If you want to use Twemoji.png\nrequire "twemoji/svg" # If you want to use Twemoji.svg\n```\n\nOr require at `Gemfile`:\n\n```ruby\n# Require the one you need, require Twemoji::PNG\ngem "twemoji", require: "twemoji/png"\n\n# Or Twemoji::SVG\ngem "twemoji", require: "twemoji/svg"\n\n# Or both\ngem "twemoji", require: ["twemoji/png", "twemoji/svg"]\n```\n\nThen you can do `to_json` to feed your front-end.\n\nYou can also make custom format by leverage `Twemoji.codes`:\n\n```html+erb\n# emojis.json.erb\n<%= Twemoji.codes.collect do |code, _|\n  Hash(\n    value: code,\n    html: content_tag(:span, Twemoji.parse(code).html_safe + " #{code}" )\n  )\nend.to_json.html_safe %>\n```\n\n## Configuration\n\n`Twemoji.parse` options can be given in configure block, default values are:\n\n```ruby\nTwemoji.configure do |config|\n  config.asset_root = "https://twemoji.maxcdn.com/2"\n  config.file_ext   = "svg"\n  config.class_name = "emoji"\n  config.img_attrs  = {}\nend\n```\n\nSpecify additional img attributes like so:\n\n```ruby\nconfig.img_attrs  = { style: "height: 1.3em;" }\n```\n\n## Tips (from twitter/twemoji)\n\n### Inline Styles\n\nIf you\'d like to size the emoji according to the surrounding text, you can add the following CSS to your stylesheet:\n\n```css\nimg.emoji {\n  height: 1em;\n  width: 1em;\n  margin: 0 .05em 0 .1em;\n  vertical-align: -0.1em;\n}\n```\n\nThis will make sure emoji derive their width and height from the font-size of the text they\'re shown with. It also adds just a little bit of space before and after each emoji, and pulls them upwards a little bit for better optical alignment.\n\n### UTF-8 Character Set\n\nTo properly support emoji, the document character must be set to UTF-8. This can done by including the following meta tag in the document <head>\n\n```html\n<meta charset="utf-8">\n```\n\n## Attribution Requirements\n\n**IMPORTANT:** Please follow the [Attribution Requirements](https://github.com/twitter/twemoji#attribution-requirements) as stated on the official Twemoji (JavaScript) repo.\n\n## Contributing\n\nPlease see the [CONTRIBUTING.md](/CONTRIBUTING.md) file.\n\n## Credits\n\nA huge THANK YOU to all our [contributors](https://github.com/jollygoodcode/twemoji/graphs/contributors)! :heart:\n\nThe emoji keywords are from [jollygoodcode/emoji-keywords](https://github.com/jollygoodcode/emoji-keywords).\n\n## Guidelines\n\nThis project subscribes to the [Moya Contributors Guidelines](https://github.com/Moya/contributors)\nwhich TLDR: means we give out push access easily and often.\n\n## License\n\nPlease see the [LICENSE.md](/LICENSE.md) file.\n\n## Maintained by Jolly Good Code\n\n[![Jolly Good Code](https://cloud.githubusercontent.com/assets/1000669/9362336/72f9c406-46d2-11e5-94de-5060e83fcf83.jpg)](http://www.jollygoodcode.com)\n\nWe specialise in rapid development of high quality MVPs. [Hire us](http://www.jollygoodcode.com/#get-in-touch) to turn your product idea into reality.\n'