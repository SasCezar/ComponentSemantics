b'![react-rewards logo](react-rewards.png?raw=true "react-rewards")\n\n[![npm version](https://badge.fury.io/js/react-rewards.svg)](https://badge.fury.io/js/react-rewards) [![forthebadge](https://forthebadge.com/images/badges/makes-people-smile.svg)](https://forthebadge.com)\n\n### Demo available <a href="https://fmjo9.csb.app/" target="_blank">here!</a>\n\n## Usage\n\nThis package was built using React-Pose, react-dom-confetti and Lottie-web.\n\nWhy should I even use that? Read my blog post and you will know \xe2\x80\x93 https://www.thedevelobear.com/post/microinteractions/\n\nInstall from npm by typing ```npm install react-rewards``` or ```yarn add react-rewards``` while in your package.json directory.\n\nThis package lets you easily add microinteractions to your app and reward users with the rain of confettis, flying emoji or memphis design particles in seconds. In order to make it rain, you need to wrap your button of choice with the **\\<Reward\\>** component, fire the **rewardMe()** method from the refs and voil\xc3\xa0. You can also "punish" the user by calling the **punishMe()** method and showing them that something went wrong. \n\n<p align="center">\n<img alt=\'react-rewards demo\' src="react-rewards.gif"/>\n</p>\n\n```js\nimport Reward from \'react-rewards\';\n\n// in render\n<Reward\n  ref={(ref) => { this.reward = ref }}\n  type=\'emoji\'\n>\n  <button onClick={this.fetchSomeData} />\n</Reward>\n\n// in fetchSomeData:\n// to reward a user with confetti/emoji/memphis rain:\nthis.reward.rewardMe();\n// to "punish" user :\nthis.reward.punishMe();\n```\n\n### Props & config\n\nBasic props:\n\n| name            | type   | description                                            | required   |default      |\n|-----------------|--------|--------------------------------------------------------|------------|-------------|\n| ref             | func   | function that creates a ref of the reward component    | yes        |             |\n| type            | string | \'confetti\', \'emoji\' or \'memphis\'                       | no         |\'confetti\'   |\n| config          | object | a configuration object described below                 | no         |see below    |\n\nConfig object: \n\n| name            | type   | description                                            | default (confett / emoji) |\n|-----------------|--------|--------------------------------------------------------|---------------------------|\n| lifetime        | number | time of life of each particle in ms                    | 200 / 200                 |\n| angle           | number | initial direction of particles in degrees              | 90 / 90                   |\n| decay           | number | how much the velocity decreases with each frame        | 0.91 / 0.91               |\n| spread          | number | spread of particles in degrees                         | 45 / 100                  |\n| startVelocity   | number | initial velocity of particles                          | 35 / 20                   |\n| elementCount    | number | particles quantity                                     | 40 / 15                   |\n| elementSize     | number | particle size in px                                    | 8 / 20                    |\n| zIndex          | number | z-index of particles                                   | 10 / 10                   |\n| springAnimation | bool   | whether the button should be animated                  | true                      |\n| colors          | array  | An array of colors used when generating confettis      |                           |\n| emoji           | array  | An array of emoji used when generating emoji particles |                           |\n'