b'Vim Input Completion for [GitHub](https://github.com/)\n======================================================\n\n[![Build Status](https://travis-ci.org/rhysd/github-complete.vim.svg?branch=master)](https://travis-ci.org/rhysd/github-complete.vim)\n\ngithub-complete.vim is a completion plugin to complete things related to GitHub.  It generates, caches and contextually shows candidates of completion via GitHub API.\n\nNow github-complete.vim provides below completions:\n- Emoji completion\n- User name completion\n- Repository name completion\n- Issue number completion\n- Link URL completion\n\nYou can use these completions as omni completion in Vim.  Type `<C-x><C-o>` in insert mode to invoke omni completion.\n\nPlease see [documentation](https://github.com/rhysd/github-complete.vim/blob/master/doc/github-complete.txt) for more detail.\n\n## Emoji completion :dog:\n\nWhen the cursor is after ":", github-complete.vim invokes emoji completion.  If your font can deal with unicode emojis, the items of completion show the corresponding emojis.\n\n![emoji completion](https://raw.githubusercontent.com/rhysd/screenshots/master/github-complete.vim/emoji_completion.gif)\n\n## User name completion\n\nWhen the cursor is after "@" or "github.com/", github-complete.vim invokes GitHub user name completion.\n\n![user name completion](https://raw.githubusercontent.com/rhysd/screenshots/master/github-complete.vim/user_completion.gif)\n\n## Repository name completion\n\nWhen the cursor is after the format `{user name}/{some query}`, github_complete.vim invokes GitHub repository completion.  It shows repositories which `{user name}` owns.\n\n![repo name completion](https://raw.githubusercontent.com/rhysd/screenshots/master/github-complete.vim/repo_completion.gif)\n\n## Issue number completion\n\nWhen the cursor is after "#", github-complete.vim invokes issue number completion.\nYou can select an issue with looking the issue titles in items of completion.\n\n![issue number completion](https://raw.githubusercontent.com/rhysd/screenshots/master/github-complete.vim/issue_completion.gif)\n\n## Link URL completion\n\nWhen writing link to GitHub repository in markdown, you can complete its URL.\nOn writing `[something](`, github-complete.vim searches GitHub repositories by the title `something` and shows the result.\n\n![link completion](https://raw.githubusercontent.com/rhysd/ss/master/github-complete.vim/link_completion.gif)\n\n## Installation \n\nYou can use modern Vim plugin package managers (e.g. [Vundle.vim](https://github.com/gmarik/Vundle.vim)/[vim-plug](https://github.com/junegunn/vim-plug)/[neobundle.vim](https://github.com/Shougo/neobundle.vim)):\n\n```vim\nPlugin \'rhysd/github-complete.vim\'\nPlug \'rhysd/github-complete.vim\'\nNeoBundle \'rhysd/github-complete.vim\'\n```\n\ngithub-complete.vim optionally depends on [vimproc.vim](https://github.com/Shougo/vimproc.vim).  I recommend to install them in advance.\n\nThen you\'ve already gained the completions.  Open a buffer, execute `:setf gitcommit`, then try to type `<C-x><C-o>` after `:`.  It will show emoji candidates.  If you can\'t see the candidates, check `omnifunc` option with `:set omnifunc` and make sure to set it to `github_complete#complete`.\n\n## [neocomplete](https://github.com/Shougo/neocomplete.vim) sources\n\ngithub-complete.vim provides [neocomplete](https://github.com/Shougo/neocomplete.vim) sources corresponding to above completions.  They are disabled by default.  When you enable them, neocomplete will show candidates of the completion automatically.  Please see [documentation](https://github.com/rhysd/github-complete.vim/blob/master/doc/github-complete.txt) for more detail.\n\n## Japanese description for emoji\n\nIf you are Japanese, you may be lucky.  For the environment where unicode emoji font is not available, emoji completion shows the Japanese descriptions instead of them.  Set `g:github_complete_emoji_japanese_workaround` to 1 to enable this feature.\n\n![Japanese workaround](https://raw.githubusercontent.com/rhysd/screenshots/master/github-complete.vim/japanese_workaround.gif)\n\n## FAQ\n\n### neocomplete.vim shows github-complete.vim\'s completion result automatically.  How can I stop it?\n\nPlease write below config to prevent neocomplete from executing omni completion on `gitcommit` and `markdown` filetypes.\n\n```vim\nif !exists(\'g:neocomplete#sources#omni#input_patterns\')\n    let g:neocomplete#sources#omni#input_patterns = {}\nendif\nlet g:neocomplete#sources#omni#input_patterns.markdown = \'\'\nlet g:neocomplete#sources#omni#input_patterns.gitcommit = \'\'\n```\n\n### I want to use github-complete.vim on private repositories.\n\nPlease set GitHub API token to `g:github_complete_github_api_token`.  Do not put API token to public place and manage it properly.\nHow to obtain it is:\n\n1. Access to https://github.com\n2. Click your icon and select \'Settings\' in pull-down menu.\n3. Select \'Personal access tokens\' tab.\n4. Click \'Generate new token\' button.\n5. Specify properly scopes.\n6. Click \'Genrate token\' button and copy the displayed token.\n\n### API rate limit exceeded...\n\nPlease try setting GitHub API token as the above question.  API limit is increased to 5000 from 60 per hour when API token is specified.\n\n### I don\'t want to overwrite `omnifunc`...\n\nYou can define a mapping for manual completion as below.\n\n```vim\n" Disable overwriting \'omnifunc\'\nlet g:github_complete_enable_omni_completion = 0\n" <C-x><C-x> invokes completions of github-complete.vim\nautocmd FileType markdown,gitcommit\n    \\ imap <C-x><C-x> <Plug>(github-complete-manual-completion)\n```\n\n## Related plugins\n\n- [github-issues.vim](https://github.com/jaxbot/github-issues.vim)\n\ngithub-issues.vim provides you GitHub issue integration in Vim.\nYou can look, create and close a GitHub issue.\n\n- [vim-fugitive](https://github.com/tpope/vim-fugitive)\n\nGit integration for Vim\n\n- [vimagit](https://github.com/jreybert/vimagit)\n\nGit client for Vim which is inspired by magit for Emacs.\n\n- [vim-emoji](https://github.com/junegunn/vim-emoji)\n\nVim emoji is a library and small completion plugin to use emoji in Vim.  The plugin is distributed under the MIT license.  I use the data in the library following it.  Thank you [@junegunn](https://github.com/junegunn)!\n\n## Libraries\n\ngithub-complete.vim uses [vital.vim](https://github.com/vim-jp/vital.vim).  vital.vim is a general purpose Vim script libraries developed by Japanese Vim community.  They are embedded in github-complete.vim as vital modules so that users need not to install it manually. (Don\'t worry, vital.vim is open to the public with very relaxed license.)\n\n## License\n\nThis software is distributed under [The MIT License](http://opensource.org/licenses/MIT)\n'