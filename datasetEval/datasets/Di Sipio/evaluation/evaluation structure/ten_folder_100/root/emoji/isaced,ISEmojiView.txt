b'![logo](https://raw.github.com/isaced/ISEmojiView/master/logo@2x.jpg)\n[![Version](https://img.shields.io/cocoapods/v/ISEmojiView.svg?style=flat)](http://cocoapods.org/pods/ISEmojiView) [![Carthage Compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage) [![License](https://img.shields.io/cocoapods/l/ISEmojiView.svg?style=flat)](http://cocoapods.org/pods/ISEmojiView) [![Platform](https://img.shields.io/cocoapods/p/ISEmojiView.svg?style=flat)](http://cocoapods.org/pods/ISEmojiView)  ![Swift](https://img.shields.io/badge/%20in-swift%205-orange.svg)\n\nEnglish | [\xe4\xb8\xad\xe6\x96\x87](/README_zh.md)\n\nAn easy to use Emoji keyboard for iOS.\n\nHas been rewritten with swift, the old *Objective-C* version on branch [oc](https://github.com/isaced/ISEmojiView/tree/oc).\n\n<img src="https://github.com/isaced/ISEmojiView/blob/master/screenshot1.png" width="375" height="667"> <img src="https://github.com/isaced/ISEmojiView/blob/master/screenshot2.png" width="375" height="667">\n\n## Features\n\n- Written in Swift\n- Custom emojis\n- Multiple skin tone support (  \xf0\x9f\x8f\xbb \xf0\x9f\x8f\xbc \xf0\x9f\x8f\xbd \xf0\x9f\x8f\xbe \xf0\x9f\x8f\xbf )\n- Categories bottom bar (like iOS system emoji Keyboard)\n- Recently used emoji\n\n## Example\n\nTo run the example project, clone the repo, and run `pod install` from the Example directory first.\n\n## Requirements\n\n- Swift 5\n- iOS8+\n- Xcode 10\n\n## Useage\n\n### Installation\n\n#### Cocoapods\n\n```Ruby\n# Swift\npod \'ISEmojiView\'\n\n# Objective-C (Deprecated)\npod \'ISEmojiView\', \'0.0.1\'\n```\n\n#### Carthage\n\n```Ruby\ngithub "isaced/ISEmojiView"\n```\n\n### Import\n\n```Swift\nimport ISEmojiView\n```\n\n### Initialization\n\n```Swift\nlet keyboardSettings = KeyboardSettings(bottomType: .categories)\nlet emojiView = EmojiView(keyboardSettings: keyboardSettings)\nemojiView.translatesAutoresizingMaskIntoConstraints = false\nemojiView.delegate = self\ntextView.inputView = emojiView\n```\n\n### Delegate\n\nImplement `<EmojiViewDelegate>`\n\n```Swift\n// callback when tap a emoji on keyboard\nfunc emojiViewDidSelectEmoji(_ emoji: String, emojiView: EmojiView) {\n    textView.insertText(emoji)\n}\n\n// callback when tap change keyboard button on keyboard\nfunc emojiViewDidPressChangeKeyboardButton(_ emojiView: EmojiView) {\n    textView.inputView = nil\n    textView.keyboardType = .default\n    textView.reloadInputViews()\n}\n    \n// callback when tap delete button on keyboard\nfunc emojiViewDidPressDeleteBackwardButton(_ emojiView: EmojiView) {\n    textView.deleteBackward()\n}\n\n// callback when tap dismiss button on keyboard\nfunc emojiViewDidPressDismissKeyboardButton(_ emojiView: EmojiView) {\n    textView.resignFirstResponder()\n}\n```\n\n### Customize\n\n#### KeyboardSettings\n\nThis is a class to desribe keyboard settings. Available properties:\n\n- `bottomType` - type of bottom view. Available variants: `.pageControl`, `.categories`. See `BottomType` enum. Default `.pageControl`.\n- `customEmojis` - array of custom emojis. To describe emojis you have to use `EmojiCategory` class.\n- `isShowPopPreview` - long press to pop preview effect like iOS10 system emoji keyboard. Default is true.\n- `countOfRecentsEmojis` - the max number of recent emojis, if set 0, nothing will be shown. Default is 50.\n- `needToShowAbcButton` - need to show change keyboard button. This button is located in `Categories` bottom view.\n\n\n## Others\n\nIf you are looking for a React Native solution, take a look at this [brendan-rius/react-native-emoji-keyboard](https://github.com/brendan-rius/react-native-emoji-keyboard)\n\n## License\n\nMIT\n'