b"\xf0\x9f\x92\xb0Expenses is a [progressive web application](https://developers.google.com/web/progressive-web-apps/) on top of [Google Sheets](https://developers.google.com/sheets/) \xf0\x9f\x93\x89 written in [React](https://facebook.github.io/react/) \xe2\x9a\x9b\xef\xb8\x8f. It is only a static HTML that works great on mobile \xf0\x9f\x93\xb1 and can be deployed anywhere.\n\nCheck out the [demo](https://demo-expenses.chodounsky.net) but please be considerate and don't break it for others.\n\n![Delete expense](doc/delete-expense.gif)\n\nIt was inspired by the [expense-manager](https://github.com/mitul45/expense-manager) by mitul45 and it uses the [material web components](https://material.io/components/) and [material icons](https://material.io/icons/).\n\n## Features\n\n* Multiple accounts\n  * Checking, savings, joint, etc.\n* Categories\n* [Google Sheet](https://docs.google.com/spreadsheets/d/1Lz1_gHIgCKPKhJpFerq9PoNy-TIst7eLZ5plQi5Prv0/edit?usp=sharing) as a backend\n  * Great privacy and access control.\n  * Don't share sensitive data with 3rd party.\n  * Unlimited analysis up to your sheet skill.\n* Works great on mobile\n  * Progressive Web App. Loads quickly and works as a standalone app.\n* Beautiful material design\n  * Better than native ;)\n* Recurring expenses\n  * Totally doable with [Zapier](http://zapier.com/).\n* Monthly summary\n  * This month. Last month. You immediately know how you doing.\n\n## Get started\n\nYou will need a somewhat recent version of [Node](https://nodejs.org/en/) and a place to deploy static HTML under a custom domain (doesn't have to be top level). To get the full offline support with service workers you'll need HTTPS \xe2\x80\x93 [CloudFlare](cloudflare.com) works fine or you can use your own certificate.\n\n1) make a copy of [Expense Sheet](https://docs.google.com/spreadsheets/d/1Lz1_gHIgCKPKhJpFerq9PoNy-TIst7eLZ5plQi5Prv0/edit?usp=sharing) to your drive `File -> Make a copy...`\n2) note the id of your new sheet (it's part of the URL)\n3) clone, install dependencies and build the app:\n\n\n```\nnpm i && REACT_APP_SHEET_ID=<replace with your sheet id> npm run build\n```\n\n4) copy the content of `build` folder to your server\n\n### Recurring Expenses\n\nZapier is a service for connecting apps and automating your workflows. And it can be used to add recurring expenses with the [Google Sheets Integrations](https://zapier.com/zapbook/google-sheets/).\n\nSelect a trigger \xe2\x80\x93 it could be every month, week, or based on anything else.\n\nUse the `Create Spreadsheet Row` integration and select your expense sheet and fill it with the desired values. Easy.\n\n![Zapier setup for recurring expenses](doc/zapier.png)\n\n### Sharing\n\nAdding another person (for example your partner) to the app is easy \xe2\x80\x93 you just give them access to the expense sheet in Google Sheets.\n\nAfter that, they have the same access as you are and can add expenses through the same URL.\n\n---\n\nIf you like this project \xe2\x80\x93 you might also enjoy [React Digest](https://reactdigest.net/) newsletter \xf0\x9f\x97\x9e. Subscribe to get the top 5 news from React community every week.\n"