b'# NOT MAINTAINED ANYMORE\r\n\r\n# SlideUp-Android\r\nSlideUp is a small library that allows you to add sweet slide effect to any view. Slide your views up, down, left or right with SlideUp!\r\n\r\n[![Release](https://jitpack.io/v/mancj/SlideUp-Android.svg)](https://jitpack.io/#mancj/SlideUp-Android)\r\n---\r\n\r\n[Example gif 1](https://i.imgur.com/7S5qqSy.gifv)\r\n\r\n[Example gif 2](https://i.imgur.com/hKWqyl1.gif)\r\n\r\n-----\r\n# Usage\r\n**Get SlideUp library**\r\n\r\nAdd the JitPack repository to your build file.\r\nAdd it in your root build.gradle at the end of repositories:\r\n```groovy\r\nallprojects {\r\n  repositories {\r\n    ...\r\n    maven { url \'https://jitpack.io\' }\r\n  }\r\n}\r\n```\r\nAdd the dependency\r\n```groovy\r\ndependencies {\r\n    compile "com.github.mancj:SlideUp-Android:$current_version"\r\n    compile \'ru.ztrap:RxSlideUp2:2.x.x\' //optional, for reactive listeners based on RxJava-2\r\n    compile \'ru.ztrap:RxSlideUp:1.x.x\' //optional, for reactive listeners based on RxJava\r\n}\r\n```\r\n\r\n**To add the SlideUp into your project, follow these three simple steps:**\r\n\r\n### Step 1:\r\ncreate any type of layout\r\n\r\n```xml\r\n<LinearLayout\r\n  android:id="@+id/slideView"\r\n  android:layout_width="match_parent"\r\n  android:layout_height="match_parent"/>\r\n```\r\n\r\n### Step 2:\r\nFind that view in your activity/fragment\r\n```java\r\nView slideView = findViewById(R.id.slideView);\r\n```\r\n\r\n### Step 3:\r\nCreate a SlideUp object and pass in your view\r\n```java\r\nslideUp = new SlideUpBuilder(slideView)\r\n                .withStartState(SlideUp.State.HIDDEN)\r\n                .withStartGravity(Gravity.BOTTOM)\r\n\r\n                //.withSlideFromOtherView(anotherView)\r\n                //.withGesturesEnabled()\r\n                //.withHideSoftInputWhenDisplayed()\r\n                //.withInterpolator()\r\n                //.withAutoSlideDuration()\r\n                //.withLoggingEnabled()\r\n                //.withTouchableAreaPx()\r\n                //.withTouchableAreaDp()\r\n                //.withListeners()\r\n                //.withSavedState()\r\n                .build();\r\n```\r\n### Enjoy!\r\n\r\n# Reactive extensions\r\n\r\n - [RxSlideUp](https://github.com/zTrap/RxSlideUp) - Listening events in reactive style\r\n\r\n# Advanced example\r\n[SlideUpViewActivity.java](https://github.com/mancj/SlideUp-Android/blob/master/app/src/main/java/com/example/slideup/SlideUpViewActivity.java)\r\n```java\r\nrootView = findViewById(R.id.rootView);\r\nslideView = findViewById(R.id.slideView);\r\ndim = findViewById(R.id.dim);\r\nfab = (FloatingActionButton) findViewById(R.id.fab);\r\n\r\n\r\nslideUp = new SlideUpBuilder(slideView)\r\n         .withListeners(new SlideUp.Listener.Events() {\r\n             @Override\r\n             public void onSlide(float percent) {\r\n                 dim.setAlpha(1 - (percent / 100));\r\n                 if (percent < 100 && fab.isShown()) {\r\n                    // slideUp started showing\r\n                    fab.hide();\r\n                 }\r\n             }\r\n\r\n             @Override\r\n             public void onVisibilityChanged(int visibility) {\r\n                 if (visibility == View.GONE){\r\n                     fab.show();\r\n                 }\r\n             }\r\n         })\r\n         .withStartGravity(Gravity.TOP)\r\n         .withLoggingEnabled(true)\r\n         .withStartState(SlideUp.State.HIDDEN)\r\n         .withSlideFromOtherView(rootView)\r\n         .build();\r\n\r\nfab.setOnClickListener(new View.OnClickListener() {\r\n    @Override\r\n    public void onClick(View view) {\r\n        slideUp.show();\r\n    }\r\n});\r\n```\r\nThe player is designed by [Jauzee](https://github.com/Jauzee)\r\n \r\n# Migration\r\n \r\n - See [MIGRATION.md](https://github.com/mancj/SlideUp-Android/blob/master/MIGRATION.md)\r\n \r\n# Documentation\r\n \r\n - See [javadocs](https://jitpack.io/com/github/mancj/SlideUp-Android/2.2.7.1/javadoc/)\r\n \r\n# Changelog\r\n\r\n - See [CHANGELOG.md](https://github.com/mancj/SlideUp-Android/blob/master/CHANGELOG.md)\r\n\r\n# Contract\r\n\r\nPlease let us know, if you use the library in your applications. \r\nWe want to collect and publish this list.\r\n\r\n# License\r\n\r\n    MIT License\r\n\r\n    Copyright (c) 2018 Mansur\r\n\r\n    Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    of this software and associated documentation files (the "Software"), to deal\r\n    in the Software without restriction, including without limitation the rights\r\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    copies of the Software, and to permit persons to whom the Software is\r\n    furnished to do so, subject to the following conditions:\r\n\r\n    The above copyright notice and this permission notice shall be included in all\r\n    copies or substantial portions of the Software.\r\n\r\n    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n    SOFTWARE.\r\n'