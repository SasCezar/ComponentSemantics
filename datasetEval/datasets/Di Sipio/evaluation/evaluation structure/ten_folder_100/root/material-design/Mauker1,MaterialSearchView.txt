b'# MaterialSearchView\nAndroid SearchView based on Material Design guidelines. The MaterialSearchView will overlay a Toolbar or ActionBar as well as display a ListView for the user to show suggested or recent searches.\n\n[![Download](https://img.shields.io/badge/download-1.2.3-blue.svg)](https://bintray.com/mauker/maven/MaterialSearchView/_latestVersion)\n[![APK size](https://img.shields.io/badge/Size-56%20KB-e91e63.svg)](http://www.methodscount.com/?lib=br.com.mauker.materialsearchview%3Amaterialsearchview%3A1.2.1)\n[![Build Status](https://travis-ci.org/Mauker1/MaterialSearchView.svg?branch=master)](https://travis-ci.org/Mauker1/MaterialSearchView)\n\n\n\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-MaterialSearchView-green.svg?style=true)](https://android-arsenal.com/details/1/3469)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/Mauker1/MaterialSearchView/blob/master/LICENSE)\n\n<a href=\'https://ko-fi.com/A623L7G\' target=\'_blank\'><img height=\'36\' style=\'border:0px;height:36px;\' src=\'https://az743702.vo.msecnd.net/cdn/kofi1.png?v=f\' border=\'0\' alt=\'Buy Me a Coffee at ko-fi.com\' /></a> \n\n## Download\nTo add the MaterialSearchView library to your Android Studio project, simply add the following gradle dependency:\n```java\nimplementation \'br.com.mauker.materialsearchview:materialsearchview:1.2.3\'\n```\n\nThis library is supported with a min SDK of 14.\n\n**Important note:** If you\'re still using version 1.0.3, it\'s recommended to upgrade to the latest version as soon as possible. For more information, please see [this issue](https://github.com/Mauker1/MaterialSearchView/issues/7).\n\n## Setup\n\nBefore you can use this lib, you have to implement a class named `MsvAuthority` inside the `br.com.mauker` package on your app module, and it should have a public static String variable called `CONTENT_AUTHORITY`. Give it the value you want and **don\'t forget** to add the same name on your manifest file. The lib will use this file to set the Content Provider authority.\n\n**Example:**\n\n**MsvAuthority.java**\n\n```java\npackage br.com.mauker;\n\npublic class MsvAuthority {\n    public static final String CONTENT_AUTHORITY = "br.com.mauker.materialsearchview.searchhistorydatabase";\n}\n```\n\nOr if you\'re using Kotlin:\n\n**MsvAuthority.kt**\n```Kotlin\npackage br.com.mauker\n\nobject MsvAuthority {\n    const val CONTENT_AUTHORITY: String = "br.com.mauker.materialsearchview.searchhistorydatabase"\n}\n```\n\n**AndroidManifest.xml**\n\n```xml\n<?xml version="1.0" encoding="utf-8"?>\n<manifest ...>\n\n    <application ... >\n        <provider\n        android:name="br.com.mauker.materialsearchview.db.HistoryProvider"\n        android:authorities="br.com.mauker.materialsearchview.searchhistorydatabase"\n        android:exported="false"\n        android:protectionLevel="signature"\n        android:syncable="true"/>\n    </application>\n\n</manifest>\n```\n\n**Proguard note:** Some of you might experience some problems with Proguard deleting the authority class, to solve those problems, add the following lines on your proguard file:\n\n```\n-keep class br.com.mauker.MsvAuthority\n-keepclassmembers class br.com.mauker.** { *; }\n```\n\n## Usage\n\nTo open the search view on your app, add the following code **to the end of your layout**:\n\n```xml\n<br.com.mauker.materialsearchview.MaterialSearchView\n    android:id="@+id/search_view"\n    android:layout_width="match_parent"\n    android:layout_height="match_parent"/>\n```    \n\nThen, inside your `Activity` get the reference:\n\n```java\n// Activity:\nMaterialSearchView searchView = (MaterialSearchView) findViewById(R.id.search_view);\n```\n\n- To open the search view, simply call the `searchView.openSearch()` method.\n\n- To close the search view, call the `searchView.closeSearch()` method.\n\n- You can check if the view is open by using the `searchView.isOpen()` method.\n\n- As from Version 1.2.1 it\'s also possible to get the query anytime by using the `searchView.getCurrentQuery()` method.\n\n- To close the search view using the back button, put the following code on your `Activity`:\n\n```java\n@Override\npublic void onBackPressed() {\n    if (searchView.isOpen()) {\n        // Close the search on the back button press.\n        searchView.closeSearch();\n    } else {\n        super.onBackPressed();\n    }\n}\n```\n\nFor more examples on how to use this lib, [check the sample app code here](https://github.com/Mauker1/MaterialSearchView/blob/master/app/src/main/java/br/com/mauker/materialsearchview/app/MainActivity.java).\n\n## Search history and suggestions\n\nYou can provide search suggestions by using the following methods:\n\n- `addSuggestions(String[] suggestions)`\n- `addSuggestions(ArrayList<String> suggestions)`\n\nIt\'s also possible to add a single suggestion using the following method:\n\n- `addSuggestion(String suggestion)`\n\nTo remove all the search suggestions use:\n\n- `clearSuggestions()`\n\nAnd to remove a single suggestion, use the following method:\n\n- `removeSuggestion(String suggestion)`\n\nThe search history is automatically handled by the view, and it can be cleared by using:\n\n- `clearHistory()`\n\nYou can also remove both by using the method below:\n\n- `clearAll()`\n\n## Modifying the suggestion list behavior\n\nThe suggestion list is based on a `ListView`, and as such you can define the behavior of the item click by using the `MaterialSearchView#setOnItemClickListener()` method.\n\nIf you want to submit the query from the selected suggestion, you can use the snippet below:\n\n```java\nsearchView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n    @Override\n    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n        // Do something when the suggestion list is clicked.\n        String suggestion = searchView.getSuggestionAtPosition(position);\n\n        searchView.setQuery(suggestion, true);\n    }\n});\n```\n\nIf you just want to set the text on the search view text field when the user selects the suggestion, change the second argument from the  `searchView#setQuery()` from `true` to `false`.\n\n## Styling the View\n\nYou can change how your MaterialSearchView looks like. To achieve that effect, try to add the following lines to your styles.xml:\n\n```xml\n<style name="MaterialSearchViewStyle">\n        <style name="MaterialSearchViewStyle">\n            <item name="searchBackground">@color/white_ish</item>\n            <item name="searchVoiceIcon">@drawable/ic_action_voice_search</item>\n            <item name="searchCloseIcon">@drawable/ic_action_navigation_close</item>\n            <item name="searchBackIcon">@drawable/ic_action_navigation_arrow_back</item>\n            <item name="searchSuggestionBackground">@color/search_layover_bg</item>\n            <item name="historyIcon">@drawable/ic_history_white</item>\n            <item name="suggestionIcon">@drawable/ic_action_search_white</item>\n            <item name="listTextColor">@color/white_ish</item>\n            <item name="searchBarHeight">?attr/actionBarSize</item>\n            <item name="voiceHintPrompt">@string/hint_prompt</item>\n            <item name="android:textColor">@color/black</item>\n            <item name="android:textColorHint">@color/gray_50</item>\n            <item name="android:hint">@string/search_hint</item>\n            <item name="android:inputType">textCapWords</item>\n        </style>\n</style>\n```\n\nAlternatively, you can also style the Search View programmatically by calling the methods:\n\n- `setBackgroundColor(int color);`\n- `setTintAlpha(int alpha);`\n- `setSearchBarColor(int color);`\n- `setSearchBarHeight(int height);`\n- `setTextColor(int color);`\n- `setHintTextColor(int color);`\n- `setHint(String hint);`\n- `setVoiceHintPrompt(String voiceHint);`\n- `setVoiceIcon(DrawableRes int resourceId);`\n- `setClearIcon(DrawableRes int resourceId);`\n- `setBackIcon(DrawableRes int resourceId);`\n- `setSuggestionBackground(DrawableRes int resourceId);`\n- `setHistoryIcon(@DrawableRes int resourceId);`\n- `setSuggestionIcon(@DrawableRes int resourceId);`\n- `setListTextColor(int color);`\n\nAnd add this line on your `br.com.mauker.materialsearchview.MaterialSearchView` tag:\n\n```xml\nstyle="@style/MaterialSearchViewStyle"\n```\n\nSo it\'ll look like:\n\n```xml\n<br.com.mauker.materialsearchview.MaterialSearchView\n    android:id="@+id/search_view"\n    android:layout_width="match_parent"\n    android:layout_height="match_parent"\n    style="@style/MaterialSearchViewStyle"/>\n```\n\n## Interfaces\nCurrently there are two interfaces that you can use to instantiate listeners for:\n\n- `OnQueryTextListener`: Use this interface to handle QueryTextChange or QueryTextSubmit events inside the MaterialSearchView.\n- `SearchViewListener`: You can use this interface to listen and handle the open or close events of the MaterialSearchView.\n\n\n## Languages\n\nThe MaterialSearchView supports the following languages:\n\n- English (en_US);\n- Brazillian Portuguese (pt_BR);\n- Italian (Thanks to [Francesco Donzello](https://github.com/wideawake));\n- French (Thanks to [Robin](https://github.com/RobinPetit));\n- Bosnian, Croatian and Serbian (Thanks to [Luke](https://github.com/luq-0));\n- Spanish (Thanks to [Gloix](https://github.com/Gloix)).\n\n## Sample GIF\n<img src=\'http://i.stack.imgur.com/C5LA4.gif\' width=\'450\' height=\'800\' />\n\n## More Info\n\nFor more use cases, and some examples, you can [check the sample app](https://github.com/Mauker1/MaterialSearchView/tree/master/app/src/main/java/br/com/mauker/materialsearchview/app).\n\n## Credits\nThis library was created by Maur\xc3\xadcio Pessoa with contributions from:\n- [Adam McNeilly](http://adammcneilly.com)\n- [Pier Betos](https://github.com/peterbetos)\n\nJCenter version was made possible with help from:\n\n- [Eric Cugota](https://github.com/tryadelion)\n\nThis project was inspired by the [MaterialSearchView](https://github.com/krishnakapil/MaterialSeachView) library by krishnakapil.\n\n## License\nThe MaterialSearchView library is available under the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0).\n'