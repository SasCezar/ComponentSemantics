b'# Android Material Intro Screen\n [ ![Download](https://api.bintray.com/packages/tangoagency/maven/material-intro-screen/images/download.svg) ](https://bintray.com/tangoagency/maven/material-intro-screen/_latestVersion)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/753f46972d8740d1984f8beb7d04fb9d)](https://www.codacy.com/app/TangoAgency/material-intro-screen?utm_source=github.com&utm_medium=referral&utm_content=TangoAgency/material-intro-screen&utm_campaign=badger)\n[![Build Status](https://travis-ci.org/TangoAgency/material-intro-screen.svg?branch=master)](https://travis-ci.org/TangoAgency/material-intro-screen)\n[![Android Arsenal Material Intro Screen](https://img.shields.io/badge/Android%20Arsenal-Material--Intro--Screen-green.svg?style=true)](http://android-arsenal.com/details/1/4368)\n\nMaterial intro screen is inspired by [Material Intro] and developed with love from scratch. I decided to rewrite completely almost all features in order to make Android intro screen easy to use for everyone and extensible as possible.\n## Features\n  - [Easily add new slides][Intro Activity]\n  - [Custom slides][Custom Slide]\n  - [Parallax slides][Parallax Slide]\n  - Easy extensible api\n  - Android TV support!\n  - Material design at it\'s best!!!\n\n| [Simple slide][SimpleSlide] | [Custom slide][Custom Slide] | [Permission slide][PermissionSlide] | [Finish slide][FinishSlide]\n|:-:|:-:|:-:|:-:|\n| ![Simple slide] | ![Customslide] | ![Permission slide] | ![Finish slide] |\n\n## Usage\n### Step 1:\n#### Add gradle dependecy\n```\ndependencies {\n  compile \'agency.tango.android:material-intro-screen:{latest_release}\'\n}\n```\n### Step 2:\n#### First, your [intro activity][Intro Activity] class needs to extend MaterialIntroActivity:\n```java\npublic class IntroActivity extends MaterialIntroActivity\n```\n### Step 3:\n#### Add activity to [manifest][Manifest] with defined theme:\n```xml\n        <activity\n            android:name=".IntroActivity"\n            android:theme="@style/Theme.Intro" />\n```\n### Step 4: \n#### [Add slides:][Intro Activity]\n```java\n @Override\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        \n        addSlide(new SlideFragmentBuilder()\n                .backgroundColor(R.color.colorPrimary)\n                .buttonsColor(R.color.colorAccent)\n                .possiblePermissions(new String[]{Manifest.permission.CALL_PHONE, Manifest.permission.READ_SMS})\n                .neededPermissions(new String[]{Manifest.permission.CAMERA, Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION})\n                .image(agency.tango.materialintroscreen.R.drawable.ic_next)\n                .title("title 3")\n                .description("Description 3")\n                .build(),\n                new MessageButtonBehaviour(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View v) {\n                        showMessage("We provide solutions to make you love your work");\n                    }\n                }, "Work with love"));\n}\n```\n#### Explanation of SlideFragment usage:\n  - ```possiblePermissions``` &#8702; permissions which are not necessary to be granted\n  - ```neededPersmissions``` &#8702; permission which are needed to be granted to move further from that slide\n  - ```MessageButtonBehaviour``` &#8702; create a new instance only if you want to have a custom action or text on a message button\n\n### Step 5: \n#### Customize Intro Activity:\n  - ```setSkipButtonVisible()``` &#8702; show skip button instead of back button on the left bottom of screen\n  - ```hideBackButton()``` &#8702; hides any button on the left bottom of screen\n  - ```enableLastSlideAlphaExitTransition()``` &#8702; set if the last slide should disapear with alpha hiding effect\n\n#### Customizing view animations: \n\nYou can set enter, default and exit translation for every view in intro activity. To achive this you need to get translation wrapper for chosen view (for example: ```getNextButtonTranslationWrapper()```) and set there new class which will implement ```IViewTranslation```\n```java\ngetBackButtonTranslationWrapper()\n                .setEnterTranslation(new IViewTranslation() {\n                    @Override\n                    public void translate(View view, @FloatRange(from = 0, to = 1.0) float percentage) {\n                        view.setAlpha(percentage);\n                    }\n                });\n```\n#### Available [translation wrappers][TranslationWrapper]:\n- ```getNextButtonTranslationWrapper()```\n- ```getBackButtonTranslationWrapper()```\n- ```getPageIndicatorTranslationWrapper()```\n- ```getViewPagerTranslationWrapper()``` \n- ```getSkipButtonTranslationWrapper()``` \n\n## Custom slides\n#### Of course you are able to implement completely custom slides. You only need to extend SlideFragment and override following functions:\n - ```backgroundColor()```\n - ```buttonsColor()```\n - ```canMoveFurther()``` (only if you want to stop user from being able to move further before he will do some action)\n - ```cantMoveFurtherErrorMessage()``` (as above)\n \n#### If you want to use parallax in a fragment please use one of the below views:\n  - [```ParallaxFrameLayout```][ParallaxFrame]\n  - [```ParallaxLinearLayout```][ParallaxLinear]\n  - [```ParallaxRelativeLayout```][ParallaxRelative]\n\n#### And set there the [app:layout_parallaxFactor][ParallaxFactor] attribute:\n```xml\n<agency.tango.materialintroscreen.parallax.ParallaxLinearLayout\nxmlns:android="http://schemas.android.com/apk/res/android">\n\n    <ImageView\n        android:id="@+id/image_slide"\n        app:layout_parallaxFactor="0.6"/>\n```\n\nAll features which are not available in simple Slide Fragment are shown here: [Custom Slide]\n\n## Things I have used to create this\n - For parallax I have used files from [Material Intro] by [@HeinrichReimer]\n - [InkPageIndicator.java] by [@NickButcher]\n - Images used to create sample app are from [freepik]\n - For over scroll effect on last slide I have partially used [Android-Overscroll-ViewPager]\n \n## Getting Help\n\nTo report a specific problem or feature request, [open a new issue on Github](https://github.com/TangoAgency/material-intro-screen/issues/new).\n\n## Company\n \n[![Facebook](https://github.com/TangoAgency/material-intro-screen/blob/master/images/facebook.png)](https://www.facebook.com/TangoDigitalAgency)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![Twitter](https://github.com/TangoAgency/material-intro-screen/blob/master/images/twitter.png)](https://twitter.com/Tango_Agency)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![LinkedIn](https://github.com/TangoAgency/material-intro-screen/blob/master/images/linkedin.png)](https://www.linkedin.com/company/tango-digital-agency)\n\n[Here](https://github.com/TangoAgency/) you can see open source work developed by Tango Agency.\n \nWhether you\'re searching for a new partner or trusted team for creating your new great product we are always ready to start work with you. \n\nYou can contact us via contact@tango.agency.\nThanks in advance.\n \n[Custom Slide]: <https://github.com/TangoAgency/material-intro-screen/blob/master/app/src/main/java/agency/tango/materialintro/CustomSlide.java>\n[Material Intro]: <https://github.com/HeinrichReimer/material-intro/tree/master/library/src/main/java/com/heinrichreimersoftware/materialintro/view/parallax>\n[@HeinrichReimer]: <https://github.com/HeinrichReimer>\n[InkPageIndicator.java]: <https://github.com/nickbutcher/plaid/blob/master/app/src/main/java/io/plaidapp/ui/widget/InkPageIndicator.java>\n[@NickButcher]: <https://github.com/nickbutcher>\n[freepik]: <http://www.freepik.com/>\n[Simple slide]: <https://github.com/TangoAgency/material-intro-screen/blob/master/images/simple_slide.gif>\n[Customslide]: <https://github.com/TangoAgency/material-intro-screen/blob/master/images/custom_slide.gif>\n[Permission slide]: <https://github.com/TangoAgency/material-intro-screen/blob/master/images/permissions_slide.gif>\n[Finish slide]: <https://github.com/TangoAgency/material-intro-screen/blob/master/images/finish_slide.gif>\n[Intro Activity]: <https://github.com/TangoAgency/material-intro-screen/blob/master/app/src/main/java/agency/tango/materialintro/IntroActivity.java>\n[Parallax Slide]: <https://github.com/TangoAgency/material-intro-screen/blob/master/app/src/main/res/layout/fragment_custom_slide.xml>\n[PermissionSlide]: <https://github.com/TangoAgency/material-intro-screen/blob/master/app/src/main/java/agency/tango/materialintro/IntroActivity.java#L52>\n[FinishSlide]: <https://github.com/TangoAgency/material-intro-screen/blob/master/app/src/main/java/agency/tango/materialintro/IntroActivity.java#L19>\n[SimpleSlide]: <https://github.com/TangoAgency/material-intro-screen/blob/master/app/src/main/java/agency/tango/materialintro/IntroActivity.java#L43>\n[ParallaxFrame]: <https://github.com/TangoAgency/material-intro-screen/blob/master/material-intro-screen/src/main/java/agency/tango/materialintroscreen/parallax/ParallaxFrameLayout.java>\n[ParallaxLinear]: <https://github.com/TangoAgency/material-intro-screen/blob/master/material-intro-screen/src/main/java/agency/tango/materialintroscreen/parallax/ParallaxLinearLayout.java>\n[ParallaxRelative]: <https://github.com/TangoAgency/material-intro-screen/blob/master/material-intro-screen/src/main/java/agency/tango/materialintroscreen/parallax/ParallaxRelativeLayout.java>\n[ParallaxFactor]: <https://github.com/TangoAgency/material-intro-screen/blob/master/material-intro-screen/src/main/res/layout/fragment_slide.xml#L29>\n[Manifest]: <https://github.com/TangoAgency/material-intro-screen/blob/master/app/src/main/AndroidManifest.xml#L28>\n[TranslationWrapper]: <https://github.com/TangoAgency/material-intro-screen/blob/master/material-intro-screen/src/main/java/agency/tango/materialintroscreen/animations/ViewTranslationWrapper.java>\n[Android-Overscroll-ViewPager]: <https://github.com/iamjiex/Android-Overscroll-ViewPager>'