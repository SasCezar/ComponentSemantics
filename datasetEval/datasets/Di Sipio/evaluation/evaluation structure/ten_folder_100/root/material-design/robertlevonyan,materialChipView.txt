b'# Material Chip View\n\n|Material Chip view. Can be used as tags for categories, contacts or creating text clouds.|<img src="https://github.com/robertlevonyan/materialChipView/blob/master/Images/chip.png"  width="500" />|\n|----------------------------------------------------------------------------------------------|-----------|\n\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Material%20Chip%20View-yellow.svg?style=flat-square)](https://android-arsenal.com/details/1/5396) [![API](https://img.shields.io/badge/API-17%2B-yellow.svg?style=flat-square)](https://android-arsenal.com/api?level=14) [ ![Download](https://api.bintray.com/packages/robertlevonyan/maven/MaterialChipView/images/download.svg) ](https://bintray.com/robertlevonyan/maven/MaterialChipView/_latestVersion)\n\n## Setup\n\n#### Gradle:\n\nAdd following line of code to your module(app) level gradle file\n\n```java\n    implementation \'com.robertlevonyan.view:MaterialChipView:2.0.3\'\n```\n\n#### Maven:\n\n```xml\n  <dependency>\n    <groupId>com.robertlevonyan.view</groupId>\n    <artifactId>MaterialChipView</artifactId>\n    <version>2.0.3</version>\n    <type>pom</type>\n  </dependency>\n```\n\n## Usage\n\n```xml\n  <com.robertlevonyan.views.chip.Chip\n    android:id="@+id/chip"\n    android:layout_width="wrap_content"\n    android:layout_height="wrap_content"\n    android:text="@string/customTitle" />\n```\n![alt text](https://github.com/robertlevonyan/materialChipView/blob/master/Images/chip.jpg)\n\n### Cutomizing Chip\n\n```xml\n    app:mcv_closable="true"\n```\n![alt text](https://github.com/robertlevonyan/materialChipView/blob/master/Images/chip_closable.jpg)\n\n```xml\n    app:mcv_selectable="true"\n```\n|![alt text](https://github.com/robertlevonyan/materialChipView/blob/master/Images/chip_selectable_0.jpg)|![alt text](https://github.com/robertlevonyan/materialChipView/blob/master/Images/chip_selectable_1.jpg)|\n|----------------------------------------------------------------------------------------------|-----------|\n\n```xml\n    app:mcv_chipIcon="@drawable/customIcon"\n```\n![alt text](https://github.com/robertlevonyan/materialChipView/blob/master/Images/chip_icon.jpg)\n\n```xml\n    app:mcv_backgroundColor="@color/customChipBackgroundColor"\n    app:mcv_closeColor="@color/customCloseIconColor"\n    app:mcv_selectedBackgroundColor="@color/customSelectedChipColor"\n    app:mcv_textColor="@color/customTitleColor"\n```\n\n|![alt text](https://github.com/robertlevonyan/materialChipView/blob/master/Images/chip_cloud_0.jpg)|![alt text](https://github.com/robertlevonyan/materialChipView/blob/master/Images/chip_cloud_1.jpg)|\n|----------------------------------------------------------------------------------------------|-----------|\n\n### Attributes\n\n|Custom Atributes                 |Description                                 |\n|---------------------------------|--------------------------------------------|\n|`app:mcv_textColor`              |Custom color for text label                 |\n|`app:mcv_backgroundColor`        |Custom background color                     |\n|`app:mcv_selectedBackgroundColor`|Custom background color when selected       |\n|`app:mcv_chipIcon`               |Icon resource for Chip                      |\n|`app:mcv_closable`               |Chip with close button                      |\n|`app:mcv_closeColor`             |Custom color for close button               |\n|`app:mcv_selectable`             |Chip with selection button                  |\n|`app:mcv_selectedTextColor`      |Custom color for label when selected        |\n|`app:mcv_cornerRadius`           |Change the corner radius of your Chip       |\n|`app:mcv_strokeSize`             |Add stroke to your Chip                     |\n|`app:mcv_strokeColor`            |Choose a custom stroke color for your Chip  |\n|`app:mcv_iconText`               |Instead of an image create icon from String |\n|`app:mcv_iconTextColor`          |Select a color for your String icon         |\n|`app:mcv_iconTextBackgroundColor`|Select a background color for String icon   |\n\n### Setting Listeners\n\n```kotlin\n    val chip = findViewById(R.id.chip);\n```\nChip click listener\n```kotlin\n    chip.setOnClickListener { view ->\n         //Your action here...\n    }\n```\n\nOn Close button click listener\n```kotlin\n    chip.setOnCloseClickListener { view ->\n         //Your action here...\n    }\n\n```\n\nOn Icon click listener\n```kotlin\n    chip.setOnIconClickListener { view ->\n         //Your action here...\n    }\n\n```\n\nOn Select button click listener\n```kotlin\n    chip.setOnSelectClickListener { view: View, selected: Boolean ->\n         //Your action here...\n    }\n```\n### Customizing Chip from code\n\n```kotlin\n        chip.text = "My awesome Chip" // Set Chip label\n        chip.chipTextColor = chipTextColor // Set Chip label color\n        chip.chipBackgroundColor = chipBackgroundColor //Set custom background color\n        chip.chipSelectedBackgroundColor = chipSelectedBackgroundColor //Set custom background color when selected\n        chip.chipIcon = myIconDrawable //Set Icon Drawable for Chip\n        chip.chipIconBitmap = myIconBitmap //Set Icon Bitmap for Chip\n        chip.closable = true //Set Chip has close button\n        chip.chipCloseColor = chipCloseColor //Set custom color for close button\n        chip.chipSelectedCloseColor = chipSelectedCloseColor //Set custom color for close button on selected state\n        chip.selectable = false //Set Chip has selection button\n        chip.chipSelected = true // Set Chip selected\n        chip.chipSelectedTextColor = chipSelectedTextColor //Set custom color for label when selected\n        chip.cornerRadius = 5 // Set corner radius of your Chip\n        chip.strokeSize = 2 // Set width of stroke\n        chip.strokeColor = strokeColor // Set stroke color for your Chip\n        chip.setIconText(text, iconTextColor, iconTextBackgroundColor); // Set Chip icon text, text color and background color (in case of Kotlin iconTextColor and iconTextBackgroundColor have default value of 0)\n```\n\n## Versions\n\n#### 2.0.1 - 2.0.3\n\nMinor changes, some missing parts pushed\n\n### 2.0.0\n\nNew version of the library. Fully rewritten with Kotlin and AndroidX ready \xf0\x9f\xa4\xa9 \n\n#### 1.2.1, 1.2.2\n\nGeneral bug fixed\n\n#### 1.1.3\n\nSelection option added\n\n#### 1.1.2\n\nIcon text issue fixed\n\n#### 1.1.1\n\nUpdated version of Material Chip View:\n    - the attribute names are changed to escape conflicts with other libs\n    - added new features like customizable corner radius and stroke\n    - recreation issue fixed for post Lollipop versions\n\n#### 1.0.1\n\nRecreation issues are fixed\n\n### 1.0.0\n\nFirst version of library\n\n## Contact\n\n- **Email**: me@robertlevonyan.com\n- **Website**: https://robertlevonyan.com/\n- **Medium**: https://medium.com/@RobertLevonyan\n- **Twitter**: https://twitter.com/@RobertLevonyan\n- **Facebook**: https://facebook.com/robert.levonyan\n- **Google Play**: https://play.google.com/store/apps/dev?id=5477562049350283357\n\n## Licence\n\n```\n    Material Chip View\xc2\xa9\n    Copyright 2017 Robert Levonyan\n    Url: https://github.com/robertlevonyan/materialChipView\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n```\n'