b'Please read [UPGRADE-v2.0.md](https://github.com/graphql-python/graphene/blob/master/UPGRADE-v2.0.md) to learn how to upgrade to Graphene `2.0`.\n\n---\n\n# ![Graphene Logo](http://graphene-python.org/favicon.png) Graphene-Django [![Build Status](https://travis-ci.org/graphql-python/graphene-django.svg?branch=master)](https://travis-ci.org/graphql-python/graphene-django) [![PyPI version](https://badge.fury.io/py/graphene-django.svg)](https://badge.fury.io/py/graphene-django) [![Coverage Status](https://coveralls.io/repos/graphql-python/graphene-django/badge.svg?branch=master&service=github)](https://coveralls.io/github/graphql-python/graphene-django?branch=master)\n\n\nA [Django](https://www.djangoproject.com/) integration for [Graphene](http://graphene-python.org/).\n\n## Documentation\n\n[Visit the documentation to get started!](https://docs.graphene-python.org/projects/django/en/latest/)\n\n## Quickstart\n\nFor installing graphene, just run this command in your shell\n\n```bash\npip install "graphene-django>=2.0"\n```\n\n### Settings\n\n```python\nINSTALLED_APPS = (\n    # ...\n    \'django.contrib.staticfiles\', # Required for GraphiQL\n    \'graphene_django\',\n)\n\nGRAPHENE = {\n    \'SCHEMA\': \'app.schema.schema\' # Where your Graphene schema lives\n}\n```\n\n### Urls\n\nWe need to set up a `GraphQL` endpoint in our Django app, so we can serve the queries.\n\n```python\nfrom django.urls import path\nfrom graphene_django.views import GraphQLView\n\nurlpatterns = [\n    # ...\n    path(\'graphql\', GraphQLView.as_view(graphiql=True)),\n]\n```\n\n## Examples\n\nHere is a simple Django model:\n\n```python\nfrom django.db import models\n\nclass UserModel(models.Model):\n    name = models.CharField(max_length=100)\n    last_name = models.CharField(max_length=100)\n```\n\nTo create a GraphQL schema for it you simply have to write the following:\n\n```python\nfrom graphene_django import DjangoObjectType\nimport graphene\n\nclass User(DjangoObjectType):\n    class Meta:\n        model = UserModel\n\nclass Query(graphene.ObjectType):\n    users = graphene.List(User)\n\n    def resolve_users(self, info):\n        return UserModel.objects.all()\n\nschema = graphene.Schema(query=Query)\n```\n\nThen you can simply query the schema:\n\n```python\nquery = \'\'\'\n    query {\n      users {\n        name,\n        lastName\n      }\n    }\n\'\'\'\nresult = schema.execute(query)\n```\n\nTo learn more check out the following [examples](examples/):\n\n* **Schema with Filtering**: [Cookbook example](examples/cookbook)\n* **Relay Schema**: [Starwars Relay example](examples/starwars)\n\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## Release Notes\n\n* See [Releases page on github](https://github.com/graphql-python/graphene-django/releases)\n'