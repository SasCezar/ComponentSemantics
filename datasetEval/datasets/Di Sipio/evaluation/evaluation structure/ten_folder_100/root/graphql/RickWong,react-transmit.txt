b'![](http://i.imgur.com/X3JE4Ev.png?1)\n\n[View live demo](https://edealer.nl/react-transmit/) \n\n# React Transmit\n\n[Relay](https://facebook.github.io/relay/)-inspired library based on Promises instead of GraphQL.\n\nInspired by: [Building the Facebook Newsfeed with Relay](http://facebook.github.io/react/blog/2015/03/19/building-the-facebook-news-feed-with-relay.html) (React blog)\n\n![version](https://img.shields.io/npm/v/react-transmit.svg) ![license](https://img.shields.io/npm/l/react-transmit.svg) [![Package Quality](http://npm.packagequality.com/shield/react-transmit.svg)](http://packagequality.com/#?package=react-transmit) ![npm installs](https://img.shields.io/npm/dt/react-transmit.svg) ![downloads](https://img.shields.io/github/downloads/RickWong/react-transmit/latest/total.svg)\n\n\n## Features\n\n- API similar to the official Relay API, adapted for Promises.\n- Higher-order Component (HoC) syntax is great for functional-style React.\n- Composable Promise-based queries using fragments.\n- Isomorphic architecture supports server-side rendering.\n- Also works with React Native!\n\n## Installation\n\n```bash\n\t# For web or Node:\n\tnpm install react-transmit\n\t\n\t# For React Native:\n\tnpm install react-transmit-native\n```\n\n## Usage\n\n**Newsfeed.js** (read the comments)\n\n````js\nimport React    from "react";\nimport Transmit from "react-transmit";  // Import Transmit.\nimport Story    from "./Story";\n\nconst Newsfeed = React.createClass({\n\trender () {\n\t\tconst {stories} = this.props;  // Fragments are guaranteed.\n\n\t\treturn <div>{stories.map(story => <Story story={story} />)}</div>;\n\t}\n});\n\n// Higher-order component that will fetch data for the above React component.\nexport default Transmit.createContainer(Newsfeed, {\n\tinitialVariables: {\n\t\tcount: 10  // Default variable.\n\t},\n\tfragments: {\n\t\t// Fragment names become the Transmit prop names.\n\t\tstories ({count}) {\n\t\t\t// This "stories" query returns a Promise composed of 3 other Promises.\n\t\t\treturn Promise.all([\n\t\t\t\tStory.getFragment("story", {storyId: 1}),\n\t\t\t\tStory.getFragment("story", {storyId: 2}),\n\t\t\t\tStory.getFragment("story", {storyId: 3})\n\t\t\t]);\n\t\t},\n\t\tsomethingDeferred () {\n\t\t\t// Return the promise wrapped in a function to mark this fragment as non-critical.\n\t\t\treturn () => Promise.resolve(true);\n\t\t}\n\t}\n});\n````\n**Story.js** (read the comments)\n\n````js\nimport React    from "react";\nimport Transmit from "react-transmit";  // Import Transmit.\n\nconst Story = React.createClass({\n\trender () {\n\t\tconst {story} = this.props; // Fragments are guaranteed.\n\t\t\n\t\treturn <p>{story.content}</p>;\n\t}\n});\n\nexport default Transmit.createContainer(Story, {\n\tfragments: {\n\t\t// This "story" fragment returns a Fetch API promise.\n\t\tstory ({storyId}) {\n\t\t\treturn fetch("https://some.api/stories/" + storyId).then(res => res.json());\n\t\t}\n\t}\n});\n````\n\n## Documentation\n\nSee [DOCS.md](https://github.com/RickWong/react-transmit/blob/master/DOCS.md)\n\n## Community\n\nLet\'s start one together! After you \xe2\x98\x85Star this project, follow me [@Rygu](https://twitter.com/rygu)\non Twitter.\n\n## License\n\nBSD 3-Clause license. Copyright \xc2\xa9 2015, Rick Wong. All rights reserved.\n'