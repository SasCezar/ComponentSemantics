b"> This readme is for gulp-babel v8 + Babel v7\n> Check the [7.x branch](https://github.com/babel/gulp-babel/tree/v7-maintenance) for docs with Babel v6 usage\n\n# gulp-babel [![npm](https://img.shields.io/npm/v/gulp-babel.svg?maxAge=2592000)](https://www.npmjs.com/package/gulp-babel) [![Build Status](https://travis-ci.org/babel/gulp-babel.svg?branch=master)](https://travis-ci.org/babel/gulp-babel)\n\n> Use next generation JavaScript, today, with [Babel](https://babeljs.io)\n\n*Issues with the output should be reported on the Babel [issue tracker](https://phabricator.babeljs.io/).*\n\n\n## Install\n\nInstall `gulp-babel` if you want to get the pre-release of the next version of `gulp-babel`.\n\n```\n# Babel 7\n$ npm install --save-dev gulp-babel @babel/core @babel/preset-env\n\n# Babel 6\n$ npm install --save-dev gulp-babel@7 babel-core babel-preset-env\n```\n\n## Usage\n\n```js\nconst gulp = require('gulp');\nconst babel = require('gulp-babel');\n\ngulp.task('default', () =>\n\tgulp.src('src/app.js')\n\t\t.pipe(babel({\n\t\t\tpresets: ['@babel/preset-env']\n\t\t}))\n\t\t.pipe(gulp.dest('dist'))\n);\n```\n\n\n## API\n\n### babel([options])\n\n#### options\n\nSee the Babel [options](http://babeljs.io/docs/en/options), except for `sourceMaps` and `filename` which is handled for you. Also, keep in mind that options will be loaded from [config files](http://babeljs.io/docs/en/config-files) that apply to each file.\n\n## Source Maps\n\nUse [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps) like this:\n\n```js\nconst gulp = require('gulp');\nconst sourcemaps = require('gulp-sourcemaps');\nconst babel = require('gulp-babel');\nconst concat = require('gulp-concat');\n\ngulp.task('default', () =>\n\tgulp.src('src/**/*.js')\n\t\t.pipe(sourcemaps.init())\n\t\t.pipe(babel({\n\t\t\tpresets: ['@babel/preset-env']\n\t\t}))\n\t\t.pipe(concat('all.js'))\n\t\t.pipe(sourcemaps.write('.'))\n\t\t.pipe(gulp.dest('dist'))\n);\n```\n\n\n## Babel Metadata\n\nFiles in the stream are annotated with a `babel` property, which contains the metadata from [`babel.transform()`](https://babeljs.io/docs/usage/api/).\n\n#### Example\n\n```js\nconst gulp = require('gulp');\nconst babel = require('gulp-babel');\nconst through = require('through2');\n\nfunction logBabelMetadata() {\n\treturn through.obj((file, enc, cb) => {\n\t\tconsole.log(file.babel.test); // 'metadata'\n\t\tcb(null, file);\n\t});\n}\n\ngulp.task('default', () =>\n\tgulp.src('src/**/*.js')\n\t\t.pipe(babel({\n\t\t\t// plugin that sets some metadata\n\t\t\tplugins: [{\n\t\t\t\tpost(file) {\n\t\t\t\t\tfile.metadata.test = 'metadata';\n\t\t\t\t}\n\t\t\t}]\n\t\t}))\n\t\t.pipe(logBabelMetadata())\n)\n```\n\n\n## Runtime\n\nIf you're attempting to use features such as generators, you'll need to add `transform-runtime` as a plugin, to include the Babel runtime. Otherwise, you'll receive the error: `regeneratorRuntime is not defined`.\n\nInstall the runtime:\n\n```\n$ npm install --save-dev @babel/plugin-transform-runtime\n$ npm install --save @babel/runtime\n```\n\nUse it as plugin:\n\n```js\nconst gulp = require('gulp');\nconst babel = require('gulp-babel');\n\ngulp.task('default', () =>\n\tgulp.src('src/app.js')\n\t\t.pipe(babel({\n\t\t\tplugins: ['@babel/transform-runtime']\n\t\t}))\n\t\t.pipe(gulp.dest('dist'))\n);\n```\n\n\n## License\n\nMIT \xc2\xa9 [Sindre Sorhus](http://sindresorhus.com)\n"