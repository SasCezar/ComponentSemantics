b'[![Build Status](https://img.shields.io/travis/seek-oss/seek-style-guide/master.svg?style=flat-square)](http://travis-ci.org/seek-oss/seek-style-guide) [![npm](https://img.shields.io/npm/v/seek-style-guide.svg?style=flat-square)](https://www.npmjs.com/package/seek-style-guide) [![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat-square)](https://github.com/semantic-release/semantic-release) [![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg?style=flat-square)](http://commitizen.github.io/cz-cli/) [![Styled with Prettier](https://img.shields.io/badge/styled%20with-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\n\n# seek-style-guide\n\nLiving style guide for [SEEK](https://github.com/seek-oss), powered by [React](https://facebook.github.io/react), [webpack](https://webpack.js.org), [CSS Modules](https://github.com/css-modules/css-modules) and [Less](http://lesscss.org/).\n\nIf you\'re creating a new project from scratch, consider using [sku](https://github.com/seek-oss/sku), our officially supported front-end development toolkit. It\'s specially designed to get your project up and running as quickly as possible, while simplifying the process of keeping your development environment up to date.\n\nIf you\'d instead like to work on a custom webpack project, you can use [seek-style-guide-webpack](https://github.com/seek-oss/seek-style-guide-webpack) to streamline the integration process.\n\n## Installation\n\n```bash\n$ npm install --save seek-style-guide react react-dom react-helmet\n```\n\nOptionally, if not making use of the React components, you can install seek-style-guide by itself:\n\n```bash\n$ npm install --save seek-style-guide\n```\n\n## Upgrading\n\nConsumers can stay up to date by following our [release notes](https://github.com/seek-oss/seek-style-guide/releases), which are published automatically whenever a new release is published to [npm](https://www.npmjs.com/package/seek-style-guide).\n\n## Setup\n\nWrap your app with the `StyleGuideProvider` component to use any of the style guide components. For example:\n\n```js\nimport React, { Component } from \'react\';\nimport { StyleGuideProvider } from \'seek-style-guide/react\';\n\nexport default class App extends Component {\n  render() {\n    const locale = \'AU\';\n    const title = \'...\';\n    const meta = [{ name: \'description\', content: \'...\' }];\n    const link = [{ rel: \'canonical\', href: \'https://www.seek.com.au/\' }];\n\n    return (\n      <StyleGuideProvider locale={locale} title={title} meta={meta} link={link}>\n        ...\n      </StyleGuideProvider>\n    );\n  }\n}\n```\n\n`StyleGuideProvider`\'s props are used to set the page head properties using [Helmet](https://github.com/nfl/react-helmet).\n\n### Applying the Standard Header and Footer\n\nThe standard header and footer are provided as React components:\n\n```js\nimport { Header, Footer } from \'seek-style-guide/react\';\n```\n\nThe `<Header>` component accepts the following props:\n\n- **locale:** `\'AU\'` (default) or `\'NZ\'`\n- **authenticated:** `null/undefined` (default, authentication pending), `true` or `false`\n- **userName:** User\'s display name, when authenticated\n- **activeTab:** Text of the active tab, e.g. `\'Job Search\'`\n- **divider:** `true` (default, renders a blue divider below the navigation tabs) or `false`\n- **linkRenderer:** Function to allow custom rendering of links. The default implementation simply renders a standard link, spreading all props: `props => <a {...props} />`\n\nThe `<Footer>` component accepts the following props:\n\n- **locale:** See above.\n- **linkRenderer:** See above.\n\n## High Level Components\n\nAs much as possible, you should aim to minimise the amount of custom CSS you need to write. This is achieved by leveraging our suite of high level components, which are demonstrated on our [style guide documentation site](https://seek-oss.github.io/seek-style-guide/).\n\n## Low Level Styling\n\nFor more advanced pages, if you need to drop down into Less, the style guide provides a set of mixins and variables to make it easier to stay on brand.\n\nIn any style sheet that depends on the style guide, first import the Less theme by reference.\n\n```less\n@import (reference) \'~seek-style-guide/theme\';\n```\n\n### Responsive Breakpoint\n\nThe style guide exposes one responsive breakpoint:\n\n```less\n@responsive-breakpoint: 740px;\n```\n\nContent should otherwise be responsive within its container. The set of included components follow this model internally if you\'d like to get a sense of what this looks like in practice.\n\n### Color Variables\n\nAs much as possible, colors should be directly imported from the style guide.\n\nThe following colors are provided:\n\n```less\n// Brand colors\n@sk-blue-darker;\n@sk-blue-dark;\n@sk-blue;\n@sk-blue-light;\n@sk-blue-lighter;\n@sk-pink;\n@sk-green;\n@sk-green-light;\n@sk-purple;\n@sk-teal;\n@sk-orange;\n@sk-yellow;\n@sk-yellow-light;\n\n// Partner brand colors\n@sk-business;\n@sk-volunteer;\n@sk-learning-light;\n@sk-learning-medium;\n@sk-learning-dark;\n\n// Grays\n@sk-black;\n@sk-charcoal;\n@sk-mid-gray-dark;\n@sk-mid-gray-medium;\n@sk-mid-gray;\n@sk-mid-gray-light;\n@sk-gray-light;\n@sk-gray-lightest;\n@sk-off-white;\n@sk-white;\n\n// Element colors\n@sk-link;\n@sk-link-visited;\n@sk-focus;\n@sk-footer;\n@sk-background;\n@sk-form-accent;\n@sk-positive-light;\n@sk-positive;\n@sk-info-light;\n@sk-info;\n@sk-critical-light;\n@sk-critical;\n@sk-help-light;\n@sk-help;\n```\n\n### Z-Indexes\n\nTo ensure correct relative elements stacking order, z-index variables are provided:\n\n```less\n@z-index-header-overlay;\n@z-index-header;\n@z-index-page-overlay;\n@z-index-inline-overlay;\n@z-index-negative;\n```\n\n### Accessible Color Variants\n\nThe contrast ratio of certain foreground/background color combinations don\'t meet the [AA accessibility standards](https://www.w3.org/WAI/WCAG20/quickref/#qr-visual-audio-contrast-contrast) that we aim for. As a result, a suite of accessible variants have been provided:\n\n```less\n@sk-mid-gray-on-white;\n@sk-pink-on-gray-light;\n@sk-learning-dark-on-gray-light;\n@sk-business-on-gray-light;\n@sk-link-on-mid-gray-light;\n@sk-mid-gray-dark-on-gray-light;\n```\n\nPlease note that this list is not exhaustive, so contributions are encouraged. To validate color combinations, we recommend the use of the web-based tool [Accessible Colors](http://accessible-colors.com) by [@moroshko](https://github.com/moroshko).\n\n### Grid Variables\n\nIn order to ensure elements correctly follow the grid, element sizing should always be controlled by the following variables:\n\n```less\n@row-height;\n@gutter-width;\n@column-width;\n@container-width;\n```\n\nWhen defining a document content container:\n\n```less\n.element {\n  max-width: @container-width;\n}\n```\n\nWhen defining heights and vertical padding/margins:\n\n```less\n.element {\n  height: (@row-height * 3);\n  padding-bottom: @row-height;\n  margin-bottom: @row-height;\n}\n```\n\nWhen defining widths and horizontal padding/margins:\n\n```less\n.element {\n  width: (@column-width * 3);\n  padding-right: @gutter-width;\n  margin-right: @column-width;\n}\n```\n\nIt\'s important to note that any additions to these values (e.g. borders) will need to be negated to maintain rhythm:\n\n```less\n.element {\n  @border-width: 1px;\n  border-bottom: @border-width solid @sk-charcoal;\n  padding-bottom: @row-height - @border-width;\n}\n```\n\n## Standalone Header and Footer\n\nIf you\'re maintaining or updating a non-React app, a standalone JS + CSS + HTML package is provided when [installing from npm](#installation). The bundled JavaScript is provided as a [UMD package](https://github.com/umdjs/umd), providing a global `SeekHeaderFooter` object as a fallback for older apps without a proper module system.\n\nFirst, include the following files in your app:\n\n- `seek-style-guide/dist/header-footer/styles.css`\n- `seek-style-guide/dist/header-footer/client.js`\n\nThen, include the appropriate header and footer HTML snippets, switching based on locale:\n\n**Header:**\n\n- `seek-style-guide/dist/header-footer/header__au.html`\n- `seek-style-guide/dist/header-footer/header__nz.html`\n\n**Header, with "Career Advice" tab selected:**\n\n- `seek-style-guide/dist/header-footer/header__au__career_advice.html`\n- `seek-style-guide/dist/header-footer/header__nz__career_advice.html`\n\n_Note: If you need a different tab selected, feel free to open a pull request or raise an issue_\n\n**Footer:**\n\n- `seek-style-guide/dist/header-footer/footer__au.html`\n- `seek-style-guide/dist/header-footer/footer__nz.html`\n\nWhen the document is ready, rehydrate the header by triggering a client-side render:\n\n```js\nvar header = SeekHeaderFooter.renderHeader();\n\n// Update props later, if needed:\nheader.updateProps({ ...newProps });\n```\n\nFinally, render the footer following a similar pattern:\n\n```js\nvar footer = SeekHeaderFooter.renderFooter();\n\n// Again, update props later, if needed:\nfooter.updateProps({ ...newProps });\n```\n\nIf you\'d prefer not to use the pre-rendered header and footer snippets and purely render client-side, you can manually pass the container element and initial props to the render methods yourself.\n\nFirst, add placeholder elements to the page:\n\n```html\n<div id="header"></div>\n<div id="footer"></div>\n```\n\nThen, trigger the initial render client-side:\n\n```js\nvar header = SeekHeaderFooter.renderHeader(document.getElementById(\'header\'), {\n  ...props\n});\nvar footer = SeekHeaderFooter.renderHeader(document.getElementById(\'footer\'), {\n  ...props\n});\n```\n\nFor more detail on accepted props, read the React documentation for [applying the standard header and footer](#applying-the-standard-header-and-footer).\n\nIf you need to create React elements (e.g. when providing a `linkRenderer` function), the standalone bundle also exports React\'s [createElement](https://facebook.github.io/react/docs/react-api.html#createelement) function so you don\'t need to install React separately to gain access to it:\n\n```js\nvar link = SeekHeaderFooter.createElement(\'a\', { href: \'/jobs\' }, \'Jobs\');\n```\n\n## Advanced Usage\n\n### Babel Plugin\n\n**Note: If you\'re using [sku](https://github.com/seek-oss/sku), this plugin is already enabled.**\n\nIn order to help you optimise your bundle size, you can use [babel-plugin-seek-style-guide](https://github.com/seek-oss/babel-plugin-seek-style-guide).\n\n```bash\n$ npm install --save-dev babel-plugin-seek-style-guide\n```\n\nThen, add `seek-style-guide` to the plugins list in your Babel config. For example, in `.babelrc`:\n\n```json\n{\n  "plugins": ["seek-style-guide"]\n}\n```\n\n### Flow Type Checking\n\nWe\'ve opted to include flow type checking in this project. If you\'re unfamiliar with static type checking you should start by reading React\'s [overview](https://reactjs.org/docs/static-type-checking.html).\n\nThis is completely opt-in and if you\'ve decided not to use type checking in your project then **there is nothing you need to do**. It shouldn\'t impact your ability to include the style guide so long as you are using either [sku](https://github.com/seek-oss/sku) or our [webpack decorator](https://github.com/seek-oss/seek-style-guide-webpack).\n\nConversely, if you would like to opt-in to flow types you\'ll need to ensure that your `.flowconfig` includes a few exclusions and special options.\n\n```\n[ignore]\n.*/node_modules/config-chain/.*\n.*/node_modules/npmconf/.*\n\n[include]\n\n[libs]\n\n[lints]\n\n[options]\n# This is required to prevent errors to less file imports\nmodule.name_mapper.extension=\'less\' -> \'<PROJECT_ROOT>/no-declarations.js.flow\'\n\n# Good idea to ignore json too\nmodule.name_mapper.extension=\'json\' -> \'<PROJECT_ROOT>/no-declarations.js.flow\'\n```\n\n> _no-declarations.js.flow_ is just an empty file\n\n## Sketch asset generation\n\nOn every successful build (via `npm test`), `asketch.json` files (i.e. _almost_ Sketch files) are generated by [html-sketchapp](https://github.com/brainly/html-sketchapp) containing document styles and symbols. These are provided via the following JSON files:\n\n- `dist/asketch/document.asketch.json`\n- `dist/asketch/page.asketch.json`\n\nThese can be manually imported into Sketch by [downloading html-sketchapp](https://github.com/brainly/html-sketchapp/archive/master.zip) and installing `asketch2sketch.sketchplugin`.\n\nOnce in Sketch, open the "Plugins" menu and select "From \\*Almost\\* Sketch to Sketch". Assuming you\'ve run a full build of the style guide via `npm test`, you should now be able to select the `asketch.json` files in `dist/asketch`.\n\n## Contributing\n\nRefer to [CONTRIBUTING.md](./CONTRIBUTING.md).\n\nIf you\'re planning to change the public API, please [open a new issue](https://github.com/seek-oss/seek-style-guide/issues/new) and follow the provided RFC template in the [GitHub issue template](.github/ISSUE_TEMPLATE.md).\n\n## License\n\nMIT.\n'