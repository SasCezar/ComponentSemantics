b'# Not actively maintained. Caveat Emptor.\n\nI\'m not actively maintaining Pingy CLI anymore. I\'m happy to look at and merge PRs however if you wish to contribute.\n\n# Pingy CLI [![Join the chat at https://gitter.im/pingy-cli/Lobby](https://badges.gitter.im/pingy-cli/Lobby.svg)](https://gitter.im/pingy-cli/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![npm](https://img.shields.io/npm/v/@pingy/cli.svg)](https://www.npmjs.com/package/@pingy/cli)\n[![Build Status: Linux & Mac](https://travis-ci.org/pingyhq/pingy-cli.svg?branch=master)](https://travis-ci.org/pingyhq/pingy-cli)\n[![Build Status: Windows](https://ci.appveyor.com/api/projects/status/1dxlosw2p3iavo39/branch/master?svg=true&passingText=Windows%20Build%20-%20Passing)](https://ci.appveyor.com/project/davej/pingy-cli-str9v)\n\n> The Simple **Frontend Build** Tool. No Configuration, No Plugins.\n\n## Install\n\n```\nnpm install @pingy/cli --global\n```\n\n## Usage\n\n```\nUsage: pingy [command]\n\nCommands:\n\n  init            Initialise a new or existing website\n  dev [options]   Serve local development version of website\n  export          Export website to a folder for distribution\n  -h, --help      output usage information\n  -V, --version   output the version number\n```\n\n### `init`\n\n```\nUsage: pingy init [options]\n\nInitialise a new or existing website using Pingy\n\nOptions:\n\n  --yarn          Use Yarn instead of NPM for installing packages\n  --global-pingy  Don\'t install local version of Pingy CLI, use global version instead\n  --ask           Ask for all init options (don\'t prompt to use existing init options)\n  -h, --help      output usage information\n```\n\n`pingy init` will initialise a new or existing website in the current directory.\nAn interactive prompt will ask you a few questions and can then install\nrequested dependencies (e.g. Sass, Less, Babel, CoffeeScript etc..). Optionally,\n`init` can also scaffold some boilerplate files for your website.\n\nPingy is zero-configuration but it does place a `.pingy.json` file in your\nwebsite folder to help Pingy identify the root of your website. Currently, this\nonly contains the default folder name exporting files to (\'dist\'), you can\nchange this if you like.\n\n### `dev`\n\n```\nUsage: pingy dev [options]\n\nServe local development version of website\n\nOptions:\n\n  -h, --help         output usage information\n  -p, --port [port]  Use chosen port (otherwise random port will be used)\n  -q, --no-open      Don\'t automatically launch site in web browser\n```\n\nWill create a local development server and open the site in your default web\nbrowser. Automatically supports live browser reload, compilation/transpilation\n(with smart caching) and sourcemaps without any configuration.\n\n_Note: If you created your project with `pingy init`, then Pingy will try to add\na `run` script (if it doesn\'t already exist) to your `package.json`. In this\ncase, you can run `npm start`, instead of `pingy dev`._\n\n### `scaffold`\n\n```\nUsage: scaffold [options] <alias/url/path>\n\nScaffold a new website using a third-party project template\n\n<alias/url/path> can be:\n\n  Alias: \'bootstrap\' (View alias registry at: https://github.com/pingyhq/scaffolds)\n  Git URL: \'https://github.com/pingyhq/pingy-scaffold-bootstrap.git\'\n  Shorthand GitHub URL: \'pingyhq/bootstrap\'\n  Filesystem path: \'/Users/dave/code/pingy-scaffolds/bootstrap\'\n\n\nOptions:\n\n  --yarn          Use Yarn instead of NPM for installing packages\n  --global-pingy  Don\'t install local version of Pingy CLI, use global version instead\n  -h, --help      output usage information\n```\n\n### `export`\n\n`pingy export` will export the website so that it\'s ready to be uploaded\nwherever you like. Assets will be minified so that your website is super fast.\n\n#### Configuring Export\n\nYou can edit the `.pingy.json` file in your website root to change which folder\nyour site will be exported to. You can also add/remove to the `exclusions` array\nto exclude files/folder from being exported or compiled.\n\nThis is what the default `.pingy.json` file looks like:\n\n```json\n{\n  "exportDir": "dist",\n  "exclusions": [\n    {\n      "path": "node_modules",\n      "action": "exclude",\n      "type": "dir"\n    }\n  ]\n}\n```\n\nThis will export your site to a folder named \'dist\' within your website\'s\nfolder. It will also exclude the \'node_modules\' folder from your exported build.\n\nLet\'s try changing our `.pingy.json` to something a bit different:\n\n```json\n{\n  "exportDir": "exported-site",\n  "exclusions": [\n    {\n      "path": "bower_components",\n      "action": "dontCompile",\n      "type": "dir"\n    },\n    {\n      "path": "*.json",\n      "action": "exclude",\n      "type": "file"\n    }\n  ]\n}\n```\n\nThis will export your site to a folder named \'exported-site\' within your\nwebsite\'s folder. It will exclude any files that have the \'json\' extension and\nit will copy the \'bower_components\' folder and internal file but it won\'t\ncompile any of those files. For example, if Pingy CLI sees a SASS or\nCoffeeScript file then it won\'t try to compile it, it also won\'t try to minify\nHTML, CSS or JS files within \'bower_components\'.\n\n_Better documentation for this functionality is coming soon. For the moment,\nfeel free to create an issue if you want more information._\n\n## Is there an example repo where I can try out Pingy CLI?\n\nSure, you can clone\n[the repo for the website](https://github.com/pingyhq/pingy-cli-website). It\nuses Sass and Babel.\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2018 Pingy <mailto:team@pin.gy>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \'Software\'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n'