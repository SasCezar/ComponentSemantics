b'# eslint-plugin-babel\n\nAn `eslint` plugin companion to `babel-eslint`. `babel-eslint` does a great job at adapting `eslint`\nfor use with Babel, but it can\'t change the built in rules to support experimental features.\n`eslint-plugin-babel` re-implements problematic rules so they do not give false positives or negatives.\n\n> Requires Node 4 or greater\n\n### Install\n\n```sh\nnpm install eslint-plugin-babel --save-dev\n```\n\nLoad the plugin in your `.eslintrc` file:\n\n```json\n{\n  "plugins": [\n    "babel"\n  ]\n}\n```\n\nFinally enable all the rules you would like to use (remember to disable the\noriginal ones as well!).\n\n```json\n{\n  "rules": {\n    "babel/new-cap": 1,\n    "babel/camelcase": 1,\n    "babel/no-invalid-this": 1,\n    "babel/object-curly-spacing": 1,\n    "babel/quotes": 1,\n    "babel/semi": 1,\n    "babel/no-unused-expressions": 1,\n    "babel/valid-typeof": 1\n  }\n}\n```\n### Rules\n\nEach rule corresponds to a core `eslint` rule, and has the same options.\n\n\xf0\x9f\x9b\xa0: means it\'s autofixable with `--fix`.\n\n- `babel/new-cap`: Ignores capitalized decorators (`@Decorator`)\n- `babel/camelcase: doesn\'t complain about optional chaining (`var foo = bar?.a_b;`)\n- `babel/no-invalid-this`: doesn\'t fail when inside class properties (`class A { a = this.b; }`)\n- `babel/object-curly-spacing`: doesn\'t complain about `export x from "mod";` or `export * as x from "mod";` (\xf0\x9f\x9b\xa0)\n- `babel/quotes`: doesn\'t complain about JSX fragment shorthand syntax (`<>foo</>;`)\n- `babel/semi`: doesn\'t fail when using `for await (let something of {})`. Includes class properties (\xf0\x9f\x9b\xa0)\n- `babel/no-unused-expressions`: doesn\'t fail when using `do` expressions or [optional chaining](https://github.com/tc39/proposal-optional-chaining) (`a?.b()`).\n- `babel/valid-typeof`: doesn\'t complain when used with [BigInt](https://github.com/tc39/proposal-bigint) (`typeof BigInt(9007199254740991) === \'bigint\'`).\n\n#### Deprecated\n\n| Rule                             | Notes                              |\n|:---------------------------------|:-----------------------------------|\n| `babel/generator-star-spacing`   | Use [`generator-star-spacing`](http://eslint.org/docs/rules/generator-star-spacing) since eslint@3.6.0 |\n| `babel/object-shorthand`         | Use [`object-shorthand`](http://eslint.org/docs/rules/object-shorthand) since eslint@0.20.0 |\n| `babel/arrow-parens`             | Use [`arrow-parens`](http://eslint.org/docs/rules/arrow-parens) since eslint@3.10.0 |\n| `babel/func-params-comma-dangle` | Use [`comma-dangle`](http://eslint.org/docs/rules/comma-dangle) since eslint@3.8.0 |\n| `babel/array-bracket-spacing`    | Use [`array-bracket-spacing`](http://eslint.org/docs/rules/array-bracket-spacing) since eslint@3.9.0 |\n| `babel/flow-object-type`         | Use [`flowtype/object-type-delimiter`](https://github.com/gajus/eslint-plugin-flowtype#eslint-plugin-flowtype-rules-object-type-delimiter) since eslint-plugin-flowtype@2.23.0 |\n| `babel/no-await-in-loop`         | Use [`no-await-in-loop`](http://eslint.org/docs/rules/no-await-in-loop) since eslint@3.12.0 |\n'