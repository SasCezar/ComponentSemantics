b'[![NPM](https://nodei.co/npm/generator-webappstarter.png?downloads=true&downloadRank=true)](https://nodei.co/npm/generator-webappstarter/)\n  \n  >Note: This generator is supporting a very early stage app,things gonna change very frequently,so please do not fork it or do any pull request.\n  \nReadme\n=================\nwebappstarter generator will give you a Simple Mobile Web App Boilerplate and Structure!\n\n  >The App will automatically adjusts according to a device\xe2\x80\x99s screen size without any extra work. \n\nInstall\n========\n```shell\nnpm install -g generator-webappstarter\n```\n\nPrereqs and installation requirements\n=====================================\n1.install [node](https://nodejs.org/) and [Python](https://www.python.org/).\n\n2.install [yeoman](http://yeoman.io/).\n```shell\nnpm install -g yo\n```\n3.[optional]Clone this git repo to your local,and from the root of the repo,run\n```shell\nnpm link\n```\nto developing the generator locally.\n\nGenerator commands\n==================\n1.generate a new project,run\n\n```shell\nmkdir myProject\ncd myProject\nyo webappstarter\n```\nor run with `--skip-install` option to skip install dependencies\n\n```shell\nmkdir myProject\ncd myProject\nyo webappstarter --skip-install\n```\ninstall dependencies manually with `npm install` or just copy `node_modules` folder from another project which was generated by webappstarter.\n\n2.generate a new module,run\n\n```shell\n//this command will do:\n//add "html/include/view-modulename.html" and inlude it to "html/include/views.html"\n//add "scss/_view-modulename.scss" and import it to "scss/_view.scss"\n//add "src/app/view/ModuleNameView.js"\n//add "src/app/controller/ModuleNameController.js" and require it in src/app/App.js\n\nyo webappstarter:module ModuleName\n```\n3.generate a new model,run\n\n```shell\n//this command will do:\n//add "src/app/model/ModelNameModel.js"\n\nyo webappstarter:model ModelName\n```\n4.update your project\'s boilerplate and structure\n\n```shell\n//this command will update\n//"./src/core" directory\n//"./src/lib" directory\n//"./src/util" directory\n//"./src/widget" directory\n//some files in "./src/app/" directory\n//some files in "./scss/" directory\n//some files in "./html/" directory\n\nyo webappstarter:update\n```\n > Warning: When you are asked before an overwrite can occur,please be careful.Default "Y" is overwrite,"n" is skip.\n \n\nMore configurations,please take a look at "project" property of "package.json" file after the generator is done.\nRun ```gulp``` to re-build project is required after change the "package.json" file.\n\nProject commands\n=================\nrun this command before you get started.\n\n```shell\nnpm install -g gulp\n```\n\n1.build project,watch change and start browserSync,run\n\n```shell\ngulp\n```\nor run with forever\n```shell\nforever ./node_modules/.bin/gulp\n```\n2.deploy to test server,run\n\n```shell\ngulp deploytest\n```\nPlease update your ftp auth name and password in ".ftppass".\nView the page on test server [http://office.mozat.com:8083/PROJECTNAME/](http://office.mozat.com:8083/PROJECTNAME/).\nThis command require [openssl](https://www.openssl.org/).\nFor windows,you might needd to add openssl path to classpath.\n\n\n3.deploy to offical server,run\n\n```shell\ngulp deploy\n```\nView the page on offical server [http://m.deja.me/PROJECTNAME/](http://m.deja.me/PROJECTNAME/).\nThis command require [rsync](https://rsync.samba.org/).\nFor windows,unzip  /tools/rsync.zip to a local path and add the path to classpath.\n\n4.run this command to copy source images to project\'s `resources/images/` path,then generate `scss/_sprites.csss` and `resources/images/sprites.png` for sourceSprites in `package.json`.\n\n```shell\ngulp copy\n``` \n\n5.run this command to start jshint.\n\n```shell\ngulp jshint\n```\n\n6.run this command to start browserSync,Change browserSync options in `package.json`.\n\n```shell\ngulp serve\n``` \n\n7.run this command to start pagespeed,Change pagespeed options in `package.json`.\n\n```shell\ngulp pagespeed\n``` \n\nStructure\n================\nThe structure is modular design,follow the DOOR-KEY rule you only take minutes to understand it:\n  * The DOOR for javascript is in ```/src/app/App.js```,and the KEY is ```require```,see [webpack](https://webpack.github.io/docs/commonjs.html) and [commonjs](http://www.commonjs.org/specs/modules/1.0/)\n  * The DOOR for stylesheets is in ```/scss/styles.scss```,and the KEY is ```@import```,see [SASS](http://sass-lang.com/)\n  * The DOOR for HTML is in ```/html/debug/index.html```,and the KEY is ```@@include```,see [gulp-file-include](https://www.npmjs.com/package/gulp-file-include)\n  \n\nGit\n==========\nRandom git commit message\n\n```shell\n git commit -m"`curl -s http://whatthecommit.com/index.txt`"\n ```\n'