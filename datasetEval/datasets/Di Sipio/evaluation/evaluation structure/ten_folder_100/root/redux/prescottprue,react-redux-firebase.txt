b'# react-redux-firebase\n\n[![NPM version][npm-image]][npm-url]\n[![NPM downloads][npm-downloads-image]][npm-url]\n[![Quality][quality-image]][quality-url]\n[![Code Coverage][coverage-image]][coverage-url]\n[![Code Style][code-style-image]][code-style-url]\n[![License][license-image]][license-url]\n[![Build Status][travis-image]][travis-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\n[![Gitter][gitter-image]][gitter-url]\n\n> Redux bindings for Firebase. Includes Higher Order Component (HOC) for use with React.\n\n## [Simple Example](https://codesandbox.io/s/zrr0n5m2zp)\n\n[![Edit Simple Example](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/zrr0n5m2zp)\n\nThe [Material Example](https://github.com/prescottprue/react-redux-firebase/tree/master/examples/complete/material) is deployed to [demo.react-redux-firebase.com](https://demo.react-redux-firebase.com).\n\n## Features\n\n* Out of the box support for authentication (with auto load user profile)\n* Full Firebase Platform Support Including Real Time Database, Firestore, and Storage\n* Automatic binding/unbinding of listeners through React Hooks (`useFirebaseConnect`, `useFirestoreConnect`) or Higher Order Components (`firebaseConnect` and `firestoreConnect`)\n* [Population capability](http://react-redux-firebase.com/docs/populate) (similar to mongoose\'s `populate` or SQL\'s `JOIN`)\n* Support small data ( using `value` ) or large datasets ( using `child_added`, `child_removed`, `child_changed` )\n* Multiple queries types supported including `orderByChild`, `orderByKey`, `orderByValue`, `orderByPriority`, `limitToLast`, `limitToFirst`, `startAt`, `endAt`, `equalTo`\n* Tons of examples of integrations including [`redux-thunk`](https://github.com/gaearon/redux-thunk) and [`redux-observable`](https://redux-observable.js.org/)\n* Server Side Rendering Support\n* [`react-native` support](http://react-redux-firebase.com/docs/integrations/react-native.html) using [native modules](http://react-redux-firebase.com/docs/integrations/react-native.html#native-modules) or [web sdk](http://react-redux-firebase.com/docs/integrations/react-native.html#jsweb)\n\n## Installation\n\n```bash\nnpm install --save react-redux-firebase\n```\n\nThis assumes you are using [npm](https://www.npmjs.com/) as your package manager.\n\nIf you\'re not, you can access the library on [unpkg](https://unpkg.com/redux-firestore@latest/dist/redux-firestore.min.js), download it, or point your package manager to it. Theres more on this in the [Builds section below](#builds).\n\n### Older Versions\n\nInterested in support for versions of [`react-redux`](https://github.com/reduxjs/react-redux) before v6 or the [new react context API](https://reactjs.org/docs/context.html)? Checkout [the `v2.*.*` versions](https://github.com/prescottprue/react-redux-firebase/tree/v2) (installed through `npm i --save react-redux-firebase^@2.5.0`).\n\n## Use\n\nInclude `firebaseReducer` (reducer) while creating your redux store then pass dispatch and your firebase instance to `ReactReduxFirebaseProvider` (context provider):\n\n```javascript\nimport React from \'react\'\nimport { render } from \'react-dom\'\nimport { Provider } from \'react-redux\'\nimport firebase from \'firebase/app\'\nimport \'firebase/auth\'\n// import \'firebase/firestore\' // <- needed if using firestore\n// import \'firebase/functions\' // <- needed if using httpsCallable\nimport { createStore, combineReducers, compose } from \'redux\'\nimport { ReactReduxFirebaseProvider, firebaseReducer } from \'react-redux-firebase\'\n// import { createFirestoreInstance, firestoreReducer } from \'redux-firestore\' // <- needed if using firestore\n\nconst fbConfig = {}\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: \'users\'\n  // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\n\n// Initialize firebase instance\nfirebase.initializeApp(fbConfig)\n\n// Initialize other services on firebase instance\n// firebase.firestore() // <- needed if using firestore\n// firebase.functions() // <- needed if using httpsCallable\n\n// Add firebase to reducers\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer\n  // firestore: firestoreReducer // <- needed if using firestore\n})\n\n// Create store with reducers and initial state\nconst initialState = {}\nconst store = createStore(rootReducer, initialState)\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  // createFirestoreInstance // <- needed if using firestore\n}\n\n// Setup react-redux so that connect HOC can be used\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <Todos />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  );\n}\n\nrender(<App />, document.getElementById(\'root\'))\n```\n\nThe Firebase instance can then be grabbed from context within your components (`withFirebase` and `firebaseConnect` Higher Order Components provided to help):\n\n**Add Data**\n\n```jsx\nimport React from \'react\'\nimport { useFirebase } from \'react-redux-firebase\'\n\nexport default function Todos() {\n  const firebase = useFirebase()\n\n  function addSampleTodo() {\n    const sampleTodo = { text: \'Sample\', done: false }\n    return firebase.push(\'todos\', sampleTodo)\n  }\n\n  return (\n    <div>\n      <h1>New Sample Todo</h1>\n      <button onClick={addSampleTodo}>\n        Add\n      </button>\n    </div>\n  )\n}\n```\n\n**Load Data (listeners automatically managed on mount/unmount)**\n\n```jsx\nimport React from \'react\'\nimport PropTypes from \'prop-types\'\nimport { useSelector } from \'react-redux\'\nimport { useFirebaseConnect, isLoaded, isEmpty } from \'react-redux-firebase\'\n\nexport default function Todos() {\n  useFirebaseConnect([\n    \'todos\' // { path: \'/todos\' } // object notation\n  ])\n  \n  const todos = useSelector(state => state.firebase.ordered.todos)\n\n  if (!isLoaded(todos)) {\n    return <div>Loading...</div>\n  }\n\n  if (isEmpty(todos)) {\n    return <div>Todos List Is Empty</div>\n  }\n\n  return (\n    <div>\n      <ul>\n        {\n          Object.keys(todos).map(\n            (key, id) => (\n              <TodoItem key={key} id={id} todo={todos[key]}/>\n            )\n          )\n        }\n      </ul>\n    </div>\n  )\n}\n```\n\n**Queries Based On Route Params**\n\nIt is common to make a detail page that loads a single item instead of a whole list of items. A query for a specific `Todos` can be created using\n\n```jsx\nimport React from \'react\'\nimport PropTypes from \'prop-types\'\nimport { get } from \'lodash\'\nimport { useSelector } from \'react-redux\'\nimport { useFirebaseConnect } from \'react-redux-firebase\'\nimport { useParams } from \'react-router-dom\'\n\nexport default function Todo() {\n  const { todoId } = useParams() // matches todos/:todoId in route\n\n  useFirebaseConnect([\n    { path: `todos/${todoId}` } // create todo listener\n    // `todos/${props.params.todoId}` // equivalent string notation\n  ])\n  \n  const todo = useSelector(({ firebase: { data } }) => data.todos && data.todos[todoId])\n\n  function updateTodo() {\n    return firebase.update(`todos/${params.todoId}`, { done: !todo.isDone })\n  }\n\n  return (\n    <div>\n      <input\n        name="isDone"\n        type="checkbox"\n        checked={todo.isDone}\n        onChange={updateTodo}\n      />\n      <span>{todo.label}</span>\n    </div>\n  )\n}\n```\n\n**Load Data On Click**\n\n```jsx\nimport React from \'react\'\nimport { useSelector } from \'react-redux\'\nimport { useFirebase, isLoaded, isEmpty } from \'react-redux-firebase\'\n\nfunction TodosList() {\n  const todos = useSelector(state => state.firebase.ordered.todos)\n\n  if (!isLoaded(todos)) {\n    return <div>Loading...</div>\n  }\n\n  if (isEmpty(todos)) {\n    return <div>Todos List Is Empty</div>\n  }\n\n  return (\n    <ul>\n      {\n        Object.keys(todos).map((key, id) =>\n          <TodoItem key={key} id={id} todo={todos[key]}/>\n        )\n      }\n    </ul>\n  )\n}\n\nfunction Todos() {\n  const firebase = useFirebase()\n\n  return (\n    <div>\n      <h1>Todos</h1>\n      <EnhancedTodosList />\n      <button onClick={() => firebase.watchEvent(\'value\', \'todos\')}>\n        Load Todos\n      </button>\n    </div>\n  )\n}\n\n// Export enhanced component\nexport default Todos\n```\n\n## Firestore\n\nIf you plan to use Firestore, you should checkout [`redux-firestore`][redux-firestore]. It integrates nicely with `react-redux-firebase` and it allows you to run Real Time Database and Firestore along side each other.\n\n`react-redux-firebase` provides the `firestoreConnect` HOC (similar to `firebaseConnect`) for easy setting/unsetting of listeners.\n\nCurrently `react-redux-firebase` still handles auth when using [`redux-firestore`][redux-firestore] - The future plan is to also have auth standalone auth library that will allow the developer to choose which pieces they do/do not want.\n\n## [Docs](http://react-redux-firebase.com)\n\nSee full documentation at [react-redux-firebase.com](http://react-redux-firebase.com)\n\n* [Getting Started](http://react-redux-firebase.com/docs/getting_started)\n* [Auth](http://react-redux-firebase.com/docs/auth)\n* [Queries](http://react-redux-firebase.com/docs/queries)\n* [Firestore](http://react-redux-firebase.com/docs/firestore)\n* [Populate](http://react-redux-firebase.com/docs/populate)\n* [API Reference](http://react-redux-firebase.com/docs/api)\n\n## [Examples](examples)\n\n### Real World Applications\n\n* [fireadmin.io](http://fireadmin.io) - Firebase Instance Management Tool (source [available here](https://github.com/prescottprue/fireadmin))\n\nIf you would like a project added to this section please reach out [over gitter][gitter-url]\n\n### [Examples Folder](examples)\n\nExamples folder is broken into two categories [snippets](examples/snippets) and [complete](examples/complete). `/complete` contains full applications that can be run as is, where as `/snippets` contains small amounts of code to highlight specific functionality (dev tools and deps not included).\n\n#### [State Based Query Snippet](examples/snippets/stateBasedQuery)\n\nSnippet showing querying based on data in redux state. One of the more common examples is querying based on the current users auth UID.\n\n#### [Decorators Snippet](examples/snippets/decorators)\n\nSnippet showing how to use decorators to simplify connect functions (redux\'s `connect` and react-redux-firebase\'s `firebaseConnect`)\n\n#### [Simple App Example](examples/complete/simple)\n\nA simple example that was created using [create-react-app](https://github.com/facebookincubator/create-react-app)\'s. Shows a list of todo items and allows you to add to them.\n\n#### [Material App Example](examples/complete/material)\n\nAn example that user Material UI built on top of the output of [create-react-app](https://github.com/facebookincubator/create-react-app)\'s eject command. Shows a list of todo items and allows you to add to them. This is what is deployed to [redux-firebasev3.firebaseapp.com](https://redux-firebasev3.firebaseapp.com/).\n\n## Discussion\n\nJoin us on the [redux-firebase gitter](https://gitter.im/redux-firebase/Lobby).\n\n## Integrations\n\nView docs for recipes on integrations with:\n\n* [redux-firestore](http://react-redux-firebase.com/docs/firestore.html)\n* [redux-thunk](http://react-redux-firebase.com/docs/integrations/thunks.html)\n* [reselect](http://react-redux-firebase.com/docs/integrations/integrations/reselect.html)\n* [redux-observable](http://react-redux-firebase.com/docs/integrations/redux-observable.html)\n* [redux-saga](http://react-redux-firebase.com/docs/integrations/redux-saga.html)\n* [redux-form](http://react-redux-firebase.com/docs/integrations/redux-form.html)\n* [redux-auth-wrapper](http://react-redux-firebase.com/docs/recipes/routing.html#advanced)\n* [redux-persist](http://react-redux-firebase.com/docs/integrations/redux-persist.html)\n* [react-native](http://react-redux-firebase.com/docs/integrations/react-native.html)\n* [react-native-firebase](http://react-redux-firebase.com/docs/integrations/react-native.html#native-modules)\n\n## Starting A Project\n\n### Generator\n\n[generator-react-firebase](https://github.com/prescottprue/generator-react-firebase) is a yeoman generator uses react-redux-firebase when opting to include redux.\n\n### Complete Examples\n\nThe [examples folder](/examples) contains full applications that can be copied/adapted and used as a new project.\n\n## FAQ\n\nPlease visit the [FAQ section of the docs](http://docs.react-redux-firebase.com/history/v2.0.0/docs/FAQ.html)\n\n## Builds\n\nMost commonly people consume Redux Firestore as a [CommonJS module](http://webpack.github.io/docs/commonjs.html). This module is what you get when you import redux in a Webpack, Browserify, or a Node environment.\n\nIf you don\'t use a module bundler, it\'s also fine. The redux-firestore npm package includes precompiled production and development [UMD builds](https://github.com/umdjs/umd) in the [dist folder](https://unpkg.com/redux-firestore@latest/dist/). They can be used directly without a bundler and are thus compatible with many popular JavaScript module loaders and environments. For example, you can drop a UMD build as a `<script>` tag on the page. The UMD builds make Redux Firestore available as a `window.ReactReduxFirebase` global variable.\n\nIt can be imported like so:\n\n```html\n<script src="../node_modules/react-redux-firebase/dist/react-redux-firebase.min.js"></script>\n<script src="../node_modules/redux-firestore/dist/redux-firestore.min.js"></script>\n<!-- or through cdn: <script src="https://unpkg.com/react-redux-firebase@latest/dist/react-redux-firebase.min.js"></script> -->\n<!-- or through cdn: <script src="https://unpkg.com/redux-firestore@latest/dist/redux-firestore.min.js"></script> -->\n<script>console.log(\'react redux firebase:\', window.ReactReduxFirebase)</script>\n```\n\nNote: In an effort to keep things simple, the wording from this explanation was modeled after [the installation section of the Redux Docs](https://redux.js.org/#installation).\n\n## Contributors\n\nThis project exists thanks to all the people who contribute.\n\n<a href="https://github.com/prescottprue/react-redux-firebase/graphs/contributors"><img src="https://opencollective.com/react-redux-firebase/contributors.svg?width=890" /></a>\n\n## Backers\n\nThank you to all our backers! \xf0\x9f\x99\x8f\n\n* [Side Inc.](https://github.com/reside-eng)\n\n[npm-image]: https://img.shields.io/npm/v/react-redux-firebase.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/react-redux-firebase\n[npm-downloads-image]: https://img.shields.io/npm/dm/react-redux-firebase.svg?style=flat-square\n[quality-image]: http://npm.packagequality.com/shield/react-redux-firebase.svg?style=flat-square\n[quality-url]: https://packagequality.com/#?package=react-redux-firebase\n[backers]: https://opencollective.com/react-redux-firebase/backers/badge.svg?style=flat-square&color=blue\n[become-a-backer]: https://opencollective.com/react-redux-firebase#backer\n[travis-image]: https://img.shields.io/travis/prescottprue/react-redux-firebase/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/prescottprue/react-redux-firebase\n[daviddm-image]: https://img.shields.io/david/prescottprue/react-redux-firebase.svg?style=flat-square\n[daviddm-url]: https://david-dm.org/prescottprue/react-redux-firebase\n[climate-image]: https://img.shields.io/codeclimate/github/prescottprue/react-redux-firebase.svg?style=flat-square\n[climate-url]: https://codeclimate.com/github/prescottprue/react-redux-firebase\n[coverage-image]: https://img.shields.io/codecov/c/github/prescottprue/react-redux-firebase.svg?style=flat-square\n[coverage-url]: https://codecov.io/gh/prescottprue/react-redux-firebase\n[license-image]: https://img.shields.io/npm/l/react-redux-firebase.svg?style=flat-square\n[license-url]: https://github.com/prescottprue/react-redux-firebase/blob/master/LICENSE\n[code-style-image]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\n[code-style-url]: http://standardjs.com/\n[gitter-image]: https://img.shields.io/gitter/room/redux-firebase/gitter.svg?style=flat-square\n[gitter-url]: https://gitter.im/redux-firebase/Lobby\n[redux-firestore]: https://github.com/prescottprue/redux-firestore\n'