b'<p>&nbsp;</p>\n<p align=\'center\'>\n  <img src="https://i.imgur.com/UnPLVly.png" width="280" />\n</p>\n<p align=\'center\'>Vegetarian friendly state for React</p>\n<p>&nbsp;</p>\n\n[![npm](https://img.shields.io/npm/v/easy-peasy.svg?style=flat-square)](http://npm.im/easy-peasy)\n[![MIT License](https://img.shields.io/npm/l/easy-peasy.svg?style=flat-square)](http://opensource.org/licenses/MIT)\n[![Travis](https://img.shields.io/travis/ctrlplusb/easy-peasy.svg?style=flat-square)](https://travis-ci.org/ctrlplusb/easy-peasy)\n[![Codecov](https://img.shields.io/codecov/c/github/ctrlplusb/easy-peasy.svg?style=flat-square)](https://codecov.io/github/ctrlplusb/easy-peasy)\n\n\n```\nnpm install easy-peasy\n```\n\n\n**Step 1 - Create your store**\n\n```javascript\nconst store = createStore({\n  todos: {\n    items: [\'Create store\', \'Wrap application\', \'Use store\'],\n    add: action((state, payload) => {\n      state.items.push(payload)\n    })\n  }\n});\n```\n\n**Step 2 - Wrap your application**\n\n```javascript\nfunction App() {\n  return (\n    <StoreProvider store={store}>\n      <TodoList />\n    </StoreProvider>\n  );\n}\n```\n\n**Step 3 - Use the store**\n\n```javascript\nfunction TodoList() {\n  const todos = useStoreState(state => state.todos.items)\n  const add = useStoreActions(actions => actions.todos.add)\n  return (\n    <div>\n      {todos.map((todo, idx) => <div key={idx}>{todo}</div>)}\n      <AddTodo onAdd={add} />\n    </div>\n  )\n}\n```\n\n## Features\n\n  - Zero configuration\n  - No boilerplate\n  - React hooks based API\n  - Computed properties - i.e. derived data\n  - Data fetching / side effects\n  - Persist state to session/local storage\n  - Testing helpers\n  - Extensive TypeScript support\n  - Global, shared, or component level stores\n  - React Native supported\n  - Redux Dev Tools supported\n  - Hot Reloading supported\n\n## Introduction\n\nEasy Peasy provides you with an intuitive API to quickly and easily manage the state for your React application. Batteries are included - no configuration is required to support derived state, API calls, performance optimisation, developer tools etc.\n\n## Documentation\n\nSee the [official website](https://easy-peasy.now.sh) for tutorials, API docs, recipes, and more.\n\n## Backers \xe2\x9d\xa4\xef\xb8\x8f\n\nExtreme gratitude to all our backers! [[Become a backer](https://opencollective.com/easy-peasy#backer)].\n\n<a href="https://opencollective.com/easy-peasy#backers">\n    <img src="https://opencollective.com/easy-peasy/backers.svg?width=950" />\n</a>\n'