b"# reactGo\n\n[![Dependency Status][dep-status-img]][dep-status-link] [![devDependency Status][dev-dep-status-img]][dev-dep-status-link]\n[![Gitter][gitter-img]][gitter-link] [![npm version][npm-badge]][npm-link]\n\n[![Deploy](https://www.herokucdn.com/deploy/button.png)](https://heroku.com/deploy)\n\n> Your One-Stop solution for a full-stack app with ES6/ES2015 React.js featuring universal Redux, React Router, React Router Redux Hot reloading, CSS modules, Express 4.x, and multiple ORMs. :rocket:\n\n_Formerly known as choonkending/react-webpack-node_\n\n[dep-status-img]: https://david-dm.org/choonkending/react-webpack-node.svg\n[dep-status-link]: https://david-dm.org/choonkending/react-webpack-node\n[dev-dep-status-img]: https://david-dm.org/choonkending/react-webpack-node/dev-status.svg\n[dev-dep-status-link]: https://david-dm.org/choonkending/react-webpack-node#info=devDependencies\n[gitter-img]: https://badges.gitter.im/Join%20Chat.svg\n[gitter-link]: https://gitter.im/choonkending/react-webpack-node?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n[npm-badge]: https://badge.fury.io/js/react-webpack-node.svg\n[npm-link]: http://badge.fury.io/js/react-webpack-node\n\n\n#### Demo site: [**https://demo-reactgo.herokuapp.com/**](https://demo-reactgo.herokuapp.com/)\n\n## Features:\n- ~~isomorphic~~ [**universal**](https://medium.com/@ghengeveld/isomorphism-vs-universal-javascript-4b47fb481beb#.4x2t3jlmx) Rendering\n- [**Redux**](https://github.com/reactjs/redux) Predictive state containers.\n- Server-side rendering with [**React Router**](https://github.com/reactjs/react-router) 3.x. Having server-side rendering allows you to pre-render the initial state of your components when a user (or search engine crawler) requests a page.\n- Integrating Redux with React Router with ~~Redux Simple Router~~ [React Router Redux](https://github.com/reactjs/react-router-redux)\n- Asynchronous Data Fetching on server-side rendering\n- Server side authentication + Redirecting for components\n- Hot reloading using [**react-transform-hmr**](https://github.com/gaearon/react-transform-hmr)\n- Time travel using [**Redux-Devtools Chrome Extension**](https://github.com/zalmoxisus/redux-devtools-extension)\n- [**Webpack 4**](https://github.com/webpack/webpack) for both development and production bundles. It's (in my opinion) the best bundler for JS, CSS, LESS, images, and lots more!\n- [**CSS Modules**](https://github.com/css-modules/css-modules) allows for modular and reusable CSS. Say goodbye to conflicts (most of them) and global scope\n\n- **Unit Testing** with jsdom, mocha, sinon & enzyme\n\t- Reducers\n\t- Components ([Enzyme](http://airbnb.io/enzyme))\n\t- Synchronous and Asynchronous Actions\n\n- Express 4.x server with a ton of middleware\n- Mongoose for MongoDB\n- Sequelize for Postgres\n- Procfile to enable deployment to Heroku & Docs on Salt configurations + Deployment for Digital Ocean\n\n\n## Motivation\n\nThe motivation is simple: best practices and a wonderful development experience. Our ultimate goal is to provide a boilerplate for building non-trivial applications that are secure, performant and free of bugs. Believing a mixture of React.js, Webpack and Node was the best way to accomplish this, we created react-webpack-node.\n\nreact-webpack-node also works great as a learning tool for anyone interested in learning how to implement a large React application, or those who want a modern setup ASAP.\n\nWe've had extensive community additions to this boilerplate over time as practices have evolved, and are always interested in hearing new ideas or contributions.\n\n## Why Redux\n\nWe're really big fans of this implementation of flux for state management. The main principles of having:\n- a single store\n- state being read-only (you have to express an intent to mutate being creating actions)\n- mutations written as pure functions\n\nmake it very fun and easy to write **predictable** code! There's a ton of reasons why, but you should head to the [Redux docs](http://redux.js.org/index.html) to dive in!\n\nOr if you are more of a *visual learner* watch the free egghead video series narrated by the creator of redux:\n\n1. [Getting Started](https://egghead.io/series/getting-started-with-redux)\n2. [Building Idiomatically](https://egghead.io/series/building-react-applications-with-idiomatic-redux)\n\n#### Data Flow\n\nA simplistic representation of data flow from server to client is:\n\n```\nExpress app.use() receives a request\n-> Calls a pre-built webpack file for the server\n-> Runs matching of routes in react-router for server\n-> Makes async data fetching request\n-> Renders Route component to string\n-> Construct HTML file (with Meta, Link tags using helmet)\n-> Browser receives html file with initial state\n-> Client side React.JS kicks in and initializes with given state\n-> Continues where it left off\n-> Everyone is happy :)\n```\n\nMore TBD\n\n#### Redux DevTools\n\nYou will have to install redux devtools extension from [here](https://github.com/zalmoxisus/redux-devtools-extension) and then everything should just work!\n\n## Instructions\n\n#### Database\n\nWe currently support MongoDB and Postgres, as well as the ability to not use any database. [Learn](docs/databases.md) about how to configure your app.\n\n#### Development\n\nDevelopment is a breeze. Once you have installed all your dependencies all the configuration is done for you. using simple The process is outlined [here](docs/development.md).\n\n#### Building the application\n\n```bash\n# Build the application for development\nnpm run build\n\n# Build the application for production\nnpm run build:dev\n```\n\n#### Running the application\n\n```bash\n# Run in development mode (with hot-reloading)\nnpm run dev\n\n# Run in production mode\nnpm start\n```\n\n#### Unit Tests\n\nTesting with:\n- `mocha` as the test framework\n\t- We find all the files we need that have a `-test.js` suffix in the `/app` directory.\n- `jsdom` as my test environment\n\n```bash\n# Run test once\nnpm test\n\n# Run in watch mode\nnpm test:watch\n```\n\nWe have unit tests for async (redux) actions, reducers, and stateless components with [enzyme](http://airbnb.io/enzyme).\n\n#### Deployment\n\nCurrently we support [Heroku](docs/deployment/Heroku.md) and [Digital Ocean](docs/deployment/DigitalOcean.md) and [AWS](docs/deployment/aws.md)\n\n#### Roadmap\nWe have an outline of our roadmap [here](https://github.com/reactGo/reactGo/blob/master/Roadmap.md)\n\n## Yeoman Generator\nIf you like using yeoman generators, you could check out [this](https://github.com/iiegor/generator-react-webpack-node) cool yeoman generator by @iiegor!\n\n\n## FAQ\n\nWe have assembled an FAQ [here](/docs/FAQ.md)\n\n## Check out what people have done\n\nWe have a [list](/docs/apps.md) of projects that have been created with this boilerplate. Check\nthem out to see what can be done or to get some inspiration.\n\n## How to Contribute:\n\nBest way to keep up to date is check the [issues](https://github.com/choonkending/react-webpack-node/issues). I really welcome improvements for **all aspects** of an app.\n\n1. Any suggestions/improvements/bugs can be in the form of Pull Requests, or creating an issue.\n2. Coding guidelines:\n - [Airbnb's Style Guide](https://github.com/airbnb/javascript)\n - [bendc's frontend guidelines](https://github.com/bendc/frontend-guidelines)\n\n\nCredits to [webpack-server-side-example](https://github.com/webpack/react-webpack-server-side-example), [example-app](https://github.com/webpack/example-app), [flux-examples](https://github.com/facebook/flux/tree/master/examples), [node-express-mongo-demo](https://github.com/madhums/node-express-mongoose-demo), [hackathon-starter](https://github.com/sahat/hackathon-starter/), [web-starter-kit](https://github.com/google/web-starter-kit), [awesome material-ui](https://github.com/callemall/material-ui), [alt and iso](https://github.com/goatslacker/iso/tree/master/examples/react-router-flux), [react-starter](https://github.com/webpack/react-starter), [reap](https://github.com/choonkending/reap), [isomorphic-redux-app](https://github.com/caljrimmer/isomorphic-redux-app) and [mxstbr/react-boilerplate](https://github.com/mxstbr/react-boilerplate/blob/master/README.md)\n\n**Easter Eggs** :egg:\n\nThis boilerplate has gone through an evolution\n```\nReact.js -> Facebook Flux -> Alt -> Redux\n```\n\nWe have two implementations of universal flux:\n- **Redux** is on our active **master** branch\n- [**Alt**](https://github.com/goatslacker/alt) (previously implemented) on [flux/alt](https://github.com/choonkending/react-webpack-node/tree/flux/alt) branch. It features [iso](https://github.com/goatslacker/iso), react-router and ImmutableJS.\n\n> Note: If you have previously used an alt implementation of this repository, please refer to this branch. I will not be updating it as frequently as master, but definitely welcome suggestions!\n\nLicense\n===============\nMIT\n"