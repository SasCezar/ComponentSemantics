b'# Paul\'s dotfiles\n\n* I maintain this repo as *my* dotfiles, but I\'m keenly aware people are using it for theirs.\n* You\'re quite welcome to make suggestions, however I may decline if it\'s not of personal value to me.\n* If you\'re starting off consider forking [mathias](https://github.com/mathiasbynens/dotfiles/) or [alrra](https://github.com/alrra/dotfiles/). [paulmillr](https://github.com/paulmillr/dotfiles) and [gf3](https://github.com/gf3/dotfiles) also have great setups\n\n## Setup\n#### installing & using\n\n* fork this to your own acct\n* clone that repo\n* read and run parts of `setup-a-new-machine.sh`\n* read and run `symlink-setup.sh`\n  * git config needs attention, read the notes.\n* use it. yay!\n\n#### maintenance\n\n* commit/push changes you want.\n* you can also hypothetically cherry-pick commits from me and mathias and our fork ecosystem.\n\n#### shell\n\nThis repo contains config for bash, zsh, and fish. As of March 2016, I\'m using fish shell mostly, but fall back to bash once in a while. The bash and fish stuff are both well maintained; zsh, less so. If you\'re using fish you\'ll want to do a `git submodule update --init`.\n\n\n## my favorite parts.\n\n### [`.aliases`](https://github.com/paulirish/dotfiles/blob/master/.aliases) and [`.functions`](https://github.com/paulirish/dotfiles/blob/master/.functions)\n\nSo many goodies.\n\n### The "readline config" (`.inputrc`)\nBasically it makes typing into the prompt amazing.\n\n* tab like crazy for autocompletion that doesnt suck. tab all the things. srsly.\n* no more <tab><tab> that says "Display all 1745 possibilities? (y or n)" YAY\n* type `cat <uparrow>` to see your previous `cat`s and use them.\n* case insensitivity.\n* tab all the livelong day.\n\n\n\n### Moving around in folders (`z`, `...`, `cdf`)\n`z` helps you jump around to whatever folder. It uses actual real magic to determine where you should jump to. Seperately there\'s some `...` aliases to shorten `cd ../..` and `..`, `....` etc. Then, if you have a folder open in Finder, `cdf` will bring you to it.\n```sh\nz dotfiles\nz blog\n....      # drop back equivalent to cd ../../..\nz public\ncdf       # cd to whatever\'s up in Finder\n```\n`z` learns only once its installed so you\'ll have to cd around for a bit to get it taught.\nLastly, I use `open .` to open Finder from this path. (That\'s just available normally.)\n\n\n\n## overview of files\n\n####  Automatic config\n* `.vimrc`, `.vim` - vim config, obv.\n* `.inputrc` - behavior of the actual prompt line\n\n#### shell environment\n* `.aliases`\n* `.bash_profile`\n* `.bash_prompt`\n* `.bashrc`\n* `.exports`\n* `.functions`\n* `.extra` - not included, explained below\n\n#### manual run\n* `setup-a-new-machine.sh` - random apps i need installed\n* `symlink-setup.sh`  - sets up symlinks for all dotfiles and vim config.\n* `.osx` - run on a fresh osx setup\n* `brew.sh` & `brew-cask.sh` - homebrew initialization\n\n#### git, brah\n* `.git`\n* `.gitattributes`\n* `.gitconfig`\n* `.gitignore`\n\n\n### `.extra` for your private configuration\n\nThere will be items that don\'t belong to be committed to a git repo, because either 1) it shoudn\'t be the same across your machines or 2) it shouldn\'t be in a git repo. Kick it off like this:\n\n`touch ~/.extra && $EDITOR $_`\n\nI have some EXPORTS, my PATH construction, and a few aliases for ssh\'ing into my servers in there.\n\nI don\'t know how other folks manage their $PATH, but this is how I do mine:\n\n```shell\n# The top-most paths override here.\n      PATH=/opt/local/bin\nPATH=$PATH:/opt/local/sbin\nPATH=$PATH:/bin\nPATH=$PATH:~/.rvm/bin\nPATH=$PATH:~/code/git-friendly\n# ...\n\nexport PATH\n```\n\n\n### Sensible OS X defaults\n\nMathias\'s repo is the canonical for this, but you should probably run his or mine after reviewing it.\n\n```bash\n./.osx\n```\n\n### `~/bin`\n\nOne-off binaries that aren\'t via an npm global or homebrew. [git open](https://github.com/paulirish/git-open), [wifi-password](https://github.com/rauchg/wifi-password), [coloredlogcat](https://developer.sinnerschrader-mobile.com/colored-logcat-reloaded/507/), [git-overwritten](https://github.com/mislav/dotfiles/blob/master/bin/git-overwritten), and `subl` for Sublime Text.\n\n### Syntax highlighting for these files\n\nIf you edit this stuff, install [Dotfiles Syntax Highlighting](https://github.com/mattbanks/dotfiles-syntax-highlighting-st2) via [Package Control](http://wbond.net/sublime_packages/package_control)\n'