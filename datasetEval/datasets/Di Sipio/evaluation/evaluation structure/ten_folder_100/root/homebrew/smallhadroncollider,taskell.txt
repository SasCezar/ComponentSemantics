b'# Taskell\n\n[![Build Status](https://travis-ci.org/smallhadroncollider/taskell.svg?branch=master)](https://travis-ci.org/smallhadroncollider/taskell)\n\nA CLI kanban board/task manager for Mac and Linux\n\n- Per project task lists\n- `vim` style key-bindings\n- Stored using Markdown\n- Clean diffs for easy version control\n- Support for sub-tasks and due dates\n- Trello board imports\n- GitHub project imports\n\n<a href="https://www.buymeacoffee.com/shc" target="_blank"><img src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" alt="Buy Me A Coffee" style="height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;" ></a>\n\nFollow [@taskellcli](https://twitter.com/taskellcli) on Twitter for updates\n\n![Demo](https://taskell.app/img/demo.gif)\n\n---\n\n## Contents\n\n- [Installation](#installation)\n- [Using Taskell](#using-taskell)\n    - [Options](#options)\n    - [Storage](#storage)\n    - [Importing Trello Boards](#importing-trello-boards)\n    - [Importing GitHub Projects](#importing-github-projects)\n- [Configuration](#configuration)\n    - [Controls](#controls)\n    - [Theming](#theming)\n- [Roadmap](#roadmap)\n\n## Installation\n\n### Homebrew (Mac)\n\nYou can install Taskell on your Mac using [Homebrew](https://brew.sh):\n\n```bash\nbrew install taskell\n```\n\nThere are usually bottles (binaries) available. If these are not available for your computer, Homebrew will build Taskell from scratch, which can take a while, particularly on older machines. Occasionally the build fails the first time, but usually works on a second attempt.\n\n### Debian/Ubuntu\n\n[A `.deb` package is available for Debian/Ubuntu](https://github.com/smallhadroncollider/taskell/releases). Download it and install with `dpkg -i <package-name>`. You may also need to install the `libtinfo5` package (`sudo apt install libtinfo5`).\n\n### Fedora\n\nNot officially supported, but try running `sudo dnf install ncurses-compat-libs` then download and run the binary as described below. If that doesn\'t work you may need to build from scratch ([Cabal](#cabal)/[Stack](#stack)).\n\n### Binaries\n\n[A binary is available for Mac and Debian/Ubuntu](https://github.com/smallhadroncollider/taskell/releases). Download it and copy it to a directory in your `$PATH` (e.g. `/usr/local/bin` or `/usr/bin`).\n\n### Cabal\n\nYou can install Taskell with `cabal`:\n\n```bash\ncabal install taskell\n```\n\nMake sure you run `cabal update` if you haven\'t run it recently.\n\n### Stack\n\nIf none of the above options work you can build taskell using [Stack](https://docs.haskellstack.org/en/stable/README/). First [install Stack on your machine](https://docs.haskellstack.org/en/stable/README/#how-to-install). Then clone the repo and run `stack build && stack install`: this will build taskell and then install it in `~/.local/bin` (so make sure that directory is in your `$PATH`). Building from scratch can take a long time and occasionally doesn\'t work the first time (if this happens try running it again).\n\n## Using Taskell\n\n- `taskell`: will use `taskell.md` in the pwd - offers to create if not found\n- `taskell filename.md`: will use `filename.md` in the pwd - offers to create if not found\n\n### Options\n\n- `-h`: show help\n- `-v`: show version number\n- `-t <trello-board-id>`: import a Trello board ([see below](#importing-trello-boards))\n- `-g <github-project-id>`: import a GitHub project ([see below](#importing-github-projects))\n\n#### Tips\n\n- If you\'re using a simple two-column "To Do" and "Done" then use the space bar to mark an item as complete while staying in the "To Do" list. If you\'re using a more complicated column setup then you will want to use `H`/`L` to move tasks between columns.\n\n### Storage\n\nBy default stores in a `taskell.md` file in the working directory:\n\n```md\n## To Do\n\n- Do this\n\n## Done\n\n- Do That\n```\n\n### Importing Trello Boards\n\nTaskell includes the ability to fetch a Trello board and store it as local taskell file.\n\n#### Authentication\n\nBefore fetching a Trello board, you\'ll need to create an access token and store it in `~/.taskell/config.ini`.\n\n- First, [get a Trello token](https://trello.com/1/authorize?expiration=never&name=taskell&scope=read&response_type=token&key=80dbcf6f88f62cc5639774e13342c20b)\n- Then add it to `~/.taskell/config.ini`:\n\n    ```ini\n    [trello]\n    token = <your-trello-access-token>\n    ```\n\nYou can revoke access tokens [on Trello](https://trello.com/my/account)\n\n#### Fetching\n\nRunning the following would pull down the Trello board with the ID "TRe1l0iD" into a file named `trello.md` and then open taskell with that file.\n\n```bash\ntaskell -t TRe1l0iD trello.md\n```\n\nMake sure you have permission to view the Trello board, otherwise you\'ll get an error.\n\n#### Limitations\n\n- This is a one-off procedure: it effectively imports a Trello board to taskell\n- Currently imports:\n    - Lists\n    - Cards\n    - Card descriptions\n    - Card due dates\n    - Card checklists (merged into one list per card)\n\n\n### Importing GitHub Projects\n\nTaskell includes the ability to fetch a GitHub project and store it as local taskell file.\n\n#### Authentication\n\nBefore fetching a GitHub board, you\'ll need to create a person access token and store it in `~/.taskell/config.ini`.\n\n- First, [get a GitHub personal access token](https://github.com/settings/tokens/new)\n- Make sure to tick the `repo` scope\n- Then add it to `~/.taskell/config.ini`:\n\n    ```ini\n    [github]\n    token = <your-github-personal-access-token>\n    ```\n\nYou can delete personal access tokens [on GitHub](https://github.com/settings/tokens/)\n\n#### Fetching\n\nProjects can belong to [organisations](#organisations) or to [individual repositories](#repositories).\n\nMake sure you have permission to view the GitHub project, otherwise you\'ll get an error.\n\n![GitHub Demo](https://taskell.app/img/github.gif)\n\n##### Organisations\n\nTo import a project for an organisation called "test-org" you would use the following:\n\n```bash\ntaskell -g orgs/test-org github.md\n```\n\nThis would then show you a list of possible projects to import. Enter the number of the project you wish to import.\n\n##### Repositories\n\nTo import a project for the repository "test-repo" for the user "test-user":\n\n```bash\ntaskell -g repos/test-user/test-repo github.md\n```\n\nThis would then show you a list of possible projects to import. Enter the number of the project you with to import.\n\n#### Limitations\n\n- This is a one-off procedure: it effectively imports a GitHub project to taskell\n- Currently imports:\n    - Columns\n    - Cards\n\n\n\n## Configuration\n\nTaskell uses the [XDG Base Directory Specification](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html), so it will look for an `$XDG_CONFIG_HOME` environmental variable and create a directory named `taskell` inside it. If this variable is not found it will create the `taskell` directory in `~/.config/`.  (If you\'ve been using Taskell since <= 1.3.5 then it will be in a `~/.taskell` directory, feel free to move this to the XDG directory.)\n\nTaskell has a `config.ini` file:\n\n```ini\n[general]\n; the default filename to create/look for\nfilename = taskell.md\n\n[layout]\n; the width of a column\ncolumn_width = 30\n\n; the padding of a column\n; for both sides, so 3 would give a gap of 6 between two columns\ncolumn_padding = 3\n\n; the icon to use when a task has a description\n; the default icon may not display on all systems\ndescription_indicator = "\xe2\x89\xa1"\n\n[markdown]\n; the markdown to start a title line with\ntitle = "##"\n\n; the markdown to start a task line with\ntask = "-"\n\n; the markdown to start a sub-task line with\nsubtask = "    *"\n```\n\nMake sure that the values in the `[markdown]` section are surrounded by **double**-quotes.\n\nIf you always use sub-tasks, an alternative setup for `[markdown]` might be:\n\n```ini\n[markdown]\ntitle = "##"\n\n; each task is a header\ntask = "###"\n\n; subtasks are list items under the header\nsubtask = "-"\n```\n\n**Warning**: currently if you change your `[markdown]` settings any older files stored with different settings will not be readable.\n\n### Controls\n\nYou can edit keyboard bindings in the `bindings.ini` config file.\n\nThe default bindings can be found in [`bindings.ini`](https://github.com/smallhadroncollider/taskell/blob/master/templates/bindings.ini).\n\nAvailable special keys: `<Space>`, `<Enter>`, `<Backspace>`, `<Left>`, `<Right>`, `<Up>`, `<Down>`\n\nOn a Mac you can use the `alt` characters: e.g. `quit = \xc5\x93` is equivalent to `alt+q`.\n\nYou shouldn\'t try to assign the `1`-`9` keys, as it will not overwrite the default behaviour.\n\n\n### Theming\n\nYou can edit Taskell\'s colour-scheme by editing `theme.ini`:\n\n```ini\n[other]\n\n; list title\ntitle.fg = green\n\n; status bar\nstatusBar.bg = magenta\nstatusBar.fg = black\n\n; current list title\ntitleCurrent.fg = blue\n\n; current task\ntaskCurrent.fg = magenta\n```\n\nYou can also change the background and default text colour:\n\n```ini\n[default]\n\n; the app background colour\ndefault.bg = brightBlack\n\n; the app text colour\ndefault.fg = white\n```\n\nThe available colours are: `black`, `red`, `green`, `yellow`, `blue`, `magenta`, `cyan`, `white`, `brightBlack`, `brightRed`, `brightGreen`, `brightYellow`, `brightBlue`, `brightMagenta`, `brightCyan`, `brightWhite`, or `default`\n\n---\n\n## Roadmap\n\nSee [roadmap.md](https://github.com/smallhadroncollider/taskell/blob/develop/roadmap.md) for planned features\n\n### Contributing\n\nPlease check the [roadmap.md](https://github.com/smallhadroncollider/taskell/blob/develop/roadmap.md) before adding any bugs/feature requests to Issues.\n\nAnyone is welcome to contribute to the project, but please read through [CONTRIBUTING.md](https://github.com/smallhadroncollider/taskell/blob/master/CONTRIBUTING.md) and make sure that you agree with the [Code of Conduct](https://github.com/smallhadroncollider/taskell/blob/master/CODE_OF_CONDUCT.md) before getting involved.\n\n---\n\n## Acknowledgements\n\nBuilt using [Brick](https://github.com/jtdaugherty/brick). Thanks to [Jonathan Daugherty](https://github.com/jtdaugherty) for answering all my questions and pointing me in the right direction. Also thanks to [Jack Leigh](https://github.com/leighman) and [Thom Wright](https://github.com/ThomWright) for helping me get started. Also thanks to [Katja Durrani](https://github.com/katjad) for submitting Taskell to [`homebrew-core`](https://github.com/Homebrew/homebrew-core).\n'