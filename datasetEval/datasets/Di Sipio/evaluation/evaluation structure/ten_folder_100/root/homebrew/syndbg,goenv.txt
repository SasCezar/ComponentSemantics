b"# Go Version Management: goenv\n\n[![Build Status](https://travis-ci.org/syndbg/goenv.svg?branch=master)](https://travis-ci.org/syndbg/goenv)\n\ngoenv aims to be as simple as possible and follow the already established\nsuccessful version management model of [pyenv](https://github.com/yyuu/pyenv) and [rbenv](https://github.com/rbenv/rbenv).\n\nThis project was cloned from [pyenv](https://github.com/yyuu/pyenv) and modified for Go.\n\n[![asciicast](https://asciinema.org/a/17IT3YiQ56hiJsb2iHpGHlJqj.svg)](https://asciinema.org/a/17IT3YiQ56hiJsb2iHpGHlJqj)\n\n### goenv _does..._\n\n* Let you **change the global Go version** on a per-user basis.\n* Provide support for **per-project Go versions**.\n* Allow you to **override the Go version** with an environment\n  variable.\n* Search commands from **multiple versions of Go at a time**.\n\n### goenv compared to others:\n\n* https://github.com/pwoolcoc/goenv depends on Python,\n* https://github.com/crsmithdev/goenv depends on Go,\n* https://github.com/moovweb/gvm is a different approach to the problem that's modeled after `nvm`.\n `goenv` is more simplified.\n\n----\n\n## Links\n\n* **[How It Works](./HOW_IT_WORKS.md)**\n* **[Installation](./INSTALL.md)**\n* **[Command Reference](./COMMANDS.md)**\n* **[Environment variables](./ENVIRONMENT_VARIABLES.md)**\n* **[Contributing](./CONTRIBUTING.md)**\n* **[Code-of-Conduct](./CODE_OF_CONDUCT.md)**\n\n"