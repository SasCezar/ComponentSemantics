b'# Homebrew Command Not Found\n\nThis project reproduces Ubuntu\xe2\x80\x99s `command-not-found` for Homebrew users on\nmacOS.\n\n[![GitHub Actions](https://github.com/Homebrew/homebrew-command-not-found/workflows/GitHub%20Actions%20CI/badge.svg)](https://github.com/Homebrew/homebrew-command-not-found/actions)\n\nOn Ubuntu, when you try to use a command that doesn\xe2\x80\x99t exist locally but is\navailable through a package, Bash will suggest you a command to install it.\nUsing this script, you can replicate this feature on macOS:\n\n```bash\n# on Ubuntu\n$ when\nThe program \'when\' is currently not installed.  You can install it by typing:\nsudo apt-get install when\n\n# on macOS with Homebrew\n$ when\nThe program \'when\' is currently not installed. You can install it by typing:\n  brew install when\n```\n\nOver 4500 formulae are supported, representing more than 16000 different commands\n(100% of the main Homebrew repo).\n\n## Install\n\nFirst, tap this repository:\n\n```bash\nbrew tap homebrew/command-not-found\n```\n\n* **Bash and Zsh**: Add the following line to your `~/.bash_profile` (bash) or `~/.zshrc` (zsh):\n\n    ```bash\n    if brew command command-not-found-init > /dev/null 2>&1; then eval "$(brew command-not-found-init)"; fi\n    ```\n\n* **Fish**: Add the following line to your `~/.config/fish/config.fish`:\n\n    ```fish\n    brew command command-not-found-init > /dev/null 2>&1; and . (brew command-not-found-init)\n    ```\n\n## Requirements\n\nThis tool requires one of the following:\n\n* [Bash](https://www.gnu.org/software/bash/) (version 4 and higher)\n* [Fish](https://fishshell.com)\n* [Zsh](https://www.zsh.org)\n\nmacOS ships Bash 3.x so you must upgrade to v4.x and configure it to be used with:\n\n```bash\nbrew update && brew install bash\n# Add the new shell to the list of allowed shells\nsudo bash -c \'echo /usr/local/bin/bash >> /etc/shells\'\n# Change to the new shell\nchsh -s /usr/local/bin/bash\n```\n\n## How it works\n\nWhen you tap the repo you\xe2\x80\x99ll get two more `brew` commands: `brew which-formula`\nand `brew which-update`. The first one uses a database file which gives you the\nformula you have to install in order to get a specific command. The file is\ngenerated by the second command by crawling all installed formulae and\ncollecting their binaries. Having this as a tap means you get an up-to-date\nbinaries database each time you run `brew update`.\n\nThe `handler.sh` script defines a `command_not_found_handle` function which is\nused by Bash when you try a command that doesn\xe2\x80\x99t exist. The function calls\n`brew which-formula` on your command, and if it finds a match it\xe2\x80\x99ll print it to\nyou. If not, you\xe2\x80\x99ll get an error as expected.\n'