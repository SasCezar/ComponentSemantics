b'ruby-macho\n================\n\n[![Gem Version](https://badge.fury.io/rb/ruby-macho.svg)](http://badge.fury.io/rb/ruby-macho)\n[![Build Status](https://travis-ci.org/Homebrew/ruby-macho.svg?branch=master)](https://travis-ci.org/Homebrew/ruby-macho)\n[![Coverage Status](https://codecov.io/gh/Homebrew/ruby-macho/branch/master/graph/badge.svg)](https://codecov.io/gh/Homebrew/ruby-macho)\n\nA Ruby library for examining and modifying Mach-O files.\n\n### What is a Mach-O file?\n\nThe [Mach-O file format](https://en.wikipedia.org/wiki/Mach-O) is used by macOS\nand iOS (among others) as a general purpose binary format for object files,\nexecutables, dynamic libraries, and so forth.\n\n### Installation\n\nruby-macho can be installed via RubyGems:\n\n```bash\n$ gem install ruby-macho\n```\n\n### Documentation\n\nFull documentation is available on [RubyDoc](http://www.rubydoc.info/gems/ruby-macho/).\n\nA quick example of what ruby-macho can do:\n\n```ruby\nrequire \'macho\'\n\nfile = MachO::MachOFile.new("/path/to/my/binary")\n\n# get the file\'s type (object, dynamic lib, executable, etc)\nfile.filetype # => :execute\n\n# get all load commands in the file and print their offsets:\nfile.load_commands.each do |lc|\n  puts "#{lc.type}: offset #{lc.offset}, size: #{lc.cmdsize}"\nend\n\n# access a specific load command\nlc_vers = file[:LC_VERSION_MIN_MACOSX].first\nputs lc_vers.version_string # => "10.10.0"\n```\n\n### What works?\n\n* Reading data from x86/x86_64/PPC Mach-O files\n* Changing the IDs of Mach-O and Fat dylibs\n* Changing install names in Mach-O and Fat files\n* Adding, deleting, and modifying rpaths.\n\n### What needs to be done?\n\n* Unit and performance testing.\n\nAttribution:\n\n* Constants were taken from Apple, Inc\'s\n[`loader.h` in `cctools/include/mach-o`](https://www.opensource.apple.com/source/cctools/cctools-870/include/mach-o/loader.h).\n(Apple Public Source License 2.0).\n\n### License\n\n`ruby-macho` is licensed under the MIT License.\n\nFor the exact terms, see the [license](LICENSE) file.\n'