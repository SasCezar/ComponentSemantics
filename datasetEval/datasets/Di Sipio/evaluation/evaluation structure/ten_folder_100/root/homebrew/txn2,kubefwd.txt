b'[English](https://github.com/txn2/kubefwd/blob/master/README.md)|[\xe4\xb8\xad\xe6\x96\x87](https://github.com/txn2/kubefwd/blob/master/README_CN.md)\n\nKubernetes port forwarding for local development, Contributions welcome!\n\n![kubefwd - kubernetes bulk port forwarding](https://raw.githubusercontent.com/txn2/kubefwd/master/kubefwd-mast2.jpg)\n\n[![Build Status](https://travis-ci.com/txn2/kubefwd.svg?branch=master)](https://travis-ci.com/txn2/kubefwd)\n[![GitHub license](https://img.shields.io/github/license/txn2/kubefwd.svg)](https://github.com/txn2/kubefwd/blob/master/LICENSE)\n[![Go Report Card](https://goreportcard.com/badge/github.com/txn2/kubefwd)](https://goreportcard.com/report/github.com/txn2/kubefwd)\n[![GitHub release](https://img.shields.io/github/release/txn2/kubefwd.svg)](https://github.com/txn2/kubefwd/releases)\n\n# kubefwd (Kube Forward)\n\nRead [Kubernetes Port Forwarding for Local Development](https://mk.imti.co/kubernetes-port-forwarding/) for background and a detailed guide to **kubefwd**. Follow [Craig Johnston](https://twitter.com/cjimti) on Twitter for project updates.\n\n**kubefwd** is a command line utility built to port forward multiple [services] within one or more [namespaces] on one or more Kubernetes clusters. **kubefwd** uses the same port exposed by the service and forwards it from a loopback IP address on your local workstation. **kubefwd** temporally adds domain entries to your `/etc/hosts` file with the service names it forwards.\n\nWhen working on our local workstation, my team and I often build applications that access services through their service names and ports within a [Kubernetes] namespace. **kubefwd** allows us to develop locally with services available as they would be in the cluster.\n\n![kubefwd - Kubernetes port forward](kubefwd_ani.gif)\n\n<p align="center">\n  <img width="654" height="684" src="https://mk.imti.co/images/content/kubefwd-net.png" alt="kubefwd - Kubernetes Port Forward Diagram">\n</p>\n\n## OS\n\nTested directly on **macOS** and **Linux** based docker containers.\n\n## MacOs Install / Update\n\n**kubefwd** assumes you have **kubectl** installed and configured with access to a Kubernetes cluster. **kubefwd** uses the **kubectl** current context. The **kubectl** configuration is not used. However, its configuration is needed to access a Kubernetes cluster.\n\nEnsure you have a context by running:\n```bash\nkubectl config current-context\n```\n\nIf you are running MacOS and use [homebrew] you can install **kubefwd** directly from the [txn2] tap:\n\n```bash\nbrew install txn2/tap/kubefwd\n```\n\nTo upgrade:\n```bash\nbrew upgrade kubefwd\n```\n\n## Windows Install / Update\n\n```batch\nscoop install kubefwd\n```\n\nTo upgrade:\n```batch\nscoop update kubefwd\n```\n\n## Docker\n\nForward all services from the namespace **the-project** to a Docker container named **the-project**:\n\n```bash\ndocker run -it --rm --privileged --name the-project \\\n    -v "$(echo $HOME)/.kube/":/root/.kube/ \\\n    txn2/kubefwd services -n the-project\n```\n\n\nExecute a curl call to an Elasticsearch service in your Kubernetes cluster:\n\n```bash\ndocker exec the-project curl -s elasticsearch:9200\n```\n\n## Alternative Installs (tar.gz, RPM, deb, snap)\nCheck out the [releases](https://github.com/txn2/kubefwd/releases) section on Github for alternative binaries.\n\n## Contribute\n[Fork kubefwd](https://github.com/txn2/kubefwd) and build a custom version. We welcome any useful pull requests.\n\n## Usage\n\nForward all services for the namespace `the-project`. Kubefwd finds the first Pod associated with each Kubernetes service found in the Namespace and port forwards it based on the Service spec to a local IP  address and port. A domain name is added to your /etc/hosts file pointing to the local IP.\n\n### Update\nForwarding of headlesss Service is currently supported, Kubefwd forward all Pods for headless service; At the same time, the namespace-level service monitoring is supported. When a new service is created or the old service is deleted under the namespace, kubefwd can automatically start/end forwarding; Supports Pod-level forwarding monitoring. When the forwarded Pod is deleted (such as updating the deployment, etc.), the forwarding of the service to which the pod belongs is automatically restarted;\n\n```bash\nsudo kubefwd svc -n the-project\n```\n\nForward all svc for the namespace `the-project` where labeled `system: wx`:\n\n```bash\nsudo kubefwd svc -l system=wx -n the-project\n```\n\n## Help\n\n```bash\n$ kubefwd svc --help\n\nINFO[20:48:38]  _          _           __             _\nINFO[20:48:38] | | ___   _| |__   ___ / _|_      ____| |\nINFO[20:48:38] | |/ / | | | \'_ \\ / _ \\ |_\\ \\ /\\ / / _  |\nINFO[20:48:38] |   <| |_| | |_) |  __/  _|\\ V  V / (_| |\nINFO[20:48:38] |_|\\_\\\\__,_|_.__/ \\___|_|   \\_/\\_/ \\__,_|\nINFO[20:48:38]\nINFO[20:48:38] Version 1.11.0\nINFO[20:48:38] https://github.com/txn2/kubefwd\nINFO[20:48:38]\nForward multiple Kubernetes services from one or more namespaces. Filter services with selector.\n\nUsage:\n  kubefwd services [flags]\n\nAliases:\n  services, svcs, svc\n\nExamples:\n  kubefwd svc -n the-project\n  kubefwd svc -n the-project -l app=wx,component=api\n  kubefwd svc -n default -n the-project\n  kubefwd svc -n default -d internal.example.com\n  kubefwd svc -n the-project -x prod-cluster\n\n\nFlags:\n  -x, --context strings     specify a context to override the current context\n  -d, --domain string       Append a pseudo domain name to generated host names.\n      --exitonfailure       Exit(1) on failure. Useful for forcing a container restart.\n  -h, --help                help for services\n  -c, --kubeconfig string   absolute path to a kubectl config file\n  -n, --namespace strings   Specify a namespace. Specify multiple namespaces by duplicating this argument.\n  -l, --selector string     Selector (label query) to filter on; supports \'=\', \'==\', and \'!=\' (e.g. -l key1=value1,key2=value2).\n  -v, --verbose             Verbose output.\n```\n\n## Development\n\n### Build and Run\n Local\n\n```bash\ngo run ./cmd/kubefwd/kubefwd.go\n```\n\n### Build Release\n\nBuild test release:\n```bash\ngoreleaser --skip-publish --rm-dist --skip-validate\n```\n\nBuild and release:\n```bash\nGITHUB_TOKEN=$GITHUB_TOKEN goreleaser --rm-dist\n```\n\n### License\n\nApache License 2.0\n\n### Sponsor\n\nOpens source utility by [Craig Johnston](https://imti.co) and sponsored by [Deasil Works, Inc.]\n\n\n[Kubernetes]:https://kubernetes.io/\n[namespaces]:https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n[services]:https://kubernetes.io/docs/concepts/services-networking/service/\n[homebrew]:https://brew.sh/\n[txn2]:https://txn2.com/\n[golang:1.11.5]:https://hub.docker.com/_/golang/\n[Deasil Works, Inc.]:https://deasil.works/\n'