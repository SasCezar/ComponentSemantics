b"# nesicide [![Build Status](https://travis-ci.org/christopherpow/nesicide.svg?branch=master)](https://travis-ci.org/christopherpow/nesicide) [![Build status](https://ci.appveyor.com/api/projects/status/284fj1df8dur76g5?svg=true)](https://ci.appveyor.com/project/christopherpow/nesicide)\n\nnesicide is an Integrated Development Environment (IDE) for the 8-bit Nintendo Entertainment System (NES).\n\nThis project contains:\n\n* NESICIDE (the IDE itself)\n* A NES emulator (standalone package of the emulator used in the IDE)\n* Qt FamiTracker (a fork of jsr's FamiTracker)\n* FamiPlayer (a music player for .ftm files)\n\n## Prerequisites\n\nThe following steps are required prior to building this project on any platform.\n\n0. Install `git`\n1. Install [Qt 5.6.2](https://download.qt.io/official_releases/qt/5.6/5.6.2/) as it was the latest kit to be verified to build NESICIDE properly with not errors. Please do not use a kit later than this, or if you do, please create a pull request with necessary changes.\n\n### Debian prerequisites\n\n```sh\nsudo apt-get install build-essential libasound2-dev liblua5.1-dev libsdl1.2-dev libgl1-mesa-dev wine-dev\n```\n\n### Arch Linux prerequisites\n\n```sh\nsudo pacman -S lua sdl mesa wine\n```\n\n### Windows prerequisites\n\nInstall [GnuWin32](https://sourceforge.net/projects/getgnuwin32/) and [wget](http://gnuwin32.sourceforge.net/packages/wget.htm).\n\n## Building\n\nThis project builds for Linux, macOS, and Windows. To perform a build for any supported platform follow the instructions for the platform below.\n\n> NOTE: The build process takes a while, so grab a snack while you wait. ;)\n\n### Linux\n\n0. `cd build`\n1. `./build.sh`\n2. Once the build process is complete run: `./linux-deploy.sh`\n\n### macOS\n\n0. `cd build`\n1. `./build.sh`\n2. Once the build process is complete run: `./osx-deploy.sh`\n\n### Windows\n\n0. `cd build`\n\nNOTE: The build process uses GnuWin32 tools and MinGW tools. Install these and make sure that `mingw32-make` and `wget` are on your path.\n\n1. `./win-build.sh`\n\n2. Once the build process is complete run: `./win-deploy.sh`\n\n## Running\n\nThe `deploy.sh` creates a tarball containing all of the executables and dependent libraries. Extract the tarball to your location of choice and execute.\n\nEnjoy!\n"