b'# Jalpc. [![Analytics](https://ga-beacon.appspot.com/UA-73784599-1/welcome-page)](https://github.com/jarrekk/Jalpc)\n\n[![MIT Licence](https://badges.frapsoft.com/os/mit/mit.svg?v=103)](https://opensource.org/licenses/mit-license.php)\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n[![Open Source Love](https://badges.frapsoft.com/os/v1/open-source.png?v=103)](https://github.com/ellerbrock/open-source-badge/)\n\n<https://jarrekk.github.io/Jalpc/>\n\n<http://www.jarrekk.com>  -- Personal website\n\n![Blog](https://github.com/jarrekk/Jalpc/raw/master/readme_files/Jalpc.png)\n\n- [3 steps to setup this theme at your website!](#3-steps-to-setup-this-theme-at-your-website)\n- [Features](#features)\n  - [Index page](#index-page)\n    - [`_data/*.yml`](#_datayml)\n  - [Chart Skills](#chart-skills)\n  - [Categories in blog page](#categories-in-blog-page)\n  - [Pagination](#pagination)\n  - [Page views counter](#page-views-counter)\n  - [Multilingual Page](#multilingual-page)\n  - [Web analytics](#web-analytics)\n  - [Comment](#comment)\n  - [Share](#share)\n  - [Search engines](#search-engines)\n  - [Compress CSS and JS files](#compress-css-and-js-files)\n- [Put in a Jalpc Plug](#put-in-a-jalpc-plug)\n- [Upgrading Jalpc](#upgrading-jalpc)\n  - [Ensure there\'s an upstream remote](#ensure-theres-an-upstream-remote)\n  - [Pull in the latest changes](#pull-in-the-latest-changes)\n- [Todo](#todo)\n- [Donate Jalpc](#donate-jalpc)\n- [Wiki](#wiki)\n- [Ad](#ad)\n\nThis is a simple, beautiful and swift theme for Jekyll. It\'s mobile first, fluidly responsive, and delightfully lightweight.\n\nIf you\'re completely new to Jekyll, I recommend checking out the documentation at <http://jekyllrb.com> or there\'s a tutorial by Smashing Magazine.\n\n# 3 steps to setup this theme at your website!\n\nHere is a [document](https://jarrekk.github.io/Jalpc/html/2017/01/31/3-steps-to-setup-website-with-Jalpc.html) of how to setup this theme with 3 steps and a [wiki](https://github.com/jarrekk/Jalpc/wiki/How-to-add-posts) of how to add posts. If you have any **questions** please ask me at [GitHub Issues](https://github.com/jarrekk/Jalpc/issues).\n\n# Features\n\n## Index page\n\nThe index page is seprated into several sections and they are located in `_includes/sections`,the configuration is in `_data/landing.yml` and section\'s detail configuration is in `_data/*.yml`.\n\n### `_data/*.yml`\n\nThese files are used to dynamically render pages, so you almost don\'t have to edit *html files* to change your own theme, besides you can use `jekyll serve --watch` to reload changes.\n\nThe following is mapping between *yml files* to *sections*.\n\n* landing.yml ==> index.html\n* index/language.yml ==> index.html\n* index/careers.yml  ==>  _includes/sections/career.html\n* index/skills.yml  ==>  _includes/sections/skills.html\n* index/projects.yml  ==>  _includes/sections/projects.html\n* index/links.yml  ==>  _includes/sections/links.html\n\nThis *yml file* is about blog page navbar\n\n* blog.yml ==> _includes/header.html\n\nThe following is mapping between *yml files* to *donation*\n\n* donation/donationlist.yml ==> blog/donate.html\n* donation/alipay.yml  ==>  blog/donate.html\n* donation/wechat_pay.yml ==> blog/donate.yml\n\n## Chart Skills\n\nI use [Chart.js](http://www.chartjs.org/) to show skills, the type of skills\' chart is radar, if you want to custom, please read document of Chart.js and edit **_includes/sections/skills.html** and **_data/index/skills.yml**.\n\n## Categories in blog page\n\nIn blog page, we categorize posts into several categories by url, all category pages use same template html file - `_includes/category.html`.\n\nFor example: URL is `http://127.0.0.1:4000/python/`. In `_data/blog.yml`, we define this category named `Python`, so in `_includes/category.html` we get this URL(/python/) and change it to my category(Python), then this page are posts about **Python**. The following code is about how to get url and display corresponding posts in  `_includes/category.html`.\n\n```html\n<div class="row">\n    <div class="col-lg-12 text-center">\n        <div class="navy-line"></div>\n        {% assign category = page.url | remove:\'/\' | capitalize %}\n        {% if category == \'Html\' %}\n        {% assign category = category | upcase %}\n        {% endif %}\n        <h1>{{ category }}</h1>\n    </div>\n</div>\n<div class="wrapper wrapper-content  animated fadeInRight blog">\n    <div class="row">\n        <ul id="pag-itemContainer" style="list-style:none;">\n            {% assign counter = 0 %}\n            {% for post in site.categories[category] %}\n            {% assign counter = counter | plus: 1 %}\n            <li>\n```\n\n## Pagination\n\nThe pagination in jekyll is not very perfect,so I use front-end web method,there is a [blog](http://www.jarrekk.com/html/2016/06/04/jekyll-pagination-with-jpages.html) about the method and you can refer to [jPages](http://luis-almeida.github.io/jPages).\n\n## Page views counter\n\nMany third party page counter platforms are too slow,so I count my website page view myself,the javascript file is [static/js/count.min.js](https://github.com/jarrekk/jalpc_jekyll_theme/blob/gh-pages/static/js/count.min.js) ([static/js/count.js](https://github.com/jarrekk/jalpc_jekyll_theme/blob/gh-pages/static/js/count.js)),the backend API is written with flask on [Vultr VPS](https://www.vultr.com/), detail code please see [ztool-backhend-mongo](https://github.com/Z-Tool/ztool-backhend-mongo).\n\n## Multilingual Page\n\nThe landing page has multilingual support with the [i18next](http://i18next.com) plugin.\n\nLanguages are configured in the `_data/index/language.yml` file.\n\n> Not everyone needs this feature, so I make it very easy to remove it, just clear content in file `_data/language.yml` and folder `static/locales/`.\n\nAbout how to custom multilingual page, please see [wiki](https://github.com/jarrekk/Jalpc/wiki/Multilingual-Page).\n\n## Web analytics\n\nI use [Google analytics](https://www.google.com/analytics/) and [GrowingIO](https://www.growingio.com/) to do web analytics, you can choose either to realize it,just register a account and replace id in `_config.yml`.\n\n## Comment\n\nI use [Disqus](https://disqus.com/) to realize comment. You should set disqus_shortname and get public key and then, in `_config.yml`, edit the disqus value to enable Disqus.\n\n## Share\n\nI use [AddToAny](https://www.addtoany.com/) to share my blog on other social network platform. You can go to this website to custom your share buttons and paste code at `_includes/share.html`.\n\n![share](https://github.com/jarrekk/Jalpc/raw/master/readme_files/share.png)\n\n## Search engines\n\nI use javascript to realize blog search,you can double click `Ctrl` or click the icon at lower right corner of the page,the detail you can got to this [repository](https://github.com/androiddevelop/jekyll-search). Just use it.\n\n![search](https://github.com/jarrekk/Jalpc/raw/master/readme_files/search.gif)\n\n## Compress CSS and JS files\n\nAll CSS and JS files are compressed at `/static/assets`.\n\nI use [UglifyJS2](https://github.com/mishoo/UglifyJS2), [clean-css](https://github.com/jakubpawlowicz/clean-css) to compress CSS and JS files, customised CSS files are at `_sass` folder which is feature of [Jekyll](https://jekyllrb.com/docs/assets/). If you want to custom CSS and JS files, you need to do the following:\n\n1. Install [NPM](https://github.com/npm/npm) then install **UglifyJS2** and **clean-css**: `npm install -g uglifyjs; npm install -g clean-css`, then run `npm install` at root dir of project.\n2. Compress script is **build.js**\n3. If you want to add or remove CSS/JS files, just edit **build/build.js** and **build/files.conf.js**, then run `npm run build` at root dir of project, link/src files will use new files.\n\nOR\n\nEdit CSS files at `_sass` folder.\n\n# Put in a Jalpc Plug\n\nIf you want to give credit to the Jalpc theme with a link to my personal website <http://www.jarrekk.com>, that\'d be awesome. No worries if you don\'t.\n\n# Upgrading Jalpc\n\nJalpc is always being improved by its users, so sometimes one may need to upgrade.\n\n## Ensure there\'s an upstream remote\n\nIf `git remote -v` doesn\'t have an upstream listed, you can do the following to add it:\n\n```\ngit remote add upstream https://github.com/jarrekk/Jalpc.git\n```\n\n## Pull in the latest changes\n\n```\ngit pull upstream gh-pages\n```\n\nThere may be merge conflicts, so be sure to fix the files that git lists if they occur. That\'s it!\n\n# Testing Locally\nTo test your site locally, you\xe2\x80\x99ll need\n\n- [ruby](https://www.ruby-lang.org/en/)\n- the [github-pages](https://github.com/github/pages-gem) gem\n\n## Installing ruby\nThere are [lots of different ways to install ruby](https://www.ruby-lang.org/en/documentation/installation/).\n\nIn Mac OS X, older versions of ruby will already be installed. But I use the [Ruby Version Manager (RVM)](https://rvm.io/) to have a more recent version. You could also use [Homebrew](https://brew.sh/).\n\nIn Windows, use [RubyInstaller](https://rubyinstaller.org/). (In most of this tutorial, I\xe2\x80\x99ve assumed you\xe2\x80\x99re using a Mac or some flavor of Unix. It\xe2\x80\x99s possible that none of this was usable for Windows folks. Sorry!)\n\n## Installing the github-pages gem\nRun the following command:\n\n```\ngem install github-pages\n```\n\nThis will install the github-pages gem and all dependencies (including [jekyll](https://jekyllrb.com/)).\n\n## Later, to update the gem, type:\n\n```\ngem update github-pages\n```\n\nTesting your site locally\nTo construct and test your site locally, go into the directory and type\n\n```\njekyll build\n```\n\nThis will create (or modify) a `_site/ directory`, containing everything from `assets/`, and then the `index.md` and all `pages/*.md` files, converted to html. (So there\xe2\x80\x99ll be `_site/index.html` and the various `_site/pages/*.html.`)\n\nType the following in order to \xe2\x80\x9cserve\xe2\x80\x9d the site. This will first run build, and so it does not need to be preceded by `jekyll build`.\n\n```\njekyll serve\n```\n\nNow open your browser and go to `http://localhost:4000/site-name/`\n\n# Todo\n- [ ] `jekyll server --watch` mode need to use original CSS/JS files\n- [ ] User can customise index page\'s section title.\n- [x] Non-github projects also have links.\n- [ ] Add some custom color themes for selection(Nav bar, background, words, dominant hue).\n\n# Donate Jalpc\nIf this project let you enjoy your blog time, you can give me a cup of coffee :)\n\n[![paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://paypal.me/jarrekk)\n\n# Wiki\n\n* [Multilingual Page](https://github.com/jarrekk/Jalpc/wiki/Multilingual-Page)\n* [How to add posts](https://github.com/jarrekk/Jalpc/wiki/How-to-add-posts)\n* [Change Log](https://github.com/jarrekk/Jalpc/wiki/Change-Log)\n* [Contributors](https://github.com/jarrekk/Jalpc/wiki/Contributors)\n* [Thanks to the following](https://github.com/jarrekk/Jalpc/wiki/Thanks-to-the-following)\n\n# Ad\n[Jalpc-A](https://github.com/Jack614/Jalpc-A): another Jekyll theme written by [AngularJS](https://angularjs.org/).\n\n'