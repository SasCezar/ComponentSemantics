b'# minima\n\n*Minima is a one-size-fits-all Jekyll theme for writers*. It\'s Jekyll\'s default (and first) theme. It\'s what you get when you run `jekyll new`.\n\n***Disclaimer:** The information here may vary depending on the version you\'re using. Please refer to the `README.md` bundled\nwithin the theme-gem for information specific to your version or by pointing your browser to the Git tag corresponding to your\nversion. e.g. https://github.com/jekyll/minima/blob/v2.5.0/README.md*  \n*Running `bundle show minima` will provide you with the local path to your current theme version.*\n\n\n[Theme preview](https://jekyll.github.io/minima/)\n\n![minima theme preview](/screenshot.png)\n\n## Installation\n\nAdd this line to your Jekyll site\'s Gemfile:\n\n```ruby\ngem "minima"\n```\n\nAnd then execute:\n\n    $ bundle\n\n\n## Contents At-A-Glance\n\nMinima has been scaffolded by the `jekyll new-theme` command and therefore has all the necessary files and directories to have a new Jekyll site up and running with zero-configuration.\n\n### Layouts\n\nRefers to files within the `_layouts` directory, that define the markup for your theme.\n\n  - `default.html` &mdash; The base layout that lays the foundation for subsequent layouts. The derived layouts inject their contents into this file at the line that says ` {{ content }} ` and are linked to this file via [FrontMatter](https://jekyllrb.com/docs/frontmatter/) declaration `layout: default`.\n  - `home.html` &mdash; The layout for your landing-page / home-page / index-page. [[More Info.](#home-layout)]\n  - `page.html` &mdash; The layout for your documents that contain FrontMatter, but are not posts.\n  - `post.html` &mdash; The layout for your posts.\n\n#### Home Layout\n\n`home.html` is a flexible HTML layout for the site\'s landing-page / home-page / index-page. <br/>\n\n##### *Main Heading and Content-injection*\n\nFrom Minima v2.2 onwards, the *home* layout will inject all content from your `index.md` / `index.html` **before** the **`Posts`** heading. This will allow you to include non-posts related content to be published on the landing page under a dedicated heading. *We recommended that you title this section with a Heading2 (`##`)*.\n\nUsually the `site.title` itself would suffice as the implicit \'main-title\' for a landing-page. But, if your landing-page would like a heading to be explicitly displayed, then simply define a `title` variable in the document\'s front matter and it will be rendered with an `<h1>` tag.\n\n##### *Post Listing*\n\nThis section is optional from Minima v2.2 onwards.<br/>\nIt will be automatically included only when your site contains one or more valid posts or drafts (if the site is configured to `show_drafts`).\n\nThe title for this section is `Posts` by default and rendered with an `<h2>` tag. You can customize this heading by defining a `list_title` variable in the document\'s front matter.\n\n\n### Includes\n\nRefers to snippets of code within the `_includes` directory that can be inserted in multiple layouts (and another include-file as well) within the same theme-gem.\n\n  - `disqus_comments.html` &mdash; Code to markup disqus comment box.\n  - `footer.html` &mdash; Defines the site\'s footer section.\n  - `google-analytics.html` &mdash; Inserts Google Analytics module (active only in production environment).\n  - `head.html` &mdash; Code-block that defines the `<head></head>` in *default* layout.\n  - `header.html` &mdash; Defines the site\'s main header section. By default, pages with a defined `title` attribute will have links displayed here.\n  - `social.html` &mdash; Renders social-media icons based on the `minima:social_links` data in the config file.\n\n\n### Sass\n\nRefers to `.scss` files within the `_sass` directory that define the theme\'s styles.\n\n  - `minima-classic.scss` &mdash; The core file imported by preprocessed `css/style.scss`, it defines the variable defaults for\n    the "classic" skin of the theme.\n  - `minima/initialize.scss` &mdash; A component that defines the theme\'s *skin-agnostic* variable defaults and sass partials.\n  - `minima/custom-variables.scss` &mdash; A hook that allows overriding variable defaults and mixins. (*Note: Cannot override styles*)\n  - `minima/custom-styles.scss` &mdash; A hook that allows overriding styles. (*Note: Cannot override variables*)\n  - `minima/_base.scss` &mdash; Sass partial for resets and defines base styles for various HTML elements.\n  - `minima/_layout.scss` &mdash; Sass partial that defines the visual style for various layouts.\n\nRefer the [skins](#skins) section for more details.\n\n\n### Assets\n\nRefers to various asset files within the `assets` directory.\nContains the `css/style.scss` that imports sass files from within the `_sass` directory. This `css/style.scss` is what gets processed into the theme\'s main stylesheet `main.css` called by `_layouts/default.html` via `_includes/head.html`.\n\nThis directory can include sub-directories to manage assets of similar type (`img`, `fonts`, `svg`), and will be copied over as is, to the final transformed site directory.\n\n\n### Plugins\n\nMinima comes with [`jekyll-seo-tag`](https://github.com/jekyll/jekyll-seo-tag) plugin preinstalled to make sure your website gets the most useful meta tags. See [usage](https://github.com/jekyll/jekyll-seo-tag#usage) to know how to set it up.\n\n\n## Usage\n\nHave the following line in your config file:\n\n```yaml\ntheme: minima\n```\n\n\n### Customizing templates\n\nTo override the default structure and style of minima, simply create the concerned directory at the root of your site, copy the file you wish to customize to that directory, and then edit the file.\ne.g., to override the [`_includes/head.html `](_includes/head.html) file to specify a custom style path, create an `_includes` directory, copy `_includes/head.html` from minima gem folder to `<yoursite>/_includes` and start editing that file.\n\nThe site\'s default CSS has now moved to a new place within the gem itself, [`assets/css/style.scss`](assets/css/style.scss).\n\nIn Minima 3.0, if you only need to customize the colors of the theme, refer to the subsequent section on skins. To have your\n*CSS overrides* in sync with upstream changes released in future versions, you can collect all your overrides for the Sass\nvariables and mixins inside a sass file placed at `_sass/minima/custom-variables.scss` and all other overrides inside a sass file\nplaced at path `_sass/minima/custom.scss`.\n\nYou need not maintain entire partial(s) at the site\'s source just to override a few styles.\n\n#### Skins\n\nMinima 3.0 supports defining and switching between multiple color-palettes (or *skins*).\n\n```\n.\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 minima.scss\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 minima\n    \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 _syntax-highlighting.scss\n```\n\n\nA skin is a Sass file named in the format `minima-*` and is the core file imported by the `assets/css/style.scss`. It defines the\nvariable defaults related to the "color" aspect of the theme and imports two components:\n\n  - `minima/initialize.scss` &mdash; Defines the theme\'s *skin-agnostic* variable defaults and sass partials for styles.\n  - `minima/custom-styles.scss` &mdash; A hook for overriding the predefined styles. (*Note: Cannot override variables*)\n\nA skin also embeds the Sass rules related to syntax-highlighting since that is primarily related to color and has to be adjusted\nin harmony with the current skin.\n\nThe default color palette for Minima is defined within `_sass/minima-classic.scss`. To switch to another available skin, simply\ndeclare it in the site\'s config file. For example, to activate `_sass/minima-sunrise.scss` as the skin, the setting would be:\n\n```yaml\nminima:\n  skin: sunrise\n```\n\nAs part of the migration to support skins, some existing Sass variables have been retired and some **have been redefined** as\nsummarized in the following table:\n\nMinima 2.0      | Minima 3.0\n--------------- | ----------\n`$brand-color`  | `$link-base-color`\n`$grey-*`       | `$brand-*`\n`$orange-color` | *has been removed*\n\n\n### Customize navigation links\n\nThis allows you to set which pages you want to appear in the navigation area and configure order of the links.\n\nFor instance, to only link to the `about` and the `portfolio` page, add the following to your `_config.yml`:\n\n```yaml\nheader_pages:\n  - about.md\n  - portfolio.md\n```\n\n\n### Change default date format\n\nYou can change the default date format by specifying `site.minima.date_format`\nin `_config.yml`.\n\n```\n# Minima date format\n# refer to http://shopify.github.io/liquid/filters/date/ if you want to customize this\nminima:\n  date_format: "%b %-d, %Y"\n```\n\n\n### Add your favicons\n\n1. Head over to [https://realfavicongenerator.net/](https://realfavicongenerator.net/) to add your own favicons.\n2. [Customize](#customization) default `_includes/head.html` in your source directory and insert the given code snippet.\n\n\n### Enabling comments (via Disqus)\n\nOptionally, if you have a Disqus account, you can tell Jekyll to use it to show a comments section below each post.\n\nTo enable it, add the following lines to your Jekyll site:\n\n```yaml\n  disqus:\n    shortname: my_disqus_shortname\n```\n\nYou can find out more about Disqus\' shortnames [here](https://help.disqus.com/installation/whats-a-shortname).\n\nComments are enabled by default and will only appear in production, i.e., `JEKYLL_ENV=production`\n\nIf you don\'t want to display comments for a particular post you can disable them by adding `comments: false` to that post\'s YAML Front Matter.\n\n:warning: `url`, e.g. `https://example.com`, must be set in you config file for Disqus to work.\n\n\n### Social networks\n\nYou can add links to the accounts you have on other sites, with respective icon, by adding one or more of the following options in your config.\nFrom `Minima-3.0` onwards, the usernames are to be nested under `minima.social_links`, with the keys being simply the social-network\'s name:\n\n```yaml\nminima:\n  social_links:\n    twitter: jekyllrb\n    github: jekyll\n    dribbble: jekyll\n    facebook: jekyll\n    flickr: jekyll\n    instagram: jekyll\n    linkedin: jekyll\n    pinterest: jekyll\n    telegram: jekyll\n    googleplus: +jekyll\n    microdotblog: jekyll\n    keybase: jekyll\n    rss: rss\n\n    mastodon:\n     - username: jekyll\n       instance: example.com\n     - username: jekyll2\n       instance: example.com\n\n    youtube: jekyll\n    youtube_channel: UC8CXR0-3I70i1tfPg1PAE1g\n    youtube_channel_name: CloudCannon\n```\n\n\n### Enabling Google Analytics\n\nTo enable Google Analytics, add the following lines to your Jekyll site:\n\n```yaml\n  google_analytics: UA-NNNNNNNN-N\n```\n\nGoogle Analytics will only appear in production, i.e., `JEKYLL_ENV=production`\n\n### Enabling Excerpts on the Home Page\n\nTo display post-excerpts on the Home Page, simply add the following to your `_config.yml`:\n\n```yaml\nshow_excerpts: true\n```\n\n\n## Contributing\n\nBug reports and pull requests are welcome on GitHub at https://github.com/jekyll/minima. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the [Contributor Covenant](http://contributor-covenant.org) code of conduct.\n\n## Development\n\nTo set up your environment to develop this theme, run `script/bootstrap`.\n\nTo test your theme, run `script/server` (or `bundle exec jekyll serve`) and open your browser at `http://localhost:4000`. This starts a Jekyll server using your theme and the contents. As you make modifications, your site will regenerate and you should see the changes in the browser after a refresh.\n\n## License\n\nThe theme is available as open source under the terms of the [MIT License](http://opensource.org/licenses/MIT).\n'