b'# Lagrange\n\nLagrange is a minimalist Jekyll theme for running a personal blog or site for free through [Github Pages](https://pages.github.com/), or on your own server. Everything that you will ever need to know about this Jekyll theme is included in the README below, which you can also find in [the demo site](https://lenpaul.github.io/Lagrange/).\n\n![alt text](https://user-images.githubusercontent.com/8409329/32631384-17107870-c56e-11e7-932f-deeb7c12e4db.png "Lagrange Demo Image")\n\n## Notable features\n\n* Compatible with GitHub Pages.\n\n* Support for Jekyll\'s built-in Sass/SCSS preprocessor and data files for making customizing easier.\n\n* [Google Analytics](https://www.google.com/analytics/) support.\n\n* Commenting support powered by [Disqus](https://disqus.com/).\n\n* Optimized for search engines.\n\n* LaTeX support through [MathJax](https://www.mathjax.org/).\n\n## Table of Contents\n\n1. [Introduction](#introduction)\n   1. [What is Jekyll](#what-is-jekyll)\n   2. [Never Used Jeykll Before?](#never-used-jekyll-before)\n2. [Installation](#installation)\n   1. [GitHub Pages Installation](#github-pages-installation)\n   2. [Local Installation](#local-installation)\n   3. [Directory Structure](#directory-structure)\n   4. [Starting From Scratch](#starting-from-scratch)\n3. [Configuration](#configuration)\n   1. [Sample Posts](#sample-posts)\n   2. [Site Variables](#site-variables)\n   3. [Adding Menu Pages](#adding-menu-pages)\n   4. [Posts](#posts)\n   5. [Layouts](#layouts)\n   6. [YAML Front Block Matter](#yaml-front-block-matter)\n4. [Features](#features)\n   1. [Design Considerations](#design-considerations)\n   2. [Disqus](#disqus)\n   3. [Google Analytics](#google-analytics)\n   4. [RSS Feeds](#rss-feeds)\n   5. [Social Media Icons](#social-media-icons)\n   6. [MathJax](#mathjax)\n   7. [Syntax Highlighting](#syntax-highlighting)\n   8. [Markdown](#markdown)\n5. [Everything Else](#everything-else)\n6. [Contributing](#Contributing)\n7. [Questions?](#questions)\n8. [Credits](#credits)\n9. [License](#license)\n\n## Introduction\n\nLagrange is a Jekyll theme that was built to be 100% compatible with [GitHub Pages](https://pages.github.com/). If you are unfamiliar with GitHub Pages, you can check out [their documentation](https://help.github.com/categories/github-pages-basics/) for more information. [Jonathan McGlone\'s guide](http://jmcglone.com/guides/github-pages/) on creating and hosting a personal site on GitHub is also a good resource.\n\n### What is Jekyll?\n\nJekyll is a simple, blog-aware, static site generator for personal, project, or organization sites. Basically, Jekyll takes your page content along with template files and produces a complete website. For more information, visit the [official Jekyll site](https://jekyllrb.com/docs/home/) for their documentation. Codecademy also offers a great course on [how to deploy a Jekyll site](https://www.codecademy.com/learn/deploy-a-website) for complete beginners.\n\n### Never Used Jekyll Before?\n\nThe beauty of hosting your website on GitHub is that you don\'t have to actually have Jekyll installed on your computer. Everything can be done through the GitHub code editor, with minimal knowledge of how to use Jekyll or the command line. All you have to do is add your posts to the `_posts` directory and edit the `_config.yml` file to change the site settings. With some rudimentary knowledge of HTML and CSS, you can even modify the site to your liking. This can all be done through the GitHub code editor, which acts like a content management system (CMS).\n\n## Installation\n\n### GitHub Pages Installation\n\nTo start using Jekyll right away with GitHub Pages, [fork the Lagrange repository on GitHub](https://github.com/LeNPaul/Lagrange/fork). From there, you can rename your repository to `USERNAME.github.io`, where `USERNAME` is your GitHub username, and edit the `settings.yml` file in the `_data` folder to your liking. Ensure that you have a branch named `gh-pages`. Your website should be ready immediately at \'http://USERNAME.github.io\'. Note: if you are hosting several sites under the same GitHub username, then you will have to use [Project Pages instead of User Pages](https://help.github.com/articles/user-organization-and-project-pages/) - just change the repository name to something other than \'http://USERNAME.github.io\'.\n\nHead over to the `_posts` directory to view all the posts that are currently on the website, and to see examples of what post files generally look like. You can simply just duplicate the template post and start adding your own content.\n\n### Local Installation\n\nFor a full local installation of Lagrange, [download your own copy of Lagrange](https://github.com/LeNPaul/Lagrange/archive/gh-pages.zip) and unzip it into it\'s own directory. From there, open up your favorite command line tool, enter `bundle install`, and then enter `jekyll serve`. Your site should be up and running locally at [http://localhost:4000](http://localhost:4000).\n\n### Directory Structure\n\nIf you are familiar with Jekyll, then the Lagrange directory structure shouldn\'t be too difficult to navigate. The following some highlights of the differences you might notice between the default directory structure. More information on what these folders and files do can be found in the [Jekyll documentation site](https://jekyllrb.com/docs/structure/).\n\n```bash\nLagrange/\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 _data                      # Data files\n|  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 settings.yml            # Theme settings and custom text\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 _includes                  # Theme includes\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 _layouts                   # Theme layouts (see below for details)\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 _posts                     # Where all your posts will go\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 assets                     # Style sheets and images are found here\n|  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 css                     # Style sheets go here\n|  |  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 main.css             # Main CSS file\n|  |  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 syntax.css           # Style sheet for code syntax highlighting\n|  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 img                     # Images go here\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 menu                       # Menu pages\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 _config.yml                # Site build settings\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 Gemfile                    # Ruby Gemfile for managing Jekyll plugins\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 index.md                   # Home page\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 LICENSE.md                 # License for this theme\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 README.md                  # Includes all of the documentation for this theme\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 rss-feed.xml               # Generates RSS 2.0 file which Jekyll points to\n```\n\n### Starting From Scratch\n\nTo completely start from scratch, simply delete all the files in the `_posts`, `assets/img`, and `menu` folder, and add your own content. You may also replace the `README.md` file with your own README. Everything in the `_data` folder and `_config.yml` file can be edited to suit your needs. You may also change the `favicon.ico` file to your own favicon.\n\n## Configuration\n\n### Sample Posts\n\nVisit the [the demo site](https://lenpaul.github.io/Lagrange/) to find sample posts that show what different types of text formatting look like. You can find these posts in the `_posts` folder, which show what the best practices for setting up your own site are.\n\n### Site Variables\n\nTo change site build settings, edit the `_config.yml` file found in the root of your repository, which you can tweak however you like. More information on configuration settings and plugins can be found on [the Jekyll documentation site](https://jekyllrb.com/docs/configuration/). This is also where you will be able to customize the title, description, and the author/owner of your site.\n\nIf you are hosting your site on GitHub Pages, then committing a change to the `_config.yml` file will force a rebuild of your site with Jekyll. Any changes made should be viewable soon after. If you are hosting your site locally, then you must run `jekyll serve` again for the changes to take place.\n\nIn the `settings.yml` file found in the `_data` folder, you will be able to customize your site settings, such as setting Disqus comments, Google Analytics, what shows up in your menu, and social media information.\n\n### Adding Menu Pages\n\nThe menu pages are found in the `menu` folder in the root directory, and can be added to your menu in the `settings.yml` file.\n\n### Posts\n\nYou will find example posts in your `_posts` directory. Go ahead and edit any post and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.\n\nTo add new posts, simply add a file in the `_posts` directory that follows the convention of `YYYY-MM-DD-name-of-post.md` and includes the necessary front matter. Take a look at any sample post to get an idea about how it works. If you already have a website built with Jekyll, simply copy over your posts to migrate to Lagrange.\n\n### Layouts\n\nThere are two main layout options that are included with Lagrange: post and page. Layouts are specified through the [YAML front block matter](https://jekyllrb.com/docs/frontmatter/). Any file that contains a YAML front block matter will be processed by Jekyll. For example:\n\n```\n---\nlayout: post\ntitle: "Example Post"\n---\n```\n\nExamples of what posts looks like can be found in the `_posts` directory, which includes this post you are reading right now. Posts are the basic blog post layout, which includes a header image, post content, author name, date published, social media sharing links, and related posts.\n\nPages are essentially the post layout without any of the extra features of the posts layout. An example of what pages look like can be found at the [About](https://lenpaul.github.io/Lagrange/menu/about.html) and [Contacts](https://lenpaul.github.io/Lagrange/menu/contact.html).\n\nIn addition to the two main layout options above, there are also custom layouts that have been created for the [home page](https://lenpaul.github.io/Lagrange/) and the [archives page](https://lenpaul.github.io/Lagrange/menu/writing.html). These are simply just page layouts with some [Liquid template code](https://shopify.github.io/liquid/). Check out the `index.html` file in the root directory for what the code looks like.\n\n### YAML Front Block Matter\n\nThe recommended YAML front block is:\n\n```\n---\nlayout:\ntitle:\nauthor:\ncategories:\ntags: []\nimage:\n---\n```\n\n`layout` specifies which layout to use, `title` is the page or post title, `categories` can be used to better organize your posts, `tags` are used when generating related posts based on the topic of the post, and `image` specifies which images to use. Have a look at some posts in the `_posts` directory to see how these variables are set.\n\n## Features\n\n### Design Considerations\n\nLagrange was designed to be a minimalist theme in order for the focus to remain on your content. For example, links are signified mainly through an underline text-decoration, in order to maximize the perceived affordance of clickability (I originally just wanted to make the links a darker shade of grey).\n\n### Disqus\n\nLagrange supports comments at the end of posts through [Disqus](https://disqus.com/). In order to activate Disqus commenting, set `disqus.comments` to true in the `_data/settings.yml` file. If you do not have a Disqus account already, you will have to set one up, and create a profile for your website. You will be given a `disqus_shortname` that will be used to generate the appropriate comments sections for your site. More information on [how to set up Disqus](http://www.perfectlyrandom.org/2014/06/29/adding-disqus-to-your-jekyll-powered-github-pages/).\n\n### Google Analytics\n\nIt is possible to track your site statistics through [Google Analytics](https://www.google.com/analytics/). Similar to Disqus, you will have to create an account for Google Analytics, and enter the correct Google ID for your site under `google-ID` in the `settings.yml` file. More information on [how to set up Google Analytics](https://michaelsoolee.com/google-analytics-jekyll/). Note: If you are not using Google Analytics, please change `google-ID` to an empty string.\n\n### RSS Feeds\n\nAtom is supported by default through [jekyll-feed](https://github.com/jekyll/jekyll-feed). With jekyll-feed, you can set configuration variables such as \'title\', \'description\', and \'author\', in the `_config.yml` file.\n\nRSS 2.0 is also supported through [RSS auto-discovery](http://www.rssboard.org/rss-autodiscovery). The `rss-feed.xml` file (based on the template found at [jekyll-rss-feeds](https://github.com/snaptortoise/jekyll-rss-feeds)) that the feed path points to when using RSS 2.0 is automatically generated based on the appropriate configuration variables found in `_data/settings.yml`.\n\nTo use RSS 2.0, ensure the following is done:\n\n* Uncomment the last two lines in the `_config.yml` file.\n\n* In `_data/settings.yml`, under \'social\', comment out the rss-square that points to `feed.xml`, and uncomment the rss-square that points to `rss-feed.xml`.\n\n* In `_includes/head.html`, comment out `{% feed_meta %}` and uncomment the line under the RSS 2.0 comment.\n\n### Social Media Icons\n\nAll social media icons are courtesy of [Font Awesome](http://fontawesome.io/). You can change which icons appear, as well as the account that they link to, in the `settings.yml` file in the `_data` folder.\n\n### MathJax\n\nLagrange comes out of the box with [MathJax](https://www.mathjax.org/), which allows you to display mathematical equations in your posts through the use of [LaTeX](http://www.andy-roberts.net/writing/latex/mathematics_1).\n\n### Syntax Highlighting\n\nLagrange provides syntax highlighting through [fenced code blocks](https://help.github.com/articles/creating-and-highlighting-code-blocks/). Syntax highlighting allows you to display source code in different colors and fonts depending on what programming language is being displayed. You can find the full list of supported programming languages [here](https://github.com/jneen/rouge/wiki/List-of-supported-languages-and-lexers). Another option is to embed your code through [Gist](https://en.support.wordpress.com/gist/).\n\n### Markdown\n\nAs always, Jekyll offers support for GitHub Flavored Markdown, which allows you to format your posts using the [Markdown syntax](https://guides.github.com/features/mastering-markdown/). Examples of these text formatting features can be seen below. You can find this post in the `_posts` directory as well as the `README.md` file.\n\n## Everything Else\n\nCheck out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll\'s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].\n\n[jekyll-docs]: http://jekyllrb.com/docs/home\n[jekyll-gh]:   https://github.com/jekyll/jekyll\n[jekyll-talk]: https://talk.jekyllrb.com/\n\n## Contributing\n\nIf you would like to make a feature request, or report a bug or typo in the documentation, then please [submit a GitHub issue](https://github.com/LeNPaul/Lagrange/issues/new). If you would like to make a contribution, then feel free to [submit a pull request](https://help.github.com/articles/about-pull-requests/) - as a bonus, I will credit all contributors below! If this is your first pull request, it may be helpful to read up on the [GitHub Flow](https://guides.github.com/introduction/flow/) first.\n\nLagrange has been designed as a base for users to customize and fit to their own unique needs. Please keep this in mind when requesting features and/or submitting pull requests. Some examples of changes that I would love to see are things that would make the site easier to use, or better ways of doing things. Please avoid changes that do not benefit the majority of users.\n\n## Questions?\n\nThis theme is completely free and open source software. You may use it however you want, as it is distributed under the [MIT License](http://choosealicense.com/licenses/mit/). If you are having any problems, any questions or suggestions, feel free to [tweet at me](https://twitter.com/intent/tweet?text=My%question%about%Lagrange%is:%&amp;via=paululele), or [file a GitHub issue](https://github.com/lenpaul/lagrange/issues/new).\n\n## Credits\n\n### Creator\n\n#### Paul Le\n\n* [www.lenpaul.com](http://lenpaul.com)\n\n* [Twitter](https://twitter.com/paululele)\n\n* [GitHub](https://github.com/LeNPaul)\n\n### Contributors\n\n* [nikolalukovic](https://github.com/nikolalukovic)\n\n* [gmemstr](https://github.com/gmemstr)\n\n* [lynn9388](https://github.com/lynn9388)\n\n* [robqiao](https://github.com/robqiao)\n\n* [Mauladen](https://github.com/Mauladen)\n\n* [dhanus](https://github.com/dhanus)\n\n* [mlewand](https://github.com/mlewand)\n\n* [Hguimaraes](https://github.com/Hguimaraes)\n\n* [ilhamadun](https://github.com/ilhamadun)\n\n* [brianclemens](https://github.com/brianclemens)\n\n* [leyhline](https://github.com/leyhline)\n\n* [aritra24](https://github.com/aritra24)\n\n* [DuckSoft](https://github.com/DuckSoft)\n\n### Icons + Demo Images\n\n* [Death to Stock](https://deathtothestockphoto.com/)\n\n* [Font Awesome](http://fontawesome.io/)\n\n### Other\n\n* [Jekyll](https://jekyllrb.com/)\n\n* [Free Code Camp](https://www.freecodecamp.org)\n\n* [Khan Academy](https://www.khanacademy.org/)\n\n## License\n\nOpen sourced under the [MIT license](https://github.com/LeNPaul/Lagrange/blob/gh-pages/LICENSE.md).\n'