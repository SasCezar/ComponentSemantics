b"# JekyllRedirectFrom\n\nGive your Jekyll posts and pages multiple URLs.\n\nWhen importing your posts and pages from, say, Tumblr, it's annoying and\nimpractical to create new pages in the proper subdirectories so they, e.g.\n`/post/123456789/my-slug-that-is-often-incompl`, redirect to the new post URL.\n\nInstead of dealing with maintaining those pages for redirection, let\n`jekyll-redirect-from` handle it for you.\n\n[![Build Status](https://travis-ci.org/jekyll/jekyll-redirect-from.svg?branch=master)](https://travis-ci.org/jekyll/jekyll-redirect-from)\n\n## How it Works\n\nRedirects are performed by serving an HTML file with an HTTP-REFRESH meta\ntag which points to your destination. No `.htaccess` file, nginx conf, xml\nfile, or anything else will be generated. It simply creates HTML files.\n\n## Installation\n\nAdd this line to your application's Gemfile:\n\n    gem 'jekyll-redirect-from'\n\nAnd then execute:\n\n    $ bundle\n\nOr install it yourself as:\n\n    $ gem install jekyll-redirect-from\n\nOnce it's installed into your evironment, add it to your `_config.yml`:\n\n```yaml\nplugins:\n  - jekyll-redirect-from\n```\n\n\xf0\x9f\x92\xa1 If you are using a Jekyll version less than 3.5.0, use the `gems` key instead of `plugins`.\n\nIf you're using Jekyll in `safe` mode to mimic GitHub Pages, make sure to\nadd jekyll-redirect-from to your whitelist:\n\n```yaml\nwhitelist:\n  - jekyll-redirect-from\n```\n\nThen run `jekyll <cmd> --safe` like normal.\n\n## Usage\n\nThe object of this gem is to allow an author to specify multiple URLs for a\npage, such that the alternative URLs redirect to the new Jekyll URL.\n\nTo use it, simply add the array to the YAML front-matter of your page or post:\n\n```yaml\ntitle: My amazing post\nredirect_from:\n  - /post/123456789/\n  - /post/123456789/my-amazing-post/\n```\n\nRedirects including a trailing slash will generate a corresponding subdirectory containing an `index.html`, while redirects without a trailing slash will generate a corresponding `filename` without an extension, and without a subdirectory.\n\nFor example...\n\n```text\nredirect_from:\n  - /post/123456789/my-amazing-post\n```\n\n...will generate the following page in the destination:\n\n```text\n/post/123456789/my-amazing-post\n```\n\nWhile...\n\n```text\nredirect_from:\n  - /post/123456789/my-amazing-post/\n```\n\n...will generate the following page in the destination:\n\n```text\n/post/123456789/my-amazing-post/index.html\n```\n\nThese pages will contain an HTTP-REFRESH meta tag which redirect to your URL.\n\nYou can also specify just **one url** like this:\n\n```text\ntitle: My other awesome post\nredirect_from: /post/123456798/\n```\n\n### Prefix\n\nIf `site.url` is set, its value, together with `site.baseurl`, is used as a prefix for the redirect url automatically. This is useful for scenarios where a site isn't available from the domain root, so the redirects point to the correct path. If `site.url` is not set, only `site.baseurl` is used, if set.\n\n**_Note_**: If you are hosting your Jekyll site on [GitHub Pages](https://pages.github.com/), and `site.url` is not set, the prefix is set to the pages domain name i.e. http://example.github.io/project or a custom CNAME.\n\n### Redirect To\n\nSometimes, you may want to redirect a site page to a totally different website. This plugin also supports that with the `redirect_to` key:\n\n```yaml\ntitle: My amazing post\nredirect_to: http://www.github.com\n```\n\n**Note**: Using `redirect_to` or `redirect_from` with collections will only work with files which are output to HTML, such as `.md`, `.textile`, `.html` etc.\n\n## Customizing the redirect template\n\nIf you want to customize the redirect template, you can. Simply create a layout in your site's `_layouts` directory called `redirect.html`.\n\nYour layout will get the following variables:\n\n* `page.redirect.from` - the relative path to the redirect page\n* `page.redirect.to` - the absolute URL (where available) to the target page\n\n## Contributing\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n"