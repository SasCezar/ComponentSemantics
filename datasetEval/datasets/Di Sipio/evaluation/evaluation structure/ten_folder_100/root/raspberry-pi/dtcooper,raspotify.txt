b'# Raspotify\n\n_**Spotify Connect client for the Raspberry Pi that Just Works\xe2\x84\xa2.**_\n\n## tl;dr\n\nInstall the Spotify Connect client on your Raspberry Pi,\n\n```bash\ncurl -sL https://dtcooper.github.io/raspotify/install.sh | sh\n```\n\n## Introduction\n\nRaspotify is a [Spotify Connect](https://www.spotify.com/connect/) client for\n[Raspbian](https://www.raspberrypi.org/downloads/raspbian/) on the Raspberry Pi\nthat Just Works\xe2\x84\xa2. Raspotify is a\n[Debian package and associated repository](https://en.wikipedia.org/wiki/Deb_\\(file_format\\))\nwhich thinly wraps the awesome\n[librespot](https://github.com/librespot-org/librespot) library by\n[Paul Lietar](https://github.com/plietar) and others. It works out of the box on\nall three revisions of the Pi, immediately after installation.\n\n## Download Latest Version\n\nHead on over to the [releases](https://github.com/dtcooper/raspotify/releases/latest)\npage to download themost recent version and install the Debian package. Or follow\nthe [directions below](#easy-installation).\n\n### Requirements\n\nRaspotify works on a Raspberry Pi running [Raspbian](https://www.raspberrypi.org/downloads/raspbian/).\nYou\'ll need a [Spotify Premium](https://www.spotify.com/premium/) account in order\nto use Connect.\n\nRaspotify should work on _any_ Pi but it has been tested on,\n\n* Raspberry Pi (v1) model B\n* Raspberry Pi 2 model B\n* Raspberry Pi 3 model B and B+\n* Raspberry Pi 4\n\n### Easy Installation\n\nThis command downloads and installs the Debian package and adds its apt repository,\nwhich ensures you\'ll always be up to date with upstream changes.\n\n```bash\ncurl -sL https://dtcooper.github.io/raspotify/install.sh | sh\n```\n\nThat\'s it! Plug a speaker into your Pi on your local network, select the device\nin Spotify et voil\xc3\xa0!\n\n### Hard installation\n\nEssentially, here\'s what the easy installer does,\n\n```bash\n# Install curl and https apt transport\nsudo apt-get -y install curl apt-transport-https\n\n# Add repo and its GPG key\ncurl -sSL https://dtcooper.github.io/raspotify/key.asc | sudo apt-key add -v -\necho \'deb https://dtcooper.github.io/raspotify raspotify main\' | sudo tee /etc/apt/sources.list.d/raspotify.list\n\n# Install package\nsudo apt-get update\nsudo apt-get -y install raspotify\n```\n\nOr you can just download the latest .deb package and install it manually from\nhere ([`raspotify-latest.deb`](https://dtcooper.github.io/raspotify/raspotify-latest.deb)),\n\n```bash\nwget https://dtcooper.github.io/raspotify/raspotify-latest.deb\nsudo dpkg -i raspotify-latest.deb\n```\n\n### Uninstalling\n\nTo uninstall, remove the package,\n\n```bash\nsudo apt-get remove -y raspotify\n```\n\nTo completely remove Raspotify and its Debian repository from your system try,\n```bash\nsudo apt-get remove -y --purge raspotify\nsudo rm -v /etc/apt/sources.list.d/raspotify.list\n```\n\n## Configuration\n\nRaspotify works out of the box and should be discoverable by Spotify Connect on\nyour local network, however you can configure it by editing `/etc/default/raspotify`\nwhich passes arguments to [librespot](https://github.com/librespot-org/librespot).\n\n```\n# /etc/default/raspotify -- Arguments/configuration for librespot\n\n# Device name on Spotify Connect\n#DEVICE_NAME="raspotify"\n\n# Bitrate, one of 96 (low quality), 160 (default quality), or 320 (high quality)\n#BITRATE="160"\n\n# Additional command line arguments for librespot can be set below.\n# See `librespot -h` for more info. Make sure whatever arguments you specify\n# aren\'t already covered by other variables in this file. (See the daemon\'s\n# config at `/lib/systemd/system/raspotify.service` for more technical details.)\n#\n# To make your device visible on Spotify Connect across the Internet add your\n# username and password which can be set via "Set device password", on your\n# account settings, use `--username` and `--password`.\n#\n# To choose a different output device (ie a USB audio dongle or HDMI audio out),\n# use `--device` with something like `--device hw:0,1`. Your mileage may vary.\n#\n#OPTIONS="--username <USERNAME> --password <PASSWORD>"\n\n# Uncomment to use a cache for downloaded audio files. Cache is disabled by\n# default. It\'s best to leave this as-is if you want to use it, since\n# permissions are properly set on the directory `/var/cache/raspotify\'.\n#CACHE_ARGS="--cache /var/cache/raspotify"\n\n# By default, the volume normalization is enabled, add alternative volume\n# arguments here if you\'d like, but these should be fine.\n#VOLUME_ARGS="--enable-volume-normalisation --linear-volume --initial-volume=100"\n\n# Backend could be set to pipe here, but it\'s for very advanced use cases of\n# librespot, so you shouldn\'t need to change this under normal circumstances.\n#BACKEND_ARGS="--backend alsa"\n```\n\nAfter editing restart the daemon by running: `sudo systemctl restart raspotify`\n\n## Building the Package Yourself\n\nAll that\'s required is [Docker](https://www.docker.com/) on a \\*nix system with\n[git](https://git-scm.com/) and [Make](https://www.gnu.org/software/make/). It\ncan be built on any amd64 platform that runs docker using Raspberry Pi\'s\ncross-compiler (tested on Ubuntu 16.04 LTS and macOS El Capitan).\n\n```bash\ngit clone https://github.com/dtcooper/raspotify\ncd raspotify\nmake\n```\n\nThere should be a built Debian package (a `.deb` file) in your project directory.\n\n> #### Note About Raspotify\'s APT Repository\n>\n> You _can_ actually use GitHub to host an APT repository for Raspotify as I\n> have done, but that\'s very much out of the scope of this Readme. Have a look\n> at the [Makefile](Makefile)\'s `apt-repo` and `apt-deploy` directives, and its\n> `APT_GPG_KEY` and `APT_GH_PAGES_REPO` variables. You\'ll _at least_ need this\n> repository cloned on GitHub, GitHub Pages enabled for the `gh-pages` branch,\n> and a [GPG](https://www.gnupg.org/) key. I **can\'t** and **won\'t** support any\n> users trying to do this at this time, but _have fun and good luck!_\n\n## Troubleshooting\n\n> *My volume on Spotify is 100% and it\'s still too quiet!*\n\nHave you tried turning the volume up using the command `alsamixer`?\n\n> *My Raspberry Pi does not use my USB sound card!*\n\nTry to replace the following in the file `/usr/share/alsa/alsa.conf`:\n\n```\ndefaults.ctl.card 0\ndefaults.pcm.card 0\n```\nwith\n```\ndefaults.ctl.card 1\ndefaults.pcm.card 1\n```\n> *The audio output buzzes a few seconds after audio stops!*\n\nThis is likely to be ALSA\'s Dynamic Audio Power Management (DAPM) shutting down\nthe sound module of your device to save power. If you want to disable this feature,\ncreate a file called `snd_soc_core.conf` in `/etc/modprobe.d` with this line in:\n```\noptions snd_soc_core pmdown_time -1\n```\nOnce you reboot and play some sound, the issue should be gone.\n\n> *Other issues*\n\nFile an issue and if we get it sorted, I\'ll add to this list.\n\n## Donations\n\nIf you\'re so inclined, Bitcoin my address is `1PoDcAStyJoB7zZz2mny4KjtjiEu8S44ns`. :)\n\n(I\'d rather you donate to [librespot](https://github.com/librespot-org/librespot)\ninstead, but there\'s no public address for those folks.)\n\n## Final Note\n\n_...and remember kids, have fun!_\n\n## License\n\nThis project is licensed under the MIT License - see the [`LICENSE`](LICENSE)\nfile for details.\n\n## Acknowledgments\n\nSpecial thanks to [Paul Lietar](https://github.com/plietar) for\n[librespot](https://github.com/librespot-org/librespot) (and its additional authors),\nwhich Raspotify packages. Without [librespot](https://github.com/librespot-org/librespot),\nRaspotify would simply not exist.\n'