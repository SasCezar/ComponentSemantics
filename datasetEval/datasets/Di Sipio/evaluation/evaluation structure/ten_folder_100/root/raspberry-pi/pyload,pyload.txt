b'<br />\n<p align="center">\n  <img src="https://raw.githubusercontent.com/pyload/pyload/master/media/banner.png" alt="pyLoad" height="110" />\n</p>\n<h2 align="center">The free and open-source Download Manager written in pure Python</h2>\n<h4 align="center">\n  <a href="#status">Status</a> |\n  <a href="#installation">Installation</a> |\n  <a href="#usage">Usage</a> |\n  <a href="#docker-support-experimental">Docker Support</a> |\n  <a href="#troubleshooting">Troubleshooting</a> |\n  <a href="#licensing">Licensing</a> |\n  <a href="#credits">Credits</a> |\n  <a href="#release-history">Release History</a>\n</h4>\n<br />\n<br />\n\n\nStatus\n------\n\n[![Build Status](https://img.shields.io/travis/pyload/pyload.svg)](https://travis-ci.org/pyload/pyload)\n[![Updates](https://pyup.io/repos/github/pyload/pyload/shield.svg)](https://pyup.io/repos/github/pyload/pyload)\n[![Codacy Badge](https://img.shields.io/codacy/grade/240a2201eee54680b1c34bf86a32abd0.svg)](https://www.codacy.com/app/pyLoad/pyload)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n[![CLA assistant](https://cla-assistant.io/readme/badge/pyload/pyload)](https://cla-assistant.io/pyload/pyload)\n\nThe new pyLoad package `pyload-ng` is automatically deployed from the [master branch](https://github.com/pyload/pyload/tree/master) of the pyLoad sources.\n\nThe old pyLoad package, **compatible with Python 2 only**, is still available on the [stable branch](https://github.com/pyload/pyload/tree/stable).\n\n\nInstallation\n------------\n\n[![PyPI Status](https://img.shields.io/pypi/status/pyload-ng.svg)](https://pypi.python.org/pypi/pyload-ng)\n[![PyPI Version](https://img.shields.io/pypi/v/pyload-ng.svg)](https://pypi.python.org/pypi/pyload-ng)\n[![PyPI Python Versions](https://img.shields.io/pypi/pyversions/pyload-ng.svg)](https://pypi.python.org/pypi/pyload-ng)\n[![PyPI License](https://img.shields.io/pypi/l/pyload-ng.svg)](https://github.com/pyload/pyload/blob/master/LICENSE.md)\n\nTo install pyLoad, type the command:\n\n    pip install pyload-ng\n\nThis will install the latest stable release of pyLoad in your system.\n\n> **Note**:\n> No stable release is available yet! :smiling_imp:\n\n#### Available modules\n\n- `pyload.webui`: Web Interface.\n- `pyload.plugins`: collection of pyLoad plugins (officially supported).\n- `pyload.core`: just pyLoad.\n\n### Extra Dependencies\n\nYou can install all the recommended packages for pyLoad at once.\n\nAppend the tag `extra` to the installation command:\n\n    pip install pyload-ng[extra]\n\n#### Available tags\n\n- `extra`: recommended extra packages.\n- `build`: packages required to build locales.\n- `test`: packages required to run tests.\n- `all`: all of them.\n\nYou can also use more tags together, like:\n\n    pip install pyload-ng[extra][build]\n\n### Development Releases\n\nYou can force the installation of the latest development release of pyLoad.\n\nAppend the option `--pre` to the installation command:\n\n    pip install --pre pyload-ng\n\n**Development release usage is not recommended**. Unexpected crashes may occur.\n\n### Build Translations\n\n> **Note**:\n> You do not need to build the locale files if you have installed pyLoad through `pip`,\n> because are already included.\n\nUse the command `build_locale` to retrieve and build the latest locale files (translations)\nfor your installation:\n\n    python setup.py build_locale\n\nIdeally you would use it ***before*** launching any other build or installation command\n(eg. `bdist_wheel`).\n\n\nUsage\n-----\n\n    usage: pyload [-h] [--version] [-d] [--userdir USERDIR] [--cachedir CACHEDIR]\n                  [--daemon] [--restore]\n\n    The free and open-source Download Manager written in pure Python\n\n    optional arguments:\n      -h, --help               show this help message and exit\n      --version                show program\'s version number and exit\n      -d, --debug              enable debug mode\n      --userdir USERDIR        use this location to store user data files\n      --cachedir CACHEDIR      use this location to store temporary files\n      --storagedir STORAGEDIR  use this location to save downloads\n      --daemon                 run as daemon\n      --restore                reset default username/password\n\nTo start pyLoad, type the command:\n\n    pyload\n\nThis will create the following directories (if they do not already exist):\n\n- `~/Downloads/pyLoad`: where downloads will be saved.\n- `~/pyLoad`: where user data files (configurations) are stored.\n- `<TMPDIR>/pyLoad`: where temporary files (cache) are stored.\n\nOn Windows systems data files are saved in the directory `~\\AppData\\Roaming\\pyLoad`.\n\nThe location of `<TMPDIR>` is [platform-specific](https://docs.python.org/3/library/tempfile.html#tempfile.gettempdir).\n\n### Command Options\n\nTo show an overview of the available options, type:\n\n    pyload --help\n\n### Web Interface\n\nOpen your web browser and visit the url http://localhost:8001 to have access to\nthe pyLoad\'s web interface.\n\n- Default username: `pyload`.\n- Default password: `pyload`.\n\n**It\'s highly recommended to change the default access credentials after the first start**.\n\n\nDocker Support [experimental]\n-----------------------------\n\n[![Docker Build Status](https://img.shields.io/docker/build/pyload/pyload.svg)](https://hub.docker.com/r/pyload/pyload)\n[![MicroBadger Layers](https://img.shields.io/microbadger/layers/pyload/pyload/latest-ubuntu.svg?label=layers%20%28ubuntu%29)](https://microbadger.com/images/pyload/pyload:latest-ubuntu)\n[![MicroBadger Layers](https://img.shields.io/microbadger/layers/pyload/pyload/latest-alpine.svg?label=layers%20%28alpine%29)](https://microbadger.com/images/pyload/pyload:latest-alpine)\n[![MicroBadger Size](https://img.shields.io/microbadger/image-size/pyload/pyload/latest-ubuntu.svg?label=image%20size%20%28ubuntu%29)](https://microbadger.com/images/pyload/pyload:latest-ubuntu)\n[![MicroBadger Size](https://img.shields.io/microbadger/image-size/pyload/pyload/latest-alpine.svg?label=image%20size%20%28alpine%29)](https://microbadger.com/images/pyload/pyload:latest-alpine)\n\n#### Available images\n\n- `pyload/pyload:latest-ubuntu`: default docker image of pyLoad.\n- `pyload/pyload:latest-alpine`: alternative docker image of pyLoad (smaller, _maybe_ slower).\n- `pyload/pyload`: alias of `pyload/pyload:latest-ubuntu`.\n\n### Create Container\n\n    docker create --name=pyload -v <USERDIR>:/config -v <STORAGEDIR>:/downloads --restart unless-stopped pyload/pyload\n\nReplace `<STORAGEDIR>` with the location on the host machine where you want that downloads will be saved.\n\nReplace `<USERDIR>` with where you want that user data files (configurations) are stored.\n\n### Start Container\n\n    docker start pyload\n\n### Stop Container\n\n    docker stop pyload\n\n### Show Logs\n\n    docker logs -f pyload\n\n### Compose\n\nCompatible with `docker-compose` v2 schemas:\n\n    ---\n    version: 2\n    services:\n      pyload:\n        image: pyload/pyload\n        container_name: pyload\n        environment:\n          - PUID=1000\n          - PGID=1000\n          - TZ=Europe/London\n        volumes:\n          - <USERDIR>:/config\n          - <STORAGEDIR>:/downloads\n        ports:\n          - 8001:8001\n        restart: unless-stopped\n\nReplace `<STORAGEDIR>` with the location on the host machine where you want that downloads will be saved.\n\nReplace `<USERDIR>` with where you want that user data files (configurations) are stored.\n\n\nTroubleshooting\n---------------\n\n### Installation\n\nIf the installation fails due any of the listed errors,\nretry applying the given solution:\n\n#### pip not found\n\nRetry replacing the command `pip` with `pip3`, like:\n\n    pip3 install pyload-ng\n\nIf still fails you may not have already installed on your system the Python interpreter\nor the pip package manager.\nOr maybe something else got corrupted somehow...\n\nThe easiest way to fix this error is to (re)install Python.\n\nVisit https://www.python.org/downloads\nto get the proper **Python 3** release for your system.\n\n#### pyload-ng not found\n\nCheck the version of the Python interpreters installed on your system.\n\nTo show the version of your **default** Python interpreter, type the command:\n\n    python --version\n\nIf the version is too old, try to upgrage Python, then you can retry to install pyLoad.\n\nPython releases below version 3.6 are not supported!\n\n#### Setuptools is too old\n\nTo upgrade the `setuptools` package, type the command:\n\n    pip install --upgrade setuptools\n\n#### Permission denied\n\nUnder Unix-based systems, try to install pyLoad with root privileges.\n\nPrefix the installation command with `sudo`, like:\n\n    sudo pip install pyload-ng\n\nUnder Windows systems, open a _Command Prompt as administrator_ to install pyLoad\nwith root privileges.\n\nYou can also try to install the `pyload-ng` package **without** root privileges.\n\nAppend the option `--user` to the installation command, like:\n\n    pip install --user pyload-ng\n\n### Uninstallation\n\nTo uninstall pyLoad, type the command:\n\n    pip uninstall --yes pyload-ng\n\n> **Note:**\n> This will not remove any installed dependencies.\n\n#### Permission denied\n\nUnder Unix-based systems, try to uninstall pyLoad with root privileges.\n\nPrefix the installation command with `sudo`:\n\n    sudo pip uninstall --yes pyload-ng\n\nUnder Windows systems, open a _Command Prompt as administrator_ to uninstall pyLoad\nwith root privileges.\n\n\nLicensing\n---------\n\n### Open Source License\n\nYou are allowed to use this software under the terms of the **GNU Affero\nGeneral Public License** as published by the Free Software Foundation;\neither **version 3** of the License, or (at your option) any later version.\n\nPlease refer to the included [LICENSE](/LICENSE) for the full license.\n\n### Alternative License\n\nWith an explicit permission of the authors you may use or distribute\nthis software under a different license according to the agreement.\n\n### Contributor License Agreement\n\nPlease refer to the included [CLA](https://cla-assistant.io/pyload/pyload) for the full agreement conditions.\n\nThis is essentially what you will be agreeing to:\n\n- You claim to have the right to make the contribution\n(i.e. it\'s your own work).\n- You grant the project a perpetual, non-exclusive license to use the\ncontribution.\n- You grant the project rights to change the outbound license that we use to\ndistribute the code.\n- You retain full ownership (copyright) of your submission and are free to do\nwith it as you please.\n\nContact us at licensing@pyload.net for any question about our code licensing policy.\n\n\nCredits\n-------\n\nPlease refer to the included [CREDITS](/CREDITS.md) for the full credits.\n\n\nRelease History\n---------------\n\nPlease refer to the included [CHANGELOG](/CHANGELOG.md) for the full release\nhistory.\n\n\n<br />\n<br />\n\n-------------------------\n###### \xc2\xa9 2019 pyLoad team\n'