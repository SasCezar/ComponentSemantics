b'![openfans](/images/openfans.png)&nbsp;&nbsp;&nbsp;&nbsp;![amatfan.png](/images/amatfan.png)\xe3\x80\x81\n\n# =\xe2\x98\x85= Debian-Pi-Aarch64 =\xe2\x98\x85=\n\n*The newest Raspberry Pi 64-bit OS 2.0 Release!!!*\n\n*This is the first 64-bit system in the world to support all Raspberry Pi 64-bit hardware!!! (Include: 2Bv1.2, 3B, 3B+, 3A+, 4B)*\n\n![catalina](./images/catalina.jpg)\n\n```\nThere are always someone who do everything possible to find other\'s trouble, \nin order to avoid misleading,\nWe will explain all the help and reference that we have used and applied. \nIf there are any omissions, please feel free to give us feedback in time.\nThanks again to all those who have helped us.\n```\n\n## Official Documentation Version 2.0\n\n***[\xe4\xb8\xad\xe6\x96\x87\xe7\x89\x88(Chinese)](README_zh.md)***\n\n***English edition translation is continuously optimized and adjusted ...***\n\nGive me a star, just a click, I will be very happy and satisfied...  :)\n\n**Gitee Repo:** [gitee.com/openfans-community/Debian-Pi-Aarch64](https://gitee.com/openfans-community/Debian-Pi-Aarch64)\n\n**Github Repo:** [github.com/openfans-community-offical/Debian-Pi-Aarch64](https://github.com/openfans-community-offical/Debian-Pi-Aarch64)\n\n----\n\nThe newest **Raspberry Pi 64-bit OS**, **OPENFANS** open source community & Raspberry **Pi Fan** base community Co-Produced.\n\nThis is an **official version** readme for the newest version 2.0 of 64-bit OS which is support for the **full range** of 64-bit CPU Raspberry Pi such as **3B, 3B+, 3A+, 4B**.\n\n**The passed system version: 1.0 and 2.0 preview has been without any updates or supported.**\n\nThe **"Old Readme"** was viewed **[here](./README_ORGI.md).** ( - Just A Chinese Edition)\n\n**First, Please read this document carefully before your questions, maybe your answers have included in this document (We\'ll refuse to reply any answered questions).**\n\n**Attention, please! Besides this document, any other documents in this Git repository are no longer supported (Except linked file form this document), just for a developer\'s archive.**\n\n## Attention!\n\n- All commands executed of this article, unless specified, are executed under the **root** privileges by default!!\n\n- With any problems, be sure to upgrade your **system**, **firmware** and **kernel** to the **latest** version first. Click **[here](./README.md#5-update-and-upgrade)** to check the **latest version** and learned how to upgrade your **system**, **kernel** and **firmware**.\n\n## Notice:\n\n*The official version 2.0 is most suggested to upgrade to the latest firmware version:* **"2019-11-25"**\n\n*The system version "2019-11-25-v2019-2.0-Release" don\'t need upgrade the kernel and firmware to "2019-11-25"*\n\n```\nThe latest version of the system:\n2019-11-25-v2019-2.0-Release\n\nThe latest version of kernel and firmware:\n2019-11-25-v2019-2.0-Release (recommended update)\n```\n\n## Donation\n\nThanks for your donation! We\'ll get the greatest power from your encourage!\n\n![jz](./images/jz.png)\n\n----\n\n## Contents\n\n[0. System Screenshots](./README.md#0-system-screenshots)\n\n----\n\n[1. Introduction](./README.md#1-introduction)\n\n[1-1. System Environment (Versions)](./README.md#1-1-system-environment-versions)\n\n[1-2. System Environment (Base Env)](./README.md#1-2-system-environment-base-env)\n\n[1-3. Features Comparison From Different Versions](./README.md#1-3-features-comparison-from-different-versions)\n\n[1-4. Some System Performance Testing Results](./README.md#1-4-some-system-performance-testing-results)\n\n----\n\n[2. Main features Introduction](./README.md#2-main-features-introduction)\n\n[2-1. Web Visual Management Interface](./README.md#2-1-web-visual-management-interface)\n\n[2-2. QEMU-KVM Virtualization Support](./README.md#2-2-qemu-kvm-virtualization-support)\n\n[2-3. Docker Container Support](./README.md#2-3-docker-container-support)\n\n[2-4. AUFS File System Support](./README.md#2-4-aufs-file-system-support)\n\n[2-5. TCP Acceleration](./README.md#2-5-tcp-acceleration)\n\n[2-6. Memory And Swap Optimization (Algorithm-level)](./README.md#2-6-memory-and-swap-optimization-algorithm-level)\n\n[2-7. macOS-Mojave Theme Desktop](./README.md#2-7-macos-mojave-theme-desktop)\n\n[2-8. CecOS-CaaS Container Cloud (JUST A CHINESE EDITION SUPPORT)](./README.md#2-8-cecos-caas-container-cloud-just-a-chinese-edition-support)\n\n[2-9. Other Features](./README.md#2-9-other-features)\n\n----\n\n[3. Instructions For Usage](./README.md#3-instructions-for-usage)\n\n[3-1. System Initialization (First Boot)](./README.md#3-1-system-initialization-first-boot)\n\n[3-2. Accounts And Passwords](./README.md#3-2-accounts-and-passwords)\n\n[3-3. Web Login Interface NOTE](./README.md#3-3-web-login-interface-note)\n\n[3-4. Pre-Configured Items](./README.md#3-4-pre-configured-items)\n\n[3-5. Wireless Configuration](./README.md#3-5-wireless-configuration)\n\n[3-6. Wired Network Configuration](./README.md#3-6-wired-network-configuration)\n\n[3-7. Boot Custom Startup Script](./README.md#3-7-boot-custom-startup-script)\n\n[3-8. DO NOT Upgrade The Deepin Desktop ENV](./README.md#3-8-do-not-upgrade-the-deepin-desktop-env)\n\n[3-9. TTY Display Chinese Font (Not Remote) Of Chinese Environment](./README.md#3-9-tty-display-chinese-font-not-remote-of-chinese-environment)\n\n[3-10. Web Interface VNC Remote Desktop Of macOS Mojave Theme Desktop Support](./README.md#3-10-web-interface-vnc-remote-desktop-of-macos-mojave-theme-desktop-support)\n\n[3-11. Switch Sound Output Channels](./README.md#3-11-switch-sound-output-channels)\n\n[3-12. 32-Bit Software Armhf Support](./README.md#3-12-32-bit-software-armhf-support)\n\n[3-13. Enabled And Start Docker Service](./README.md#3-13-enabled-and-start-docker-service)\n\n[3-14 Enabled And Start CecOS CaaS Container Cloud](./README.md#3-14-enabled-and-start-cecos-caas-container-cloud)\n\n[3-15 Create And Joined Or Exit And Left A Docker Cluster](./README.md#3-15-create-and-joined-or-exit-and-left-a-docker-cluster)\n\n[3-16. FAQ NOTE](./README.md#3-16-faq-note)\n\n[- 3-16.1 Using Profiles To Connect To The Wireless Networks Of Graphical Desktop Environment](./README.md#3-161-using-profiles-to-connect-to-the-wireless-networks-of-graphical-desktop-environment)\n\n[3-17. Extra Application Instructions](./README.md#3-17-extra-application-instructions)\n\n[- 3-17.1 WPS Office Arm 64-bit Desktop Installation Note](./README.md#3-171-wps-office-arm-64-bit-desktop-installation-note)\n\n[- 3-17.2 How to install the QQ Official Desktop App (Linux Edition)](https://github.com/openfans-community-offical/Debian-Pi-Aarch64/blob/master/README.md#3-172-how-to-install-the-qq-official-desktop-app-linux-edition)\n\n----\n\n[4. Virtual Machine Instructions](./README.md#4-virtual-machine-instructions)\n\n[4-1. Standard Virtual Machines PKG Instructions](./README.md#4-1-standard-virtual-machines-pkg-instructions)\n\n[4-2 BT-Panel Virtual Machine PKG Instructions](./README.md#4-2-bt-panel-virtual-machine-pkg-instructions)\n\n[4-3 How To Expand The Size Of A Virtual Machine Disk](./README.md#4-3-how-to-expand-the-size-of-a-virtual-machine-disk)\n\n----\n\n[5. Update And Upgrade](./README.md#5-update-and-upgrade)\n\n[5-1 Upgrade System](./README.md#5-1-upgrade-system)\n\n[5-2 Update Kernel And Firmware](./README.md#5-2-update-kernel-and-firmware)\n\n[5-3 Update Instructions](./README.md#5-3-update-instructions)\n\n[5-4 Latest Current Version](./README.md#5-4-latest-current-version)\n\n----\n\n[6. Download Links](./README.md#6-download-links)\n\n----\n\n[7. Other Instructions](./README.md#7-other-instructions)\n\n[7-1 Donation](./README.md#7-1-donation)\n\n[7-2 Contact Info.](./README.md#7-2-contact-info)\n\n[7-3 Copyright](./README.md#7-3-copyright)\n\n----\n\n[8. Join US!](./README.md#8-join-us)\n\n[9. Thanks](./README.md#9-thanks)\n\n----\n\n\n# Official Documentation Version 2.0\n\n----\n\n## 0. System Screenshots\n\nScreenshot of the macOS-Mojave theme desktop by XFCE.\n\n![macos](./images/macos1.jpg)\n\nScreenshot of the BaseOS Plus++ version: Web Management login interface.\n\n![loginUI](./images/ui1.png)\n\nScreenshot of the BaseOS Plus++ version: Web Management system info interface.\n\n![WebUI](./images/ui2.png)\n\nScreenshot of the BaseOS Plus++ version: Web Management container interface.\n\n![Docker](./images/ui3.png)\n\nScreenshot of the BaseOS Plus++ version: Web Management web console interface.\n\n![UI SHELL](./images/uishell.png)\n\nScreenshot of the CecOS CaaS Container Cloud: Main page.\n\n![CaaS](./images/caas.png)\n\nScreenshot of the CecOS CaaS Container Cloud: Cluster Management.\n\n![CaaS Cluster](./images/caas2.png)\n\nScreenshot of the macOS-Mojave theme desktop: Multimedia support.\n\n![macos](./images/macos2.jpg)\n\nScreenshot of the Deepin desktop environment: Main Desktop.\n\n![Deepin\xe6\xa1\x8c\xe9\x9d\xa21](./images/deepin_desktop_min.jpg)\n\nScreenshot of the Deepin desktop environment: Dashboard.\n\n![pi4\xe6\xa1\x8c\xe9\x9d\xa22](./images/p4-2.png)\n\nScreenshot of the Deepin desktop environment: System Settings & System info.\n\n![pi4\xe6\xa1\x8c\xe9\x9d\xa21](./images/p4-1.jpg)\n\nScreenshot of the macOS-Mojave Theme Desktop: Graphics Virtual Machine Manager (VMM). \n\n![pi4VMM](./images/vmm.jpg)\n\n----\n\nScreenshot of the macOS-Mojave Theme Desktop: Run Android App: DOTA.\n\n![pi4Android1](./images/apk0.jpg)\n\nScreenshot of the macOS-Mojave Themed Desktop: Run Android App: WPS (A China office compatible software) and DOTA.\n\n![pi4Android2](./images/apk1.jpg)\n\nScreenshot of the macOS-Mojave Themed Desktop: Run WPS-ARM64-Edition-App (A China office compatible software).\n\n![wps_arm64](./images/wps.jpg)\n\n----\n\n**Screenshot of the macOS-Mojave Themed Desktop: Run Windows 10 Arm Desktop Edition On Qemu.**\n\n![qemu_win_arm_0](./images/win0.jpeg)\n\n*Install Arm windows on qemu.*\n\n![qemu_win_arm_1](./images/win1.jpeg)\n\n*Arm desktop PIFAN desktop.*\n\n![qemu_win_arm_2](./images/win2.jpeg)\n\n*Arm windows on qemu: Systeminfo.*\n\n![qemu_win_arm_3](./images/win3.jpeg)\n\n*Arm windows on qemu: Run QQ X86 desktop edition App.*\n\n![qemu_win_arm_4](./images/weichat.jpg)\n\n*Arm windows on qemu: Run WeiChat X86 desktop edition App.*\n\n![qemu_win_arm_5](./images/tim.jpg)\n\n*Arm windows on qemu: Run TIM X86 desktop edition App.*\n\n----\n\n## 1. Introduction\n\nDon\'t ask a question about using a 64-bit OS for the Raspberry Pi and what\'s the difference between 64-bit & 32-bit OS?\n\nCuz the Raspberry Pi with a 64-bit CPU, unfortunately the Raspberry Pi foundation had without any system or software supported. Otherwise please add your brain...\n\nAll the versions released in this article are official versions that had been used and validated in the real enterprise production environment. The system has been rigorously tested and used normally with fully compatible for the Raspberry Pi 3B/3B+/3A+/4B, such as local wired, wireless network card, Bluetooth, 3D acceleration, etc. The numbers of all system packages are almost comparable to the X86 version. The system was built from the official Debian 64-bit baseline (wasn\'t built from any other ported edition or third-part edition) to ensure the original flavor.\n\nThere isn\'t any other relationship with the official Raspberry Pi, so no proprietary commands as the Raspberry Pi official system used (such as raspi-config, rpi-update, etc.), you need to edit the configuration file ( /boot/config.txt ) by yourself.\n\n**Why choose Debian?**\n\nCuz the Raspberry Pi has the best compatible from Debian OS (This is inseparable from Raspbian does, the Raspbian is also based on Debian OS with the full-testing, also inherited a great power and performance of Debian. For example: Ubuntu, the most famous and successful distribution OS which was also based built from Debian).\n\nThis system is completely different from any systems we released before (also including the previous 64-bit Debian we published), we have all built from zero-os baseline this time and built a new automatic compilation and packaging, the testing system in our lab. We also redefined the packaging process and adjust all the relevant configurations, make a lot of modifications, adjustments and optimizations for the system, fixed a lot of bugs of the kernel. A lot of new features have been added, especially with the support for the hardware KVM virtualization acceleration and optimization for Docker features tuning.\n\n**We have specifically redefined and optimized our own cross compiler chain-tool and compiler for rebuild the base kernel and modules of Raspberry Pi when we were publishing the version 2.0 what is more greatly optimized and improved compiler faster and efficiency (About cross compiler chain-tool and compiler, you can refer to Huawei\'s Ark compiler, they have the same effect, our compiler is optimized for basic compilation tools such as C, C++, G++, ASM, NM, ld, CMAKE, and Glib, etc., Specifically target the raspberry-based hardware, ARM aarch64 A53 and ARM-v8a A72 and also including instructions set of hardware, etc.)**\n\nOn June 20, 2019, the Raspberry Pi foundation released the new fourth-generation single-board machine "Raspberry Pi 4B". We got the 4th-generation 4G version from the Raspberry Pi official Cambridge Global Store for the first time.\n\n- **On July 6, 2019, half a month hard-working after Pi4 released, The OPENFANS and the Pi Fan base community released the new Debian-Pi-Aarch64 OS version 2.0 release together.**\n\n- **This is the first 64-bit system in the world to support all Raspberry Pi 64-bit hardware!!! (Include: 2Bv1.2, 3B, 3B+, 3A+, 4B)**\n\nAll of the new version 2.0 has 3D acceleration supported (With FKMS), and finally introduced the **OPENFANS Container Cloud Management Platform**  supported (Also called CecOS CaaS, based build from an open-source project which is called Portainer) which is be more perfect and powerful than system version 1.0!\n\nThe newest OS 2.0 is also adhering to the all excellent tradition from the Debian-Pi-Aarch64 OS which was built by OPENFANS and Pi Fan Base community.\n\nThis newest OS 2.0 is full support to all Raspberry Pi aarch64 single boards: 3B, 3B+, 3A+, 4B, and still inherit all the features of the stable version 1.0!\n\n----\n\n### 1-1. System Environment (Versions)\n\n\xe2\x97\x8f **BaseOS** (none desktop environment, basic version)\n\n```\nStandard underlying system basic image, none x-window environment.\n**System image name format: OPENFANS-Debian-Buster-Aarch64-XXXXXX.img\n```\n\n\xe2\x97\x8f **BaseOS Plus++** (none desktop environment, plus++ version)\n\n```\nOut of the function of BaseOS, with a visual Web UI management interface added.\n**System image name format: OPENFANS-Debian-Buster-Aarch64-XXXXXX-plus.img\n```\n\n\xe2\x97\x8f **macOS Mojave theme custom desktop** (Desktop environment, Full-Featured)\n\n```\nExclusive system image ingested from the XFCE depth-customized \nand full support all the features as our other versions!\n**System image name format: OPENFANS-Debian-Buster-Desktop-Aarch64-XXXXXX.img\n```\n\n\xe2\x97\x8f **Deepin desktop environment**\n\n```\nBased on our own underlying BaseOS system image, from the complete \nDeepin 15.5 Pro desktop environment is ported, which is the first 64-bit ARM64 image currently built \nbased on the complete Debian Aarch64 architecture, adapted to the Raspberry Pi 3B, 3B+, 3A+ and 4B.\n**System image name format: OPENFANS-Deepin-Professional-Desktop-Aarch64-XXXXXX.img\n```\n\n\xe2\x97\x8f **Kernel** & **Firmware** Upgrade Package\n\n```\nGeneral naming rules are in the form of (starting with the upkg ) :\nupkg-xxxx (years)-xx (months) -xx (day) -vxxxx-x-x-zip/zip.xz\n```\n\n----\n\n### 1-2. System Environment (Base Env)\n\nAll the version 2.0 system images are used "ext4" file system as default, the Tsinghua source-mirror was set as the default software repo, and version was based on the Debian Buster 10 Arm64.\n\n**Note that version 2.0 does not support upgrades from any other version for the time being and requires a fresh installation.**\n\n### 1-3. Features Comparison From Different Versions\n\n|Projects|BaseOS|BaseOS Plus++|Desktop Full-Featured|Deepin Desktop|\n|---|---|---|---|---|\n| KVM Hardware Virtualization Support|\xe2\x98\x85|\xe2\x98\x85|\xe2\x98\x85|\xe2\x98\x85|\n|Graphical Virtual Machine Manager|X|X|\xe2\x98\x85|X|\n|Docker Container|\xe2\x98\x86|\xe2\x98\x85|\xe2\x98\x86|\xe2\x98\x86|\n|CecOS CaaS Platform|\xe2\x98\x86|\xe2\x98\x85|\xe2\x98\x86|X|\n|WebGUI Manager|X|\xe2\x98\x85|\xe2\x98\x85|X|\n|Web SSH Client|\xe2\x98\x85|\xe2\x98\x85|\xe2\x98\x85|\xe2\x98\x85|\n|Standard VM kit|\xe2\x98\x85|\xe2\x98\x85|\xe2\x98\x85|X|\n|BT-Panel kit|\xe2\x98\x85|\xe2\x98\x85|\xe2\x98\x85|X|\n\n**Note:**\n\n**\xe2\x98\x85 :** Stands for supported and default enabled. It can directly be used.\n\n**\xe2\x98\x86 :** Stands for supported and default disabled. Need to be started manually. \n\n(There will be an instructions for how to use this service in this document.)\n\n**X :** Stands for not supported.\n\n----\n\n### 1-4. Some System Performance Testing Results\n\n#### Version 1.0 vs. other comparable 64-bit OS (developed by others) testing result\n\nAn incomplete testing result, just theoretical data, for reference only:\n\nUnixBench testing results using the Ext4 Standard File System and The Raspberry Pi 3B Plus (compared to comparable Debian Aarch64 systems):\n\n* **Single Thread:**\n\n![x1](/images/u1.JPG)\n* **Multi-threaded:**\n\n![x4](/images/u4.JPG)\n\n* **Overall rating:**\n\n![all](/images/uall.JPG)\n\nOverall performance comprehensively exceeds the comparison test system of 2 to 3 times, some indicators even reached more than 10 times, 1000% improvement.\n\n- Version 1.0 vs. Raspberry Pi Official 32-bit system testing result\n\nRecently, the Raspberry Pi official has done a lot of optimization work, the current system compared to the previous 32-bit system has a larger improvement, but limited to the 32-bit local architecture restrictions, and 64-bit system performance gap is still large.\n\n**Attached:** Pi Fan **Debian Pi Aarch64 64-bit version 1.0 system vs. Raspbian 32-bit** performance comparison testing result\n\n*Sysbench 0.4.12 Result:*\n\n| **Test projects** | **ARM32/EXT4** | **ARM64/F2FS** | test unit\xef\xbc\x9a**time** / the **smaller** the better |\n| --- | --- | --- | --- |\n| **System Information** | 2018-11-13-Raspbian | Raspberry Pi Fan 64-bit U8 Edition | Increase the multiple |\n| **The CPU single thread** | 119.2072 | 9.8725 | 12.07 |\n| **The four-threaded** | 299.5217 | 24.6616 | 12.15 |\n| **the eight-threaded** | 299.5824 | 24.6789 | 12.14 |\n| **Memory Random** | 1.2625 | 0.8751 | 1.44 |\n| **Memory Continuous** | 1.5803 | 1.1583 | 1.36 |\n| **Continuous read-write of files** | 6.1621 | 2.2928 | 2.69 |\n| **File Random Reading and Writing** | 484.812 | 6.3527 | **76.32** |\n\nMaximum Performance Gap Multiple: **76.32**\n\nMultiples of the average performance gap: **14.95**\n\n- Version 1.0 testing result comparison chart\n\n![sysbench](./images/sysbench_result.png)\n\n#### The latest 2.0 beta with The Raspberry Pi Official 32-bit System Testing Result\n\nTest hardware: Raspberry Pi 4B\n\n*Sysbench 0.4.12 Result:*\n\n| **Test projects** | **ARM32/EXT4** | **ARM64/EXT4** | test unit\xef\xbc\x9a**time** / the **smaller** the better |\n| --- | --- | --- | --- |\n| **The system** | 2019-06-20 raspbian-buster | 2019-07-06 Pi Fan 2.0 Beta Edition | Increase the multiple |\n| **Single-threaded** | 92.7292 | 6.7406 | 13.757 |\n| **The four-threaded** | 231.6591 | 16.8172 | 13.775 |\n| **the eight-threade** | 231.5002 | 16.8282 | 13.757 |\n| **Memory Random** | 2.4225 | 0.6086 | 3.980 |\n| **Memory Continuous** | 2.5631 | 0.9267 | 2.766 |\n| **Continuous read-write of files** | 6.3636 | 1.8859 | 3.374 |\n| **File Random Reading and Writing** | 627.719 | 10.6036 | 59.199 |\n| **Mutually exclusive lock performance (4096)** | 0.0206 | 0.0081 | 2.543 |\n\nMaximum Performance Gap Multiple: *59.199*\n\nAverage Performance Gap Multiple: *14.144*\n\n- Version 2.0 testing result comparison chart (statistical unit: time, the smaller the better)\n\n![sysbench](./images/sysbench_result2.png)\n\n----\n\n## 2. Main Features Introduction\n\n### 2-1. Web Visual Management Interface\n\n![web manage](./images/ui2.png)\n\nAll-platform web visual management interface (Only supported for BaseOS and Desktop Full-Featured version).\n\nWith web management interface support on the new 64-bit OS version 2.0, the system-wide platform enables visual operational management interface, whether it\'s standard desktop graphics or desktop-free systems (enhanced version), the Debian-Pi-Aarch64 officially opens the visual era.\n\nWeb management interface support:\n\n```\n1. New Full-featured version of support;\n\n2. Fully open the web management era, save the trouble of terminal tools, \nAnytime, Anywhere, direct browser management;\n\n3. Enabled docker container service by default, out-of-the-box \n(version 2.0 please manage and use containers via CecOS CaaS Container Cloud);\n\n4. Full-service monitoring of integrated Web interface;\n\n5. Support the web interface to view system conditions, \nhardware information, situation and other information;\n\n6. Support for web interface setting hostname;\n\n7. Support for web interface setting up host domain;\n\n8. Support web interface to set host time, NTP servers, update mode;\n\n9. Support web interface shutdown and restart the system;\n\n10. Support for web interface system log management;\n\n11. Support web interface system storage and related peripheral management, \nonline partitioning, mount equipment, and other functions;\n\n13. Support for web interface system account management;\n\n14. support for web interface system service management;\n\n15. Support for web interface system update management;\n\n16. Web interface integrates shell terminal, which can be operated directly on the web page;\n\n17. Support for cross-node and unified management: manage multiple devices in one interface, \ndramatically improving management and productivity;\n\n18. Web management communications are encrypted using SSL certificates to ensure the security \nof session data.\n```\n\n![shellinabox](./images/shellinabox.jpg)\n\n**WEB SSH** client support, using a separate web shell (shellinaBox) suite, provides separate **web ssh** login support.\n\n### 2-2. QEMU-KVM Virtualization Support\n\nThis is a QEMU virtual machine with local Aarch64 architecture that supports KVM hardware acceleration.\n\nWe recompiled KVM binary to address many of the bugs for **qemu-system-aarch64** in KVM hardware-accelerated environments:\n\nThe default version of the system virtual machine cannot run, the system cannot be installed, etc. After KVM hardware acceleration was turned on...\n\nWe added support for KVM virtual machines when compiling the kernel, directly supporting full virtualization of hardware-accelerated, and added support for local KVM virtual hardware kernel modules, the main kernel modules are as follows:\n\n```\n1. virtio //standard virtual disk\n\n2. virtio-scsi //virtual scsi disk\n\n3. virtio-blk //pass-through disk block device\n\n4. Virtio-blk-scsi //pass-through disk block device scsi mode\n\n5. virtio-net //virtio virtual network card\n\n6. virtio-balloon //memory bubble\n\n7. virtio-hw-random //virtual random number hardware\n\n8. virtio-console //virtual terminal\n\n9. virtio-input //virtual input device\n\n10. Virtio-crypto-device //virtual encryption device\n\n12. virtio-drm-gpu //virtual graphics\n\n13. Virtio-9p //directory Sharing with v9p\n\n14. vfio //Pass-through device support\n\n15. vhost //host data interaction\n\n16. vhost-net //host network data interaction\n\n...\n```\n\n**What is KSM?**\n\nThe principle of KSM is that in multiple processes, Linux merges kernel-like memory pages into one memory page.\n\nThis feature, which is used by KVM to reduce memory usage of multiple similar virtual machines, improves memory efficiency. Cuz memory is shared, so multiple virtual machines use less memory, which is more effective when using the same image and operating system for virtual machines. To better optimize the memory efficiency of virtual machines, the kernels of all our systems support KSM by default.\n\nThe current 2.0 system is fully available for virtualization support by default, and the graphical desktop provides a visual "**Virt-Manager**" app for management.\n\n### 2-3. Docker Container Support\n\nThe famous Docker will not be much introduced here, this time we recompile the kernel, added the full feature of Docker support, this is currently the most complete support for Docker features under the Raspberry Pi Aarch64 system architecture, Most other versions are still 32-bit systems with 32-bit dockers, and local 64-bit system cores lack much kernel support for Docker features.\n\nEven the latest version of the famous 32-bit Raspberry Pi Docker system **Hypriot** doesn\'t fully support the **Docker Swarm**.\n\nYou\'ll get the following error message because the **Hypriot** does not support the **bridge vlan/vxlan netfiler**:\n\n```\nreexec to set bridge default vlan failed exit status 1\n```\n\nThis will result in the complete use of the Docker Swarm cluster is not support (The Hypriot OS), the lack of relevant feature support for the network, there will be some functional missing problems.\n\nYou can find a lot of errors and warnings on the local 64-bit ARM system by using the **systemctl status containerd** and the **systemctl status docker** as well as by viewing the logs, and not counting them completely. The local system kernel includes at least lost the following features: (The Hypriot OS and most other system)\n\n```\n1. cgroup memory limit\n\n2. cgroup swap limit\n\n3. cgroup rt period\n\n4. cgroup rt runtime\n\n5. cgroup pid support\n\n6. cgroup memory sysfs\n\n7. cgroup rdma\n\n8. cgroup perf\n\n9. cgroup bridge vlan/vxlan\n\n10. cgroup netfiler\n\n11. cgroup net prio\n\n12. cgroup cfs bandwidth limit\n\n13. Bridge vlan ilter\n\n14. ipvs\n\n15. ipvs ipv6\n\n16. memory sysfs\n\n17. Kernel KSM\n\n...\n```\n\n**Docker Compose**\n\nDocker official doesn\'t provide arm/arm64 based docker-compose to run binary, so we recompiled and provided aarch64-bit binary that can be run and now the default is added to the system images, which you can use directly.\n\n### 2-4. AUFS File System Support\n\n**What is the AUFS File System?**\n\nAUFS, the full name is an advanced multi-layered unification file system, the main function is to combine the contents of multiple folders to provide a unified view, mainly for the various Linux distributions livecd, and the docker inside used to organize the images.\n\nAUFS was Docker\'s default storage driver, with a very stable, lots of real deployments, and strong community-supported, with several key advantages:\n\n```\n- Very short container start-up time\n- Effective storage utilization\n- Effective memory utilization\n```\n\nBut since it is not included in the Linux kernel mainline, many Linux distributions do not support AUFS.\n\nThe latest Docker defaults to the faster and latest OverlayFS file system, we make maintains the default value for this official setting.\n\n**Do we need to use AUFS?**\n\nCuz Docker\'s mirror files use a file system that is divided into multiple tiers, OverlayFS supports only 2 tiers, multiple replicas are replicated when using the same mirror layer, and takes up more space and I/O, while a AUFS also provides the ability to use multi-tiered storage and share data. Docker uses AUFS\' Copy-on-Write copy technology to achieve image sharing and minimize disk space usage.\n\nFor devices with less storage space like Raspberry Pi, using the AUFS file system makes better use of our limited storage space resources and reduces I/O consumption.\n\nTo allow users to freely choose and use OverlayFS or AUFS according to their circumstances, we have added support for AUFS modules by default in the kernel.\n\nSince AUFS is not supported by the mainline of Linux kernel, we have added AUFS kernel module code and recompiled to the kernel of mainline 4.19 through AUFS\' PATH, and now the system boot will automatically load the AUFS module, which can be used directly without human intervention.\n\n### 2-5. TCP Acceleration\n\nThe kernel has turned on the TCP BBR congestion control algorithm by default.\n\n**What is TCP BBR?**\n\nLet\'s explain simply what the TCP BBR solves:\n\n```\n- Make full use of bandwidth on network links with a certain drop rate, \nideal for high-latency, high-bandwidth network links;\n\n- Reduces buffer occupancy on network links, reducing latency, \nmaking it ideal for users who access the network at slow speed.\n```\n\nSimply put, the TCP BBR congestion control algorithm can improve TCP transmission speed and efficiency to a certain extent and optimize network transmission.\n\n**How to turn off:**\n\nEdit the "/mnt/etc/sysctl.conf" file, execute the command "**sysctl -p**" to view the results, and do not see the following comments, representing the operation succeeded.\n\nComment out the following 2 lines: (Just put the "**#**" at the beginning of each line)\n\n```\nnet.core.default-qdisc-fq\nnet.ipv4.tcp.tcp-contents-control-bbr\n```\n\n### 2-6. Memory And Swap Optimization (Algorithm-level)\n\n- **Support: Swap Partition**\n\nThis new version of the system by default increased support for swap  caches to alleviate the problem of low memory in the system, greatly improved support and efficiency of executable large-capacity memory requirements applications, users do not need to manually create the system Swap, our system will automatically complete and initialize Swap after installation. The location of the Swap file or partition can be adjusted by looking at the system mount profile **/etc/fstab** .\n\n- **Support: zSWAP virtual memory compression**\n\nThis new version of the system kernel by default has added the virtual memory compression function of the "zSWAP" to provide a compressed writeback cache for the pages to be swapped, the default limit of physical memory is the 25%  of system\'s total memory upper limited.\n\n**Why zSWAP?**\n\nWhen the memory page is about to be swapped out, zSWAP does not move it to the switching device, but compresses it and then stores it in a pool of memory that is dynamically allocated within the system RAM, and the act of writing back to the actual swap device is delayed or even avoided altogether, thus significantly reducing the I/O used by the Linux system for switching. For Raspberry Pi such a device relying on the TF card, the original I/O is not very high, reducing the operation of I/O for exchange means improving system performance, I/O used in system applications and other more needed scheduling.\n\nIn scenarios where swap files/partitions are used, TF life can be increased by reducing I/O operation on Swap files/partitions.\n\n**zSWAP** does not virtual a block device, but hook into the ordinary Swap code, before the actual *write-to-disk/read* operation, the first use of their management of memory for data swap/in, memory is not enough to use before the use of traditional Swap files/partitions. So zSWAP is suitable for systems that already have swap partitions themselves, as well as hardware devices like Raspberry Pi, which have little memory of itself.\n\n**Why not zRAM?**\n\nzSWAP uses both memory and swap partitions, and automatically adjusts the size of the memory, and the cached data is automatically stored into the Swap file/partition when the system memory is not enough, greatly improving the efficiency of the system Swap swap exchange. More full use of memory space resources and avoid the system memory shortage, and zRam completely use memory to operate and store data, completely occupied memory, generally used in large memory scenarios, which is not appropriate for a small memory Raspberry Pi.\n\n**zSWAP memory allocators and data compression algorithms used in this system :**\n\n```\nMemory allocator zpool frame: smalloc, zbud, z3fold\n```\n\nThe reality shows that although zsmalloc has a high compression rate, the algorithm is complex and requires additional threads to be responsible for memory finishing, which consumes more cpu time.\n\nThe zbud implementation is simple, memory page storage does not produce memory fragmentation, but the compression rate is low, up to only 2 times, does not meet the actual needs of small memory system.\n\nAs a result, Sony developed the z3fold memory allocator, which is exactly the same as zbud\'s implementation, except that each page can store 3 compressed pages, with a maximum compression rate of 3 x, and a nearly 4x of zsmalloc, a technique used in xperia xzp, Get a 4GB experience with your 4GB phone.\n\nWe selected the z3fold algorithm in the system, and we can see the configuration in the system /boot/cmdline.txt:\n\n```\nzswap.enabled=1 zswap.zpool=z3fold zswap.compressor=lz4 zswap.max_pool_percent=25\n```\n\n**Compression algorithm**\n\nLinux has many compression algorithms: lz, lzo, xz, gzip, lzma...\n\nWe have adopted **lz4** with very high compression speed and high compression rate, **lz4** compared to other compression algorithms, compression rate is not the highest, but the speed is indeed the fastest, in the case of the z3fold algorithm has been used, combined with the Raspbery Pi\'s performance characteristics and actual testing, and also wanna get a good compression rate, Speed is the most important thing for the Raspberry Pi (given its CPU performance overhead and memory size).\n\n### 2-7. macOS-Mojave Theme Desktop\n\n![desktop](./images/apk0.jpg)\n\nThe default desktop theme uses a desktop that mimics the macOS Mojave theme.\n\n### 2-8. CecOS-CaaS Container Cloud (JUST A CHINESE EDITION SUPPORT)\n\n![caas-main](./images/caas.png)\n\n![caas-cluster](./images/caas2.png)\n\nRebuild from An open-source project [Portainer](http://potainer.net) and develop for Chinese and others By OPENFANS.\n\n### 2-9. Other Features\n\n- Support for 3D acceleration, all desktop environments are enabled by default.\n\n- There are too many new features of version 2.0, we won\'t elaborate anymore here.\n\n----\n\n## 3. Instructions For Usage\n\n### 3-1. System Initialization (First Boot)\n\nThe system will automatically expand the root partition, and then automatically configure, until complete, the normal use, in the process the system will automatically restart **3** times.\n\n### 3-2. Accounts And Passwords\n\nSystem default account: **pi**, default password: **raspberry**\n\nThe default account pi account supports ssh login, for root account password please login first and then use the command **"sudo passwd root"** to set,\n\nOr use the command **"sudo -i"** to switch to the root user mode.\n\n### 3-3. Web Login Interface NOTE\n\n```\n1.Web Visual Management Login Interface\nLogin address https://yourRasp\'s IP address:9090\nDescription: Please login system used default account: pi\n\n2.WEB SSH Client Portal Login Interface\nLogin address https://yourRasp\'s IP address:4200\nDescription: Used the account with the permission of console login, \nuser pi was already with this permission.\n```\n\n### 3-4. Pre-Configured Items\n\nThe system provides a pre-configured network and auto-start task during boot, with the path and correspondence of the relevant profile as follows:\n\n| Pre-configured items | Pre-profile paths | Corresponding to the system file path to the link |\n| --- | --- | --- |\n| Wireless Networks | /boot/wpa_supplicant.conf | /etc/wpa_supplicant/wpa_supplicant.conf |\n| Wired Networks | /boot/interfaces | /etc/network/interfaces |\n| DHCP Clients | /boot/dhclient.conf | /etc/dhcp/dhclient.conf |\n| Custom Boot Scripts | /boot/rc-local | /etc/rc.local |\n\n### 3-5. Wireless Configuration\n\nA desktop environment can be set up through a graphical interface after logging into the desktop environment, here provides how the configuration file is modified.\n\nIf the desktop environment wants to connect to wireless networks using a configuration-modifying approach, please NOTE [here](./README.md#3161%E5%9B%BE%E5%BD%A2%E5%8C%96%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%E4%BD%BF%E7%94%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%BF%9E%E6%8E%A5%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C).\n\nModify the file **"/boot/wpa_supplicant.conf"**\n\n```\n## To use this file,you need to run the command: ##\n## "systemctl disable network-manager" and reboot system.##\n##\n## (Do not uncomment this line!) ##\n\n## \'country\' is to set wifi area,\'CN\' is china ##\n#country=CN\n#ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n#update_config=1\n\n## The following "WIFI 1", "WIFI 2" represents the settings of multiple wireless networks ##\n## Unless you want to set up multiple wireless networks, ##\n##you only need to set the settings of "WIFI 1". ##\n## WIFI 1 (Do not uncomment this line!) ##\n\n## In addition to canceling the content comments that need to take effect, ##\n## the following only need to modify the contents of the quotes after "ssid" and "psk". ##\n## ssid is your wireless Wifi name, psk is your wireless Wifi password ##\n#network={\n#    ssid="your-wifi1-ssid"\n#    psk="wifi1-password"\n#    priority=1\n#    id_str="wifi-1"\n#}\n\n## WIFI 2 (Do not uncomment this line!) ##\n\n#network={\n#    ssid="your-wifi2-ssid"\n#    psk="wifi2-password"\n#    priority=2\n#    id_str="wifi-2"\n#}\n```\n\n**wireless area code settings**\n\nEdit the file of the **"/etc/default/crda"**, edit the contents behind **"REGDOMAIN="**, the default has been set to "**CN**" China, in general, no settings are required.\n\n**with wireless common area code: **\n\n```\nAU Australia\nCA Canada\nCN China\nGB UK\nHK Hong Kong\nJP Japan\nKR Korea\nDE Germany\nUS USA\nTW Taiwan\n```\n\n### 3-6. Wired Network Configuration\n\nModifying the file of the file of the file: **"/boot/interfaces"**\n\n```\ninterfaces (5) file used by by ifup (8) and ifdown (8)\nInclude files from /etc/network/interfaces.d:\nsource-source/etc/network/interfaces.d\nUsed dhcp ip address set eth0 inet to dhcp,\nsor used static ip address set eth0 to static\nSand change other ip settings.\nIf you wanna let settings to take effect,\nsuncomment symbol in front.\n#auto eth0\n#allow-hotplug eth0\n#iface eth0 inet dhcp\n#iface eth0 inet static\n#address 172.16.192.168\n#netmask 255.255.255.0\n#gateway 172.16.192.1\n#dns-nameservers 8.8.8.8\n```\n\n### 3-7. Boot Custom Startup Script\n\nThe system supports a custom scripts as an auto-start task during boot, which can be pre-configured before the system starts.\n\nEdit the script file **"/boot/rc-local"** and add the custom script content before line: **"exit 0"**.\n\n### 3-8. DO NOT Upgrade The Deepin Desktop ENV\n\n**The version which was after 2019-11-10 (Also included) had supported upgrade!**\n\nCuz of compatibility issues with the Deepin system and upstream warehouses (deepin itself), it is strongly discouraged from using any of the following commands or any other operations that would cause the system to be upgraded unless you know what you need to do!!!\n\nAll Deepin version systems need attention, including all Deepin versions of 1.0 and 2.0!\n\n```\napt upgrade\napt-get upgrade\napt dist-upgrade\napt-get dist-upgrade\n```\n\n**PS:**\n\n*Some software installation limited to Deepin itself compatibility issues, there may be bug caused the system can not start or any other unknown problems, because the software is too much we can not test one by one, welcome feedback, recommended install through source code.*\n\n*The Deepin Software Store software is provided by Deepin, not us, at present, Depth Software Store does not provide software support for arm64 , if there is any needs, please go to the deepin official forum for assistance.*\n\n*So we strongly recommend using our customized macOS-Mojave themed desktop version.*\n\n### 3-9. TTY Display Chinese Font (Not Remote) Of Chinese Environment\n\nNotice: Remote login ignores this problem, there will be no garbled problem. When only using the local terminal through a local monitor or serial connection, because the Linux kernel local standard TTY does not support the display of Chinese font, the relevant of action when the display of garbled is required.\n\nWe need to install fbterm extension support, to do that, use following commands under network environment:\n\n```\n## Install fbterm\nsudo apt update; sudo apt install fbterm -y\n\n## Add a login user to the video group\nsudo adduser root video ; sudo adduser pi video\n\nsudo adduser you create your own other user name (if any) video\n\n## And then execute the following command each time you need to display Chinese fonts\n## (wait some time for the first time):\n\nfbterm\n```\n\n### 3-10. Web Interface VNC Remote Desktop Of macOS Mojave Theme Desktop Support\n\n![web VNC](./images/web-vnc.jpg)\n\n**Note:**\n\nThe **macOS Mojave theme custom desktop** (*Desktop environment, Full-Featured*) which the version is after 2019-11-17 (also include) had support web interface VNC remote desktop by default.\n\n```\nThe default VNC access password is: raspberry\nThe default VNC web interface address is: http://your-rpi-ip-addr:5901\nThe default VNC client address is: your-rpi-ip-addr:5900\n```\n\n*You can not used web interface and client to connect the same vnc server at the same time.*\n\nIf you wanna used a client to connect the vnc server, we suggest you to use RealVNC client, you can click [here](https://www.realvnc.com/en/connect/download/viewer/) to download RealVNC client.\n\n#### Instructions for web interface VNC remote desktop usage\n\nThere are two ways to used the default VNC:\n\n**\xe2\x97\x8f Connected a real monitor**\n\n```\nThe VNC was default enabled, you needn\'t do nothing.\n```\n\n**\xe2\x97\x8f Without any monitor connected**\n\n```\nThe VNC was default enabled, but if you haven\'t any monitor to connected, you should use a \nvirutal monitor, run command: "virtual-monitor-enable" to enable virutal monitor mode, \nafter this the system will reboot.\n```\n\n#### IMPORTANT\n\n```\nIf you wanna enable the virtual monitor mode, you can not connect to a real monitor the \nsame time, if you had enabled the virtual monitor mode, run command :\n\n"virtual-monitor-disable" \n\nto back to the normal when you wanna connect to a real monitor back.\n```\n\n**Note: The "Virtual Monitor Mode" is not enabled by default.**\n\n#### Commands for default VNC\n\n**virtual-monitor-enable**\n\n```\nEnable the virtual monitor mode, without connect a real monitor.\nAfter this, the system will reboot.\n```\n\n**virtual-monitor-disable**\n\n```\nDisable the virtual monitor mode, back to Normal and connect a real monitor.\nAfter this, the system will reboot.\nThis is a system default mode.\n```\n\n**enable-vnc**\n\n```\nEnable the default VNC service.\nAfter this, the system will reboot.\nThe system is enabled by default.\n```\n\n**disable-vnc**\n\n```\nDisable the default VNC service.\nAfter this, the system will reboot.\n```\n\n**vnc-passwd**\n\n```\nChange the default VNC access password.\n```\n\n----\n\nIf you wanna install another VNC server packages, just like RealVNC, you can do this bellow:\n\n(You need to disable our system default VNC service before installation)\n\n*But we still suggest you to use the default VNC of system by us.*\n\n#### Install RealVNC Remote Desktop Of macOS Mojave Theme Desktop Environment\n\n```\nvnc_pkg=\'VNC-Server-6.6.0-Linux-ARM.deb\' ; \\\nsudo \\\nsed -i \'/deb http:\\/\\/mirrors.tuna.tsinghua.edu.cn\\/debian\\/ sid main non-free contrib/d\' \\\n/etc/apt/sources.list ; \\\nsudo apt clean all ; \\\nsudo echo \'deb http://mirrors.tuna.tsinghua.edu.cn/debian/ sid main non-free contrib\' \\\n>>/etc/apt/sources.list ; \\\nsudo dpkg --add-architecture armhf ; sudo apt update ; \\\ncd ~ ; wget https://www.realvnc.com/download/file/vnc.files/$vnc_pkg ; \\\nsudo apt install ./$vnc_pkg ; \\\nrm -rf ./$vnc_pkg ; \\\nsudo dpkg --remove-architecture armhf ; sudo apt update ; \\\nsudo systemctl enable vncserver-x11-serviced.service ; \\\nsudo systemctl start vncserver-x11-serviced.service ; \\\nsudo \\\nsed -i \'/deb http:\\/\\/mirrors.tuna.tsinghua.edu.cn\\/debian\\/ sid main non-free contrib/d\' \\\n/etc/apt/sources.list ; \\\nsudo apt clean all ; sudo apt update\n```\n\n**Attention please!!**\n\n```\nsudo \\\nsed -i \'/deb http:\\/\\/mirrors.tuna.tsinghua.edu.cn\\/debian\\/ sid main non-free contrib/d\' \\\n/etc/apt/sources.list ; \\\n```\n\n**Don\'t miss this command in the process of installing RealVNC on it above!!!**\n\nClick [here](https://www.realvnc.com/en/connect/download/viewer/) to download RealVNC client\n\nInstall and run the client, enter the IP address directly, do not need to fill in the port, username, and password is your system\'s login user and password.\n\n**PS:**\n\n*Some advanced instructions for Realvnc:*\n\n#### Installed system unit for VNC Server in Service Mode Mode Daemon\n\nStart or stop service with:\n\n```\nsystemctl (start-stop) vncserver-x11-service.service\n```\n\nMark or unmark the service to be started at boot time with:\n\n```\nsystemctl (enable-disable) vncserver-x11-service.service\n```\n\nHow to kill all Process:\n\n```\nkillall vncserver-x11-core vncserver-x11 vncagent vncserverui\n```\n\n**When you do not have a monitor you need do this way**\n\n*VNC Server Virtual Mode*\n\nIn this mode, the VNC connect address is:\n\n```\nyour-Rpi-ip-address:1\n```\n\n```\n## Mode A:\n\nInstalled system unit for VNC Server in Virtual Mode Daemon\n(This feature needs a RealVNC license)\n\nStart or stop service with:\n\n    systemctl (start-stop) vncserver-virtuald.service\n\nMark or unmark the service to be started at boot time with:\n\n    systemctl (enable-disable) vncserver-virtuald.service\n```\n\n```\n## Mode B:\n\nAnother way run Virtual Mode Daemon:\n(Custom way without license)\n(From Pi forum https://www.raspberrypi.org/forums/viewtopic.php?t=249124)\n\nDo as the follow steps:\n\n1. Install a package: \n\n    apt install xserver-xorg-video-dummy -y\n\n2. Run command:\n\n    killall vncserver-x11-core vncserver-x11 vncagent vncserverui ;\\\n    systemctl stop vncserver-x11-serviced.service ;\\\n    systemctl disable vncserver-x11-serviced.service ;\\\n    systemctl stop vncserver-virtuald.service ;\\\n    systemctl disable vncserver-virtuald.service\n\n3. Create a service script: \n\n/usr/lib/systemd/system/vncserver-pi.service\n\n---------------------------------------------------\n[Unit]\nDescription=VNC Server in Virtual Mode daemon\nAfter=network.target\n\n[Service]\nUser=pi\nType=forking\nExecStart=/usr/bin/vncserver :1\nExecStop=/usr/bin/vncserver -kill :1\nRestart=on-failure\nRestartSec=5\nKillMode=process\n\n[Install]\nWantedBy=multi-user.target\n---------------------------------------------------\n\n4. To enable the system Xorg server for all users, run:\n\n    vncinitconfig -enable-system-xorg\n\n    All answers need to choose "Y"\n\n    If you wanna disable, run:\n\n    vncinitconfig -disable-system-xorg\n\n5. Generate a "/etc/X11/vncserver-virtual.conf" conf file, run:\n\n    vncinitconfig -virtual-xorg-conf\n\n6. Then enable and start service:\n\n    systemctl enable vncserver-pi.service\n    systemctl start vncserver-pi.service\n\n\nKnown issue:\nThis mode isn\'t support restart vncserver-pi.service\nYou need to reboot system.\n```\n\n### 3-11. Switch Sound Output Channels\n\nVesrion 2.0: System Default Use the **HDMI** to output audio.\n\nThe commands for switching the sound output:\n\n```\namixer cset numid=3 2\n\n## Set the output here to 2, which is HDMI.\n## Setting the output to 1 switch to the analog signal (that is, the headphone connector).\n## The default setting is 0, which represents automatic selection.\n```\n\nAfter you have finished modifying your audio settings, you need to restart your Raspberry Pi in order for your changes to take effect.\n\n**If you\'re still not getting sound via HDMI:**\n\nIn some rare cases, it is necessary to edit config.txt to force HDMI mode (as opposed to DVI mode, which does not send sound). \n\nYou can do this by editing **/boot/config.txt** and setting **hdmi_drive=2** , then rebooting for the change to take effect.\n\n\n### 3-12. 32-Bit Software Armhf Support\n\n```\ndpkg --add-architecture armhf\napt update\n\n## The 32-bit "libc6:armhf" base library needs to be installed first\napt install libc6:armhf\n\napt install [Other package name]:[armhf]\n\n## Install 32-bit software Please add suffix ":armhf" after the name of the package\n```\n\n### 3-13. Enabled And Start Docker Service\n\nThe **BaseOS** and **Desktop Full-Features Versions** are not enabled by default and require manual start-up.\n\n```\n## Turn on the Docker service automatically start\nsystemctl enable docker.service\n\n## Start Docker service\nsystemctl start docker.service\n\n######\n\n## Stop Docker services\nsystemctl stop docker.service\n\n## Disable Docker service from booting\nsystemctl disable docker.service\n```\n\n### 3-14 Enabled And Start CecOS CaaS Container Cloud\n\nThe **BaseOS** and **Desktop Full-Features Versions** are not enabled by default and require manual start-up.\n\n**Note: To enable the CecOS CaaS container cloud service, you must enable and start the docker service first!**\n\n```\n## Turn on the CecOS CaaS Container Cloud service automatically start\nsystemctl enable cecos-caas.service\n\n## Start CecOS CaaS Container Cloud service\nsystemctl start cecos-caas.service\n\n######\n\n## Stop CecOS CaaS Container Cloud service\nsystemctl stop cecos-caas.service\n\n## Disable CecOS CaaS Container Cloud service from booting\nsystemctl disable cecos-caas.service\n```\n\n### 3-15 Create And Joined Or Exit And Left A Docker Cluster\n\n```\n## Initialize and join a Docker Swarm Cluster\ndocker swarm init\n\n## View cluster node status\ndocker node ls\n\n## exit Docker Swarm Cluster\ndocker swarm leave -force\n```\n\n### 3-16. FAQ NOTE\n\n#### 3-16.1 Using Profiles To Connect To The Wireless Networks Of Graphical Desktop Environment\n\nThe graphical desktop environment uses a profile to connect to a wireless network, and after modifying the ** /boot/wpa_supplicant.conf** file, to ensure good network compatibility, do the following:\n\nwith root user identity:\n\n```Shell\nsystemctl network Manager\n```\n\nThen execute:\n\n```Shell\nsed -i  \\\n\'s/sudo systemctl restart NetworkManager/## sudo systemctl restart NetworkManager/g\' \\\n/home/pi/.xsessionrc\n```\n\nFinally, after restart all done.\n\n### 3-17. Extra Application Instructions\n\n#### 3-17.1 WPS Office Arm 64-bit Desktop Installation Note\n\nGet the install package from download repo\'s "APP" folder, after extracting the installation package, go to the installation package directory.\n\nThen connect to the public network and execute the following command as the root user:\n\n```shell\nsudo ./install.sh\n```\n\nThe program will be installed.\n\n**Note:** *Test only on the* **macOS Mojave theme custom desktop** *version!!* \n\n**For testing and learning use only!!!**\n\n#### 3-17.2 How to install the QQ Official Desktop App (Linux Edition)\n\nMake sure your system can connect to internet, then run the commands below as root user:\n\n```\nqq_pkg=\'linuxqq_2.0.0-b1-1024_arm64.deb\' ; \\\ncd ~ ; \\\nwget https://raw.githubusercontent.com/openfans-community-offical/Debian-Pi-Aarch64/master/add-app/$qq_pkg ; \\\napt install ./$qq_pkg -y ; \\\nrm -rf ./$qq_pkg\n```\n\nAfter this, the App will be finished the installation.\n\n![linux_qq](./images/linux_qq.jpg)\n\n----\n\n## 4. Virtual Machine Instructions\n\nVirtual machine resource packages are typically published as compression packages, and the following commands are performed to install the support for the unzip pack:\n\n```\napt update ; apt install tar gzip zip unzip bzip2 xz-utils -y\n```\n\n### 4-1. Standard Virtual Machines PKG Instructions\n\nDefault user: root (remote permissions turned on), password: raspberry\n\nAfter unzipping the virtual machine resource package, change location and into the virtual machine\'s resource package directory then unzip the virtual disk image:\n\n```\nxz -d -k disk.qcow2.xz\n```\n\nYou will get a virtual disk image of **disk.qcow2**, and the system can be restored at any time with the commands above.\n\n**Run the virtual machine:**\n\n```\nsudo ./vm-run\n\n## This script command above will run the virtual machine in a background manner by default.\n```\n\nRun the virtual machine in the way the previous station:\n\nCopy the file **vm_run** and name as **vm_run2** , open the file **vm_run2** and delete the following 2 lines:\n\n```\n... ## omitting content\nnohup \\\n... ## omitting content\n   &\n... ## omitting content\n```\n\nThen, run **"sudo ./vm_run2"**.\n\n**Remote login:**\n\nPort 22 of the virtual machine has been mapped by default to the local port 2222, SSH access to the local machine\'s port 2222 directly.\n\nExample of the command:\n\n```\nssh -p 2222 root@local-ip-address\n```\n----\n### 4-2 BT-Panel Virtual Machine PKG Instructions\n\nIn order to take care of new users and respond to the voices of the people, we finally \xe2\x80\x9cintegrated\xe2\x80\x9d the Pagoda for you, using the virtual machine, 32-bit super clean custom ARMHF virtual system optimized for the pagoda, even for virtual machines, The speed is also greatly stronger than the official backplane system (who has used and who will understand :) --).\n\nTo run the benchmark:\n\n![BT-Panel](./images/bt_mark.png)\n\nBy default, all software is installed. Version 5.9.X Relatively stable professional "learning version", you know, this is just only allowed to use for your testing!!\n\n**Why BT-Panel?**\n\n```\n1. The use of beginners is convenient;\n2. The voice of the masses is too high;\n3. By the way...\n```\n\n**Why not integrate directly in the 64-bit OS?**\n\n```\n1. Not everyone needs a default integration, too bloated;\n\n2. Pollute system;\n\n3. BT-Panel is extremely poorly compatible with ARM64!\n\n4. The BT-Panel is not just a simple installation. \nThe software that needs to be used in the ARM system almost all needs to be recompiled. \nThe compatibility is poor and it takes a long time. \nIt can pretend that you doubt life and pretend that you wanna cry.\n\n5. The problems of various strange pits encountered in our use;\n\n6. It is not that the BT-Panel is not good overall. \nAt least the compatibility on the ARM64 is a considerable problem. \nIt feels like the official has not done the test. \nAll the work just like do the testing for them by free.\n```\n\n**Instructions:**\n\nAs with the standard virtual machine, extract the compressed package, and then change location and into the virtual machine\'s directory to perform related operations.\n\n**installation:**\n\n```\nsudo ./install\n```\n\n**Start BT-Panel Virtual Machine:**\n\n```\n./bt_run\n```\n\n**Close the BT-Panel Virtual Machine:**\n\nTo ensure the data synchronization security of the virtual machine, please follow the steps below:\n\n```\nPlease ssh login to the virtual machine and execute the command "init 0" \nto shut down the virtual machine.\n\nAfter shutting down, you need to execute the " ./bt_prog " command in the \nBT-Panel virtual machine directory \nto check if the virtual machine is closed.\n\nIf there is no output, it means the virtual machine has been shut down normally.\n\nIf the virtual machine cannot be shut down gracefully, \nexecute the " ./bt_prog kill " command in the BT-Panel virtual machine directory.\n\nAlso remember to execute the " ./bt_prog " command again to check \nif the virtual machine is down.\n```\n\n**Automatic startup:**\n\n```\n## Enable boot auto start\n./install int\n\n## Cancel the boot automatically\n./install uint\n```\n\n**Default parameter value:**\n\n|Project|Content|\n|---|---|\n|Default Management Port|28888|\n|Default Management Address|http://IP-Address-of-your-Raspberry-Pi:28888/|\n|Default Web Management User and Password|openfans/openfans|\n|BT-Panel Virtual Machine SSH Port|2222|\n|BT-Panel virtual machine root default password|raspberry|\n\n**How to use ssh to connect to BT-Panel virtual machine?**\n\n```\nLocal connection: ssh -p 2222 root@localhost\nExternal connection: ssh -p 2222 root@IP-address-of-your-Raspberry-Pi\n```\n\n**NOTE:**\n\n```\nDo not modify the default management port of the BT-Panel Panel unless you know how to modify the \ninstall the deployment script.\n\nIf you need to enable site support for custom ports, edit the ports file to add your custom port, \nbut don\'t modify the other default ports in the ports file.\n```\n\n**To save and save everyone\'s time, all the functions of the BT-Panel are turned on by default.**\n\n**For better performance, we strongly recommend turning off or removing features you don\'t need.**\n\n----\n\n### 4-3 How To Expand The Size Of A Virtual Machine Disk\n\nFirst, make sure your virtual machine was shutdown or not running.\n\nThe virtual machine disk in this article uses **bt.qcow2.disk** as an example.\n\n#### 4-3.1. Disk expansion\n\n**View disk size**\n\nExcuting an order:\n\n```shell\nqemu-img info bt.qcow2.disk\n```\n\nGet the following information:\n\n```shell\nImage: bt.qcow2.disk\nFile format: qcow2\nVirtual size: 10G (10737418240 bytes) # Total disk size\nDisk size: 6.4 # used capacity\nCluster_size: 65536\nFormat specific information:\n    Compat: 1.1\n    Lazy refcounts: false\n    Refcount bits: 16\n    Corrupt: false\n```\n\n**Disk expansion**\n\nIn this case, our goal is to add 10G capacity to the virtual machine disk.\n\nExecute the following command:\n\n```shell\nqemu-img resize bt.qcow2.disk +10G\n```\n\nThen look at the disk size again\n\nExcuting an order:\n\n```shell\nqemu-img info bt.qcow2.disk\n```\n\nThe results are as follows:\n\n```shell\nImage: bt.qcow2.disk\nFile format: qcow2\nVirtual size: 20G (21474836480 bytes) # Capacity increase is successful, the total size is 20G\nDisk size: 6.4G\nCluster_size: 65536\nFormat specific information:\n    Compat: 1.1\n    Lazy refcounts: false\n    Refcount bits: 16\n    Corrupt: false\n```\n\n#### 4-3.2. Extended partition\n\n**Expanding increased capacity to system partition**\n\nFirst, start the virtual machine and login to the virtual machine.\n\n```shell\nssh -p 2222 root@localhost\n```\n\n**View disk size**\n\nExcuting an order:\n\n```shell\nfdisk -l /dev/sda\n```\n\nThe results are as follows:\n\n```shell\nDisk /dev/sda: 20 GiB, 21474836480 bytes, 41943040 sectors # has been added to 20G\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: dos\nDisk identifier: 0xcd0e4df1\n\nDevice Boot Start End Sectors Size Id Type\n/dev/sda1 * 2048 20969471 20967424 10G 83 Linux # Partition capacity has not been expanded\n```\n\n**View partition size**\n\nExcuting an order:\n\n```shell\ndf -hT\n```\n\nThe results are as follows:\n\n```shell\nFilesystem Type Size Used Avail Use% Mounted on\nUdev devtmpfs 496M 0 496M 0% /dev\nTmpfs tmpfs 103M 1.5M 101M 2% /run\n/dev/sda1 btrfs 10G 4.7G 4.7G 50% / # Partition capacity has not been expanded\nTmpfs tmpfs 513M 4.0K 513M 1% /dev/shm\nTmpfs tmpfs 5.0M 0 5.0M 0% /run/lock\nTmpfs tmpfs 513M 0 513M 0% /sys/fs/cgroup\nTmpfs tmpfs 103M 0 103M 0% /run/user/0\n```\n\n**Installation** *parted* **Disk Management Tool**\n\n```shell\napt update ; apt install parted -y\n```\n\n**Extended partition**\n\nEnter the following command: **parted** and follow these steps:\n\n```shell\nparted\n```\n\nAt this point, you can see the disk information as follows\n\n```shell\nGNU Parted 3.2\nUsing /dev/sda # This is the disk we need to operate\nWelcome to GNU Parted! Type \'help\' to view a list of commands.\n(parted) print # Enter "print" to view the disk information of the current operation\nModel: QEMU QEMU HARDDISK (scsi)\nDisk /dev/sda: 21.5GB # Total size has been increased to 20G\nSector size (logical/physical): 512B/512B\nPartition Table: msdos\nDisk Flags:\nNumber Start End Size Type File system Flags\n 1 1049kB 10.7GB 10.7GB primary btrfs boot \n# Here "1" is the disk partition number, and the partition capacity has not changed yet.\n```\n\nNext enter the following command **resizepart** :\n\n```shell\n(parted) resizepart \n# Enter the command "resizepart" for partition expansion\nPartition number? 1 \n# Enter the partition number to be expanded. Since our disk here has only one partition, enter "1".\nWarning: Partition /dev/sda1 is being used. Are you sure you want to continue?\nYes/No? yes # Confirm to continue, type "yes"\nEnd? [10.7GB]? 100% \n# Enter "100%" to extend all available capacity to the partition specified in the previous step.\n(parted) print \n# Enter "print" to view the disk information of the current operation\nModel: QEMU QEMU HARDDISK (scsi)\nDisk /dev/sda: 21.5GB\nSector size (logical/physical): 512B/512B\nPartition Table: msdos\nDisk Flags:\nNumber Start End Size Type File system Flags\n 1 1049kB 21.5GB 21.5GB primary btrfs boot \n# You can see that the increased disk capacity has been expanded successfully.\n\n(parted) quit # Enter "quit" to quit\nInformation: You may need to update /etc/fstab.\n```\n\n**Update Partition Table**\n\nExecute the following command\n\n```shell\npartprobe /dev/sda\npartprobe /dev/sda1\n```\n\n**Extended File System**\n\nOur virtual machine here uses the *btrfs* file system. The related *btrfs* file system expansion operation is as follows:\n\nExcuting an order\n\n```shell\nbtrfs filesystem resize max /\n```\n\nWill get the following tips\n\n```shell\nresize \'/\' of \'max\'\n```\n\n**Remount the partition**\n\nThis article extends the root partition **"/"**, so next we remount **"/"** root partition\n\nExcuting an order:\n\n```shell\nmount -o remount,rw /\n```\n\n**Synchronous Data**\n\nExcuting an order:\n\n```shell\nsync\n```\n\n**Validation results**\n\nCheck partition size\n\ninput the command\n\n```shell\ndf -hT\n```\n\nThe results are as follows:\n\n```shell\nFilesystem Type Size Used Avail Use% Mounted on\nUdev devtmpfs 496M 0 496M 0% /dev\nTmpfs tmpfs 103M 1.5M 101M 2% /run\n/dev/sda1 btrfs 20G 4.7G 15G 25% / # partition has been successfully expanded\nTmpfs tmpfs 513M 4.0K 513M 1% /dev/shm\nTmpfs tmpfs 5.0M 0 5.0M 0% /run/lock\nTmpfs tmpfs 513M 0 513M 0% /sys/fs/cgroup\nTmpfs tmpfs 103M 0 103M 0% /run/user/0\n```\n\nRestart the virtual machine, log in again, and execute the command **df -hT** to determine the result\n\n----\n\n## 5. Update And Upgrade\n\n### 5-1 Upgrade System\n\nFor system updates, please use the tools or commands with the system, such as "apt update; apt upgrade"\n\n**Due to Deepin compatibility issues, do not perform any system upgrades on Deepin Desktop!!**\n\n### 5-2 Update Kernel And Firmware\n\nDownload the kernel and firmware update package, extract and go to the updated package directory, execute the following command:\n\n```\ncd ./upkg\nsudo sh ./sys_upgrade\n```\n\nAfter the completion, restart it.\n\n#### Note:\n\n**Version 2.0 does not currently support upgrading from any other version and requires a new installation.**\n\n### 5-3 Update Instructions\n\nClick **[here](./update.md)** to see the update instructions.\n\n### 5-4 Latest Current Version\n\nClick **[here](./versions.md)** to view the latest current version information.\n\n----\n\n## 6. Download Links\n\n- Baidu network disk: [Click to download](https://pan.baidu.com/s/1Q4eBVLyV9plXrjVGmSrMSg)\n\n- OneDrive: [Click to download](https://1drv.ms/u/s!AtEthomfQXh8lWj8KVMcbJL0pgJL?e=tZHisM)\n\n- Google Drive: [Click to download](https://drive.google.com/drive/folders/1MvMuzWYbjWSMZmY607qjukKiwSajOFZc?usp=sharing)\n\n- HUAWEI OSS STORAGE: [View](https://pifan.obs.myhuaweicloud.com)\n\n (Because of space constraints, **OneDrive** does not currently provide virtual machine image template to download)\n\n----\n\n## 7. Other Instructions\n\n### 7-1 Donation\n\n#### Thanks for your donation! We\'ll get the greatest power from your encourage!\n\nYou can choose to scan Alipay for direct sponsorship to support us, and we guarantee that all donations will be used for project development and equipment purchase.\n\n![jz](./images/jz.png)\n\n### 7-2 Contact Info.\n\nRaspberry Pi Fan Base 64-bit OS special official community **QQ group:** *703626518(Full)* , **976102807(new)**\n\nRaspberry Pi Fan Base official website: **[www.pifan.org](http://www.pifan.org)**\n\nTechnology support documents official website: **[blog.pifan.org](http://blog.pifan.org)**\n\nRaspberry Pi Fan Base official forum: **[bbs.pifan.org](http://bbs.pifan.org)**\n\nOPENFANS official website: **[www.openfans.org](http://www.openfans.org)**\n\n### 7-3 Copyright\n\n```\n1. The all above system is built by the OPENFANS open source community and is exclusively \ndistributed and provided technical support by the Raspberry Pi Fan base community;\n\n2. Any words or image reprint must indicate the source of the system (software); \nyou can make any modifications to the software or system, but you must keep the source and readme;\n\nStrictly used for any commercial purpose, if you need to use it commercially, \nplease contact and obtain permission from OPENFANS open source community and \nRaspberry Pi Fan base community;\n\n3. The above system and the ownership of the software belong to the corresponding software \nauthor and the license agreement to comply with the relevant software package;\n\n4. Failure to comply with the appeal rules, the OPENFANS open source community and the \nRaspberry Pi Fan base community have the right to pursue their respective responsibilities \nand order to stop all infringements;\n\n5. OPENFANS open source community and Raspberry Pi Fan base community have the final \ninterpretation of the above content.\n```\n\n## 8. Join US!\n\nThe Raspberry Pi Fan base community is recruiting **volunteers** to join the community now. The basic requirements are as follows:\n\n- **Hardware development and design staff**\n\n```\n1. Recognize the Raspberry Pi Fan base community culture and have great enthusiasm \nfor the Raspberry Pi;\n2. Responsible and responsible for the task of completing community arrangements on \ntime and in quality;\n3. Have the design ability of 3D printing modeling or circuit DSP;\n4. Have practical hardware design experience.\n```\n\n- **Software and system developer**\n\n```\n1. Recognize the Raspberry Pi Fan base community culture and have great enthusiasm \nfor the Raspberry Pi;\n2. Responsible and responsible for the task of completing community arrangements on \ntime and in quality;\n3. Familiar with system build compilation or software development;\n4. We like the development language, including but not limited to: JAVA, Python, \nGo, NodeJS, C, C++ ...;\n5. Require software compilation and Deb packaging;\n6. Have practical development experience.\n```\n\n**Another way, organizations, institutions and business units are welcome to discuss cooperation!!!**\n\nPlease contact us with any intent: **[admin@openfans.org](mailto:admin@openfans.org)**\n\nPlease write down the details and intentions and at least leave your **mobile phone number**, thank you for your cooperation.\n\n----\n\n## 9. Thanks\n\nOSCHINA : [Support fot git repo](https://gitee.com/)\n\nRaspbian: Official system (automatic expansion script part reference)\n\nUMRnInside :Project [UMRnInside/RPi-arm64](https://github.com/UMRnInside/RPi-arm64)(refer to the automatic expansion script section)\n\nAndreiw: Project [andreiw/RaspberryPiPkg](https://github.com/andreiw/RaspberryPiPkg)(EFI firmware referenced in version 1.0)\n\nSakaki(1) : [link](https://www.raspberrypi.org/forums/viewtopic.php?f=56&t=244478) (kernel boot problem reference)\n\nSakaki(2) : A H264-V4L2-M2M hardware acceleration command line video player.\n\nMargetts99 : [link](http://bbs.pifan.org/?thread-132.htm) (WPS integration recommendations and sharing issues report)\n\nWindows Arm On Qemu: *see [link1](https://github.com/virtio-win/kvm-guest-drivers-windows/issues/177#issuecomment-468149012) & [link2](https://www.raspberrypi.org/forums/viewtopic.php?f=56&t=248345&sid=d4dd0681937f13e9c0cb4f04e5b54979)*\n\n**And all other friends who have privately sponsored and helped us!**\n\n----\n\nOnce again despise the attack and slander called the "Dog Egg Brother" !\n'