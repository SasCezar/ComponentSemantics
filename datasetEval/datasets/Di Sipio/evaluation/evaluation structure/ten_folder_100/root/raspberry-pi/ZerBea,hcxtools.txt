b'hcxtools\n==============\n\nSmall set of tools convert packets from captures (h = hash, c = capture, convert and\ncalculate candidates, x = different hashtypes) for the use with latest hashcat\nor John the Ripper. The tools are 100% compatible to hashcat and John the Ripper\nand recommended by hashcat. This branch is pretty closely synced to hashcat git branch\n(that means: latest hcxtools matching on latest hashcat beta) and John the Ripper\ngit branch ("bleeding-jumbo").\n\nSupport for hashcat hash-modes: 2500, 2501, 4800, 5500, 12000, 16100, 16800, 16801\n \nSupport for John the Ripper hash-modes: WPAPSK-PMK, PBKDF2-HMAC-SHA1, chap, netntlm, tacacs-plus\n\nAfter capturing, upload the "uncleaned" cap here (https://wpa-sec.stanev.org/?submit)\nto see if your ap or the client is vulnerable by using common wordlists.\nConvert the cap to hccapx and/or to WPA-PMKID-PBKDF2 hashline (16800) and check if wlan-key\nor plainmasterkey was transmitted unencrypted.\n\n\nBrief description\n--------------\n\nMultiple stand-alone binaries - designed to run on  Arch Linux.\n\nAll of these utils are designed to execute only one specific function.\n\nhcxdumptool moved to: https://github.com/ZerBea/hcxdumptool\n\nRead this post: hcxtools - solution for capturing wlan traffic and conversion to hashcat formats (https://hashcat.net/forum/thread-6661.html)\n\nRead this post: New attack on WPA/WPA2 using PMKID (https://hashcat.net/forum/thread-7717.html)\n\n\n\n\nDetailed description\n--------------\n\n| Tool           | Description                                                                                                       |\n| -------------- | ----------------------------------------------------------------------------------------------------------------- |\n| hcxpcaptool    | Shows info of pcap/pcapng file and convert it to other hashformats accepted by hashcat and John the Ripper        |\n| hcxpsktool     | Calculates candidates for hashcat and john based on based on hcxpcaptool output (-o, -z- -U) or commandline input |\n| hcxwltool      | Calculates candidates for hashcat and john based on hcxpcaptool output (-E, -I- -U)                               |\n| hcxessidtool   | Various ESSID based filter operations on HCCAPX and PMKID files                                                   |\n| hcxmactool     | Various MAC based filter operations on HCCAPX and PMKID files                                                     |\n| hcxpmkidtool   | CPU based tools to verfiy a PMKID                                                                                 |\n| hcxhash2cap    | Converts hash file (PMKID, EAPOL-hccapx, EAPOL-hccap, WPAPSK-john) to cap                                         |\n| whoismac       | Show vendor information and/or download oui reference list                                                        |\n| wlancap2wpasec | Upload multiple (gzip compressed) pcapng, pcap and cap files to https://wpa-sec.stanev.org                        |\n| -------------- | ----------------------------------------------------------------------------------------------------------------- |\n| hcxhashcattool | Convert old hashcat (<= 5.1.0) separate potfile (2500 and/or 16800) to new potfile format                         |\n| wlanhc2hcx     | Converts hccap to hccapx                                                                                          |\n| wlanwkp2hcx    | Converts wpk (ELMCOMSOFT EWSA projectfile) to hccapx                                                              |\n| wlanhcx2ssid   | Strips BSSID, ESSID, OUI                                                                                          |\n| wlanhcxinfo    | Shows detailed info from contents of hccapxfile                                                                   |\n| wlanhcxmnc     | Help to calculate hashcat\'s nonce-error-corrections value on byte number xx of an anonce                          |\n| wlanhcxcat     | Simple password recovery tool for WPA/WPA2/WPA2 SHA256 AES-128-CMAC (hash-modes 2500, 2501)                       |\n| wlanpmk2hcx    | Converts plainmasterkey and ESSID for use with hashcat hash-mode 12000 or john PBKDF2-HMAC-SHA1                   |\n| wlanjohn2hcx   | Converts john wpapsk hashfiles for use with hashcat hash-modes 2500, 2501                                         |\n| wlancow2hcxpmk | Converts pre-computed cowpatty hashfiles for use with hashcat hash-mode 2501                                      |\n| wlanhcx2john   | Converts hccapx to format expected by John the Ripper                                                             |\n\n\nCompile\n--------------\n\nSimply run:\n\n```\nmake\nmake install (as super user)\n```\n\n\nRequirements\n--------------\n\n* Linux (recommended Arch Linux, but other distros should work, too (no support for other distributions).\n\n* libopenssl and openssl-dev installed\n\n* librt and librt-dev installed (should be installed by default)\n\n* zlib and zlib-dev installed (for gzip compressed cap/pcap/pcapng files)\n\n* libcurl and curl-dev installed (used by whoismac and wlancap2wpasec)\n\n* libpthread and pthread-dev installed (used by hcxhashcattool)\n\nTo install requirements on Kali use the following \'apt-get install libcurl4-openssl-dev libssl-dev zlib1g-dev\'\n\n\nUseful scripts\n--------------\n\n| Script       | Description                                              |\n| ------------ | -------------------------------------------------------- |\n| piwritecard  | Example script to restore SD-Card                        |\n| piwreadcard  | Example script to backup SD-Card                         |\n| hcxgrep.py   | Extract records from hccapx/pmkid file based on regexp   |\n\n\nNotice\n--------------\n\nMost output files will be appended to existing files (with the exception of pcapng, pcap, cap files).\n\n\nBitmask message pair field (hcxpcaptool)\n--------------\n\n0: MP info (https://hashcat.net/wiki/doku.php?id=hccapx#message_pair_table)\n\n1: MP info (https://hashcat.net/wiki/doku.php?id=hccapx#message_pair_table)\n\n2: MP info (https://hashcat.net/wiki/doku.php?id=hccapx#message_pair_table)\n\n3: x unused\n\n4: ap-less attack (set to 1) - no nonce-error-corrections neccessary\n\n5: LE router detected (set to 1) - nonce-error-corrections only for LE neccessary\n\n6: BE router detected (set to 1) - nonce-error-corrections only for BE neccessary\n\n7: not replaycount checked (set to 1) - replaycount not checked, nonce-error-corrections definitely neccessary\n\n'