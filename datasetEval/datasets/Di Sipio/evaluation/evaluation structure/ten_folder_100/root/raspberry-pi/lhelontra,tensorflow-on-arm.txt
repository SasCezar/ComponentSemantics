b'# Tensorflow-on-arm\n\nInspired by the [tensorflow-on-raspberry-pi](https://github.com/samjabrahams/tensorflow-on-raspberry-pi).\nTool for compile tensorflow for arm.\n\n## Dependences\n```shell\napt-get install openjdk-8-jdk automake autoconf\napt-get install curl zip unzip libtool swig libpng-dev zlib1g-dev pkg-config git g++ wget xz-utils\n\n# For python2.7\napt-get install python-numpy python-dev python-pip python-mock\n\n# if using a virtual environment, omit the --user argument\npip install -U --user keras_applications==1.0.5 --no-deps\npip install -U --user keras_preprocessing==1.0.3 --no-deps\n\n# For python3\napt-get install python3-numpy python3-dev python3-pip python3-mock\n\n# if using a virtual environment, omit the --user argument\npip3 install -U --user keras_applications==1.0.5 --no-deps\npip3 install -U --user keras_preprocessing==1.0.3 --no-deps\n```\n\n## TensorFlow on Raspberry Pi\n\n### It\'s officially supported!\n\nPython wheels for TensorFlow are being [officially supported](https://medium.com/tensorflow/tensorflow-1-9-officially-supports-the-raspberry-pi-b91669b0aa0). As well, this repository maintain up-to-date tensorflow wheels for raspberry pi.\n\n### installation\n[Check out the official TensorFlow website for more information.](https://www.tensorflow.org/install/install_raspbian)\n\n\n## Cross-compilation\nMake you sure added arm architecture, see how to adds in debian flavors:\n```shell\ndpkg --add-architecture armhf\necho "deb [arch=armhf] http://httpredir.debian.org/debian/ buster main contrib non-free" >> /etc/apt/sources.list\n```\nif you want compile python support:\n```shell\n# For python2.7\napt-get install libpython-all-dev:armhf\n\n# For python3\napt-get install libpython3-all-dev:armhf\n```\nusing docker\n```shell\ncd build_tensorflow/\ndocker build -t tf-arm -f Dockerfile .\ndocker run -it -v /tmp/tensorflow_pkg/:/tmp/tensorflow_pkg/ --env TF_PYTHON_VERSION=3.7 tf-arm ./build_tensorflow.sh configs/<conf-name> # rpi.conf, rk3399.conf ...\n```\n\n## Edit tweaks like bazel resources, board model, and others\nsee configuration file examples in: build_tensorflow/configs/\n\n## Finally, compile tensorflow.\n```shell\ncd build_tensorflow/\nchmod +x build_tensorflow.sh\nTF_PYTHON_VERSION=3.5 ./build_tensorflow.sh <path-of-config>\n# If no output errors, the pip package will be in the directory: /tmp/tensorflow_pkg/\n```\n'