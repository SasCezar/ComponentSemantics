b"\r\n# PiShrink #\r\nPiShrink is a bash script that automatically shrink a pi image that will then resize to the max size of the SD card on boot. This will make putting the image back onto the SD card faster and the shrunk images will compress better.\r\n\r\n## Usage ##\r\n```\r\nsudo pishrink.sh [-sdrpzh] imagefile.img [newimagefile.img]\r\n  -s: Skip autoexpand\r\n  -d: Debug mode on\r\n  -r: Use advanced repair options\r\n  -z: Gzip compress image after shrinking\r\n  -h: display help text\r\n```\r\n\r\nIf you specify the `newimagefile.img` parameter, the script will make a copy of `imagefile.img` and work off that. You will need enough space to make a full copy of the image to use that option.\r\n\r\n* `-s` will skip the autoexpanding part of the process.\r\n* `-d` will create a logfile `pishrink.log` which may help for problem analysis.\r\n* `-r` will attempt to repair the filesystem if regular repairs fail\r\n* `-z` will Gzip compress the image after shrinking. The `.gz` extension will be added to the filename.\r\n\r\n\r\n## Prerequisites ##\r\nIf you are trying to shrink a [NOOBS](https://github.com/raspberrypi/noobs) image it will likely fail. This is due to [NOOBS partitioning](https://github.com/raspberrypi/noobs/wiki/NOOBS-partitioning-explained) being significantly different than Raspbian's. Hopefully PiShrink will be able to support NOOBS in the near future.\r\n\r\nIf using Ubuntu, you will likely see an error about `e2fsck` being out of date and `metadata_csum`. The simplest fix for this is to use Ubuntu 16.10 and up, as it will save you a lot of hassle in the long run.\r\n\r\n## Installation ##\r\n```bash\r\nwget https://raw.githubusercontent.com/Drewsif/PiShrink/master/pishrink.sh\r\nchmod +x pishrink.sh\r\nsudo mv pishrink.sh /usr/local/bin\r\n```\r\n\r\n## Example ##\r\n```bash\r\n[user@localhost PiShrink]$ sudo pishrink.sh pi.img\r\ne2fsck 1.42.9 (28-Dec-2013)\r\nPass 1: Checking inodes, blocks, and sizes\r\nPass 2: Checking directory structure\r\nPass 3: Checking directory connectivity\r\nPass 4: Checking reference counts\r\nPass 5: Checking group summary information\r\n/dev/loop1: 88262/1929536 files (0.2% non-contiguous), 842728/7717632 blocks\r\nresize2fs 1.42.9 (28-Dec-2013)\r\nresize2fs 1.42.9 (28-Dec-2013)\r\nResizing the filesystem on /dev/loop1 to 773603 (4k) blocks.\r\nBegin pass 2 (max = 100387)\r\nRelocating blocks             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\nBegin pass 3 (max = 236)\r\nScanning inode table          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\nBegin pass 4 (max = 7348)\r\nUpdating inode references     XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\nThe filesystem on /dev/loop1 is now 773603 blocks long.\r\n\r\nShrunk pi.img from 30G to 3.1G\r\n```\r\n\r\n## Contributing ##\r\nIf you find a bug please create an issue for it. If you would like a new feature added, you can create an issue for it but I can't promise that I will get to it.\r\n\r\nPull requests for new features and bug fixes are more than welcome!\r\n"