b'# markdown-it\n\n[![Build Status](https://img.shields.io/travis/markdown-it/markdown-it/master.svg?style=flat)](https://travis-ci.org/markdown-it/markdown-it)\n[![NPM version](https://img.shields.io/npm/v/markdown-it.svg?style=flat)](https://www.npmjs.org/package/markdown-it)\n[![Coverage Status](https://coveralls.io/repos/markdown-it/markdown-it/badge.svg?branch=master&service=github)](https://coveralls.io/github/markdown-it/markdown-it?branch=master)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/markdown-it/markdown-it)\n\n> Markdown parser done right. Fast and easy to extend.\n\n__[Live demo](https://markdown-it.github.io)__\n\n- Follows the __[CommonMark spec](http://spec.commonmark.org/)__ + adds syntax extensions & sugar (URL autolinking, typographer).\n- Configurable syntax! You can add new rules and even replace existing ones.\n- High speed.\n- [Safe](https://github.com/markdown-it/markdown-it/tree/master/docs/security.md) by default.\n- Community-written __[plugins](https://www.npmjs.org/browse/keyword/markdown-it-plugin)__ and [other packages](https://www.npmjs.org/browse/keyword/markdown-it) on npm.\n\n__Table of content__\n\n- [markdown-it](#markdown-it)\n  - [Install](#install)\n  - [Usage examples](#usage-examples)\n    - [Simple](#simple)\n    - [Init with presets and options](#init-with-presets-and-options)\n    - [Plugins load](#plugins-load)\n    - [Syntax highlighting](#syntax-highlighting)\n    - [Linkify](#linkify)\n  - [API](#api)\n  - [Syntax extensions](#syntax-extensions)\n    - [Manage rules](#manage-rules)\n  - [Benchmark](#benchmark)\n  - [Support markdown-it](#support-markdown-it)\n  - [Authors](#authors)\n  - [References / Thanks](#references--thanks)\n\n## Install\n\n**node.js** & **bower**:\n\n```bash\nnpm install markdown-it --save\nbower install markdown-it --save\n```\n\n**browser (CDN):**\n\n- [jsDeliver CDN](http://www.jsdelivr.com/#!markdown-it "jsDelivr CDN")\n- [cdnjs.com CDN](https://cdnjs.com/libraries/markdown-it "cdnjs.com")\n\n\n## Usage examples\n\nSee also:\n\n- __[API documentation](https://markdown-it.github.io/markdown-it/)__ - for more\n  info and examples.\n- [Development info](https://github.com/markdown-it/markdown-it/tree/master/docs) -\n  for plugins writers.\n\n\n### Simple\n\n```js\n// node.js, "classic" way:\nvar MarkdownIt = require(\'markdown-it\'),\n    md = new MarkdownIt();\nvar result = md.render(\'# markdown-it rulezz!\');\n\n// node.js, the same, but with sugar:\nvar md = require(\'markdown-it\')();\nvar result = md.render(\'# markdown-it rulezz!\');\n\n// browser without AMD, added to "window" on script load\n// Note, there is no dash in "markdownit".\nvar md = window.markdownit();\nvar result = md.render(\'# markdown-it rulezz!\');\n```\n\nSingle line rendering, without paragraph wrap:\n\n```js\nvar md = require(\'markdown-it\')();\nvar result = md.renderInline(\'__markdown-it__ rulezz!\');\n```\n\n\n### Init with presets and options\n\n(*) presets define combinations of active rules and options. Can be\n`"commonmark"`, `"zero"` or `"default"` (if skipped). See\n[API docs](https://markdown-it.github.io/markdown-it/#MarkdownIt.new) for more details.\n\n```js\n// commonmark mode\nvar md = require(\'markdown-it\')(\'commonmark\');\n\n// default mode\nvar md = require(\'markdown-it\')();\n\n// enable everything\nvar md = require(\'markdown-it\')({\n  html: true,\n  linkify: true,\n  typographer: true\n});\n\n// full options list (defaults)\nvar md = require(\'markdown-it\')({\n  html:         false,        // Enable HTML tags in source\n  xhtmlOut:     false,        // Use \'/\' to close single tags (<br />).\n                              // This is only for full CommonMark compatibility.\n  breaks:       false,        // Convert \'\\n\' in paragraphs into <br>\n  langPrefix:   \'language-\',  // CSS language prefix for fenced blocks. Can be\n                              // useful for external highlighters.\n  linkify:      false,        // Autoconvert URL-like text to links\n\n  // Enable some language-neutral replacement + quotes beautification\n  typographer:  false,\n\n  // Double + single quotes replacement pairs, when typographer enabled,\n  // and smartquotes on. Could be either a String or an Array.\n  //\n  // For example, you can use \'\xc2\xab\xc2\xbb\xe2\x80\x9e\xe2\x80\x9c\' for Russian, \'\xe2\x80\x9e\xe2\x80\x9c\xe2\x80\x9a\xe2\x80\x98\' for German,\n  // and [\'\xc2\xab\\xA0\', \'\\xA0\xc2\xbb\', \'\xe2\x80\xb9\\xA0\', \'\\xA0\xe2\x80\xba\'] for French (including nbsp).\n  quotes: \'\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x98\xe2\x80\x99\',\n\n  // Highlighter function. Should return escaped HTML,\n  // or \'\' if the source string is not changed and should be escaped externally.\n  // If result starts with <pre... internal wrapper is skipped.\n  highlight: function (/*str, lang*/) { return \'\'; }\n});\n```\n\n### Plugins load\n\n```js\nvar md = require(\'markdown-it\')()\n            .use(plugin1)\n            .use(plugin2, opts, ...)\n            .use(plugin3);\n```\n\n\n### Syntax highlighting\n\nApply syntax highlighting to fenced code blocks with the `highlight` option:\n\n```js\nvar hljs = require(\'highlight.js\'); // https://highlightjs.org/\n\n// Actual default values\nvar md = require(\'markdown-it\')({\n  highlight: function (str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return hljs.highlight(lang, str).value;\n      } catch (__) {}\n    }\n\n    return \'\'; // use external default escaping\n  }\n});\n```\n\nOr with full wrapper override (if you need assign class to `<pre>`):\n\n```js\nvar hljs = require(\'highlight.js\'); // https://highlightjs.org/\n\n// Actual default values\nvar md = require(\'markdown-it\')({\n  highlight: function (str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return \'<pre class="hljs"><code>\' +\n               hljs.highlight(lang, str, true).value +\n               \'</code></pre>\';\n      } catch (__) {}\n    }\n\n    return \'<pre class="hljs"><code>\' + md.utils.escapeHtml(str) + \'</code></pre>\';\n  }\n});\n```\n\n### Linkify\n\n`linkify: true` uses [linkify-it](https://github.com/markdown-it/linkify-it). To\nconfigure linkify-it, access the linkify instance through `md.linkify`:\n\n```js\nmd.linkify.tlds(\'.py\', false);  // disables .py as top level domain\n```\n\n\n## API\n\n__[API documentation](https://markdown-it.github.io/markdown-it/)__\n\nIf you are going to write plugins - take a look at\n[Development info](https://github.com/markdown-it/markdown-it/tree/master/docs).\n\n\n## Syntax extensions\n\nEmbedded (enabled by default):\n\n- [Tables](https://help.github.com/articles/organizing-information-with-tables/) (GFM)\n- [Strikethrough](https://help.github.com/articles/basic-writing-and-formatting-syntax/#styling-text) (GFM)\n\nVia plugins:\n\n- [subscript](https://github.com/markdown-it/markdown-it-sub)\n- [superscript](https://github.com/markdown-it/markdown-it-sup)\n- [footnote](https://github.com/markdown-it/markdown-it-footnote)\n- [definition list](https://github.com/markdown-it/markdown-it-deflist)\n- [abbreviation](https://github.com/markdown-it/markdown-it-abbr)\n- [emoji](https://github.com/markdown-it/markdown-it-emoji)\n- [custom container](https://github.com/markdown-it/markdown-it-container)\n- [insert](https://github.com/markdown-it/markdown-it-ins)\n- [mark](https://github.com/markdown-it/markdown-it-mark)\n- ... and [others](https://www.npmjs.org/browse/keyword/markdown-it-plugin)\n\n\n### Manage rules\n\nBy default all rules are enabled, but can be restricted by options. On plugin\nload all its rules are enabled automatically.\n\n```js\n// Activate/deactivate rules, with curring\nvar md = require(\'markdown-it\')()\n            .disable([ \'link\', \'image\' ])\n            .enable([ \'link\' ])\n            .enable(\'image\');\n\n// Enable everything\nmd = require(\'markdown-it\')({\n  html: true,\n  linkify: true,\n  typographer: true,\n});\n```\n\nYou can find all rules in sources:\n[parser_core.js](lib/parser_core.js), [parser_block](lib/parser_block.js),\n[parser_inline](lib/parser_inline.js).\n\n\n## Benchmark\n\nHere is the result of readme parse at MB Pro Retina 2013 (2.4 GHz):\n\n```bash\nmake benchmark-deps\nbenchmark/benchmark.js readme\n\nSelected samples: (1 of 28)\n > README\n\nSample: README.md (7774 bytes)\n > commonmark-reference x 1,222 ops/sec \xc2\xb10.96% (97 runs sampled)\n > current x 743 ops/sec \xc2\xb10.84% (97 runs sampled)\n > current-commonmark x 1,568 ops/sec \xc2\xb10.84% (98 runs sampled)\n > marked x 1,587 ops/sec \xc2\xb14.31% (93 runs sampled)\n```\n\n__Note.__ CommonMark version runs with [simplified link normalizers](https://github.com/markdown-it/markdown-it/blob/master/benchmark/implementations/current-commonmark/index.js)\nfor more "honest" compare. Difference is ~ 1.5x.\n\nAs you can see, `markdown-it` doesn\'t pay with speed for it\'s flexibility.\nSlowdown of "full" version caused by additional features not available in\nother implementations.\n\n\nSupport markdown-it\n-------------------\n\nYou can support this project via [Tidelift subscription](https://tidelift.com/subscription/pkg/npm-markdown-it?utm_source=npm-markdown-it&utm_medium=referral&utm_campaign=readme).\n\n\n## Authors\n\n- Alex Kocharin [github/rlidwka](https://github.com/rlidwka)\n- Vitaly Puzrin [github/puzrin](https://github.com/puzrin)\n\n_markdown-it_ is the result of the decision of the authors who contributed to\n99% of the _Remarkable_ code to move to a project with the same authorship but\nnew leadership (Vitaly and Alex). It\'s not a fork.\n\n## References / Thanks\n\nBig thanks to [John MacFarlane](https://github.com/jgm) for his work on the\nCommonMark spec and reference implementations. His work saved us a lot of time\nduring this project\'s development.\n\n**Related Links:**\n\n- https://github.com/jgm/CommonMark - reference CommonMark implementations in C & JS,\n  also contains latest spec & online demo.\n- http://talk.commonmark.org - CommonMark forum, good place to collaborate\n  developers\' efforts.\n\n**Ports**\n\n- [motion-markdown-it](https://github.com/digitalmoksha/motion-markdown-it) - Ruby/RubyMotion\n'