b'<div align="center">\n  <img src="./site/docs/assets/logo.svg">\n</div>\n\n<div align="center">\n  <strong>\xf0\x9f\x93\x9d Makes slides with Markdown easily.</strong>\n</div>\n\n<br />\n\n[![npm](https://img.shields.io/npm/v/fusuma.svg?style=flat-square)](https://www.npmjs.com/package/fusuma)\n[![Azure](https://img.shields.io/azure-devops/build/hiroppy/11c2bed9-94f9-46ea-a0f9-908f1763e0c4/1.svg?style=flat-square)](https://dev.azure.com/hiroppy/fusuma)\n[![Codecov](https://img.shields.io/codecov/c/github/hiroppy/fusuma.svg?style=flat-square)](https://codecov.io/gh/hiroppy/fusuma)\n\nJust write Markdown and create cool slides.\xf0\x9f\x98\x8e\n\n## **Please see [Fusuma\'s website](https://hiroppy.github.io/fusuma/) for details!**\n\n## Features\n\n- Slide Syntax\n  - Markdown and [MDX](https://github.com/mdx-js/mdx)\n  - Code\n  - MathJax\n  - Diagrams and Flowcharts\n- UI\n  - [WebSlides](https://webslides.tv)\n- Experimental APIs on Browsers\n  - [Presentation API](https://developer.mozilla.org/en-US/docs/Web/API/Presentation_API) (Chrome, Firefox)\n    - Also, Fusuma works even without Presentation API (uses localstorage)\n  - [Screen Capture API](https://developer.mozilla.org/en-US/docs/Web/API/Screen_Capture_API/Using_Screen_Capture) (Chrome, Firefox)\n    - It will help live coding, etc\n- Others\n  - Zero Config\n  - Supporting SEO and OGP\n  - customizes JavaScript and CSS freely\n\n## Modes\n\n- Start Mode (for development)\n- Build Mode (for production)\n- [Presentation Mode](#presenter-mode)\n  - Speaker Note\n  - Timer\n  - Recording user\'s actions and voice\n  - Using a Fluorescent Marker on the slides\n- [Live Mode](#live-mode)\n  - Streaming tweets and comments\n- Deploying to GitHub Pages\n- Exporting slides as PDF\n\n## Demos\n\n- [Introducing Fusuma](https://hiroppy.github.io/fusuma/intro) [[repository](/samples/intro)]\n- Others [[repository](https://github.com/hiroppy/slides#my-slides)]\n\nYou can also try Fusuma in Gitpod, a one-click online IDE for GitHub:\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/hiroppy/fusuma/blob/master/samples/intro/slides/0-title.md)\n\n## Getting Started\n\n[Getting Started/Preparation](https://hiroppy.github.io/fusuma/docs/getting-started/preparation)\n\nNode versions > v10\n\nJust execute the following two lines for executing, generating and deploying slides!\n\n```sh\n$ npm i fusuma -D # yarn add fusuma --dev\n$ mkdir slides && echo \'# Hello\xf0\x9f\x98\x84\' > slides/title.md\n\n# --- Tree ---\n$ tree -a\n.\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 slides\n    \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 title.md\n\n1 directory, 1 files\n\n# -------- init ---------\n# you can use `init` command\n\n$ npx fusuma init\n$ tree -a\n\n.\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 .fusumarc.yml\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 slides\n\xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 0-title.md\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 style.css\n\n1 directory, 3 files\n\n# --- executable tasks---\n$ npx fusuma init     # customize fusuma configuration\n$ npx fusuma start    # development\n$ npx fusuma build    # build as NODE_ENV=production\n$ npx fusuma live     # start live mode\n$ npx fusuma deploy   # deploy to github pages\n$ npx fusuma pdf      # export as PDF from HTML\n\n# --- help\n$ npx fusuma --help\n$ npx fusuma live --help # see help for a specific command\n```\n\nWhen `npx fusuma start` is executed, fusuma will create a slide as follows and serve `localhost:8080`.\n\n![](./site/docs/assets/procedure-screenshot.png)\n\nAnd you can customize the slide using CSS and JS.\n\n[Guides/Configuring Fusuma#extending-js-and-css](https://hiroppy.github.io/fusuma/docs/guides/configuring-fusuma#extending-js-and-css)\n\n## Markdown and MDX\n\n```markdown\n## Hello\n\nThis is the first slide.\n\n---\n\n## \xf0\x9f\xa4\xad\n\nThis is the second slide.\n```\n\nAlso, you can use React components!\n\n```markdown\n<!-- 0-title.mdx -->\n\nimport { Sample } from \'./scripts/Sample\';\n\n<Sample />\n\n---\n\n## \xf0\x9f\xa4\xad\n\nThis is the second slide.\n```\n\n```js\n// Sample.js\n\nimport React from \'react\';\n\nexport const Sample = () => <p>Hello from jsx!!</p>;\n```\n\n## Configuration File\n\nThis file is optional, but many customizations will be possible.  \nSupports for `yaml` and `js` and it can be generated by running `fusuma init`.\n\n### .fusumarc.yml\n\nFusuma has a configure file to customize slides and SEO, etc...\n\n[Guides/Configuring Fusuma](https://hiroppy.github.io/fusuma/docs/guides/configuring-fusuma)\n\n## Slide Syntax\n\nFusuma has some slide syntax like creates a table of contents automatically, etc.\n\n[Guides/Slide Syntax](https://hiroppy.github.io/fusuma/docs/guides/slide-syntax)\n\n## Presenter Mode\n\n[Modes/Presenter](https://hiroppy.github.io/fusuma/docs/modes/presenter)\n\n### Features\n\n- Show your slide note\n- Set a timer\n- Record your actions and voice, and do time-travel\n- Draw lines on the slide\n\n### Recording Your Actions\n\n![](./site/docs/assets/presenter-mode-timeline.png)\n\nVideo -> [Recording Your Voice](https://hiroppy.github.io/fusuma/docs/modes/presenter#recording-your-voice)\n\n### Drawing Lines\n\nWhen you write characters on the host side, it will be reflected on the client side in real time.\n\n![](./site/docs/assets/drawing.png)\n\n## Live Mode\n\n[Modes/Live](https://hiroppy.github.io/fusuma/docs/modes/live)\n\nFusuma can fetch tweets from Twitter. In addition, fusuma have an api endpoint.  \nIf you specify a `keyword` and `authentication keys`, fetching from twitter will be enabled.  \nSince comments can be sent to fusuma itself, you can use in the private case.  \nAlso, this mode can run with Presenter Mode.\n\n![](./site/docs/assets/live-mode-comments.png)\n\n## Audits\n\n[This slide](https://hiroppy.github.io/fusuma/issues/#slide=1) is very simple, so this is a measure of the maximum performance fusuma can deliver.\n\n<img src="./site/docs/assets/audits.png" />\n\nThe values of `Accessibility` and `Best Practices` depend on the user because the user writes HTML(Markdown).  \nIf you want to make `SEO` score 100%, you should fill in the `.fusumarc.yml`.\n\n## Development\n\n### Setup\n\n```sh\n$ git clone git@github.com:hiroppy/fusuma.git\n$ cd fusuma\n$ npm i\n$ npm run setup\n```\n\n### Link local packages\n\n```sh\n$ npx lerna add @fusuma/xxx --scope=@fusuma/yyy\n```\n\nsee https://github.com/lerna/lerna/tree/master/commands/add\n\n## API\n\n```js\nconst start = require(\'@fusuma/task-start\');\nconst build = require(\'@fusuma/task-build\');\nconst pdf = require(\'@fusuma/task-pdf\');\nconst deploy = require(\'@fusuma/task-ghp\');\nconst init = require(\'@fusuma/task-init\');\n```\n'