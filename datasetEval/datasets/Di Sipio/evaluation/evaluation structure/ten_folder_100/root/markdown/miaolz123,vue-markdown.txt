b'# vue-markdown\n\n[![npm](https://img.shields.io/npm/v/vue-markdown.svg?style=flat)](https://www.npmjs.com/package/vue-markdown)\n[![npm](https://img.shields.io/npm/l/vue-markdown.svg?style=flat)](https://www.npmjs.com/package/vue-markdown)\n[![npm](https://img.shields.io/npm/dt/vue-markdown.svg?style=flat)](https://www.npmjs.com/package/vue-markdown)\n\n> If you want vue-markdown for `vue1.X.X`, please checkout [vue-markdown1.X.X](https://github.com/miaolz123/vue-markdown/tree/v1).\n\nA Powerful and Highspeed Markdown Parser for Vue.\n\nQuick start: `<vue-markdown>i am a ~~tast~~ **test**.</vue-markdown>`\n\nSupported Markdown Syntax:\n\n* [x] automatic table of contents\n* [x] table & class customize\n* [x] *SyntaxHighlighter\n* [x] definition list\n* [x] strikethrough\n* [x] GFM task list\n* [x] abbreviation\n* [x] superscript\n* [x] subscript\n* [x] footnote\n* [x] insert\n* [x] *katex\n* [x] emoji\n* [x] mark\n\n`*SyntaxHighlighter` work with [Prism](https://prismjs.com) recommend\n\n`*katex` need add [katex css](https://unpkg.com/katex/dist/katex.min.css).\n\n# Example\n\n[simple](https://github.com/miaolz123/vue-markdown/blob/master/example/simple)\n\n[webpack-simple](https://github.com/miaolz123/vue-markdown/blob/master/example/webpack-simple)\n\n[Live Demo](https://miaolz123.github.io/vue-markdown/)\n\n# Installation\n\n### Browser globals\n\n> The **dist** folder contains `vue-markdown.js` with the component exported in the `window.VueMarkdown` object.\n\n```html\n<body>\n  <vue-markdown>i am a ~~tast~~ **test**.</vue-markdown>\n</body>\n<script src="path/to/vue.js"></script>\n<script src="path/to/vue-markdown.js"></script>\n<script>\n    Vue.use(VueMarkdown);\n    var vm = new Vue({\n        el: "body"\n    });\n</script>\n```\n\n### NPM\n\n```shell\n$ npm install --save vue-markdown\n```\n\n### Yarn\n\n```shell\n$ yarn add vue-markdown --save\n```\n\n## CommonJS\n\n```js\nvar VueMarkdown = require(\'vue-markdown\');\n\nnew Vue({\n  components: {\n    \'vue-markdown\': VueMarkdown\n  }\n})\n```\n\n## ES6 (Vue-CLI users)\n\nAfter installing via Yarn or NPM, use the following snippet in the script portion of the Vue component which you wish to render the Markdown.\n\n```js\nimport VueMarkdown from \'vue-markdown\'\n\nnew Vue({\n  components: {\n    VueMarkdown\n  }\n})\n```\n\n# Slots\n\n```html\n<vue-markdown>this is the default slot</vue-markdown>\n```\n\nAfter setting up the middleware in your vue component above, using the embedded markdown is as easy as writing it between the `vue-markdown` tags.\n\nVueMarkdown has a default slot which is used to write the `markdown` source.\n\nTIP: The default slot only renders **once** at the beginning, and it will overwrite the prop of `source`!\n\n# Props\n\n| Prop | Type | Default | Describe |\n| ---- | ---- | ------- | ------- |\n| watches | Array | `["source", "show", "toc"]` | HTML refresh automatically when the prop in this array changed |\n| source | String | `null` | the markdown source code |\n| show | Boolean | `true` | enable render to the default slot automatically |\n| html | Boolean | `true` | enable HTML syntax in source |\n| xhtml-out | Boolean | `true` | `<br></br>` => `<br />` |\n| breaks | Boolean | `true` | `\\n` => `<br>` |\n| linkify | Boolean | `true` | autoconvert URL-like text to link |\n| emoji | Boolean | `true` | `:)` => `\xf0\x9f\x98\x83` |\n| typographer | Boolean | `true` | enable some language-neutral replacement and quotes beautification |\n| lang-prefix | String | `language-` | CSS language prefix for fenced blocks |\n| quotes | String | `\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x98\xe2\x80\x99` | use `\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x98\xe2\x80\x99` for Chinese, `\xe2\x80\x9e\xe2\x80\x9c\xe2\x80\x9a\xe2\x80\x98` for German, `\xc2\xab\xc2\xbb\xe2\x80\x9e\xe2\x80\x9c` for Russian |\n| table-class | String | `table` | customize html class of the `<table>` |\n| task-lists | Boolean | `true` | enable GFM task list |\n| toc | Boolean | `false` | enable automatic table of contents |\n| toc-id | String | `undefined` | the HTML id to render TOC |\n| toc-class | String | `table` | customize html class of the `<ul>` wrapping the TOC |\n| toc-first-level | Number | `2` | use `2` if you want to skip `<h1>` from the TOC |\n| toc-last-level | Number | `\'toc-first-level\' + 1` | use `5` if you want to skip `<h6>` from the TOC |\n| toc-anchor-link | Boolean | `true` | enable the automatic anchor link in the headings |\n| toc-anchor-class | String | `toc-anchor` | customize the anchor class name |\n| toc-anchor-link-symbol | String | `#` | customize the anchor link symbol |\n| toc-anchor-link-space | Boolean | `true` | enable inserting a space between the anchor link and heading |\n| toc-anchor-link-class | String | `toc-anchor-link` | customize the anchor link symbol class name |\n| anchorAttributes | Object | `{}` | anchor tag attributes such as `target: \'_blank\'` or `rel: \'nofollow\'` |\n| prerender | Function (String) String | `null` | filter function before markdown parse |\n| postrender | Function (String) String | `null` | filter function after markdown parse |\n\n# Events\n\n| Name | Param[Type] | Describe |\n| ---- | --------- | -------- |\n| rendered | outHtml[String] | dispatch when render finish |\n| toc-rendered | tocHtml[String] | dispatch when TOC render finish, never dispatch if the toc[prop] is `false` |\n\n# Thanks\n\n- [markdown-it](https://github.com/markdown-it/markdown-it)\n- [transtone](https://github.com/transtone)\n- [**brandonferens**](https://github.com/brandonferens)\n\n# Contributions\n\n- [miaolz123](https://github.com/miaolz123)\n- [brandonferens](https://github.com/brandonferens)\n- [brianbancroft](https://github.com/brianbancroft)\n- [nikolasp](https://github.com/nikolasp)\n- [mbackonja](https://github.com/mbackonja)\n- [Endi1](https://github.com/Endi1)\n- [printscreen](https://github.com/printscreen)\n- [killix](https://github.com/killix)\n- [LeFnord](https://github.com/lefnord)\n- [FlorianWendelborn](https://github.com/FlorianWendelborn)\n\n# License\n\nCopyright (c) 2016 [miaolz123](https://github.com/miaolz123) by [MIT](https://opensource.org/licenses/MIT)\n'