b'# Node.js API Starter Kit &nbsp; <a href="https://github.com/kriasoft/nodejs-api-starter/stargazers"><img src="https://img.shields.io/github/stars/kriasoft/nodejs-api-starter.svg?style=social&label=Star&maxAge=3600" height="20"></a> <a href="https://twitter.com/ReactStarter"><img src="https://img.shields.io/twitter/follow/ReactStarter.svg?style=social&label=Follow&maxAge=3600" height="20"></a>\n\nBoilerplate and tooling for authoring **data API** backends with **[Node.js][node]** and\n**[GraphQL][gql]**. It is best suited for developing a **GraphQL API** endpoint as a standalone\n(micro)service ([demo][demo]), backing up web front-ends and/or mobile apps (see [React Starter\nKit][rsk], [React Static Boilerplate][rsb] etc). Please, visit our [sponsors](https://www.paypal.me/koistya):\n\n<p align="center"><a href="https://rollbar.com/?utm_source=reactstartkit(github)&utm_medium=link&utm_campaign=reactstartkit(github)"><img src="https://koistya.github.io/files/rollbar-247x48.png" height="24" align="top" /></a> <a href="https://x-team.com/?utm_source=reactstarterkit&utm_medium=github-link&utm_campaign=reactstarterkit-june"><img src="https://koistya.github.io/files/xteam-168x48.png" height="24" align="top" /></a><sup><a href="https://x-team.com/join/?utm_source=reactstarterkit&utm_medium=github-link&utm_campaign=reactstarterkit-june">Hiring</a></sup></p>\n\n\n---\n\nThis project was bootstrapped with [Node.js API Starter Kit][nodejskit] ([support][gitter]).\n\n<p align="center"><a href="https://graphql-demo.kriasoft.com"><img src="http://koistya.github.io/files/nodejs-api-starter-demo.png" width="600" alt="GraphQL Demo" /><br><sup>https://graphql-demo.kriasoft.com</sup></a></p>\n\n\n## Tech Stack\n\n* [Docker][docker], [Node.js][node], [Yarn][yarn], [JavaScript][js], [Babel][babel], [Flow][flow], [Prettier][prettier] \xe2\x80\x94 core platform and dev tools\n* [Express][express], [Passport.js][passport], [session][session], [flash][flash], [cors][cors] etc. \xe2\x80\x94 common HTTP-server features\n* [GraphQL.js][gqljs], [GraphQL.js Relay][gqlrelay], [DataLoader][loader], [validator][validator] \xe2\x80\x94 [GraphQL][gql] schema and API endpoint\n* [PostgreSQL][pg], [Redis][redis], [Knex][knex], [pg][nodepg] \xe2\x80\x94 SQL, document, key/value data store; data access and migrations\n* [Nodemailer][mailer], [Handlebars][hbs], [Juice][juice] \xe2\x80\x94 transactional email and email templates /w layout support\n* [I18next][i18next], [I18next Middleware][i18nextmid], [I18next Backend][i18nextback] \xe2\x80\x94 localization and translations\n* [Jest][jest] - unit and snapshot testing\n\n## Directory Layout\n\n```bash\n.\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /build/                     # The compiled output (via Babel)\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /locales/                   # Localization resources (i18n)\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /migrations/                # Database schema migrations\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /seeds/                     # Scripts with reference/sample data\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /src/                       # Node.js application source files\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /emails/                # Handlebar templates for sending transactional email\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /routes/                # Express routes, e.g. /login/facebook\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /schema/                # GraphQL schema type definitions\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /utils/                 # Utility functions (mapTo, mapToMany etc.)\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /app.js                 # Express.js application\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /Context.js             # Data loaders and other context-specific stuff\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /db.js                  # Database access and connection pooling (via Knex)\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /email.js               # Client utility for sending transactional email\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /errors.js              # Custom errors and error reporting\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /passport.js            # Passport.js authentication strategies\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /redis.js               # Redis client\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /server.js              # Node.js server (entry point)\n\xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 /types.js               # Flow type definitions\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /tools/                     # Build automation scripts and utilities\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 docker-compose.yml          # Defines Docker services, networks and volumes\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 docker-compose.override.yml # Overrides per developer environment (not under source control)\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 Dockerfile                  # Commands for building a Docker image for production\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 package.json                # List of project dependencies\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 postgres-initdb.sh          # Configuration script for the PostgreSQL Docker container\n```\n\n\n## Prerequisites\n\n* [Docker][docker] Community Edition v17 or higher\n* [VS Code][code] editor (preferred) + [Project Snippets][vcsnippets],\n  [EditorConfig][vceditconfig], [ESLint][vceslint], [Flow][vcflow], and [Prettier][vcprettier]\n  plug-ins.\n\n\n## Getting Started\n\nJust clone the repo and run `docker-compose up`:\n\n```bash\ngit clone https://github.com/kriasoft/nodejs-api-starter.git example-api\ncd example-api                  # Change current directory to the newly created one\ndocker-compose up               # Launch Docker containers with the Node.js API app running inside\n```\n\nThe API server must become available at [http://localhost:8080/graphql](http://localhost:8080/graphql)\n([live demo][demo]).\n\nOnce the Docker container named `api` is started, the Docker engine executes `node tools/run.js`\ncommand that installs Node.js dependencies, migrates database schema to the latest version,\ncompiles Node.js app from source files (see [`src`](./src)) and launches it with "live reload"\non port `8080`.\n\nIf you need to manually rollback and re-apply the latest database migration file, run the following:\n\n```bash\nyarn docker-db-rollback         # Rollbacks the latest migration\nyarn docker-db-migrate          # Migrates database to the latest version (see /migrates folder)\nyarn docker-db-seed             # Seeds database with test data (see /seeds folder)\n```\n\nIn order to open a shell from inside the running "api" container, run:\n\n```bash\ndocker-compose exec api /bin/sh\n```\n\nSimilarly, if you need to open a PostgreSQL shell ([psql][psql]), execute this command:\n\n```bash\ndocker-compose exec db psql <db> -U postgres\n```\n\nFor the full list of automation scripts available in this project, please refer to "scripts"\nsection in the [`package.json`](./package.json) file and the [`tools`](./tools) folder.\n\n\n## Testing\n\n```bash\nyarn lint                       # Find problematic patterns in code\nyarn check                      # Check source code for type errors\nyarn docker-test                # Run unit tests once inside a Docker container\nyarn docker-test-watch          # Run unit tests in watch mode inside a Docker container\n```\n\nFor more information visit http://facebook.github.io/jest/\n\n\n## Debugging\n\nIn order to run the app with [V8 inspector][v8debug] enabled, simply replace `node tools/run.js`\nwith `node --inspect=0.0.0.0:9229 tools/run.js` in either [`docker-compose.yml`](docker-compose.yml)\nfile or, even better, in `docker-compose.override.yml`. Then restart the app (`docker-compose up`) and\n[attach your debugger][vsdebug] to `127.0.0.1:9230` (see [`.vscode/launch.json`](./.vscode/launch.json))\n\n\n## Keeping Up-to-Date\n\nIf you keep the original Git history after cloning this repo, you can always fetch and merge\nthe recent updates back into your project by running:\n\n```bash\ngit remote add nodejs-api-starter https://github.com/kriasoft/nodejs-api-starter.git\ngit checkout master\ngit fetch nodejs-api-starter\ngit merge nodejs-api-starter/master\ndocker-compose build --no-cache\ndocker-compose run --rm --no-deps api yarn\ndocker-compose up\n```\n\n*NOTE: Try to merge as soon as the new changes land on the master branch in Node.js API Starter\nrepository, otherwise your project may differ too much from the base/upstream repo.*\n\n\n## Deployment\n\nCustomize the deployment script found in `tools/publish.js` if needed. Then whenever you need to\ndeploy your app to a remote server simply run:\n\n```bash\nnode tools/publish <host>       # where <host> is the name of your web server (see ~/.ssh/config)\n```\n\nNot sure where to deploy your app? [DigitalOcean][do] is a great choice in many cases (get [$10 credit][do])\n\n\n## Contributing\n\nAnyone and everyone is welcome to [contribute](CONTRIBUTING.md). Start by checking out the list of\n[open issues](https://github.com/kriasoft/nodejs-api-starter/issues) marked\n[help wanted](https://github.com/kriasoft/nodejs-api-starter/issues?q=label:"help+wanted").\nHowever, if you decide to get involved, please take a moment to review the [guidelines](CONTRIBUTING.md).\n\n\n## Reference Articles and Tutorials\n\n* [Stop using JWT for sessions](http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions/)\n  ([Part 2](http://cryto.net/~joepie91/blog/2016/06/19/stop-using-jwt-for-sessions-part-2-why-your-solution-doesnt-work/))\n  by [Sven Slootweg](https://github.com/joepie91)\n* [How to Safely Store Your Users\' Passwords](https://paragonie.com/blog/2016/02/how-safely-store-password-in-2016)\n  by [P.I.E.](https://paragonie.com/)\n* [How to set up Node.js API Starter on Windows 10](https://medium.com/@daveyedwards/how-to-setup-kriasofts-nodejs-api-starter-on-windows-10-a092d6e34882)\n  ([video](https://youtu.be/IV4IsYyfdKI)) by [Davey Edwards](https://twitter.com/daveyedwards)\n* [How to call C/C++ code from Node.js](https://medium.com/@tarkus/how-to-call-c-c-code-from-node-js-86a773033892)\n  by [Konstantin Tarkus](https://twitter.com/koistya)\n\n\n## Related Projects\n\n* [GraphQL.js](https://github.com/graphql/graphql-js) \xe2\x80\x94 The JavaScript reference implementation for [GraphQL](http://graphql.org/)\n* [DataLoader](https://github.com/facebook/dataloader) \xe2\x80\x94 Batching and caching for GraphQL data access layer\n* [React Starter Kit](https://github.com/kriasoft/react-starter-kit) \xe2\x80\x94 Isomorphic web app boilerplate (React, Node.js, Babel, Webpack, CSS Modules)\n* [React Static Boilerplate](https://github.com/kriasoft/react-static-boilerplate) \xe2\x80\x94 Single-page application (SPA) starter kit (React, Redux, Webpack, Firebase)\n* [Membership Database](https://github.com/membership/membership.db) \xe2\x80\x94 SQL schema boilerplate for user accounts, profiles, roles, and auth claims\n\n\n## License\n\nCopyright \xc2\xa9 2016-present Kriasoft. This source code is licensed under the MIT license found in the\n[LICENSE.txt](https://github.com/kriasoft/nodejs-api-starter/blob/master/LICENSE.txt) file.\n\n---\nMade with \xe2\x99\xa5 by Konstantin Tarkus ([@koistya](https://twitter.com/koistya), [blog](https://medium.com/@tarkus)) and [contributors](https://github.com/kriasoft/nodejs-api-starter/graphs/contributors)\n\n\n[nodejskit]: https://github.com/kriasoft/nodejs-api-starter\n[rsk]: https://github.com/kriasoft/react-starter-kit\n[rsb]: https://github.com/kriasoft/react-static-boilerplate\n[node]: https://nodejs.org\n[js]: https://developer.mozilla.org/docs/Web/JavaScript\n[babel]: http://babeljs.io/\n[flow]: https://flow.org/\n[prettier]: https://prettier.io/\n[gql]: http://graphql.org/\n[gqljs]: https://github.com/graphql/graphql-js\n[gqlrelay]: https://github.com/graphql/graphql-relay-js\n[yarn]: https://yarnpkg.com\n[demo]: https://graphql-demo.kriasoft.com/\n[express]: http://expressjs.com/\n[session]: https://github.com/expressjs/session\n[flash]: https://github.com/expressjs/flash\n[cors]: https://github.com/expressjs/cors\n[pg]: https://www.postgresql.org/\n[nodepg]: https://github.com/brianc/node-postgres\n[psql]: https://www.postgresql.org/docs/current/static/app-psql.html\n[do]: https://m.do.co/c/eef302dbae9f\n[code]: https://code.visualstudio.com/\n[vcsnippets]: https://marketplace.visualstudio.com/items?itemName=rebornix.project-snippets\n[vceditconfig]: https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig\n[vceslint]: https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\n[vcflow]: https://marketplace.visualstudio.com/items?itemName=flowtype.flow-for-vscode\n[vcprettier]: https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\n[docker]: https://www.docker.com/community-edition\n[compose]: https://docs.docker.com/compose/\n[v8debug]: https://chromedevtools.github.io/debugger-protocol-viewer/v8/\n[vsdebug]: https://code.visualstudio.com/Docs/editor/debugging\n[passport]: http://passportjs.org/\n[redis]: https://redis.io/\n[knex]: http://knexjs.org/\n[loader]: https://github.com/facebook/dataloader\n[validator]: https://github.com/chriso/validator.js\n[mailer]: https://nodemailer.com/\n[hbs]: http://handlebarsjs.com/\n[juice]: https://github.com/Automattic/juice\n[i18next]: https://www.i18next.com/\n[i18nextmid]: https://github.com/i18next/i18next-express-middleware\n[i18nextback]: https://github.com/i18next/i18next-node-fs-backend\n[jest]: http://facebook.github.io/jest/\n[gitter]: https://gitter.im/kriasoft/nodejs-api-starter\n'