b'# Card - check out the **[demo](https://jessepollak.github.io/card)**\n\n### A better credit card form in one line of code\n\nCard will take *any* credit card form and make it the best part of the checkout process (without you changing anything). Everything is created with pure CSS, HTML, and Javascript \xe2\x80\x94 no images required.\n\n![card](http://i.imgur.com/qG3TenO.gif)\n\n## Usage (without jQuery)\n\nTo use, you\'ll need to include the Card JavaScript files into your HTML, no CSS link is necessary as the JavaScript file does this for you. You can find the necessary file at `/dist/card.js` and include it in your HTML like so.\n\n```html\n<!-- at the end of BODY -->\n<!-- CSS is included via this JavaScript file -->\n<script src="/path/to/card.js"></script>\n```\n\nOnce you\'ve included those files, you can initialize Card.\n\n```javascript\nvar card = new Card({\n    // a selector or DOM element for the form where users will\n    // be entering their information\n    form: \'form\', // *required*\n    // a selector or DOM element for the container\n    // where you want the card to appear\n    container: \'.card-wrapper\', // *required*\n\n    formSelectors: {\n        numberInput: \'input#number\', // optional \xe2\x80\x94 default input[name="number"]\n        expiryInput: \'input#expiry\', // optional \xe2\x80\x94 default input[name="expiry"]\n        cvcInput: \'input#cvc\', // optional \xe2\x80\x94 default input[name="cvc"]\n        nameInput: \'input#name\' // optional - defaults input[name="name"]\n    },\n\n    width: 200, // optional \xe2\x80\x94 default 350px\n    formatting: true, // optional - default true\n\n    // Strings for translation - optional\n    messages: {\n        validDate: \'valid\\ndate\', // optional - default \'valid\\nthru\'\n        monthYear: \'mm/yyyy\', // optional - default \'month/year\'\n    },\n\n    // Default placeholders for rendered fields - optional\n    placeholders: {\n        number: \'\xe2\x80\xa2\xe2\x80\xa2\xe2\x80\xa2\xe2\x80\xa2 \xe2\x80\xa2\xe2\x80\xa2\xe2\x80\xa2\xe2\x80\xa2 \xe2\x80\xa2\xe2\x80\xa2\xe2\x80\xa2\xe2\x80\xa2 \xe2\x80\xa2\xe2\x80\xa2\xe2\x80\xa2\xe2\x80\xa2\',\n        name: \'Full Name\',\n        expiry: \'\xe2\x80\xa2\xe2\x80\xa2/\xe2\x80\xa2\xe2\x80\xa2\',\n        cvc: \'\xe2\x80\xa2\xe2\x80\xa2\xe2\x80\xa2\'\n    },\n\n    masks: {\n        cardNumber: \'\xe2\x80\xa2\' // optional - mask card number\n    },\n\n    // if true, will log helpful messages for setting up Card\n    debug: false // optional - default false\n});\n```\n### Installing card from bower\n\nIf you\'re using bower, you can install card.js with:\n\n    bower install card --save\n\n### Installing card from npm\n\nIf you\'re using npm, you can install card.js with:\n\n    npm install --save card\n\n\tvar $ = require("jquery");\n    // The current card.js code does not explicitly require jQuery, but instead uses the global, so this line is needed.\n    window.jQuery = $;\n    var card = require("card");\n\n### Using multiple inputs for one field\n\nCard can be used in forms where you have multiple inputs that render to a single field (i.e. you have a first and last name input). To use Card with this functionality, just pass in a selector that selects the fields in the correct order. For example,\n\n```html\n<html>\n<body>\n<div class=\'card-wrapper\'></div>\n<!-- CSS is included via this JavaScript file -->\n<script src="/path/to/card.js"></script>\n<form>\n    <input type="text" name="number">\n    <input type="text" name="first-name"/>\n    <input type="text" name="last-name"/>\n    <input type="text" name="expiry"/>\n    <input type="text" name="cvc"/>\n</form>\n<script>\nvar card = new Card({\n    form: \'form\',\n    container: \'.card-wrapper\',\n\n    formSelectors: {\n        nameInput: \'input[name="first-name"], input[name="last-name"]\'\n    }\n});\n</script>\n</body>\n</html>\n```\n\n### Rendering with different initial card placeholders\n\nCard renders with default placeholders for card `name`, `number`, `expiry`, and `cvc`. To override these placeholders, you can pass in a `placeholders` object.\n\n```html\n<html>\n<body>\n<div class=\'card-wrapper\'></div>\n<!-- CSS is included via this JavaScript file -->\n<script src="/path/to/card.js"></script>\n<form>\n    <input type="text" name="number">\n    <input type="text" name="name"/>\n    <input type="text" name="expiry"/>\n    <input type="text" name="cvc"/>\n</form>\n<script>\n\nvar card = new Card({\n    form: \'form\',\n    container: \'.card-wrapper\',\n\n    placeholders: {\n        number: \'**** **** **** ****\',\n        name: \'Arya Stark\',\n        expiry: \'**/****\',\n        cvc: \'***\'\n    }\n});\n</script>\n</body>\n</html>\n```\n\n### Translation\n\nTo render the card with the strings in a different language, you can pass in a `messages` object.\n\n```html\n<html>\n<body>\n<div class=\'card-wrapper\'></div>\n<!-- CSS is included via this JavaScript file -->\n<script src="/path/to/card.js"></script>\n<form>\n    <input type="text" name="number">\n    <input type="text" name="name"/>\n    <input type="text" name="expiry"/>\n    <input type="text" name="cvc"/>\n</form>\n<script>\n\nvar card = new Card({\n    form: \'form\',\n    container: \'.card-wrapper\',\n\n    messages: {\n        validDate: \'expire\\ndate\',\n        monthYear: \'mm/yy\'\n    }\n});\n</script>\n</body>\n</html>\n```\n\n## Using with jQuery\n\nTo use with jQuery, you\'ll need to include the `jquery.card.js` file into your HTML. You can find the necessary file at `/dist/jquery.card.js` and include it in your HTML like so.\n\n```html\n<!-- at the end of BODY -->\n<!-- CSS is included via this JavaScript file -->\n<script src="/path/to/jquery.card.js"></script>\n```\n\nOnce you\'ve included those files, you can initialize Card with jQuery.\n\n```javascript\n$(\'form\').card({\n    // a selector or DOM element for the container\n    // where you want the card to appear\n    container: \'.card-wrapper\', // *required*\n\n    // all of the other options from above\n});\n\n```\n## Using with other javascript libraries\n\nCard has wrappers that make it easy to use with other javascript libraries:\n\n### Angular 1.x\n\n* [angular-card](https://github.com/gavruk/angular-card)\n\n### Angular 2+\n\n* [ngx-card](https://github.com/ihym/ngx-card)\n\n### Ember\n\n* [ember-credit-card](https://github.com/esbanarango/ember-credit-card)\n\n### React\n\n* [react-credit-card](https://github.com/JohnyDays/react-credit-card)\n* [card-react](https://github.com/shatran/card-react)\n* [react-plastic](https://github.com/armsteadj1/react-plastic) - static CSS only version.\n\n## Development\n\nTo contribute, follow this steps:\n\n```bash\n$ git clone --recursive https://github.com/jessepollak/card.git\n$ cd card\n$ git submodule init && git submodule update\n$ npm install\n$ npm development\n```\n\nNow, if you go to localhost:8080/example in your browser, you should see the demo page.\n\n## Places using Card\n\nCard is used in the wild in these places:\n\n* [InspectAll](http://www.inspectall.com/)\n* [PennyWhale](https://www.pennywhale.com/)\n* [MakeSpace](https://www.makespace.com/)\n* [Blumpa](http://www.blumpa.com/)\n* [CourseLoads](http://www.courseloads.com/)\n* [PubNub](http://pubnub.com/)\n* [GigSalad](https://www.gigsalad.com)\n* [Boligninja](http://www.boligninja.dk)\n* [EasyCarros](http://www.easycarros.com/)\n* [Sintelle](http://www.sintelleparapharmacie.com/)\n* [Wevorce](http://wevorce.com/)\n* [PayumServer](https://github.com/Payum/PayumServer)\n* [Paribus](https://paribus.co)\n* [Bizzabo](https://www.bizzabo.com)\n* [Tortuba](https://www.tortuba.com)\n* [Netlify](https://www.netlify.com)\n* [The Spice House](https://www.thespicehouse.com/)\n* [Touts](https://www.touts.com.br/)\n* [Ryman Limited](http://www.ryman.co.uk)\n* [Robert Dyas](http://www.robertdyas.co.uk)\n* [ROKA](https://www.rokahub.com)\n* [LeSalon](https://lesalon.com)\n\nAre you using Card in production? If so, we\'d love to link to you from this page. Open a PR or drop [@jessepollak](http://twitter.com/jessepollak) a line on [Twitter](http://twitter.com/jessepollak) and we\'ll add you right away!\n\n## Donations\n\nIf you\'d like to donate to help support development of Card, send Bitcoin directly to `17NUKd3v7GWben18kGhmFafa4ZpWrXpQSC` or through Coinbase [here](https://coinbase.com/jessepollak).\n'