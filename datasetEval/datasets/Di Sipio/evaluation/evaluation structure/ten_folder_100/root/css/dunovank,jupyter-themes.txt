b'# jupyterthemes\n## Theme-ify your Jupyter Notebooks!\n\n|    Author    |                 Version                  |                  Status                  |                   Demo                   |\n| :----------: | :--------------------------------------: | :--------------------------------------: | :--------------------------------------: |\n| Kyle Dunovan | ![image](https://img.shields.io/pypi/v/jupyterthemes.svg) | ![image](https://travis-ci.org/dunovank/jupyter-themes.svg?branch=master) | [![Binder](http://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/dunovank/jupyter-themes/master?filepath=index.ipynb) |\n\n\n#### Help support me\nWhile I love my job as a researcher, it doesn\'t exactly bring home the bacon. I mean.. it brings home *some* bacon... but like... not *enough* bacon? Right.\nAnyway, a colleague suggested I add an optional donation badge so users can help support projects like `jupyter-themes` (and the forthcoming `lab-themes` which will give users similar control over the look and feel of Jupyter Lab. Currently in early stages of development).\n\nI firmly believe that software is best served open and, as such, am committed to providing free and easy access to all my code. So if you can\'t make a financial contribution, then don\'t and `pip install` it anyway! But if you\'re sitting on some extra cash and enjoy using a package I\'ve developed, then any amount helps and I *greatly* appreciate it.\n\nClick here to make a quick donation --> [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=FVXYJTEBMDE7W)\n\n\n\n#### JT Customizable Features\n\n#### **plotting style**\n![image](screens/onedork_reach_plots.png)\n\n#### **markdown/equations**\n![image](screens/oceans16_markdown.png)\n\n#### **pandas dataframes**\n![image](screens/grade3_table.png)\n\n#### **command palette**\n![image](screens/oceans16_command_palette.png)\n\n\n### Links\n* [jupyterthemes on PyPI](https://pypi.python.org/pypi/jupyterthemes/)\n* [jupyterthemes on GitHub](https://github.com/dunovank/jupyter-themes)\n\n### Requirements\n* Python 2.7, 3.4, 3.5, 3.6\n* Jupyter ([Anaconda](https://www.continuum.io/downloads) recommended)\n* matplotlib\n\n### Install with pip\n```sh\n# install jupyterthemes\npip install jupyterthemes\n\n# upgrade to latest version\npip install --upgrade jupyterthemes\n```\n\n### Known issues\n- **for best results:** use notebook>=5.6.0 (`pip install --upgrade notebook`)\n- **refreshing / removing / resetting:** depending on your system, browser, etc., you may need to empty your browser cache after installing a new theme (`-t`) or attempting to restore the default (`-r`) in order for those changes to take effect. (see discussion [here](https://github.com/dunovank/jupyter-themes/issues/86)). At the very least you\'ll need to refresh your browser window (usually `cmd+r` or `ctrl+r`).\n- **install issue:** if you get an error saying `jt` is not recognized, try [this](https://github.com/dunovank/jupyter-themes/issues/92#issuecomment-300688587) fix.\n- **slow render when scrolling:** fix available [here](https://github.com/dunovank/jupyter-themes/issues/117#issuecomment-296391443)\n\n\n### Command Line Usage\n```\njt  [-h] [-l] [-t THEME] [-f MONOFONT] [-fs MONOSIZE] [-nf NBFONT]\n    [-nfs NBFONTSIZE] [-tf TCFONT] [-tfs TCFONTSIZE] [-dfs DFFONTSIZE]\n    [-m MARGINS] [-cursw CURSORWIDTH] [-cursc CURSORCOLOR] [-vim]\n    [-cellw CELLWIDTH] [-lineh LINEHEIGHT] [-altp] [-altmd] [-altout]\n    [-P] [-T] [-N] [-r] [-dfonts]\n```\n\n#### Description of Command Line options\n| cl options            |   arg   |  default   |\n| :-------------------- | :-----: | :--------: |\n| Usage help            |   -h    |     --     |\n| List Themes           |   -l    |     --     |\n| Theme Name to Install |   -t    |     --     |\n| Code Font             |   -f    |     --     |\n| Code Font-Size        |   -fs   |     11     |\n| Notebook Font         |   -nf   |     --     |\n| Notebook Font Size    |  -nfs   |     13     |\n| Text/MD Cell Font     |   -tf   |     --     |\n| Text/MD Cell Fontsize |  -tfs   |     13     |\n| Pandas DF Fontsize    |  -dfs   |     9      |\n| Output Area Fontsize  |  -ofs   |    8.5     |\n| Mathjax Fontsize (%)  | -mathfs |    100     |\n| Intro Page Margins    |   -m    |    auto    |\n| Cell Width            | -cellw  |    980     |\n| Line Height           | -lineh  |    170     |\n| Cursor Width          | -cursw  |     2      |\n| Cursor Color          | -cursc  |     --     |\n| Alt Prompt Layout     |  -altp  |     --     |\n| Alt Markdown BG Color | -altmd  |     --     |\n| Alt Output BG Color   | -altout |     --     |\n| Style Vim NBExt*      |  -vim   |     --     |\n| Toolbar Visible       |   -T    |     --     |\n| Name & Logo Visible   |   -N    |     --     |\n| Kernel Logo Visible   |   -kl   |     --     |\n| Reset Default Theme   |   -r    |     --     |\n| Force Default Fonts   | -dfonts |     --     |\n\n\n### Command Line Examples\n```sh\n# list available themes\n# onedork | grade3 | oceans16 | chesterish | monokai | solarizedl | solarizedd\njt -l\n\n# select theme...\njt -t chesterish\n\n# restore default theme\n# NOTE: Need to delete browser cache after running jt -r\n# If this doesn\'t work, try starting a new notebook session.\njt -r\n\n# toggle toolbar ON and notebook name ON\njt -t grade3 -T -N\n\n# toggle kernel logo.  kernel logo is in same container as name\n# toggled with -N.  That means that making the kernel logo visible is\n# pointless without also making the name visible\njt -t grade3 -N -kl\n\n# set code font to \'Roboto Mono\' 12pt\n# (see monospace font table below)\njt -t onedork -f roboto -fs 12\n\n# set code font to Fira Mono, 11.5pt\n# 3digit font-sizes get converted into float (115-->11.5)\n# 2digit font-sizes > 25 get converted into float (85-->8.5)\njt -t solarizedd -f fira -fs 115\n\n# set font/font-size of markdown (text cells) and notebook (interface)\n# see sans-serif & serif font tables below\njt -t oceans16 -tf merriserif -tfs 10 -nf ptsans -nfs 13\n\n# adjust cell width (% screen width) and line height\njt -t chesterish -cellw 90% -lineh 170\n\n# or set the cell width in pixels by leaving off the \'%\' sign\njt -t solarizedl -cellw 860\n\n# fix the container-margins on the intro page (defaults to \'auto\')\njt -t monokai -m 200\n\n# adjust cursor width (in px) and make cursor red\n# options: b (blue), o (orange), r (red), p (purple), g (green), x (font color)\njt -t oceans16 -cursc r -cursw 5\n\n# choose alternate prompt layout (narrower/no numbers)\njt -t grade3 -altp\n\n# my two go-to styles\n# dark\njt -t onedork -fs 95 -altp -tfs 11 -nfs 115 -cellw 88% -T\n# light\njt -t grade3 -fs 95 -altp -tfs 11 -nfs 115 -cellw 88% -T\n```\n\n\n### Set Plotting Style (from within notebook)\n`jtplot.style()` makes changes to matplotlib\'s rcParams dictionary so that figure aesthetics match those of a chosen jupyterthemes style. In addition to setting the color scheme, `jtplot.style()` allows you to control various figure properties (spines, grid, font scale, etc.) as well as the plotting "context" (borrowed from [seaborn](https://seaborn.pydata.org/tutorial/aesthetics.html#scaling-plot-elements-with-plotting-context-and-set-context)).\n\nNote, these commands do not need to be re-run every time you generate a new plot, just once at the beginning of your notebook or whenever style changes are desired after that.\n\n**Pro-tip**: Include the following two lines in `~/.ipython/profile_default/startup/startup.ipy` file to set plotting style automatically whenever you start a notebook:\n```py\n# import jtplot submodule from jupyterthemes\nfrom jupyterthemes import jtplot\n\n# currently installed theme will be used to\n# set plot style if no arguments provided\njtplot.style()\n```\n\n### jtplot.style() Examples\n```py\n# import jtplot module in notebook\nfrom jupyterthemes import jtplot\n\n# choose which theme to inherit plotting style from\n# onedork | grade3 | oceans16 | chesterish | monokai | solarizedl | solarizedd\njtplot.style(theme=\'onedork\')\n\n# set "context" (paper, notebook, talk, poster)\n# scale font-size of ticklabels, legend, etc.\n# remove spines from x and y axes and make grid dashed\njtplot.style(context=\'talk\', fscale=1.4, spines=False, gridlines=\'--\')\n\n# turn on X- and Y-axis tick marks (default=False)\n# turn off the axis grid lines (default=True)\n# and set the default figure size\njtplot.style(ticks=True, grid=False, figsize=(6, 4.5))\n\n# reset default matplotlib rcParams\njtplot.reset()\n```\n\n\n#### Monospace Fonts (code cells)\n| -f arg      | Monospace Font           |\n| :---------- | :----------------------- |\n| anka        | Anka/Coder               |\n| anonymous   | Anonymous Pro            |\n| aurulent    | Aurulent Sans Mono       |\n| bitstream   | Bitstream Vera Sans Mono |\n| bpmono      | BPmono                   |\n| code        | Code New Roman           |\n| consolamono | Consolamono              |\n| cousine     | Cousine                  |\n| dejavu      | DejaVu Sans Mono         |\n| droidmono   | Droid Sans Mono          |\n| fira        | Fira Mono                |\n| firacode    | Fira Code                |\n| generic     | Generic Mono             |\n| hack        | Hack                     |\n| hasklig     | Hasklig                  |\n| inconsolata | Inconsolata-g            |\n| inputmono   | Input Mono               |\n| iosevka     | Iosevka                  |\n| liberation  | Liberation Mono          |\n| meslo       | Meslo                    |\n| office      | Office Code Pro          |\n| oxygen      | Oxygen Mono              |\n| roboto      | Roboto Mono              |\n| saxmono     | saxMono                  |\n| source      | Source Code Pro          |\n| sourcemed   | Source Code Pro Medium   |\n| ptmono      | PT Mono                  |\n| ubuntu      | Ubuntu Mono              |\n\n#### Sans-Serif Fonts\n| -nf/-tf arg   | Sans-Serif Font   |\n| :------------ | :---------------- |\n| opensans      | Open Sans         |\n| droidsans     | Droid Sans        |\n| exosans       | Exo_2             |\n| latosans      | Lato              |\n| ptsans        | PT Sans           |\n| robotosans    | Roboto            |\n| sourcesans    | Source Sans Pro   |\n\n#### Serif Fonts\n| -nf/-tf arg   | Serif Font       |\n| :------------ | :--------------- |\n| loraserif     | Lora             |\n| ptserif       | PT Serif         |\n| georgiaserif  | Georgia          |\n| cardoserif    | Cardo            |\n| crimsonserif  | Crimson Text     |\n| ebserif       | EB Garamond      |\n| merriserif    | Merriweather     |\n| neutonserif   | Neuton           |\n| goudyserif    | Sorts Mill Goudy |\n'