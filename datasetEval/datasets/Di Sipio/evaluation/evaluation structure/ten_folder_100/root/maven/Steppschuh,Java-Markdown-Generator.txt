b'# Java Markdown Generator\n[![Travis](https://img.shields.io/travis/Steppschuh/Java-Markdown-Generator.svg)](https://travis-ci.org/Steppschuh/Java-Markdown-Generator/) [![Bintray](https://api.bintray.com/packages/steppschuh/Markdown-Generator/Markdown-Generator/images/download.svg) ](https://bintray.com/steppschuh/Markdown-Generator/Markdown-Generator/_latestVersion) [![Maven Central](https://img.shields.io/maven-central/v/net.steppschuh.markdowngenerator/markdowngenerator.svg)](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22net.steppschuh.markdowngenerator%22) [![Codecov](https://img.shields.io/codecov/c/github/Steppschuh/Java-Markdown-Generator.svg)](https://codecov.io/gh/Steppschuh/Java-Markdown-Generator)\n\nSimple to use Java library to generate beautiful markdown.\n\n![Screenshot](https://github.com/Steppschuh/Java-Markdown-Generator/blob/dev/Media/code_table_output.png)\n\n# Usage\n\n## Integration\n\n### Gradle\n```groovy\nrepositories {\n    maven {\n        url  "http://dl.bintray.com/steppschuh/Markdown-Generator"\n    }\n}\ndependencies {\n    compile \'net.steppschuh.markdowngenerator:markdowngenerator:1.3.1.1\'\n}\n```\n\n### Maven\n```xml\n<dependency>\n  <groupId>net.steppschuh.markdowngenerator</groupId>\n  <artifactId>markdowngenerator</artifactId>\n  <version>1.3.1.1</version>\n</dependency>\n```\n\n### JAR\nYou can download the latest .jar files from [GitHub](https://github.com/Steppschuh/Java-Markdown-Generator/releases) or [Bintray](https://bintray.com/steppschuh/Markdown-Generator/Markdown-Generator/).\n\n## Examples\n\nMost Markdown elements have static convenience methods in the `Markdown` class. You can also use their repesctive constructors, as shown below. \n\n### Emphasis\n```java\n@Test\npublic void example() throws Exception {\n    StringBuilder sb = new StringBuilder()\n            .append(new Text("I am normal")).append("\\n")\n            .append(new BoldText("I am bold")).append("\\n")\n            .append(new ItalicText("I am italic")).append("\\n")\n            .append(new StrikeThroughText("I am strike-through"));\n\n    System.out.println(sb);\n}\n```\n**Output:**\n```\nI am normal\n**I am bold**\n_I am italic_\n~~I am strike-through~~\n```\n\n### Headings\n```java\n@Test\npublic void example() throws Exception {\n    StringBuilder sb = new StringBuilder()\n            .append(new Heading("Heading with level 1", 1)).append("\\n")\n            .append(new Heading("Heading with level 2", 2)).append("\\n")\n            .append(new Heading("Heading with level 3", 3)).append("\\n")\n            .append(new Heading("Heading with level 4", 4)).append("\\n")\n            .append(new Heading("Heading with level 5", 5)).append("\\n")\n            .append(new Heading("Heading with level 6", 6));\n\n    System.out.println(sb);\n}\n```\n**Output:**\n```\nHeading with level 1\n====================\nHeading with level 2\n--------------------\n### Heading with level 3\n#### Heading with level 4\n##### Heading with level 5\n###### Heading with level 6\n```\n\n### Rules\n```java\n@Test\npublic void example() throws Exception {\n    System.out.println(new HorizontalRule());\n    System.out.println(new HorizontalRule(20, HorizontalRule.ASTERISK));\n}\n```\n**Output:**\n```\n---\n********************\n```\n\n### Images\n```java\n@Test\npublic void example() throws Exception {\n    String text = "I am an image";\n    String url = "https://dummyimage.com/300";\n    System.out.println(new Image(text, url));\n}\n```\n**Output:**\n```\n![I am an image](https://dummyimage.com/300)\n```\n\n### Lists\n```java\n@Test\npublic void example() throws Exception {\n    List<Object> items = Arrays.asList(\n            "Items can be anything",\n            new Date(0),\n            1337\n    );\n    System.out.println(new UnorderedList<>(items));\n}\n```\n**Output:**\n```\n- Items can be anything\n- Thu Jan 01 01:00:00 CET 1970\n- 1337\n```\n\n### Tasks\n```java\n@Test\npublic void example() throws Exception {\n    List<TaskListItem> items = Arrays.asList(\n            new TaskListItem("Task 1", true),\n            new TaskListItem("Task 2", false),\n            new TaskListItem("Task 3")\n    );\n    System.out.println(new TaskList(items));\n}\n```\n**Output:**\n```\n- [x] Task 1\n- [ ] Task 2\n- [ ] Task 3\n```\n\n### Tables\n```java\n@Test\npublic void example() throws Exception {\n    Table.Builder tableBuilder = new Table.Builder()\n            .withAlignments(Table.ALIGN_RIGHT, Table.ALIGN_LEFT)\n            .withRowLimit(7)\n            .addRow("Index", "Boolean");\n\n    for (int i = 1; i <= 20; i++) {\n        tableBuilder.addRow(i, Math.random() > 0.5);\n    }\n\n    System.out.println(tableBuilder.build());\n}\n```\n**Output:**\n```\n| Index | Boolean |\n| -----:| ------- |\n|     1 | false   |\n|     2 | true    |\n|     3 | false   |\n| ~~~~~ | ~~~~~~~ |\n|    18 | false   |\n|    19 | true    |\n|    20 | false   |\n```\n\n### Code\n```java\n@Test\npublic void example() throws Exception {\n    String code = "// notice this new line\\n" +\n            "System.out.println(\\"Hello\\");";\n    System.out.println(new CodeBlock(code, "Java"));\n}\n```\n**Output:**\n```\n    ```Java\n    // notice this new line\n    System.out.println("Hello");\n    ```\n```\n'