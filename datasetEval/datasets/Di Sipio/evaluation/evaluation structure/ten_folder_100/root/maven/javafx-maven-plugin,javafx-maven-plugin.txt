b"[![Travis Build Status](https://travis-ci.org/javafx-maven-plugin/javafx-maven-plugin.svg?branch=master)](https://travis-ci.org/javafx-maven-plugin/javafx-maven-plugin)\n[![AppVeyor Build status](https://ci.appveyor.com/api/projects/status/64700ul3m9y88agi/branch/master?svg=true)](https://ci.appveyor.com/project/FibreFoX/javafx-maven-plugin/branch/master)\n[![Maven Central](https://img.shields.io/maven-central/v/com.zenjava/javafx-maven-plugin.svg)](https://maven-badges.herokuapp.com/maven-central/com.zenjava/javafx-maven-plugin)\n[![Dependency Status](https://www.versioneye.com/java/com.zenjava:javafx-maven-plugin/8.8.3/badge.svg)](https://www.versioneye.com/java/com.zenjava:javafx-maven-plugin/8.8.3)\n\n\n\nJavaFX Maven Plugin\n===================\n\nThe JavaFX Maven Plugin provides a way to assemble distribution bundles for JavaFX applications (8+ and 9+) from within Maven.\n\nThis plugin is essentially a Maven wrapper for the packaging tool that comes with JavaFX, it's called [javapackager](https://docs.oracle.com/javase/9/tools/javapackager.htm).\n \nFor easy configuration please use our new website (which needs to get updated/reworked again):\n**[http://javafx-maven-plugin.github.io](http://javafx-maven-plugin.github.io)**\n\n\n\nRequirements\n============\n* Maven 3.5 (older versions might work too)\n* Java Developer Kit 8 with at least Update 40\n\n\n\nOS-specific requirements\n========================\n* (Windows) EXE installers: Inno Setup\n* (Windows) MSI installers: WiX (at least version 3.7)\n* (Linux) DEB installers: dpkg-deb\n* (Linux) RPM installers: rpmbuild\n* (Mac) DMG installers: hdiutil\n* (Mac) PKG installers: pkgbuild\n\n\n\nQuickstart for JavaFX JAR\n=========================\n\nAdd this to your pom.xml within to your build-plugin:\n\n```xml\n<plugin>\n    <groupId>com.zenjava</groupId>\n    <artifactId>javafx-maven-plugin</artifactId>\n    <version>8.8.3</version>\n    <configuration>\n        <mainClass>your.package.with.Launcher</mainClass>\n    </configuration>\n</plugin>\n```\n\nTo create your executable file with JavaFX-magic, call `mvn jfx:jar`. The jar-file will be placed at `target/jfx/app`.\n\n\n\nQuickstart for JavaFX native bundle\n===================================\n\nAdd this to your pom.xml within to your build-plugin:\n\n```xml\n<plugin>\n    <groupId>com.zenjava</groupId>\n    <artifactId>javafx-maven-plugin</artifactId>\n    <version>8.8.3</version>\n    <configuration>\n        <vendor>YourCompany</vendor>\n        <mainClass>your.package.with.Launcher</mainClass>\n    </configuration>\n</plugin>\n```\n\nTo create your executable file with JavaFX-magic and some installers (please see official oracle-documentation which applications are required for this), call `mvn jfx:native`. The native launchers or installers will be placed at `target/jfx/native`.\n\n\nUsing `SNAPSHOT`-versions\n=========================\nWhen you report a bug and this got worked around, you might be able to have access to some -SNAPSHOT-version, please adjust your `pom.xml`:\n\n```xml\n<pluginRepositories>\n    <pluginRepository>\n        <id>oss-sonatype-snapshots</id>\n        <url>https://oss.sonatype.org/content/groups/public/</url>\n        <snapshots>\n            <enabled>true</enabled>\n        </snapshots>\n    </pluginRepository>\n</pluginRepositories>\n```\n\n\nLast Release Notes\n==================\n\n**Version 8.8.3 (09-feb-2017)**\n\nBugfixes:\n* fixed `<launcherArguments>` of secondary launchers not being set correctly ([reported at the javafx-gradle-plugin](https://github.com/FibreFoX/javafx-gradle-plugin/issues/55))\n\n\n(Not yet) Release(d) Notes\n==========================\n\nupcoming Version 8.9.0 (???-jan-2018)\n\nNew:\n* added a way to have PKCS11 signing by setting `<skipKeypassWhileSigning>true</skipKeypassWhileSigning>` and `<skipKeyStoreChecking>true</skipKeyStoreChecking>`, makes it possible to have hardware tokens\n\nEnhancement:\n* JDK 9 compatibility\n* TravisCI: use newer build machines\n\nDocumentation:\n* clarified that this plugin is a wrapper, thanks to @TurekBot\n"