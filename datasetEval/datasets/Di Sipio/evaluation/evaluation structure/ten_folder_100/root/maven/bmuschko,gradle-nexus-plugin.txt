b'# Gradle Sonatype Nexus plugin [![Build Status](https://travis-ci.org/bmuschko/gradle-nexus-plugin.svg?branch=master)](https://travis-ci.org/bmuschko/gradle-nexus-plugin)\n\n![Sonatype Logo](http://media.marketwire.com/attachments/200910/580330_sonatype.gif)\n\n<table border=1>\n    <tr>\n        <td>\n            Over the past couple of years this plugin has seen many releases. Thanks to everyone involved! \n            Unfortunately, I don\'t have much time to contribute anymore. In practice this means far less activity, \n            responsiveness on issues and new releases from my end.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            I am \n            <a href="https://discuss.gradle.org/t/looking-for-new-owners-for-gradle-plugins/9735">actively looking for contributors</a> \n            willing to take on maintenance and implementation of the project. If you are interested and would love to see this \n            plugin continue to thrive, shoot me a <a href="mailto:benjamin.muschko@gmail.com">mail</a>.\n        </td>\n    </tr>\n</table>\n\nThe plugin provides support for configuring and uploading artifacts to [Sonatype Nexus](http://www.sonatype.org/nexus/). It can\nbe configured to deploy to a self-hosted instance of Nexus or Sonatype OSS. The default setup is to publish\nto Sonatype OSS. Currently, Java and Groovy project artifact generation is supported. In addition to the JAR and POM file\n artifacts containing the JavaDocs and source files are created. Signing the artifacts is optional.\n\n## Usage\n\nTo use the Sonatype Nexus plugin, include in your build script:\n\n```groovy\napply plugin: \'com.bmuschko.nexus\'\n```\n\nThe plugin JAR needs to be defined in the classpath of your build script. It is directly available on\n[Bintray](https://bintray.com/bmuschko/gradle-plugins/com.bmuschko%3Agradle-nexus-plugin).\nAlternatively, you can download it from GitHub and deploy it to your local repository. The following code snippet shows an\nexample on how to retrieve it from Bintray:\n\n```groovy\n buildscript {\n     repositories {\n         jcenter()\n     }\n     dependencies {\n         classpath \'com.bmuschko:gradle-nexus-plugin:2.3.1\'\n     }\n }\n```\n\n## Tasks\n\nThe Nexus plugin can add three tasks to your project:\n* `javadocJar`: Assembles a jar archive containing the generated Javadoc API documentation of this project (added by default).\n* `sourcesJar`: Assembles a jar archive containing the main sources of this project (added by default).\n* `testsJar`: Assembles a jar archive containing the test sources of this project.\n\nThe output of all tasks is added to the `archives` configuration. To tell the plugin that any of these tasks should be\nadded to the project or removed, you will need to set a specific extension property.\n\nAdditionally, it applies the [Maven plugin](http://gradle.org/docs/current/userguide/maven_plugin.html) as well\nas `signing` in order to leverage maven\'s `install` and `uploadArchives` tasks.\n\n## Extension properties\n\nThe plugin defines the following extension properties in the `extraArchive` closure:\n\n* `javadoc`: Adds Javadoc JAR task to project (defaults to true).\n* `sources`: Adds sources JAR task to project (defaults to true).\n* `tests`: Adds test sources JAR task to project (defaults to false).\n\nThe plugin defines the following extension properties in the `nexus` closure:\n\n* `sign`: Specifies whether to sign the artifacts using the [signing plugin](http://gradle.org/docs/current/userguide/signing_plugin.html) (defaults to true).\n* `configuration`: The custom configuration used to publish artifacts (defaults to `archives`).\n* `repositoryUrl`: The stable release repository URL (defaults to `https://oss.sonatype.org/service/local/staging/deploy/maven2/`).\n* `snapshotRepositoryUrl`: The snapshot repository URL (defaults to `https://oss.sonatype.org/content/repositories/snapshots/`).\n\n## Additional configuration\n\n### POM customization\n\nIn addition to the convention properties the automatically generated POM file can be modified. To provide the data for\nthe POM generation specify the information within the configuration element `modifyPom.project`.\n\n```groovy\n modifyPom {\n     project {\n         ...\n     }\n }\n```\n\n### Credentials\n\nIn your `~/.gradle/gradle.properties` you will need to set the mandatory Nexus credentials required for uploading your artifacts.\n\n```groovy\n nexusUsername = yourUsername\n nexusPassword = yourPassword\n```\n\nIf you don\'t specify one of these properties, the plugin will prompt your for their values in the console.\n\n### Example\n\n```groovy\n modifyPom {\n     project {\n         name \'Gradle Sonatype Nexus plugin\'\n         description \'Gradle plugin that provides tasks for configuring and uploading artifacts to Sonatype Nexus.\'\n         url \'https://github.com/bmuschko/gradle-nexus-plugin\'\n         inceptionYear \'2012\'\n\n         scm {\n             url \'https://github.com/bmuschko/gradle-nexus-plugin\'\n             connection \'scm:https://bmuschko@github.com/bmuschko/gradle-nexus-plugin.git\'\n             developerConnection \'scm:git://github.com/bmuschko/gradle-nexus-plugin.git\'\n         }\n\n         licenses {\n             license {\n                 name \'The Apache Software License, Version 2.0\'\n                 url \'http://www.apache.org/licenses/LICENSE-2.0.txt\'\n                 distribution \'repo\'\n             }\n         }\n\n         developers {\n             developer {\n                 id \'bmuschko\'\n                 name \'Benjamin Muschko\'\n                 email \'benjamin.muschko@gmail.com\'\n             }\n         }\n     }\n }\n \n extraArchive {\n     sources = false\n     tests = true\n     javadoc = false\n }\n\n nexus {\n     sign = true\n     repositoryUrl = \'http://localhost:8081/nexus/content/repositories/internal/\'\n     snapshotRepositoryUrl = \'http://localhost:8081/nexus/content/repositories/internal-snapshots/\'\n }\n```\n\n## FAQ\n\n**How do I publish my artifacts to the Central Repository aka Maven Central aka Sonatype OSS?**\n\nBy default the plugin is configured to upload your artifacts to the release and snapshot repository URLs of Sonatype OSS.\nThere\'s no additional configuration required. If you want to tweak the automatically generated POM file please you the\n`modifyPom` closure. Make sure to stick to the process described in\nthe [Central Repository Documentation](http://central.sonatype.org/pages/producers.html).\n\n**Is it possible to automatically publish artifacts to Maven Central without any manual steps in the Nexus GUI (e.g. from CI server)?**\n\nIt is beyond the scope of this plugin, but there is a dedicated 3rd-party plugin\n[gradle-nexus-staging-plugin](https://github.com/Codearte/gradle-nexus-staging-plugin) which allows for releasing and promoting\nartifacts to Maven Central directly from Gradle. It also seamlessly integrates with gradle-nexus-plugin (e.g. allows to\nreuse provided credentials).\n'