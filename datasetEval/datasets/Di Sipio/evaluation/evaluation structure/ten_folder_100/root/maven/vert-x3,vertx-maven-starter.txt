b'= Vert.x Maven Starter\n\nThis project is a template to start your own Vert.x project using Apache Maven.\n\n== Prerequisites\n\n* Apache Maven\n* JDK 8+\n\n== Getting started\n\nCreate your project with:\n\n[source]\n----\ngit clone https://github.com/vert-x3/vertx-maven-starter.git PROJECT_NAME\n----\n\nReplace `PROJECT_NAME` with the name of your project.\n\nOn Linux and MacOSx (or Windows with `bash`), if you want to go faster and generate an already configured project run:\n\n[source]\n----\ncurl http://vertx.io/assets/starter-scripts/create-vertx-project-maven.sh -o vertx-create-maven-project.sh; bash vertx-create-maven-project.sh\n----\n\n== Running the project\n\nOnce you have retrieved the project, you can check that everything works with:\n\n[source]\n----\nmvn test exec:java\n----\n\nThe command compiles the project and runs the tests, then  it launches the application, so you can check by yourself. Open your browser to http://localhost:8080. You should see a _Hello World_ message.\n\n== Anatomy of the project\n\nThe project contains:\n\n* a `pom.xml` file\n* a _main_ verticle file (src/main/java/io/vertx/starter/MainVerticle.java)\n* an unit test (src/main/test/io/vertx/starter/MainVerticleTest.java)\n\n== Start to hack\n\n1. Delete the `.git` directory\n2. Open the `pom.xml` file and customize the `groupId`, `artifactId` and `version`. You can also change the `main.verticle` property to use your own package name and verticle class.\n3. Run `redeploy.sh` (or `redeploy.bat` on Windows) and the project recompiles while editing.\n\nNOTE: the `redeploy` script are also configurable\n\n== Building the project\n\nTo build the project, just use:\n\n----\nmvn clean package\n----\n\nIt generates a _fat-jar_ in the `target` directory.\n'