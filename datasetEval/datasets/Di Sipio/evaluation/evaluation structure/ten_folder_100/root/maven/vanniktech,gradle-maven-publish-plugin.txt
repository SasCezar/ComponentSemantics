b'# gradle-maven-publish-plugin\n\nGradle plugin that creates an `uploadArchives` task to automatically upload all of your Java, Kotlin or Android libraries to any Maven instance. This plugin is based on [Chris Banes initial implementation](https://github.com/chrisbanes/gradle-mvn-push) and has been enhanced to add Kotlin support and keep up with the latest changes.\n\n# Set up\n\n**module/build.gradle**\n\n```groovy\nbuildscript {\n  repositories {\n    mavenCentral()\n  }\n  dependencies {\n    classpath \'com.vanniktech:gradle-maven-publish-plugin:0.8.0\'\n  }\n}\n\napply plugin: "com.vanniktech.maven.publish"\n```\n\nInformation: [This plugin is also available on Gradle plugins](https://plugins.gradle.org/plugin/com.vanniktech.maven.publish)\n\n### Snapshots\n\nCan be found [here](https://oss.sonatype.org/#nexus-search;quick~gradle-maven-publish-plugin). Current one is:\n\n```groovy\nclasspath \'com.vanniktech:gradle-maven-publish-plugin:0.9.0-SNAPSHOT\'\n```\n\n## Configuration\n\nThose are all the available configurations - shown with default values and their types. More information can be found in the [Documentation of the Extension](src/main/kotlin/com/vanniktech/maven/publish/MavenPublishPluginExtension.kt).\n\n```groovy\nmavenPublish {\n  targets {\n    uploadArchives {\n      releaseRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"\n      snapshotRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"\n      repositoryUsername = null // This defaults to either the SONATYPE_NEXUS_USERNAME Gradle property or the system environment variable.\n      repositoryPassword = null // This defaults to either the SONATYPE_NEXUS_PASSWORD Gradle property or the system environment variable.\n      signing = true // This defaults to true. GPG signing is required by mavenCentral. If you are deploying elsewhere, you can set this to false.\n    }\n  }\n}\n```\n\nOnce you\'ve configured this and defined the typical pom attributes via Gradle properties you can upload your library using the `uploadArchives` task.\n\nIf you need to upload to multiple repositories you can also add additional targets.\n\n```groovy\nmavenPublish {\n  targets {\n    uploadArchives {\n       // Configure as above.\n    }\n\n    internalRepo {\n       // Configure as above.\n    }\n\n    betaRepo {\n       // Configure as above.\n    }\n  }\n}\n```\n\nThis will create `uploadArchivesInternalRepo` and `uploadArchivesBetaRepo` tasks.\n\n__Note:__ To prevent looping behavior, especially in Kotlin projects / modules, you need to run the `uploadArchives` task with `--no-daemon`and `--no-parallel` flags:\n\n`./gradlew uploadArchives --no-daemon --no-parallel`\n\n__Note:__  Other than the common maven plugin you must do the [release steps at sonatype](https://central.sonatype.org/pages/releasing-the-deployment.html) manually.\n\n# Sample\n\nThis Gradle plugin is using itself to publish any of the updates. It applies a previously released version in the build.gradle just as mentioned above and sets the Gradle properties in this [gradle.properties](gradle.properties).\n\nIf you require your binary to be signed with GPG (mavenCentral requires this for instance), please add the following Gradle properties. It\'s best to place them inside your home directory, `$HOME/.gradle/gradle.properties`.\n```groovy\nsigning.keyId=12345678\nsigning.password=some_password\nsigning.secretKeyRingFile=/Users/yourusername/.gnupg/secring.gpg\n```\n\n# License\n\nCopyright (C) 2018 Vanniktech - Niklas Baudy\n\nLicensed under the Apache License, Version 2.0\n'