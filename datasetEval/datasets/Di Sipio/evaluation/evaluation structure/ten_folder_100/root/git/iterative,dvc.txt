b".. image:: https://dvc.org/static/img/logo-github-readme.png\n  :target: https://dvc.org\n  :alt: DVC logo\n\n`Website <https://dvc.org>`_\n\xe2\x80\xa2 `Docs <https://dvc.org/doc>`_\n\xe2\x80\xa2 `Blog <http://blog.dataversioncontrol.com>`_\n\xe2\x80\xa2 `Twitter <https://twitter.com/DVCorg>`_\n\xe2\x80\xa2 `Chat (Community & Support) <https://dvc.org/chat>`_\n\xe2\x80\xa2 `Tutorial <https://dvc.org/doc/get-started>`_\n\xe2\x80\xa2 `Mailing List <https://sweedom.us10.list-manage.com/subscribe/post?u=a08bf93caae4063c4e6a351f6&id=24c0ecc49a>`_\n\n.. image:: https://travis-ci.com/iterative/dvc.svg?branch=master\n  :target: https://travis-ci.com/iterative/dvc\n  :alt: Travis\n\n.. image:: https://codeclimate.com/github/iterative/dvc/badges/gpa.svg\n  :target: https://codeclimate.com/github/iterative/dvc\n  :alt: Code Climate\n\n.. image:: https://codecov.io/gh/iterative/dvc/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/iterative/dvc\n  :alt: Codecov\n\n.. image:: https://img.shields.io/badge/patreon-donate-green.svg\n  :target: https://www.patreon.com/DVCorg/overview\n  :alt: Donate\n\n.. image:: https://anaconda.org/conda-forge/dvc/badges/version.svg\n  :target: https://anaconda.org/conda-forge/dvc\n  :alt: Conda-forge\n\n|\n\n**Data Version Control** or **DVC** is an **open-source** tool for data science and machine\nlearning projects. Key features:\n\n#. simple **command line** Git-like experience. Does not require installing and maintaining\n   any databases. Does not depend on any proprietary online services;\n\n#. it manages and versions **datasets** and **machine learning models**. Data is saved in\n   S3, Google cloud, Azure, Alibaba cloud, SSH server, HDFS or even local HDD RAID;\n\n#. it makes projects **reproducible** and **shareable**, it helps answering question how\n   the model was build;\n\n#. it helps manage experiments with Git tags or branches and **metrics** tracking;\n\n**DVC** aims to replace tools like Excel and Google Docs that are being commonly used as a knowledge repo and\na ledger for the team, ad-hoc scripts to track and move deploy different model versions, ad-hoc\ndata file suffixes and prefixes.\n\n.. contents:: **Contents**\n  :backlinks: none\n\nHow DVC works\n=============\n\nWe encourage you to read our `Get Started <https://dvc.org/doc/get-started>`_ to better understand what DVC\nis and how does it fit your scenarios.\n\nThe easiest (but not perfect!) *analogy* to describe it: DVC is Git (or Git-lfs to be precise) + ``makefiles``\nmade right and tailored specifically for ML and Data Science scenarios.\n\n#. ``Git/Git-lfs`` part - DVC helps you storing and sharing data artifacts, models. It connects them with your\n   Git repository.\n#. ``Makefiles`` part - DVC describes how one data or model artifact was build from another data.\n\nDVC usually runs along with Git. Git is used as usual to store and version code and DVC meta-files. DVC helps\nto store data and model files seamlessly out of Git while preserving almost the same user experience as if they\nwere stored in Git itself. To store and share data files cache DVC supports remotes - any cloud (S3, Azure,\nGoogle Cloud, etc) or any on-premise network storage (via SSH, for example).\n\n.. image:: https://dvc.org/static/img/flow.gif\n   :target: https://dvc.org/static/img/flow.gif\n   :alt: how_dvc_works\n\nDVC pipelines (aka computational graph) feature connects code and data together. In a very explicit way you can\nspecify, run, and save information that a certain command with certain dependencies needs to be run to produce\na model. See the quick start section below or check `Get Started <https://dvc.org/doc/get-started>`_ tutorial to\nlearn more.\n\nQuick start\n===========\n\nPlease read `Get Started <https://dvc.org/doc/get-started>`_ for the full version. Common workflow commands include:\n\n+-----------------------------------+-------------------------------------------------------------------+\n| Step                              | Command                                                           |\n+===================================+===================================================================+\n| Track data                        | | ``$ git add train.py``                                          |\n|                                   | | ``$ dvc add images.zip``                                        |\n+-----------------------------------+-------------------------------------------------------------------+\n| Connect code and data by commands | | ``$ dvc run -d images.zip -o images/ unzip -q images.zip``      |\n|                                   | | ``$ dvc run -d images/ -d train.py -o model.p python train.py`` |\n+-----------------------------------+-------------------------------------------------------------------+\n| Make changes and reproduce        | | ``$ vi train.py``                                               |\n|                                   | | ``$ dvc repro model.p.dvc``                                     |\n+-----------------------------------+-------------------------------------------------------------------+\n| Share code                        | | ``$ git add .``                                                 |\n|                                   | | ``$ git commit -m 'The baseline model'``                        |\n|                                   | | ``$ git push``                                                  |\n+-----------------------------------+-------------------------------------------------------------------+\n| Share data and ML models          | | ``$ dvc remote add myremote -d s3://mybucket/image_cnn``        |\n|                                   | | ``$ dvc push``                                                  |\n+-----------------------------------+-------------------------------------------------------------------+\n\nInstallation\n============\n\nRead this `instruction <https://dvc.org/doc/get-started/install>`_ to get more details. There are four\noptions to install DVC: ``pip``, Homebrew, Conda (Anaconda) or an OS-specific package:\n\npip (PyPI)\n----------\n\n.. code-block:: bash\n\n   pip install dvc\n\nDepending on the remote storage type you plan to use to keep and share your data, you might need to specify\none of the optional dependencies: ``s3``, ``gs``, ``azure``, ``oss``, ``ssh``. Or ``all`` to include them all.\nThe command should look like this: ``pip install dvc[s3]`` - it installs the ``boto3`` library along with\nDVC to support the AWS S3 storage.\n\nTo install the development version, run:\n\n.. code-block:: bash\n\n   pip install git+git://github.com/iterative/dvc\n\nHomebrew\n--------\n\n.. code-block:: bash\n\n   brew install dvc\n\n\nConda (Anaconda)\n----------------\n\n.. code-block:: bash\n\n   conda install -c conda-forge dvc\n\nCurrently, it supports only python version 2.7, 3.6 and 3.7.\n\nPackage\n-------\n\nSelf-contained packages for Windows, Linux, Mac are available. The latest version of the packages can be found at\nGitHub `releases page <https://github.com/iterative/dvc/releases>`_.\n\nUbuntu / Debian (deb)\n^^^^^^^^^^^^^^^^^^^^^\n.. code-block:: bash\n\n   sudo wget https://dvc.org/deb/dvc.list -O /etc/apt/sources.list.d/dvc.list\n   sudo apt-get update\n   sudo apt-get install dvc\n\nFedora / CentOS (rpm)\n^^^^^^^^^^^^^^^^^^^^^\n.. code-block:: bash\n\n   sudo wget https://dvc.org/rpm/dvc.repo -O /etc/yum.repos.d/dvc.repo\n   sudo yum update\n   sudo yum install dvc\n\nRelated technologies\n====================\n\n#. `Git-annex <https://git-annex.branchable.com/>`_ - DVC uses the idea of storing the content of large files (that you\n   don't want to see in your Git repository) in a local key-value store and uses file hardlinks/symlinks instead of the\n   copying actual files.\n\n#. `Git-LFS <https://git-lfs.github.com/>`_ - DVC is compatible with any remote storage (S3, Google Cloud, Azure, SSH,\n   etc). DVC utilizes reflinks or hardlinks to avoid copy operation on checkouts which makes much more efficient for\n   large data files.\n\n#. *Makefile* (and its analogues). DVC tracks dependencies (DAG).\n\n#. `Workflow Management Systems <https://en.wikipedia.org/wiki/Workflow_management_system>`_. DVC is a workflow\n   management system designed specifically to manage machine learning experiments. DVC is built on top of Git.\n\n#. `DAGsHub <https://dagshub.com/>`_ Is a Github equivalent for DVC - pushing your Git+DVC based repo to DAGsHub will give you a high level dashboard of your project, including DVC pipeline and metrics visualizations, as well as links to DVC managed files if they are in cloud storage.\n\nContributing\n============\nContributions are welcome! Please see our `Contributing Guide <https://dvc.org/doc/user-guide/contributing/core>`_ for more\ndetails.\n\n.. image:: https://sourcerer.io/fame/efiop/iterative/dvc/images/0\n  :target: https://sourcerer.io/fame/efiop/iterative/dvc/links/0\n  :alt: 0\n\n.. image:: https://sourcerer.io/fame/efiop/iterative/dvc/images/1\n  :target: https://sourcerer.io/fame/efiop/iterative/dvc/links/1\n  :alt: 1\n\n.. image:: https://sourcerer.io/fame/efiop/iterative/dvc/images/2\n  :target: https://sourcerer.io/fame/efiop/iterative/dvc/links/2\n  :alt: 2\n\n.. image:: https://sourcerer.io/fame/efiop/iterative/dvc/images/3\n  :target: https://sourcerer.io/fame/efiop/iterative/dvc/links/3\n  :alt: 3\n\n.. image:: https://sourcerer.io/fame/efiop/iterative/dvc/images/4\n  :target: https://sourcerer.io/fame/efiop/iterative/dvc/links/4\n  :alt: 4\n\n.. image:: https://sourcerer.io/fame/efiop/iterative/dvc/images/5\n  :target: https://sourcerer.io/fame/efiop/iterative/dvc/links/5\n  :alt: 5\n\n.. image:: https://sourcerer.io/fame/efiop/iterative/dvc/images/6\n  :target: https://sourcerer.io/fame/efiop/iterative/dvc/links/6\n  :alt: 6\n\n.. image:: https://sourcerer.io/fame/efiop/iterative/dvc/images/7\n  :target: https://sourcerer.io/fame/efiop/iterative/dvc/links/7\n  :alt: 7\n\nMailing List\n============\n\nWant to stay up to date? Want to help improve DVC by participating in our occasional polls? Subscribe to our `mailing list <https://sweedom.us10.list-manage.com/subscribe/post?u=a08bf93caae4063c4e6a351f6&id=24c0ecc49a>`_. No spam, really low traffic.\n\nCopyright\n=========\n\nThis project is distributed under the Apache license version 2.0 (see the LICENSE file in the project root).\n\nBy submitting a pull request for this project, you agree to license your contribution under the Apache license version\n2.0 to this project.\n"