b'# git-standup\n\n> Recall what you did on the last working day ..or be nosy and find what someone else did.\n\nA little tool that I always wanted for myself. I work on several repositories on daily basis and it is mostly difficult for me to remember where I left off in each one of them. I was used to checking the heat map on my GitHub profile or running git log one by one in each of the projects to note what I did and it seemed to be a bit cumbersome and thus came the `git-standup`. By default it gives you the most common usage i.e. shows you commits from the last working day in the current directory and the directories below current level plus it comes with several options to modify how it behaves.\n\nThe only requirement is having good commit messages :)\n\n![](https://i.imgur.com/yL03GkB.png)\n\n## Install\n\nYou can install `git-standup` using one of the options listed below\n\n| Source | Command |\n| --- | --- |\n| curl | `curl -L https://raw.githubusercontent.com/kamranahmedse/git-standup/master/installer.sh \\| sudo sh` |\n| npm | `npm install -g git-standup` |\n| brew | `brew update && brew install git-standup` |\n| aur | `pacaur -S git-standup-git` |\n| manual | Clone and run `make install` |  \n\n## Usage\n\nSimply run it in your project directory and it will give you the output from the last working day\n\n```shell\ngit standup\n```\n\nIf you run it in a folder containing multiple git repositories, it will go through each of the projects and give you the standup report for each one of them.\n\n## Options \n\nYou can pass several options to modify how git-standup behaves\n\n```shell\ngit standup [-a <author name>] \n            [-w <weekstart-weekend>]\n            [-m <max-dir-depth>]\n            [-d <since-days-ago>] \n            [-u <until-days-ago>]\n            [-D <date-format>]\n            [-A <after-date>]\n            [-B <before-date>]\n            [-L]\n            [-g] \n            [-h] \n            [-f]\n            [-s]\n            [-r]\n            [-c]\n            [-R]\n```\n\nHere is the detail for each of the options \n\n| Option | Description |\n| --- | --- |\n| a | Specify author to restrict search to e.g. `-a "Kamran Ahmed"` or `-a "all"` |\n| w | Specify week start and end days e.g. in UAE weekdays are from Sunday to Thursday so you can do `-w SUN-THU`|\n| m | Specify the depth of recursive directory search e.g. `-m 3` defaults to two |\n| d | Specify the number of days back to include e.g. `-d 30` to get for a month |\n| u | Specify the number of days back till which standup should run e.g. `-u 3` |\n| L | Toggle inclusion of symbolic links in recursive directory search |\n| D | Specify the date format for "git log" (default: relative) [possible values](https://git-scm.com/docs/git-log#git-log---dateltformatgt) |\n| A | Show the commits till after the given date\n| B | Show the commits till before the given date\n| h | Display the help screen |\n| g | Show if commit is GPG signed (G) or not (N) |\n| f | Fetch the latest commits beforehand |\n| s | Silences the no activity message (useful when running in a directory having many repositories) |\n| c | Show diff-stat for every matched commit\n| r | Generates the standup report file `git-standup-report.txt` in the current directory |\n| R | Display the author date instead of the committer date |\n\nFor the basic usage, all you have to do is run `git standup` in a repository or a folder containing multiple repositories\n\n## Single Repository Usage\n\nTo check all your personal commits from last working day, head to the project repository and run\n\n```shell\n$ git standup\n```\n\n![git standup](http://i.imgur.com/wyo4s9E.gif)\n\n## Multiple Repository Usage\nOpen a directory having multiple repositories and run\n\n```shell\n$ git standup\n```\n\n![git standup](http://i.imgur.com/4xmkA49.gif)\n\nThis will show you all your commits since the last working day in all the repositories inside. \n\n## Directory depth\n\nBy default the script searches only in the current directory or one\nlevel deep. If you want to increase that, use the `-m` switch.\n\n```shell\n$ git standup -m 3\n```\n\n### Directory whitelisting\n\nIf you want to restrict the standup to some paths, you can whitelist them by adding them to a `.git-standup-whitelist` file. For example if you have the below directory structure\n\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 Workspace              # All your projects are here\n    \xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 project-a          # Some git repository called project-a\n    \xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 project-b          # Some git repository called project-b\n    \xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 sketch-files       # Some sketch files\n    \xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 mockups            # Some balsamiq mockups\n    \xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 ...                # etc.\n    \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 ...\n\nAnd you want the `git-standup` to show logs for only `project-a` and `project-b`, you can do that by creating a `.git-standup-whitelist` file under the `Workspace` directory with the below contents and it will only consider these directories for the standup\n\n```\nproject-a\nproject-b\n```\n\n## Checking someone else\'s commits\n\nIf you want to find out someone else\'s commits do\n\n```shell\n# Considering their name on git is "John Doe"\n$ git standup -a "John Doe"\n```\n![git standup](http://i.imgur.com/sYICxW8.gif)\n\n## Check what every contributor did\n\nIf you want to find out someone else\'s commits do\n\n```shell\n$ git standup -a "all"\n```\n\n## Commits from `n` days ago\n\nIf you would like to show all your/someone else\'s commits from n days ago, you can do\n\n```shell\n# Show all my commits from 4 days ago\n$ git standup -d 4\n\n# Show all John Doe\'s commits from 5 days ago\n$ git standup -a "John Doe" -d 5\n```\n\n![git standup -d 5](http://i.imgur.com/j7Ma760.gif)\n\n## Date filters\n\nYou can apply the filters on the commits shown. Use `-A` and `-B` flags to specify `after` and `before` dates\n\n```shell\n# Show all the commits after October 01, 2018\ngit standup -A "2018-10-01 00:00"\n# Show all the commits till before October 01, 2018\ngit standup -B "2018-10-01 00:00"\n# Show the commits between September 20 and September 30\ngit standup -A "2018-09-20 00:00:00" -B "2018-09-30 23:59"\n```\n\n## Show Diff-stat\n\nAdd `-c` flag to show the diff-stat for each of the commits in standup results\n```shell\ngit standup -c\n```\n\n## [Identifying Signed Commits](https://git-scm.com/book/en/v2/Git-Tools-Signing-Your-Work)\n\nAdd `-g` flag to check the GPG info\n\n```shell\n$ git standup -g\n```\n\n![GPG Info](http://i.imgur.com/bwJzPft.gif)\n\n## Specifying the date format\n\nAdd `-D` flag to specify the date format. Default is `relative`\n\nPlease note that it accepts the same format that you could pass while doing git log. For example\n\n```shell\n$ git standup -D relative\n# Or instead of relative, it could be local|default|iso|iso-strict|rfc|short|raw etc\n```\n\n## Changing the Weekdays\n\nBy default, it considers that the work week starts on Monday and ends on Friday. So if you are running this on any day between Tuesday and Friday, it will show you your commits from the last day. However, if you are running this on Monday, it will show you all your commits since Friday.\n\nIf you want to change this, like I want because here in Dubai working days are normally Sunday to Thursday, you will have to do the following\n\n```shell\n$ git standup -w "SUN-THU"\n```\n\n## Fetch commits before showing standup\n\nIf you have many repositories that you want to generate a standup for, it may be useful to automatically run `git fetch` before viewing the standup.\n\nIf you would like to automatically run `git fetch --all` before printing the standup, you can add the `-f` flag, as show below\n\n```shell\n$ git standup -f\n```\n\n## Mixing options\n\nOf course you can mix the options together but please note that if you provide the number of days, it will override the weekdays configuration (`MON-FRI`) and will show you the commits specifically from `n` days ago.\n\n```shell\n# Show all the John Doe\'s commits from 5 days ago\n$ git standup -a "John Doe" -d 5\n```\n\n## License\n\nMIT \xc2\xa9 [Kamran Ahmed](http://kamranahmed.info)\n'