b"Gitblit\r\n=================\r\n\r\nGitblit is an open source, pure Java Git solution for managing, viewing, and serving [Git](http://git-scm.com) repositories.  It can serve repositories over the GIT, HTTP, and SSH transports; it can authenticate against multiple providers; and it allows you to get up-and-running with an attractive, capable Git server in less than 5 minutes.\r\n\r\nMore information about Gitblit can be found [here](http://gitblit.com).\r\n\r\n<a href='https://bintray.com/gitblit/releases/gitblit/_latestVersion'><img src='https://api.bintray.com/packages/gitblit/releases/gitblit/images/download.png'></a>\r\n\r\nLicense\r\n-------\r\n\r\nGitblit is distributed under the terms of the [Apache Software Foundation license, version 2.0](http://www.apache.org/licenses/LICENSE-2.0).\r\nThe text of the license is included in the file LICENSE in the root of the project.\r\n\r\nJava Runtime Requirement\r\n------------------------------------\r\n\r\nGitblit requires at Java 7 Runtime Environment (JRE) or a Java 7 Development Kit (JDK).\r\n\r\nGetting help\r\n------------\r\n\r\n| Source        | Location                                               |\r\n| ------------- |--------------------------------------------------------|\r\n| Documentation | [Gitblit website](http://gitblit.com)                  |\r\n| Forums        | [Google Groups](https://groups.google.com/forum/#!forum/gitblit) |\r\n| Twitter       | @gitblit or @jamesmoger                                |\r\n| Google+       | +gitblit or +jamesmoger                                |\r\n\r\nContributing\r\n------------\r\n\r\nGitHub pull requests are preferred.  Any contributions must be distributed under the terms of the [Apache Software Foundation license, version 2.0](http://www.apache.org/licenses/LICENSE-2.0).\r\n\r\nBuilding Gitblit\r\n----------------\r\n\r\nGitblit uses submodules.\r\nMake sure to clone using `--recursive` OR to execute `git submodule update --init --recursive`.\r\n\r\n[Eclipse](http://eclipse.org) is recommended for development as the project settings are preconfigured.\r\n\r\n1. Import the gitblit project into your Eclipse workspace.\r\n*There will be lots of build errors.*\r\n2. Using Ant, execute the `build.xml` script in the project root.\r\n*This will download all necessary build dependencies and will also generate the Keys class for accessing settings.*\r\n3. Select your gitblit project root and **Refresh** the project, this should correct all build problems.\r\n4. Using JUnit, execute the `com.gitblit.tests.GitBlitSuite` test suite.\r\n*This will clone some repositories from the web and run through the unit tests.*\r\n5. Execute the *com.gitblit.GitBlitServer* class to start Gitblit GO.\r\n\r\nBuilding Tips & Tricks\r\n----------------------\r\n1. If you are running Ant from an ANSI-capable console, consider setting the `MX_COLOR` environment variable before executing Ant.<pre>set MX_COLOR=true</pre>\r\n2. The build script will honor your Maven proxy settings.  If you need to fine-tune this, please review the [settings.moxie](http://gitblit.github.io/moxie/settings.html) documentation.\r\n\r\n"