b'Git Goodies\n===========\n\n<p align="center"><img src="http://nimit.io/images/gg/gg.gif"/></p>\n\n`gg` helps you *work with `git` more efficiently*, saving you keystrokes for your most prized projects.\n\nThink of `gg` as a wrapper for the `git` commands that you run all the time; a wrapper that adds functionality and is aesthetically pleasing.\n\n### Hold up. Aren\'t these basically Git aliases?\nThere\'s more to the package than just shortcuts or aliases.\n\nFor example, the `gg s` command presents you with an easy to look at a quick glance status of your repository. In addition, there are aesthetic changes that increase the intuitiveness of Git itself.\n\nHere\'s a screenshot of the `gg s` command in action:\n\n![`gg s`](http://nimit.io/images/gg/s.png)\n\nYou can see the current local branch and its respective remote branch, the latest commit hash and message, the local repository\'s position in relation with the respective remote repository (alerting you that you should push two commits to reach up-to-date status with the remote repository), the status of staging and commits, and the commits that waiting to be pushed.\n\n**All of this from one four character command.**\n\n## Installation\n**Linux/OSX**\n```sh\ncurl -fsSL git.io/gg.sh | bash\n```\n(HTTPS installation also available via `curl -fsSL https://git.io/gg.sh | bash`)\n\nAll this installation script does is download the `gg` script, make it an executable, and copy it to your $PATH (/usr/local/bin). For copying to your $PATH, it may require you to enter your password. If there is a better way to do this, please send in a pull request.\n\nIf you don\'t feel comfortable executing a random script, [its source is available here](https://github.com/qw3rtman/gg/blob/master/install.sh).\n\n**To take advantage of user-specific features (such as `gg cl <your-repository>`), make sure you `git config --global --add gg.username <your-username>`.**\n\n**If you use [`oh-my-zsh`](https://github.com/robbyrussell/oh-my-zsh), `gg` is already aliased to `git gui citool`. If you don\'t use this alias, you can unalias it in your `.zshrc` file by adding `unalias gg` at the end of `.zshrc`.**\n\n`gg` relies solely on `git` and attempts to use built-in Shell features over external programs, such as using Bash substitution instead of `sed`.\n\n**Windows:**  \n\nNote: This assumes that you already have the `git` installed on your system and\nit is configured to be used on the command line.\n\n* Open a Command Prompt window and navigate to a folder included in your PATH.\n* Run the following commands\n```\npowershell -Command "(New-Object Net.WebClient).DownloadFile(\'https://raw.githubusercontent.com/qw3rtman/gg/master/bin/gg\', \'gg\')"\npowershell -Command "(New-Object Net.WebClient).DownloadFile(\'https://raw.githubusercontent.com/qw3rtman/gg/master/bin/gg.cmd\', \'gg.cmd\')"\n```\n* Open a new Command Prompt window and enjoy.\n\n## Usage\n\n```\n\n  usage:\n    gg [options] [COMMAND] [args]\n\n  commands:\n    gg                              Display this help information\n    gg i                            Initialize new Git repository\n    gg ig                           List available .gitignore templates\n    gg ig <template>                Add .gitignore file from <template>\n    gg igf <file ...>               Add all <file>(s) to .gitignore\n    gg cl <url>                     Clone repository from <url>\n    gg a                            Add all files\n    gg a <file ...>                 Add all <file>(s)\n    gg c <message>                  Add all files and commit with <message>\n    gg cn <message>                 Commit with <message>\n    gg uc <count>                   Go back (uncommit) <count> commits\n    gg rc <message>                 Add all files and recommit (amend) with <message>\n    gg rcn <message>                Recommit (amend) with <message>\n    gg p                            Push all commits to remote\n    gg pl                           Pull all commits from remote\n    gg f                            Fetch all commits from remote\n    gg s                            Display repository status\n    gg l                            Display repository commit log\n    gg b                            List all branches in repository\n    gg b <branch>                   Create and checkout <branch>\n    gg ch                           List all branches in repository\n    gg ch <branch>                  Checkout <branch>\n    gg in <hash>                    Display info about <hash>\n\n  options:\n    -V, --version                   Output current version of Git Goodies\n    -h, --help                      Display this help information\n\n```\n\n### Initializing repositories\n\n![`gg i`](http://nimit.io/images/gg/init.png)\n\n* `gg i`\n* `gg init`\n\n### Adding a template to .gitignore\n\n![`gg ig`](http://nimit.io/images/gg/ignore_template.png)\n\n* `gg ig <template>`\n* `gg ignore <template>`\n\n*Templates provided by [.gitignore.io](https://www.gitignore.io/)*\n\n### Adding a file to .gitignore\n\n![`gg igf`](http://nimit.io/images/gg/ignore_file.png)\n\n* `gg igf <file ...>`\n* `gg ignorefile <file ...>`\n\n### Cloning a repository\n\n![`gg cl`](http://nimit.io/images/gg/clone.png)\n\n* `gg cl <url>`\n* `gg clone <url>`\n\n* `gg cl <github-username/repository>`\n* `gg clone <github-username/repository>`\n\n* `gg cl <your-repository>` (if you have user-specific features enabled by `git config --global --add gg.username <your-username>`)\n* `gg clone <your-repository>` (if you have user-specific features enabled by `git config --global --add gg.username <your-username>`)\n\n*The URL can be provided in any format (SSH, HTTP, etc.)*\n\n### Adding all files\n\n![`gg a`](http://nimit.io/images/gg/add.png)\n\n* `gg a`\n* `gg add`\n\n### Adding specific files\n\n![`gg a`](http://nimit.io/images/gg/add_file.png)\n\n* `gg a <file ...>`\n* `gg add <file ...>`\n\n### Adding all and committing\n\n![`gg c`](http://nimit.io/images/gg/commit.png)\n\n* `gg c <message>`\n* `gg commmit <message>`\n\n*If no <message> is provided, a generic one listing all files modified/added will be generated.*\n\n### Committing\n\n![`gg cn`](http://nimit.io/images/gg/commit_no_add.png)\n\n* `gg cn <message>`\n\n*If no <message> is provided, a generic one listing all files modified/added will be generated.*\n\n### Uncommiting (resetting: `git reset HEAD~count`)\n\n![`gg back`](http://nimit.io/images/gg/uncommit.png)\n\n* `gg uc <count>`\n* `gg uncommit <count>`\n* `gg back <count>`\n\n*If no <count> is provided, 1 will be used.*\n\n### Adding all and recommitting (amending: `git commit --amend`)\n\n![`gg am`](http://nimit.io/images/gg/amend.png)\n\n* `gg rc <message>`\n* `gg recommit <message>`\n* `gg am <message>`\n* `gg amend <message>`\n\n*If no <message> is provided, a generic one listing all files modified/added will be generated.*\n\n### Recommitting (amending: `git commit --amend`)\n\n![`gg am`](http://nimit.io/images/gg/amend_no_add.png)\n\n* `gg rcn <message>`\n* `gg amn <message>`\n\n*If no <message> is provided, a generic one listing all files modified/added will be generated.*\n\n### Pushing\n\n![`gg p`](http://nimit.io/images/gg/push.png)\n\n* `gg p`\n* `gg push`\n\n### Pulling\n\n![`gg pl`](http://nimit.io/images/gg/pull.png)\n\n* `gg pl`\n* `gg pull`\n\n### Fetching\n\n![`gg f`](http://nimit.io/images/gg/fetch.png)\n\n* `gg f`\n* `gg fetch`\n\n### Getting repository status\n\n![`gg s`](http://nimit.io/images/gg/status.png)\n\n* `gg s`\n* `gg status`\n\n### Displaying commit log\n\n![`gg l`](http://nimit.io/images/gg/log.png)\n\n* `gg l`\n* `gg log`\n\n### Listing all branches\n\n![`gg b`](http://nimit.io/images/gg/branch.png)\n\n* `gg b`\n* `gg ch`\n\n### Checking out existing branch\n\n![`gg ch`](http://nimit.io/images/gg/checkout.png)\n\n* `gg ch <branch>`\n\n### Creating and checking out new branch\n\n![`gg b`](http://nimit.io/images/gg/branch_checkout.png)\n\n* `gg b <branch>`\n\n### Displaying commit info\n\n![`gg in`](http://nimit.io/images/gg/info.png)\n\n* `gg in <hash>`\n* `gg info <hash>`\n* `gg view <hash>`\n\n*If no <hash> is provided, HEAD (last commit) will be used.*\n\n### Displaying **Git Goodies** version\n\n![`gg -V`](http://nimit.io/images/gg/version.png)\n\n* `gg -V`\n* `gg --version`\n\n### Displaying **Git Goodies** help\n\n![`gg -h`](http://nimit.io/images/gg/help.png)\n\n* `gg`\n* `gg -h`\n* `gg --help`\n* `gg help`\n\n## Contributing\n\nContributions are always welcome, from a typo in the README to an enhancement of a feature to a completely new feature itself.\n\nAvoid [code smells](http://blog.codinghorror.com/code-smells/), [create reusable code](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself), and follow the loosely-modeled coding standard found in the current code.\n\nFork the code, make a new branch, and send in a pull request.\n\nSee the [TODO](#todo) below for some contributions you can work on!\n\n## TODO\n\n* Integrate with GitHub (Issue [#34](https://github.com/qw3rtman/gg/issues/34))\n* Add pretty graphs (Issue [#51](https://github.com/qw3rtman/gg/issues/51))\n* Some form of persistent user profile (Issue [#57](https://github.com/qw3rtman/gg/issues/57))\n* Shortcut to quickly setup new repository (Issue [#65](https://github.com/qw3rtman/gg/issues/65))\n'