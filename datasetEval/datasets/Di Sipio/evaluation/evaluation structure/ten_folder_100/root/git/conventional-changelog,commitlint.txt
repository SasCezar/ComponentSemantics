b'# [Get Started](https://conventional-changelog.github.io/commitlint/#/?id=getting-started) | [Let\'s chat][12] ![slack][11] | [Website](https://conventional-changelog.github.io/commitlint)\n\n> Lint commit messages\n\n<p align="center">\n  <img width="600" src="docs/assets/commitlint.svg">\n</p>\n\n> Demo generated with [svg-term-cli](https://github.com/marionebl/svg-term-cli) \n>\n> `cat docs/assets/commitlint.json | svg-term --out docs/assets/commitlint.svg --frame --profile=Seti --height=20 --width=80`\n\n[![npm latest][2]][3] [![CircleCI][4]][5] <!-- [![TravisCI][6]][7] -->\n\n\n*  \xf0\x9f\x9a\x93  Be a good `commitizen`\n*  \xf0\x9f\x93\xa6  Share configuration via `npm`\n*  \xf0\x9f\xa4\x96  Tap into `conventional-changelog`\n\n## Contents\n\n* [What is commitlint](#what-is-commitlint)\n  * [Benefits using commitlint](#benefits-using-commitlint)\n* [Getting started](#getting-started)\n* [CLI](#cli)\n* [Config](#config)\n* [Shared configuration](#shared-configuration)\n* [API](#api)\n* [Tools](#tools)\n* [Roadmap](#roadmap) \n* [Version Support](#version-support)\n* [Related projects](#related-projects)\n* [License](#license)\n* [Development](#development)\n  * [Install and run](#install-and-run)\n  * [Publishing a release](#publishing-a-release)\n\n* * *\n\n## What is commitlint\ncommitlint checks if your commit messages meet the [conventional commit format](https://conventionalcommits.org).\n\nIn general the pattern mostly looks like this:\n```sh\ntype(scope?): subject  #scope is optional\n```\nReal world examples can look like this:\n```\nchore: run tests on travis ci\n```\n```\nfix(server): send cors headers\n```\n```\nfeat(blog): add comment section\n```\nCommon types according to [commitlint-config-conventional (based on the the Angular convention)](https://github.com/conventional-changelog/commitlint/tree/master/%40commitlint/config-conventional#type-enum) can be:\n- build\n- ci\n- chore\n- docs\n- feat\n- fix\n- perf\n- refactor\n- revert\n- style\n- test\n\nThese can be modified by [your own configuration](#config).\n\n### Benefits using commitlint\n- [Why Use Conventional Commits?](https://www.conventionalcommits.org/en/v1.0.0-beta.2/#why-use-conventional-commits)\n- ["The perks of committing with conventions" (Talk slides)](https://slides.com/marionebl/the-perks-of-committing-with-conventions#/)\n\n\n## Getting started\n\n```sh\n# Install commitlint cli and conventional config\nnpm install --save-dev @commitlint/{config-conventional,cli}\n# For Windows:\nnpm install --save-dev @commitlint/config-conventional @commitlint/cli\n\n# Configure commitlint to use conventional config\necho "module.exports = {extends: [\'@commitlint/config-conventional\']}" > commitlint.config.js\n```\n\n\nTo lint commits before they are created you can use Husky\'s \'commit-msg\' hook:\n```json\n{\n  "husky": {\n    "hooks": {\n      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"\n    }  \n  }\n}\n```\n\n\n**Detailed Setup instructions**\n\n* [Local setup](https://conventional-changelog.github.io/commitlint/#/guides-local-setup) - Lint messages on commit with husky\n* [CI setup](https://conventional-changelog.github.io/commitlint/#/guides-ci-setup) - Lint messages during CI builds\n\n\n## CLI\n\n* Primary way to interact with commitlint.\n* `npm install --save-dev @commitlint/cli`\n* Packages: [cli](./@commitlint/cli)\n\n## Config\n\n* Configuration is picked up from `commitlint.config.js`, `.commitlintrc.js`, `.commitlintrc.json`, or `.commitlintrc.yml` file or a `commitlint` field in `package.json`\n* Packages: [cli](./@commitlint/cli), [core](./@commitlint/core)\n* See [Rules](./docs/reference-rules.md) for a complete list of possible rules\n* An example configuration can be found at [@commitlint/config-conventional](./@commitlint/config-conventional/index.js)\n\n## Shared configuration\n\nA number of shared configurations are available to install and use with `commitlint`:\n\n* [@commitlint/config-angular](./@commitlint/config-angular)\n* [@commitlint/config-conventional](./@commitlint/config-conventional)\n* [@commitlint/config-lerna-scopes](./@commitlint/config-lerna-scopes)\n* [@commitlint/config-patternplate](./@commitlint/config-patternplate)\n* [conventional-changelog-lint-config-atom](https://github.com/erikmueller/conventional-changelog-lint-config-atom)\n* [conventional-changelog-lint-config-canonical](https://github.com/gajus/conventional-changelog-lint-config-canonical)\n* [commitlint-config-jira](https://github.com/Gherciu/commitlint-jira)\n\n>\xe2\x9a\xa0\xef\xb8\x8f If you want to publish your own shareable config then make sure it has a name aligning with the pattern `commitlint-config-emoji-log` or `commitlint-config-your-config-name` \xe2\x80\x94 then in extend all you have to write is `emoji-log` or `your-config-name`. \n\n## API\n\n* Alternative, programmatic way to interact with `commitlint`\n* Packages: \n  * [format](./@commitlint/format) - Format commitlint reports\n  * [lint](./@commitlint/lint) - Lint a string against commitlint rules\n  * [load](./@commitlint/load) - Load shared commitlint configuration\n  * [read](./@commitlint/read) - Read commit messages from a specified range or last edit\n* See [API](./docs/reference-api.md) for a complete list of methods and examples\n\n## Tools\n\n* [commitizen adapter](./@commitlint/prompt)\n* [prompt](./@commitlint/prompt-cli)\n\n## Roadmap\n\n> **Ideas**: [conventional-changelog/commitlint#94](https://github.com/conventional-changelog/commitlint/issues/94)\n\n`commitlint` is considered stable and is used in various projects as development tool. \n\nWe identify **ease of adoption** and **developer experience** as fields where there\nis room and need for improvement. The items on the roadmap should enhance `commitlint` regarding those aspects.\n\n* [x] **Adoption**: Provide reusable Travis CI integration: `@commitlint/travis-cli` (https://github.com/conventional-changelog/commitlint/releases/tag/v5.1.0)\n* [ ] **DX**: Support PR squash scenario via [ahmed-taj/commitlint-bot](https://github.com/ahmed-taj/commitlint-bot/) and `@commitlint/travis-cli`\n* [ ] **Adoption**: Make [ahmed-taj/commitlint-bot](https://github.com/ahmed-taj/commitlint-bot/) configurable via `commitlint` configuration\n* [ ] **Adoption**: Create `commitlint init`\n* [ ] **DX**: Extend the configuration schema to allow for additional fields (descriptions, examples, fixes) on both the rule and value level\n* [ ] **DX**: Incorporate an extended version of [lennym/commit-template](https://github.com/lennym/commit-template) deducing a template from commitlint configuration\n* [ ] **DX**: Rewrite `@commitlint/prompt` for better usability (might involve a lot of yak-shaving)\n\n## Version Support\n\n* Node.js [LTS](https://github.com/nodejs/LTS#lts-schedule) `>= 6`\n* git `>= 2.13.2`\n\n## Related projects\n\n* [conventional-changelog](https://git.io/v18sw) \xe2\x80\x93 Generate a changelog from conventional commit history\n* [commitizen](https://git.io/vwTym) \xe2\x80\x93 Simple commit conventions for internet citizens\n* [create-semantic-module](https://git.io/vFjFg) \xe2\x80\x93 CLI for quickly integrating commitizen and commitlint in new or existing projects\n* [commitlint.io](https://github.com/tomasen/commitlintio) - helps your project to ensures nice and tidy commit messages without needing any download or installation\n\n## License\nCopyright by @marionebl. All `commitlint` packages are released under the MIT license.\n\n## Development\n\n`commitlint` is developed in a mono repository.\n\n### Install and run\n\n```sh\ngit clone git@github.com:conventional-changelog/commitlint.git\ncd commitlint\nyarn\nyarn run build # run build tasks\nyarn start # run tests, again on change\n```\n\nFor more information on how to contribute please take a look at our [contribution guide](./.github/CONTRIBUTING.md).\n\n### Publishing a release\n\n```sh\nyarn clean\nyarn install\nyarn run build\nyarn test\nyarn run publish\n```\n\n\n[0]: https://img.shields.io/badge/stability-stable-green.svg?style=flat-square\n[1]: https://nodejs.org/api/documentation.html#documentation_stability_index\n[2]: https://img.shields.io/npm/v/@commitlint/cli.svg?style=flat-square\n[3]: https://npmjs.org/package/@commitlint/cli\n[4]: https://img.shields.io/circleci/project/github/conventional-changelog/commitlint/master.svg?style=flat-square\n[5]: https://circleci.com/gh/conventional-changelog/commitlint\n<!-- [6]: https://img.shields.io/appveyor/ci/conventional-changelog/commitlint/master.svg?style=flat-square\n[7]: https://ci.appveyor.com/project/conventional-changelog/commitlint -->\n\n[8]: https://img.shields.io/badge/stability-experimental-orange.svg?style=flat-square\n[9]: https://nodejs.org/api/documentation.html#documentation_stability_index\n\n[10]: https://img.shields.io/npm/v/@commitlint/cli/next.svg?style=flat-square\n\n[11]: https://devtoolscommunity.herokuapp.com/badge.svg?style=flat-square\n[12]: https://devtoolscommunity.herokuapp.com\n'