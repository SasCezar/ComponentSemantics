b'HTTP(S) benchmark tools, testing/debugging, & restAPI (RESTful)\n---------------------------------------------------------------\n*Located in alphabetical order (not prefer)*\n\nHTTP(S) Benchmark Tools\n=======================\n* [__ab__](http://en.wikipedia.org/wiki/ApacheBench) \xe2\x80\x93 slow and single threaded, written in `C`\n* [__apib__](https://github.com/apigee/apib) \xe2\x80\x93 most of the features of ApacheBench (`ab`), also designed as a [more modern replacement](https://github.com/apigee/apib#design), written in `C`\n* [__baloo__](https://github.com/h2non/baloo) \xe2\x80\x93 Expressive end-to-end HTTP API testing made easy, written in Go (`golang`)\n* [__baton__](https://github.com/americanexpress/baton) \xe2\x80\x93 HTTP load testing, written in Go (`golang`)\n* [__bombardier__](https://github.com/codesenberg/bombardier) \xe2\x80\x93 Fast crossplatform HTTP benchmarking tool, written in Go (`golang`)\n* [__curl-loader__](http://curl-loader.sourceforge.net/) \xe2\x80\x93 performance loading of various application services and traffic generation, written in `C`\n* [__drill__](https://github.com/fcsonline/drill) \xe2\x80\x93 Drill is a HTTP load testing application inspired by Ansible syntax, written in `Rust`\n* [__fasthttploader__](https://github.com/hagen1778/fasthttploader) \xe2\x80\x93 benchmark (kinda ab) with autoadjustment and charts based on fasthttp library, written in Go (`golang`)\n* [__fbender__](https://github.com/facebookincubator/fbender) \xe2\x80\x93 A load-testing command line tool for generic network protocols (`HTTP`, `DNS`, `DHCP`, \xe2\x80\xa6), written in Go (`golang`)\n* [__finshir__](https://github.com/Gymmasssorla/finshir) \xe2\x80\x93 A coroutines-driven Low & Slow traffic sender, written in `Rust`\n* [__fortio__](https://github.com/istio/fortio) \xe2\x80\x93 load testing library and command line tool and web UI. Allows to specify a set query-per-second load and record latency histograms and other useful stats, written in Go (`golang`)\n* [__gatling__](http://gatling.io) \xe2\x80\x93 High performance load testing framework based on Scala, Akka and Netty, written in `Scala`\n* [__go-wrk__](https://github.com/tsliwowicz/go-wrk) \xe2\x80\x93 a HTTP benchmarking tool based in spirit on the excellent wrk tool ([`wg/wrk`](https://github.com/wg/wrk)), written in Go (`golang`)\n* [__goad__](https://github.com/gophergala2016/goad) \xe2\x80\x93 Goad is an AWS Lambda powered, highly distributed, load testing tool, written in Go (`golang`)\n* [__gobench__](https://github.com/cmpxchg16/gobench) \xe2\x80\x93 HTTP/HTTPS load testing and benchmarking tool, written in Go (`golang`)\n* [__gohttpbench__](https://github.com/parkghost/gohttpbench) \xe2\x80\x93 `ab`-like benchmark tool run on multi-core cpu, written in Go (`golang`)\n* [__goloris__](https://github.com/valyala/goloris) \xe2\x80\x93 Slowloris for NGINX DoS attack, written in Go (`golang`)\n* [__h2load__](https://nghttp2.org/documentation/h2load-howto.html) - benchmarking tool for HTTP/2 and HTTP/1.1. It supports SSL/TLS and clear text for all supported protocols, written in `C`/`C++`\n* [__hey__](https://github.com/rakyll/hey) \xe2\x80\x93 HTTP(S) load generator, ApacheBench (`ab`) replacement, formerly known as [__rakyll/boom__](https://github.com/rakyll/boom), written in Go (`golang`)\n* [__htstress__](https://github.com/arut/htstress) \xe2\x80\x93 multithreading high-load bechmarking services (>5K rps), written in `C`/`Linux`\n* [__httperf__](https://github.com/httperf/httperf) \xe2\x80\x93 difficult configuration, slow and single threaded, written in `C`\n* [__inundator__](https://github.com/opsengine/inundator) \xe2\x80\x93 A simple and high-throughput HTTP flood program, written in `C`/`Linux`\n* [__jmeter__](http://jmeter.apache.org/) \xe2\x80\x93 Apache  JMeter\xe2\x84\xa2, pure application designed to load test performance both on static and dynamic resources, written in `Java`\n* [__k6__](https://github.com/loadimpact/k6) - A modern load testing tool scriptable in ES6 JS with support for HTTP/1.1, HTTP/2.0 and WebSocket, written in Go (`golang`)\n* [__locust__](https://locust.io/) \xe2\x80\x93 easy-to-use, distributed load testing tool with real-time web UI. Simulates a swarm of concurrent users, the behavior of each of them is defined by your python code. Written in `Python`\n* [__lor-axe__](https://github.com/ajmwagar/lor-axe) \xe2\x80\x93 A multi-threaded, low-bandwidth HTTP Slowloris DoS tool that handles connections and sockets in parallel, written in `Rust`\n* [__mgun__](https://github.com/byorty/mgun) \xe2\x80\x93 A modern tool for load testing HTTP servers, written in Go (`golang`)\n* [__pounce__](https://github.com/X4/pounce) \xe2\x80\x93 evented, but results fluctuate, it\'s sometimes faster than `htstress`, written in `C`\n* [__siege__](http://www.joedog.org/siege-home/) \xe2\x80\x93 slow and single threaded, written in `C`\n* [__slapper__](https://github.com/ikruglov/slapper) \xe2\x80\x93 Simple load testing tool with real-time updated histogram of request timings, written in Go (`golang`)\n* [__slow_cooker__](https://github.com/BuoyantIO/slow_cooker) \xe2\x80\x93 A load tester focused on lifecycle issues and long-running tests, service with a predictable load and concurrency level for a long period of time, written in Go (`golang`)\n* [__sniper__](https://github.com/lubia/sniper) \xe2\x80\x93 powerful & high-performance http load tester, written in Go (`golang`)\n* [__thrash__](https://github.com/TylerBrock/thrash) \xe2\x80\x93 HTTP Micro Benchmarker, written in Go (`golang`)\n* [__tsung__](http://tsung.erlang-projects.org/) \xe2\x80\x93 Simulate stress users in order to test the scalability and performance of IP based client/server applications `HTTP`, `WebDAV`, `SOAP`, `PostgreSQL`, `MySQL`, `LDAP` and `Jabber`/`XMPP` servers, written in `Erlang`\n* [__vegeta__](https://github.com/tsenart/vegeta) \xe2\x80\x93 HTTP load testing tool and library, written in Go (`golang`)\n* [__weighttp__](https://github.com/lighttpd/weighttp) \xe2\x80\x93 multithreaded, but slower than htstress without keepalive, written in `C`\n* [__welle__](https://github.com/rylev/welle) \xe2\x80\x93 ab (Apache Benchmark) like tool, written in `Rust`\n* [__wrk__](https://github.com/wg/wrk) \xe2\x80\x93 multithreaded, ~~but doesn\'t offer concurrent connections and a keepalive switch~~, written in `C`/`Lua`\n* [__wrk2__](https://github.com/giltene/wrk2) \xe2\x80\x93 constant throughput, correct latency recording variant of wrk, written in `C`/`Lua`\n\n        Concurrent connections are enabled with:\n          -c, --connections <N>  Connections to keep open\n        And keepalive (which is default) can be disabled using:\n          -H "Connection: close"\n* [__yandex-tank__](https://github.com/yandex/yandex-tank) \xe2\x80\x93 Load and performance benchmark tool, written in `Python`/`C|C++|Asm` ([phantom](https://github.com/yandex-load/phantom))\n\nToolkit for testing/debugging HTTP(S) and restAPI (RESTful)\n===========================================================\n* [__bat__](https://github.com/astaxie/bat) \xe2\x80\x93 Go implement CLI, cURL-like tool for humans, written in Go (`golang`)\n* [__curl__](https://github.com/curl/curl) \xe2\x80\x93 Powerful features command-line tool for transferring data specified with URL syntax, written in `C`\n  - [Online curl command line builde](https://curlbuilder.com/)\n* [__curlconverter__](https://github.com/NickCarneiro/curlconverter) \xe2\x80\x93 convert curl commands to python, javascript, php\n* [__httpie__](https://github.com/jkbrzt/httpie) \xe2\x80\x93 client, user-friendly curl replacement with intuitive UI, JSON support, syntax highlighting, wget-like downloads, extensions, written in `Python`\n  * [__curlie__](https://curlie.io) \xe2\x80\x93 If you like the interface of [HTTPie](https://httpie.org) but miss the features of [curl](https://curl.haxx.se), curlie is what you are searching for. Curlie is a drop-in replacement for `httpie` that use `curl` to perform operations, written in Go (`golang`)\n* [__jaggr__](https://github.com/rs/jaggr) \xe2\x80\x93 JSON Aggregation CLI, Jaggr can be used to integrate [vegeta](https://github.com/tsenart/vegeta) with [jplot](https://github.com/rs/jplot), written in Go (`golang`)\n* [__jq__](https://github.com/stedolan/jq) \xe2\x80\x93 is a lightweight and flexible command-line JSON processor, written in `C`\n* [__httpstat__](https://github.com/davecheney/httpstat) - It\'s like curl -v, with colours\n* [__postwoman__](https://github.com/liyasthomas/postwoman) - API request builder\n\nSaaS/PaaS\n=========\n* [__BlazeMeter__](https://blazemeter.com/) \xe2\x80\x93 offers a cross-enterprise test automation framework for the entire technical team (developers, devops, ops and QA) throughout the product development lifecycle. Run continuous or \xe2\x80\x98on demand\xe2\x80\x99 testing for APIs, mobile apps and websites. Run from the cloud, on-premise or as a hybrid solution. Use with JMeter &amp; Selenium WebDriver &amp; integrate with your existing CI, CD &amp; APM tools.\n* [__NewRelic__](http://newrelic.com/) \xe2\x80\x93 software analytics tool suite used by developers, ops, and software companies to understand how your applications are performing in development and production\n* [__NGINX Amplify__](https://amplify.nginx.com/) \xe2\x80\x93 Visually identify performance bottlenecks, overloaded servers, or potential DDoS attacks. Improve and optimize NGINX performance with intelligent advice and recommendations. Get alerts when something is wrong with the delivery of your application. Plan capacity and performance for web applications. Keep track of systems running NGINX [<sup>1</sup>](https://www.nginx.com/blog/announcing-amplify/)\n\n\nLinks\n=====\n- [Multi-Mechanize | Performance Test Framework](http://testutils.org/multi-mechanize/)\n- [Performance test tools list](http://www.opensourcetesting.org/performance.php)\n- [REST API client](https://insomnia.rest/) - simple, beautiful, and free REST API client (`Mac`, `Windows`, and `Linux`)\n'