b'Kafka REST Proxy\n================\n\nThe Kafka REST Proxy provides a RESTful interface to a Kafka cluster. It makes\nit easy to produce and consume messages, view the state of the cluster, and\nperform administrative actions without using the native Kafka protocol or\nclients. Examples of use cases include reporting data to Kafka from any\nfrontend app built in any language, ingesting messages into a stream processing\nframework that doesn\'t yet support Kafka, and scripting administrative actions.\n\nInstallation\n------------\n\nYou can download prebuilt versions of the Kafka REST Proxy as part of the\n[Confluent Platform](http://confluent.io/downloads/). \n\nYou can read our full [installation instructions](http://docs.confluent.io/current/installation.html#installation) and the complete  [documentation](http://docs.confluent.io/current/kafka-rest/docs/)\n\n\nTo install from source, follow the instructions in the Development section below.\n\nDeployment\n----------\n\nThe REST proxy includes a built-in Jetty server. The wrapper scripts\n``bin/kafka-rest-start`` and ``bin/kafka-rest-stop`` are the recommended method of\nstarting and stopping the service.\n\nQuickstart\n----------\n\nThe following assumes you have Kafka  and an instance of\nthe REST Proxy running using the default settings and some topics already created.\n\n```bash\n    # Get a list of topics\n    $ curl "http://localhost:8082/topics"\n      \n      ["__consumer_offsets","jsontest"]\n\n    # Get info about one topic\n    $ curl "http://localhost:8082/topics/jsontest"\n    \n      {"name":"jsontest","configs":{},"partitions":[{"partition":0,"leader":0,"replicas":[{"broker":0,"leader":true,"in_sync":true}]}]}\n\n    # Produce a message with JSON data\n    $ curl -X POST -H "Content-Type: application/vnd.kafka.json.v2+json" \\\n          --data \'{"records":[{"value":{"name": "testUser"}}]}\' \\\n          "http://localhost:8082/topics/jsontest"\n          \n      {"offsets":[{"partition":0,"offset":3,"error_code":null,"error":null}],"key_schema_id":null,"value_schema_id":null}\n\n    # Create a consumer for JSON data, starting at the beginning of the topic\'s\n    # log. The consumer group is called "my_json_consumer" and the instance is "my_consumer_instance".\n    \n    $ curl -X POST -H "Content-Type: application/vnd.kafka.v2+json" -H "Accept: application/vnd.kafka.v2+json" \\\n    --data \'{"name": "my_consumer_instance", "format": "json", "auto.offset.reset": "earliest"}\' \\\n    http://localhost:8082/consumers/my_json_consumer\n          \n      {"instance_id":"my_consumer_instance","base_uri":"http://localhost:8082/consumers/my_json_consumer/instances/my_consumer_instance"}\n      \n    # Subscribe the consumer to a topic\n    \n    $ curl -X POST -H "Content-Type: application/vnd.kafka.v2+json" --data \'{"topics":["jsontest"]}\' \\\n    http://localhost:8082/consumers/my_json_consumer/instances/my_consumer_instance/subscription\n    # No content in response\n      \n    # Then consume some data from a topic using the base URL in the first response.\n\n    $ curl -X GET -H "Accept: application/vnd.kafka.json.v2+json" \\\n    http://localhost:8082/consumers/my_json_consumer/instances/my_consumer_instance/records\n      \n      [{"key":null,"value":{"name":"testUser"},"partition":0,"offset":3,"topic":"jsontest"}]\n   \n    # Finally, close the consumer with a DELETE to make it leave the group and clean up\n    # its resources.  \n    \n    $ curl -X DELETE -H "Accept: application/vnd.kafka.v2+json" \\\n          http://localhost:8082/consumers/my_json_consumer/instances/my_consumer_instance\n      # No content in response\n```\n\nDevelopment\n-----------\n\nTo build a development version, you may need a development versions of\n[common](https://github.com/confluentinc/common),\n[rest-utils](https://github.com/confluentinc/rest-utils), and\n[schema-registry](https://github.com/confluentinc/schema-registry).  After\ninstalling these, you can build the Kafka REST Proxy\nwith Maven. All the standard lifecycle phases work.\n\nContribute\n----------\n\n- Source Code: https://github.com/confluentinc/kafka-rest\n- Issue Tracker: https://github.com/confluentinc/kafka-rest/issues\n\nLicense\n-------\n\nThis project is licensed under the [Confluent Community License](LICENSE).\n'