b'# django-rest-framework-tutorial\n\n Django-REST-framework \xe5\x9f\xba\xe6\x9c\xac\xe6\x95\x99\xe5\xad\xb8 - \xe5\xbe\x9e\xe7\x84\xa1\xe5\x88\xb0\xe6\x9c\x89 DRF-Beginners-Guide \xf0\x9f\x93\x9d\n\n* [Youtube Tutorial PART 1](https://youtu.be/lunVXqMVsrs)\n* [Youtube Tutorial PART 2](https://youtu.be/Qnir5iFpMyQ)\n* [Youtube Tutorial PART 3](https://youtu.be/3qoB3RVoOvA)\n* [Youtube Tutorial PART 4](https://youtu.be/yvH1-jx_-z4)\n* [Youtube Tutorial PART 5](https://youtu.be/YMtz7OSwIlE)\n* [Youtube Tutorial PART 6](https://youtu.be/jONV4Bfjq6g)\n\n\xe9\x80\x8f\xe9\x81\x8e [Django REST framework](http://www.django-rest-framework.org/) ( DRF ) \xe5\xbb\xba\xe7\xab\x8b REST API \xe9\x9d\x9e\xe5\xb8\xb8\xe6\x96\xb9\xe4\xbe\xbf\xe5\xbf\xab\xe9\x80\x9f\xef\xbc\x8c\n\n REST API ? \xe9\x80\x99\xe6\x98\xaf\xe4\xbb\x80\xe9\xba\xbc\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x90\x83\xe5\x97\x8e ? \xe5\xa6\x82\xe6\x9e\x9c\xe4\xbd\xa0\xe6\x83\xb3\xe5\x85\x88\xe5\xb0\x8d  REST API \xe6\x9c\x89\xe4\xb8\x80\xe4\xba\x9b\xe8\xaa\x8d\xe8\xad\x98\xef\xbc\x8c\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83\xe4\xb9\x8b\xe5\x89\x8d\xe5\xaf\xab\xe7\x9a\x84 [\xe8\xaa\x8d\xe8\xad\x98 RESTful API](https://github.com/twtrubiks/django-rest-framework-tutorial/tree/master/RESTful-API-Tutorial)\n\n\xe5\x9c\xa8\xe9\x80\x99\xe8\xa3\xa1\xe6\x95\x99\xe5\xa4\xa7\xe5\xae\xb6\xe5\xbb\xba\xe7\xab\x8b\xe8\x87\xaa\xe5\xb7\xb1\xe7\x9a\x84\xe7\xac\xac\xe4\xb8\x80\xe5\x80\x8b [Django-REST-framework](http://www.django-rest-framework.org/)  :smile:\n\n\xe5\xbb\xba\xe8\xad\xb0\xe5\xb0\x8d [Django](https://github.com/django/django) \xe9\x82\x84\xe4\xb8\x8d\xe7\x86\x9f\xe7\x9a\x84\xe4\xba\xba\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x85\x88\xe9\x96\xb1\xe8\xae\x80\xe6\x88\x91\xe4\xb9\x8b\xe5\x89\x8d\xe5\xaf\xab\xe7\x9a\x84 [Django \xe5\x9f\xba\xe6\x9c\xac\xe6\x95\x99\xe5\xad\xb8 - \xe5\xbe\x9e\xe7\x84\xa1\xe5\x88\xb0\xe6\x9c\x89 Django-Beginners-Guide](https://github.com/twtrubiks/django-tutorial)\xef\xbc\x8c\n\n\xe5\x85\x88\xe5\xbb\xba\xe7\xab\x8b\xe4\xb8\x80\xe4\xba\x9b\xe5\x9f\xba\xe6\x9c\xac\xe8\xa7\x80\xe5\xbf\xb5\xef\xbc\x8c\xe5\x86\x8d\xe4\xbe\x86\xe7\x9c\x8b DRF \xe6\x9c\x83\xe6\xaf\x94\xe8\xbc\x83\xe6\xb8\x85\xe6\xa5\x9a\xe3\x80\x82\n\n## \xe6\x95\x99\xe5\xad\xb8\n\n\xe8\xab\x8b\xe5\x85\x88\xe7\xa2\xba\xe8\xaa\x8d\xe9\x9b\xbb\xe8\x85\xa6\xe6\x9c\x89\xe5\xae\x89\xe8\xa3\x9d [Python](https://www.python.org/)\n\n\xe8\xab\x8b\xe5\x9c\xa8\xe4\xbd\xa0\xe7\x9a\x84\xe5\x91\xbd\xe4\xbb\xa4\xe6\x8f\x90\xe7\xa4\xba\xe5\xad\x97\xe5\x85\x83 (cmd ) \xe5\xba\x95\xe4\xb8\x8b\xe8\xbc\xb8\xe5\x85\xa5\n\n\xe5\xae\x89\xe8\xa3\x9d [Django](https://github.com/django/django)\n\n>pip install django\n\n\xe5\xae\x89\xe8\xa3\x9d [Django-REST-framework](http://www.django-rest-framework.org/)\n>pip install djangorestframework\n\n\xe5\x9f\xba\xe6\x9c\xac\xe4\xb8\x8a\xe5\xae\x89\xe8\xa3\x9d\xe6\x87\x89\xe8\xa9\xb2\xe6\xb2\x92\xe4\xbb\x80\xe9\xba\xbc\xe5\x95\x8f\xe9\xa1\x8c\xe3\x80\x82\n\n### django-rest-framework \xe8\xa8\xad\xe5\xae\x9a\n\n***\xe8\xab\x8b\xe8\xa8\x98\xe5\xbe\x97\xe8\xa6\x81\xe5\xb0\x87 [Django-REST-framework](http://www.django-rest-framework.org/) \xe5\x8a\xa0\xe5\x85\xa5\xe8\xa8\xad\xe5\xae\x9a\xe6\xaa\x94***\n\n\xe8\xab\x8b\xe5\x9c\xa8 settings.py \xe8\xa3\xa1\xe9\x9d\xa2\xe7\x9a\x84 **INSTALLED_APPS** \xe5\x8a\xa0\xe5\x85\xa5\xe4\xb8\x8b\xe6\x96\xb9\xe7\xa8\x8b\xe5\xbc\x8f\xe7\xa2\xbc (\xe4\xb8\x8b\xe5\x9c\x96)\n\n```python\nINSTALLED_APPS = (\n    ...\n    \'rest_framework\',\n    ...\n)\n```\n\n![alt tag](http://i.imgur.com/bm7cO0e.jpg)\n\n### \xe5\xbb\xba\xe7\xab\x8b Django App\n\n\xe5\x85\x88\xe5\xbb\xba\xe7\xab\x8b\xe4\xb8\x80\xe5\x80\x8b\xe8\xa7\x80\xe5\xbf\xb5\xef\xbc\x8c\xe5\x9c\xa8 [Django](https://github.com/django/django) \xe4\xb8\xad\xef\xbc\x8c\xe9\x80\x9a\xe5\xb8\xb8\xe6\x88\x91\xe5\x80\x91\xe6\x9c\x83\xe4\xbe\x9d\xe7\x85\xa7 **\xe5\x8a\x9f\xe8\x83\xbd** \xe5\x8e\xbb\xe5\xbb\xba\xe7\xab\x8b\xe4\xb8\x80\xe5\x80\x8b App \xef\xbc\x8c \xe4\xbe\x8b\xe5\xa6\x82\xe7\xaf\x84\xe4\xbe\x8b\xe7\x9a\x84 musics \xef\xbc\x8c\xe4\xbb\xa3\xe8\xa1\xa8\xe4\xbb\x96\xe6\x98\xaf \xe7\xae\xa1\xe7\x90\x86\xe9\x9f\xb3\xe6\xa8\x82 \xe7\x9a\x84\xe9\x83\xa8\xe4\xbb\xbd\xe3\x80\x82\n\n\xe6\x9c\x89\xe4\xba\x86\xe9\x80\x99\xe5\x80\x8b\xe8\xa7\x80\xe5\xbf\xb5\xe4\xb9\x8b\xe5\xbe\x8c\xef\xbc\x8c\xe6\x88\x91\xe5\x80\x91\xe5\x8b\x95\xe6\x89\x8b\xe9\x96\x8b\xe5\xa7\x8b\xe5\x81\x9a\xe5\x90\xa7\xef\xbd\x9e\n\n\xe8\xab\x8b\xe5\x9c\xa8\xe4\xbd\xa0\xe7\x9a\x84\xe5\x91\xbd\xe4\xbb\xa4\xe6\x8f\x90\xe7\xa4\xba\xe5\xad\x97\xe5\x85\x83 (cmd ) \xe5\xba\x95\xe4\xb8\x8b\xe8\xbc\xb8\xe5\x85\xa5\n\n>python manage.py startapp musics\n\n***\xe5\xbb\xba\xe7\xab\x8b\xe5\xae\x8c\xe8\xab\x8b\xe8\xa8\x98\xe5\xbe\x97\xe8\xa6\x81\xe5\xb0\x87 App \xe5\x8a\xa0\xe5\x85\xa5\xe8\xa8\xad\xe5\xae\x9a\xe6\xaa\x94***\n\n\xe8\xab\x8b\xe5\x9c\xa8 settings.py \xe8\xa3\xa1\xe9\x9d\xa2\xe7\x9a\x84 **INSTALLED_APPS** \xe5\x8a\xa0\xe5\x85\xa5 musics (\xe4\xb9\x9f\xe5\xb0\xb1\xe6\x98\xaf\xe4\xbd\xa0\xe8\x87\xaa\xe5\xb7\xb1\xe5\xbb\xba\xe7\xab\x8b\xe7\x9a\x84 App \xe5\x90\x8d\xe7\xa8\xb1)\n\n![alt tag](http://i.imgur.com/xP1MoFI.jpg)\n\n### Models\n\n\xe5\xae\x9a\xe7\xbe\xa9\xe5\x87\xba\xe8\xb3\x87\xe6\x96\x99\xe5\xba\xab\xe4\xb8\xad\xe7\x9a\x84\xe7\xb5\x90\xe6\xa7\x8b\xef\xbc\x88schema\xef\xbc\x89\xef\xbc\x8c\xe4\xb8\xa6\xe4\xb8\x94\xe9\x80\x8f\xe9\x81\x8e Django \xe4\xb8\xad\xe7\x9a\x84\xe6\x8c\x87\xe4\xbb\xa4\xe5\x8e\xbb\xe5\xbb\xba\xe7\xab\x8b\xe8\xb3\x87\xe6\x96\x99\xe5\xba\xab\xe3\x80\x82\n\n[Django](https://github.com/django/django) \xe9\xa0\x90\xe8\xa8\xad\xe6\x98\xaf\xe4\xbd\xbf\xe7\x94\xa8 [SQLite](https://www.sqlite.org/) \xef\xbc\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe6\x83\xb3\xe8\xa6\x81\xe4\xbf\xae\xe6\x94\xb9\xe7\x82\xba\xe5\x85\xb6\xe4\xbb\x96\xe7\x9a\x84\xe8\xb3\x87\xe6\x96\x99\xe5\xba\xab\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x9c\xa8 settings.py  \xe8\xa3\xa1\xe9\x9d\xa2\xe9\x80\xb2\xe8\xa1\x8c\xe4\xbf\xae\xe6\x94\xb9\xe3\x80\x82\n\n\xe9\xa6\x96\xe5\x85\x88\xef\xbc\x8c\xe8\xab\x8b\xe5\x85\x88\xe5\x9c\xa8 models.py \xe8\xa3\xa1\xe9\x9d\xa2\xe5\xa2\x9e\xe5\x8a\xa0\xe4\xb8\x8b\xe6\x96\xb9\xe7\xa8\x8b\xe5\xbc\x8f\xe7\xa2\xbc (\xe4\xb8\x8b\xe5\x9c\x96)\n\n```python\nfrom django.db import models\n\n\n# Create your models here.\nclass Music(models.Model):\n    song = models.TextField()\n    singer = models.TextField()\n    last_modify_date = models.DateTimeField(auto_now=True)\n    created = models.DateTimeField(auto_now_add=True)\n\n    class Meta:\n        db_table = "music"\n\n```\n\n![alt tag](http://i.imgur.com/gydF0x4.jpg)\n\n\xe6\x8e\xa5\xe8\x91\x97\xe5\x9c\xa8\xe5\x91\xbd\xe4\xbb\xa4\xe6\x8f\x90\xe7\xa4\xba\xe5\xad\x97\xe5\x85\x83 (cmd ) \xe5\xba\x95\xe4\xb8\x8b\xe8\xbc\xb8\xe5\x85\xa5\n\n>python manage.py makemigrations\n\n![alt tag](http://i.imgur.com/xH4Sm3s.jpg)\n\n> python manage.py migrate\n\n![alt tag](http://i.imgur.com/CpcdT3X.jpg)\n\nmakemigrations \xef\xbc\x9a \xe6\x9c\x83\xe5\xb9\x9a\xe4\xbd\xa0\xe5\xbb\xba\xe7\xab\x8b\xe4\xb8\x80\xe5\x80\x8b\xe6\xaa\x94\xe6\xa1\x88\xef\xbc\x8c\xe5\x8e\xbb\xe8\xa8\x98\xe9\x8c\x84\xe4\xbd\xa0\xe6\x9b\xb4\xe6\x96\xb0\xe4\xba\x86\xe5\x93\xaa\xe4\xba\x9b\xe6\x9d\xb1\xe8\xa5\xbf\xe3\x80\x82\n\nmigrate \xef\xbc\x9a \xe6\xa0\xb9\xe6\x93\x9a makemigrations \xe5\xbb\xba\xe7\xab\x8b\xe7\x9a\x84\xe6\xaa\x94\xe6\xa1\x88\xef\xbc\x8c\xe5\x8e\xbb\xe6\x9b\xb4\xe6\x96\xb0\xe4\xbd\xa0\xe7\x9a\x84 DATABASE \xe3\x80\x82\n\n\xe5\x9f\xb7\xe8\xa1\x8c\xe5\xae\x8c\xe4\xb8\x8a\xe9\x9d\xa2\xe7\x9a\x84\xe6\x8c\x87\xe4\xbb\xa4\xe4\xb9\x8b\xe5\xbe\x8c\xef\xbc\x8c\n\n\xe4\xbd\xa0\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xbd\xbf\xe7\x94\xa8[SQLiteBrowser](http://sqlitebrowser.org/) \xe6\x88\x96  [PyCharm](https://www.jetbrains.com/pycharm/) \xe8\xa7\x80\xe7\x9c\x8b DATABASE\xef\xbc\x8c\n\n\xe4\xbd\xa0\xe6\x9c\x83\xe7\x99\xbc\xe7\x8f\xbe\xe5\xa4\x9a\xe5\x87\xba\xe4\xb8\x80\xe5\x80\x8b **music** \xe7\x9a\x84 table ( \xe5\xa6\x82\xe4\xb8\x8b\xe5\x9c\x96 )\n\n![alt tag](http://i.imgur.com/xVbTtjq.jpg)\n\n\xe6\x9c\x89\xe6\xb2\x92\xe6\x9c\x89\xe6\xb3\xa8\xe6\x84\x8f\xe5\x88\xb0\xe6\x88\x91\xe5\x80\x91\xe6\x98\x8e\xe6\x98\x8e\xe5\x9c\xa8 models.py \xe8\xa3\xa1\xe9\x9d\xa2\xe5\xb0\xb1\xe6\xb2\x92\xe6\x9c\x89\xe8\xbc\xb8\xe5\x85\xa5 id \xef\xbc\x8c\xe5\x8f\xaf\xe6\x98\xaf database \xe8\xa3\xa1\xe9\x9d\xa2\xe5\x8d\xbb\xe6\x9c\x89 id \xe6\xac\x84\xe4\xbd\x8d\xef\xbc\x8c\n\n\xe9\x80\x99\xe6\x98\xaf\xe5\x9b\xa0\xe7\x82\xba Django \xe9\xa0\x90\xe8\xa8\xad\xe6\x9c\x83\xe5\xb9\xab\xe4\xbd\xa0\xe5\xb8\xb6\xe5\x85\xa5\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xb8\x8d\xe7\x94\xa8\xe8\xa8\xad\xe5\xae\x9a\xe3\x80\x82\n\n### Serializers \xe5\xba\x8f\xe5\x88\x97\xe5\x8c\x96\n\nSerializers \xe5\xba\x8f\xe5\x88\x97\xe5\x8c\x96 \xe6\x98\xaf DRF \xe5\xbe\x88\xe9\x87\x8d\xe8\xa6\x81\xe7\x9a\x84\xe4\xb8\x80\xe5\x80\x8b\xe5\x9c\xb0\xe6\x96\xb9 :star:\n\n\xe4\xb8\xbb\xe8\xa6\x81\xe5\x8a\x9f\xe8\x83\xbd\xe6\x98\xaf\xe5\xb0\x87 Python \xe7\xb5\x90\xe6\xa7\x8b\xe5\xba\x8f\xe5\x88\x97\xe5\x8c\x96\xe7\x82\xba\xe5\x85\xb6\xe4\xbb\x96\xe6\xa0\xbc\xe5\xbc\x8f\xef\xbc\x8c\xe4\xbe\x8b\xe5\xa6\x82\xe6\x88\x91\xe5\x80\x91\xe5\xb8\xb8\xe7\x94\xa8\xe7\x9a\x84 JSON\xe3\x80\x82\n\n\xe5\x9c\xa8 musics \xe8\xa3\xa1\xe9\x9d\xa2\xe6\x96\xb0\xe5\xa2\x9e serializers.py\xef\xbc\x8c\xe4\xb8\xa6\xe8\xbc\xb8\xe5\x85\xa5\xe4\xb8\x8b\xe6\x96\xb9\xe7\xa8\x8b\xe5\xbc\x8f\xe7\xa2\xbc\n\n```python\nfrom rest_framework import serializers\nfrom musics.models import Music\n\n\nclass MusicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Music\n        # fields = \'__all__\'\n        fields = (\'id\', \'song\', \'singer\', \'last_modify_date\', \'created\')\n\n```\n\n![alt tag](http://i.imgur.com/KY5UwHW.jpg)\n\n\xe5\xa6\x82\xe6\x9e\x9c\xe4\xbd\xa0\xe6\x83\xb3\xe8\xa6\x81\xe5\x85\xa8\xe9\x83\xa8 fields \xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xbd\xbf\xe7\x94\xa8\xe7\xac\xac 8 \xe8\xa1\x8c\xe7\x9a\x84\xe5\xaf\xab\xe6\xb3\x95\xe3\x80\x82\n\n2017/9/8 \xe6\x96\xb0\xe5\xa2\x9e\n\n\xe5\xa2\x9e\xe5\x8a\xa0 `SerializerMethodField` \xe4\xbd\xbf\xe7\x94\xa8\xe6\x96\xb9\xe6\xb3\x95 \xef\xbc\x8c\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83 [serializers.py](https://github.com/twtrubiks/django-rest-framework-tutorial/blob/master/musics/serializers.py)\xef\xbc\x8c days_since_created \xe7\x82\xba\xe4\xbe\x8b\n\n ```python\nclass MusicSerializer(serializers.ModelSerializer):\n    days_since_created = serializers.SerializerMethodField()\n\n    class Meta:\n        model = Music\n        # fields = \'__all__\'\n        fields = (\'id\', \'song\', \'singer\', \'last_modify_date\', \'created\', \'days_since_created\')\n\n    def get_days_since_created(self, obj):\n        return (now() - obj.created).days\n ```\n\n\xe6\x9b\xb4\xe5\xa4\x9a\xe8\xaa\xaa\xe6\x98\x8e\xe8\xab\x8b\xe5\x8f\x83\xe8\x80\x83 [http://www.django-rest-framework.org/api-guide/fields/#serializermethodfield](http://www.django-rest-framework.org/api-guide/fields/#serializermethodfield)\n\n2018/2/11 \xe6\x96\xb0\xe5\xa2\x9e\n\n\xe6\x9c\x89\xe6\x99\x82\xe5\x80\x99\xe6\x9c\x83\xe9\x9c\x80\xe8\xa6\x81\xe8\x87\xaa\xe5\xae\x9a\xe7\xbe\xa9\xe5\xba\x8f\xe5\x88\x97\xe5\x8c\x96\xef\xbc\x8c\xe8\x88\x89\xe5\x80\x8b\xe4\xbe\x8b\xe5\xad\x90\xef\xbc\x8c\xe5\x81\x87\xe5\xa6\x82\xe6\x88\x91\xe5\xb8\x8c\xe6\x9c\x9b\xe5\xb0\x87\xe5\x9b\x9e\xe5\x82\xb3\xe7\x9a\x84 singer \xe9\x83\xbd\xe8\xbd\x89\xe6\x88\x90\xe5\xa4\xa7\xe5\xaf\xab\xe9\x80\x99\xe6\xa8\xa3\xe6\x88\x91\xe8\xa6\x81\xe8\xa9\xb2\xe6\x80\x8e\xe9\xba\xbc\xe8\xbe\xa6 ?\n\n\xe9\x80\x99\xe9\x82\x8a\xe4\xb8\x8d\xe5\xb8\x8c\xe6\x9c\x9b\xe5\x8f\x88\xe5\xa4\x9a\xe4\xb8\x80\xe5\x80\x8b property \xe5\x9b\x9e\xe5\x82\xb3 ( singer1 \xe4\xb9\x8b\xe9\xa1\x9e\xe7\x9a\x84 )\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe9\x80\x99\xe6\x99\x82\xe5\x80\x99\xe6\x88\x91\xe5\x80\x91\xe5\xb0\xb1\xe5\xbf\x85\xe9\xa0\x88\xe8\x87\xaa\xe5\xae\x9a\xe7\xbe\xa9\xe5\xba\x8f\xe5\x88\x97\xe5\x8c\x96\xef\xbc\x8c\xe4\xb9\x9f\xe5\xb0\xb1\xe6\x98\xaf\n\n\xe9\x80\x8f\xe9\x81\x8e `.to_representation(self, value)` \xe9\x80\x99\xe5\x80\x8b\xe6\x96\xb9\xe6\xb3\x95\xef\xbc\x8c\xe6\x9b\xb4\xe5\xa4\x9a\xe8\xaa\xaa\xe6\x98\x8e\xe8\xab\x8b\xe5\x8f\x83\xe8\x80\x83 [Custom relational fields](http://www.django-rest-framework.org/api-guide/relations/#custom-relational-fields)\xe3\x80\x82\n\n\xe7\xaf\x84\xe4\xbe\x8b\xe5\xaf\xab\xe6\xb3\x95\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83 [serializers.py](https://github.com/twtrubiks/django-rest-framework-tutorial/blob/master/musics/serializers.py)\n\n```python\nfrom django.utils.timezone import now\nfrom rest_framework import serializers\nfrom musics.models import Music\n\n\nclass ToUpperCaseCharField(serializers.CharField):\n    def to_representation(self, value):\n        return value.upper()\n\n\nclass MusicSerializer(serializers.ModelSerializer):\n    days_since_created = serializers.SerializerMethodField()\n    singer = ToUpperCaseCharField()\n\n    class Meta:\n        model = Music\n        # fields = \'__all__\'\n        fields = (\'id\', \'song\', \'singer\', \'last_modify_date\', \'created\', \'days_since_created\')\n\n    def get_days_since_created(self, obj):\n        return (now() - obj.created).days\n```\n\n\xe9\x80\x99\xe6\xa8\xa3\xe4\xbd\xa0\xe5\xb0\xb1\xe6\x9c\x83\xe7\x99\xbc\xe7\x8f\xbe\xe5\x9b\x9e\xe5\x82\xb3\xe7\x9a\x84 singer \xe9\x83\xbd\xe8\xa2\xab\xe8\xbd\x89\xe6\x88\x90\xe5\xa4\xa7\xe5\xaf\xab\xe4\xba\x86\n\n![alt tag](https://i.imgur.com/WsVG86d.png)\n\n### Views\n\n\xe5\x9c\xa8  [Django \xe5\x9f\xba\xe6\x9c\xac\xe6\x95\x99\xe5\xad\xb8 - \xe5\xbe\x9e\xe7\x84\xa1\xe5\x88\xb0\xe6\x9c\x89 Django-Beginners-Guide](https://github.com/twtrubiks/django-tutorial) \xe4\xb8\xad\xe6\x88\x91\xe5\x80\x91\xe4\xbd\xbf\xe7\x94\xa8 views\xef\xbc\x8c\n\n\xe8\x80\x8c\xe5\x9c\xa8 DRF \xe4\xb8\xad\xe6\x8f\x90\xe4\xbe\x9b\xe6\x88\x91\xe5\x80\x91\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xbd\xbf\xe7\x94\xa8\xe5\x8f\xa6\xe4\xb8\x80\xe7\xa8\xae\xe7\xa8\xb1\xe7\x82\xba viewsets \xe3\x80\x82\n\n\xe8\xab\x8b\xe5\x9c\xa8 views.py \xe8\xa3\xa1\xe8\xbc\xb8\xe5\x85\xa5\xe4\xb8\x8b\xe6\x96\xb9\xe7\xa8\x8b\xe5\xbc\x8f\xe7\xa2\xbc (\xe4\xb8\x8b\xe5\x9c\x96)\n\n```python\n# Create your views here.\nfrom musics.models import Music\nfrom musics.serializers import MusicSerializer\n\nfrom rest_framework import viewsets\n\n\n# Create your views here.\nclass MusicViewSet(viewsets.ModelViewSet):\n    queryset = Music.objects.all()\n    serializer_class = MusicSerializer\n\n```\n\n![alt tag](http://i.imgur.com/GMSz7u7.jpg)\n\n\xe5\x8f\xaa\xe9\x9c\x80\xe8\xa6\x81\xe5\xaf\xab\xe9\x80\x99\xe6\xa8\xa3\xef\xbc\x8c\xe4\xbd\xa0\xe5\xb0\xb1\xe6\x93\x81\xe6\x9c\x89 CRUD \xe7\x9a\x84\xe5\x85\xa8\xe9\x83\xa8\xe5\x8a\x9f\xe8\x83\xbd\xef\xbc\x8c\xe6\x98\xaf\xe4\xb8\x8d\xe6\x98\xaf\xe9\x9d\x9e\xe5\xb8\xb8\xe5\xbc\xb7\xe5\xa4\xa7 :open_mouth:\n\n\xe7\x82\xba\xe4\xbb\x80\xe9\xba\xbc\xe5\x91\xa2? \xe5\x9b\xa0\xe7\x82\xba DRF \xe7\x9a\x84 **viewsets.ModelViewSet** \xe8\xa3\xa1\xe9\x9d\xa2\xe5\xb9\xab\xe4\xbd\xa0\xe5\xae\x9a\xe7\xbe\xa9\xe4\xba\x86\xe9\x80\x99\xe4\xba\x9b\xe5\x8a\x9f\xe8\x83\xbd\xef\xbc\x8c\n\n![alt tag](http://i.imgur.com/GHbUOT5.jpg)\n\n\xe7\x95\xb6\xe7\x84\xb6\xef\xbc\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe4\xbd\xa0\xe9\x9c\x80\xe8\xa6\x81\xef\xbc\x8c\xe4\xb9\x9f\xe5\x8f\xaf\xe4\xbb\xa5\xe8\xa6\x86\xe5\xaf\xab\xe4\xbb\x96\xe3\x80\x82\n\n### Routers \xe8\xb7\xaf\xe7\x94\xb1\n\nDRF \xe6\x8f\x90\xe4\xbe\x9b DefaultRouter \xe8\xae\x93\xe6\x88\x91\xe5\x80\x91\xe5\xbf\xab\xe9\x80\x9f\xe5\xbb\xba\xe7\xab\x8b Routers \xe8\xb7\xaf\xe7\x94\xb1\xe3\x80\x82\n\n\xe8\xab\x8b\xe5\x85\x88\xe5\xb0\x87 urls.py \xe8\xa3\xa1\xe9\x9d\xa2\xe5\xa2\x9e\xe5\x8a\xa0\xe4\xb8\x80\xe4\xba\x9b\xe7\xa8\x8b\xe5\xbc\x8f\xe7\xa2\xbc\xef\xbc\x8c\xe5\xa6\x82\xe4\xb8\x8b\xe5\x9c\x96\n\n```python\nfrom django.conf.urls import url, include\nfrom django.contrib import admin\nfrom rest_framework.routers import DefaultRouter\nfrom musics import views\n\nrouter = DefaultRouter()\nrouter.register(r\'music\', views.MusicViewSet)\n\nurlpatterns = [\n    url(r\'^admin/\', admin.site.urls),\n    url(r\'^api/\', include(router.urls))\n]\n\n```\n\n![alt tag](http://i.imgur.com/imdF1f8.jpg)\n\n\xe6\x9c\x80\xe5\xbe\x8c\xe5\x9f\xb7\xe8\xa1\x8c Django \xef\xbc\x8c \xe7\x84\xb6\xe5\xbe\x8c\xe7\x80\x8f\xe8\xa6\xbd   [http://127.0.0.1:8000/api/](http://127.0.0.1:8000/api/)\n\n\xe4\xbd\xa0\xe6\x87\x89\xe8\xa9\xb2\xe6\x9c\x83\xe7\x9c\x8b\xe5\x88\xb0\xe5\xa6\x82\xe4\xb8\x8b\xe5\x9c\x96\n\n![alt tag](http://i.imgur.com/ZpmiVnG.jpg)\n\n\xe6\x81\xad\xe5\x96\x9c\xe4\xbd\xa0\xef\xbc\x8c\xe6\x88\x90\xe5\x8a\x9f\xe4\xba\x86 :smile:\n\n\xe6\x8e\xa5\xe4\xb8\x8b\xe4\xbe\x86\xef\xbc\x8c\xe8\xae\x93\xe6\x88\x91\xe4\xbe\x86\xe6\xb8\xac\xe8\xa9\xa6 API \xe5\x90\xa7~\n\n### \xe6\xb8\xac\xe8\xa9\xa6 API\n\n\xe5\x9c\xa8\xe6\xb8\xac\xe8\xa9\xa6 API \xe4\xb9\x8b\xe5\x89\x8d\xef\xbc\x8c\xe5\xa4\xa7\xe5\xae\xb6\xe5\xbf\x85\xe9\xa0\x88\xe5\x85\x88\xe4\xba\x86\xe8\xa7\xa3\xe4\xb8\x80\xe4\xb8\x8b\xe4\xbb\x80\xe9\xba\xbc\xe6\x98\xaf REST API\n\nREST API \xe5\x85\xa8\xe5\x90\x8d\xe7\x82\xba RESTful API\xef\xbc\x8c\xe5\xae\x83\xe4\xb8\xa6\xe4\xb8\x8d\xe6\x98\xaf\xe4\xb8\x80\xe5\x80\x8b\xe6\x96\xb0\xe6\x9d\xb1\xe8\xa5\xbf\xe3\x80\x81\xe6\x96\xb0\xe6\x8a\x80\xe8\xa1\x93\xef\xbc\x8c\xe5\xae\x83\xe5\x8f\xaa\xe6\x98\xaf\xe4\xb8\x80\xe5\x80\x8b\xe8\xa6\x8f\xe7\xaf\x84\xe3\x80\x82\n\n\xe7\xb0\xa1\xe5\x96\xae\xe8\xaa\xaa\xe6\x98\x8e :\n\nGET : \xe8\xae\x80\xe5\x8f\x96\xe8\xb3\x87\xe6\xba\x90\n\nPUT : \xe6\x9b\xbf\xe6\x8f\x9b\xe8\xb3\x87\xe6\xba\x90\n\nDELETE : \xe5\x88\xaa\xe9\x99\xa4\xe8\xb3\x87\xe6\xba\x90\n\nPOST : \xe6\x96\xb0\xe5\xa2\x9e\xe8\xb3\x87\xe6\xba\x90\n\nPATCH : \xe6\x9b\xb4\xe6\x96\xb0\xe8\xb3\x87\xe6\xba\x90\xe9\x83\xa8\xe4\xbb\xbd\xe5\x85\xa7\xe5\xae\xb9\n\n\xe5\x89\xa9\xe4\xb8\x8b\xe6\x9b\xb4\xe8\xa9\xb3\xe7\xb4\xb0\xe7\x9a\x84\xe8\xb3\x87\xe6\x96\x99\xe5\xb0\xb1\xe9\xba\xbb\xe7\x85\xa9\xe5\xa4\xa7\xe5\xae\xb6 GOOGLE\xe4\xba\x86\xef\xbc\x8c\xe6\x88\x91\xe5\x9c\xa8\xe7\x8f\xbe\xe5\x9c\xa8\xe4\xbe\x86 \xe6\xb8\xac\xe8\xa9\xa6 API   :smiley:\n\n\xe6\xb8\xac\xe8\xa9\xa6 API \xe7\x9a\x84\xe5\xb7\xa5\xe5\x85\xb7\xe5\xbe\x88\xe5\xa4\x9a\xef\xbc\x8c\xe5\x9c\xa8\xe9\x80\x99\xe8\xa3\xa1\xe6\x88\x91\xe5\x80\x91\xe4\xbd\xbf\xe7\x94\xa8 [Postman](https://www.getpostman.com/) \xef\xbc\x8c\xe5\xa4\xa7\xe5\xae\xb6\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x94\xa8\xe8\x87\xaa\xe5\xb7\xb1\xe7\xbf\x92\xe6\x85\xa3\xe7\x9a\x84\xe5\xb7\xa5\xe5\x85\xb7\xe3\x80\x82\n\n#### POST\n\n\xe6\x88\x91\xe5\x80\x91\xe5\x85\x88\xe4\xbe\x86\xe6\x96\xb0\xe5\xa2\x9e\xe5\xb9\xbe\xe7\xad\x86\xe8\xb3\x87\xe6\x96\x99\xef\xbc\x8c\xe5\xa6\x82\xe4\xb8\x8b\xe5\x9c\x96\n\n![alt tag](http://i.imgur.com/zalPhwM.jpg)\n\n\xe5\x9c\xa8 \xe6\xad\xa5\xe9\xa9\x9f1 \xe7\x9a\x84\xe5\x9c\xb0\xe6\x96\xb9\xe8\xbc\xb8\xe5\x85\xa5\xe4\xbd\xa0\xe7\x9a\x84 API \xe7\x9a\x84\xe7\xb6\xb2\xe5\x9d\x80\xef\xbc\x8c\xe7\xaf\x84\xe4\xbe\x8b\xe7\x82\xba  [http://127.0.0.1:8000/api/music/](http://127.0.0.1:8000/api/music/)\n\n\xe5\x9c\xa8 \xe6\xad\xa5\xe9\xa9\x9f2 body \xe7\x9a\x84\xe5\x9c\xb0\xe6\x96\xb9\xef\xbc\x8c\xe5\xa1\xab\xe5\x85\xa5 song \xe5\x92\x8c singer \xe7\x9a\x84\xe5\x80\xbc\xef\xbc\x8c\xe7\x84\xb6\xe5\xbe\x8c\xe6\x8c\x89\xe4\xb8\x8b Send\xef\xbc\x8c\n\n\xe6\x8e\xa5\xe8\x91\x97\xe7\x9c\x8b response ( \xe6\xad\xa5\xe9\xa9\x9f3 )\xef\xbc\x8c\xe4\xb9\x9f\xe5\xb0\xb1\xe6\x98\xaf\xe4\xbd\xa0\xe6\x96\xb0\xe5\xa2\x9e\xe9\x80\xb2\xe5\x8e\xbb dabase \xe7\x9a\x84\xe8\xb3\x87\xe6\x96\x99\xe3\x80\x82\n\n#### GET\n\n\xe5\xa6\x82\xe6\x9e\x9c\xe4\xbd\xa0\xe6\x83\xb3\xe4\xb8\x80\xe6\xac\xa1\xe7\x9c\x8b\xe8\xa3\xa1\xe9\x9d\xa2\xe5\x85\xa8\xe9\x83\xa8\xe7\x9a\x84\xe8\xb3\x87\xe6\x96\x99\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xbd\xbf\xe7\x94\xa8 [http://127.0.0.1:8000/api/music/](http://127.0.0.1:8000/api/music/)\n\n![alt tag](http://i.imgur.com/clilnZL.jpg)\n\n\xe6\x88\x96\xe6\x98\xaf\xe4\xbd\xa0\xe5\x8f\xaa\xe6\x83\xb3\xe7\x9c\x8b\xe7\x89\xb9\xe5\xae\x9a\xe7\x9a\x84\xe6\x9f\x90\xe4\xb8\x80\xe7\xad\x86\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xbd\xbf\xe7\x94\xa8 [http://127.0.0.1:8000/api/music/2/](http://127.0.0.1:8000/api/music/2/)\n\n![alt tag](http://i.imgur.com/RHwAjpU.jpg)\n\n#### PUT\n\n\xe5\xa6\x82\xe6\x9e\x9c\xe4\xbd\xa0\xe6\x83\xb3\xe4\xbf\xae\xe6\x94\xb9\xe7\x89\xb9\xe5\xae\x9a\xe8\xb3\x87\xe6\x96\x99\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xbd\xbf\xe7\x94\xa8 [http://127.0.0.1:8000/api/music/2/](http://127.0.0.1:8000/api/music/2/)\n\n![alt tag](http://i.imgur.com/7v5U03P.jpg)\n\n\xe7\x95\xb6\xe6\x8c\x89\xe4\xb8\x8b send \xe4\xb9\x8b\xe5\xbe\x8c\xef\xbc\x8c\xe6\x9c\x83\xe7\x9c\x8b\xe5\x88\xb0 response ( \xe6\xad\xa5\xe9\xa9\x9f3 )\xe7\x9a\x84\xe5\x9c\xb0\xe6\x96\xb9\xe5\x9b\x9e\xe5\x82\xb3\xe4\xbf\xae\xe6\x94\xb9\xe5\xbe\x8c\xe7\x9a\x84\xe5\x80\xbc\xe3\x80\x82\n\n#### DELETE\n\n\xe5\xa6\x82\xe6\x9e\x9c\xe4\xbd\xa0\xe6\x83\xb3\xe5\x88\xaa\xe9\x99\xa4\xe7\x89\xb9\xe5\xae\x9a\xe8\xb3\x87\xe6\x96\x99\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xbd\xbf\xe7\x94\xa8 [http://127.0.0.1:8000/api/music/3/](http://127.0.0.1:8000/api/music/3/)\n\n![alt tag](http://i.imgur.com/HjCCICb.jpg)\n\n\xe5\x9f\xb7\xe8\xa1\x8c\xe5\xbe\x8c\xef\xbc\x8c\xe4\xbd\xa0\xe6\x9c\x83\xe7\x99\xbc\xe7\x8f\xbe id=3 \xe7\x9a\x84\xe8\xb3\x87\xe6\x96\x99\xe8\xa2\xab\xe5\x88\xaa\xe9\x99\xa4\xe4\xba\x86\xe3\x80\x82\n\n![alt tag](http://i.imgur.com/tOQS5cq.jpg)\n\n### Performing raw SQL queries\n\n* [Youtube Tutorial PART 5](https://youtu.be/YMtz7OSwIlE)\n\n2018/2/11 \xe6\x96\xb0\xe5\xa2\x9e\n\n\xe9\x9b\x96\xe7\x84\xb6 Django ORM \xe4\xbd\xbf\xe7\x94\xa8\xe8\xb5\xb7\xe4\xbe\x86\xe5\xbe\x88\xe6\xa3\x92\xef\xbc\x8c\xe5\x8f\x88\xe5\xae\xb9\xe6\x98\x93\xe4\xbd\xbf\xe7\x94\xa8 ( \xe5\xa6\x82\xe4\xb8\x8d\xe4\xba\x86\xe8\xa7\xa3 Django ORM\xef\xbc\x8c\xe8\xab\x8b\xe5\x8f\x83\xe8\x80\x83\xe6\x88\x91\xe4\xb9\x8b\xe5\x89\x8d\xe7\x9a\x84\xe4\xbb\x8b\xe7\xb4\xb9\xe6\x96\x87\xe7\xab\xa0 [Django ORM](https://github.com/twtrubiks/django-tutorial#django-orm) )\xef\xbc\x8c\n\n\xe4\xbd\x86\xe6\x9c\x89\xe6\x99\x82\xe5\x80\x99\xe6\x88\x91\xe5\x80\x91\xe9\x82\x84\xe6\x98\xaf\xe6\x9c\x83\xe5\xb8\x8c\xe6\x9c\x9b\xe4\xbd\xbf\xe7\x94\xa8 raw SQL \xef\xbc\x8c\xe5\x83\x8f\xe6\x98\xaf\xe9\x82\x8f\xe8\xbc\xaf\xe6\xaf\x94\xe8\xbc\x83\xe8\xa4\x87\xe9\x9b\x9c\xe7\x9a\x84\xef\xbc\x8c\xe4\xb8\x8d\xe9\x81\xa9\xe5\x90\x88\xe4\xbd\xbf\xe7\x94\xa8 Django ORM \xe5\xaf\xab\xef\xbc\x8c\xe7\x95\xa2\xe7\xab\x9f Django ORM \xe7\x9a\x84\xe5\xba\x95\xe5\xb1\xa4\n\n\xe9\x82\x84\xe6\x98\xaf raw SQL\xef\xbc\x8cDjango \xe6\x8f\x90\xe4\xbe\x9b\xe5\x85\xa9\xe7\xa8\xae\xe6\x96\xb9\xe6\xb3\x95\xe4\xbe\x86\xe5\xae\x8c\xe6\x88\x90\xe4\xbb\x96\xef\xbc\x8c\xe5\x88\x86\xe5\x88\xa5\xe6\x98\xaf **Performing raw queries** \xe4\xbb\xa5\xe5\x8f\x8a **Executing custom SQL directly**\xe3\x80\x82\n\n\xe9\x80\x99\xe9\x82\x8a\xe6\x8f\x90\xe9\x86\x92\xe4\xb8\x80\xe4\xb8\x8b\xef\xbc\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe4\xbd\xbf\xe7\x94\xa8\xe9\x80\x99\xe7\xa8\xae\xe6\x96\xb9\xe6\xb3\x95\xef\xbc\x8c\xe8\xab\x8b\xe6\xb3\xa8\xe6\x84\x8f [SQL injection protection](https://docs.djangoproject.com/en/1.11/topics/security/#sql-injection-protection)\xe3\x80\x82\n\n\xe6\x9b\xb4\xe5\xa4\x9a\xe8\xa9\xb3\xe7\xb4\xb0\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83 [https://docs.djangoproject.com/en/1.11/topics/db/sql/#performing-raw-queries](https://docs.djangoproject.com/en/1.11/topics/db/sql/#performing-raw-queries)\n\n#### Performing raw queries\n\n\xe9\x80\x8f\xe9\x81\x8e `Manager.raw()`\xe9\x80\x99\xe5\x80\x8b\xe6\x96\xb9\xe6\xb3\x95\xef\xbc\x8c\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83 [models.py](https://github.com/twtrubiks/django-rest-framework-tutorial/blob/master/musics/models.py)\n\n\xe7\xb0\xa1\xe5\x96\xae\xe8\xaa\xaa\xe6\x98\x8e\xe4\xb8\x80\xe4\xb8\x8b\xe9\x80\x99\xe6\xae\xb5 code\xef\xbc\x8c\xe5\x89\x8d\xe7\xab\xaf\xe5\x8f\xaf\xe4\xbb\xa5\xe5\xb8\xb6\xe5\x85\xa5 song \xe7\x9a\x84\xe5\x90\x8d\xe7\xa8\xb1\xe8\xbf\x91\xe4\xbe\x86\xe6\x9f\xa5\xe8\xa9\xa2\xef\xbc\x8c\xe4\xb9\x9f\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xb8\x8d\xe5\xb8\xb6\xef\xbc\x8c\xe4\xb8\x8d\xe5\xb8\xb6\xe7\x9a\x84\xe8\xa9\xb1\xe5\xb0\xb1\xe6\x98\xaf\xe5\x9b\x9e\xe5\x82\xb3\xe5\x85\xa8\xe9\x83\xa8\n\n```python\ndef fun_raw_sql_query(**kwargs):\n    song = kwargs.get(\'song\')\n    if song:\n        result = Music.objects.raw(\'SELECT * FROM music WHERE song = %s\', [song])\n    else:\n        result = Music.objects.raw(\'SELECT * FROM music\')\n    return result\n```\n\n [views.py](https://github.com/twtrubiks/django-rest-framework-tutorial/blob/master/musics/views.py) \xe4\xb8\xad\xe7\x9a\x84\xe7\x89\x87\xe6\xae\xb5 code\n\n```python\n# /api/music/raw_sql_query/\n@list_route(methods=[\'get\'])\ndef raw_sql_query(self, request):\n    song = request.query_params.get(\'song\', None)\n    music = fun_raw_sql_query(song=song)\n    serializer = MusicSerializer(music, many=True)\n    return Response(serializer.data, status=status.HTTP_200_OK)\n```\n\n\xe9\x80\x99\xe5\x80\x8b\xe6\x96\xb9\xe6\xb3\x95\xe6\x9c\x89 map \xe5\x88\xb0\xe4\xbd\xa0\xe7\x9a\x84 models\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe4\xb8\x80\xe6\xa8\xa3\xe5\x8f\xaf\xe4\xbb\xa5\xe5\xba\x8f\xe5\x88\x97\xe5\x8c\x96\n\nrequest\n\n![alt tag](https://i.imgur.com/jz9aqi4.png)\n\nresponse\n\n![alt tag](https://i.imgur.com/0p3KN3e.png)\n\n\xe6\x9b\xb4\xe5\xa4\x9a\xe8\xa9\xb3\xe7\xb4\xb0\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83 [https://docs.djangoproject.com/en/1.11/topics/db/sql/#performing-raw-queries](https://docs.djangoproject.com/en/1.11/topics/db/sql/#performing-raw-queries)\n\n#### Executing custom SQL directly\n\n\xe6\x9c\x89\xe6\x99\x82\xe5\x80\x99 `Manager.raw()` \xe6\x98\xaf\xe4\xb8\x8d\xe5\xa4\xa0\xe7\x9a\x84\xef\xbc\x8c\xe5\x83\x8f\xe6\x98\xaf\xe4\xbd\xa0\xe5\x8f\xaf\xe8\x83\xbd\xe9\x9c\x80\xe8\xa6\x81 queries \xe6\xb2\x92\xe6\x9c\x89\xe5\xae\x8c\xe5\x85\xa8 map \xe5\x88\xb0 models \xe7\x9a\x84\xe8\xb3\x87\xe6\x96\x99\xef\xbc\x8c\n\n\xe6\x88\x96\xe6\x98\xaf\xe5\x9f\xb7\xe8\xa1\x8c UPDATE, INSERT, or DELETE\xe3\x80\x82\n\n\xe7\x95\xb6\xe6\x88\x91\xe5\x80\x91\xe4\xbd\xbf\xe7\x94\xa8\xe9\x80\x99\xe5\x80\x8b\xe6\x96\xb9\xe6\xb3\x95\xe6\x99\x82\xef\xbc\x8c\xe6\x98\xaf\xe5\xae\x8c\xe5\x85\xa8\xe7\x9a\x84\xe7\xb9\x9e\xe9\x81\x8e model \xef\xbc\x8c\xe7\x9b\xb4\xe6\x8e\xa5 access database\xe3\x80\x82\n\n\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83 [models.py](https://github.com/twtrubiks/django-rest-framework-tutorial/blob/master/musics/models.py)\n\n\xe7\xb0\xa1\xe5\x96\xae\xe8\xaa\xaa\xe6\x98\x8e\xe4\xb8\x80\xe4\xb8\x8b\xe9\x80\x99\xe6\xae\xb5 code\xef\xbc\x8c\xe5\x89\x8d\xe7\xab\xaf\xe5\x8f\xaf\xe4\xbb\xa5\xe5\xb8\xb6\xe5\x85\xa5 id \xe5\x92\x8c song \xe4\xbe\x86\xe6\x9b\xb4\xe6\x96\xb0\xe8\xb3\x87\xe6\x96\x99\n\n```python\ndef namedtuplefetchall(cursor):\n    # Return all rows from a cursor as a namedtuple\n    desc = cursor.description\n    nt_result = namedtuple(\'Result\', [col[0] for col in desc])\n    return [nt_result(*row) for row in cursor.fetchall()]\n\n\ndef fun_sql_cursor_update(**kwargs):\n    song = kwargs.get(\'song\')\n    pk = kwargs.get(\'pk\')\n\n    \'\'\'\n    Note that if you want to include literal percent signs in the query,\n    you have to double them in the case you are passing parameters:\n    \'\'\'\n    with connection.cursor() as cursor:\n        cursor.execute("UPDATE music SET song = %s WHERE id = %s", [song, pk])\n        cursor.execute("SELECT * FROM music WHERE id = %s", [pk])\n        # result = cursor.fetchone()\n        result = namedtuplefetchall(cursor)\n    result = [\n        {\n            \'id\': r.id,\n            \'song\': r.song,\n            \'singer\': r.singer,\n            \'last_modify_date\': r.last_modify_date,\n            \'created\': r.created,\n        }\n        for r in result\n    ]\n\n    return result\n```\n\n\xe8\xa3\x9c\xe5\x85\x85\xe4\xb8\x80\xe4\xb8\x8b\xe4\xb8\x8a\xe9\x9d\xa2\xe8\x8b\xb1\xe6\x96\x87\xe8\xa8\xbb\xe8\xa7\xa3\xe7\x9a\x84\xe8\xaa\xaa\xe6\x98\x8e\xef\xbc\x8c\xe5\x81\x87\xe8\xa8\xad\xe4\xbb\x8a\xe5\xa4\xa9\xe6\x88\x91\xe5\x80\x91\xe4\xbd\xbf\xe7\x94\xa8 like \xe6\x90\x9c\xe5\xb0\x8b\xef\xbc\x8c\xe4\xb9\x9f\xe5\xb0\xb1\xe6\x98\xaf\xe6\x9c\x83\xe5\x8c\x85\xe5\x90\xab `%` \xe7\x9a\x84\xe7\xac\xa6\xe8\x99\x9f\xef\xbc\x8c\n\n\xe9\x80\x99\xe6\x99\x82\xe5\x80\x99\xe6\x88\x91\xe5\x80\x91\xe5\xbf\x85\xe9\xa0\x88\xe9\x87\x8d\xe8\xa4\x87 `%` \xe9\x80\x99\xe5\x80\x8b\xe7\xac\xa6\xe8\x99\x9f\xef\xbc\x8c\xe4\xb9\x9f\xe5\xb0\xb1\xe6\x98\xaf `%%`\xef\xbc\x8c\xe8\xab\x8b\xe7\x9c\x8b\xe4\xbb\xa5\xe4\xb8\x8b\xe7\x9a\x84\xe4\xbe\x8b\xe5\xad\x90\xef\xbc\x8c\n\n\xe5\x81\x87\xe5\xa6\x82\xe6\x88\x91\xe6\x83\xb3\xe5\x9f\xb7\xe8\xa1\x8c\xe9\x80\x99\xe5\x80\x8b sql\n\n```sql\nSELECT * FROM music WHERE song like \'song%\'\n```\n\n\xe5\x9c\xa8 `cursor.execute` \xe4\xb8\xad\xef\xbc\x8c\xe5\xbf\x85\xe9\xa0\x88\xe5\xa4\x9a\xe5\x8a\xa0\xe4\xb8\x8a\xe4\xb8\x80\xe5\x80\x8b `%`\n\n```python\ncursor.execute("SELECT * FROM music WHERE song like \'song%%\'", [])\n```\n\n [views.py](https://github.com/twtrubiks/django-rest-framework-tutorial/blob/master/musics/views.py) \xe4\xb8\xad\xe7\x9a\x84\xe7\x89\x87\xe6\xae\xb5 code\n\n \xe7\x94\xb1\xe6\x96\xbc\xe9\x80\x99\xe5\x80\x8b\xe6\x96\xb9\xe6\xb3\x95\xe6\x98\xaf\xe6\xb2\x92\xe6\x9c\x89 map \xe5\x88\xb0 model\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe6\x88\x91\xe5\x80\x91\xe6\xb2\x92\xe8\xbe\xa6\xe6\xb3\x95\xe9\x80\xb2\xe8\xa1\x8c\xe5\xba\x8f\xe5\x88\x97\xe5\x8c\x96\xef\xbc\x8c\n\n \xe9\x80\x99\xe9\x82\x8a\xe5\xb0\x87\xe7\x9b\xb4\xe6\x8e\xa5\xe5\x9b\x9e\xe5\x82\xb3\xe4\xb8\x80\xe5\x80\x8b dict \xe5\xad\x97\xe5\x85\xb8\xef\xbc\x8c\n\n```python\n# /api/music/{pk}/sql_cursor_update/\n@detail_route(methods=[\'put\'])\ndef sql_cursor_update(self, request, pk=None):\n    song = request.data.get(\'song\', None)\n    if song:\n        music = fun_sql_cursor_update(song=song, pk=pk)\n        return Response(music, status=status.HTTP_200_OK)\n```\n\nrequest\n\n![alt tag](https://i.imgur.com/0Qfyrra.png)\n\nresponse\n\n![alt tag](https://i.imgur.com/gVFgSPx.png)\n\n\xe6\x9b\xb4\xe5\xa4\x9a\xe8\xa9\xb3\xe7\xb4\xb0\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83 [https://docs.djangoproject.com/en/1.11/topics/db/sql/#executing-custom-sql-directly](https://docs.djangoproject.com/en/1.11/topics/db/sql/#executing-custom-sql-directly)\n\n### \xe6\x8e\x88\xe6\xac\x8a (Authentications )\n\n\xe5\x9c\xa8 REST API \xe4\xb8\xad\xef\xbc\x8c\xe6\x8e\x88\xe6\xac\x8a\xe5\xbe\x88\xe9\x87\x8d\xe8\xa6\x81\xef\xbc\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe6\xb2\x92\xe6\x9c\x89\xe6\x8e\x88\xe6\xac\x8a\xef\xbc\x8c\xe5\x88\xa5\xe4\xba\xba\xe4\xb8\x80\xe7\x9b\xb4\xe4\xbb\xbb\xe6\x84\x8f\xe4\xb8\x8d\xe5\x8f\x97\xe9\x99\x90\xe5\x88\xb6\xe7\x9a\x84\xe6\x93\x8d\xe4\xbd\x9c\xe4\xbd\xa0\xe7\x9a\x84 API \xef\xbc\x8c\xe5\xbe\x88\xe5\x8d\xb1\xe9\x9a\xaa\xef\xbc\x8c\n\n\xe6\x89\x80\xe4\xbb\xa5 DRF \xe6\x9c\x89\xe6\x8f\x90\xe4\xbe\x9b Authentications\xef\xbc\x8c\xe8\xae\x93\xe6\x88\x91\xe5\x80\x91\xe4\xbe\x86\xe8\xa9\xa6\xe8\xa9\xa6\xe7\x9c\x8b\xe5\x90\xa7~\n\n\xe9\xa6\x96\xe5\x85\x88\xef\xbc\x8c\xe8\xab\x8b\xe5\x9c\xa8 views.py \xe8\xa3\xa1\xe9\x9d\xa2\xe6\x96\xb0\xe5\xa2\x9e  permission_classes\n\n```python\n# Create your views here.\nfrom musics.models import Music\nfrom musics.serializers import MusicSerializer\n\nfrom rest_framework import viewsets\nfrom rest_framework.permissions import IsAuthenticated\n\n\n# Create your views here.\nclass MusicViewSet(viewsets.ModelViewSet):\n    queryset = Music.objects.all()\n    serializer_class = MusicSerializer\n    permission_classes = (IsAuthenticated,)\n```\n\n![alt tag](http://i.imgur.com/RbQrZLt.jpg)\n\n\xe6\x8e\xa5\xe8\x91\x97\xe5\x9c\xa8 urls.py \xe8\xa3\xa1\xe9\x9d\xa2\xe5\xa2\x9e\xe5\x8a\xa0 api-auth\n\n```python\nfrom django.conf.urls import url, include\nfrom django.contrib import admin\nfrom rest_framework.routers import DefaultRouter\nfrom musics import views\n\nrouter = DefaultRouter()\nrouter.register(r\'music\', views.MusicViewSet)\n\nurlpatterns = [\n    url(r\'^admin/\', admin.site.urls),\n    url(r\'^api/\', include(router.urls)),\n    url(r\'^api-auth/\', include(\'rest_framework.urls\', namespace=\'rest_framework\'))\n]\n```\n\n![alt tag](http://i.imgur.com/YISdOvo.jpg)\n\n\xe6\x9c\x80\xe5\xbe\x8c\xe5\x9f\xb7\xe8\xa1\x8c Django \xef\xbc\x8c \xe7\x84\xb6\xe5\xbe\x8c\xe7\x80\x8f\xe8\xa6\xbd   [http://127.0.0.1:8000/api/](http://127.0.0.1:8000/api/) \xef\xbc\x8c\xe4\xbd\xa0\xe6\x9c\x83\xe7\x99\xbc\xe7\x8f\xbe\xe5\x8f\xb3\xe4\xb8\x8a\xe8\xa7\x92\xe5\xa4\x9a\xe4\xba\x86 Log in \xe7\x9a\x84\xe6\x8c\x89\xe9\x88\x95\n\n![alt tag](http://i.imgur.com/DxgSK9q.jpg)\n\n\xe6\x88\x91\xe5\x80\x91\xe5\x85\x88\xe4\xbd\xbf\xe7\x94\xa8\xe6\x88\x91\xe5\x80\x91\xe5\x9c\xa8 [Django \xe5\x9f\xba\xe6\x9c\xac\xe6\x95\x99\xe5\xad\xb8 - \xe5\xbe\x9e\xe7\x84\xa1\xe5\x88\xb0\xe6\x9c\x89 Django-Beginners-Guide](https://github.com/twtrubiks/django-tutorial) \xe8\xa3\xa1\xe9\x9d\xa2\xe5\xad\xb8\xe5\x88\xb0\xe7\x9a\x84 \xe5\xbb\xba\xe7\xab\x8b\xe8\xb6\x85\xe7\xb4\x9a\xe4\xbd\xbf\xe7\x94\xa8\xe8\x80\x85\n\n>python manage.py createsuperuser\n\n![alt tag](http://i.imgur.com/wqacaCR.jpg)\n\n\xe8\xae\x93\xe6\x88\x91\xe5\x80\x91\xe5\x86\x8d\xe6\xac\xa1\xe4\xbd\xbf\xe7\x94\xa8 POSTMAN\xef\xbc\x8c\xe6\x88\x91\xe5\x80\x91\xe7\x94\xa8 GET \xe7\x95\xb6\xe4\xbd\x9c\xe7\xaf\x84\xe4\xbe\x8b\n\n#### GET \xe6\x8e\x88\xe6\xac\x8a\n\n![alt tag](http://i.imgur.com/MoMLRB3.jpg)\n\n\xe6\x9c\x89\xe6\xb3\xa8\xe6\x84\x8f\xe5\x88\xb0\xe5\x97\x8e? response \xe8\xaa\xaa\xe6\x88\x91\xe6\xb2\x92\xe6\x9c\x89 \xe6\x8e\x88\xe6\xac\x8a\xef\xbc\x8c\n\n\xe6\x89\x80\xe4\xbb\xa5\xe9\x80\x99\xe6\x99\x82\xe5\x80\x99\xe6\x88\x91\xe5\x80\x91\xe5\xb0\xb1\xe5\xbf\x85\xe9\xa0\x88\xe5\x86\x8d\xe5\x8a\xa0\xe4\xb8\x8a\xe6\x8e\x88\xe6\xac\x8a\xe6\x89\x8d\xe8\x83\xbd\xe6\x93\x8d\xe4\xbd\x9c API (\xe5\xa6\x82\xe4\xb8\x8b\xe5\x9c\x96)\xef\xbc\x8c\xe6\x88\x91\xe5\x80\x91\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x93\x8d\xe4\xbd\x9c API \xe4\xba\x86\n\n\xe6\x88\x91\xe7\x9a\x84 \xe5\xb8\xb3\xe8\x99\x9f/\xe5\xaf\x86\xe7\xa2\xbc \xe8\xa8\xad\xe5\xae\x9a\xe7\x82\xba twtrubiks/password123\n\n![alt tag](http://i.imgur.com/8leY8ZH.jpg)\n\n2017/12/3 \xe6\x96\xb0\xe5\xa2\x9e\n\n* [Youtube Tutorial PART 3](https://youtu.be/3qoB3RVoOvA)\n\n\xe4\xb8\x8a\xe9\x9d\xa2\xe7\x9a\x84\xe6\x96\xb9\xe6\xb3\x95\xe6\x98\xaf\xe9\x87\x9d\xe5\xb0\x8d\xe6\x95\xb4\xe5\x80\x8b `class` \xe8\xa8\xad\xe5\xae\x9a\xe6\xac\x8a\xe9\x99\x90\xef\xbc\x8c\xe9\x82\xa3\xe6\x88\x91\xe5\x80\x91\xe5\x8f\xaf\xe4\xb8\x8d\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xbe\x9d\xe7\x85\xa7 method \xe5\x91\xa2\xef\xbc\x9f\n\n\xe5\xb9\xbe\xe5\x80\x8b\xe4\xbe\x8b\xe5\xad\x90\xef\xbc\x8c\xe6\x88\x91\xe5\xb8\x8c\xe6\x9c\x9b GET \xe6\x99\x82\xe4\xb8\x8d\xe7\x94\xa8\xe6\xac\x8a\xe9\x99\x90\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf POST \xe6\x99\x82\xe5\xb0\xb1\xe9\x9c\x80\xe8\xa6\x81\xe6\xac\x8a\xe9\x99\x90\xef\xbc\x8c\xe9\x80\x99\xe6\xa8\xa3\xe8\xa9\xb2\xe6\x80\x8e\xe9\xba\xbc\xe5\x81\x9a\xe5\x91\xa2\xef\xbc\x9f\n\n\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x8f\x83\xe8\x80\x83 shares/[views.py](https://github.com/twtrubiks/django-rest-framework-tutorial/blob/master/shares/views.py)\n\n```python\nclass ShareViewSet(viewsets.ModelViewSet):\n    queryset = Share.objects.all()\n    serializer_class = ShareSerializer\n    parser_classes = (JSONParser,)\n\n    def get_permissions(self):\n        if self.action in (\'create\',):\n            self.permission_classes = [IsAuthenticated]\n        return [permission() for permission in self.permission_classes]\n\n    # [GET] api/shares/\n    def list(self, request, **kwargs):\n        users = Share.objects.all()\n        serializer = ShareSerializer(users, many=True)\n\n        return Response(serializer.data, status=status.HTTP_200_OK)\n\n    # [POST] api/shares/\n    def create(self, request, **kwargs):\n        name = request.data.get(\'name\')\n        users = Share.objects.create(name=name)\n        serializer = ShareSerializer(users)\n\n        return Response(serializer.data, status=status.HTTP_201_CREATED)\n```\n\n\xe9\x80\x8f\xe9\x81\x8e`get_permissions`\xe4\xbe\x86\xe6\xb1\xba\xe5\xae\x9a\xe6\x98\xaf\xe5\x90\xa6\xe9\x9c\x80\xe8\xa6\x81\xe6\xac\x8a\xe9\x99\x90\xef\xbc\x88\xe5\x9c\xa8\xe9\x80\x99\xe8\xa3\xa1\xe8\xa8\xad\xe5\xae\x9a `create`\xef\xbc\x8c \xe4\xb9\x9f\xe5\xb0\xb1\xe6\x98\xaf POST\xef\xbc\x89\xe3\x80\x82\n\n\xe9\x80\x99\xe5\x80\x8b\xe4\xbe\x8b\xe5\xad\x90\xe5\xb0\xb1\xe6\x98\xaf **GET** \xe6\x99\x82**\xe4\xb8\x8d\xe7\x94\xa8\xe6\xac\x8a\xe9\x99\x90**\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf **POST** \xe6\x99\x82\xe5\xb0\xb1**\xe9\x9c\x80\xe8\xa6\x81\xe6\xac\x8a\xe9\x99\x90**\xe3\x80\x82\n\n\xe6\x9b\xb4\xe5\xa4\x9a\xe8\xa9\xb3\xe7\xb4\xb0\xe4\xbb\x8b\xe7\xb4\xb9\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83\xe5\xae\x98\xe7\xb6\xb2 [authentication](http://www.django-rest-framework.org/api-guide/authentication/)\n\n### Parsers\n\n\xe5\x9c\xa8 REST framework \xe4\xb8\xad\xe6\x9c\x89\xe4\xb8\x80\xe5\x80\x8b [Parser classes](http://www.django-rest-framework.org/api-guide/parsers/#parsers) \xef\xbc\x8c\xe9\x80\x99\xe5\x80\x8b  Parser\nclasses \xe4\xb8\xbb\xe8\xa6\x81\xe6\x98\xaf\xe8\x83\xbd\xe6\x8e\xa7\xe5\x88\xb6\xe6\x8e\xa5\xe6\x94\xb6\xe7\x9a\x84 Content-Type \xef\xbc\x8c\n\n\xe4\xbe\x8b\xe5\xa6\x82\xe8\xaa\xaa\xe6\x88\x91\xe8\xa6\x8f\xe5\xae\x9a Content-Type \xe5\x8f\xaa\xe6\x8e\xa5\xe5\x8f\x97 application/json \xef\xbc\x8c\xe9\x80\x99\xe6\xa8\xa3\xe4\xbd\xa0\xe5\xb0\xb1\xe4\xb8\x8d\xe8\x83\xbd\xe5\x82\xb3\xe5\x85\xb6\xe4\xbb\x96\xe7\x9a\x84 Content-Type ( \xe8\x88\x89\xe4\xbe\x8b : text/plain ) \xe3\x80\x82\n\n\xe9\x80\x9a\xe5\xb8\xb8\xe5\xa6\x82\xe6\x9e\x9c\xe6\xb2\x92\xe6\x9c\x89\xe7\x89\xb9\xe5\x88\xa5\xe5\x8e\xbb\xe8\xa8\xad\xe5\xae\x9a \xef\xbc\x8c\xe4\xb8\x80\xe8\x88\xac\xe9\xa0\x90\xe8\xa8\xad\xe6\x98\xaf\xe4\xbd\xbf\xe7\x94\xa8 application / x-www-form-urlencode \xef\xbc\x8c\xe4\xb8\x8d\xe9\x81\x8e\xe9\xa0\x90\xe8\xa8\xad\xe7\x9a\x84\xe5\x8f\xaf\xe8\x83\xbd\xe4\xb8\x8d\xe6\x98\xaf\xe4\xbd\xa0\xe6\x83\xb3\xe8\xa6\x81\xe7\x9a\x84\xe6\x88\x96\xe6\x98\xaf\n\n\xe8\xaa\xaa\xe4\xbd\xa0\xe6\x83\xb3\xe8\xa6\x81\xe8\xa8\xad\xe8\xa8\x88\xe5\x8f\xaa\xe5\x85\x81\xe8\xa8\xb1\xe8\xa6\x8f\xe7\xaf\x84\xe4\xb8\x80\xe7\xa8\xae Content-Type \xe3\x80\x82\n\n\xe8\xa8\xad\xe5\xae\x9a Parsers \xe4\xb9\x9f\xe5\xbe\x88\xe7\xb0\xa1\xe5\x96\xae\xef\xbc\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe4\xbd\xa0\xe5\xb8\x8c\xe6\x9c\x9b\xe5\x85\xa8\xe5\x9f\x9f\xe7\x9a\x84\xe8\xa8\xad\xe5\xae\x9a\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x8a\xa0\xe5\x9c\xa8 [settings.py](https://github.com/twtrubiks/django-rest-framework-tutorial/blob/master/django_rest_framework_tutorial/settings.py)\xef\xbc\x8c\n\n\xe9\x80\x99\xe6\xa8\xa3\xe5\xb0\xb1\xe4\xbb\xa3\xe8\xa1\xa8\xe6\x88\x91\xe5\x8f\xaa\xe5\x85\x81\xe8\xa8\xb1 Content-Type  \xe6\x98\xaf application/json \xe3\x80\x82\n\n```python\nREST_FRAMEWORK = {\n    \'DEFAULT_PARSER_CLASSES\': (\n        \'rest_framework.parsers.JSONParser\',\n    )\n}\n```\n\n\xe4\xb9\x9f\xe5\x8f\xaf\xe4\xbb\xa5\xe9\x87\x9d\xe5\xb0\x8d\xe7\x89\xb9\xe5\xae\x9a view \xe6\x88\x96 viewsets \xe5\x8a\xa0\xe4\xbb\xa5\xe8\xa8\xad\xe5\xae\x9a \xef\xbc\x8c\xe7\x9b\xb4\xe6\x8e\xa5\xe5\x9c\xa8 [views.py](https://github.com/twtrubiks/django-rest-framework-tutorial/blob/master/musics/views.py) \xe5\x8a\xa0\xe4\xb8\x8a parser_classes \xe5\x8d\xb3\xe5\x8f\xaf\n\n```python\nclass MusicViewSet(viewsets.ModelViewSet):\n    queryset = Music.objects.all()\n    serializer_class = MusicSerializer\n    permission_classes = (IsAuthenticated,)\n    parser_classes = (JSONParser,)\n```\n\n\xe7\x95\xb6\xe7\x84\xb6\xef\xbc\x8cparser_classes \xe4\xb8\x8d\xe5\x8f\xaa\xe6\x9c\x89 [JSONParser](http://www.django-rest-framework.org/api-guide/parsers/#jsonparser)\xef\xbc\x8c\xe9\x82\x84\xe6\x9c\x89 [FormParser](http://www.django-rest-framework.org/api-guide/parsers/#formparser) \xef\xbc\x8c [MultiPartParser](http://www.django-rest-framework.org/api-guide/parsers/#multipartparser) \xe7\xad\x89\xe7\xad\x89\n\n\xe6\x9b\xb4\xe5\xa4\x9a\xe8\xb3\x87\xe8\xa8\x8a\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83\n[http://www.django-rest-framework.org/api-guide/parsers/#parsersr](http://www.django-rest-framework.org/api-guide/parsers/#parsersr)\n\n### Extra link and actions\n\n* [Youtube Tutorial PART 4](https://youtu.be/yvH1-jx_-z4)\n\n\xe6\x88\x91\xe5\x80\x91\xe4\xbd\xbf\xe7\x94\xa8 REST framework \xe6\x99\x82\xef\xbc\x8c\xe9\x9b\xa3\xe5\x85\x8d\xe6\x9c\x83\xe6\x9c\x89\xe6\x83\xb3\xe8\xa6\x81\xe5\x88\xb6\xe5\xae\x9a\xe9\xa1\x8d\xe5\xa4\x96\xe7\x9a\x84 route \xef\xbc\x8c\xe9\x80\x99\xe6\x99\x82\xe5\x80\x99\xe6\x88\x91\xe5\x80\x91\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x88\xa9\xe7\x94\xa8\n`@detail_route` \xe6\x88\x96 `@list_route`\xe3\x80\x82\n\n\xe7\xaf\x84\xe4\xbe\x8b\xe7\xa8\x8b\xe5\xbc\x8f\xe7\xa2\xbc\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83 [views.py](https://github.com/twtrubiks/django-rest-framework-tutorial/blob/master/musics/views.py)\n\n***detail_route***\n\n\xe4\xbd\xbf\xe7\x94\xa8\xe6\x96\xb9\xe6\xb3\x95\xe5\xbe\x88\xe7\xb0\xa1\xe5\x96\xae\xef\xbc\x8c\xe7\x9b\xb4\xe6\x8e\xa5\xe5\x8a\xa0\xe4\xb8\x8a\xe8\xa3\x9d\xe9\xa3\xbe\xe5\x99\xa8 `@detail_route`  \xe5\x8d\xb3\xe5\x8f\xaf\n\n```python\n@detail_route(methods=[\'get\'])\ndef detail(self, request, pk=None):\n    music = get_object_or_404(Music, pk=pk)\n    result = {\n        \'singer\': music.singer,\n        \'song\': music.song\n    }\n\n    return Response(result, status=status.HTTP_200_OK)\n```\n\n\xe4\xbb\xa5\xe4\xb8\x8a\xe9\x9d\xa2\xe9\x80\x99\xe5\x80\x8b\xe4\xbe\x8b\xe5\xad\x90\xe4\xbe\x86\xe8\xaa\xaa\xef\xbc\x8c URL pattern:  `/api/music/{pk}/detail/`\xef\xbc\x8c\n\n\xe5\xa6\x82\xe6\x9e\x9c\xe4\xbd\xa0\xe6\xb2\x92\xe6\x9c\x89\xe9\xa1\x8d\xe5\xa4\x96\xe6\x8c\x87\xe5\xae\x9a\xef\xbc\x8c\xe9\x80\x9a\xe5\xb8\xb8\xe4\xbd\xa0\xe7\x9a\x84 url_path \xe5\xb0\xb1\xe6\x98\xaf\xe4\xbd\xa0 function \xe5\x91\xbd\xe5\x90\x8d\xe7\x9a\x84\xe5\x90\x8d\xe7\xa8\xb1\xef\xbc\x8c\n\n\xe7\x95\xb6\xe7\x84\xb6\xef\xbc\x8c\xe6\x88\x91\xe5\x80\x91\xe4\xb9\x9f\xe5\x8f\xaf\xe4\xbb\xa5\xe8\x87\xaa\xe5\xb7\xb1\xe9\xa1\x8d\xe5\xa4\x96\xe5\xae\x9a\xe7\xbe\xa9 url_path\xef\xbc\x8c\xe5\x8f\xaa\xe9\x9c\x80\xe8\xa6\x81\xe5\x8a\xa0\xe4\xb8\x8a  url_path \xe5\x8f\x83\xe6\x95\xb8\xef\xbc\x8c\n\n\xe7\xaf\x84\xe4\xbe\x8b\xe5\xa6\x82\xe4\xb8\x8b\n\n```python\n@detail_route(methods=[\'get\'], url_path=\'detail_self\')\ndef detail(self, request, pk=None):\n    music = get_object_or_404(Music, pk=pk)\n    result = {\n        \'singer\': music.singer,\n        \'song\': music.song\n    }\n\n    return Response(result, status=status.HTTP_200_OK)\n```\n\n\xe4\xbb\xa5\xe4\xb8\x8a\xe9\x9d\xa2\xe9\x80\x99\xe5\x80\x8b\xe4\xbe\x8b\xe5\xad\x90\xe4\xbe\x86\xe8\xaa\xaa\xef\xbc\x8c URL pattern:  `/api/music/{pk}/detail_self/`\xef\xbc\x8c\n\n\xe9\x80\x99\xe6\xa8\xa3\xe5\xb0\xb1\xe4\xb8\x8d\xe6\x9c\x83\xe4\xbd\xbf\xe7\x94\xa8\xe4\xbd\xa0\xe7\x9a\x84 function \xe5\x81\x9a\xe7\x82\xba url_path \xe4\xba\x86\xe3\x80\x82\n\n***list_route***\n\n\xe4\xbd\xbf\xe7\x94\xa8\xe6\x96\xb9\xe6\xb3\x95\xe5\xbe\x88\xe7\xb0\xa1\xe5\x96\xae\xef\xbc\x8c\xe7\x9b\xb4\xe6\x8e\xa5\xe5\x8a\xa0\xe4\xb8\x8a\xe8\xa3\x9d\xe9\xa3\xbe\xe5\x99\xa8 `@list_route`  \xe5\x8d\xb3\xe5\x8f\xaf\n\n```python\n@list_route(methods=[\'get\'])\ndef all_singer(self, request):\n    music = Music.objects.values_list(\'singer\', flat=True).distinct()\n    return Response(music, status=status.HTTP_200_OK)\n```\n\n\xe4\xbb\xa5\xe4\xb8\x8a\xe9\x9d\xa2\xe9\x80\x99\xe5\x80\x8b\xe4\xbe\x8b\xe5\xad\x90\xe4\xbe\x86\xe8\xaa\xaa\xef\xbc\x8cURL pattern: `/api/music/all_singer/`\n\n\xe4\xbb\x96\xe4\xb9\x9f\xe6\x9c\x89 url_path \xe7\x9a\x84\xe7\x89\xb9\xe6\x80\xa7\xef\xbc\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe8\xa6\x81\xe8\x87\xaa\xe5\xae\x9a\xe7\xbe\xa9\xef\xbc\x8c\xe5\x8f\xaa\xe9\x9c\x80\xe8\xa6\x81\xe5\x8a\xa0\xe4\xb8\x8a url_path \xe5\x8f\x83\xe6\x95\xb8\xe3\x80\x82\n\n\xe7\x9c\x8b\xe5\xae\x8c\xe4\xba\x86\xe4\xbb\xa5\xe4\xb8\x8a\xe7\x9a\x84\xe4\xbe\x8b\xe5\xad\x90\xef\xbc\x8c\xe7\x9b\xb8\xe4\xbf\xa1\xe5\xa4\xa7\xe5\xae\xb6\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x88\x86\xe8\xbe\xa8 `@detail_route` \xe4\xbb\xa5\xe5\x8f\x8a `@list_route`\xe7\x9a\x84\xe4\xb8\x8d\xe5\x90\x8c\xe3\x80\x82\n\n\xe6\x9b\xb4\xe5\xa4\x9a\xe8\xb3\x87\xe8\xa8\x8a\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83 [http://www.django-rest-framework.org/api-guide/routers/#extra-link-and-actions](http://www.django-rest-framework.org/api-guide/routers/#extra-link-and-actions)\n\n### Testing\n\n\xe5\x85\x88\xe7\xb0\xa1\xe5\x96\xae\xe4\xbb\x8b\xe7\xb4\xb9\xe4\xb8\x80\xe4\xb8\x8b\xe5\xa4\xa7\xe5\xae\xb6\xe5\xb8\xb8\xe8\x81\xbd\xe5\x88\xb0\xe7\x9a\x84 ***TDD*** \xe4\xbb\xa5\xe5\x8f\x8a ***BDD***\n\nTDD : Test-Driven Development\xe3\x80\x82\n\nBDD : Behavior-driven development \xe3\x80\x82\n\n\xe8\xa9\xb3\xe7\xb4\xb0\xe5\x9c\xb0\xe8\xab\x8b\xe5\xa4\xa7\xe5\xae\xb6\xe5\x86\x8d\xe8\x87\xaa\xe8\xa1\x8c GOOGLE\xef\xbc\x8c\xe9\x80\x99\xe9\x82\x8a\xe8\xa6\x81\xe8\xac\x9b DRF \xe7\x9a\x84 Testing\xef\xbc\x8c\n\n\xe4\xbd\xa0\xe4\xb9\x9f\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x8f\x83\xe8\x80\x83\xe5\xae\x98\xe7\xb6\xb2\xe7\x9a\x84\xe6\x95\x99\xe5\xad\xb8\xe3\x80\x80[http://www.django-rest-framework.org/api-guide/testing/](http://www.django-rest-framework.org/api-guide/testing/)\n\n\xe6\x88\x96\xe6\x98\xaf\xe4\xbd\xa0\xe4\xb9\x9f\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x8f\x83\xe8\x80\x83\xe6\x88\x91\xe5\xaf\xab\xe7\x9a\x84\xe7\xaf\x84\xe4\xbe\x8b\n[tests.py](https://github.com/twtrubiks/django-rest-framework-tutorial/blob/master/musics/tests.py)\n\n#### Test Case Scenarios\n\n* Create a music with API.\n* Retrieve a music with API.\n* Partial Update a music with API.\n* Update a music with API.\n* Delete a music with API.\n* Retrieve a music detail with API.\n* Get All singer with API.\n\n#### API Endpoints\n\nMusic\n\n* ***/api/music/ (Music create and list endpoint)***\n* ***/api/music/{music-id}/ (Music retrieve, update and partial update and destroy endpoint)***\n\n* ***/api/music/{music-id}/detail/ (Music retrieve detail endpoint)***\n\n* ***/api/music/all_singer/ (Music list singer endpoint)***\n\nUsage\n\n```python\npython manage.py test\n```\n\n![img](http://i.imgur.com/OTZ1IRD.png)\n\n\xe5\x9b\xa0\xe7\x82\xba\xe6\x9c\xac\xe7\xaf\x84\xe4\xbe\x8b\xe5\x89\x9b\xe5\xa5\xbd\xe5\x8f\xaa\xe6\x9c\x89\xe5\xbb\xba\xe7\xab\x8b\xe4\xb8\x80\xe5\x80\x8b APP \xef\xbc\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe4\xbd\xa0\xe6\x9c\x89\xe5\xbe\x88\xe5\xa4\x9a\xe5\x80\x8b APP \xef\xbc\x8c\xe4\xbd\xa0\xe4\xb9\x9f\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x8c\x87\xe5\xae\x9a\n\n\xe4\xbd\xa0\xe8\xa6\x81\xe6\xb8\xac\xe8\xa9\xa6\xe7\x9a\x84 APP\xef\xbc\x8c\xe7\xaf\x84\xe4\xbe\x8b\xe5\xa6\x82\xe4\xb8\x8b\n\n```python\npython manage.py test [app \xe5\x90\x8d\xe7\xa8\xb1]\n```\n\n```python\npython manage.py test musics\n```\n\n### Versioning\n\n* [Youtube Tutorial PART 6](https://youtu.be/jONV4Bfjq6g)\n\n\xe6\x9c\x89\xe6\x99\x82\xe5\x80\x99\xe6\x88\x91\xe5\x80\x91\xe5\x8f\xaf\xe8\x83\xbd\xe9\x9c\x80\xe8\xa6\x81\xe7\x89\x88\xe6\x9c\xac\xe4\xbe\x86\xe6\x8e\xa7\xe5\x88\xb6 API \xef\xbc\x8c\xe7\x95\xb6\xe7\x84\xb6\xe6\xb2\x92\xe7\x89\x88\xe6\x9c\xac\xe7\x9a\x84 API \xe4\xb9\x9f\xe6\x98\xaf\xe5\x8f\xaf\xe4\xbb\xa5\xe8\xa2\xab\xe6\x8e\xa5\xe5\x8f\x97\xe7\x9a\x84\xef\xbc\x8c\n\n\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83 [Non-versioned systems can also be appropriate](https://www.infoq.com/articles/roy-fielding-on-versioning)\xe3\x80\x82\n\n\xe8\xa6\x81\xe8\xa8\xad\xe5\xae\x9a versioning\xef\xbc\x8c\xe8\xab\x8b\xe5\x85\x88\xe5\x88\xb0 [settings.py](https://github.com/twtrubiks/django-rest-framework-tutorial/blob/master/django_rest_framework_tutorial/settings.py) \xe5\x8a\xa0\xe5\x85\xa5\xe4\xb8\x8b\xe6\x96\xb9\xe8\xa8\xad\xe5\xae\x9a\xef\xbc\x8c\n\n```python\nREST_FRAMEWORK = {\n    \'DEFAULT_VERSIONING_CLASS\': \'rest_framework.versioning.AcceptHeaderVersioning\'\n}\n```\n\n\xe6\x9c\x89\xe5\xbe\x88\xe5\xa4\x9a\xe6\x96\xb9\xe6\xb3\x95\xe5\x8f\xaf\xe4\xbb\xa5\xe5\xaf\xa6\xe7\x8f\xbe\xef\xbc\x8c\xe5\x88\x86\xe5\x88\xa5\xe7\x82\xba\n\n`AcceptHeaderVersioning` `URLPathVersioning` `NamespaceVersioning` `HostNameVersioning` `QueryParameterVersioning`\xef\xbc\x8c\n\n\xe7\x94\xb1\xe6\x96\xbc `AcceptHeaderVersioning` \xe9\x80\x99\xe5\x80\x8b\xe6\x96\xb9\xe6\xb3\x95\xe9\x80\x9a\xe5\xb8\xb8\xe8\xa2\xab\xe8\xaa\x8d\xe7\x82\xba\xe6\x98\xaf\xe6\x9c\x80\xe4\xbd\xb3\xe7\x9a\x84\xe8\xa8\xad\xe8\xa8\x88\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe9\x80\x99\xe9\x82\x8a\xe5\xb0\xb1\xe7\x94\xa8\xe5\xae\x83\xe4\xbe\x86\xe4\xbb\x8b\xe7\xb4\xb9\xe3\x80\x82\n\n\xe4\xbd\xbf\xe7\x94\xa8\xe5\xba\x8f\xe5\x88\x97\xe5\x8c\x96\xe7\x9a\x84\xe4\xb8\x8d\xe5\x90\x8c\xe4\xbe\x86\xe4\xbb\x8b\xe7\xb4\xb9 Versioning\xef\xbc\x8c[views.py](https://github.com/twtrubiks/django-rest-framework-tutorial/blob/master/musics/views.py) \xe5\xa6\x82\xe4\xb8\x8b\xef\xbc\x8c\n\n```python\n# /api/music/version_api/\n@list_route(methods=[\'get\'])\ndef version_api(self, request):\n    music = Music.objects.all()\n    if self.request.version == \'1.0\':\n        serializer = MusicSerializerV1(music, many=True)\n    else:\n        serializer = MusicSerializer(music, many=True)\n    return Response(serializer.data, status=status.HTTP_200_OK)\n```\n\n\xe5\x85\xb6\xe5\xaf\xa6\xe4\xb9\x9f\xe5\xbe\x88\xe7\xb0\xa1\xe5\x96\xae\xef\xbc\x8c\xe5\xb0\xb1\xe6\x98\xaf\xe5\x88\xa4\xe6\x96\xb7 `self.request.version` \xe6\x98\xaf\xe5\x90\xa6\xe6\x9c\x89\xe5\x80\xbc\xef\xbc\x8c\n\n\xe5\xa6\x82\xe6\x9e\x9c header \xe6\xb2\x92\xe6\x9c\x89\xe5\xb8\xb6\xe5\x85\xa5\xe7\x89\x88\xe6\x9c\xac\xe8\x99\x9f\xef\xbc\x8c\xe5\xb0\xb1\xe6\x9c\x83\xe4\xbd\xbf\xe7\x94\xa8 `MusicSerializer` \xe9\x80\xb2\xe8\xa1\x8c\xe5\xba\x8f\xe5\x88\x97\xe5\x8c\x96\xef\xbc\x8c\n\n![alt tag](https://i.imgur.com/kOuzqgG.png)\n\n\xe5\xa6\x82\xe6\x9e\x9c header \xe6\x9c\x89\xe5\xb8\xb6\xe5\x85\xa5\xe7\x89\x88\xe6\x9c\xac\xe8\x99\x9f\xef\xbc\x8c\xe5\xb0\xb1\xe6\x9c\x83\xe4\xbd\xbf\xe7\x94\xa8 `MusicSerializerV1` \xe9\x80\xb2\xe8\xa1\x8c\xe5\xba\x8f\xe5\x88\x97\xe5\x8c\x96\xe3\x80\x82\n\n![alt tag](https://i.imgur.com/kGRJmt2.png)\n\n\xe5\x85\xb6\xe4\xbb\x96\xe7\x9a\x84\xe4\xbd\xbf\xe7\x94\xa8\xe6\x96\xb9\xe6\xb3\x95\xef\xbc\x8c\xe8\xab\x8b\xe5\x8f\x83\xe8\x80\x83\xe5\xae\x98\xe7\xb6\xb2 [Versioning](http://www.django-rest-framework.org/api-guide/versioning/)\xe3\x80\x82\n\n### Model Meta options\n\n`app_label`\n\n\xe9\x82\x84\xe8\xa8\x98\xe5\xbe\x97\xe6\x96\x87\xe7\xab\xa0\xe5\x89\x8d\xe9\x9d\xa2\xe6\x8f\x90\xe5\x88\xb0\xe7\x9a\x84 `INSTALLED_APPS` \xe5\x97\x8e ? \xe5\xa6\x82\xe6\x9e\x9c\xe4\xbd\xa0\xe6\xb2\x92\xe6\x9c\x89\xe5\xb0\x87 model \xe5\xaf\xab\xe5\x9c\xa8 `INSTALLED_APPS` \xe4\xb8\xad\xef\xbc\x8c\n\n\xe9\x80\x99\xe6\x99\x82\xe5\x80\x99\xe4\xbd\xa0\xe5\xb0\xb1\xe5\xbf\x85\xe9\xa0\x88\xe5\x9c\xa8 Model Meta \xe4\xb8\xad\xe5\xae\xa3\xe5\x91\x8a ( \xe5\x90\xa6\xe5\x89\x87\xe6\x9c\x83\xe5\xa0\xb1\xe9\x8c\xaf )\xef\xbc\x8c\xe5\x83\x8f\xe4\xb8\x8b\xe9\x9d\xa2\xe9\x80\x99\xe6\xa8\xa3\n\n```python\nclass Music(models.Model):\n    song = models.TextField()\n    singer = models.TextField()\n    last_modify_date = models.DateTimeField(auto_now=True)\n    created = models.DateTimeField(auto_now_add=True)\n\n    class Meta:\n        db_table = "music"\n        app_label = "music"\n```\n\n\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83 [https://docs.djangoproject.com/en/1.11/ref/models/options/#app-label](https://docs.djangoproject.com/en/1.11/ref/models/options/#app-label)\n\n\xe9\x80\x99\xe9\x82\x8a\xe7\x9a\x84\xe6\x9d\xb1\xe8\xa5\xbf\xe5\xbe\x88\xe5\xa4\x9a\xef\xbc\x8c\xe6\x88\x91\xe6\x9c\x89\xe7\x94\xa8\xe5\x88\xb0\xe5\xb0\xb1\xe6\x9c\x83\xe6\x85\xa2\xe6\x85\xa2\xe8\xa3\x9c :kissing_closed_eyes:\n\n\xe6\x9b\xb4\xe5\xa4\x9a\xe8\xa9\xb3\xe7\xb4\xb0\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83 [https://docs.djangoproject.com/en/1.11/ref/models/options/#model-meta-options](https://docs.djangoproject.com/en/1.11/ref/models/options/#model-meta-options)\n\n### Multiple databases\n\n\xe9\x80\x99\xe9\x82\x8a\xe7\x9a\x84\xe9\x83\xa8\xe5\x88\x86\xe4\xb9\x9f\xe8\xa0\xbb\xe5\xa4\x9a\xe7\x9a\x84\xef\xbc\x8c\xe6\x9c\x89\xe7\xa9\xba\xe6\x88\x91\xe6\x9c\x83\xe8\xa3\x9c :kissing_closed_eyes:\n\n\xe6\x9b\xb4\xe5\xa4\x9a\xe8\xa9\xb3\xe7\xb4\xb0\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83 [https://docs.djangoproject.com/en/2.0/topics/db/multi-db/](https://docs.djangoproject.com/en/2.0/topics/db/multi-db/)\n\n#### Automatic database routing\n\n\xe9\x80\x99\xe9\x83\xa8\xe5\x88\x86\xe6\x88\x91\xe5\x85\x88\xe7\xb0\xa1\xe5\x96\xae\xe5\xaf\xab\xe5\x80\x8b\xe7\xaf\x84\xe4\xbe\x8b\xef\xbc\x8c\xe4\xbb\xa5\xe5\xbe\x8c\xe6\x9c\x89\xe6\x83\x85\xe5\xa2\x83\xe6\x88\x91\xe5\x9c\xa8\xe5\xb0\x87\xe7\xb4\xb0\xe7\xaf\x80\xe8\xa3\x9c\xe4\xb8\x8a\xe4\xbe\x86:smiley:\n\n\xe6\x9b\xb4\xe5\xa4\x9a\xe8\xa9\xb3\xe7\xb4\xb0\xe5\x8f\xaf\xe5\x8f\x83\xe8\x80\x83 [https://docs.djangoproject.com/en/2.0/topics/db/multi-db/#automatic-database-routing)](https://docs.djangoproject.com/en/2.0/topics/db/multi-db/#automatic-database-routing)\n\napi/[routers.py](https://github.com/twtrubiks/django-rest-framework-tutorial/blob/master/api/routers.py)\n\n```python\nclass AuthRouter:\n    """\n    A router to control all database operations on models in the\n    auth application.\n    """\n    def db_for_read(self, model, **hints):\n        """\n        Attempts to read auth models go to auth_db.\n        """\n        if model._meta.app_label == \'musics\':\n            return \'default\'\n        return None\n\n    def db_for_write(self, model, **hints):\n        """\n        Attempts to write auth models go to auth_db.\n        """\n        if model._meta.app_label == \'auth\':\n            return \'auth_db\'\n        return None\n```\n\n\xe5\x9c\xa8 [settings.py](https://github.com/twtrubiks/django-rest-framework-tutorial/blob/master/django_rest_framework_tutorial/settings.py) \xe4\xb8\xad\xe5\x8a\xa0\xe4\xb8\x8a\xe9\x80\x99\xe6\xae\xb5\n\n```python\nDATABASE_ROUTERS = [\'api.routers.AuthRouter\']\n```\n\n## \xe5\xbe\x8c\xe8\xa8\x98\n\n\xe6\x81\xad\xe5\x96\x9c\xe4\xbd\xa0\xef\xbc\x8c\xe5\x9f\xba\xe6\x9c\xac\xe4\xb8\x8a\xe5\x88\xb0\xe9\x80\x99\xe8\xa3\xa1\xef\xbc\x8c\xe5\xb7\xb2\xe7\xb6\x93\xe6\x98\xaf\xe4\xb8\x80\xe5\x80\x8b\xe9\x9d\x9e\xe5\xb8\xb8\xe7\xb0\xa1\xe5\x96\xae\xe7\x9a\x84  [Django-REST-framework](http://www.django-rest-framework.org/) \xef\xbc\x8c\xe8\xb6\x95\xe5\xbf\xab\xe5\x8b\x95\xe6\x89\x8b\xe4\xb8\x8b\xe5\x8e\xbb\xe7\x8e\xa9\xe7\x8e\xa9\xe5\x90\xa7 :stuck_out_tongue:\n\n\xe5\xa6\x82\xe6\x9e\x9c\xe6\x84\x8f\xe7\x8c\xb6\xe6\x9c\xaa\xe7\x9b\xa1\xef\xbc\x8c\xe5\xbb\xb6\xe4\xbc\xb8\xe9\x96\xb1\xe8\xae\x80 :satisfied:\n\n* [Django-REST-framework \xe5\x9f\xba\xe6\x9c\xac\xe6\x95\x99\xe5\xad\xb8 - \xe5\xbe\x9e\xe7\x84\xa1\xe5\x88\xb0\xe6\x9c\x89 DRF-Beginners-Guide](https://github.com/twtrubiks/django-rest-framework-tutorial)\n\n* [DRF-dataTable-Example-server-side](https://github.com/twtrubiks/DRF-dataTable-Example-server-side) - DataTables Example (server-side) - Python Django REST framework\n\n* [Deploying_Django_To_Heroku_Tutorial](https://github.com/twtrubiks/Deploying_Django_To_Heroku_Tutorial) - Deploying a Django App To Heroku Tutorial\n\n* [\xe7\xb5\x90\xe5\x90\x88 Django + jQuery \xe5\xaf\xa6\xe7\x8f\xbe\xe7\x84\xa1\xe9\x99\x90\xe6\x8d\xb2\xe8\xbb\xb8 Infinite Scroll \xf0\x9f\x93\x9d](https://github.com/twtrubiks/ptt_beauty_infinite_scroll)\n\n## \xe5\x9f\xb7\xe8\xa1\x8c\xe7\x92\xb0\xe5\xa2\x83\n\n* Python 3.4.3\n\n## Reference\n\n* [Django](https://www.djangoproject.com/)\n* [Django-REST-framework](http://www.django-rest-framework.org/)\n\n## Donation\n\n\xe6\x96\x87\xe7\xab\xa0\xe9\x83\xbd\xe6\x98\xaf\xe6\x88\x91\xe8\x87\xaa\xe5\xb7\xb1\xe7\xa0\x94\xe7\xa9\xb6\xe5\x85\xa7\xe5\x8c\x96\xe5\xbe\x8c\xe5\x8e\x9f\xe5\x89\xb5\xef\xbc\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe6\x9c\x89\xe5\xb9\xab\xe5\x8a\xa9\xe5\x88\xb0\xe6\x82\xa8\xef\xbc\x8c\xe4\xb9\x9f\xe6\x83\xb3\xe9\xbc\x93\xe5\x8b\xb5\xe6\x88\x91\xe7\x9a\x84\xe8\xa9\xb1\xef\xbc\x8c\xe6\xad\xa1\xe8\xbf\x8e\xe8\xab\x8b\xe6\x88\x91\xe5\x96\x9d\xe4\xb8\x80\xe6\x9d\xaf\xe5\x92\x96\xe5\x95\xa1:laughing:\n\n![alt tag](https://i.imgur.com/LRct9xa.png)\n\n[\xe8\xb4\x8a\xe5\x8a\xa9\xe8\x80\x85\xe4\xbb\x98\xe6\xac\xbe](https://payment.opay.tw/Broadcaster/Donate/9E47FDEF85ABE383A0F5FC6A218606F8)\n\n## License\n\nMIT license\n'