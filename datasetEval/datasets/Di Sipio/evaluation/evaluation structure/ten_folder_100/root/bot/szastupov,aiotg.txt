b'aiotg\n=====\n\n.. image:: https://travis-ci.org/szastupov/aiotg.svg?branch=master\n    :target: https://travis-ci.org/szastupov/aiotg\n\nAsynchronous Python API for building Telegram bots, featuring:\n\n- Easy and declarative API\n- Hassle-free setup - no need for SSL certificates or static IP\n- Built-in support for analytics via chatbase.com\n- Automatic handling of Telegram API throttling or timeouts\n\nInstall it with pip:\n\n.. code:: sh\n\n    pip install aiotg\n\nThen you can create a new bot in few lines:\n\n.. code:: python\n\n    from aiotg import Bot, Chat\n\n    bot = Bot(api_token="...")\n\n    @bot.command(r"/echo (.+)")\n    def echo(chat: Chat, match):\n        return chat.reply(match.group(1))\n\n    bot.run()\n\nNow run it with a proper API\\_TOKEN and it should reply to /echo commands.\n\n.. note:: Type annotations are not required but will help your editor/IDE to provide code completion.\n\nThe example above looks like a normal synchronous code but it actually returns a coroutine.\nIf you want to make an external request (and that\'s what bots usually do) just use aiohttp and async/await syntax:\n\n.. code:: python\n\n    import aiohttp\n    from aiotg import Bot, Chat\n\n    bot = Bot(api_token="...")\n\n    @bot.command("bitcoin")\n    async def bitcoin(chat: Chat, match):\n        url = "https://apiv2.bitcoinaverage.com/indices/global/ticker/BTCUSD"\n        async with aiohttp.ClientSession() as session:\n            response = await session.get(url)\n            info = await response.json()\n            await chat.send_text(str(info["averages"]["day"]))\n\n    bot.run()\n\n\nBut what if you just want to write a quick integration and don\'t need to provide a conversational interface? We\'ve got you covered!\nYou can send messages (or any other media) by constructing a Chat object with user_id or channel name. We even saved you some extra keystrokes by providing handy Channel constructors:\n\n.. code:: python\n\n    ...\n    channel = bot.channel("@yourchannel")\n    private = bot.private("1111111")\n\n    async def greeter():\n        await channel.send_text("Hello from channel!")\n        await private.send_text("Why not greet personally?")\n    ...\n\n\nExamples\n---------------\n\n- `Async IO <https://github.com/szastupov/aiotg/blob/master/examples/async.py>`__\n- `Send image <https://github.com/szastupov/aiotg/blob/master/examples/getimage.py>`__\n- `Post to channel <https://github.com/szastupov/aiotg/blob/master/examples/post_to_channel.py>`__\n- `Webhooks mode <https://github.com/szastupov/aiotg/blob/master/examples/webhook.py>`__\n- `Sender id <https://github.com/szastupov/aiotg/blob/master/examples/whoami.py>`__\n\nFor a real world example, take a look at\n`WhatisBot <https://github.com/szastupov/whatisbot/blob/master/main.py>`__ or `Music Catalog Bot <https://github.com/szastupov/musicbot>`__.\n\nFor more information on how to use the project, see the project\'s `documentation <http://szastupov.github.io/aiotg/index.html>`__.\n'