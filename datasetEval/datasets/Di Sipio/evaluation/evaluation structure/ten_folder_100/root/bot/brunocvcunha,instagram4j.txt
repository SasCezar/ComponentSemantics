b'instagram4j\n========\n\n[![Apache License](http://img.shields.io/badge/license-ASL-blue.svg)](https://github.com/brunocvcunha/instagram4j/blob/master/LICENSE)\n[![Build Status](https://travis-ci.org/brunocvcunha/instagram4j.svg)](https://travis-ci.org/brunocvcunha/instagram4j)\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.brunocvcunha.instagram4j/instagram4j/badge.svg)](https://maven-badges.herokuapp.com/maven-central/org.brunocvcunha.instagram4j/instagram4j) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](http://makeapullrequest.com)\n[![Code Climate](https://codeclimate.com/github/brunocvcunha/instagram4j/badges/gpa.svg)](https://codeclimate.com/github/brunocvcunha/instagram4j)\n\n:camera: Java client to Instagram\'s private API. Allows access to all features that the Instagram app provides.\n\nBased on the [Instagram PHP Api](https://github.com/mgp25/Instagram-API) and [Instagram Python Api](https://github.com/LevPasha/Instagram-API-python).\n\n\nUsage\n--------\n\nDownload [the latest release JAR][1] or grab via Maven:\n```xml\n<dependency>\n  <groupId>org.brunocvcunha.instagram4j</groupId>\n  <artifactId>instagram4j</artifactId>\n  <version>1.13</version>\n</dependency>\n```\nor Gradle:\n```groovy\ncompile \'org.brunocvcunha.instagram4j:instagram4j:1.13\'\n```\n\n\n\nSupported Operations & Examples\n--------\n\n#### Login\n\n```java\n// Login to instagram\nInstagram4j instagram = Instagram4j.builder().username("username").password("password").build();\ninstagram.setup();\ninstagram.login();\n\n```\n\n#### Login with proxy without authentication\n\n```java\n// Login to instagram\n\nHttpHost proxy = new HttpHost("host", "port", "http");\nInstagram4j instagram = Instagram4j.builder().username("username").password("password").proxy(proxy).build();\ninstagram.setup();\ninstagram.login();\n\n```\n\n\n#### Login with proxy with authentication\n\n```java\n// Login to instagram\n\nHttpHost proxy = new HttpHost("host", "port", "http");\nCredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n        credentialsProvider.setCredentials(new AuthScope(AuthScope.ANY),\n                new UsernamePasswordCredentials("login", "password"));\n        \n        \nInstagram4j instagram = Instagram4j.builder().username("username").password("password").proxy(proxy).credentialsProvider(credentialsProvider).build();\ninstagram.setup();\ninstagram.login();\n\n```\n\n#### Search user by handle\n```java\nInstagramSearchUsernameResult userResult = instagram.sendRequest(new InstagramSearchUsernameRequest("github"));\nSystem.out.println("ID for @github is " + userResult.getUser().getPk());\nSystem.out.println("Number of followers: " + userResult.getUser().getFollower_count());\n```\n\n#### Follow user\n```java\ninstagram.sendRequest(new InstagramFollowRequest(userResult.getUser().getPk()));\n```\n\n#### Unfollow user\n```java\ninstagram.sendRequest(new InstagramUnfollowRequest(userResult.getUser().getPk()));\n```\n\n#### Get user followers\n```java\nInstagramGetUserFollowersResult githubFollowers = instagram.sendRequest(new InstagramGetUserFollowersRequest(userResult.getUser().getPk()));\nList<InstagramUserSummary> users = githubFollowers.getUsers();\nfor (InstagramUserSummary user : users) {\n    System.out.println("User " + user.getUsername() + " follows Github!");\n}\n\n```\n\n#### Search user by handle\n```java\nInstagramSearchUsernameResult userResult = instagram.sendRequest(new InstagramSearchUsernameRequest("github"));\nSystem.out.println("ID for @github is " + userResult.getUser().getPk());\nSystem.out.println("Number of followers: " + userResult.getUser().follower_count);\n```\n\n#### Upload a photo to your feed\n```java\ninstagram.sendRequest(new InstagramUploadPhotoRequest(\n        new File("/tmp/file-to-upload.jpg"),\n        "Posted with Instagram4j, how cool is that?"));\n```\n\n#### Upload a video to your feed\n```java\ninstagram.sendRequest(new InstagramUploadVideoRequest(\n        new File("/tmp/file-to-upload.mp4"),\n        "Video posted with Instagram4j, how cool is that?"));\n```\n\n#### Get feed for a hashtag\n```java\nInstagramFeedResult tagFeed = instagram.sendRequest(new InstagramTagFeedRequest("github"));\nfor (InstagramFeedItem feedResult : tagFeed.getItems()) {\n    System.out.println("Post ID: " + feedResult.getPk());\n}\n```\n\n#### Perform a like operation for a media\n```java\ninstagram.sendRequest(new InstagramLikeRequest(feedResult.getPk()));\n```\n\n#### Add a comment for a media\n```java\ninstagram.sendRequest(new iInstagramPostCommentRequest(feedResult.getPk(), "Hello! How are you?"));\n```\n\n\n#### Get comments from media\n```java\nInstagramGetMediaCommentsResult commentsResult = instagram.sendRequest(new InstagramGetMediaCommentsRequest(mediaId, maxCommentId));\n```\n\n#### Share message\n```java\nrecipients - List of recipients IDs (i.e. "1234567890")\ninstagram.sendRequest(InstagramDirectShareRequest.builder(ShareType.MESSAGE, recipients).message(message).build());\n```\n\n#### Share media\n```java\nrecipients - List of recipients IDs (i.e. "1234567890")\ninstagram.sendRequest(InstagramDirectShareRequest.builder(ShareType.MEDIA, recipients).mediaId(mid).message(message).build());\n```\n\n#### Edit media\n```java\nInstagramEditMediaRequest r = new InstagramEditMediaRequest(mediaId, caption);\nUserTags tags = r.new UserTags();\ntags.getTagsToAdd().add(r.new UserTag(userId, posX, posY));\ntags.getTagsToAdd().add(r.new UserTag(userId2, posX2, posY2));\ntags.getUserIdsToRemoveTag().add("1231231231");\ntags.getUserIdsToRemoveTag().add("3213213213");\nr.setUserTags(tags);\ninstagram.sendRequest(r);\n```\n\n\n\n#### Mute Post and Story\n```java\ninstagram.sendRequest(new InstagramMuteStoryAnPostRequest(userResult.getUser().getPk()));\n\n```\n\n\n#### Mute Post \n```java\ninstagram.sendRequest(new InstagramMutePostRequest(userResult.getUser().getPk()));\n\n```\n\n#### Mute Story \n```java\ninstagram.sendRequest(new InstagramMuteStoryRequest(userResult.getUser().getPk()));\n\n```\n\n#### (More operations to be added)\n\nBuilding from the source\n--------\n```\ngit clone https://github.com/brunocvcunha/instagram4j\ncd instagram4j\nmvn clean install\n```\n\n#\n\nSnapshots of the development version are available in [Sonatype\'s `snapshots` repository][snap].\n\ninstagram4j requires at minimum Java 8.\n\n\n [1]: https://search.maven.org/remote_content?g=org.brunocvcunha.instagram4j&a=instagram4j&v=LATEST\n [snap]: https://oss.sonatype.org/content/repositories/snapshots/\n\n\n\n # Terms and conditions\n\n- You will NOT use this API for marketing purposes (spam, botting, harassment, massive bulk messaging...).\n- We do NOT give support to anyone who wants to use this API to send spam or commit other crimes.\n- We reserve the right to block any user of this repository that does not meet these conditions.\n\n## Legal\n\nThis code is in no way affiliated with, authorized, maintained, sponsored or endorsed by Instagram or any of its affiliates or subsidiaries. This is an independent and unofficial API. Use at your own risk.\n'