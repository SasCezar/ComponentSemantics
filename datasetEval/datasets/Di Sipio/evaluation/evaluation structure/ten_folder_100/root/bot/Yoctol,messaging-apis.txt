b'# Messaging APIs\n\n[![Build Status](https://travis-ci.org/Yoctol/messaging-apis.svg?branch=master)](https://travis-ci.org/Yoctol/messaging-apis)\n[![Build status](https://ci.appveyor.com/api/projects/status/d8br1kcybpikdm8m/branch/master?svg=true)](https://ci.appveyor.com/project/tw0517tw/messaging-apis/branch/master)\n[![coverage](https://codecov.io/gh/Yoctol/messaging-apis/branch/master/graph/badge.svg)](https://codecov.io/gh/Yoctol/messaging-apis)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nMessaging APIs is a [mono repo](https://github.com/babel/babel/blob/master/doc/design/monorepo.md) which collects APIs needed for bot development.\n\nIt helps you build your bots using similar API for multiple platforms, e.g. Messenger, LINE. Learn once and make writing cross-platform bots easier.\n\nIf you are looking for a framework to build your bots, [Bottender](https://github.com/Yoctol/bottender) may suit for your needs. It is built on top of [Messaging APIs](https://github.com/Yoctol/messaging-apis) and provides some powerful features for bot building.\n\n![](https://user-images.githubusercontent.com/3382565/33652388-3644799e-daa4-11e7-97f1-e9af5788ff6e.png)\n\n## Packages\n\n| Package                                                        | Version                                                                                                                                     | Platform                                |\n| -------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------- |\n| [`messaging-api-messenger`](/packages/messaging-api-messenger) | [![npm](https://img.shields.io/npm/v/messaging-api-messenger.svg?style=flat-square)](https://www.npmjs.com/package/messaging-api-messenger) | [Messenger](https://www.messenger.com/) |\n| [`messaging-api-line`](/packages/messaging-api-line)           | [![npm](https://img.shields.io/npm/v/messaging-api-line.svg?style=flat-square)](https://www.npmjs.com/package/messaging-api-line)           | [LINE](https://line.me/)                |\n| [`messaging-api-slack`](/packages/messaging-api-slack)         | [![npm](https://img.shields.io/npm/v/messaging-api-slack.svg?style=flat-square)](https://www.npmjs.com/package/messaging-api-slack)         | [Slack](https://slack.com/)             |\n| [`messaging-api-telegram`](/packages/messaging-api-telegram)   | [![npm](https://img.shields.io/npm/v/messaging-api-telegram.svg?style=flat-square)](https://www.npmjs.com/package/messaging-api-telegram)   | [Telegram](https://telegram.org/)       |\n| [`messaging-api-viber`](/packages/messaging-api-viber)         | [![npm](https://img.shields.io/npm/v/messaging-api-viber.svg?style=flat-square)](https://www.npmjs.com/package/messaging-api-viber)         | [Viber](https://www.viber.com/)         |\n| [`messaging-api-wechat`](/packages/messaging-api-wechat)       | [![npm](https://img.shields.io/npm/v/messaging-api-wechat.svg?style=flat-square)](https://www.npmjs.com/package/messaging-api-wechat)       | [WeChat](https://weixin.qq.com/)        |\n\n## Usage\n\n## Messenger\n\n<img src="https://static.xx.fbcdn.net/rsrc.php/v3/y8/r/R_1BAhxMP5I.png" alt="Messenger" width="100" />\n\nInstall `messaging-api-messenger` package from the registry:\n\n```sh\nnpm i --save messaging-api-messenger\n```\n\nor\n\n```sh\nyarn add messaging-api-messenger\n```\n\nThen, create a `MessengerClient` to call Messenger APIs:\n\n```js\nconst { MessengerClient } = require(\'messaging-api-messenger\');\n\n// get accessToken from facebook developers website\nconst client = MessengerClient.connect(accessToken);\n\nclient.sendText(userId, \'Hello World\').then(() => {\n  console.log(\'sent\');\n});\n```\n\nCheck out [full API documentation](./packages/messaging-api-messenger/README.md) for more detail information.\n\n## LINE\n\n<img src="http://is5.mzstatic.com/image/thumb/Purple117/v4/01/c2/4d/01c24d99-4aae-71ea-24e2-d0b68f8c53d2/source/1200x630bb.jpg" alt="LINE" width="100" />\n\nInstall `messaging-api-line` package from the registry:\n\n```sh\nnpm i --save messaging-api-line\n```\n\nor\n\n```sh\nyarn add messaging-api-line\n```\n\nThen, create a `LineClient` to call LINE APIs:\n\n```js\nconst { LineClient } = require(\'messaging-api-line\');\n\n// get accessToken and channelSecret from LINE developers website\nconst client = LineClient.connect(accessToken, channelSecret);\n\nclient.pushText(userId, \'Hello World\').then(() => {\n  console.log(\'pushed\');\n});\n```\n\nCheck out [full API documentation](./packages/messaging-api-line/README.md) for more detail information.\n\n## Slack\n\n<img src="https://cdn-images-1.medium.com/max/1200/1*TiKyhAN2gx4PpbOsiBhYcw.png" alt="Slack" width="100" />\n\nInstall `messaging-api-slack` package from the registry:\n\n```sh\nnpm i --save messaging-api-slack\n```\n\nor\n\n```sh\nyarn add messaging-api-slack\n```\n\nThen, create a `SlackOAuthClient` or `SlackWebhookClient` to call Slack APIs:\n\n```js\nconst { SlackOAuthClient } = require(\'messaging-api-slack\');\n\n// get access token by setup OAuth & Permissions function to your app.\n// https://api.slack.com/docs/oauth\nconst client = SlackOAuthClient.connect(\n  \'xoxb-000000000000-xxxxxxxxxxxxxxxxxxxxxxxx\'\n);\n\nclient.postMessage(\'#random\', \'Hello World\').then(() => {\n  console.log(\'sent\');\n});\n```\n\n```js\nconst { SlackWebhookClient } = require(\'messaging-api-slack\');\n\n// get webhook URL by adding a Incoming Webhook integration to your team.\n// https://my.slack.com/services/new/incoming-webhook/\nconst client = SlackWebhookClient.connect(\n  \'https://hooks.slack.com/services/XXXXXXXX/YYYYYYYY/zzzzzZZZZZ\'\n);\n\nclient.sendText(\'Hello World\').then(() => {\n  console.log(\'sent\');\n});\n```\n\nCheck out [full API documentation](./packages/messaging-api-slack/README.md) for more detail information.\n\n## Telegram\n\n<img src="https://telegram.org/img/t_logo.png" alt="Telegram" width="100" />\n\nInstall `messaging-api-telegram` package from the registry:\n\n```sh\nnpm i --save messaging-api-telegram\n```\n\nor\n\n```sh\nyarn add messaging-api-telegram\n```\n\nThen, create a `TelegramClient` to call Telegram APIs:\n\n```js\nconst { TelegramClient } = require(\'messaging-api-telegram\');\n\n// get accessToken from telegram [@BotFather](https://telegram.me/BotFather)\nconst client = TelegramClient.connect(\'12345678:AaBbCcDdwhatever\');\n\nclient.sendMessage(chatId, \'Hello World\').then(() => {\n  console.log(\'sent\');\n});\n```\n\nCheck out [full API documentation](./packages/messaging-api-telegram/README.md) for more detail information.\n\n## Viber\n\n<img src="https://user-images.githubusercontent.com/3382565/31753411-0be75dfc-b456-11e7-9eea-b976d21fcc53.png" alt="Viber" width="100" />\n\nInstall `messaging-api-viber` package from the registry:\n\n```sh\nnpm i --save messaging-api-viber\n```\n\nor\n\n```sh\nyarn add messaging-api-viber\n```\n\nThen, create a `ViberClient` to call Viber APIs:\n\n```js\nconst { ViberClient } = require(\'messaging-api-viber\');\n\n// get authToken from the "edit info" screen of your Public Account.\nconst client = ViberClient.connect(authToken);\n\nclient.sendText(userId, \'Hello World\').then(() => {\n  console.log(\'sent\');\n});\n```\n\nCheck out [full API documentation](./packages/messaging-api-viber/README.md) for more detail information.\n\n## WeChat\n\n<img src="https://user-images.githubusercontent.com/3382565/33652361-1dc854c6-daa4-11e7-997e-e1dedd818881.jpg" alt="WeChat" width="100" />\n\nInstall `messaging-api-wechat` package from the registry:\n\n```sh\nnpm i --save messaging-api-wechat\n```\n\nor\n\n```sh\nyarn add messaging-api-wechat\n```\n\nThen, create a `WechatClient` to call Wechat APIs:\n\n```js\nconst { WechatClient } = require(\'messaging-api-wechat\');\n\n// get appId, appSecret from\xe3\x80\x8c\xe5\xbe\xae\xe4\xbf\xa1\xe5\x85\xac\xe4\xbc\x97\xe5\xb9\xb3\xe5\x8f\xb0-\xe5\xbc\x80\xe5\x8f\x91-\xe5\x9f\xba\xe6\x9c\xac\xe9\x85\x8d\xe7\xbd\xae\xe3\x80\x8dpage\nconst client = WechatClient.connect(appId, appSecret);\n\nclient.sendText(userId, \'Hello World\').then(() => {\n  console.log(\'sent\');\n});\n```\n\nCheck out [full API documentation](./packages/messaging-api-wechat/README.md) for more detail information.\n\n## Documentation\n\n- [Messenger](./packages/messaging-api-messenger/README.md)\n- [LINE](./packages/messaging-api-line/README.md)\n- [Slack](./packages/messaging-api-slack/README.md)\n- [Telegram](./packages/messaging-api-telegram/README.md)\n- [Viber](./packages/messaging-api-viber/README.md)\n- [WeChat](./packages/messaging-api-wechat/README.md)\n\n## Change Log\n\nEvery release, along with the migration instructions, is documented on the [CHANGELOG.md](./CHANGELOG.md) file.\n\n## License\n\nMIT \xc2\xa9 [Yoctol](https://github.com/Yoctol/messaging-apis)\n'