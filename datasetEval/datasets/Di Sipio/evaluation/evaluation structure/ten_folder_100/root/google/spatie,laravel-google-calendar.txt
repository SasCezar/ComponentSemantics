b'# Manage events on a Google Calendar\n\n[![Latest Version on Packagist](https://img.shields.io/packagist/v/spatie/laravel-google-calendar.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-google-calendar)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE.md)\n[![Build Status](https://img.shields.io/travis/spatie/laravel-google-calendar/master.svg?style=flat-square)](https://travis-ci.org/spatie/laravel-google-calendar)\n[![Quality Score](https://img.shields.io/scrutinizer/g/spatie/laravel-google-calendar.svg?style=flat-square)](https://scrutinizer-ci.com/g/spatie/laravel-google-calendar)\n[![StyleCI](https://styleci.io/repos/58305903/shield?branch=master)](https://styleci.io/repos/58305903)\n[![Total Downloads](https://img.shields.io/packagist/dt/spatie/laravel-google-calendar.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-google-calendar)\n\nThis package makes working with a Google Calendar a breeze. Once it has been set up you can do these things:\n\n```php\nuse Spatie\\GoogleCalendar\\Event;\n\n//create a new event\n$event = new Event;\n\n$event->name = \'A new event\';\n$event->startDateTime = Carbon\\Carbon::now();\n$event->endDateTime = Carbon\\Carbon::now()->addHour();\n$event->addAttendee([\'email\' => \'youremail@gmail.com\']);\n$event->addAttendee([\'email\' => \'anotherEmail@gmail.com\']);\n\n$event->save();\n\n// get all future events on a calendar\n$events = Event::get();\n\n// update existing event\n$firstEvent = $events->first();\n$firstEvent->name = \'updated name\';\n$firstEvent->save();\n\n$firstEvent->update([\'name\' => \'updated again\']);\n\n// create a new event\nEvent::create([\n   \'name\' => \'A new event\',\n   \'startDateTime\' => Carbon\\Carbon::now(),\n   \'endDateTime\' => Carbon\\Carbon::now()->addHour(),\n]);\n\n// delete an event\n$event->delete();\n```\n\nSpatie is a webdesign agency based in Antwerp, Belgium. You\'ll find an overview of all our open source projects [on our website](https://spatie.be/opensource).\n\n## Installation\n\nYou can install the package via composer:\n\n```bash\ncomposer require spatie/laravel-google-calendar\n```\n\nNext up the service provider must be registered:\n\n```php\n\'providers\' => [\n    ...\n    Spatie\\GoogleCalendar\\GoogleCalendarServiceProvider::class,\n];\n```\n\nOptionally the  `Spatie\\GoogleCalendar\\GoogleCalendarFacade` must be registered:\n\n```php\n\'aliases\' => [\n\t...\n    \'GoogleCalendar\' => Spatie\\GoogleCalendar\\GoogleCalendarFacade::class,\n    ...\n]\n```\n\nYou must publish the configuration with this command:\n\n```bash\nphp artisan vendor:publish --provider="Spatie\\GoogleCalendar\\GoogleCalendarServiceProvider"\n```\n\nThis will publish a file called `google-calendar.php` in your config-directory with these contents:\n```\nreturn [\n    /*\n     * Path to the json file containing the credentials.\n     */\n    \'service_account_credentials_json\' => storage_path(\'app/google-calendar/service-account-credentials.json\'),\n\n    /*\n     *  The id of the Google Calendar that will be used by default.\n     */\n    \'calendar_id\' => env(\'GOOGLE_CALENDAR_ID\'),\n];\n\n```\n\n## How to obtain the credentials to communicate with Google Calendar\n\nThe first thing you\xe2\x80\x99ll need to do is get credentials to use Google\'s API. I\xe2\x80\x99m assuming that you\xe2\x80\x99ve already created a Google account and are signed in. Head over to [Google API console](https://console.developers.google.com/apis) and click "Select a project" in the header.\n\n![1](./docs/v2/1.png)\n\nNext up we must specify which APIs the project may consume. From the header, select "Enable APIs and Services".\n\n![2](./docs/v2/2.png)\n\nOn the next page, search for "Calendar" and select "Google Calendar API" from the list.\n\n![3](./docs/v2/3.png)\n\nFrom here, press "Enable" to enable the Google Calendar API for this project.\n\n![4](./docs/v2/4.png)\n\nNow that you\'ve created a project that has access to the Calendar API it\'s time to download a file with these credentials. Click "Credentials" in the sidebar and then press the "Credentials in APIs & Services" link.\n\n![5](./docs/v2/5.png)\n\nFrom this page, open the "Create credentials" drop-down and select "Service account key".\n\n![6](./docs/v2/6.png)\n\nOn the next screen, you can give the service account a name. You can name it anything you\xe2\x80\x99d like. In the service account id you\xe2\x80\x99ll see an email address. We\xe2\x80\x99ll use this email address later on in this guide. Select "JSON" as the key type and click "Create" to download the JSON file. You will get a warning that the service account does not have a role, you can safely ignore this and create the service account without assigning a role.\n\n![7](./docs/v2/7.png)\n\nSave the json inside your Laravel project at the location specified in the `service_account_credentials_json` key of the config file of this package. Because the json file contains potentially sensitive information, I don\'t recommend committing it to your git repository.\n\nNow that everything is set up on the API site, we\xe2\x80\x99ll need to configure some things on the Google Calendar site. Head over to Google Calendar and view the settings of the calendar you want to work with via PHP.  On the "Share with specific people" tab press the "Add people" button and add the service account id that was displayed when creating credentials on the API site. \n\n![8](./docs/v2/8.png)\n\n![9](./docs/v2/9.png)\n\nScroll down to the "Integrate calendar" section to see the id of the calendar. You need to specify that id in the config file.\n\n![10](./docs/v2/10.png)\n\n## Usage\n\n### Getting events\n\nYou can fetch all events by simply calling `Event::get();` this will return all events of the coming year. An event comes in the form of a `Spatie\\GoogleCalendar\\Event` object.\n\nThe full signature of the function is:\n\n```php\npublic static function get(Carbon $startDateTime = null, Carbon $endDateTime = null, array $queryParameters = [], string $calendarId = null): Collection\n```\n\nThe parameters you can pass in `$queryParameters` are listed [on the documentation on `list` at the Google Calendar API docs](https://developers.google.com/google-apps/calendar/v3/reference/events/list#request).\n\n### Accessing start and end dates of an event\n\nYou can use these getters to retrieve start and end date as [Carbon](https://github.com/briannesbitt/Carbon) instances:\n\n```php\n$events = Event::get();\n\n$events[0]->startDate;\n$events[0]->startDateTime;\n$events[0]->endDate;\n$events[0]->endDateTime;\n```\n\n### Creating an event\n\nYou can just new up a `Spatie\\GoogleCalendar\\Event`-object\n\n```php\n$event = new Event;\n\n$event->name = \'A new event\';\n$event->startDateTime = Carbon\\Carbon::now();\n$event->endDateTime = Carbon\\Carbon::now()->addHour();\n\n$event->save();\n```\n\nYou can also call `create` statically:\n\n```php\nEvent::create([\n   \'name\' => \'A new event\',\n   \'startDateTime\' => Carbon\\Carbon::now(),\n   \'endDateTime\' => Carbon\\Carbon::now()->addHour(),\n]);\n```\n\nThis will create an event with a specific start and end time. If you want to create a full-day event you must use `startDate` and `endDate` instead of `startDateTime` and `endDateTime`.\n\n```php\n$event = new Event;\n\n$event->name = \'A new full day event\';\n$event->startDate = Carbon\\Carbon::now();\n$event->endDate = Carbon\\Carbon::now()->addDay();\n\n$event->save();\n```\n\n### Getting a single event\n\nGoogle assigns a unique id to every single event. You can get this id by getting events using the `get` method and getting the `id` property on a `Spatie\\GoogleCalendar\\Event`-object:\n```php\n// get the id of the first upcoming event in the calendar.\n$eventId = Event::get()->first()->id;\n```\n\nYou can use this id to fetch a single event from Google:\n```php\nEvent::find($eventId);\n```\n\n### Updating an event\n\nEasy, just change some properties and call `save()`:\n\n```php\n$event = Event::find($eventId);\n\n$event->name = \'My updated title\';\n$event->save();\n```\n\nAlternatively, you can use the update method:\n\n```php\n$event = Event::find($eventId)\n\n$event->update([\'name\' => \'My updated title\']);\n```\n\n### Deleting an event\n\nNothing to it!\n\n```php\n$event = Event::find($eventId);\n\n$event->delete();\n```\n\n### Limitations\n\nThe Google Calendar API provides many options. This package doesn\'t support all of them. For instance, recurring events cannot be managed properly with this package. If you stick to creating events with a name and a date you should be fine.\n\n## Upgrading from v1 to v2\n\nThe only major difference between `v1` and `v2` is that under the hood Google API v2 is used instead of v1. Here are the steps required to upgrade:\n - rename the config file from `laravel-google-calendar` to `google-calendar`\n - in the config file rename the `client_secret_json` key to `service_account_credentials_json`\n\n## Changelog\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information about what has changed recently.\n\n## Testing\n\n``` bash\ncomposer test\n```\n\n## Contributing\n\nPlease see [CONTRIBUTING](CONTRIBUTING.md) for details.\n\n## Security\n\nIf you discover any security-related issues, please email freek@spatie.be instead of using the issue tracker.\n\n## Postcardware\n\nYou\'re free to use this package, but if it makes it to your production environment we highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using.\n\nOur address is: Spatie, Samberstraat 69D, 2060 Antwerp, Belgium.\n\nWe publish all received postcards [on our company website](https://spatie.be/en/opensource/postcards).\n\n## Credits\n\n- [Freek Van der Herten](https://github.com/freekmurze)\n- [All Contributors](../../contributors)\n\nA big thank you to [Sebastiaan Luca](https://github.com/sebastiaanluca) for his big help creating v2 of this package.\n\n## Support us\n\nSpatie is a webdesign agency based in Antwerp, Belgium. You\'ll find an overview of all our open source projects [on our website](https://spatie.be/opensource).\n\nDoes your business depend on our contributions? Reach out and support us on [Patreon](https://www.patreon.com/spatie). \nAll pledges will be dedicated to allocating workforce on maintenance and new awesome stuff.\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n'