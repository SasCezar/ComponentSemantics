b'# github-traffic [![NPM version](https://img.shields.io/npm/v/github-traffic.svg?style=flat)](https://www.npmjs.com/package/github-traffic) [![NPM downloads](https://img.shields.io/npm/dm/github-traffic.svg?style=flat)](https://npmjs.org/package/github-traffic) [![Build Status](https://img.shields.io/travis/doowb/github-traffic.svg?style=flat)](https://travis-ci.org/doowb/github-traffic)\n\nGet the Github traffic for the specified repository\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save github-traffic\n```\n\n## Usage\n\n```js\nvar traffic = require(\'github-traffic\');\n```\n\n## API\n\n### [traffic](index.js#L57)\n\nGet the last 14 days (this is Github\'s limitation) of Github traffic for the specified repository. The results will contain 4 keys (one for each of the traffic endpoints specified in the [api documentation](https://developer.github.com/v3/repos/traffic/)). See the [example results](/example-results.json) for the expanded results from the example. See the other methods below to get results for a specific endpoint.\n\n**Params**\n\n* `repo` **{String}**: Full repository to get traffic, formatted as `:owner/:repo`. If the repository is published to NPM, the NPM name may be used.\n* `options` **{Object}**: Options containing the Github authentication information. This is required since user\'s must be administrators on the repository to retrieve traffic information.\n* `options.username` **{String}**: Github username of the repository administrator retrieving the traffic information. This is required if an oauth token is not used.\n* `options.password` **{String}**: Github user\'s password of the repository administrator retrieving the traffic information. This is required if an oauth token is not used.\n* `options.token` **{String}**: Github oauth token for the repository administrator retrieving the traffic informatino. This is required if the `username/password` combination is not used.\n* `cb` **{Function}**: Optional callback function that will be called with error information or the results. When omitted a Promise is returned.\n* `returns` **{Promise}**: Promise with the traffic information when ready.\n\n**Example**\n\n```js\nvar options = {\n  username: \'doowb\',\n  password: \'**********\'\n};\n\ntraffic(\'assemble/assemble\', options, function(err, results) {\n  if (err) return console.error(err);\n  console.log(results);\n  //=> {\n  //=>   referrers: [ ... ],\n  //=>   paths: [ ... ],\n  //=>   views: {\n  //=>     count: 4043,\n  //=>     uniques: 1155,\n  //=>     views: [ ... ]\n  //=>   },\n  //=>   clones: {\n  //=>     count: 47,\n  //=>     uniques: 38,\n  //=>     clones: [ ... ]\n  //=>   }\n  //=> }\n});\n```\n\n### [.referrers](index.js#L116)\n\nGet [referrers](https://developer.github.com/v3/repos/traffic/#list-referrers) for the specified repository from the Github traffic api.\n\n**Params**\n\n* `repo` **{String}**: Full repository to get traffic, formatted as `:owner/:repo`. If the repository is published to NPM, the NPM name may be used.\n* `options` **{Object}**: Options containing the Github authentication information. This is required since user\'s must be administrators on the repository to retrieve traffic information.\n* `options.username` **{String}**: Github username of the repository administrator retrieving the traffic information. This is required if an oauth token is not used.\n* `options.password` **{String}**: Github user\'s password of the repository administrator retrieving the traffic information. This is required if an oauth token is not used.\n* `options.token` **{String}**: Github oauth token for the repository administrator retrieving the traffic informatino. This is required if the `username/password` combination is not used.\n* `cb` **{Function}**: Optional callback function that will be called with error information or the results. When omitted a Promise is returned.\n* `returns` **{Promise}**: Promise with the traffic information when ready.\n\n**Example**\n\n```js\nvar options = {\n  username: \'doowb\',\n  password: \'**********\'\n};\n\ntraffic.referrers(\'assemble/assemble\', options, function(err, results) {\n  if (err) return console.error(err);\n  console.log(results);\n  //=> [\n  //=>   { referrer: \'Google\', count: 765, uniques: 377 },\n  //=>   ...\n  //=> ],\n});\n```\n\n### [.paths](index.js#L153)\n\nGet [paths](https://developer.github.com/v3/repos/traffic/#list-paths) for the specified repository from the Github traffic api.\n\n**Params**\n\n* `repo` **{String}**: Full repository to get traffic, formatted as `:owner/:repo`. If the repository is published to NPM, the NPM name may be used.\n* `options` **{Object}**: Options containing the Github authentication information. This is required since user\'s must be administrators on the repository to retrieve traffic information.\n* `options.username` **{String}**: Github username of the repository administrator retrieving the traffic information. This is required if an oauth token is not used.\n* `options.password` **{String}**: Github user\'s password of the repository administrator retrieving the traffic information. This is required if an oauth token is not used.\n* `options.token` **{String}**: Github oauth token for the repository administrator retrieving the traffic informatino. This is required if the `username/password` combination is not used.\n* `cb` **{Function}**: Optional callback function that will be called with error information or the results. When omitted a Promise is returned.\n* `returns` **{Promise}**: Promise with the traffic information when ready.\n\n**Example**\n\n```js\nvar options = {\n  username: \'doowb\',\n  password: \'**********\'\n};\n\ntraffic.paths(\'assemble/assemble\', options, function(err, results) {\n  if (err) return console.error(err);\n  console.log(results);\n  //=> [\n  //=>   {\n  //=>     path: \'/assemble/assemble\',\n  //=>     title: \'GitHub - assemble/assemble: Static site generator and rapid prototyping frame...\',\n  //=>     count: 1551,\n  //=>     uniques: 839\n  //=>   },\n  //=>   ...\n  //=> ],\n});\n```\n\n### [.views](index.js#L186)\n\nGet [views](https://developer.github.com/v3/repos/traffic/#views) for the specified repository from the Github traffic api.\n\n**Params**\n\n* `repo` **{String}**: Full repository to get traffic, formatted as `:owner/:repo`. If the repository is published to NPM, the NPM name may be used.\n* `options` **{Object}**: Options containing the Github authentication information. This is required since user\'s must be administrators on the repository to retrieve traffic information.\n* `options.username` **{String}**: Github username of the repository administrator retrieving the traffic information. This is required if an oauth token is not used.\n* `options.password` **{String}**: Github user\'s password of the repository administrator retrieving the traffic information. This is required if an oauth token is not used.\n* `options.token` **{String}**: Github oauth token for the repository administrator retrieving the traffic informatino. This is required if the `username/password` combination is not used.\n* `cb` **{Function}**: Optional callback function that will be called with error information or the results. When omitted a Promise is returned.\n* `returns` **{Promise}**: Promise with the traffic information when ready.\n\n**Example**\n\n```js\nvar options = {\n  username: \'doowb\',\n  password: \'**********\'\n};\n\ntraffic.views(\'assemble/assemble\', options, function(err, results) {\n  if (err) return console.error(err);\n  console.log(results);\n  //=> {\n  //=>   count: 4043,\n  //=>   uniques: 1155,\n  //=>   views: [ ... ]\n  //=> }\n});\n```\n\n### [.clones](index.js#L219)\n\nGet [clones](https://developer.github.com/v3/repos/traffic/#clones) for the specified repository from the Github traffic api.\n\n**Params**\n\n* `repo` **{String}**: Full repository to get traffic, formatted as `:owner/:repo`. If the repository is published to NPM, the NPM name may be used.\n* `options` **{Object}**: Options containing the Github authentication information. This is required since user\'s must be administrators on the repository to retrieve traffic information.\n* `options.username` **{String}**: Github username of the repository administrator retrieving the traffic information. This is required if an oauth token is not used.\n* `options.password` **{String}**: Github user\'s password of the repository administrator retrieving the traffic information. This is required if an oauth token is not used.\n* `options.token` **{String}**: Github oauth token for the repository administrator retrieving the traffic informatino. This is required if the `username/password` combination is not used.\n* `cb` **{Function}**: Optional callback function that will be called with error information or the results. When omitted a Promise is returned.\n* `returns` **{Promise}**: Promise with the traffic information when ready.\n\n**Example**\n\n```js\nvar options = {\n  username: \'doowb\',\n  password: \'**********\'\n};\n\ntraffic.clones(\'assemble/assemble\', options, function(err, results) {\n  if (err) return console.error(err);\n  console.log(results);\n  //=> {\n  //=>   count: 47,\n  //=>   uniques: 38,\n  //=>   clones: [ ... ]\n  //=> }\n});\n```\n\n## About\n\n### Related projects\n\n* [get-repository-url](https://www.npmjs.com/package/get-repository-url): Get the GitHub repository URL from a NPM package name. | [homepage](https://github.com/jonschlinkert/get-repository-url "Get the GitHub repository URL from a NPM package name.")\n* [github-base](https://www.npmjs.com/package/github-base): JavaScript wrapper that greatly simplifies working with GitHub\'s API. | [homepage](https://github.com/jonschlinkert/github-base "JavaScript wrapper that greatly simplifies working with GitHub\'s API.")\n* [parse-github-url](https://www.npmjs.com/package/parse-github-url): Parse a github URL into an object. | [homepage](https://github.com/jonschlinkert/parse-github-url "Parse a github URL into an object.")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\nPlease read the [contributing guide](contributing.md) for avice on opening issues, pull requests, and coding standards.\n\n### Building docs\n\n_(This document was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme) (a [verb](https://github.com/verbose/verb) generator), please don\'t edit the readme directly. Any changes to the readme must be made in [.verb.md](.verb.md).)_\n\nTo generate the readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install -g verb verb-generate-readme && verb\n```\n\n### Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n### Author\n\n**Brian Woodward**\n\n* [github/doowb](https://github.com/doowb)\n* [twitter/doowb](http://twitter.com/doowb)\n\n### License\n\nCopyright \xc2\xa9 2016, [Brian Woodward](https://github.com/doowb).\nReleased under the [MIT license](https://github.com/doowb/github-traffic/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.1.30, on September 16, 2016._'