b"# GraphQL Binding for GitHub\n\n[![CircleCI](https://circleci.com/gh/graphql-binding/graphql-binding-github.svg?style=shield)](https://circleci.com/gh/graphql-binding/graphql-binding-github) [![npm version](https://badge.fury.io/js/graphql-binding-github.svg)](https://badge.fury.io/js/graphql-binding-github)\n\nEmbed GitHub's GraphQL API into your server application\n\n## Install\n\n```sh\nyarn add graphql-binding-github\n```\n\n## Example ([Demo](https://graphqlbin.com/Agjcr))\n\nSee [example directory](example) for full example application.\n\n```js\nconst { GitHub } = require('graphql-binding-github')\nconst { GraphQLServer } = require('graphql-yoga')\nconst { importSchema } = require('graphql-import')\n\nconst favoriteRepos = [\n  { owner: 'graphcool', name: 'graphql-yoga' },\n  { owner: 'graphql', name: 'graphql-js' },\n]\n\nconst token = '__ENTER_YOUR_GITHUB_TOKEN__'\nconst github = new GitHub(token)\n\nconst typeDefs = importSchema('schemas/app.graphql')\nconst resolvers = {\n  Query: {\n    hello: (parent, { name }) => `Hello ${name || 'World'}!`,\n    favoriteRepos: (parent, args, context, info) => {\n      return Promise.all(\n        favoriteRepos.map(args => github.query.repository(args, context, info)),\n      )\n    },\n  },\n  // the following is needed to make interfaces, unions & custom scalars work\n  ...github.getAbstractResolvers(typeDefs),\n}\n\nconst server = new GraphQLServer({ resolvers, typeDefs })\nserver.start(() => console.log('Server running on http://localhost:4000'))\n```\n\n## How to create a GitHub Token\n\nSimply follow [this guide](https://developer.github.com/v4/guides/forming-calls/#authenticating-with-graphql) and head over to the [token settings on GitHub](https://github.com/settings/tokens).\n\n## Resources\n\n* Github GraphQL Explorer: https://developer.github.com/v4/explorer/\n"