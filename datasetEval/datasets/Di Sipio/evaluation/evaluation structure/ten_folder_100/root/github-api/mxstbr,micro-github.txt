b"# `micro-github`\n\nA tiny microservice that makes adding authentication with GitHub to your application easy.\n\n## Usage\n\nRunning your own `micro-github` is a single [`now`](https://now.sh) command away:\n\n```sh\n# Deploy this repository using now.sh\nnow mxstbr/micro-github -e GH_CLIENT_ID=xyz123 -e GH_CLIENT_SECRET=asdf123 -e REDIRECT_URL=https://google.com\n```\n\n### Environment variables\n\nYou'll need to provide three environment variables when running `micro-github`:\n\n```sh\n# Your GitHub application client id\nGH_CLIENT_ID=xyz123\n# Your GitHub application client secret\nGH_CLIENT_SECRET=asdf123\n# The URL to redirect the user to once the authentication was successful\nREDIRECT_URL=https://google.com\n# Optional: Specify the GitHub host when using GitHub Enterprise\nGH_HOST=github.my-company.com\n```\n\n> Create an application on GitHub [here](https://github.com/settings/applications/new) to get your client id and secret if you haven't done that already.\n\nWhen authentication is successful, the user will be redirected to the `REDIRECT_URL` with the `access_token` query param set to the GitHub access token. You can then use that token to interact with the [GitHub API](https://developer.github.com/v3/)!\n\n> E.g. setting `REDIRECT_URL=https://google.com` will redirect them to `https://google.com/?access_token=asdf123`. (where `asdf123` is the provided access token)\n\n### Finish setup\n\nTo make this work you have to set the authorization callback URL of [your application on GitHub](https://github.com/settings/developers) to whatever URL `now` gave you plus the path `/callback` e.g. `http://localhost:3000/callback`:\n\n![Authorization callback URL: 'your-url.now.sh'](https://cloud.githubusercontent.com/assets/168870/24585953/9543e03a-178e-11e7-8f10-07be5c10682c.png)\n\nTo log people in provide a link to url `now` gave you plus the path `login` e.g. `http://localhost:3000/login` when they click on the link it will redirect to `https://github.com/login/oauth/authorize?client_id=asdf123&state`. (where `client_id` is your GitHub app client id in `.env` and `state` is a randomly generated string). This will redirect them to the GitHub sign in page for your app, which looks like this:\n\n![Authorize my app to access your data on GitHub](https://cloud.githubusercontent.com/assets/7525670/22627265/fc50c680-ebbf-11e6-9126-dcdef37d3c3d.png)\n\n> You can change the scope of the data you can access with the `scope` query param, see the [GitHub docs](https://developer.github.com/v3/oauth/#scopes)!\n\nWhen authentication is successful, the user will be redirected to the `REDIRECT_URL` with the access token from GitHub for you to use! \xf0\x9f\x8e\x89\n\n### Error handling\n\nIn case an error happens (either by the service or on GitHub) the user will be redirected to the `REDIRECT_URL` with the `error` query param set to a relevant error message.\n\n## Development\n\n```sh\ngit clone git@github.com:mxstbr/micro-github.git\n```\n\nMove `.env.example` to `.env` and fill in your GitHub API details and redirect url\n\n```sh\nnpm run dev\n```\n\nThe server will then be listening at `localhost:3000`, so set the authorization callback URL of your dev application on GitHub to `http://localhost:3000/callback`.\n\n## Updating\n\nThe `master` branch of this repository is what you will be deploying. To update to a new version with potential bugfixes, all you have to do is run the `now` command again and then set the authorization callback URL on GitHub to the new URL that `now` gave you! \xf0\x9f\x91\x8c\n\n## License\n\nCopyright (c) 2017 Maximilian Stoiber, licensed under the MIT license. See [LICENSE.md](LICENSE.md) for more information.\n"