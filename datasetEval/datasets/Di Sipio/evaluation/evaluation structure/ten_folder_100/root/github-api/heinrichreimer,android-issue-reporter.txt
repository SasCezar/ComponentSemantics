b'![Icon](http://i.imgur.com/CoPArlm.png)\n\nandroid-issue-reporter\n===============\n\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-android--issue--reporter-brightgreen.svg?style=flat&v=2)](http://android-arsenal.com/details/1/3413)\n[![JitPack](https://jitpack.io/v/com.heinrichreimersoftware/android-issue-reporter.svg)](https://jitpack.io/#com.heinrichreimersoftware/android-issue-reporter)\n[![Build Status](https://travis-ci.org/heinrichreimer/android-issue-reporter.svg?branch=master)](https://travis-ci.org/heinrichreimer/android-issue-reporter)\n[![License](https://img.shields.io/github/license/heinrichreimer/android-issue-reporter.svg)](https://github.com/heinrichreimer/android-issue-reporter/blob/master/LICENSE.txt)\n\nBased on [Paolo Rotolo](https://github.com/PaoloRotolo)\'s [Gitty Reporter](https://github.com/PaoloRotolo/GittyReporter)\n\nIs your Inbox full of bug reports and requests from your users?\n\n*android-issue-reporter* is a new material designed library to report issues from your app directly to GitHub, even without an account.\n\nDemo\n----\nA demo app is available on Google Play:\n\n<a href="https://play.google.com/store/apps/details?id=com.heinrichreimersoftware.androidissuereporter.example">\n\t<img alt="Get it on Google Play" src="https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png" height="60" />\n</a>\n\nScreenshots\n-----------\n\n| ![material-drawer](http://i.imgur.com/ADkPQMo.png) | ![material-drawer](http://i.imgur.com/fcFmJ5E.png) | ![material-drawer](http://i.imgur.com/dJYonBW.png) |\n|:-:|:-:|:-:|\n| GitHub bot | Include device info | Demo |\n\nDependency\n----------\n\n*android-issue-reporter* is available on [**jitpack.io**][J]\n\n**Gradle dependency:**\n````gradle\nrepositories {\n    maven { url \'https://jitpack.io\' }\n}\n````\n````gradle\ndependencies {\n    compile \'com.heinrichreimersoftware:android-issue-reporter:1.3.1\'\n}\n````\n\nGet the latest dependency at [jitpack.io][J].\n\nHow to use (with `IssueReporterLauncher`)\n-----------\nJust start the issue reporter directly from your activity using the launcher builder:\n\n```java\nIssueReporterLauncher.forTarget("HeinrichReimer", "android-issue-reporter")\n        // [Recommended] Theme to use for the reporter. \n        // (See #theming for further information.)\n        .theme(R.style.Theme_App_Dark)\n        // [Optional] Auth token to open issues if users don\'t have a GitHub account\n        // You can register a bot account on GitHub and copy ist OAuth2 token here.\n        // (See #how-to-create-a-bot-key for further information.)\n        .guestToken("28f479f73db97d912611b27579aad7a76ad2baf5")\n        // [Optional] Force users to enter an email adress when the report is sent using\n        // the guest token.\n        .guestEmailRequired(true)\n        // [Optional] Set a minimum character limit for the description to filter out\n        // empty reports.\n        .minDescriptionLength(20)\n        // [Optional] Include other relevant info in the bug report (like custom variables)\n        .putExtraInfo("Test 1", "Example string")\n        .putExtraInfo("Test 2", true)\n        // [Optional] Disable back arrow in toolbar\n        .homeAsUpEnabled(false)\n        .launch(this);\n```\n\nHow to use (extending `IssueReporterActivity`)\n-----------\nJust create a new `Activity` that extends `IssueReporterActivity`:\n\n```java\npublic class ExampleReporterActivity extends IssueReporterActivity {\n    // Where should the issues go?\n    // (http://github.com/username/repository)\n    @Override\n    public GithubTarget getTarget() {\n        return new GithubTarget("username", "repository");\n    }\n    \n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        // [Optional] Auth token to open issues if users don\'t have a GitHub account\n        // You can register a bot account on GitHub and copy ist OAuth2 token here.\n        // (See #how-to-create-a-bot-key for further information.)\n        setGuestToken("28f479f73db97d912611b27579aad7a76ad2baf5")\n        \n        // [Optional] Force users to enter an email adress when the report is sent using\n        // the guest token.\n        setGuestEmailRequired(true);\n        \n        // [Optional] Set a minimum character limit for the description to filter out\n        // empty reports.\n        setMinimumDescriptionLength(20);\n    }\n\n    // [Optional] Include other relevant info in the bug report (like custom variables)\n    @Override\n    public void onSaveExtraInfo(ExtraInfo extraInfo) {\n        extraInfo.put("Test 1", "Example string");\n        extraInfo.put("Test 2", true);\n    }\n}\n```\n\nTheming\n---\nCreate a theme extending `Theme.IssueReporter` theme and set it to the launcher using `IssueReporterLauncher.theme(@StyleRes int theme)` or declare it in `AndroidManifest.xml` if you have extended `IssueReporterActivity`:\n\n```xml\n<style name="Theme.App.Light" parent="Theme.IssueReporter">\n    <item name="colorPrimary">...</item><!-- required -->\n    <item name="colorPrimaryDark">...</item><!-- required -->\n    <item name="colorAccent">...</item><!-- required -->\n</style>\n```\n\nYou can use `Theme.IssueReporter.Light` or `Theme.IssueReporter.Light.DarkActionBar` as replacement if you want a light theme.\n\nHow to create a bot key\n---\n\n1.  Create a new GitHub account.  \n    _(You have to use a unique email address.)_\n\n2.  Go to https://github.com/settings/tokens and create a new token using <kbd>Generate new token</kbd>.  \n    _(You only need to give the bot the `public_repo` permission.)_\n\n3.  Copy the OAuth access token you get at the end of the setup.\n\n4.  Override `getGuestToken()` in your reporter activity like this:\n    \n    ```java\n    @Override\n    public String getGuestToken() {\n        return "<your token here>";\n    }\n    ```\n    \nLimitations\n---\n- You can\'t use two factor authentication.\n\n[J]: https://jitpack.io/#com.heinrichreimersoftware/android-issue-reporter\n'