b'# IPsec VPN Server on Docker\n\n[![Build Status](https://img.shields.io/travis/hwdsl2/docker-ipsec-vpn-server.svg?maxAge=1200)](https://travis-ci.org/hwdsl2/docker-ipsec-vpn-server) [![GitHub Stars](https://img.shields.io/github/stars/hwdsl2/docker-ipsec-vpn-server.svg?maxAge=86400)](https://github.com/hwdsl2/docker-ipsec-vpn-server/stargazers) [![Docker Stars](https://img.shields.io/docker/stars/hwdsl2/ipsec-vpn-server.svg?maxAge=86400)](https://hub.docker.com/r/hwdsl2/ipsec-vpn-server/) [![Docker Pulls](https://img.shields.io/docker/pulls/hwdsl2/ipsec-vpn-server.svg?maxAge=86400)](https://hub.docker.com/r/hwdsl2/ipsec-vpn-server/)\n\nDocker image to run an IPsec VPN server, with both `IPsec/L2TP` and `Cisco IPsec`.\n\nBased on Debian 9 (Stretch) with [Libreswan](https://libreswan.org) (IPsec VPN software) and [xl2tpd](https://github.com/xelerance/xl2tpd) (L2TP daemon).\n\n[**&raquo; See also: IPsec VPN Server on Ubuntu, Debian and CentOS**](https://github.com/hwdsl2/setup-ipsec-vpn)\n\n*Read this in other languages: [English](https://github.com/hwdsl2/docker-ipsec-vpn-server/blob/master/README.md), [\xe7\xae\x80\xe4\xbd\x93\xe4\xb8\xad\xe6\x96\x87](https://github.com/hwdsl2/docker-ipsec-vpn-server/blob/master/README-zh.md).*\n\n#### Table of Contents\n\n- [Install Docker](#install-docker)\n- [Download](#download)\n- [How to use this image](#how-to-use-this-image)\n- [Next steps](#next-steps)\n- [Important notes](#important-notes)\n- [Update Docker image](#update-docker-image)\n- [Advanced usage](#advanced-usage)\n- [Technical details](#technical-details)\n- [See also](#see-also)\n- [License](#license)\n\n## Install Docker\n\nFirst, [install and run Docker](https://docs.docker.com/install/) on your Linux server.\n\n**Note:** This image does not support Docker for Mac or Windows.\n\n## Download\n\nGet the trusted build from the [Docker Hub registry](https://hub.docker.com/r/hwdsl2/ipsec-vpn-server/):\n\n```\ndocker pull hwdsl2/ipsec-vpn-server\n```\n\nAlternatively, you may [build from source code](#build-from-source-code) on GitHub. Raspberry Pi users, see [here](#use-on-raspberry-pis).\n\n## How to use this image\n\n### Environment variables\n\nThis Docker image uses the following variables, that can be declared in an `env` file ([example](https://github.com/hwdsl2/docker-ipsec-vpn-server/blob/master/vpn.env.example)):\n\n```\nVPN_IPSEC_PSK=your_ipsec_pre_shared_key\nVPN_USER=your_vpn_username\nVPN_PASSWORD=your_vpn_password\n```\n\nThis will create a user account for VPN login, which can be used by your multiple devices[*](#important-notes). The IPsec PSK (pre-shared key) is specified by the `VPN_IPSEC_PSK` environment variable. The VPN username is defined in `VPN_USER`, and VPN password is specified by `VPN_PASSWORD`.\n\nAdditional VPN users are supported, and can be optionally declared in your `env` file like this. Usernames and passwords must be separated by spaces, and usernames cannot contain duplicates. All VPN users will share the same IPsec PSK.\n\n```\nVPN_ADDL_USERS=additional_username_1 additional_username_2\nVPN_ADDL_PASSWORDS=additional_password_1 additional_password_2\n```\n\n**Note:** In your `env` file, DO NOT put `""` or `\'\'` around values, or add space around `=`. DO NOT use these special characters within values: `\\ " \'`. A secure IPsec PSK should consist of at least 20 random characters.\n\nAll the variables to this image are optional, which means you don\'t have to type in any environment variable, and you can have an IPsec VPN server out of the box! Read the sections below for details.\n\n### Start the IPsec VPN server\n\nCreate a new Docker container from this image (replace `./vpn.env` with your own `env` file):\n\n```\ndocker run \\\n    --name ipsec-vpn-server \\\n    --env-file ./vpn.env \\\n    --restart=always \\\n    -p 500:500/udp \\\n    -p 4500:4500/udp \\\n    -d --privileged \\\n    hwdsl2/ipsec-vpn-server\n```\n\n### Retrieve VPN login details\n\nIf you did not specify an `env` file in the `docker run` command above, `VPN_USER` will default to `vpnuser` and both `VPN_IPSEC_PSK` and `VPN_PASSWORD` will be randomly generated. To retrieve them, view the container logs:\n\n```\ndocker logs ipsec-vpn-server\n```\n\nSearch for these lines in the output:\n\n```\nConnect to your new VPN with these details:\n\nServer IP: your_vpn_server_ip\nIPsec PSK: your_ipsec_pre_shared_key\nUsername: your_vpn_username\nPassword: your_vpn_password\n```\n\n(Optional) Backup the generated VPN login details (if any) to the current directory:\n\n```\ndocker cp ipsec-vpn-server:/opt/src/vpn-gen.env ./\n```\n\n### Check server status\n\nTo check the status of your IPsec VPN server, you can pass `ipsec status` to your container like this:\n\n```\ndocker exec -it ipsec-vpn-server ipsec status\n```\n\nOr display current established VPN connections:\n\n```\ndocker exec -it ipsec-vpn-server ipsec whack --trafficstatus\n```\n\n## Next steps\n\nGet your computer or device to use the VPN. Please refer to:\n\n**[Configure IPsec/L2TP VPN Clients](https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/docs/clients.md)**\n\n**[Configure IPsec/XAuth ("Cisco IPsec") VPN Clients](https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/docs/clients-xauth.md)**\n\nIf you get an error when trying to connect, see [Troubleshooting](https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/docs/clients.md#troubleshooting).\n\nEnjoy your very own VPN!\n\n## Important notes\n\n*Read this in other languages: [English](https://github.com/hwdsl2/docker-ipsec-vpn-server/blob/master/README.md#important-notes), [\xe7\xae\x80\xe4\xbd\x93\xe4\xb8\xad\xe6\x96\x87](https://github.com/hwdsl2/docker-ipsec-vpn-server/blob/master/README-zh.md#\xe9\x87\x8d\xe8\xa6\x81\xe6\x8f\x90\xe7\xa4\xba).*\n\n**Windows users**: This [one-time registry change](https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/docs/clients.md#windows-error-809) is required if the VPN server and/or client is behind NAT (e.g. home router).\n\n**Android 6 and 7 users**: If you encounter connection issues, try [these steps](https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/docs/clients.md#android-6-and-7). You may set `sha2-truncbug=yes` (default is `no`) in `/etc/ipsec.conf` by adding `VPN_SHA2_TRUNCBUG=yes` to your `env` file, then re-create the Docker container.\n\nThe same VPN account can be used by your multiple devices. However, due to an IPsec/L2TP limitation, if you wish to connect multiple devices simultaneously from behind the same NAT (e.g. home router), you must use only [IPsec/XAuth mode](https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/docs/clients-xauth.md).\n\nFor servers with an external firewall (e.g. [EC2](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html)/[GCE](https://cloud.google.com/vpc/docs/firewalls)), open UDP ports 500 and 4500 for the VPN. Aliyun users, see [#433](https://github.com/hwdsl2/setup-ipsec-vpn/issues/433).\n\nIf you need to edit VPN config files, you must first [start a Bash session](#bash-shell-inside-container) in the running container.\n\nIf you wish to add, edit or remove VPN user accounts, first update your `env` file, then you must remove and re-create the Docker container using instructions from the [next section](#update-docker-image). Advanced users can [bind mount](#bind-mount-the-env-file) the `env` file.\n\nClients are set to use [Google Public DNS](https://developers.google.com/speed/public-dns/) when the VPN is active. If another DNS provider is preferred, [read below](#use-alternative-dns-servers).\n\n## Update Docker image\n\nTo update your Docker image and container, follow these steps:\n\n```\ndocker pull hwdsl2/ipsec-vpn-server\n```\n\nIf the Docker image is already up to date, you should see:\n\n```\nStatus: Image is up to date for hwdsl2/ipsec-vpn-server:latest\n```\n\nOtherwise, it will download the latest version. To update your Docker container, first write down all your VPN login details (refer to "Retrieve VPN login details" above). Then remove the Docker container with `docker rm -f ipsec-vpn-server`. Finally, re-create it using instructions from the "How to use this image" section.\n\n## Advanced usage\n\n### Use alternative DNS servers\n\nClients are set to use [Google Public DNS](https://developers.google.com/speed/public-dns/) when the VPN is active. If another DNS provider is preferred, define `VPN_DNS_SRV1` and optionally `VPN_DNS_SRV2` in your `env` file, then follow instructions above to re-create the Docker container. For example, if you wish to use [Cloudflare\'s DNS service](https://1.1.1.1):\n\n```\nVPN_DNS_SRV1=1.1.1.1\nVPN_DNS_SRV2=1.0.0.1\n```\n\n### Use on Raspberry Pis\n\nFor use on Raspberry Pis (ARM architecture), you must first build this Docker image on your RPi using instructions from [Build from source code](#build-from-source-code), instead of pulling from Docker Hub. Then follow the other instructions in this document.\n\n### Build from source code\n\nAdvanced users can download and compile the source code from GitHub:\n\n```\ngit clone https://github.com/hwdsl2/docker-ipsec-vpn-server.git\ncd docker-ipsec-vpn-server\ndocker build -t hwdsl2/ipsec-vpn-server .\n```\n\nOr use this if not modifying the source code:\n\n```\ndocker build -t hwdsl2/ipsec-vpn-server github.com/hwdsl2/docker-ipsec-vpn-server.git\n```\n\n### Bash shell inside container\n\nTo start a Bash session in the running container:\n\n```\ndocker exec -it ipsec-vpn-server env TERM=xterm bash -l\n```\n\n(Optional) Install the `nano` editor:\n\n```\napt-get update && apt-get -y install nano\n```\n\nThen run your commands inside the container. When finished, exit the container and restart if needed:\n\n```\nexit\ndocker restart ipsec-vpn-server\n```\n\n### Bind mount the env file\n\nAs an alternative to the `--env-file` option, advanced users can bind mount the `env` file. The advantage of this method is that after updating the `env` file, you can restart the Docker container to take effect instead of re-creating it. To use this method, you must first edit your `env` file and use single quotes `\'\'` to enclose the values of all variables. Then (re-)create the Docker container (replace the first `vpn.env` with your own `env` file):\n\n```\ndocker run \\\n    --name ipsec-vpn-server \\\n    --restart=always \\\n    -p 500:500/udp \\\n    -p 4500:4500/udp \\\n    -v "$(pwd)/vpn.env:/opt/src/vpn.env:ro" \\\n    -d --privileged \\\n    hwdsl2/ipsec-vpn-server\n```\n\n### Enable Libreswan logs\n\nTo keep the Docker image small, Libreswan (IPsec) logs are not enabled by default. If you are an advanced user and wish to enable it for troubleshooting purposes, first start a Bash session in the running container:\n\n```\ndocker exec -it ipsec-vpn-server env TERM=xterm bash -l\n```\n\nThen run the following commands:\n\n```\napt-get update && apt-get -y install rsyslog\nservice rsyslog restart\nservice ipsec restart\nsed -i \'/pluto\\.pid/a service rsyslog restart\' /opt/src/run.sh\nexit\n```\n\nWhen finished, you may check Libreswan logs with:\n\n```\ndocker exec -it ipsec-vpn-server grep pluto /var/log/auth.log\n```\n\nTo check xl2tpd logs, run `docker logs ipsec-vpn-server`.\n\n## Technical details\n\nThere are two services running: `Libreswan (pluto)` for the IPsec VPN, and `xl2tpd` for L2TP support.\n\nThe default IPsec configuration supports:\n\n* IKEv1 with PSK and XAuth ("Cisco IPsec")\n* IPsec/L2TP with PSK\n\nThe ports that are exposed for this container to work are:\n\n* 4500/udp and 500/udp for IPsec\n\n## See also\n\n* [IPsec VPN Server on Ubuntu, Debian and CentOS](https://github.com/hwdsl2/setup-ipsec-vpn)\n* [IKEv2 VPN Server on Docker](https://github.com/gaomd/docker-ikev2-vpn-server)\n\n## License\n\nCopyright (C) 2016-2019 [Lin Song](https://www.linkedin.com/in/linsongui) [![View my profile on LinkedIn](https://static.licdn.com/scds/common/u/img/webpromo/btn_viewmy_160x25.png)](https://www.linkedin.com/in/linsongui)   \nBased on [the work of Thomas Sarlandie](https://github.com/sarfata/voodooprivacy) (Copyright 2012)\n\nThis work is licensed under the [Creative Commons Attribution-ShareAlike 3.0 Unported License](http://creativecommons.org/licenses/by-sa/3.0/)   \nAttribution required: please include my name in any derivative and let me know how you have improved it!\n'