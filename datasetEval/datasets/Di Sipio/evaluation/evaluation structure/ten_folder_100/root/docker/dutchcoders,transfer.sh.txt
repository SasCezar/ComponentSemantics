b'# transfer.sh [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&utm_medium=badge&utm_campaign=&utm_campaign=pr-badge&utm_content=badge) [![Go Report Card](https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh)](https://goreportcard.com/report/github.com/dutchcoders/transfer.sh) [![Docker pulls](https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg)](https://hub.docker.com/r/dutchcoders/transfer.sh/) [![Build Status](https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master)](https://travis-ci.org/dutchcoders/transfer.sh) [![Fuzzit Status](https://app.fuzzit.dev/badge?org_id=transfer.sh)](https://app.fuzzit.dev/orgs/transfer.sh/dashboard)\n\nEasy and fast file sharing from the command-line. This code contains the server with everything you need to create your own instance.\n\nTransfer.sh currently supports the s3 (Amazon S3), gdrive (Google Drive) providers, and local file system (local).\n\n## Disclaimer\nThis project repository has no relation with the service at https://transfer.sh that\'s managed by https://storj.io.\nSo far we cannot address any issue related to the service at https://transfer.sh.\n\n\n## Usage\n\n### Upload:\n```bash\n$ curl --upload-file ./hello.txt https://transfer.sh/hello.txt\n```\n\n### Encrypt & upload:\n```bash\n$ cat /tmp/hello.txt|gpg -ac -o-|curl -X PUT --upload-file "-" https://transfer.sh/test.txt\n````\n\n### Download & decrypt:\n```bash\n$ curl https://transfer.sh/1lDau/test.txt|gpg -o- > /tmp/hello.txt\n```\n\n### Upload to virustotal:\n```bash\n$ curl -X PUT --upload-file nhgbhhj https://transfer.sh/test.txt/virustotal\n```\n\n### Deleting\n```bash\n$ curl -X DELETE <X-Url-Delete Response Header URL>\n```\n\n## Request Headers\n\n### Max-Downloads\n```bash\n$ curl --upload-file ./hello.txt https://transfer.sh/hello.txt -H "Max-Downloads: 1" # Limit the number of downloads\n```\n\n### Max-Days\n```bash\n$ curl --upload-file ./hello.txt https://transfer.sh/hello.txt -H "Max-Days: 1" # Set the number of days before deletion\n```\n\n## Response Headers\n\n### X-Url-Delete\n\nThe URL used to request the deletion of a file. Returned as a response header.\n```bash\ncurl -sD - --upload-file ./hello https://transfer.sh/hello.txt | grep \'X-Url-Delete\'\nX-Url-Delete: https://transfer.sh/hello.txt/BAYh0/hello.txt/PDw0NHPcqU\n```\n\n## Examples\n\nSee good usage examples on [examples.md](examples.md)\n\n## Link aliases\n\nCreate direct download link:\n\nhttps://transfer.sh/1lDau/test.txt --> https://transfer.sh/get/1lDau/test.txt\n\nInline file:\n\nhttps://transfer.sh/1lDau/test.txt --> https://transfer.sh/inline/1lDau/test.txt\n\n## Usage\n\nParameter | Description | Value | Env\n--- | --- | --- | ---\nlistener | port to use for http (:80) | |\nprofile-listener | port to use for profiler (:6060)| |\nforce-https | redirect to https | false |\ntls-listener | port to use for https (:443) | |\ntls-listener-only | flag to enable tls listener only | |\ntls-cert-file | path to tls certificate | |\ntls-private-key | path to tls private key | |\nhttp-auth-user | user for basic http auth on upload | |\nhttp-auth-pass | pass for basic http auth on upload | |\nip-whitelist | comma separated list of ips allowed to connect to the service | |\nip-blacklist | comma separated list of ips not allowed to connect to the service | |\ntemp-path | path to temp folder | system temp |\nweb-path | path to static web files (for development or custom front end) | |\nproxy-path | path prefix when service is run behind a proxy | |\nga-key | google analytics key for the front end | |\nuservoice-key | user voice key for the front end  | |\nprovider | which storage provider to use | (s3, gdrive or local) |\naws-access-key | aws access key | | AWS_ACCESS_KEY\naws-secret-key | aws access key | | AWS_SECRET_KEY\nbucket | aws bucket | | BUCKET\ns3-endpoint | Custom S3 endpoint. | |\ns3-region | region of the s3 bucket | eu-west-1 | S3_REGION\ns3-no-multipart | disables s3 multipart upload | false | |\ns3-path-style | Forces path style URLs, required for Minio. | false | |\nbasedir | path storage for local/gdrive provider| |\ngdrive-client-json-filepath | path to oauth client json config for gdrive provider| |\ngdrive-local-config-path | path to store local transfer.sh config cache for gdrive provider| |\ngdrive-chunk-size | chunk size for gdrive upload in megabytes, must be lower than available memory (8 MB) | |\nlets-encrypt-hosts | hosts to use for lets encrypt certificates (comma seperated) | |\nlog | path to log file| |\n\nIf you want to use TLS using lets encrypt certificates, set lets-encrypt-hosts to your domain, set tls-listener to :443 and enable force-https.\n\nIf you want to use TLS using your own certificates, set tls-listener to :443, force-https, tls-cert=file and tls-private-key.\n\n## Development\n\nSwitched to GO111MODULE\n\n```bash\ngo run main.go --provider=local --listener :8080 --temp-path=/tmp/ --basedir=/tmp/\n```\n\n## Build\n\nIf on go < 1.11\n```bash\ngo get -u -v ./...\n```\n\n```bash\ngo build -o transfersh main.go\n```\n\n## Docker\n\nFor easy deployment, we\'ve created a Docker container.\n\n```bash\ndocker run --publish 8080:8080 dutchcoders/transfer.sh:latest --provider local --basedir /tmp/\n```\n\n## S3 Usage\n\nFor the usage with a AWS S3 Bucket, you just need to specify the following options:\n- provider\n- aws-access-key\n- aws-secret-key\n- bucket\n- s3-region\n\nIf you specify the s3-region, you don\'t need to set the endpoint URL since the correct endpoint will used automatically.\n\n### Custom S3 providers\n\nTo use a custom non-AWS S3 provider, you need to specify the endpoint as definied from your cloud provider.\n\n## Google Drive Usage\n\nFor the usage with Google drive, you need to specify the following options:\n- provider\n- gdrive-client-json-filepath\n- gdrive-local-config-path\n- basedir\n\n### Creating Gdrive Client Json\n\nYou need to create a Oauth Client id from console.cloud.google.com\ndownload the file and place into a safe directory\n\n### Usage example\n\n```go run main.go --provider gdrive --basedir /tmp/ --gdrive-client-json-filepath /[credential_dir] --gdrive-local-config-path [directory_to_save_config] ```\n\n## Contributions\n\nContributions are welcome.\n\n## Creators\n\n**Remco Verhoef**\n- <https://twitter.com/remco_verhoef>\n- <https://twitter.com/dutchcoders>\n\n**Uvis Grinfelds**\n\n## Maintainer\n\n**Andrea Spacca**\n\n## Copyright and license\n\nCode and documentation copyright 2011-2018 Remco Verhoef.\nCode released under [the MIT license](LICENSE).\n'