b'elasticdump\n==================\n\nTools for moving and saving indices.\n\n![picture](https://raw.github.com/taskrabbit/elasticsearch-dump/master/elasticdump.jpg)\n\n---\n\n[![Nodei stats](https://nodei.co/npm/elasticdump.png?downloads=true)](https://npmjs.org/package/elasticdump)\n[![DockerHub Badge](https://dockeri.co/image/taskrabbit/elasticsearch-dump)](https://hub.docker.com/r/taskrabbit/elasticsearch-dump/)\n\n[![Build Status](https://secure.travis-ci.org/taskrabbit/elasticsearch-dump.png?branch=master)](http://travis-ci.org/taskrabbit/elasticsearch-dump)\n[![Downloads](https://img.shields.io/npm/dm/elasticdump.svg)](https://npmjs.com/elasticdump)\n\n\n## Version Warnings!\n\n- Version `1.0.0` of Elasticdump changes the format of the files created by the dump.  Files created with version `0.x.x` of this tool are likely not to work with versions going forward.  To learn more about the breaking changes, vist the release notes for version [`1.0.0`](https://github.com/taskrabbit/elasticsearch-dump/releases/tag/v1.0.0).  If you recive an "out of memory" error, this is probaly the cause.\n- Version `2.0.0` of Elasticdump removes the `bulk` options.  These options were buggy, and differ between versions of Elasticsearch.  If you need to export multiple indexes, look for the `multielasticdump` section of the tool.\n- Version `2.1.0` of Elasticdump moves from using `scan/scroll` (ES 1.x) to just `scan` (ES 2.x).  This is a backwards-compatible change within Elasticsearch, but performance may suffer on Elasticsearch versions prior to 2.x.\n- Version `3.0.0` of Elasticdump has the default queries updated to only work for ElasticSearch version 5+.  The tool *may* be compatible with earlier versions of Elasticsearch, but our version detection method may not work for all ES cluster topologies\n- Version `5.0.0` of Elasticdump contains a breaking change for the s3 transport. _s3Bucket_ and _s3RecordKey_ params are no longer supported please use s3urls instead\n- Version `6.1.0` and higher of Elasticdump contains a change to the upload/dump process. This change allows for overlapping promise processing. The benefit of which is improved performance due increased parallel processing, but a side-effect exists where-by records (data-set) aren\'t processing in sequential order (ordering is no longer guaranteed)\n\n## Installing\n\n(local)\n```bash\nnpm install elasticdump\n./bin/elasticdump\n```\n\n(global)\n```bash\nnpm install elasticdump -g\nelasticdump\n```\n\n## Use\n\n### Standard Install\n\nelasticdump works by sending an `input` to an `output`.  Both can be either an elasticsearch URL or a File.\n\nElasticsearch:\n- format:  `{protocol}://{host}:{port}/{index}`\n- example: `http://127.0.0.1:9200/my_index`\n\nFile:\n- format:  `{FilePath}`\n- example: `/Users/evantahler/Desktop/dump.json`\n\nStdio:\n- format: stdin / stdout\n- format: `$`\n\nYou can then do things like:\n\n```bash\n# Copy an index from production to staging with analyzer and mapping:\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=http://staging.es.com:9200/my_index \\\n  --type=analyzer\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=http://staging.es.com:9200/my_index \\\n  --type=mapping\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=http://staging.es.com:9200/my_index \\\n  --type=data\n\n# Backup index data to a file:\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=/data/my_index_mapping.json \\\n  --type=mapping\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=/data/my_index.json \\\n  --type=data\n\n# Backup and index to a gzip using stdout:\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=$ \\\n  | gzip > /data/my_index.json.gz\n\n# Backup the results of a query to a file\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=query.json \\\n  --searchBody=\'{"query":{"term":{"username": "admin"}}}\'\n\n# Copy a single shard data:\nelasticdump \\\n  --input=http://es.com:9200/api \\\n  --output=http://es.com:9200/api2 \\\n  --params=\'{"preference" : "_shards:0"}\'\n\n# Backup aliases to a file\nelasticdump \\\n  --input=http://es.com:9200/index-name/alias-filter \\\n  --output=alias.json \\\n  --type=alias\n\n# Import aliases into ES\nelasticdump \\\n  --input=./alias.json \\\n  --output=http://es.com:9200 \\\n  --type=alias\n\n# Backup templates to a file\nelasticdump \\\n  --input=http://es.com:9200/template-filter \\\n  --output=templates.json \\\n  --type=template\n\n# Import templates into ES\nelasticdump \\\n  --input=./templates.json \\\n  --output=http://es.com:9200 \\\n  --type=template\n\n# Split files into multiple parts\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=/data/my_index.json \\\n  --fileSize=10mb\n\n# Import data from S3 into ES (using s3urls)\nelasticdump \\\n  --s3AccessKeyId "${access_key_id}" \\\n  --s3SecretAccessKey "${access_key_secret}" \\\n  --input "s3://${bucket_name}/${file_name}.json" \\\n  --output=http://production.es.com:9200/my_index\n\n# Export ES data to S3 (using s3urls)\nelasticdump \\\n  --s3AccessKeyId "${access_key_id}" \\\n  --s3SecretAccessKey "${access_key_secret}" \\\n  --input=http://production.es.com:9200/my_index \\\n  --output "s3://${bucket_name}/${file_name}.json"\n```\n\n\n### Non-Standard Install\n\nIf Elasticsearch is not being served from the root directory the `--input-index` and\n`--output-index` are required. If they are not provided, the additional sub-directories will\nbe parsed for index and type.\n\nElasticsearch:\n- format:  `{protocol}://{host}:{port}/{sub}/{directory...}`\n- example: `http://127.0.0.1:9200/api/search`\n\n```bash\n# Copy a single index from a elasticsearch:\nelasticdump \\\n  --input=http://es.com:9200/api/search \\\n  --input-index=my_index \\\n  --output=http://es.com:9200/api/search \\\n  --output-index=my_index \\\n  --type=mapping\n\n# Copy a single type:\nelasticdump \\\n  --input=http://es.com:9200/api/search \\\n  --input-index=my_index/my_type \\\n  --output=http://es.com:9200/api/search \\\n  --output-index=my_index \\\n  --type=mapping\n\n```\n\n### Docker install\nIf you prefer using docker to use elasticdump, you can download this project from docker hub :\n```bash\ndocker pull taskrabbit/elasticsearch-dump\n```\nThen you can use it just by :\n- using `docker run --rm -ti taskrabbit/elasticsearch-dump`\n- you\'ll need to mount your file storage dir `-v <your dumps dir>:<your mount point>` to your docker container\n\nExample:\n```bash\n# Copy an index from production to staging with mappings:\ndocker run --rm -ti taskrabbit/elasticsearch-dump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=http://staging.es.com:9200/my_index \\\n  --type=mapping\ndocker run --rm -ti taskrabbit/elasticsearch-dump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=http://staging.es.com:9200/my_index \\\n  --type=data\n\n# Backup index data to a file:\ndocker run --rm -ti -v /data:/tmp taskrabbit/elasticsearch-dump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=/tmp/my_index_mapping.json \\\n  --type=data\n```\n\nIf you need to run using `localhost` as your ES host :\n```bash\ndocker run --net=host --rm -ti taskrabbit/elasticsearch-dump \\\n  --input=http://staging.es.com:9200/my_index \\\n  --output=http://localhost:9200/my_index \\\n  --type=data\n```\n\n## Dump Format\n\nThe file format generated by this tool is line-delimited JSON files.  The dump file itself is not valid JSON, but each line is.  We do this so that dumpfiles can be streamed and appended without worrying about whole-file parser integrety.\n\nFor example, if you wanted to parse every line, you could do:\n```\nwhile read LINE; do jsonlint-py "${LINE}" ; done < dump.data.json\n```\n\n## Options\n\n```\nelasticdump: Import and export tools for elasticsearch\nversion: %%version%%\n\nUsage: elasticdump --input SOURCE --output DESTINATION [OPTIONS]\n\n--input\n                    Source location (required)\n--input-index\n                    Source index and type\n                    (default: all, example: index/type)\n--output\n                    Destination location (required)\n--output-index\n                    Destination index and type\n                    (default: all, example: index/type)\n--overwrite\n                    Overwrite output file if it exists\n                    (default: false)                    \n--limit\n                    How many objects to move in batch per operation\n                    limit is approximate for file streams\n                    (default: 100)\n--size\n                    How many objects to retrieve\n                    (default: -1 -> no limit)\n--concurrency\n                    The maximum number of requests the can be made concurrently to a specified transport.\n                    (default: 1)       \n--concurrencyInterval\n                    The length of time in milliseconds in which up to <intervalCap> requests can be made\n                    before the interval request count resets. Must be finite.\n                    (default: 5000)       \n--intervalCap\n                    The maximum number of transport requests that can be made within a given <concurrencyInterval>.\n                    (default: 5)\n--carryoverConcurrencyCount\n                    If true, any incomplete requests from a <concurrencyInterval> will be carried over to\n                    the next interval, effectively reducing the number of new requests that can be created\n                    in that next interval.  If false, up to <intervalCap> requests can be created in the\n                    next interval regardless of the number of incomplete requests from the previous interval.\n                    (default: true)                                                                                       \n--throttleInterval\n                    Delay in milliseconds between getting data from an inputTransport and sending it to an\n                    outputTransport.\n                     (default: 1)\n--debug\n                    Display the elasticsearch commands being used\n                    (default: false)\n--quiet\n                    Suppress all messages except for errors\n                    (default: false)\n--type\n                    What are we exporting?\n                    (default: data, options: [settings, analyzer, data, mapping, alias, template])\n--delete\n                    Delete documents one-by-one from the input as they are\n                    moved.  Will not delete the source index\n                    (default: false)\n--searchBody\n                    Preform a partial extract based on search results\n                    when ES is the input, default values are\n                      if ES > 5\n                        `\'{"query": { "match_all": {} }, "stored_fields": ["*"], "_source": true }\'`\n                      else\n                        `\'{"query": { "match_all": {} }, "fields": ["*"], "_source": true }\'`\n--headers\n                    Add custom headers to Elastisearch requests (helpful when\n                    your Elasticsearch instance sits behind a proxy)\n                    (default: \'{"User-Agent": "elasticdump"}\')\n--params\n                    Add custom parameters to Elastisearch requests uri. Helpful when you for example\n                    want to use elasticsearch preference\n                    (default: null)\n--sourceOnly\n                    Output only the json contained within the document _source\n                    Normal: {"_index":"","_type":"","_id":"", "_source":{SOURCE}}\n                    sourceOnly: {SOURCE}\n                    (default: false)\n--ignore-errors\n                    Will continue the read/write loop on write error\n                    (default: false)\n--scrollTime\n                    Time the nodes will hold the requested search in order.\n                    (default: 10m)\n--maxSockets\n                    How many simultaneous HTTP requests can we process make?\n                    (default:\n                      5 [node <= v0.10.x] /\n                      Infinity [node >= v0.11.x] )\n--timeout\n                    Integer containing the number of milliseconds to wait for\n                    a request to respond before aborting the request. Passed\n                    directly to the request library. Mostly used when you don\'t\n                    care too much if you lose some data when importing\n                    but rather have speed.\n--offset\n                    Integer containing the number of rows you wish to skip\n                    ahead from the input transport.  When importing a large\n                    index, things can go wrong, be it connectivity, crashes,\n                    someone forgetting to `screen`, etc.  This allows you\n                    to start the dump again from the last known line written\n                    (as logged by the `offset` in the output).  Please be\n                    advised that since no sorting is specified when the\n                    dump is initially created, there\'s no real way to\n                    guarantee that the skipped rows have already been\n                    written/parsed.  This is more of an option for when\n                    you want to get most data as possible in the index\n                    without concern for losing some rows in the process,\n                    similar to the `timeout` option.\n                    (default: 0)\n--noRefresh\n                    Disable input index refresh.\n                    Positive:\n                      1. Much increase index speed\n                      2. Much less hardware requirements\n                    Negative:\n                      1. Recently added data may not be indexed\n                    Recommended to use with big data indexing,\n                    where speed and system health in a higher priority\n                    than recently added data.\n--inputTransport\n                    Provide a custom js file to use as the input transport\n--outputTransport\n                    Provide a custom js file to use as the output transport\n--toLog\n                    When using a custom outputTransport, should log lines\n                    be appended to the output stream?\n                    (default: true, except for `$`)\n--transform\n                    A javascript, which will be called to modify documents\n                    before writing it to destination. global variable \'doc\'\n                    is available.\n                    Example script for computing a new field \'f2\' as doubled\n                    value of field \'f1\':\n                        doc._source["f2"] = doc._source.f1 * 2;\n                    May be used multiple times.\n                    Additionally, transform may be performed by a module. See [Module Transform](#module-transform) below.\n--awsChain\n                    Use [standard](https://aws.amazon.com/blogs/security/a-new-and-standardized-way-to-manage-credentials-in-the-aws-sdks/) location and ordering for resolving credentials including environment variables, config files, EC2 and ECS metadata locations\n                    _Recommended option for use with AWS_\n--awsAccessKeyId\n--awsSecretAccessKey\n                    When using Amazon Elasticsearch Service protected by\n                    AWS Identity and Access Management (IAM), provide\n                    your Access Key ID and Secret Access Key.\n                    --sessionToken can also be optionally provided if using temporary credentials\n--awsIniFileProfile\n                    Alternative to --awsAccessKeyId and --awsSecretAccessKey,\n                    loads credentials from a specified profile in aws ini file.\n                    For greater flexibility, consider using --awsChain\n                    and setting AWS_PROFILE and AWS_CONFIG_FILE\n                    environment variables to override defaults if needed\n--awsIniFileName\n                    Override the default aws ini file name when using --awsIniFileProfile\n                    Filename is relative to ~/.aws/\n                    (default: config)\n--support-big-int   \n                    Support big integer numbers\n--retryAttempts  \n                    Integer indicating the number of times a request should be automatically re-attempted before failing\n                    when a connection fails with one of the following errors `ECONNRESET`, `ENOTFOUND`, `ESOCKETTIMEDOUT`,\n                    ETIMEDOUT`, `ECONNREFUSED`, `EHOSTUNREACH`, `EPIPE`, `EAI_AGAIN`\n                    (default: 0)\n                    \n--retryDelay   \n                    Integer indicating the back-off/break period between retry attempts (milliseconds)\n                    (default : 5000)            \n--parseExtraFields\n                    Comma-separated list of meta-fields to be parsed  \n--fileSize\n                    supports file splitting.  This value must be a string supported by the **bytes** module.     \n                    The following abbreviations must be used to signify size in terms of units         \n                    b for bytes\n                    kb for kilobytes\n                    mb for megabytes\n                    gb for gigabytes\n                    tb for terabytes\n                    \n                    e.g. 10mb / 1gb / 1tb\n                    Partitioning helps to alleviate overflow/out of memory exceptions by efficiently segmenting files\n                    into smaller chunks that then be merged if needs be.\n--fsCompress\n                    gzip data before sending outputting to file \n--s3AccessKeyId\n                    AWS access key ID\n--s3SecretAccessKey\n                    AWS secret access key\n--s3Region\n                    AWS region\n--s3Endpoint        \n                    AWS endpoint can be used for AWS compatible backends such as\n                    OpenStack Swift and OpenStack Ceph\n--s3SSLEnabled      \n                    Use SSL to connect to AWS [default true]\n                    \n--s3ForcePathStyle  Force path style URLs for S3 objects [default false]\n                    \n--s3Compress\n                    gzip data before sending to s3  \n\n--retryDelayBase\n                    The base number of milliseconds to use in the exponential backoff for operation retries. (s3)\n--customBackoff\n                    Activate custom customBackoff function. (s3)\n--tlsAuth\n                    Enable TLS X509 client authentication\n--cert, --input-cert, --output-cert\n                    Client certificate file. Use --cert if source and destination are identical.\n                    Otherwise, use the one prefixed with --input or --output as needed.\n--key, --input-key, --output-key\n                    Private key file. Use --key if source and destination are identical.\n                    Otherwise, use the one prefixed with --input or --output as needed.\n--pass, --input-pass, --output-pass\n                    Pass phrase for the private key. Use --pass if source and destination are identical.\n                    Otherwise, use the one prefixed with --input or --output as needed.\n--ca, --input-ca, --output-ca\n                    CA certificate. Use --ca if source and destination are identical.\n                    Otherwise, use the one prefixed with --input or --output as needed.\n--inputSocksProxy, --outputSocksProxy\n                    Socks5 host address\n--inputSocksPort, --outputSocksPort\n                    Socks5 host port\n--help\n                    This page\n```\n\n## Elasticsearch\'s Scroll API\nElasticsearch provides a [scroll](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-scroll.html) API to fetch all documents of an index starting form (and keeping) a consistent snapshot in time, which we use under the hood.  This method is safe to use for large exports since it will maintain the result set in cache for the given period of time.\n\nNOTE: only works for `--output`\n\n## Bypassing self-sign certificate errors\n\nSet the environment `NODE_TLS_REJECT_UNAUTHORIZED=0` before running elasticdump\n\n```bash\n# An alternative method of passing environment variables before execution\n# NB : This only works with linux shells\nNODE_TLS_REJECT_UNAUTHORIZED=0 elasticdump --input="https://localhost:9200" --output myfile\n```\n\n## MultiElasticDump\nThis package also ships with a second binary, `multielasticdump`.  This is a wrapper for the normal elasticdump binary, which provides a limited option set, but will run elasticdump in parallel across many indexes at once.  It runs a process which forks into `n` (default your running host\'s # of CPUs) subprocesses running elasticdump.\n\nThe limited option set includes:\n\n- `parallel`:   `os.cpus()`,\n- `match`:      `\'^.*$\'`,\n- `input`:      `null`,\n- `output`:     `null`,\n- `scrollTime`: `\'10m\'`,\n- `timeout`: `null`,\n- `limit`:      `100`,\n- `offset`:     `0`,\n- `direction`:   `dump`,\n- `ignoreType`:   ``\n- `includeType`:   ``\n- `prefix`:   `\'\'\'`\n- `suffix`:   `\'\'`\n- `interval`:     `1000`\n- `searchbody`: `null`\n- `transform`: `null`\n- `support-big-int`: `false`\n\nIf the `--direction` is `dump`, which is the default, `--input` MUST be a URL for the base location of an ElasticSearch server (i.e. `http://localhost:9200`) and `--output` MUST be a directory. Each index that does match will have a data, mapping, and analyzer file created.\n\nFor loading files that you have dumped from multi-elasticsearch, `--direction` should be set to `load`, `--input` MUST be a directory of a multielasticsearch dump and `--output` MUST be a Elasticsearch server URL.\n\n`--parallel` is how many forks should be run simultaneously and `--match` is used to filter which indexes should be dumped/loaded (regex).\n\n`--ignoreType` allows a type to be ignored from the dump/load. Six options are supported. `data,mapping,analyzer,alias,settings,template`. Multi-type support is available, when used each type must be comma(,)-separated\nand `interval` allows control over the interval for spawning a dump/load for a new index. For small indices this can be set to `0` to reduce delays and optimize performance\ni.e analyzer,alias types are ignored by default\n\n`--includeType` allows a type to be included in the dump/load. Six options are supported. `data,mapping,analyzer,alias,settings,template`. \n\n\nNew options, `--suffix` allows you to add a suffix to the index name being created e.g. `es6-${index}` and\n`--prefix` allows you to add a prefix to the index name e.g. `${index}-backup-2018-03-13`.\n\n## Usage Examples\n\n```bash\n\n# backup ES indices & all their type to the es_backup folder\nmultielasticdump \\\n  --direction=dump \\\n  --match=\'^.*$\'\n  --input=http://production.es.com:9200 \\\n  --output=/tmp/es_backup\n\n# Only backup ES indices ending with a prefix of `-index` (match regex). \n# Only the indices data will be backed up. All other types are ignored.\n# NB: analyzer & alias types are ignored by default\nmultielasticdump \\\n  --direction=dump \\\n  --match=\'^.*-index$\'\n  --input=http://production.es.com:9200 \\\n  --ignoreType=\'mapping,settings,template\'\n  --output=/tmp/es_backup\n```\n\n## Module Transform\n\nWhen specifying the `transform` option, prefix the value with `@` (a curl convention) to load the top-level function which is called with the document and the parsed arguments to the module.\n\nUses a pseudo-URL format to specify arguments to the module as follows. Given:\n\n    elasticdump --transform=\'@./transforms/my-transform?param1=value&param2=another-value\'\n\nwith a module at `./transforms/my-transform.js` with the following:\n\n    module.exports = function (doc, options) {\n        // do something to doc\n    };\n\nwill load module `./transforms/my-transform.js\', and execute the function with `doc` and `options` = `{"param1": "value", "param2": "another-value"}`.\n\nAn example transform for anonymizing data on-the-fly can be found in the `transforms` folder.\n\n## Notes\n\n- this tool is likely to require Elasticsearch version 1.0.0 or higher\n- elasticdump (and elasticsearch in general) will create indices if they don\'t exist upon import\n- when exporting from elasticsearch, you can have export an entire index (`--input="http://localhost:9200/index"`) or a type of object from that index (`--input="http://localhost:9200/index/type"`).  This requires ElasticSearch 1.2.0 or higher\n- If elasticsearch is in a sub-directory, index and type must be provided with a separate argument (`--input="http://localhost:9200/sub/directory --input-index=index/type"`). Using `--input-index=/` will include all indices and types.\n- we are using the `put` method to write objects.  This means new objects will be created and old objects with the same ID will be updated\n- The `file` transport will not overwrite any existing files by default, it will throw an exception of the file already exists. Use `--overwrite` instead.\n- If you need basic http auth, you can use it like this: `--input=http://name:password@production.es.com:9200/my_index`\n- if you choose a stdio output (`--output=$`), you can also request a more human-readable output with `--format=human`\n- if you choose a stdio output (`--output=$`), all logging output will be suppressed\n- if you are using Elasticsearch version 6.0.0 or higher the `offset` parameter is no longer allowed in the scrollContext\n- ES 6.x.x & higher no longer support the `template` property for `_template` all templates prior to ES 6.0 has to be upgraded to use `index_patterns`\n- ES 7.x.x & higher no longer supports `type` property. all templates prior to ES 6.0 has to be upgraded to remove the type property\n- ES 5.x.x ignores offset (from) parameter in the search body. All records will be returned\n- ES 6.x.x [from](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/breaking-changes-6.0.html#_scroll) parameter can no longer be used in the search request body when initiating a scroll\n\nInspired by https://github.com/crate/elasticsearch-inout-plugin and https://github.com/jprante/elasticsearch-knapsack\n\nBuilt at [TaskRabbit](https://www.taskrabbit.com)\n'