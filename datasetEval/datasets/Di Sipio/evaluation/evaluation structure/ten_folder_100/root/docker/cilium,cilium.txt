b"|logo|\n\n|cii| |build-status| |pulls| |slack| |go-report| |go-doc| |rtd| |apache| |gpl|\n\nCilium is open source software for providing and transparently securing network\nconnectivity and loadbalancing between application workloads such as\napplication containers or processes. Cilium operates at Layer 3/4 to provide\ntraditional networking and security services as well as Layer 7 to protect and\nsecure use of modern application protocols such as HTTP, gRPC and Kafka. Cilium\nis integrated into common orchestration frameworks such as Kubernetes and Mesos.\n\nA new Linux kernel technology called BPF is at the foundation of Cilium. It\nsupports dynamic insertion of BPF bytecode into the Linux kernel at various\nintegration points such as: network IO, application sockets, and tracepoints to\nimplement security, networking and visibility logic. BPF is highly efficient\nand flexible. To learn more about BPF, read more in our extensive\n`BPF and XDP Reference Guide`_.\n\n.. image:: https://cdn.rawgit.com/cilium/cilium/master/Documentation/images/cilium-arch.png\n    :align: center\n\nStable Releases\n===============\n\nThe Cilium community maintains minor stable releases for the last three major\nCilium versions. Older Cilium stable versions from major releases prior to that\nare considered EOL. Listed below are the actively maintained release branches\nalong with their latest minor release, corresponding image pull tags and their\nrelease notes:\n\n+-------------------------------------------------------+------------+------------------------------------+--------------------------------------------------------------------------+------------------------------------------------------------------------+\n| `v1.6 <https://github.com/cilium/cilium/tree/v1.6>`__ | 2019-10-08 | ``docker.io/cilium/cilium:v1.6.3`` | `Release Notes <https://github.com/cilium/cilium/releases/tag/v1.6.3>`__ | `General Announcement <https://cilium.io/blog/2019/08/20/cilium-16>`__ |\n+-------------------------------------------------------+------------+------------------------------------+--------------------------------------------------------------------------+------------------------------------------------------------------------+\n| `v1.5 <https://github.com/cilium/cilium/tree/v1.5>`__ | 2019-10-08 | ``docker.io/cilium/cilium:v1.5.9`` | `Release Notes <https://github.com/cilium/cilium/releases/tag/v1.5.9>`__ | `General Announcement <https://cilium.io/blog/2019/04/24/cilium-15>`__ |\n+-------------------------------------------------------+------------+------------------------------------+--------------------------------------------------------------------------+------------------------------------------------------------------------+\n| `v1.4 <https://github.com/cilium/cilium/tree/v1.4>`__ | 2019-10-08 | ``docker.io/cilium/cilium:v1.4.9`` | `Release Notes <https://github.com/cilium/cilium/releases/tag/v1.4.9>`__ | `General Announcement <https://cilium.io/blog/2019/02/12/cilium-14>`__ |\n+-------------------------------------------------------+------------+------------------------------------+--------------------------------------------------------------------------+------------------------------------------------------------------------+\n\nFunctionality Overview\n======================\n\n.. begin-functionality-overview\n\nProtect and secure APIs transparently\n-------------------------------------\n\nAbility to secure modern application protocols such as REST/HTTP, gRPC and\nKafka. Traditional firewalls operates at Layer 3 and 4. A protocol running on a\nparticular port is either completely trusted or blocked entirely. Cilium\nprovides the ability to filter on individual application protocol requests such\nas:\n\n- Allow all HTTP requests with method ``GET`` and path ``/public/.*``. Deny all\n  other requests.\n- Allow ``service1`` to produce on Kafka topic ``topic1`` and ``service2`` to\n  consume on ``topic1``. Reject all other Kafka messages.\n- Require the HTTP header ``X-Token: [0-9]+`` to be present in all REST calls.\n\nSee the section `Layer 7 Policy`_ in our documentation for the latest list of\nsupported protocols and examples on how to use it.\n\nSecure service to service communication based on identities\n-----------------------------------------------------------\n\nModern distributed applications rely on technologies such as application\ncontainers to facilitate agility in deployment and scale out on demand. This\nresults in a large number of application containers to be started in a short\nperiod of time. Typical container firewalls secure workloads by filtering on\nsource IP addresses and destination ports. This concept requires the firewalls\non all servers to be manipulated whenever a container is started anywhere in\nthe cluster.\n\nIn order to avoid this situation which limits scale, Cilium assigns a security\nidentity to groups of application containers which share identical security\npolicies. The identity is then associated with all network packets emitted by\nthe application containers, allowing to validate the identity at the receiving\nnode. Security identity management is performed using a key-value store.\n\nSecure access to and from external services\n-------------------------------------------\n\nLabel based security is the tool of choice for cluster internal access control.\nIn order to secure access to and from external services, traditional CIDR based\nsecurity policies for both ingress and egress are supported. This allows to\nlimit access to and from application containers to particular IP ranges.\n\nSimple Networking\n-----------------\n\nA simple flat Layer 3 network with the ability to span multiple clusters\nconnects all application containers. IP allocation is kept simple by using host\nscope allocators. This means that each host can allocate IPs without any\ncoordination between hosts.\n\nThe following multi node networking models are supported:\n\n* **Overlay:** Encapsulation-based virtual network spanning all hosts.\n  Currently VXLAN and Geneve are baked in but all encapsulation formats\n  supported by Linux can be enabled.\n\n  When to use this mode: This mode has minimal infrastructure and integration\n  requirements. It works on almost any network infrastructure as the only\n  requirement is IP connectivity between hosts which is typically already\n  given.\n\n* **Native Routing:** Use of the regular routing table of the Linux host.\n  The network is required to be capable to route the IP addresses of the\n  application containers.\n\n  When to use this mode: This mode is for advanced users and requires some\n  awareness of the underlying networking infrastructure. This mode works well\n  with:\n\n  - Native IPv6 networks\n  - In conjunction with cloud network routers\n  - If you are already running routing daemons\n\nLoad balancing\n--------------\n\nDistributed load balancing for traffic between application containers and to\nexternal services. The loadbalancing is implemented using BPF using efficient\nhashtables allowing for almost unlimited scale and supports direct server\nreturn (DSR) if the loadbalancing operation is not performed on the source\nhost.\n*Note: load balancing requires connection tracking to be enabled. This is the\ndefault.*\n\nMonitoring and Troubleshooting\n------------------------------\n\nThe ability to gain visibility and to troubleshoot issues is fundamental to the\noperation of any distributed system. While we learned to love tools like\n``tcpdump`` and ``ping`` and while they will always find a special place in our\nhearts, we strive to provide better tooling for troubleshooting. This includes\ntooling to provide:\n\n- Event monitoring with metadata: When a packet is dropped, the tool doesn't\n  just report the source and destination IP of the packet, the tool provides\n  the full label information of both the sender and receiver among a lot of\n  other information.\n\n- Policy decision tracing: Why is a packet being dropped or a request rejected.\n  The policy tracing framework allows to trace the policy decision process for\n  both, running workloads and based on arbitrary label definitions.\n\n- Metrics export via Prometheus: Key metrics are exported via Prometheus for\n  integration with your existing dashboards.\n\n- Hubble_: An observability platform specifically written for Cilium. It\n  provides service dependency maps, operational monitoring and alerting,\n  and application and security visibility based on flow logs.\n\n.. _Hubble: https://github.com/cilium/hubble/\n\nIntegrations\n------------\n\n* Network plugin integrations: CNI_, libnetwork_\n* Container runtime events: containerd_\n* Kubernetes: NetworkPolicy_, Labels_, Ingress_, Service_\n\n.. _CNI: https://github.com/containernetworking/cni\n.. _libnetwork: https://github.com/docker/libnetwork\n.. _containerd: https://github.com/containerd/containerd\n.. _service: https://kubernetes.io/docs/concepts/services-networking/service/\n.. _Ingress: https://kubernetes.io/docs/concepts/services-networking/ingress/\n.. _NetworkPolicy: https://kubernetes.io/docs/concepts/services-networking/network-policies/\n.. _Labels: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n.. _`Layer 7 Policy`: http://docs.cilium.io/en/stable/policy/#layer-7\n\n.. end-functionality-overview\n\nGetting Started\n===============\n\n* `Why Cilium?`_\n* `Getting Started`_\n* `Architecture and Concepts`_\n* `Installing Cilium`_\n* `Frequently Asked Questions`_\n* Contributing_\n\nWhat is eBPF and XDP?\n=====================\n\nBerkeley Packet Filter (BPF) is a Linux kernel bytecode interpreter originally\nintroduced to filter network packets, e.g. for tcpdump and socket filters. The\nBPF instruction set and surrounding architecture has recently been\nsignificantly reworked with additional data structures such as hash tables and\narrays for keeping state as well as additional actions to support packet\nmangling, forwarding, encapsulation, etc. Furthermore, a compiler back end for\nLLVM allows for programs to be written in C and compiled into BPF instructions.\nAn in-kernel verifier ensures that BPF programs are safe to run and a JIT\ncompiler converts the BPF bytecode to CPU architecture specific instructions\nfor native execution efficiency. BPF programs can be run at various hooking\npoints in the kernel such as for incoming packets, outgoing packets, system\ncalls, kprobes, uprobes, tracepoints, etc.\n\nBPF continues to evolve and gain additional capabilities with each new Linux\nrelease. Cilium leverages BPF to perform core data path filtering, mangling,\nmonitoring and redirection, and requires BPF capabilities that are in any Linux\nkernel version 4.8.0 or newer (the latest current stable Linux kernel is\n4.14.x).\n\nMany Linux distributions including CoreOS, Debian, Docker's LinuxKit, Fedora,\nopenSUSE and Ubuntu already ship kernel versions >= 4.8.x. You can check your Linux\nkernel version by running ``uname -a``. If you are not yet running a recent\nenough kernel, check the Documentation of your Linux distribution on how to run\nLinux kernel 4.9.x or later.\n\nTo read up on the necessary kernel versions to run the BPF runtime, see the\nsection Prerequisites_.\n\n.. image:: https://cdn.rawgit.com/cilium/cilium/master/Documentation/images/bpf-overview.png\n    :align: center\n\nXDP is a further step in evolution and enables to run a specific flavor of BPF\nprograms from the network driver with direct access to the packet's DMA buffer.\nThis is, by definition, the earliest possible point in the software stack,\nwhere programs can be attached to in order to allow for a programmable, high\nperformance packet processor in the Linux kernel networking data path.\n\nFurther information about BPF and XDP targeted for developers can be found in\nthe `BPF and XDP Reference Guide`_.\n\nTo know more about Cilium, it's extensions and use cases around Cilium and BPF\ntake a look at `Further Readings <FURTHER_READINGS.rst>`_ section.\n\nCommunity\n=========\n\nSlack\n-----\n\nJoin the Cilium `Slack channel <https://cilium.herokuapp.com/>`_ to chat with\nCilium developers and other Cilium users. This is a good place to learn about\nCilium, ask questions, and share your experiences.\n\nSpecial Interest Groups (SIG)\n-----------------------------\n\nSee `Special Interest groups\n<https://docs.cilium.io/en/stable/community/#special-interest-groups>`_ for a list of all SIGs and their meeting times.\n\nWeekly Developer meeting\n------------------------\n* The developer community is hanging out on zoom on a weekly basis to chat.\n  Everybody is welcome.\n* Weekly, Monday, 9:00 am PT, 12:00 pm (noon) ET, 6:00 pm CEST\n* `Join zoom <https://zoom.us/j/328820525>`_\n\nLicense\n=======\n\nThe cilium user space components are licensed under the\n`Apache License, Version 2.0 <LICENSE>`_. The BPF code templates are licensed\nunder the `General Public License, Version 2.0 <bpf/COPYING>`_.\n\n.. _`Why Cilium?`: http://docs.cilium.io/en/stable/intro/#why-cilium\n.. _`Getting Started`: http://docs.cilium.io/en/stable/gettingstarted/\n.. _`Architecture and Concepts`: http://docs.cilium.io/en/stable/concepts/\n.. _`Installing Cilium`: http://docs.cilium.io/en/stable/gettingstarted/#installation\n.. _`Frequently Asked Questions`: https://github.com/cilium/cilium/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3Akind%2Fquestion+\n.. _Contributing: http://docs.cilium.io/en/stable/contributing/contributing/\n.. _Prerequisites: http://docs.cilium.io/en/doc-1.0/install/system_requirements\n.. _`BPF and XDP Reference Guide`: http://docs.cilium.io/en/stable/bpf/\n\n.. |logo| image:: https://cdn.rawgit.com/cilium/cilium/master/Documentation/images/logo.svg\n    :alt: Cilium Logo\n    :width: 350px\n\n.. |build-status| image:: https://jenkins.cilium.io/job/cilium-ginkgo/job/cilium/job/master/badge/icon\n    :alt: Build Status\n    :scale: 100%\n    :target: https://jenkins.cilium.io/job/cilium-ginkgo/job/cilium/job/master/\n\n.. |go-report| image:: https://goreportcard.com/badge/github.com/cilium/cilium\n    :alt: Go Report Card\n    :target: https://goreportcard.com/report/github.com/cilium/cilium\n\n.. |go-doc| image:: https://godoc.org/github.com/cilium/cilium?status.svg\n    :alt: GoDoc\n    :target: https://godoc.org/github.com/cilium/cilium\n\n.. |rtd| image:: https://readthedocs.org/projects/docs/badge/?version=latest\n    :alt: Read the Docs\n    :target: http://docs.cilium.io/\n\n.. |apache| image:: https://img.shields.io/badge/license-Apache-blue.svg\n    :alt: Apache licensed\n    :target: https://github.com/cilium/cilium/blob/master/LICENSE\n\n.. |gpl| image:: https://img.shields.io/badge/license-GPL-blue.svg\n    :alt: GPL licensed\n    :target: https://github.com/cilium/cilium/blob/master/bpf/COPYING\n\n.. |slack| image:: https://cilium.herokuapp.com/badge.svg\n    :alt: Join the Cilium slack channel\n    :target: https://cilium.herokuapp.com/\n\n.. |cii| image:: https://bestpractices.coreinfrastructure.org/projects/1269/badge\n    :alt: CII Best Practices\n    :target: https://bestpractices.coreinfrastructure.org/projects/1269\n\n.. |pulls| image:: https://img.shields.io/docker/pulls/cilium/cilium.svg\n    :alt: Cilium pulls\n    :target: https://hub.docker.com/r/cilium/cilium/tags/\n"