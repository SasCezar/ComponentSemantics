b'# Docker Symfony (PHP7-FPM - NGINX - MySQL - ELK)\n\n[![Build Status](https://travis-ci.org/maxpou/docker-symfony.svg?branch=master)](https://travis-ci.org/maxpou/docker-symfony)\n\n![](doc/schema.png)\n\nDocker-symfony gives you everything you need for developing Symfony application. This complete stack run with docker and [docker-compose (1.7 or higher)](https://docs.docker.com/compose/).\n\n## Installation\n\n1. Create a `.env` from the `.env.dist` file. Adapt it according to your symfony application\n\n    ```bash\n    cp .env.dist .env\n    ```\n\n\n2. Build/run containers with (with and without detached mode)\n\n    ```bash\n    $ docker-compose build\n    $ docker-compose up -d\n    ```\n\n3. Update your system host file (add symfony.local)\n\n    ```bash\n    # UNIX only: get containers IP address and update host (replace IP according to your configuration) (on Windows, edit C:\\Windows\\System32\\drivers\\etc\\hosts)\n    $ sudo echo $(docker network inspect bridge | grep Gateway | grep -o -E \'([0-9]{1,3}\\.){3}[0-9]{1,3}\') "symfony.local" >> /etc/hosts\n    ```\n\n    **Note:** For **OS X**, please take a look [here](https://docs.docker.com/docker-for-mac/networking/) and for **Windows** read [this](https://docs.docker.com/docker-for-windows/#/step-4-explore-the-application-and-run-examples) (4th step).\n\n4. Prepare Symfony app\n    1. Update app/config/parameters.yml\n\n        ```yml\n        # path/to/your/symfony-project/app/config/parameters.yml\n        parameters:\n            database_host: db\n        ```\n\n    2. Composer install & create database\n\n        ```bash\n        $ docker-compose exec php bash\n        $ composer install\n        # Symfony2\n        $ sf doctrine:database:create\n        $ sf doctrine:schema:update --force\n        # Only if you have `doctrine/doctrine-fixtures-bundle` installed\n        $ sf doctrine:fixtures:load --no-interaction\n        # Symfony3\n        $ sf3 doctrine:database:create\n        $ sf3 doctrine:schema:update --force\n        # Only if you have `doctrine/doctrine-fixtures-bundle` installed\n        $ sf3 doctrine:fixtures:load --no-interaction\n        ```\n\n5. Enjoy :-)\n\n## Usage\n\nJust run `docker-compose up -d`, then:\n\n* Symfony app: visit [symfony.local](http://symfony.local)  \n* Symfony dev mode: visit [symfony.local/app_dev.php](http://symfony.local/app_dev.php)  \n* Logs (Kibana): [symfony.local:81](http://symfony.local:81)\n* Logs (files location): logs/nginx and logs/symfony\n\n## Customize\n\nIf you want to add optionnals containers like Redis, PHPMyAdmin... take a look on [doc/custom.md](doc/custom.md).\n\n## How it works?\n\nHave a look at the `docker-compose.yml` file, here are the `docker-compose` built images:\n\n* `db`: This is the MySQL database container,\n* `php`: This is the PHP-FPM container in which the application volume is mounted,\n* `nginx`: This is the Nginx webserver container in which application volume is mounted too,\n* `elk`: This is a ELK stack container which uses Logstash to collect logs, send them into Elasticsearch and visualize them with Kibana.\n\nThis results in the following running containers:\n\n```bash\n$ docker-compose ps\n           Name                          Command               State              Ports            \n--------------------------------------------------------------------------------------------------\ndockersymfony_db_1            /entrypoint.sh mysqld            Up      0.0.0.0:3306->3306/tcp      \ndockersymfony_elk_1           /usr/bin/supervisord -n -c ...   Up      0.0.0.0:81->80/tcp          \ndockersymfony_nginx_1         nginx                            Up      443/tcp, 0.0.0.0:80->80/tcp\ndockersymfony_php_1           php-fpm                          Up      0.0.0.0:9000->9000/tcp      \n```\n\n## Useful commands\n\n```bash\n# bash commands\n$ docker-compose exec php bash\n\n# Composer (e.g. composer update)\n$ docker-compose exec php composer update\n\n# SF commands (Tips: there is an alias inside php container)\n$ docker-compose exec php php /var/www/symfony/app/console cache:clear # Symfony2\n$ docker-compose exec php php /var/www/symfony/bin/console cache:clear # Symfony3\n# Same command by using alias\n$ docker-compose exec php bash\n$ sf cache:clear\n\n# Retrieve an IP Address (here for the nginx container)\n$ docker inspect --format \'{{ .NetworkSettings.Networks.dockersymfony_default.IPAddress }}\' $(docker ps -f name=nginx -q)\n$ docker inspect $(docker ps -f name=nginx -q) | grep IPAddress\n\n# MySQL commands\n$ docker-compose exec db mysql -uroot -p"root"\n\n# F***ing cache/logs folder\n$ sudo chmod -R 777 app/cache app/logs # Symfony2\n$ sudo chmod -R 777 var/cache var/logs var/sessions # Symfony3\n\n# Check CPU consumption\n$ docker stats $(docker inspect -f "{{ .Name }}" $(docker ps -q))\n\n# Delete all containers\n$ docker rm $(docker ps -aq)\n\n# Delete all images\n$ docker rmi $(docker images -q)\n```\n\n## FAQ\n\n* Got this error: `ERROR: Couldn\'t connect to Docker daemon at http+docker://localunixsocket - is it running?\nIf it\'s at a non-standard location, specify the URL with the DOCKER_HOST environment variable.` ?  \nRun `docker-compose up -d` instead.\n\n* Permission problem? See [this doc (Setting up Permission)](http://symfony.com/doc/current/book/installation.html#checking-symfony-application-configuration-and-setup)\n\n* How to config Xdebug?\nXdebug is configured out of the box!\nJust config your IDE to connect port  `9001` and id key `PHPSTORM`\n\n## Contributing\n\nFirst of all, **thank you** for contributing \xe2\x99\xa5  \nIf you find any typo/misconfiguration/... please send me a PR or open an issue. You can also ping me on [twitter](https://twitter.com/_maxpou).  \nAlso, while creating your Pull Request on GitHub, please write a description which gives the context and/or explains why you are creating it.\n'