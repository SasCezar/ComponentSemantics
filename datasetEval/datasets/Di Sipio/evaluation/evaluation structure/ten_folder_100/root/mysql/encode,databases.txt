b'# Databases\n\n<p>\n<a href="https://travis-ci.org/encode/databases">\n    <img src="https://travis-ci.org/encode/databases.svg?branch=master" alt="Build Status">\n</a>\n<a href="https://codecov.io/gh/encode/databases">\n    <img src="https://codecov.io/gh/encode/databases/branch/master/graph/badge.svg" alt="Coverage">\n</a>\n<a href="https://pypi.org/project/databases/">\n    <img src="https://badge.fury.io/py/databases.svg" alt="Package version">\n</a>\n</p>\n\nDatabases gives you simple asyncio support for a range of databases.\n\nIt allows you to make queries using the powerful [SQLAlchemy Core][sqlalchemy-core]\nexpression language, and provides support for PostgreSQL, MySQL, and SQLite.\n\nDatabases is suitable for integrating against any async Web framework, such as [Starlette][starlette],\n[Sanic][sanic], [Responder][responder], [Quart][quart], [aiohttp][aiohttp], [Tornado][tornado], [FastAPI][fastapi], or [Bocadillo][bocadillo].\n\n**Documentation**: [https://www.encode.io/databases/](https://www.encode.io/databases/)\n\n**Community**: [https://discuss.encode.io/c/databases](https://discuss.encode.io/c/databases)\n\n**Requirements**: Python 3.6+\n\n---\n\n## Installation\n\n```shell\n$ pip install databases\n```\n\nYou can install the required database drivers with:\n\n```shell\n$ pip install databases[postgresql]\n$ pip install databases[mysql]\n$ pip install databases[sqlite]\n```\n\nDriver support is providing using one of [asyncpg][asyncpg], [aiomysql][aiomysql], or [aiosqlite][aiosqlite].\n\n---\n\n## Quickstart\n\nFor this example we\'ll create a very simple SQLite database to run some\nqueries against.\n\n```shell\n$ pip install databases[sqlite]\n$ pip install ipython\n```\n\nWe can now run a simple example from the console.\n\nNote that we want to use `ipython` here, because it supports using `await`\nexpressions directly from the console.\n\n```python\n# Create a database instance, and connect to it.\nfrom databases import Database\ndatabase = Database(\'sqlite:///example.db\')\nawait database.connect()\n\n# Create a table.\nquery = """CREATE TABLE HighScores (id INTEGER PRIMARY KEY, name VARCHAR(100), score INTEGER)"""\nawait database.execute(query=query)\n\n# Insert some data.\nquery = "INSERT INTO HighScores(name, score) VALUES (:name, :score)"\nvalues = [\n    {"name": "Daisy", "score": 92},\n    {"name": "Neil", "score": 87},\n    {"name": "Carol", "score": 43},\n]\nawait database.execute_many(query=query, values=values)\n\n#\xc2\xa0Run a database query.\nquery = "SELECT * FROM HighScores"\nrows = await database.fetch_all(query=query)\nprint(\'High Scores:\', rows)\n```\n\nCheck out the documentation on [making database queries](https://www.encode.io/databases/database_queries/)\nfor examples of how to start using databases together with SQLAlchemy core expressions.\n\n\n<p align="center">&mdash; \xe2\xad\x90\xef\xb8\x8f &mdash;</p>\n<p align="center"><i>Databases is <a href="https://github.com/encode/databases/blob/master/LICENSE.md">BSD licensed</a> code. Designed & built in Brighton, England.</i></p>\n\n[sqlalchemy-core]: https://docs.sqlalchemy.org/en/latest/core/\n[sqlalchemy-core-tutorial]: https://docs.sqlalchemy.org/en/latest/core/tutorial.html\n[alembic]: https://alembic.sqlalchemy.org/en/latest/\n[asyncpg]: https://github.com/MagicStack/asyncpg\n[aiomysql]: https://github.com/aio-libs/aiomysql\n[aiosqlite]: https://github.com/jreese/aiosqlite\n\n[starlette]: https://github.com/encode/starlette\n[sanic]: https://github.com/huge-success/sanic\n[responder]: https://github.com/kennethreitz/responder\n[quart]: https://gitlab.com/pgjones/quart\n[aiohttp]: https://github.com/aio-libs/aiohttp\n[tornado]: https://github.com/tornadoweb/tornado\n[fastapi]: https://github.com/tiangolo/fastapi\n[bocadillo]: https://github.com/bocadilloproject/bocadillo\n'