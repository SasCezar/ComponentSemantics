b'LASP\n====\n\n![gif](https://i.imgur.com/avAppLA.gif)\n![gif](https://i.imgur.com/8KTOr2u.gif)\n\n**LASP** is a Unity plugin providing low-latency, high-performance and\neasy-to-use audio input functionality that is useful for creating audio\nreactive visuals.\n\nFeatures\n--------\n\n- Low latency (less than 16 ms) audio input.\n- High performance audio analysis (peak level detection, RMS calculation) with\n  C++ native implementation.\n- Three band (low, middle, high) filter bank useful for detecting rhythmic\n  accents.\n- Dynamic normalization based on the most recent peak level.\n- Multi platform support via [PortAudio].\n\n[PortAudio]: http://www.portaudio.com\n\nSystem Requirements\n-------------------\n\n- Unity 2018.3 or later\n\nAt the moment, LASP only supports desktop platforms (Windows, macOS and Linux).\n\nInstallation\n------------\n\nDownload one of the unitypackage files from the [Releases] page and import it\nto a project.\n\n[Releases]: https://github.com/keijiro/Lasp/releases\n\nYou can also use [Git support on Package Manager] to import the package. Add\nthe following line to the `dependencies` section in the package manifest file\n(`Packages/manifest.json`).\n\n```\n"jp.keijiro.lasp": "https://github.com/keijiro/Lasp.git#upm"\n```\n\n[Git support on Package Manager]:\n    https://forum.unity.com/threads/git-support-on-package-manager.573673/\n\nAudio Level Tracker Component\n-----------------------------\n\nThe **Audio Level Tracker** component is used to receive audio input and\ncontrol other components by normalized audio level.\n\n![GIF](https://i.imgur.com/ddCZSs5.gif)\n\nIt tracks the most recent peak level and calculates the normalized level value\nbased on the difference between the current level and the peak level. It only\noutputs an effective value when the current level is in its dynamic range,\nwhich is indicated by the gray band in the VU meter.\n\n### Filter Type\n\nFour types of filters are available: **Bypass**, **Low-Pass**, **Band-Pass**\nand **High-Pass**. These filters are useful to detect a specific type of\nrhythmic accents. For instance, the low-pass filter can be used to make a\nbehavior that reacts to kick drums and basslines.\n\n### Dynamic Range (dB)\n\nThis specifies the range of audio level normalization; The output value becomes\nzero when the input level is equal or lower than (*peak* - *dynamic range*).\n\n### Peak Tracking\n\nWhen enabled, it automatically tracks the peak level as explained above. When\ndisabled, the peak level is fixed at 0 dB. In this case, the effective range\ncan be manually controlled by the **Gain** property, which is only shown when\npeak tracking is disabled.\n\n### Hold And Fall Down\n\nThis adds a "peak-hold and fall down" behavior to the output value that is\ncommonly used in VU meters. This is useful to make choppy animation smooth.\n\n![GIF](https://i.imgur.com/MEojdmD.gif)\n\nScripting Interface\n-------------------\n\nLASP also provides audio input functionality via the [`MasterInput`] class. All\nthe following methods are implemented as static methods and can be used without\nany setup.\n\n#### GetPeakLevel/GetPeakLevelDecibel\n\n`GetPeakLevel`/`GetPeakLevelDecibel` are used to get the peak level of the\naudio input during the last frame. `GetPeakLevel` returns the value in linear\nscale; `GetPeakLevelDecibel` uses dBFS instead.\n\n`MasterInput` automatically caches the results, so that these methods can be\ncalled multiple times without wasting CPU time.\n\n#### CalculateRMS/CalculateRMSDecibel\n\n`CalculateRMS`/`CalculateRMSDecibel` are almost the same to\n`GetPeakLevel`/`GetPeakLevelDecibel` but use RMS (root mean square) instead\nof peak level.\n\n#### RetrieveWaveform\n\n`RetrieveWaveform` copies the most recent waveform data from the internal\nbuffer to a given float array. The length of the array must be shorter than the\ninternal buffer. It\'s safe to use 1024 or less.\n\n[`MasterInput`]: Assets/Lasp/Runtime/LaspCommon.cs#L16\n\nTips\n----\n\n### Keep dynamic range as narrow as possible\n\nAlthough it\'s important to have a wide dynamic range for expressiveness, it\ntends to make animation slower and unclear. In general, it\'s recommended to\nkeep the dynamic range as narrow as possible to make animation fast and\naccent-sensitive.\n\n![GIF](https://i.imgur.com/kEvGqEG.gif)\n\nCurrent Limitations\n-------------------\n\n- LASP always tries to use the system default device for recording. There is no\n  way to use a device that is not assigned as default.\n- LASP only supports monophonic input. Only the first channel (the left channel\n  in case of stereo input) will be enabled when using a multi-channel audio\n  device.\n'