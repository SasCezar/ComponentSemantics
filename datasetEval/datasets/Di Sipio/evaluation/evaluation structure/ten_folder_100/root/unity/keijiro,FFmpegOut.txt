b"FFmpegOut\n=========\n\n![gif](http://i.imgur.com/bkQlFxX.gif)\n\n**FFmpegOut** is a Unity plugin that allows the Unity editor and applications to\nrecord video using [FFmpeg] as a video encoder.\n\n[FFmpeg]: https://ffmpeg.org/\n\nDifferences between Unity Recorder\n----------------------------------\n\nFirst of all, note that **[Unity Recorder] would be a better choice in most\ncases for the same purpose**. It's strongly recommended to check and try it out\nbefore installing FFmpegOut.\n\n### Unity Recorder\n\n- Pros: Easy to use. Better UI/UX.\n- Pros: Stable and robust. Officially supported by Unity.\n\n### FFmpegOut\n\n- Pros: Supports a wide variety of codecs.\n- Cons: Non user friendly UI/UX.\n- Cons: Complex legal factors (GPL/LGPL, patent risk)\n\nIn short, you should use Unity Recorder unless you need a special codec like\nProRes or lossless H.264.\n\n[Unity Recorder]:\n    https://assetstore.unity.com/packages/essentials/unity-recorder-94079\n\nSystem Requirements\n-------------------\n\n- Unity 2018.3 or later\n- Windows: Direct3D 11\n- macOS: Metal\n- Linux: Vulkan\n\nFFmpegOut only supports desktop platforms.\n\nFFmpegOut works not only on the legacy rendering paths (forward/deferred) but\nalso on the standard scriptable render pipelines (LWRP/HDRP).\n\nInstallation\n------------\n\nDownload and import the following packages into your project.\n\n- [FFmpegOut package] (MIT license)\n- [FFmpegOutBinaries package] (GPL)\n\n[FFmpegOut package]: https://github.com/keijiro/FFmpegOut/releases\n[FFmpegOutBinaries package]:\n    https://github.com/keijiro/FFmpegOutBinaries/releases\n\nCamera Capture component\n------------------------\n\nThe **Camera Capture component** (`CameraCapture`) is used to capture frames\nrendered by an attached camera.\n\n![inspector](https://i.imgur.com/M4fxPov.png)\n\nIt has a few properties for recording video: frame dimensions, preset and frame\nrate.\n\n### Frame Dimensions (width and height)\n\nThe dimensions of recorded video are specified with the **Width** and\n**Height** properties. The size of the screen or the game view will be overridden\nby these values.\n\n### Presets\n\nAt the moment the following presets are available for use.\n\n| Name               | Container | Description                             |\n| ------------------ | --------- | --------------------------------------- |\n| H.264 Default      | MP4       | **Recommended for general use.**        |\n| H.264 NVIDIA       | MP4       | Highly optimized. Requires a NVIDIA GPU |\n| H.264 Lossless 420 | MP4       | Recommended for pre-render use.         |\n| H.264 Lossless 444 | MP4       | High quality but not widely supported.  |\n| HEVC Default       | MP4       | High quality but slow.                  |\n| HEVC NVIDIA        | MP4       | Highly optimized. Requires a NVIDIA GPU |\n| ProRes 422         | QuickTime |                                         |\n| ProRes 4444        | QuickTime | **Supports alpha channel.**             |\n| VP8                | WebM      |                                         |\n| VP9                | WebM      | High quality but slow.                  |\n| HAP                | QuickTime |                                         |\n| HAP Alpha          | QuickTime | Supports alpha channel                  |\n| HAP Q              | QuickTime |                                         |\n\n### Frame Rate\n\nThe **Frame Rate** property controls the sampling frequency of the capture\ncomponent. Note that it's independent from the application frame rate. It\ndrops/duplicates frames to fill gaps between the recording frame rate and the\napplication frame rate. To avoid frame dropping, consider using the **frame\nrate controller** component (see below).\n\nFrame Rate Controller component\n-------------------------------\n\nThe **Frame Rate Controller** component is a small utility to control the\napplication frame rate.\n\n![inspector](https://i.imgur.com/PYaFo38.png)\n\nIt tries controlling frame rate via [Application.targetFrameRate] and\n[QualitySettings.vSyncCount]. Note that it only works in a best-effort fashion.\nAlthough it's expected to provide a better result, it's not guaranteed to work\nexactly as specified.\n\nWhen the **Offline Mode** property is enabled, it explicitly controls the\napplication frame rate via [Time.captureFramerate]. In this mode, application\ntime is decoupled from wall-clock time so it's guaranteed that no frame\ndropping happens. This is useful when using the capture component to output\npre-render footage.\n\n[Application.targetFrameRate]:\n    https://docs.unity3d.com/ScriptReference/Application-targetFrameRate.html\n[QualitySettings.vSyncCount]:\n    https://docs.unity3d.com/ScriptReference/QualitySettings-vSyncCount.html\n[Time.captureFramerate]:\n    https://docs.unity3d.com/ScriptReference/Time-captureFramerate.html\n\nLicense\n-------\n\n[MIT](LICENSE.md)\n\nNote that the [FFmpegOutBinaries package] is not placed under this license. \nWhen distributing an application with the package, it must be taken into\naccount that multiple licenses are involved. See the [FFmpeg License] page\nfor further details.\n\n[FFmpeg License]: https://www.ffmpeg.org/legal.html\n"