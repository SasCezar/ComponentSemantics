b"Swarm\n=====\n\n**Swarm** is an experimental project that tries to find an interesting way of\nutilizing the [procedural instancing] feature that was newly introduced in\nUnity 5.6.\n\nThere are two types of renderers in *Swarm*.\n\n**Swirling Swarm**\n\n![screenshot](http://i.imgur.com/qyKgqUg.gif)\n![screenshot](http://i.imgur.com/hNgbg86.gif)\n\n*Swirling Swarm* simulates particle motion within a [divergence-free noise\nfield] and draws trace lines along it. The simulation is reset in every frame,\nbut the noise field keeps moving slowly, so that it gives the impression that\nthe swirls are slowly moving around and changing their shapes.\n\n**Crawling Swarm**\n\n![screenshot](http://i.imgur.com/J9XxrgG.gif)\n![screenshot](http://i.imgur.com/sZGZsXR.gif)\n\nThe basic concept of *Crawling Swarm* is the same to *Swirling Swarm*; it\nsimulates particle motion within a noise field, but it's constrained with a\n[distance field volume]. It tries to keep distances between the particles and\nthe object surface as low as possible. It gives the feeling that the lines are\ncrawling around on the surface and cover it.\n\n[procedural instancing]: https://docs.unity3d.com/ScriptReference/Graphics.DrawMeshInstancedIndirect.html\n[divergence-free noise field]: http://martian-labs.com/martiantoolz/files/DFnoiseR.pdf\n[distance field volume]: https://github.com/keijiro/DFVolume\n\nSystem Requirements\n-------------------\n\n- Unity 5.6 or later\n\n*Swarm* only runs on the platforms that support [compute shaders] and [GPU\ninstancing].\n\n[compute shaders]: https://docs.unity3d.com/Manual/ComputeShaders.html\n[GPU instancing]: https://docs.unity3d.com/Manual/GPUInstancing.html\n\nLicense\n-------\n\n[MIT](LICENSE.md)\n"