b'<img src="https://bashhub.com/assets/images/bashhub-logo.png" alt="Bashhub Logo">\n\nBashhub saves every terminal command entered across all sessions and systems and provides powerful querying across all commands.\n\n[![Build Status](https://api.travis-ci.org/rcaloras/bashhub-client.svg?branch=master)](https://travis-ci.org/rcaloras/bashhub-client)\n[![GitHub version](https://badge.fury.io/gh/rcaloras%2Fbashhub-client.svg)](https://badge.fury.io/gh/rcaloras%2Fbashhub-client)\n\n### Features\n- Super command search by using context about how commands are executed.\n  - e.g. the directory, session, system, exit status, etc.\n- Unlimited detailed terminal history stored in the cloud.\n  - [Stored privately and encrypted at rest](https://github.com/rcaloras/bashhub-client/wiki/Security-and-Privacy).\n- Support across systems. Access your terminal history from anywhere!\n- Support for Bash and Zsh with a sweet cli for everything.\n\n![gif](http://i.imgur.com/02ABZxn.gif)\n\n## Quick Install\n```bash\ncurl -OL https://bashhub.com/setup && bash setup\n```\nFor Zsh\n```zsh\ncurl -OL https://bashhub.com/setup && zsh setup\n```\n\nDetailed installation instructions can be found at\nhttps://github.com/rcaloras/bashhub-client/wiki/Install\n\n# Usage\nBashhub can be accessed from the command line in a couple ways:\n\n- `bh` for searching\n- `bashhub` for everything else\n\nIt also provides a key binding of `ctrl + b` for quickly dropping into interactive search.\n\n## Search\nYou can search through your commands in a lot of different ways. Check `bh --help` for more specifics. By default `bh` will output the most recently used unique commands to standard out. Adding the `-i` argument to any `bh` search will make it **interactive**. There are also several arguments to pass to filter, query, and get more specific about your searches!\n\n## Examples\n\nThe last 100 commands you executed anywhere. (100 is default limit without `-n`)\n```bash\n$ bh\n```\n\nThe last 20 files I\'ve grep\'d.\n```bash\n$ bh -n 20 "grep"\n```\nFind that wget command with interactive search to execute it again :P\n```bash\n$ bh -i "wget github"\n```\n\n### Directory-specific Searching\n\nThe last commands you executed in this directory.\n```bash\n$ bh -d\n```\nThe last 10 things you vim\'d in this directory\n```bash\n$ bh -d -n 10 "vim"\n```\n\n### System-specific Searching\n\nThe last 10 curl commands you produced on this system\n\n```bash\n$ bh -sys -n 10 "curl"\n```\n\n### How Search Results are Ordered\nBy default results are sorted by **most recently** used, and are **unique**. This means frequent commands like `git status` or `ls` will only appear once in the position they were most recently invoked.\n\nThis can be altered by using the `-dups` command to include duplicates\n\nYour git commands including duplicates.\n\n```bash\n$ bh -dups "git"\n```\n\n## Interactive Search\nOne of the most useful features is interactive search which is accessed via `bh -i` or `ctrl + b`. This is similar to reverse search i.e. `ctrl + r`. Interactive search drops you into a small menu where you can select a command to run on the command line.\n\nEnter interactive search for all the rsync commands executed in this directory\n```bash\n$ bh -i -d\n(bashhub-i-search): rsync\n```\n\n### Command Details\nFrom interactive search you can also access detailed information on each command by hitting `i` or `space` on any listed command.\n\n![Command Details](http://i.imgur.com/is0gNnB.png)\n\n\n## Bashhub Status\nYou can get a summary of your user\'s stats/status by using the `status` command.\n```bash\nbashhub status\n```\nMost of this information is also displayed on the user profile page.\n\n```bash\n=== Bashhub Status\nhttp://bashhub.com/u/rccola\nTotal Commands: 94965\nTotal Sessions: 16400\nTotal Systems:  18\n===\nSession PID 15311 Started 9 days ago\nCommands In Session: 3\nCommands Today: 47\n```\n\n### Search with Fuzzy Finder\nAn efficient way of searching is using `bashhub` in combination with [`fzf`](https://github.com/junegunn/fzf). Put this in your `.bashrc`.\n\n```bash\nfunction my_alias {\n  eval $(bh | fzf)\n}\n```\n\nThis will make the function available globally in your terminal.\n\n## Filtering Commands\nYou can filter commands from being recorded to Bashhub via a regex set to the environment variable `BH_FILTER`. These commands will be ignored and omittted from Bashhub.\n```bash\n# Filter out any commands for postgres or ssh\nexport BH_FILTER="(psql|ssh)"\nssh rcaloras@some-ip-address # will not be saved\n```\n\nYou can check the configuration of this command via the `bashhub filter` subcommand.\n```bash\n# Check if a command is filtered by my regex\nexport BH_FILTER="(-p)"\nbashhub filter "mysql -u root -p plain-text-password"\nBH_FILTER=(-p)\nmysql -u root -p plain-text-password\nIs Filtered. Matched [\'-p\']\n```\n\n## Disabling Recording Commands\nYou can turn on/off recording to Bashhub via `bashhub on` and `bashhub off`. By default this only affects the current bash session.\n\n```bash\n$ bashhub off\n$ echo "Recording is now disabled for this session. This command won\'t be saved."\n....\n$ bashhub on\n$ echo "Recording commands is now re-enabled"\n```\nYou can disable for all sessions by setting `bashhub off --global` this sets `save_commands = False` in your bashhub config.\n\n## Ignoring Commands\n`#ignore` added to any command will omit it from being saved. Simply add it to the end of any command and it won\'t be recorded in Bashhub.\n\n```bash\n$ echo "this command won\'t be saved" #ignore\n```\n\n## Deleting Commands\nYou can delete commands from Bashhub through interactive search by pressing `Delete` or `Backspace` while a command is highlighted. A small dialog box will open to confirm the commands deletion. If a command is deleted, it is permanently removed from Bashhub.\n\n![gif](http://i.imgur.com/sHzvEJx.gif)\n\n## Feature Requests, Bugs, and Issues\nFeel free to post in:\nhttps://github.com/rcaloras/bashhub-client/issues\n\nYou can also get support and follow updates [@Bashhub](https://twitter.com/bashhub) on Twitter.\n'