b'<p align="center">\n  <a href="https://github.com/geekidea/spring-boot-plus">\n   <img alt="spring-boot-plus logo" src="https://springboot.plus/img/logo.png">\n  </a>\n</p>\n<p align="center">\n  Everyone can develop projects independently, quickly and efficiently\xef\xbc\x81\n</p>\n\n<p align="center">  \n  <a href="https://github.com/geekidea/spring-boot-plus/">\n    <img alt="spring-boot-plus version" src="https://img.shields.io/badge/spring--boot--plus-1.4.0-blue">\n  </a>\n  <a href="https://github.com/spring-projects/spring-boot">\n    <img alt="spring boot version" src="https://img.shields.io/badge/spring%20boot-2.2.0.RELEASE-brightgreen">\n  </a>\n  <a href="https://www.apache.org/licenses/LICENSE-2.0">\n    <img alt="code style" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?style=flat-square">\n  </a>\n</p>\n\n## What is spring-boot-plus?\n\n### A **easy-to-use**, **high-speed**, **high-efficient**, **feature-rich**, **open source** spring boot scaffolding.\n> spring-boot-plus is a background rapid development framework that integrates spring boot common development components.\n\n> Front-end and back-end separation, focusing on back-end services\n\n## Purpose\n> Everyone can develop projects independently, quickly and efficiently\xef\xbc\x81\n\n## Repository\n#### [GITHUB](https://github.com/geekidea/spring-boot-plus) | [GITEE](https://gitee.com/geekidea/spring-boot-plus)\n\n## Website\n#### [springboot.plus](http://springboot.plus)\n\n## Features\n- Integrated spring boot common development component set, common configuration, AOP log, etc\n- Integrated mybatis-plus fast dao operation\n- Quickly generate background code:entity/param/vo/controller/service/mapper/xml\n- Integrated swagger2, automatic generation of api documents\n- Integrated JWT,Shiro/Spring security permission control\n- Integrated Redis\xe3\x80\x81spring cache\xe3\x80\x81ehcache,etc\n- Integrated Rabbit/Rocket/Kafka MQ\n- Integration alibaba druid connection pool, JDBC performance and slow query detection\n- Integrated Spring Boot Admin, real-time detection of project operation\n- Integrate maven-assembly-plugin for different environment package deployment, including startup and restart commands, and extract configuration files to external config directory\n\n## Architecture\n![spring-boot-plus-architecture.jpg](https://springboot.plus/img/spring-boot-plus-architecture.jpg)\n\n### Project Environment \nMiddleware | Version |  Remark\n-|-|-\nJDK | 1.8+ | JDK1.8 and above |\nMySQL | 5.7+ | 5.7 and above |\nRedis | 3.2+ |  |\n\n### Technology stack \nComponent| Version |  Remark\n-|-|-\nSpring Boot | 2.2.0.RELEASE | Latest release stable version |\nSpring Framework | 5.2.0.RELEASE | Latest release stable version |\nMybatis | 3.5.2 | DAO Framework |\nMybatis Plus | 3.2.0 | mybatis Enhanced framework |\nAlibaba Druid | 1.1.20 | Data source |\nFastjson | 1.2.62 | JSON processing toolset |\nswagger2 | 2.6.1 | Api document generation tool |\ncommons-lang3 | 3.9 | Apache language toolkit |\ncommons-io | 2.6 | Apache IO Toolkit |\ncommons-codec | 1.13 | Apache Toolkit such as encryption and decryption |\ncommons-collections4 | 4.4 | Apache collections toolkit |\nreflections | 0.9.11 | Reflection Toolkit  |\nhibernate-validator | 6.0.17.Final | Validator toolkit |\nShiro | 1.4.1 | Permission control |\nJWT | 3.8.3 | JSON WEB TOKEN |\nhutool-all | 5.0.3 | Common toolset |\nlombok | 1.18.10 | Automatically plugs |\nmapstruct | 1.3.1.Final | Object property replication tool |\n\n## CHANGELOG\n#### [CHANGELOG.md](https://github.com/geekidea/spring-boot-plus/blob/master/CHANGELOG.md)\n\n## Java Docs\n#### [Java Api Docs](http://geekidea.io/spring-boot-plus-apidocs/)\n\n\n## Getting started\n### Clone spring-boot-plus\n```bash\ngit clone https://github.com/geekidea/spring-boot-plus.git\ncd spring-boot-plus\n```\n\n### Maven Build\n> Local environment is used by default, The configuration file\xef\xbc\x9aapplication-local.yml\n```bash\nmvn clean package -Plocal\n```\n\n\n## 5 Minutes Finish CRUD\n\n### 1. Create Table\n```sql\n-- ----------------------------\n-- Table structure for foo_bar\n-- ----------------------------\nDROP TABLE IF EXISTS `foo_bar`;\nCREATE TABLE `foo_bar`\n(\n    `id`            bigint(20)  NOT NULL COMMENT \'ID\',\n    `name`          varchar(20) NOT NULL COMMENT \'Name\',\n    `foo`           varchar(20)          DEFAULT NULL COMMENT \'Foo\',\n    `bar`           varchar(20) NOT NULL COMMENT \'Bar\',\n    `remark`        varchar(200)         DEFAULT NULL COMMENT \'Remark\',\n    `state`         int(11)     NOT NULL DEFAULT \'1\' COMMENT \'State\xef\xbc\x8c0\xef\xbc\x9aDisable\xef\xbc\x8c1\xef\xbc\x9aEnable\',\n    `version`       int(11)     NOT NULL DEFAULT \'0\' COMMENT \'Version\',\n    `create_time`   timestamp   NULL     DEFAULT CURRENT_TIMESTAMP COMMENT \'Create Time\',\n    `update_time`   timestamp   NULL     DEFAULT NULL COMMENT \'Update Time\',\n    PRIMARY KEY (`id`)\n) ENGINE = InnoDB\n  DEFAULT CHARSET = utf8mb4\n  COLLATE = utf8mb4_general_ci COMMENT =\'FooBar\';\n\n-- ----------------------------\n-- Records of foo_bar\n-- ----------------------------\nINSERT INTO foo_bar (id, name, foo, bar, remark, state, version, create_time, update_time) \n    VALUES (1, \'FooBar\', \'foo\', \'bar\', \'remark...\', 1, 0, \'2019-11-01 14:05:14\', null);\nINSERT INTO foo_bar (id, name, foo, bar, remark, state, version, create_time, update_time) \n    VALUES (2, \'HelloWorld\', \'hello\', \'world\', null, 1, 0, \'2019-11-01 14:05:14\', null);\n\n```\n\n### 2. Generator CRUD CODE\n> Modify database info\n\n> Modify module name / author / table name / primary key id\n\n```text\n/src/test/java/io/geekidea/springbootplus/test/SpringBootPlusGenerator.java\n```\n\n```java\n/**\n * spring-boot-plus Code Generator\n *\n * @author geekidea\n * @date 2019-10-22\n **/\npublic class SpringBootPlusGenerator {\n\n    public static void main(String[] args) {\n        CodeGenerator codeGenerator = new CodeGenerator();\n        // Common configuration\n        // Database configuration\n        codeGenerator\n                .setUserName("root")\n                .setPassword("root")\n                .setDriverName("com.mysql.jdbc.Driver")\n                .setDriverUrl("jdbc:mysql://localhost:3306/spring_boot_plus?useUnicode=true&characterEncoding=UTF-8&useSSL=false");\n\n        // Configuration package information\n        codeGenerator\n                .setProjectPackagePath("io/geekidea/springbootplus")\n                .setParentPackage("io.geekidea.springbootplus");\n\n        // Configuration of component author, etc.\n        codeGenerator\n                .setModuleName("foobar")\n                .setAuthor("geekidea")\n                .setPkIdColumnName("id");\n\n        // Generation strategy\n        codeGenerator\n                .setGeneratorStrategy(CodeGenerator.GeneratorStrategy.ALL)\n                .setPageListOrder(true)\n                .setParamValidation(true);\n\n        // Customize which files are generated automatically\n        codeGenerator\n                .setGeneratorEntity(true)\n                .setGeneratorQueryParam(true)\n                .setGeneratorQueryVo(true);\n\n        // Generate business related codes\n        codeGenerator\n                .setGeneratorController(true)\n                .setGeneratorService(true)\n                .setGeneratorServiceImpl(true)\n                .setGeneratorMapper(true)\n                .setGeneratorMapperXml(true);\n\n        // Generated RequiresPermissions Annotation\n        codeGenerator.setRequiresPermissions(false);\n\n        // Overwrite existing file or not\n        codeGenerator.setFileOverride(true);\n\n        // Initialize common variables\n        codeGenerator.init();\n\n        // Table array to be generated\n        String[] tables = {\n                "foo_bar"\n        };\n\n        // Cycle generation\n        for (String table : tables) {\n            // Set the name of the table to be generated\n            codeGenerator.setTableName(table);\n            // Generate code\n            codeGenerator.generator();\n        }\n\n    }\n\n}\n```\n\n> Generated code structure\n\n```text\n/src/main/java/io/geekidea/springbootplus/foobar\n```\n\n```text\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 foobar\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 controller\n    \xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 FooBarController.java\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 entity\n    \xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 FooBar.java\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 mapper\n    \xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 FooBarMapper.java\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 param\n    \xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 FooBarQueryParam.java\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 service\n    \xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 FooBarService.java\n    \xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 impl\n    \xe2\x94\x82\xc2\xa0\xc2\xa0     \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 FooBarServiceImpl.java\n    \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 vo\n        \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 FooBarQueryVo.java\n```\n\n> Mapper XML\n```text\n/src/main/resources/mapper/foobar/FooBarMapper.xml\n```\n\n### 3. Startup Project\n> Project Main Class\n```text\n/src/main/java/io/geekidea/springbootplus/SpringBootPlusApplication.java\n```\n\n```java\n/**\n * spring-boot-plus Project Main Class\n * @author geekidea\n * @since 2018-11-08\n */\n@EnableAsync\n@EnableScheduling\n@EnableTransactionManagement\n@EnableConfigurationProperties\n@EnableAdminServer\n@MapperScan({"io.geekidea.springbootplus.**.mapper"})\n@SpringBootApplication\npublic class SpringBootPlusApplication {\n\n    public static void main(String[] args) {\n        // Run spring-boot-plus\n        ConfigurableApplicationContext context = SpringApplication.run(SpringBootPlusApplication.class, args);\n        // Print Project Info\n        PrintApplicationInfo.print(context);\n    }\n\n}\n```\n\n### 4. Access project swagger docs\n[http://127.0.0.1:8888/swagger-ui.html](http://127.0.0.1:8888/swagger-ui.html)\n\n### 5. SysUser CRUD Swagger\n![sys_user_swagger.png](https://springboot.plus/img/sys_user_swagger.png)\n\n\n## Quick Start\n[Quick Start](https://springboot.plus/guide/quick-start.html)\n\n## Documentation\n [https://springboot.plus](https://springboot.plus)\n\n\n## CentOS Quick Installation Environment / Build / Deploy / Launch Spring-boot-plus Project\n\n### 1. Download the installation script\n> Install `jdk`, `git`, `maven`, `redis`, `mysql`\n\n```bash\nwget -O download-install-all.sh https://springboot.plus/bin/download-install-all.sh\n```\n\n### 2. Run the installation script\n```bash\nsh download-install-all.sh\n```\n\n### 3. Modify MySQL password\n```bash\nALTER USER \'root\'@\'localhost\' IDENTIFIED BY \'Springbootplus666!\';\nexit\nmysql -uroot -pSpringbootplus666!\n```\n\n### 4. Import MySQL scripts\n```bash\ncreate database if not exists spring_boot_plus character set utf8mb4;\nuse spring_boot_plus;\nsource /root/mysql_spring_boot_plus.sql;\nshow tables;\nexit\n```\n\n### 5. Download deployment script `deploy.sh`\n```bash\nwget -O deploy.sh https://springboot.plus/bin/deploy.sh\n```\n\n### 6. Execution script\n```bash\nsh deploy.sh\n```\n\n### 7.Access project\n> SpringBootAdmin Management page\n\n[http://47.105.159.10:8888](http://47.105.159.10:8888)\n\n> spring-boot-plus Swagger Document page\n\n[http://47.105.159.10:8888/docs](http://47.105.159.10:8888/docs)\n\n### 8. View project run log\n```bash\ntail -f -n 1000 /root/spring-boot-plus-server/logs/spring-boot-plus.log\n```\n\n\n## spring-boot-plus Views\n\n### spring-boot-plus IDEA Sources Views\n\n![spring-boot-plus-idea](https://springboot.plus/img/home/spring-boot-plus-idea.png)\n\n### [Spring Boot Admin Instances](http://47.105.159.10:8888/instances/e211ba082db8/details)\n<p>\n    <a href="http://47.105.159.10:8888/instances/e211ba082db8/details">\n        <img src="https://springboot.plus/img/home/spring-boot-admin-en.png" alt="spring-boot-admin instances">\n    </a>\n</p>\n\n### [Spring Boot Admin Statistics](http://47.105.159.10:8888/instances/e211ba082db8/details)\n<p>\n    <a href="http://47.105.159.10:8888/instances/e211ba082db8/details">\n        <img src="https://springboot.plus/img/home/spring-boot-admin-1-en.png" alt="spring-boot-admin statistics">\n    </a>\n</p>\n\n### [Spring Boot Admin Log](http://47.105.159.10:8888/instances/e211ba082db8/logfile)\n<p>\n    <a href="http://47.105.159.10:8888/instances/e211ba082db8/logfile">\n        <img src="https://springboot.plus/img/home/spring-boot-admin-log-en.png" alt="spring-boot-admin log">\n    </a>\n</p>\n\n### [spring-boot-plus Swagger Docs](http://47.105.159.10:8888/swagger-ui.html)\n<p>\n    <a href="http://47.105.159.10:8888/swagger-ui.html">\n        <img src="https://springboot.plus/img/home/spring-boot-plus-swagger.png" alt="spring-boot-plus swagger docs">\n    </a>\n</p>\n\n### [spring-boot-plus Java Api Docs](http://geekidea.io/spring-boot-plus-apidocs/)\n<p>\n    <a href="http://geekidea.io/spring-boot-plus-apidocs/">\n        <img src="https://springboot.plus/img/home/spring-boot-plus-java-apidocs.png" alt="spring-boot-plus Java Api Docs">\n    </a>\n</p>\n\n\n## spring-boot-plus Videos  :movie_camera: \n- [5-Minutes-Finish-CRUD](https://www.bilibili.com/video/av67401204)\n- [CentOS Quick Installation JDK/Git/Maven/Redis/MySQL](https://www.bilibili.com/video/av67218836/)\n- [CentOS Quick Build / Deploy / Launch Spring-boot-plus Project](https://www.bilibili.com/video/av67218970/)\n\n\n## Contact\n- spring-boot-plus QQ Group\n\n![spring-boot-plus QQ Group](https://spring-boot-plus.gitee.io/img/spring-boot-plus-qq-group.png)\n\n\n## License\nspring-boot-plus is under the Apache 2.0 license. See the [LICENSE](https://github.com/geekidea/spring-boot-plus/blob/master/LICENSE) file for details.\n\n'