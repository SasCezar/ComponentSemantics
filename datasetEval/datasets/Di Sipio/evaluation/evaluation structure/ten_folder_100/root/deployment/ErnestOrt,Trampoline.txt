b'# Trampoline [![Twitter](https://img.shields.io/twitter/follow/espadrine.svg?style=social&logo=twitter&label=Follow)](https://twitter.com/TrampolineSB)\n\n\n[![Build Status](https://travis-ci.org/stunstunstun/awesome-spring-boot.svg?branch=master)](https://travis-ci.org/stunstunstun/awesome-spring-boot) [![Gitter](https://img.shields.io/gitter/room/nwjs/nw.js.svg)](https://gitter.im/Trampoline-springboot/Lobby)\n\n*NOTE: If you want to use examples provided (microservice-example-gradle & microservice-example-maven), please, clone the repository instead of downloading release zip. They need .git folder due to git related plugins specified on pom.xml and build.gradle*\n\n### Wiki\n[Check Trampoline\'s wiki: English & Spanish](https://github.com/ErnestOrt/Trampoline/wiki)\n\n### Description\n\nWelcome to **Trampoline**!\n\nAre you Admin Spring Boot locally? Are you **tired of that set of scripts**? Relax, Trampoline has come into your life.\n\nThe aim is to **help during the course of developing an application based on the paradigm of microservices with _Spring Boot_**. How? Easy, thanks to a **comfortable interface** you can **declare new microservices**, **start instances**, **restart** and **kill them**.\n\n![Alt text](https://github.com/ErnestOrt/Trampoline/blob/master/TrampolineUI_3_17.png)\n\nAlso you will be able to:\n\n* Admin Spring Boot locally (fully support for v1.x and v2.x)\n* Use configurable Actuator Endpoints and VM arguments\n* Register microservices directly from a GIT URL\n* Monitor memory usage for each instance, capturing their metrics every 30 seconds\n* Monitor instances and trace information at any point in time\n* Interact with Git using HTTPS or SSH\n* See Git branch and last commit on instances\n* Checkout branch, pull code and restart instances with a single mouse click\n* Define microservices groups and launch them all with one click\n* Monitor microservies deployed on other machines\n\n### Requirements\n\n* Unix or Windows OS\n* Java and Apache Maven or Gradle Wrapper\n* Include your Gradle Wrapper next to your build files if your choice is Gradle as a Build Tool\n* Include Spring Boot Actuator in your microservices\n* Set up logging.path and/or logging.file properties in your microservices in order to be able to visualize logs\n* Set up Git Info plugin in your microservices to see Git information on deployed instances (see examples provided)\n\n### How do I make it work?\n\nTo Admin Spring Boot locally:\n\n1. With the Trampoline project checked out go to the `trampoline` sub-folder\n2. Now start `trampoline`, for instance with the well known commands _mvn spring-boot:run_ or _./gradlew (or gradlew.bat) bootRun_\n3. Once started go to [localhost:8080](http://localhost:8080)\n4. If using Apache Maven then be sure to enter the path to your installation here\n5. Go to the _Settings Section_ and add all your microservices\n6. Finally you just have to start your instances in the _Instances Section_\n\n### FAQ\n\n* How microservices groups are launched?\n\nAll microservices are launched secuantially, folowing the order specified, applying defined delay for each instance.\n\n* Which build tools are Trampoline compatible with in my microservices?\n\nYou can use Apache Maven or Gradle Wrapper.\n\n* Can I run it on any OS?\n\nTheoretically yes, but it has only been fully tested on Windows and Mac OS.\n\n* I am working with Spring Boot 1.3 or less and instances do not start\n\nYou should add security starter to your microservices `pom.xml`:\n\n```\n<dependency>\n\t<groupId>org.springframework.boot</groupId>\n\t<artifactId>spring-boot-starter-security</artifactId>\n</dependency>\n\n```\n\n* What are the plugins I should use to retrieve Git information?\n\n```\n"gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17"\n```\n\n```\n<plugin>\n\t<groupId>pl.project13.maven</groupId>\n\t<artifactId>git-commit-id-plugin</artifactId>\n\t<version>2.2.3</version>\n</plugin>\n```\n\n* TransportException: <my git repo>.git: Authentication is required but no CredentialsProvider has been registered]\n\nIf you don\'t have git in your local machine you can easily solve it by adding credentials on `Settings View`\n\n* Will I have to enter data all the time?\n\nNo, information introduced will be stored in a settings file along with scripts to launch each microservice :grin:. These files are stored in a `trampoline` folder inside your `Documents` folder on Mac and Linux or inside the `Temp` folder on Windows.\n\n* External Instances will be stopped?\n\nNo, only instances under `127.0.0.1` will be stopped using `/shutdown` endpoint.\n\n\n### Contributing\nStart Admin Spring Boot locally and then click the star button to make the author and his neighbors happy :blush:. Then fork the repository and submit a pull request for whatever change you want to be added to this project.\n\nIf you have any questions or improvement proposal, just open an issue.\n\n# Enjoy it Folks!\n'