b'<p align="center">\n  <a href="https://keel.sh" target="_blank"><img width="100"src="https://keel.sh/img/logo.png"></a>\n</p>\n\n<p align="center">\n   \n  <a href="https://hub.docker.com/r/keelhq/keel/">\n    <img src="https://circleci.com/gh/keel-hq/keel/tree/master.svg?style=shield&circle-token=0239846a42cfa188de531058b9a2116a4b8600d8" alt="CircleCI">\n  </a>\n  \n  <a href="https://goreportcard.com/report/github.com/keel-hq/keel">\n    <img src="https://goreportcard.com/badge/github.com/keel-hq/keel" alt="Go Report">\n  </a>\n  \n  <a href="https://img.shields.io/docker/pulls/keelhq/keel.svg">\n    <img src="https://img.shields.io/docker/pulls/keelhq/keel.svg" alt="Docker Pulls">\n  </a>\n\n  <a href="https://drone-kr.webrelay.io/keel-hq/keel">\n    <img src="https://drone-kr.webrelay.io/api/badges/keel-hq/keel/status.svg" alt="Drone Status">\n  </a>\n  \n  <a href="https://www.boss.dev/issues/repo/keel-hq/keel">\n    <img src="https://img.shields.io/endpoint.svg?url=https://api.boss.dev/badge/enabled/keel-hq/keel&style=flat" alt="Boss Bounty Badge">\n  </a> \n</p>\n\n# Keel - automated Kubernetes deployments for the rest of us\n\n* Website [https://keel.sh](https://keel.sh)\n* Slack - [kubernetes.slack.com](https://kubernetes.slack.com) look for channel #keel\n\nKeel is a tool for automating [Kubernetes](https://kubernetes.io/) deployment updates. Keel is stateless, robust and lightweight.\n\nKeel provides several key features:\n\n* __[Kubernetes](https://kubernetes.io/) and [Helm](https://helm.sh) providers__ - Keel has direct integrations with Kubernetes and Helm.\n\n* __No CLI/API__ - tired of `f***ctl` for everything? Keel doesn\'t have one. Gets job done through labels, annotations, charts.\n\n* __Semver policies__ - specify update policy for each deployment/Helm release individually.\n\n* __Automatic [Google Container Registry](https://cloud.google.com/container-registry/) configuration__ - Keel automatically sets up topic and subscriptions for your deployment images by periodically scanning your environment.\n\n* __[Native, DockerHub, Quay and Azure container registry webhooks](https://keel.sh/docs/#triggers) support__ -  once webhook is received impacted deployments will be identified and updated.\n\n*  __[Polling](https://keel.sh/docs/#polling)__ - when webhooks and pubsub aren\'t available - Keel can still be useful by checking Docker Registry for new tags (if current tag is semver) or same tag SHA digest change (ie: `latest`).\n\n* __Notifications__ - out of the box Keel has Slack, Hipchat, Mattermost and standard webhook notifications, more info [here](https://keel.sh/docs/#notifications)\n\n<p align="center">\n  <a href="https://keel.sh" target="_blank"><img width="700"src="https://keel.sh/img/keel_high_level.png"></a>\n</p>\n\n### Support\n\nSupport Keel\'s development by:\n* [Patreon](https://patreon.com/keel)\n* [Paypal](https://www.paypal.me/keelhq)\n* Star this repository\n* [Follow on Twitter](https://twitter.com/keel_hq)\n\n### Warp speed quick start\n\nTo achieve warp speed, we will be using [sunstone.dev](https://about.sunstone.dev) service and [Minikube](https://kubernetes.io/docs/tasks/tools/install-minikube/). \n\nStart Minikube:\n\n```bash\nminikube start\n```\n\nInstall customized Keel (feel free to change credentials, namespace and version tag) straight from your `kubectl`.\n\n```bash\n# To override default latest semver tag, add &tag=x.x.x query argument to the URL below\nkubectl apply -f https://sunstone.dev/keel?namespace=default&username=admin&password=admin&tag=latest\n# and get Keel IP:\nminikube service --namespace default keel --url\nhttp://192.168.99.100:3199\n```\n\n> We are overriding default latest semver tag with **latest** since it has the new UI. If you want to use latest semver, just remove the `&tag=latest` part from the URL.\n\n### Creating remotely accessible Keel instance\n\nKeel can work together with [webhook relay tunnels](https://webhookrelay.com). To deploy Keel with Webhook Relay sidecar you will need to get [a token](https://my.webhookrelay.com/tokens), then pre-create [a tunnel](https://my.webhookrelay.com/tunnels) and:\n\n```\nkubectl apply -f https://sunstone.dev/keel?namespace=default&username=admin&password=admin&relay_key=TOKEN_KEY&relay_secret=TOKEN_SECRET&relay_tunnel=TUNNEL_NAME&tag=latest\n```\n\nNow, you can access Keel remotely. \n\n\n### Helm quick start\n\nPrerequisites:\n\n* [Helm](https://docs.helm.sh/using_helm/#installing-helm)\n* Kubernetes\n\nYou need to add this Chart repo to Helm:\n\n```bash\nhelm repo add keel https://charts.keel.sh \nhelm repo update\n```\n\nInstall through Helm (with Helm provider enabled by default):\n\n```bash\nhelm upgrade --install keel --namespace=kube-system keel/keel\n```\n\nIf you work mostly with regular Kubernetes manifests, you can install Keel without Helm provider support:\n\n```bash\nhelm upgrade --install keel --namespace=keel keel/keel --set helmProvider.enabled="false" \n```\n\nThat\'s it, see [Configuration](https://github.com/keel-hq/keel#configuration) section now.\n\n### Quick Start\n\n<p align="center">\n  <a href="https://keel.sh" target="_blank"><img width="700"src="https://keel.sh/img/examples/force-workflow.png"></a>\n</p>\n\nA step-by-step guide to install Keel on your Kubernetes cluster is viewable on the Keel website:\n\n[https://keel.sh/examples/#example-1-push-to-deploy](https://keel.sh/examples/#example-1-push-to-deploy)\n\n### Configuration\n\nOnce Keel is deployed, you only need to specify update policy on your deployment file or Helm chart:\n\n```yaml\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata: \n  name: wd\n  namespace: default\n  labels: \n    name: "wd"\n  annotations:\n    keel.sh/policy: minor # <-- policy name according to https://semver.org/\n    keel.sh/trigger: poll # <-- actively query registry, otherwise defaults to webhooks\nspec:\n  template:\n    metadata:\n      name: wd\n      labels:\n        app: wd        \n    spec:\n      containers:                    \n        - image: karolisr/webhook-demo:0.0.8\n          imagePullPolicy: Always            \n          name: wd\n          command: ["/bin/webhook-demo"]\n          ports:\n            - containerPort: 8090\n```\n\nNo additional configuration is required. Enabling continuous delivery for your workloads has never been this easy!\n\n### Documentation\n\nDocumentation is viewable on the Keel Website:\n\n[https://keel.sh/docs/#introduction](https://keel.sh/docs/#introduction)\n\n\n### Contributing\n\nBefore starting to work on some big or medium features - raise an issue [here](https://github.com/keel-hq/keel/issues) so we can coordinate our efforts. \n\nWe use pull requests, so:\n\n1. Fork this repository\n2. Create a branch on your local copy with a sensible name\n3. Push to your fork and open a pull request\n\n### Developing Keel\n\nIf you wish to work on Keel itself, you will need Go 1.12+ installed. Make sure you put Keel into correct Gopath and `go build` (dependency management is done through [dep](https://github.com/golang/dep)). \n\nTo test Keel while developing:\n\n1. Launch a Kubernetes cluster like Minikube or Docker for Mac with Kubernetes.\n2. Change config to use it: `kubectl config use-context docker-for-desktop`\n3. Build Keel from `cmd/keel` directory. \n4. Start Keel with: `keel --no-incluster`. This will use Kubeconfig from your home. \n\n### Running unit tests\n\nGet a test parser (makes output nice):\n\n```bash\ngo get github.com/mfridman/tparse\n```\n\nTo run unit tests:\n\n```bash\nmake test\n```\n\n### Running e2e tests\n\nPrerequisites:\n- configured kubectl + kubeconfig\n- a running cluster (test suite will create testing namespaces and delete them after tests)\n- Go environment (will compile Keel before running)\n\nOnce prerequisites are ready:\n\n```bash\nmake e2e\n```\n'