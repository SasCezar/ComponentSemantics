b'# Android Rocket Launcher [ ![Download](https://api.bintray.com/packages/cesarferreira/maven/android-rocket-launcher/images/download.svg) ](https://bintray.com/cesarferreira/maven/android-rocket-launcher/_latestVersion)\n\nGradle plugin that adds tasks to your android modules for installing and launching all variants.\n\n<p align="center">\n<img src="extras/screenshot.png" />\n</p>\n\n## How to use\nPaste this code into your main `build.gradle`\n\n```groovy\ndependencies {\n    // ...\n    classpath \'com.cesarferreira:android-rocket-launcher:0.9.1\'\n}\n```\n\nPaste this code into your app module `build.gradle`\n```groovy\napply plugin: \'android-rocket-launcher\'\n```\n\nNow, when you run `./gradlew tasks`, you\'ll see something like this:\n\n```\nopenDevDebug - Installs and opens DevDebug build\nopenDevRelease - Installs and opens DevRelease build\nopenEnvtestDebug - Installs and opens EnvtestDebug build\nopenEnvtestRelease - Installs and opens EnvtestRelease build\nopenProdDebug - Installs and opens ProdDebug build\nopenProdRelease - Installs and opens ProdRelease build\nopenSandboxDebug - Installs and opens SandboxDebug build\nopenSandboxRelease - Installs and opens SandboxRelease build\n```\n\n### Alternative\nCopy-pasting this gradle task on every project\n\n```groovy\n// Running the APK on your Android Device\nandroid.applicationVariants.all { variant ->\n    if (variant.install) {\n        tasks.create(name: "run${variant.name.capitalize()}", type: Exec,\n                dependsOn: variant.install) {\n            group = \'Run\'\n            description "Installs and Runs the APK for ${variant.description}."\n            def getMainActivity = { file ->\n                new XmlSlurper().parse(file).application.activity.find {\n                    it.\'intent-filter\'.find { filter ->\n                        return filter.action.find {\n                            it.\'@android:name\'.text() == \'android.intent.action.MAIN\'\n                        } \\\n                                 && filter.category.find {\n                            it.\'@android:name\'.text() == \'android.intent.category.LAUNCHER\'\n                        }\n                    }\n                }.\'@android:name\'\n            }\n            doFirst {\n                def activityClass =\n                        getMainActivity(variant.outputs.processManifest.manifestOutputFile)\n                commandLine android.adbExe, \'shell\', \'am\', \'start\', \'-n\',\n                        "${variant.applicationId}/${activityClass}"\n            }\n        }\n    }\n}\n```\n\nIt\'s a no brainer :smile:\n\n## Maintainers\n\n- [Cesar Ferreira](http://cesarferreira.com)\n\n## License\n\nMIT'