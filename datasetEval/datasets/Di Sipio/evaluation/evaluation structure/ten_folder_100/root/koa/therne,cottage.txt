b'<img alt="Cottage" src="http://i.imgur.com/jxXVfA1.png" width="400" />\n\n[![Join Gitter chat][gitter-image]][gitter-url]\n[![Show build status][travis-image]][travis-url]\n[![Coverage report][coveralls-image]][coveralls-url]\n[![npm Version][npm-image]][npm-url]  \n\nCottage is the fastest, simple, and intuitive HTTP router framework for [Koa.js](http://koajs.com).<br>\n\n- **Fastest HTTP Router / Framework on Node** - See [performance](#performance)\n- Simple code - Aren\'t you tired using `res.send` or `ctx.body`? Why can\'t we just `return` the response?\n- [Additional Sugar Features](#status)\n\n### Installation\nCottage requires [Node](http://nodejs.org) v8.0.0 or higher.\n```\n$ npm install cottage\n```\n\n### Example\n```js\nimport { Cottage, Response } from \'cottage\';\nconst app = new Cottage();\n\n// just simple return would be enough\napp.post(\'/\', async ctx => \'Hello world!\');\n\napp.get(\'/auth\', async ctx => {\n    // needs fancy response code?\n    return new Response(401, { error: \'unauthorized\' });\n});\n\n// cottage is built on the top of Koa.\napp.use(anyKoaMiddleware());\n(new Koa).use(app.callback()).listen(...);\n\n// or a simple shorthand without importing Koa.\napp.listen(8080, () => console.log(\'Independent!\'));\n```\n\n### Performance\n*Benchmark have been ran on Intel Xeon E3-1250v3 @ 3.50ghz with Node.js 6.1.0 single instance.*\n*Tested from Github API sample using [wrk][wrk-repo]*\n\nFramework       | Mean Throughput (req/sec) | Stddev |\n----------------|---------------|-----------|\ncottage@2.1.0   | 15130.12      | 142.45    |\nexpress@4.13.4  | 11455.67      | 201.95    |\nkoa-router@5.4.0| 12279.01      | 157.33    |\nhapi@13.4.1     | 2402.31       | 53.14     |\n\nAs the benchmark result shows, cottage is the fastest framework in Node.js.\n\n#### Why?\nCottage uses [Radix Tree][radix-tree-wiki] for URL routing, which is faster than any other data structures.\nAlso, cottage uses technique called "middleware precomposition", which precomposes middleware only at first time, not the every runtime.\n\n## Documentations\n- [API Documentation](https://github.com/therne/cottage/blob/master/index.d.ts)\n- [Samples](https://github.com/therne/cottage/tree/master/samples)\n\n## License: MIT\n\n[gen-flow]: http://pag.forbeslindesay.co.uk\n[wrk-repo]: https://github.com/wg/wrk\n[express-repo]: https://github.com/expressjs/express\n[radix-tree-wiki]: https://en.wikipedia.org/wiki/Radix_tree\n[gitter-image]: https://img.shields.io/gitter/room/cottage/cottage.svg?style=for-the-badge&logo=gitter\n[gitter-url]: https://gitter.im/therne/cottage?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n[npm-url]: https://npmjs.org/package/cottage\n[npm-image]: https://img.shields.io/npm/v/cottage.svg?style=for-the-badge\n[npm-url]: https://npmjs.org/package/cottage\n[travis-image]: https://img.shields.io/travis/therne/cottage/master.svg?style=for-the-badge\n[travis-url]: https://travis-ci.org/therne/cottage\n[coveralls-image]: https://img.shields.io/coveralls/therne/cottage.svg?style=for-the-badge\n[coveralls-url]: https://coveralls.io/github/therne/cottage?branch=master\n'