b'# koa-webpack-middleware\n\n[![npm version](http://img.shields.io/npm/v/koa-webpack-middleware.svg?style=flat-square)](https://npmjs.org/package/koa-webpack-middleware "View this project on npm")\n[![Circle CI](https://circleci.com/gh/leecade/koa-webpack-middleware.svg)](https://circleci.com/gh/leecade/koa-webpack-middleware)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n\n[webpack-dev-middleware](https://github.com/webpack/webpack-dev-middleware) for [koa2](https://github.com/koajs/koa/tree/v2.x) with [HMR](http://webpack.github.io/docs/hot-module-replacement-with-webpack.html)(hot module replacement) supports.\n\n## Install\n\n```sh\n$ npm i koa-webpack-middleware -D\n```\n\n## Depends\n\nThis middleware designd for koa2 ecosystem, make sure installed the right version:\n\n```sh\nnpm i koa@next -S\n```\n\n## Usage\n\n> See [example/](./example/) for an example of usage.\n\n```js\nimport webpack from \'webpack\'\nimport { devMiddleware, hotMiddleware } from \'koa-webpack-middleware\'\nimport devConfig from \'./webpack.config.dev\'\nconst compile = webpack(devConfig)\napp.use(devMiddleware(compile, {\n    // display no info to console (only warnings and errors)\n    noInfo: false,\n\n    // display nothing to the console\n    quiet: false,\n\n    // switch into lazy mode\n    // that means no watching, but recompilation on every request\n    lazy: true,\n\n    // watch options (only lazy: false)\n    watchOptions: {\n        aggregateTimeout: 300,\n        poll: true\n    },\n\n    // public path to bind the middleware to\n    // use the same as in webpack\n    publicPath: "/assets/",\n\n    // custom headers\n    headers: { "X-Custom-Header": "yes" },\n\n    // options for formating the statistics\n    stats: {\n        colors: true\n    }\n}))\napp.use(hotMiddleware(compile, {\n  // log: console.log,\n  // path: \'/__webpack_hmr\',\n  // heartbeat: 10 * 1000\n}))\n```\n\n## HMR configure\n\n1. webpack `plugins` configure\n\n    ```js\n    plugins: [\n        new webpack.optimize.OccurrenceOrderPlugin(),\n        new webpack.HotModuleReplacementPlugin(),\n        new webpack.NoErrorsPlugin()\n    ]\n    ```\n2. webpack `entry` configure\n\n    ```sh\n    $ npm i eventsource-polyfill -D\n    ```\n\n    ```js\n    entry: {\n      \'index\': [\n        // For old browsers\n        \'eventsource-polyfill\',\n        \'webpack-hot-middleware/client?path=/__webpack_hmr&timeout=20000\',\n        \'index.js\']\n    },\n    ```\n\n3. webpack `loader` configure \n    \n    ```sh\n    $ npm i babel-preset-es2015 babel-preset-stage-0 -D\n    ```\n\n    ```js\n    {\n      test: /\\.js$/,\n      loader: \'babel\',\n      query: {\n        \'presets\': [\'es2015\', \'stage-0\']\n        }\n      },\n      include: \'./src\'\n    }\n    ```\n\n    > HMR for react project\n\n    ```sh\n    $ npm i babel-preset-react babel-preset-react-hmre -D\n    ```\n\n    ```js\n    {\n      test: /\\.jsx?$/,\n      loader: \'babel\',\n      query: {\n        \'presets\': [\'es2015\', \'stage-0\', \'react\'],\n        \'env\': {\n          \'development\': {\n            \'presets\': [\'react-hmre\']\n          }\n        }\n      },\n      include: \'./src\'\n    }\n    ```\n\n4. put the code in your entry file to enable HMR\n\n    > React project do not need\n\n    ```js\n    if (module.hot) {\n      module.hot.accept()\n    }\n    ```\n\nThat\'s all, you\'re all set!\n    \n'