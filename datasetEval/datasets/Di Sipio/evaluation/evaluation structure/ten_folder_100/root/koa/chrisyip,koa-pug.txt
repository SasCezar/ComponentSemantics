b"# Koa-pug\n\n[![Node version][node-image]][npm-url] [![NPM version][npm-image]][npm-url] [![Dependency Status][daviddm-image]][daviddm-url] [![Travis CI][travis-image]][travis-url]\n\nA [Pug](https://github.com/pugjs) middleware for [Koa](http://koajs.com/).\n\n# How to use\n\n```bash\nnpm install koa-pug --save\n```\n\n```js\nconst Koa = require('koa')\nconst path = require('path')\nconst Pug = require('koa-pug')\n\nconst app = new Koa()\nconst pug = new Pug({\n  viewPath: path.resolve(__dirname, './views'),\n  locals: { /* variables and helpers */ },\n  basedir: 'path/for/pug/extends',\n  helperPath: [\n    'path/to/pug/helpers',\n    { random: 'path/to/lib/random.js' },\n    { _: require('lodash') }\n  ],\n  app: app // Binding `ctx.render()`, equals to pug.use(app)\n})\n\npug.locals.someKey = 'some value'\n\napp.use(async ctx => {\n  await ctx.render('index', locals, true)\n})\n```\n\nFor `koa@1`:\n\n```js\nconst koa = require('koa')\nconst Pug = require('koa-pug')\n\nconst app = koa()\nconst pug = new Pug({ app: app })\n\napp.use(function * () {\n  yield this.render('index', locals, true)\n})\n```\n\nUse `koa-pug` as a standalone Pug renderer:\n\n```js\nconst pug = new Pug({\n  viewPath: path.resolve(__dirname, './views'),\n  locals: { /* variables and helpers */ },\n  basedir: 'path/for/pug/extends',\n  helperPath: [\n    'path/to/pug/helpers',\n    { random: 'path/to/lib/random.js' },\n    { _: require('lodash') }\n  ],\n  // Can work with / without Koa\n  // app: app\n})\n\nasync function sendEmail(recipients, tplFile, locals) {\n  const body = await pug.render(tplFile, locals)\n  await send(recipients, body)\n}\n```\n\n## Options\n\n`options` are extended from [Pug's options](https://pugjs.org/api/reference.html#options), all options will be passed to Pug compiler except the following:\n\n`viewPath: string`: the location of Pug templates. Default is `process.cwd()`.\n\n`locals: { [key: string]: any }`: variables and helpers that will be passed to Pug compiler.\n\n`helperPath: string | string[] | { [key string]: string }`: location(s) of helper(s).\n\n## Content-Type\n\n`koa-pug` will set `content-type` to `text/html` for you, you can change it:\n\n```js\nawait ctx.render('index')\nctx.type = 'text/plain'\n```\n\n## Global Helpers\n\nBy setting `helperPath`, koa-pug will load all the modules that under sepecified folxder, and make them available on all templates.\n\n`helperPath` also could be an array including folders, files path, even `moduleName: 'path/to/lib.js` mapping object. Also support node module as a helper, just like: `'_': require('lodash')`\n\n### Defining a Helper\n\n```js\n// format-date.js, `koa-pug` will convert filename to camel case and use it as module name\nmodule.exports = function (input) {\n  return (input.getMonth() + 1) + '/' + input.getDate() + '/' + input.getFullYear()\n}\n```\n\nEquals to:\n\n```js\n// Becasue of there is a `moduleName`, `koa-pug` will use it as module name instead of filename\nmodule.exports = {\n  moduleName: 'formatDate',\n  moduleBody (input) {\n    return (input.getMonth() + 1) + '/' + input.getDate() + '/' + input.getFullYear()\n  }\n}\n```\n\nUse help in Pug:\n\n```pug\np= formatDate(new Date())\n```\n\n# How `koa-pug` resolves Pug template files\n\nLet's say the project views structure like:\n\n```\nviews\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 user.pug\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 user\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 index.pug\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 file\n    \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 index.pug\n```\n\n`koa-pug` will search file in the following order:\n\n- `<tpl_name>.pug`\n- `<tpl_name>/index.pug`\n\nWhen `pug.render('user')` is called, `views/user.pug` will be rendered. If you want to render `views/user/index.pug`, you have to pass it to renderer explicitly: `pug.render('user/index)`.\n\nWhen `pug.render('file')` is called, `views/file/index.pug` will be rendered.\n\n# Contributors\n\nVia [GitHub](https://github.com/chrisyip/koa-pug/graphs/contributors)\n\n[node-image]: https://img.shields.io/node/v/koa-pug.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/koa-pug\n[npm-image]: https://img.shields.io/npm/v/koa-pug.svg?style=flat-square\n[daviddm-url]: https://david-dm.org/chrisyip/koa-pug\n[daviddm-image]: https://img.shields.io/david/chrisyip/koa-pug.svg?style=flat-square\n[travis-url]: https://travis-ci.org/chrisyip/koa-pug\n[travis-image]: https://img.shields.io/travis/chrisyip/koa-pug.svg?style=flat-square\n"