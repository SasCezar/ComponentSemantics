b'# Indium\n[![MELPA](https://melpa.org/packages/indium-badge.svg)](https://melpa.org/#/indium)\n[![Emacs](https://img.shields.io/badge/Emacs-25-8e44bd.svg)](https://www.gnu.org/software/emacs/)\n[![Build Status](https://drone.petton.fr/api/badges/nico/Indium/status.svg)](https://drone.petton.fr/nico/Indium)\n[![Documentation Status](https://readthedocs.org/projects/indium/badge/?version=latest)](https://indium.readthedocs.io/en/latest/?badge=latest)\n[![Liberapay](https://img.shields.io/liberapay/receives/NicolasPetton.svg?logo=liberapay)](https://img.shields.io/liberapay/receives/NicolasPetton.svg?logo=liberapay)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/indium-emacs?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n<img align="right" src="https://gitea.petton.fr/nico/Indium/raw/branch/master/img/indium.png" alt="logo">\n\nA JavaScript development environment for Emacs.\n\nIndium connects to a browser tab or nodejs process and provides many features for\nJavaScript development, including:\n\n- a REPL (with auto completion) & object inspection;\n- an inspector, with history and navigation;\n- a scratch buffer (`M-x indium-scratch`);\n- JavaScript evaluation in JS buffers with `indium-interaction-mode`;\n- a stepping Debugger, similar to `edebug`, or `cider`.\n\n## Documentation\n\nInstallation instruction and other documentation can be found on\n[readthedocs](https://indium.readthedocs.io).\n\n**WARNING**: Indium 2.0 now uses a client/server architecture, see [installation\ninstuctions](https://indium.readthedocs.io/en/latest/installation.html).\n\n## Screenshots\n\nThe stepping debugger\n\n![Debugger](./screenshots/debugger.gif)\n\nThe REPL with company-mode\n\n![REPL](./screenshots/repl.png)\n\nThe REPL showing clickable output\n\n![REPL](./screenshots/repl2.png)\n\nThe inspector\n\n![Inspector](./screenshots/inspector.png)\n\n## Missing features\n\nIndium is young, here\'s a list of missing/wanted features\n\n- ~~Code evaluation using `C-x C-e` from project JS buffers~~\n- ~~Adding breakpoints (to remove the need for `debugger` statements)~~\n- Network inspector (could get inspiration from restclient.el)\n- DOM inspector\n- ~~Start processes (chromium, node, grunt, gulp, etc.) from Emacs and attach a\n  indium connection to it.~~\n\n## Backends\n\nThere is currently support for Chrom[e|ium] & nodejs.  The firefox backend is\nin the TODO list.\n\n\n'