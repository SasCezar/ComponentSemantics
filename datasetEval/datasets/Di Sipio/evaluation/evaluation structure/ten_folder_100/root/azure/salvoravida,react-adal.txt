b'<p align="center">\n    <img alt="react-adal" src="https://i.postimg.cc/Xvg09cyT/react-adal.logo.png">\n</p>\n\n<p align="center">\nAzure Active Directory Library (ADAL) support for <a href="https://facebook.github.io/react">React</a>\n</p>\n\n<p align="center">\n  <a href="https://www.npmjs.com/package/react-adal"><img src="https://img.shields.io/npm/v/react-adal.svg?style=flat-square"></a>\n  <a href="https://www.npmjs.com/package/react-adal"><img src="https://img.shields.io/npm/dt/react-adal.svg?style=flat-square"></a>\n</p>\n\n# react-adal\nAzure Active Directory Library (ADAL) support for ReactJS\n\n```\nnpm install react-adal\n```\n\nindex.js\n\n```javascript\n\nimport { runWithAdal } from \'react-adal\';\nimport { authContext } from \'./adalConfig\';\n\nconst DO_NOT_LOGIN = false;\n\nrunWithAdal(authContext, () => {\n\n  // eslint-disable-next-line\n  require(\'./indexApp.js\');\n\n},DO_NOT_LOGIN);\n\n```\n\nThis index wrap is needed because ADAL use iframes for token silent refresh,\nand we do not want to have duplicated ReactApp started on iframes too!\n\nindexApp.js (your real app index as it already is - example below)\n```javascript\nimport React from \'react\';\nimport ReactDOM from \'react-dom\';\nimport { Provider } from \'react-redux\';\nimport { store } from \'./store\';\nimport App from \'./App\';\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\'root\'),\n  );\n\n```\n\nadalConfig.js\n\n```javascript\n\nimport { AuthenticationContext, adalFetch, withAdalLogin } from \'react-adal\';\n\nexport const adalConfig = {\n  tenant: \'14d71d65-f596-4eae-be30-27f079bf8d4b\',\n  clientId: \'14d71d65-f596-4eae-be30-27f079bf8d4b\',\n  endpoints: {\n    api: \'14d71d65-f596-4eae-be30-27f079bf8d4b\',\n  },\n  cacheLocation: \'localStorage\',\n};\n\nexport const authContext = new AuthenticationContext(adalConfig);\n\nexport const adalApiFetch = (fetch, url, options) =>\n  adalFetch(authContext, adalConfig.endpoints.api, fetch, url, options);\n\nexport const withAdalLoginApi = withAdalLogin(authContext, adalConfig.endpoints.api);\n\n```\n\nuse adalApiFetch with your favorite "fetch" in your api call.\n\n# withAdalLoginApi HOC\n\nchange DO_NOT_LOGIN to true on index.js to stop login on index.js\n\n```javascript\n\nimport MyPage from \'./myPageComponent\';\nimport Loading from \'./Loading\';\nimport ErrorPage from \'./ErrorPage\';\n\nconst MyProtectedPage = withAdalLoginApi(MyPage, () => <Loading />, (error) => <ErrorPage error={error}/>);\n\n<Route \n   path="/onlyLoggedUsers"\n   render={ ()=> <MyProtectedPage /> } \n/>\n\n```\n# Logging Out\n\nThe AuthenticationContext object (authContext) has a built in function (logOut) to log out of a session. This function redirects user to the logout endpoint.\nAfter logout, the user will be redirected to the postLogoutRedirectUri if it was added as a property on the config object.\nThe following code shows an example of how to create a Log Out dropdown in a NavBar\n\n```javascript\nimport React from \'react\';\nimport { Navbar, Dropdown, DropdownMenu, DropdownItem } from \'reactstrap\';\nimport { authContext } from \'../adalConfig\';\n\n...\n\n  render() {\n    return (\n      <header>\n        <NavBar>\n          ...\n            <Dropdown>\n              <DropdownMenu>\n                <DropdownItem onClick={() => authContext.logOut()}>\n                  Logout\n                </DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n          ...\n        </NavBar>\n      </header>\n    );\n  }\n```\n\n\n# changelog\nview -> [CHANGELOG.md](CHANGELOG.md)\n\n# tutorials from the web\n\nhttps://itnext.io/a-memo-on-how-to-implement-azure-ad-authentication-using-react-and-net-core-2-0-3fe9bfdf9f36\n\nhttps://medium.com/@dmitrii.korolev1/react-adal-typescript-pnp-sp-93ef69eddd18\n\n\n# inspired by\n\nhttps://blog.mastykarz.nl/building-office-365-web-applications-react/\n\nhttps://medium.com/@adpreg/react-with-redux-app-with-azure-ad-auth-and-net-core-starter-project-88b1bbdb7856\n\nhttps://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-v2-protocols-implicit\n\n\n# MS adal.js\nhttps://github.com/AzureAD/azure-activedirectory-library-for-js\n\n# credits\n\nThat\'s all. Enjoy!\n'