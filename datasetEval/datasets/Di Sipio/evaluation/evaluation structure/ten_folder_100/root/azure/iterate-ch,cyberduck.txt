b'# Cyberduck\n\n[![GitHub license](https://img.shields.io/badge/license-GPL-blue.svg)](https://raw.githubusercontent.com/iterate-ch/cyberduck/master/LICENSE)\n[![Build Status](https://travis-ci.org/iterate-ch/cyberduck.svg?branch=master)](https://travis-ci.org/iterate-ch/cyberduck)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/608be33d6e1941858b17984518a4a44b)](https://www.codacy.com/app/dkocher/cyberduck?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=iterate-ch/cyberduck&amp;utm_campaign=Badge_Grade)\n[![Twitter](https://img.shields.io/badge/twitter-@cyberduckapp-blue.svg?style=flat)](http://twitter.com/cyberduckapp)\n\nLibre file transfer client for macOS and Windows. Command line interface (CLI) for Linux, macOS and Windows.\n\n## Prerequisites\n\n- Oracle Java 1.8.0 SDK or later\n- Apache Ant 1.10.1 or later\n- Apache Maven 3.5 or later\n\n### macOS\n- [Xcode 9](https://developer.apple.com/xcode/download/) or later\n\n### Windows\n\n- Visual Studio 2017 or later\n  - `.NET Desktop development`-Workload\n  - Windows SDK (10.0.14393.0)\n  - [MSBuild Community Tasks](https://github.com/loresoft/msbuildtasks)\n- [Bonjour SDK for Windows](https://developer.apple.com/downloads/index.action?q=Bonjour%20SDK%20for%20Windows)\n\n## Building\n\nRun `mvn verify -DskipTests -DskipSign` to build without running any tests and skip codesign.\n\n### Windows\n\nYou will run into warnings from `MSBuild`/`WiX` that are unrelated to how Cyberduck is built. You may safely ignore them.\n\n## Debugging\n### macOS\nEdit `setup/app/Info.plist` if you want to debug _Cyberduck.app_ or `setup/pkg/Info.plist` if you want to\n debug`duck` respectively. Add `--agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005` to allow to \n connect to the running application in your IDE by attaching to the remote JVM.\n \n### Windows\n\nDue to Visual Studio not being able to handle Java projects it is required to follow these steps for debugging:\n\n- Run `mvn verify -Dconfiguration=debug` which ensures that debugging symbols are generated\n  This prevents Visual Studio (or `MSBuild invoked from Maven) from generating optimized assemblies which in turn may\n  prevent debugging.\n- Open the solution in Visual Studio\n- Open a `.java` file and set a break point. Visual Studio breaks either on or near the line selected.\n- Debugging capabilities include\n  - Step Over\n  - Step Into\n  - Step Out\n  - Continue\n  - Local/Auto variables\n  - Immediate Window\n  \n  Go To Symbol is not working due to missing Java support.\n\n## Running Tests\n\nAfter packaging, run `mvn test -DskipITs` to run unit tests but skip integration tests.\n\n### Maven Artifacts (GPL)\n\n#### Repository Configuration\nMaven artifacts are available in a repository hosted on Amazon S3. \n- Use the following Maven configuration in your project POM to reference artifacts from Cyberduck\n \n         <repositories>\n             <repository>\n                 <id>maven.cyberduck.io-release</id>\n                 <url>http://repo.maven.cyberduck.io.s3.amazonaws.com/releases/</url>\n                 <layout>default</layout>\n                 <releases>\n                     <enabled>true</enabled>\n                 </releases>\n                 <snapshots>\n                     <enabled>false</enabled>\n                 </snapshots>\n             </repository>\n         </repositories>\n         \n- You will need to add the AWS Maven Wagon to your build using\n\n         <build>\n             <extensions>\n                 <extension>\n                     <groupId>org.springframework.build</groupId>\n                     <artifactId>aws-maven</artifactId>\n                     <version>5.0.0.RELEASE</version>\n                 </extension>\n             </extensions>\n         </build>\n\n#### Artifacts\n- Protocol implementations\n\n        <dependency>\n            <groupId>ch.cyberduck</groupId>\n            <artifactId>protocols</artifactId>\n            <type>pom</type>\n            <version>7.1.0</version>\n        </dependency>\n\n- Cocoa Java Bindings (macOS)\n\n        <dependency>\n            <groupId>ch.cyberduck</groupId>\n            <artifactId>binding</artifactId>\n            <version>7.1.0</version>\n        </dependency>\n\n- Implementations (macOS) using Launch Services, SystemConfiguration, Foundation, Keychain and other API\n\n        <dependency>\n            <groupId>ch.cyberduck</groupId>\n            <artifactId>libcore</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n'