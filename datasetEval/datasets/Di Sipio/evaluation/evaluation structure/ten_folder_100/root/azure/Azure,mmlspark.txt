b'![MMLSpark](https://mmlspark.azureedge.net/icons/mmlspark.svg)\n\n# Microsoft Machine Learning for Apache Spark\n\n[![Build Status](https://msazure.visualstudio.com/Cognitive%20Services/_apis/build/status/Azure.mmlspark?branchName=master)](https://msazure.visualstudio.com/Cognitive%20Services/_build/latest?definitionId=83120&branchName=master) [![codecov](https://codecov.io/gh/Azure/mmlspark/branch/master/graph/badge.svg)](https://codecov.io/gh/Azure/mmlspark) [![Gitter](https://badges.gitter.im/Microsoft/MMLSpark.svg)](https://gitter.im/Microsoft/MMLSpark?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge) \n\n[![Release Notes](https://img.shields.io/badge/release-notes-blue)](https://github.com/Azure/mmlspark/releases) [![Scala Docs](https://img.shields.io/static/v1?label=api%20docs&message=scala&color=blue&logo=scala)](https://mmlspark.blob.core.windows.net/docs/1.0.0-rc1/scala/index.html#package) [![PySpark Docs](https://img.shields.io/static/v1?label=api%20docs&message=python&color=blue&logo=python)](https://mmlspark.blob.core.windows.net/docs/1.0.0-rc1/pyspark/index.html) [![Academic Paper](https://img.shields.io/badge/academic-paper-7fdcf7)](https://arxiv.org/abs/1810.08744)\n\n[![Version](https://img.shields.io/badge/version-1.0.0--rc1-blue)](https://github.com/Azure/mmlspark/releases) [![Snapshot Version](https://mmlspark.blob.core.windows.net/icons/badges/master_version3.svg)](#sbt) \n\n\nMMLSpark is an ecosystem of tools aimed towards expanding the distributed computing framework\n[Apache Spark](https://github.com/apache/spark) in several new directions. \nMMLSpark adds many deep learning and data science tools to the Spark ecosystem,\nincluding seamless integration of Spark Machine Learning pipelines with [Microsoft Cognitive Toolkit\n(CNTK)](https://github.com/Microsoft/CNTK), [LightGBM](https://github.com/Microsoft/LightGBM) and\n[OpenCV](http://www.opencv.org/). These tools enable powerful and highly-scalable predictive and analytical models\nfor a variety of datasources.\n\nMMLSpark also brings new networking capabilities to the Spark Ecosystem. With the HTTP on Spark project, users \ncan embed **any** web service into their SparkML models. In this vein, MMLSpark provides easy to use \nSparkML transformers for a wide variety of [Microsoft Cognitive Services](https://azure.microsoft.com/en-us/services/cognitive-services/). For production grade deployment, the Spark Serving project enables high throughput,\nsub-millisecond latency web services, backed by your Spark cluster.\n\nMMLSpark requires Scala 2.11, Spark 2.3+, and either Python 2.7 or Python 3.5+.\nSee the API documentation [for\nScala](https://mmlspark.blob.core.windows.net/docs/1.0.0-rc1/scala/index.html#package) and [for\nPySpark](https://mmlspark.blob.core.windows.net/docs/1.0.0-rc1/pyspark/index.html).\n\n<details>\n<summary><strong><em>Table of Contents</em></strong></summary>\n\n-   [Notable features](#notable-features)\n-   [A short example](#a-short-example)\n-   [Setup and installation](#setup-and-installation)\n    -   [Docker](#docker)\n    -   [GPU VM Setup](#gpu-vm-setup)\n    -   [Spark package](#spark-package)\n    -   [Python](#python)\n    -   [Databricks cloud](#databricks-cloud)\n    -   [SBT](#sbt)\n    -   [Building from source](#building-from-source)\n-   [Blogs and Publications](#blogs-and-publications)\n-   [Contributing & feedback](#contributing--feedback)\n-   [Other relevant projects](#other-relevant-projects)\n\n</details>\n\n## Projects\n\n|<img width="800" src="https://mmlspark.blob.core.windows.net/graphics/Readme/vw-blue-dark-orange.svg"> |  <img width="800"  src="https://mmlspark.blob.core.windows.net/graphics/Readme/cog_services_on_spark_2.svg"> | <img width="800"  src="https://mmlspark.blob.core.windows.net/graphics/Readme/decision_tree_recolor.png"> | <img width="800" src="https://mmlspark.blob.core.windows.net/graphics/Readme/mmlspark_serving_recolor.svg"> |\n|:-------------------------:|:-------------------------:|:-------------------------:|:-------------------------:|\n| **Vowpal Wabbit on Spark**  | **The Cognitive Services on Spark**| **LightGBM on Spark** |  **Spark Serving** |\n| Fast, Sparse, and Effective Text Analytics | Leverage the Microsoft Cognitive Services at Unprecedented Scales in your existing SparkML pipelines | Train Gradient Boosted Machines with LightGBM   | Serve any Spark Computation as a Web Service with Sub-Millisecond Latency |\n\n|<img width="800" src="https://mmlspark.blob.core.windows.net/graphics/Readme/microservice_recolor.png"> |<img width="800" src="https://mmlspark.blob.core.windows.net/graphics/Readme/distributed_deep_recolor.png"> | <img width="800"  src="https://mmlspark.blob.core.windows.net/graphics/Readme/LIME.svg">|  <img width="800"  src="https://mmlspark.blob.core.windows.net/graphics/Readme/bindings.png"> |\n|:-------------------------:|:-------------------------:|:-------------------------:|:-------------------------:|\n|  **HTTP on Spark** | **CNTK on Spark** |  **Lime on Spark**| **Spark Binding Autogeneration** |\n| An Integration Between Spark and the HTTP Protocol, enabling Distributed Microservice Orchestration|Distributed Deep Learning with the Microsoft Cognitive Toolkit | Distributed, Model Agnostic, Interpretations for Classifiers | Automatically Generate Spark bindings for PySpark and SparklyR|\n\n\n## Examples\n\n-   Create a deep image classifier with transfer learning ([example 9])\n-   Fit a LightGBM classification or regression model on a biochemical dataset\n    ([example 3]), to learn more check out the [LightGBM documentation\n    page](docs/lightgbm.md).\n-   Deploy a deep network as a distributed web service with [MMLSpark\n    Serving](docs/mmlspark-serving.md)\n-   Use web services in Spark with [HTTP on Apache Spark](docs/http.md)\n-   Use Bi-directional LSTMs from Keras for medical entity extraction\n    ([example 8])\n-   Create a text analytics system on Amazon book reviews ([example 4])\n-   Perform distributed hyperparameter tuning to identify Breast Cancer\n    ([example 5])\n-   Easily ingest images from HDFS into Spark `DataFrame` ([example 6])\n-   Use OpenCV on Spark to manipulate images ([example 7])\n-   Train classification and regression models easily via implicit featurization\n    of data ([example 1])\n-   Train and evaluate a flight delay prediction system ([example 2])\n\nSee our [notebooks](notebooks/samples/) for all examples.\n\n[example 1]: notebooks/samples/Classification%20-%20Adult%20Census.ipynb "Adult Census Income Training"\n\n[example 2]: notebooks/samples/Regression%20-%20Flight%20Delays.ipynb "Regression Example with Flight Delay Dataset"\n\n[example 3]: notebooks/samples/LightGBM%20-%20Quantile%20Regression%20for%20Drug%20Discovery.ipynb "Quantile Regression with LightGBM"\n\n[example 4]: notebooks/samples/TextAnalytics%20-%20Amazon%20Book%20Reviews.ipynb "Amazon Book Reviews - TextFeaturizer"\n\n[example 5]: notebooks/samples/HyperParameterTuning%20-%20Fighting%20Breast%20Cancer.ipynb "Hyperparameter Tuning with MMLSpark"\n\n[example 6]: notebooks/samples/DeepLearning%20-%20CIFAR10%20Convolutional%20Network.ipynb "CIFAR10 CNTK CNN Evaluation"\n\n[example 7]: notebooks/samples/OpenCV%20-%20Pipeline%20Image%20Transformations.ipynb "Pipeline Image Transformations"\n\n[example 8]: notebooks/samples/DeepLearning%20-%20BiLSTM%20Medical%20Entity%20Extraction.ipynb "Medical Entity Extraction"\n\n[example 9]: notebooks/samples/DeepLearning%20-%20Flower%20Image%20Classification.ipynb "Deep Flower Classification"\n\n[example 10]: notebooks/gpu/DeepLearning%20-%20Distributed%20CNTK%20training.ipynb "CIFAR10 CNTK CNN Training"\n\n## A short example\n\nBelow is an excerpt from a simple example of using a pre-trained CNN to\nclassify images in the CIFAR-10 dataset.  View the whole source code in notebook [example 9].\n\n```python\n...\nimport mmlspark\n# Initialize CNTKModel and define input and output columns\ncntkModel = mmlspark.cntk.CNTKModel() \\\n  .setInputCol("images").setOutputCol("output") \\\n  .setModelLocation(modelFile)\n# Train on dataset with internal spark pipeline\nscoredImages = cntkModel.transform(imagesWithLabels)\n...\n```\n\nSee [other sample notebooks](notebooks/samples/) as well as the MMLSpark\ndocumentation for [Scala](http://mmlspark.azureedge.net/docs/scala/) and\n[PySpark](http://mmlspark.azureedge.net/docs/pyspark/).\n\n## Setup and installation\n\n### Spark package\n\nMMLSpark can be conveniently installed on existing Spark clusters via the\n`--packages` option, examples:\n\n```bash\nspark-shell --packages com.microsoft.ml.spark:mmlspark_2.11:1.0.0-rc1\npyspark --packages com.microsoft.ml.spark:mmlspark_2.11:1.0.0-rc1\nspark-submit --packages com.microsoft.ml.spark:mmlspark_2.11:1.0.0-rc1 MyApp.jar\n```\n\nThis can be used in other Spark contexts too. For example, you can use MMLSpark\nin [AZTK](https://github.com/Azure/aztk/) by [adding it to the\n`.aztk/spark-defaults.conf`\nfile](https://github.com/Azure/aztk/wiki/PySpark-on-Azure-with-AZTK#optional-set-up-mmlspark).\n\n### Databricks\n\nTo install MMLSpark on the [Databricks\ncloud](http://community.cloud.databricks.com), create a new [library from Maven\ncoordinates](https://docs.databricks.com/user-guide/libraries.html#libraries-from-maven-pypi-or-spark-packages)\nin your workspace.\n\nFor the coordinates use: `com.microsoft.ml.spark:mmlspark_2.11:1.0.0-rc1`.  Ensure this library is\nattached to all clusters you create.\n\nFinally, ensure that your Spark cluster has at least Spark 2.1 and Scala 2.11.\n\nYou can use MMLSpark in both your Scala and PySpark notebooks. To get started with our example notebooks import the following databricks archive:\n\n`https://mmlspark.blob.core.windows.net/dbcs/MMLSpark%20Examples%20v1.0.0-rc1.dbc`\n\n### Docker\n\nThe easiest way to evaluate MMLSpark is via our pre-built Docker container.  To\ndo so, run the following command:\n\n```bash\ndocker run -it -p 8888:8888 -e ACCEPT_EULA=yes mcr.microsoft.com/mmlspark/release\n```\n\nNavigate to <http://localhost:8888/> in your web browser to run the sample\nnotebooks.  See the [documentation](docs/docker.md) for more on Docker use.\n\n> To read the EULA for using the docker image, run \\\\\n> `docker run -it -p 8888:8888 mcr.microsoft.com/mmlspark/release eula`\n\n### GPU VM Setup\n\nMMLSpark can be used to train deep learning models on GPU nodes from a Spark\napplication.  See the instructions for [setting up an Azure GPU\nVM](docs/gpu-setup.md).\n\n### Python\n\nTo try out MMLSpark on a Python (or Conda) installation you can get Spark\ninstalled via pip with `pip install pyspark`.  You can then use `pyspark` as in\nthe above example, or from python:\n\n```python\nimport pyspark\nspark = pyspark.sql.SparkSession.builder.appName("MyApp") \\\n            .config("spark.jars.packages", "com.microsoft.ml.spark:mmlspark_2.11:1.0.0-rc1") \\\n            .getOrCreate()\nimport mmlspark\n```\n\n### SBT\n\nIf you are building a Spark application in Scala, add the following lines to\nyour `build.sbt`:\n\n```scala\nlibraryDependencies += "com.microsoft.ml.spark" %% "mmlspark" % "1.0.0-rc1"\n```\n\n### Building from source\n\nMMLSpark has recently transitioned to a new build infrastructure. \nFor detailed developer docs please see the [Developer Readme](docs/developer-readme.md)\n\nIf you are an existing mmlspark developer, you will need to reconfigure your \ndevelopment setup. We now support platform independent development and \nbetter integrate with intellij and SBT.\n If you encounter issues please reach out to our support email!\n\n### R (Beta)\n\nTo try out MMLSpark using the R autogenerated wrappers [see our\ninstructions](docs/R-setup.md).  Note: This feature is still under development\nand some necessary custom wrappers may be missing.\n\n## Learn More\n\n-   Visit our [new website].\n\n-   Watch our keynote demos at [the Spark+AI Summit 2019], [the Spark+AI European Summit 2018], and [the Spark+AI Summit 2018].\n\n-   Read [our paper] for a deep dive on MMLSpark.\n\n-   See how MMLSpark is used to [help endangered species].\n\n-   Explore generative adversarial artwork in [our collaboration with The MET and MIT].\n\n-   Explore [our collaboration with Apache Spark] on image analysis.\n\n-   Use [MMLSpark in Azure Machine Learning].\n\n\n[new website]: https://mmlspark.blob.core.windows.net/website/index.html "aka.ms/spark"\n\n[the Spark+AI Summit 2018]: https://databricks.com/sparkaisummit/north-america/spark-summit-2018-keynotes#Intelligent-cloud "Developing for the Intelligent Cloud and Intelligent Edge"\n\n[the Spark+AI Summit 2019]: https://youtu.be/T_fs4C0aqD0?t=425\n\n[the Spark+AI European Summit 2018]: https://youtu.be/N3ozCZXeOeU?t=472\n\n[our paper]: https://arxiv.org/abs/1804.04031 "Flexible and Scalable Deep Learning with MMLSpark"\n\n[help endangered species]: https://www.microsoft.com/en-us/ai/ai-lab-stories?activetab=pivot1:primaryr3 "Identifying snow leopards with AI"\n\n[our collaboration with The MET and MIT]: https://www.microsoft.com/en-us/ai/ai-lab-stories?activetab=pivot1:primaryr4 "Generative art at the MET"\n\n[our collaboration with Apache Spark]: https://blogs.technet.microsoft.com/machinelearning/2018/03/05/image-data-support-in-apache-spark/ "Image Data Support in Apache Spark"\n\n[MMLSpark in Azure Machine Learning]: https://docs.microsoft.com/en-us/azure/machine-learning/preview/how-to-use-mmlspark "How to Use Microsoft Machine Learning Library for Apache Spark"\n\n[MMLSpark at the Spark Summit]: https://databricks.com/session/mmlspark-lessons-from-building-a-sparkml-compatible-machine-learning-library-for-apache-spark "MMLSpark: Lessons from Building a SparkML-Compatible Machine Learning Library for Apache Spark"\n\n## Contributing & feedback\n\nThis project has adopted the [Microsoft Open Source Code of Conduct].  For more\ninformation see the [Code of Conduct FAQ] or contact\n[opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional\nquestions or comments.\n\n[Microsoft Open Source Code of Conduct]: https://opensource.microsoft.com/codeofconduct/\n\n[Code of Conduct FAQ]: https://opensource.microsoft.com/codeofconduct/faq/\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for contribution guidelines.\n\nTo give feedback and/or report an issue, open a [GitHub\nIssue](https://help.github.com/articles/creating-an-issue/).\n\n## Other relevant projects\n-   [Vowpal Wabbit](https://github.com/VowpalWabbit/vowpal_wabbit)\n\n-   [LightGBM](https://github.com/Microsoft/LightGBM)\n\n-   [DMTK: Microsoft Distributed Machine Learning Toolkit](https://github.com/Microsoft/DMTK)\n\n-   [Recommenders](https://github.com/Microsoft/Recommenders)\n\n-   [JPMML-SparkML plugin for converting MMLSpark LightGBM models to\n    PMML](https://github.com/alipay/jpmml-sparkml-lightgbm)\n\n-   [Microsoft Cognitive Toolkit](https://github.com/Microsoft/CNTK)\n\n-   [Azure Machine Learning\n    preview features](https://docs.microsoft.com/en-us/azure/machine-learning/preview)\n\n_Apache\xc2\xae, Apache Spark, and Spark\xc2\xae are either registered trademarks or\ntrademarks of the Apache Software Foundation in the United States and/or other\ncountries._\n'