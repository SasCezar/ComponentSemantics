b'# This repo is in the process of being migrated\n\nPlease pardon our progress...\nWe are currently in the process of consolidating our github repos.\nSee https://github.com/microsoft/ApplicationInsights-dotnet/issues/1214\n\n\n\n\n\n## NuGet packages\n\n- [Microsoft.ApplicationInsights.AspNetCore](https://www.nuget.org/packages/Microsoft.ApplicationInsights.AspNetCore/)\n[![Nuget](https://img.shields.io/nuget/vpre/Microsoft.ApplicationInsights.AspNetCore.svg)](https://nuget.org/packages/Microsoft.ApplicationInsights.AspNetCore)\n- [Microsoft.ApplicationInsights.WorkerService](https://www.nuget.org/packages/Microsoft.ApplicationInsights.WorkerService/)\n[![Nuget](https://img.shields.io/nuget/vpre/Microsoft.ApplicationInsights.WorkerService.svg)](https://nuget.org/packages/Microsoft.ApplicationInsights.WorkerService)\n\n\n\nWindows: [![Build Status](https://mseng.visualstudio.com/AppInsights/_apis/build/status/ChuckNorris/AI_ASPNETCore_Develop?branchName=develop)](https://mseng.visualstudio.com/AppInsights/_build/latest?definitionId=3717&branchName=develop)\n\nLinux :[![Build Status](https://mseng.visualstudio.com/AppInsights/_apis/build/status/ChuckNorris/AI-AspNetCoreSDK-develop-linux?branchName=develop)](https://mseng.visualstudio.com/AppInsights/_build/latest?definitionId=6273&branchName=develop)\n\n\nMicrosoft Application Insights for ASP.NET Core applications\n=============================================================\n\nThis repository has a code for [Application Insights monitoring](http://azure.microsoft.com/en-us/services/application-insights/) of [ASP.NET Core](https://docs.microsoft.com/aspnet/core) applications. Read about contribution policies on Application Insights Home [repository](https://github.com/microsoft/ApplicationInsights-home)\n\nGetting Started\n---------------\n\n[Application Insights monitoring](http://azure.microsoft.com/en-us/services/application-insights/) is a service that allows you to collect monitoring and diagnostics information about your application. The [getting started](https://docs.microsoft.com/azure/azure-monitor/app/asp-net-core) guide shows how you can onboard your ASP.NET Core web application to use the Application Insights SDK.\n\n\nRepository structure\n--------------------\n\n```\nroot\\\n    ApplicationInsights.AspNetCore.sln - Main Solution\n\n    src\\\n        ApplicationInsights.AspNetCore - Application Insights package\n\n    test\\\n        ApplicationInsights.AspNetCore.Tests - Unit tests\n        FunctionalTestUtils - Test utilities for functional tests\n        MVCFramework.FunctionalTests - functional tests for MVC application targeting NetCore1.1,NetCore2.0 and NET45\n        WebApi.FunctionalTests - functional tests for Web API application targeting NetCore1.1,NetCore2.0 and NET45\n\t\tEmptyApp.FunctionalTests - functional tests for an Empty application targeting NetCore1.1,NetCore2.0 and NET45\n        PerfTest - performance test\n```\n\nDeveloping\n----------\nTo successfully build the sources on your machine, make sure you\'ve installed the following prerequisites:\n* Visual Studio 2017 Community or Enterprise. Please make sure to install all the latest updates to Visual Studio\n* .NET Framework 4.6\n* .NET Core SDK 1.1.7\n* .NET Core SDK 2.0 or above.(https://www.microsoft.com/net/download/windows)\n\n## Building\nOnce you\'ve installed the prerequisites execute ```buildDebug.cmd``` or ```buildRelease.cmd``` script in the repository root to build the project locally.\nYou can also open the solution in Visual Studio and build the ApplicationInsights.AspNetCore.sln solution directly.\n\n## Testing/Debugging\nExecute the ```RunTests.cmd``` script in the repository root.\n\nYou can also open the solution in Visual Studio and run tests directly from Visual Studio Test Explorer. However, as the tests has multiple targets, Test Explorer only shows the first target\nfrom <TargetFrameworks> in .csproj. To debug/run tests from a particular TargetFramework with Visual Studio, only option is to re-arrange the <TargetFrameworks>\nsuch that the intended target comes first. This is a Visual Studio limitation and is likely removed in the future.\n\n\nRunning and writing tests\n-------------------------\nThere are two sets of tests unit tests and functional tests. Please use unit tests for all features testing. The purpose of functional tests is just end-to-end validation of functionality on sample applications.\n\n*Functional tests*\nFunctional tests are regular web applications with unit tests integrated into them. Application can be compiled as a regular web application as well as set of tests. Typical functional tests will do the following:\n\n1. Host the current project in In-Proc server.\n2. Initialize application insights telemetry channel.\n3. Initiate request to self hosted web application using HttpClient.\n4. Check data received in telemetry channel.\n\nThe following are modifications made to a regular web application to make it work this way:\n\nAdd dependencies to .csproj:\n\n```\n"FunctionalTestUtils": "1.0.0-*",\n"dotnet.test.xunit": "1.0.0-*",\n"xunit": "2.1.0"\n```\n\nand test command:\n\n```\n"test": "xunit"\n```\n\nAdd this initialization logic to Startup.cs:\n\n```\nservices.AddFunctionalTestTelemetryChannel();\n```\n\n\n## Branches\n- We follow the [Git Flow](http://nvie.com/posts/a-successful-git-branching-model) model.\n- [master](https://github.com/Microsoft/ApplicationInsights-aspnetcore/tree/master) has the _latest_ version released on [NuGet.org](https://www.nuget.org/packages/Microsoft.ApplicationInsights.AspNetCore).\n- [develop](https://github.com/Microsoft/ApplicationInsights-aspnetcore/tree/develop) has the code for the _next_ release.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n'