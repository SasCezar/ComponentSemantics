b'Responsive Django Admin\n=======================\n\nIf you\'re looking for a version compatible with Django 1.8 just install **0.3.7.1**.\n\nFeatures\n--------\n\n* Responsive\n* Sidebar Menu\n* Easy install / setup\n* Support Django **1.11** and **2.1**\n* Bootstrap 3\n* Python 3\n\n\nScreenshots\n-----------\n\n.. image:: https://raw.githubusercontent.com/douglasmiranda/django-admin-bootstrap/master/screenshots/screenshot.png\n    :target: https://github.com/douglasmiranda/django-admin-bootstrap/tree/master/screenshots\n    :alt: See Screenshots\n\n`More screenshots <https://github.com/douglasmiranda/django-admin-bootstrap/tree/master/screenshots>`_\n\nINSTALL\n-------\n\nfrom pypi (recommended) ::\n\n    $ pip install bootstrap-admin\n\nAnd don\'t forget to add **bootstrap\\_admin** in ``INSTALLED_APPS`` before\nthe ``django.contrib.admin``.\n\nExample:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        # ...\n        \'bootstrap_admin\', # always before django.contrib.admin  \n        \'django.contrib.admin\',\n        # ...\n    )  \n\nCUSTOMIZE\n---------\n\nSidebar Menu\n^^^^^^^^^^^^\n\nIt is enabled by default. But if you remove ``django.template.context_processors.request`` from your ``context_processors``.\n\nJust disable it:\n\n.. code-block:: python\n\n    BOOTSTRAP_ADMIN_SIDEBAR_MENU = False\n\nBranding - Overriding logo\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIf you want to use your own logo, you can achieve this by overriding the **login.html** and **base_site.html**, just like in Django Admin.\n\nFirst, make sure the ``TEMPLATES`` setting in your settings.py is properly configured:\n\n.. code-block:: python\n\n    TEMPLATES = [\n        {\n            \'BACKEND\': \'django.template.backends.django.DjangoTemplates\',\n            \'DIRS\': [os.path.join(BASE_DIR, \'my_django_project/templates\')],\n            \'APP_DIRS\': True,\n            # other stuff\n        },\n    ]\n\n`DIRS`: You must set the location of your templates, an absolute path.\n\nI\'m assuming ``BASE_DIR`` is:\n\n.. code-block:: python\n\n    BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nThis pattern of creating a global templates folder could be useful for you to use for your **base.html** and other global templates.\n\nMore info: https://docs.djangoproject.com/en/2.1/ref/templates/api/#configuring-an-engine\n\nLet me show you a project structure as an example:\n\n.. code-block:: \n\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 my_django_project\n    \xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 core\n    \xe2\x94\x82   \xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 admin.py\n    \xe2\x94\x82   \xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 apps.py\n    \xe2\x94\x82   \xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 models.py\n    \xe2\x94\x82   \xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 tests.py\n    \xe2\x94\x82   \xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 views.py\n    \xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 settings.py\n    \xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 templates\n    \xe2\x94\x82   \xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 admin\n    \xe2\x94\x82   \xe2\x94\x82       \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 base_site.html\n    \xe2\x94\x82   \xe2\x94\x82       \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 login.html\n    \xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 urls.py\n    \xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 wsgi.py\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 manage.py\n\nYou can see I created a global **templates/** folder, \nwith another directory inside **admin/** containing **login.html** and **base_site.html**.\n\nTheir respective contents are:\n\n**base_site.html**\n\n.. code-block:: html\n\n    {% extends \'admin/base_site.html\' %}\n    {% load static %}\n\n    {% block branding %}\n        <a href="{% url \'admin:index\' %}" class="django-admin-logo">\n            <!-- Django Administration -->\n            <img height="60" src="{% static "bootstrap_admin/img/logo-140x60.png" %}" alt="{{ site_header|default:_(\'Django administration\') }}">\n        </a>\n    {% endblock branding %}\n\n\n**login.html**\n\n.. code-block:: html\n\n    {% extends \'admin/login.html\' %}\n    {% load i18n static %}\n\n    {% block branding %}\n        <a href="{% url \'admin:index\' %}" class="django-admin-logo">\n            <!-- Django Administration -->\n            <img height="60" src="{% static "bootstrap_admin/img/logo-140x60.png" %}" alt="{{ site_header|default:_(\'Django administration\') }}">\n        </a>\n    {% endblock branding %}\n\nMore info: https://docs.djangoproject.com/en/2.1/ref/contrib/admin/#admin-overriding-templates\n\nContributing\n------------\n\n1. Fork it!\n2. Create your feature branch: ``git checkout -b my-new-feature``\n3. Commit your changes: ``git commit -am \'Add some feature\'``\n4. Push to the branch: ``git push origin my-new-feature``\n5. Submit a pull request =]\n\nSee the `full list <https://github.com/douglasmiranda/django-admin-bootstrap/blob/master/AUTHORS.rst>`_ of contributors.\n\n`Open an issue <https://github.com/douglasmiranda/django-admin-bootstrap/issues/new>`_\nif you find a bug or want something more.\n'