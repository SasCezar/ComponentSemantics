b'<div align="center">\n  <a href="https://github.com/sindresorhus/awesome#readme"><img src="https://awesome.re/badge-flat.svg" /></a>\n  <img width="400" src="django-logo.svg" alt="Django logo">\n</div>\n\n# Awesome Django\n> A curated list of awesome things related to Django.\n\n## Contents\n\n- [Third-Party Packages](#third-party-packages)\n  - [Admin](#admin)\n  - [APIs](#apis)\n  - [Async](#async)\n  - [Commands](#commands)\n  - [Content Management Systems](#content-management-systems)\n  - [ECommerce](#ecommerce)\n  - [Forms](#forms)\n  - [Models](#models)\n  - [Search](#search)\n  - [Static Assets](#static-assets)\n  - [Task Queues](#task-queues)\n  - [Testing](#testing)\n  - [Users](#users)\n  - [Views](#views)\n  - [URLs](#urls)\n- [Python Packages](#python-packages)\n- [Resources](#resources)\n  - [Official](#official-resources)\n  - [External](#external-resources)\n  - [Community](#community)\n  - [Conferences](#conferences)\n  - [Podcasts](#podcasts)\n  - [Tutorials](#tutorials)\n  - [Books](#books)\n  - [Courses](#courses)\n  - [Videos](#videos)\n- [Hosting](#hosting)\n  - [PaaS](#paas)\n  - [IaaS](#iaas)\n- [Projects](#projects)\n  - [Boilerplate](#boilerplate)\n  - [Open Source Projects](#open-source-projects)\n- [Django REST Framework](#django-rest-framework)\n  - [Resources](#drf-resources)\n  - [Tutorials](#drf-tutorials)\n  - [DRF Boilerplate](#drf-boilerplate)\n  - [Open Source Apps](#drf-open-source-apps)\n\n## Third-Party Packages\n\n_For a complete listing of all available packages, see [Django Packages](https://djangopackages.org/)_\n\n\n- [django-environ](https://github.com/joke2k/django-environ) - Environment variables\n- [django-filter](https://github.com/carltongibson/django-filter) - Powerful filters based on Django QuerySets\n- [django-guardian](https://github.com/django-guardian/django-guardian) - Per object permissions in Django\n- [django-sql-explorer](https://github.com/groveco/django-sql-explorer) - Share data via SQL queries\n- [django-tables2](https://github.com/jieter/django-tables2) - HTML tables with pagination/sorting\n\n### Admin\n- [django-grappelli](https://github.com/sehmaschine/django-grappelli) - A jazzy skin for the admin\n- [django-hijack](https://github.com/arteria/django-hijack) - Admins can log in and work on behalf of other users without having to know their credentials\n- [django-import-export](https://github.com/django-import-export/django-import-export) - Import/export data more easily with admin integration\n- [django-honeypot](https://github.com/jamesturk/django-honeypot/) - Configure a honeypot to see who\'s trying to hack your site\n- [django-loginas](https://github.com/skorokithakis/django-loginas) - "Log in as user" for the Django admin\n- [xadmin](https://github.com/sshwsfc/xadmin) - Drop-in replacement with goodies\n\n### APIs\n- [django-rest-framework](https://github.com/encode/django-rest-framework) - Web APIs for Django\n- [django-cors-headers](https://github.com/adamchainz/django-cors-headers) - If your back-end and front-end are on different servers, you need this\n- [django-rest-auth](https://github.com/Tivix/django-rest-auth) - REST API endpoints for authentication and registration\n- [django-rest-knox](https://github.com/James1345/django-rest-knox) - Authentication Module for django-rest-auth\n- [djoser](https://github.com/sunscrapers/djoser) - REST implementation of Django auth\n- [django-rest-framework-simplejwt](https://github.com/davesque/django-rest-framework-simplejwt) - JSON web tokens for DRF\n- [django-webpack-loader](https://github.com/owais/django-webpack-loader) - Transparently use webpack with Django\n- [graphene-django](https://github.com/graphql-python/graphene-django) - GraphQL for Django\n\n### Async\n- [channels](https://github.com/django/channels/) - Async support for Django\n- [starlette](https://github.com/encode/starlette) - ASGI framework\n\n### Commands\n- [django-extensions](https://github.com/django-extensions/django-extensions/) - Custom management extensions, notably `runserver_plus` and `shell_plus`\n- [django-click](https://github.com/GaretJax/django-click) - Write Django management commands using the click CLI library\n- [django-dbbackup](https://github.com/django-dbbackup/django-dbbackup) - Management commands to help backup and restore your project database and media files\n\n### Content Management Systems\n- [wagtail](https://github.com/wagtail/wagtail) - Popular Django content management system (CMS)\n- [mezzanine](https://github.com/stephenmcd/mezzanine) - CMS framework\n- [django-cms](https://github.com/divio/django-cms) - CMS for Django\n- [puput](https://github.com/APSL/puput) - Blog app features with Wagtail\n\n### ECommerce\n- [django-shop](https://github.com/awesto/django-shop) - Django-based shop system\n- [shuup](https://github.com/shuup/shuup) - Django E-Commerce Platform\n\n### Forms\n- [django-crispy-forms](https://github.com/django-crispy-forms/django-crispy-forms/) - DRY Django forms\n- [django-autocomplete-light](https://github.com/yourlabs/django-autocomplete-light) - Add autocompletion to forms\n- [django-shapeshifter](https://github.com/kennethlove/django-shapeshifter) - A CBV to handle multiple forms in one view\n- [bleach](https://github.com/mozilla/bleach) - Technically not a Django package but very useful\n\n### Models\n- [django-fakery](https://github.com/fcurella/django-fakery) - An easy-to-use implementation of Creation Methods for Django, backed by Faker\n- [django-lifecycle](https://github.com/rsinger86/django-lifecycle) - Declarative model lifecycle hooks, an alternative to Signals\n- [django-model-utils](https://github.com/jazzband/django-model-utils) - Django model mixins and utilities\n- [django-money](https://github.com/django-money/django-money) - Money fields for forms/models\n- [django-phonenumber-field](https://github.com/stefanfoulis/django-phonenumber-field) - Model/form field for normalized phone numbers\n- [django-taggit](https://github.com/jazzband/django-taggit/) - Simple model tags\n- [django-reversion](https://github.com/etianen/django-reversion) - Version control for model instances\n\n### Search\n- [django-haystack](https://github.com/django-haystack/django-haystack) - Modular search for Django\n- [django-watson](https://github.com/etianen/django-watson) - Full-text search plugin\n\n### Static Assets\n- [django-storages](https://github.com/jschneier/django-storages) - A single library to support multiple custom storage backends for Django\n- [django-compressor](https://github.com/django-compressor/django-compressor/) - Compress JavaScript/CSS into a single cached file\n- [whitenoise](https://github.com/evansd/whitenoise) - Simplified static file serving for Python websites\n- [easy-thumbnails](https://github.com/SmileyChris/easy-thumbnails) - Image thumbnails for Django\n\n### Task Queues\n- [huey](https://github.com/coleifer/huey) - A little task queue for Python\n- [django-q](https://github.com/Koed00/django-q) - A multiprocessing distributed task queue\n- [django-rq](https://github.com/rq/django-rq) - Integration for Redis Queue\n- [django-redis](https://github.com/niwinz/django-redis) - Full featured Redis cache backend for Django\n\n### Testing\n- [django-debug-toolbar](https://github.com/jazzband/django-debug-toolbar/) - Configurable panels to debug requests/responses\n- [pytest-django](https://github.com/pytest-dev/pytest-django) - Use pytest features in Django\n- [django-test-plus](https://github.com/revsys/django-test-plus/) - Useful additions to Django\'s default TestCase\n- [factory-boy](https://github.com/FactoryBoy/factory_boy) - Test fixtures replacement\n- [django-silk](https://github.com/jazzband/django-silk) - Live profiling and inspection of HTTP requests and database queries\n- [django-waffle](https://github.com/django-waffle/django-waffle) - A feature flipper for Django\n- [model-bakery](https://github.com/model-bakers/model_bakery) - Object factory for Django (rename of legacy Model Mommy project)\n\n### Users\n- [django-allauth](https://github.com/pennersr/django-allauth/) - Improved user registration including social auth\n- [django-organizations](https://github.com/bennylope/django-organizations/) - Multi-user accounts for Django projects\n\n### Views\n- [django-braces](https://github.com/brack3t/django-braces) - Reusable, generic mixins\n- [django-extra-views](https://github.com/AndrewIngram/django-extra-views) - Extra class-based generic views\n- [django-vanilla-views](https://github.com/tomchristie/django-vanilla-views) - Simpler class-based views in Django\n\n### URLs\n- [dj-database-url](https://github.com/jacobian/dj-database-url) - Database URLs\n- [urlman](https://github.com/andrewgodwin/urlman) - A nicer way to do URLs for Django models\n\n## Python Packages\n\n_A short list of Python packages that work well with Django._\n\n- [black](https://github.com/psf/black) - Uncompromising Python code formatter\n- [coveragepy](https://github.com/nedbat/coveragepy) - Code coverage measurement\n- [nplusone](https://github.com/jmcarp/nplusone) - Auto-detect n+1 queries\n- [pillow](https://github.com/python-pillow/Pillow) - Python Imaging Library\n- [pytest](https://github.com/pytest-dev/pytest/) - Testing framework\n- [python-slugify](https://github.com/un33k/python-slugify) - Returns unicode slugs\n- [sentry-python](https://github.com/getsentry/sentry-python) - Error reporting SDK\n\n## Resources\n\n### Official Resources\n\n- [Project Website](https://www.djangoproject.com/) - Official Django website\n- [Documentation](https://docs.djangoproject.com/en/dev/) - Comprehensive documentation for all Django versions\n- [Polls Tutorial](https://docs.djangoproject.com/en/dev/intro/tutorial01/) - Build a polls tutorial while learning Django internals\n- [Source Code](https://github.com/django/django/) - Hosted on Github\n\n### External Resources\n\n- [William Vincent\'s Website](https://wsvincent.com/) - Up-to-date tutorials on Django and Django REST Framework.\n- [Classy Class-Based Views](https://ccbv.co.uk/) - Detailed descriptions of methods/properties/attributes for each generic class-based view.\n- [Classy Django Forms](https://github.com/ana-balica/classy-django-forms) - Detailed descriptions of methods/properties/attributes for each form class.\n- [Classy Django REST Framework](http://www.cdrf.co) - Detailed descriptions with methods/attributes for DRF class-based views and serializers.\n- [Django Sites](https://www.djangosites.org/) - Comprehensive listing of sites built with Django.\n- [Pony Checkup](https://www.ponycheckup.com/) - Security checkups for Django sites.\n- [Django Hunter](https://github.com/6IX7ine/djangohunter) - Tool to help identify incorrectly configured Django applications that are exposing sensitive information.\n- [Simple is Better than Complex](https://simpleisbetterthancomplex.com/) - Regularly updated website with many tutorials and tips on Django.\n- [Full Stack Python\'s Django Page](https://www.fullstackpython.com/django.html) - Explanation of Django philosophy and links to other resources and tutorials.\n- [RealPython](https://realpython.com/tutorials/django/) - Many high-quality tutorials on Django.\n- [TestDriven](https://testdriven.io/blog/) - Multiple Django-specific tutorials on topics like Docker, payments, and more.\n\n### Community\n\n- [Django Forum](https://forum.djangoproject.com/) - Discourse Board\n- [Django Users Google Group](https://groups.google.com/forum/#!forum/django-users/) - Very active discussion board for questions/answers.\n- [Developers Google Group](https://groups.google.com/forum/#!forum/django-developers/) - For contributions to Django itself only.\n- [Twitter](https://twitter.com/djangoproject/) - For official announcements on updates, security fixes, etc.\n- IRC Channel - Chat with other Django users at irc://irc.freenode.net/django\n\n### Conferences\n\n- [DjangoCon US](https://2019.djangocon.us/) ([YouTube Channel](https://www.youtube.com/channel/UC0yY6a79pPY9J0ShIHRf6yw))\n- [DjangoCon Europe](https://2019.djangocon.eu/) ([YouTube Channel](https://www.youtube.com/user/djangoconeurope))\n- [PyCon US](https://us.pycon.org/2019/) ([YouTube Channel](https://www.youtube.com/channel/UCsX05-2sVSH7Nx3zuk3NYuQ))\n- [PyCon Australia](https://2019.pycon-au.org/) ([YouTube Channel](https://www.youtube.com/user/PyConAU))\n- [Euro Python](https://ep2019.europython.eu/) ([YouTube Channel](https://www.youtube.com/user/PythonItalia))\n- [Django Under the Hood](https://www.youtube.com/channel/UC9T1dhIlL_8Va9DxvKRowBw/videos)\n- [Complete listing of all PyCons globally](https://pycon.org)\n\n\n### Podcasts\n\n- [Django Chat](https://djangochat.com/) - A weekly podcast from William Vincent and Django Fellow Carlton Gibson with discussions of core Django concepts and regular guests.\n- [TalkPython](https://talkpython.fm/) - The leading Python podcast with several episodes on Django.\n- [Podcast Init](https://www.pythonpodcast.com/) - A popular Python podcast that features Django guests on occasion.\n\n### Tutorials\n\n- [Django Girls Tutorial](https://tutorial.djangogirls.org/en/) - Use function-based views to build a blog app.\n- [Mozilla Tutorial](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django) - Create a lending library app.\n- [A Complete Beginner\'s Guide to Django](https://simpleisbetterthancomplex.com/series/beginners-guide/1.11/) - In-depth and excellent walkthrough of a new Django app\n- [Build a HackerNews clone](https://medium.com/@danieldng/a-little-hacker-news-in-django-part-1-f12aa81dc25d) - Very well-done tutorial for Django 2.0.\n\n### Books\n\n_Django 2.2_\n- [Django for Beginners: Build websites with Python and Django](https://djangoforbeginners.com/)\n- [Django for APIs: Build web APIs with Python and Django](https://djangoforapis.com/)\n- [Django for Professionals: Production websites with Python and Django](https://djangoforprofessionals.com/)\n- [Tango with Django](https://www.tangowithdjango.com/)\n- [Build a website with Django 2](https://djangobook.com/build-a-website-with-django-2/)\n\n_Django 2.1_\n- [Practical Django 2 and Channels 2](https://www.amazon.com/Practical-Django-Channels-Applications-Capabilities/dp/1484240987)\n- [Django 2 Web Development Cookbook](https://www.amazon.com/Django-Web-Development-Cookbook-practical/dp/1788837681)\n\n_Django 2.0_\n\n- [Hello Web App 2.0](https://hellowebbooks.com/learn-django/)\n- [Django Design Patterns and Best Practices](https://www.amazon.com/Django-Design-Patterns-Practices-Industry-standard/dp/1788831349)\n- [Django 2 by Example](https://www.amazon.com/Django-Example-powerful-reliable-applications/dp/1788472489)\n\n_Django 1.11_\n\n- [Two Scoops of Django: Best Practices for Django 1.11](https://www.amazon.com/Two-Scoops-Django-1-11-Practices/dp/0692915729)\n- [Test-Driven Development with Python](https://www.amazon.com/Test-Driven-Development-Python-Selenium-JavaScript/dp/1491958707)\n- [Django RESTful Web Services](https://www.amazon.com/Django-RESTful-Web-Services-services/dp/1788833929)\n- [Beginning Django](https://www.amazon.com/Beginning-Django-Application-Development-Deployment/dp/1484227867)\n\n### Courses\n\n- [Developing a Real-Time Taxi App with Django Channels and Angular](https://testdriven.io/courses/real-time-app-with-django-channels-and-angular/)\n\n### Videos\n- [Python Django Crash Course 2019 by Traversy Media](https://www.youtube.com/watch?v=e1IyzVyrLSU&feature=youtu.be)\n- [Full Stack React & Django by Traversy Media](https://www.youtube.com/watch?v=Uyei2iDA4Hs&feature=youtu.be)\n- [Just Django](https://www.youtube.com/channel/UCRM1gWNTDx0SHIqUJygD-kQ)\n- [Try Django from Coding for Entrepreneurs](https://www.youtube.com/playlist?list=PLEsfXFp6DpzTD1BD1aWNxS2Ep06vIkaeW)\n- [Python Django Tutorial by Corey Schafer](https://www.youtube.com/watch?v=UmljXZIypDc&feature=youtu.be)\n- [CS50\'s Web Programming with Python and JavaScript](https://www.youtube.com/playlist?list=PLhQjrBD2T382hIW-IsOVuXP1uMzEvmcE5)\n\n## Hosting\n\n### PaaS (Platforms-as-a-Service)\n- [Heroku](https://www.heroku.com/)\n- [PythonAnywhere](https://www.pythonanywhere.com)\n- [Divio](https://www.divio.com/)\n- [Microsoft Azure](https://azure.microsoft.com/en-us/develop/python/)\n- [AWS CodeStar](https://aws.amazon.com/codestar/)\n- [Google Cloud](https://cloud.google.com/python/django/)\n- [Zeit Now](https://zeit.co/home)\n- [Dokku](http://dokku.viewdocs.io/dokku/)\n- [Render](https://render.com/)\n\n### IaaS (Infrastructure-as-a-Service)\n- [Digital Ocean](https://www.digitalocean.com)\n- [Linode](https://www.linode.com/)\n- [Amazon Lightsail](https://aws.amazon.com/lightsail/)\n\n## Projects\n\n### Boilerplate\n- [cookiecutter-django](https://github.com/pydanny/cookiecutter-django/) - A full-bodied starter project, highly customizable.\n- [djangox](https://github.com/wsvincent/djangox/) - A simpler approach with complete user authentication flow, Pipenv, and more.\n- [DRFx](https://github.com/wsvincent/drfx/) - A DRF starter with user auth, Pipenv, and other goodies.\n- [django-project-template](https://github.com/jpadilla/django-project-template) - A deliberately basic project that has multiple staging environments and Heroku deployment config.\n- [docker-django](https://github.com/erroneousboat/docker-django/) - A quick starter guide for Django and Docker together.\n- [ponee](https://github.com/valentinogagliardi/ponee/) - A lightweight Django template ready for Heroku.\n- [wemake-django-template](https://github.com/wemake-services/wemake-django-template/) - Bleeding edge Django template focused on code quality and security.\n- [django2-project-template](https://github.com/vigo/django2-project-template/) - A quick starter template with PostgreSQL.\n- [django-webpack-starter](https://github.com/khadegd/django-webpack-starter) - Django Webpack starter template for using Webpack 4.\n\n### Open Source\n- [Hello, World](https://github.com/wsvincent/djangoforbeginners/tree/master/ch2-hello-world-app/)\n- [Message Board](https://github.com/wsvincent/djangoforbeginners/tree/master/ch4-message-board-app/)\n- [Blog app with users and forms](https://github.com/wsvincent/djangoforbeginners/tree/master/ch7-blog-app-with-users/)\n- [Newspaper app with custom user model, full user auth](https://github.com/wsvincent/djangoforbeginners/tree/master/ch15-comments)\n- [Behavior-Driven Development with Aloe](https://github.com/testdrivenio/django-aloe-bdd/)\n- [Image Sharing Blog](https://github.com/MeNsaaH/soMedia)\n- [Bootcamp: An enterprise social network](https://github.com/vitorfs/bootcamp)\n- [Zulip](https://github.com/zulip/zulip/) - Open-source team chat\n- [django-oscar](https://github.com/django-oscar/django-oscar/) - E-commerce for Django\n- [saleor](https://github.com/mirumee/saleor/) - E-commerce storefront\n- [Django-CRM](https://github.com/MicroPyramid/Django-CRM/) - Open Source Python CRM based on Django\n- [django-job-portal](https://github.com/manjurulhoque/django-job-portal) - Job portal application using Django\n\n## Django REST Framework\n\n_The most popular way to build web APIs with Django._\n\n### DRF Resources\n\n- [Official Documentation](https://www.django-rest-framework.org/)\n- [DRF Source Code](https://github.com/encode/django-rest-framework)\n- [awesome-django-rest-framework](https://github.com/nioperas06/awesome-django-rest-framework)\n\n### DRF Tutorials\n\n- [Official REST Framework - A Beginner\'s Guide](https://wsvincent.com/official-django-rest-framework-tutorial-beginners-guide/)\n- [DRF Blog API](https://wsvincent.com/django-rest-framework-tutorial/)\n- [Building APIs with Django and DRF](https://books.agiliq.com/projects/django-api-polls-tutorial/en/latest/)\n- [DRF with React: Todo API](https://wsvincent.com/django-rest-framework-react-tutorial/)\n- [DRF with React](https://www.valentinog.com/blog/drf/)\n- [Making React and Django play well together](https://fractalideas.com/blog/making-react-and-django-play-well-together/)\n\n\n### License\n\n[![CC0](https://licensebuttons.net/p/zero/1.0/88x31.png)](https://creativecommons.org/publicdomain/zero/1.0/)\n'