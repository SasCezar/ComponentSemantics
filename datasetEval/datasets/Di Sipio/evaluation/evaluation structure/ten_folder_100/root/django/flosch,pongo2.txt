b'# [pongo](https://en.wikipedia.org/wiki/Pongo_%28genus%29)2\n\n[![Join the chat at https://gitter.im/flosch/pongo2](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/flosch/pongo2)\n[![GoDoc](https://godoc.org/github.com/flosch/pongo2?status.svg)](https://godoc.org/github.com/flosch/pongo2)\n[![Build Status](https://travis-ci.org/flosch/pongo2.svg?branch=master)](https://travis-ci.org/flosch/pongo2)\n[![Backers on Open Collective](https://opencollective.com/pongo2/backers/badge.svg)](#backers) \n[![Sponsors on Open Collective](https://opencollective.com/pongo2/sponsors/badge.svg)](#sponsors)\n\npongo2 is the successor of [pongo](https://github.com/flosch/pongo), a Django-syntax like templating-language.\n\nInstall/update using `go get` (no dependencies required by pongo2):\n```\ngo get -u github.com/flosch/pongo2\n```\n\nPlease use the [issue tracker](https://github.com/flosch/pongo2/issues) if you\'re encountering any problems with pongo2 or if you need help with implementing tags or filters ([create a ticket!](https://github.com/flosch/pongo2/issues/new)). \n\n## First impression of a template\n\n```HTML+Django\n<html><head><title>Our admins and users</title></head>\n{# This is a short example to give you a quick overview of pongo2\'s syntax. #}\n\n{% macro user_details(user, is_admin=false) %}\n\t<div class="user_item">\n\t\t<!-- Let\'s indicate a user\'s good karma -->\n\t\t<h2 {% if (user.karma >= 40) || (user.karma > calc_avg_karma(userlist)+5) %}\n\t\t\tclass="karma-good"{% endif %}>\n\t\t\t\n\t\t\t<!-- This will call user.String() automatically if available: -->\n\t\t\t{{ user }}\n\t\t</h2>\n\n\t\t<!-- Will print a human-readable time duration like "3 weeks ago" -->\n\t\t<p>This user registered {{ user.register_date|naturaltime }}.</p>\n\t\t\n\t\t<!-- Let\'s allow the users to write down their biography using markdown;\n\t\t     we will only show the first 15 words as a preview -->\n\t\t<p>The user\'s biography:</p>\n\t\t<p>{{ user.biography|markdown|truncatewords_html:15 }}\n\t\t\t<a href="/user/{{ user.id }}/">read more</a></p>\n\t\t\n\t\t{% if is_admin %}<p>This user is an admin!</p>{% endif %}\n\t</div>\n{% endmacro %}\n\n<body>\n\t<!-- Make use of the macro defined above to avoid repetitive HTML code\n\t     since we want to use the same code for admins AND members -->\n\t\n\t<h1>Our admins</h1>\n\t{% for admin in adminlist %}\n\t\t{{ user_details(admin, true) }}\n\t{% endfor %}\n\t\n\t<h1>Our members</h1>\n\t{% for user in userlist %}\n\t\t{{ user_details(user) }}\n\t{% endfor %}\n</body>\n</html>\n```\n\n## Development status\n\n**Latest stable release**: v3.0 (`go get -u gopkg.in/flosch/pongo2.v3` / [`v3`](https://github.com/flosch/pongo2/tree/v3)-branch)\n\n**Current development**: v4 (`master`-branch)\n\n*Note*: With the release of pongo v4 the branch v2 will be deprecated.\n\n**Deprecated versions** (not supported anymore): v1\n\n| Topic                                | Status                                                                                 |\n| ------------------------------------ | -------------------------------------------------------------------------------------- |       \n| Django version compatibility:        | [1.7](https://docs.djangoproject.com/en/1.7/ref/templates/builtins/)                  |\n| *Missing* (planned) **filters**:     | none ([hints](https://github.com/flosch/pongo2/blob/master/filters_builtin.go#L3))     | \n| *Missing* (planned) **tags**:        | none ([hints](https://github.com/flosch/pongo2/blob/master/tags.go#L3))                |\n\nPlease also have a look on the [caveats](https://github.com/flosch/pongo2#caveats) and on the [official add-ons](https://github.com/flosch/pongo2#official).\n\n## Features (and new in pongo2)\n\n * Entirely rewritten from the ground-up.\n * [Advanced C-like expressions](https://github.com/flosch/pongo2/blob/master/template_tests/expressions.tpl).\n * [Complex function calls within expressions](https://github.com/flosch/pongo2/blob/master/template_tests/function_calls_wrapper.tpl).\n * [Easy API to create new filters and tags](http://godoc.org/github.com/flosch/pongo2#RegisterFilter) ([including parsing arguments](http://godoc.org/github.com/flosch/pongo2#Parser))\n * Additional features:\n    * Macros including importing macros from other files (see [template_tests/macro.tpl](https://github.com/flosch/pongo2/blob/master/template_tests/macro.tpl))\n    * [Template sandboxing](https://godoc.org/github.com/flosch/pongo2#TemplateSet) ([directory patterns](http://golang.org/pkg/path/filepath/#Match), banned tags/filters)\n\n## Recent API changes within pongo2\n\nIf you\'re using the `master`-branch of pongo2, you might be interested in this section. Since pongo2 is still in development (even though there is a first stable release!), there could be (backwards-incompatible) API changes over time. To keep track of these and therefore make it painless for you to adapt your codebase, I\'ll list them here.\n\n * Function signature for tag execution changed: not taking a `bytes.Buffer` anymore; instead `Execute()`-functions are now taking a `TemplateWriter` interface.\n * Function signature for tag and filter parsing/execution changed (`error` return type changed to `*Error`).\n * `INodeEvaluator` has been removed and got replaced by `IEvaluator`. You can change your existing tags/filters by simply replacing the interface.\n * Two new helper functions: [`RenderTemplateFile()`](https://godoc.org/github.com/flosch/pongo2#RenderTemplateFile) and [`RenderTemplateString()`](https://godoc.org/github.com/flosch/pongo2#RenderTemplateString).\n * `Template.ExecuteRW()` is now [`Template.ExecuteWriter()`](https://godoc.org/github.com/flosch/pongo2#Template.ExecuteWriter)\n * `Template.Execute*()` functions do now take a `pongo2.Context` directly (no pointer anymore).\n\n## How you can help\n\n * Write [filters](https://github.com/flosch/pongo2/blob/master/filters_builtin.go#L3) / [tags] by forking pongo2 and sending pull requests\n * Write/improve code tests (use the following command to see what tests are missing: `go test -v -cover -covermode=count -coverprofile=cover.out && go tool cover -html=cover.out` or have a look on [gocover.io/github.com/flosch/pongo2](http://gocover.io/github.com/flosch/pongo2))\n * Write/improve template tests (see the `template_tests/` directory)\n * Write middleware, libraries and websites using pongo2. :-)\n\n# Documentation\n\nFor a documentation on how the templating language works you can [head over to the Django documentation](https://docs.djangoproject.com/en/dev/topics/templates/). pongo2 aims to be compatible with it.\n\nYou can access pongo2\'s API documentation on [godoc](https://godoc.org/github.com/flosch/pongo2).\n\n## Caveats \n\n### Filters\n\n * **date** / **time**: The `date` and `time` filter are taking the Golang specific time- and date-format (not Django\'s one) currently. [Take a look on the format here](http://golang.org/pkg/time/#Time.Format).\n * **stringformat**: `stringformat` does **not** take Python\'s string format syntax as a parameter, instead it takes Go\'s. Essentially `{{ 3.14|stringformat:"pi is %.2f" }}` is `fmt.Sprintf("pi is %.2f", 3.14)`.\n * **escape** / **force_escape**: Unlike Django\'s behaviour, the `escape`-filter is applied immediately. Therefore there is no need for a `force_escape`-filter yet.\n\n### Tags\n\n * **for**: All the `forloop` fields (like `forloop.counter`) are written with a capital letter at the beginning. For example, the `counter` can be accessed by `forloop.Counter` and the parentloop by `forloop.Parentloop`.\n * **now**: takes Go\'s time format (see **date** and **time**-filter).\n\n### Misc\n\n * **not in-operator**: You can check whether a map/struct/string contains a key/field/substring by using the in-operator (or the negation of it):\n    `{% if key in map %}Key is in map{% else %}Key not in map{% endif %}` or `{% if !(key in map) %}Key is NOT in map{% else %}Key is in map{% endif %}`.\n\n# Add-ons, libraries and helpers\n\n## Official\n\n * [ponginae](https://github.com/flosch/ponginae) - A web-framework for Go (using pongo2).\n * [pongo2-tools](https://github.com/flosch/pongo2-tools) - Official tools and helpers for pongo2\n * [pongo2-addons](https://github.com/flosch/pongo2-addons) - Official additional filters/tags for pongo2 (for example a **markdown**-filter). They are in their own repository because they\'re relying on 3rd-party-libraries.\n\n## 3rd-party\n\n * [beego-pongo2](https://github.com/oal/beego-pongo2) - A tiny little helper for using Pongo2 with [Beego](https://github.com/astaxie/beego).\n * [beego-pongo2.v2](https://github.com/ipfans/beego-pongo2.v2) - Same as `beego-pongo2`, but for pongo2 v2.\n * [macaron-pongo2](https://github.com/macaron-contrib/pongo2) - pongo2 support for [Macaron](https://github.com/Unknwon/macaron), a modular web framework.\n * [ginpongo2](https://github.com/ngerakines/ginpongo2) - middleware for [gin](github.com/gin-gonic/gin) to use pongo2 templates\n * [Build\'n support for Iris\' template engine](https://github.com/kataras/iris) \n * [pongo2gin](https://gitlab.com/go-box/pongo2gin) - alternative renderer for [gin](github.com/gin-gonic/gin) to use pongo2 templates\n * [pongo2-trans](https://github.com/digitalcrab/pongo2trans) - `trans`-tag implementation for internationalization\n * [tpongo2](https://github.com/tango-contrib/tpongo2) - pongo2 support for [Tango](https://github.com/lunny/tango), a micro-kernel & pluggable web framework.\n * [p2cli](https://github.com/wrouesnel/p2cli) - command line templating utility based on pongo2\n \nPlease add your project to this list and send me a pull request when you\'ve developed something nice for pongo2.\n\n# API-usage examples\n\nPlease see the documentation for a full list of provided API methods.\n\n## A tiny example (template string)\n\n```Go\n// Compile the template first (i. e. creating the AST)\ntpl, err := pongo2.FromString("Hello {{ name|capfirst }}!")\nif err != nil {\n\tpanic(err)\n}\n// Now you can render the template with the given \n// pongo2.Context how often you want to.\nout, err := tpl.Execute(pongo2.Context{"name": "florian"})\nif err != nil {\n\tpanic(err)\n}\nfmt.Println(out) // Output: Hello Florian!\n```\n\n## Example server-usage (template file)\n\n```Go\npackage main\n\nimport (\n\t"github.com/flosch/pongo2"\n\t"net/http"\n)\n\n// Pre-compiling the templates at application startup using the\n// little Must()-helper function (Must() will panic if FromFile()\n// or FromString() will return with an error - that\'s it).\n// It\'s faster to pre-compile it anywhere at startup and only\n// execute the template later.\nvar tplExample = pongo2.Must(pongo2.FromFile("example.html"))\n\nfunc examplePage(w http.ResponseWriter, r *http.Request) {\n\t// Execute the template per HTTP request\n\terr := tplExample.ExecuteWriter(pongo2.Context{"query": r.FormValue("query")}, w)\n\tif err != nil {\n\t\thttp.Error(w, err.Error(), http.StatusInternalServerError)\n\t}\n}\n\nfunc main() {\n\thttp.HandleFunc("/", examplePage)\n\thttp.ListenAndServe(":8080", nil)\n}\n```\n\n# Benchmark\n\nThe benchmarks have been run on the my machine (`Intel(R) Core(TM) i7-2600 CPU @ 3.40GHz`) using the command:\n\n    go test -bench . -cpu 1,2,4,8\n\nAll benchmarks are compiling (depends on the benchmark) and executing the `template_tests/complex.tpl` template.\n\nThe results are:\n\n    BenchmarkExecuteComplexWithSandboxActive                50000             60450 ns/op\n    BenchmarkExecuteComplexWithSandboxActive-2              50000             56998 ns/op\n    BenchmarkExecuteComplexWithSandboxActive-4              50000             60343 ns/op\n    BenchmarkExecuteComplexWithSandboxActive-8              50000             64229 ns/op\n    BenchmarkCompileAndExecuteComplexWithSandboxActive      10000            164410 ns/op\n    BenchmarkCompileAndExecuteComplexWithSandboxActive-2    10000            156682 ns/op\n    BenchmarkCompileAndExecuteComplexWithSandboxActive-4    10000            164821 ns/op\n    BenchmarkCompileAndExecuteComplexWithSandboxActive-8    10000            171806 ns/op\n    BenchmarkParallelExecuteComplexWithSandboxActive        50000             60428 ns/op\n    BenchmarkParallelExecuteComplexWithSandboxActive-2      50000             31887 ns/op\n    BenchmarkParallelExecuteComplexWithSandboxActive-4     100000             22810 ns/op\n    BenchmarkParallelExecuteComplexWithSandboxActive-8     100000             18820 ns/op\n    BenchmarkExecuteComplexWithoutSandbox                   50000             56942 ns/op\n    BenchmarkExecuteComplexWithoutSandbox-2                 50000             56168 ns/op\n    BenchmarkExecuteComplexWithoutSandbox-4                 50000             57838 ns/op\n    BenchmarkExecuteComplexWithoutSandbox-8                 50000             60539 ns/op\n    BenchmarkCompileAndExecuteComplexWithoutSandbox         10000            162086 ns/op\n    BenchmarkCompileAndExecuteComplexWithoutSandbox-2       10000            159771 ns/op\n    BenchmarkCompileAndExecuteComplexWithoutSandbox-4       10000            163826 ns/op\n    BenchmarkCompileAndExecuteComplexWithoutSandbox-8       10000            169062 ns/op\n    BenchmarkParallelExecuteComplexWithoutSandbox           50000             57152 ns/op\n    BenchmarkParallelExecuteComplexWithoutSandbox-2         50000             30276 ns/op\n    BenchmarkParallelExecuteComplexWithoutSandbox-4        100000             22065 ns/op\n    BenchmarkParallelExecuteComplexWithoutSandbox-8        100000             18034 ns/op\n\nBenchmarked on October 2nd 2014.\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. \n<a href="https://github.com/flosch/pongo2/graphs/contributors"><img src="https://opencollective.com/pongo2/contributors.svg?width=890&button=false" /></a>\n\n\n## Backers\n\nThank you to all our backers! \xf0\x9f\x99\x8f [[Become a backer](https://opencollective.com/pongo2#backer)]\n\n<a href="https://opencollective.com/pongo2#backers" target="_blank"><img src="https://opencollective.com/pongo2/backers.svg?width=890"></a>\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/pongo2#sponsor)]\n\n<a href="https://opencollective.com/pongo2/sponsor/0/website" target="_blank"><img src="https://opencollective.com/pongo2/sponsor/0/avatar.svg"></a>\n<a href="https://opencollective.com/pongo2/sponsor/1/website" target="_blank"><img src="https://opencollective.com/pongo2/sponsor/1/avatar.svg"></a>\n<a href="https://opencollective.com/pongo2/sponsor/2/website" target="_blank"><img src="https://opencollective.com/pongo2/sponsor/2/avatar.svg"></a>\n<a href="https://opencollective.com/pongo2/sponsor/3/website" target="_blank"><img src="https://opencollective.com/pongo2/sponsor/3/avatar.svg"></a>\n<a href="https://opencollective.com/pongo2/sponsor/4/website" target="_blank"><img src="https://opencollective.com/pongo2/sponsor/4/avatar.svg"></a>\n<a href="https://opencollective.com/pongo2/sponsor/5/website" target="_blank"><img src="https://opencollective.com/pongo2/sponsor/5/avatar.svg"></a>\n<a href="https://opencollective.com/pongo2/sponsor/6/website" target="_blank"><img src="https://opencollective.com/pongo2/sponsor/6/avatar.svg"></a>\n<a href="https://opencollective.com/pongo2/sponsor/7/website" target="_blank"><img src="https://opencollective.com/pongo2/sponsor/7/avatar.svg"></a>\n<a href="https://opencollective.com/pongo2/sponsor/8/website" target="_blank"><img src="https://opencollective.com/pongo2/sponsor/8/avatar.svg"></a>\n<a href="https://opencollective.com/pongo2/sponsor/9/website" target="_blank"><img src="https://opencollective.com/pongo2/sponsor/9/avatar.svg"></a>\n\n\n'