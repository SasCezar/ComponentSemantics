b"================\nModeltranslation\n================\n\nThe modeltranslation application is used to translate dynamic content of\nexisting Django models to an arbitrary number of languages without having to\nchange the original model classes. It uses a registration approach (comparable\nto Django's admin app) to be able to add translations to existing or new\nprojects and is fully integrated into the Django admin backend.\n\nThe advantage of a registration approach is the ability to add translations to\nmodels on a per-app basis. You can use the same app in different projects,\nmay they use translations or not, and you never have to touch the original\nmodel class.\n\n\n.. image:: http://img.shields.io/travis/deschler/django-modeltranslation/master.svg?style=flat-square\n    :target: https://travis-ci.org/deschler/django-modeltranslation\n\n.. image:: http://img.shields.io/coveralls/deschler/django-modeltranslation.svg?style=flat-square\n    :target: https://coveralls.io/r/deschler/django-modeltranslation\n\n.. image:: https://img.shields.io/pypi/v/django-modeltranslation.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/django-modeltranslation/\n    :alt: Latest PyPI version\n\n.. image:: https://img.shields.io/pypi/pyversions/django-modeltranslation.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/django-modeltranslation/\n    :alt: Supported Python versions\n\n\nFeatures\n========\n\n- Add translations without changing existing models or views\n- Translation fields are stored in the same table (no expensive joins)\n- Supports inherited models (abstract and multi-table inheritance)\n- Handle more than just text fields\n- Django admin integration\n- Flexible fallbacks, auto-population and more!\n\n\nProject Home\n------------\nhttps://github.com/deschler/django-modeltranslation\n\nDocumentation\n-------------\nhttps://django-modeltranslation.readthedocs.org/en/latest\n\nMailing List\n------------\nhttp://groups.google.com/group/django-modeltranslation\n"