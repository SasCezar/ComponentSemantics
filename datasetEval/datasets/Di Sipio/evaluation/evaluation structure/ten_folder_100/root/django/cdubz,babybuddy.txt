b'<img src="babybuddy/static_src/logo/icon.png" height="150" align="left">\n\n# Baby Buddy\n\nA buddy for babies! Helps caregivers track sleep, feedings, diaper changes, and\ntummy time to learn about and predict baby\'s needs without (*as much*) guess\nwork.\n\n![Baby Buddy desktop view](screenshot.png)\n\n![Baby Buddy mobile views](screenshot_mobile.png)\n\n**Table of Contents**\n\n- [Demo](#demo)\n- [Deployment](#deployment)\n  - [AWS Elastic Beanstalk](#aws-elastic-beanstalk)\n  - [Docker](#docker)\n  - [Heroku](#heroku)\n  - [Manual](#manual)\n- [Configuration](#configuration)\n- [Languages](#languages)\n- [API](#api)\n  - [Authentication](#authentication)\n  - [`GET` Method](#get-method)\n  - [`OPTIONS` Method](#options-method)\n  - [`POST` Method](#post-method)\n- [Contributing](#contributing)\n\n## Demo\n\nA [demo of Baby Buddy](http://demo.baby-buddy.net) is available on Heroku.\nThe demo instance resets every hour. Login credentials are:\n\n- Username: `admin`\n- Password: `admin`\n\n## Deployment\n\nThe default user name and password for Baby Buddy is `admin`/`admin`. For any\ndeployment, **log in and change the default admin password immediately**.\n\nMany of Baby Buddy\'s configuration settings can be controlled using environment\nvariables - see [Configuration](#configuration) for detailed information.\n\n### AWS Elastic Beanstalk\n\nA basic [Elastic Beanstalk](https://aws.amazon.com/elasticbeanstalk/)\nconfiguration is provided in `.ebextensions/babybuddy.config`.   The steps\nbelow are a rough guide to deployment. See [Working with Python](http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-apps.html)\nfor detailed information.\n\n1. Clone/download the Baby Buddy repo\n\n        git clone https://github.com/cdubz/babybuddy.git\n\n1. Enter the cloned/downloaded directory\n\n        cd babybuddy\n\n1. Change the `SECRET_KEY` value to something random in `.ebextensions/babybuddy.config`\n\n1. [Create an IAM user](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html) in AWS with EB, EC2, RDS and S3 privileges.\n\n1. Initialize the Elastic Bean application (using the IAM user from the previous step)\n\n        eb init -p python-3.6\n\n1. Create/deploy the environment! :rocket:\n\n        eb create -db -db.engine postgres\n\nThe create command will also do an initial deployment. Run `eb deploy` to\nredeploy the app (e.g. if there are errors or settings are changed).\n\n### Docker\n\nA Docker deployment requires [Docker](http://docker.com/) and\n[Docker Compose](https://docs.docker.com/compose/overview/) to create two\ncontainers - one for the database and one for the application.\n\n1. Copy the `docker.env.example` to `docker.env` and set the `ALLOWED_HOSTS` and\n`SECRET_KEY` variables within\n\n        cp docker.env.example docker.env\n        editor docker.env\n\n    *See [Configuration](#configuration) for other settings that can be\n    controlled by environment variables added to the `docker.env` file.*\n\n1. Build/run the application\n\n        docker-compose up -d\n\n1. Initialize the database *(first run/after updates)*\n\n        docker-compose exec app python manage.py migrate\n\nThe app should now be locally available at\n[http://127.0.0.1:8000](http://127.0.0.1:8000). See\n[Get Started, Part 6: Deploy your app](https://docs.docker.com/get-started/part6/)\nfor detailed information about deployment methods with Docker.\n\n### Heroku\n\n[![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy)\n\nFor manual deployments to Heroku without using the deploy button, make sure to\ncreate the following settings before pushing:\n\n    heroku config:set DJANGO_SETTINGS_MODULE=babybuddy.settings.heroku\n    heroku config:set SECRET_KEY=<CHANGE TO SOMETHING RANDOM>\n    heroku config:set DISABLE_COLLECTSTATIC=1\n\nSee [Configuration](#configuration) for other settings that can be controlled\nby `heroku config:set`.\n\n### Manual\n\nThere are many ways to deploy Baby Buddy manually to any server/VPS. The basic \nrequirements are Python, a web server, an application server, and a database.\n\n#### Requirements\n\n- Python 3.5+, pip, pipenv\n- Web server ([nginx](http://nginx.org/), [Apache](http://httpd.apache.org/), etc.)\n- Application server ([uwsgi](http://projects.unbit.it/uwsgi), [gunicorn](http://gunicorn.org/), etc.)\n- Database ([sqlite](https://sqlite.org/), [Postgres](https://www.postgresql.org/), [MySQL](https://www.mysql.com/), etc.)\n\n#### Example deployment\n\n*This example assumes a 512MB VPS instance with Ubuntu 16.04.* It uses\nPython 3.5+, nginx, uwsgi and sqlite and should be sufficient for a few users\n(e.g. two parents and 1+ child).\n\n1. Install system packages\n\n        sudo apt-get install python3 python3-pip nginx uwsgi uwsgi-plugin-python3 git libopenjp2-7-dev\n\n1. Default python3 to python for this session\n\n        alias python=python3\n\n1. Install pipenv\n\n        sudo -H pip3 install pipenv\n\n1. Set up directories and files\n\n        sudo mkdir /var/www/babybuddy\n        sudo chown user:user /var/www/babybuddy\n        mkdir -p /var/www/babybuddy/data/media\n        git clone https://github.com/cdubz/babybuddy.git /var/www/babybuddy/public\n\n1. Move in to the application folder\n\n        cd /var/www/babybuddy/public\n\n1. Initiate and enter the Python environment\n\n        pipenv install --three\n        pipenv shell\n        \n    **Note:** Python dependencies are locked on x86-64 architecture. Installs \n    on other architectures (like Raspberry Pi\'s ARM) may result in a \n    ``THESE PACKAGES DO NOT MATCH THE HASHES FROM Pipfile.lock!`` error. Add \n    the ``--skip-lock`` flag to the above command to suppress this error \n    (i.e.: ``pipenv install --three --dev --skip-lock``).\n\n1. Create a production settings file and set the ``SECRET_KEY`` and ``ALLOWED_HOSTS`` values\n\n        cp babybuddy/settings/production.example.py babybuddy/settings/production.py\n        editor babybuddy/settings/production.py\n\n1. Initiate the application\n\n        export DJANGO_SETTINGS_MODULE=babybuddy.settings.production\n        python manage.py migrate\n\n1. Set appropriate permissions on the database and data folder\n\n        sudo chown -R www-data:www-data /var/www/babybuddy/data\n        sudo chmod 640 /var/www/babybuddy/data/db.sqlite3\n        sudo chmod 750 /var/www/babybuddy/data\n\n1. Create and configure the uwsgi app\n\n        sudo editor /etc/uwsgi/apps-available/babybuddy.ini\n\n    Example config:\n\n        [uwsgi]\n        plugins = python3\n        project = babybuddy\n        base_dir = /var/www/babybuddy\n\n        virtualenv = /path/to/venv\n        chdir = %(base_dir)/public\n        module =  %(project).wsgi:application\n        env = DJANGO_SETTINGS_MODULE=%(project).settings.production\n        master = True\n        vacuum = True\n\n    See the [uWSGI documentation](http://uwsgi-docs.readthedocs.io/en/latest/)\n    for more advanced configuration details.\n\n    **Note: Find the location of the pipenv virtual environment for the\n    `virtualenv` parameter with the command `pipenv --venv`.**\n\n1. Symlink config and restart uWSGI:\n\n        sudo ln -s /etc/uwsgi/apps-available/babybuddy.ini /etc/uwsgi/apps-enabled/babybuddy.ini\n        sudo service uwsgi restart\n\n1. Create and configure the nginx server\n\n        sudo editor /etc/nginx/sites-available/babybuddy\n\n    Example config:\n\n        upstream babybuddy {\n            server unix:///var/run/uwsgi/app/babybuddy/socket;\n        }\n\n        server {\n            listen 80;\n            server_name babybuddy.example.com;\n\n            location / {\n                uwsgi_pass babybuddy;\n                include uwsgi_params;\n            }\n            \n            location /media {\n                alias /var/www/babybuddy/data/media;\n            }\n        }\n\n    See the [nginx documentation](https://nginx.org/en/docs/) for more advanced\n    configuration details.\n\n1. Symlink config and restart NGINX:\n\n        sudo ln -s /etc/nginx/sites-available/babybuddy /etc/nginx/sites-enabled/babybuddy\n        sudo service nginx restart\n\n1. That\'s it (hopefully)! :tada:\n\n## Configuration\n\nEnvironment variables can be used to define a number of configuration settings.\nBaby Buddy will check the application directory structure for an `.env` file or\ntake these variables from the system environment. **System environment variables\ntake precedence over the contents of an `.env` file.**\n\n- [`ALLOWED_HOSTS`](#allowed_hosts)\n- [`ALLOW_UPLOADS`](#allow_uploads)\n- [`AWS_ACCESS_KEY_ID`](#aws_access_key_id)\n- [`AWS_SECRET_ACCESS_KEY`](#aws_secret_access_key)\n- [`AWS_STORAGE_BUCKET_NAME`](#aws_storage_bucket_name)\n- [`DEBUG`](#debug)\n- [`NAP_START_MAX`](#nap_start_max)\n- [`NAP_START_MIN`](#nap_start_min)\n- [`SECRET_KEY`](#secret_key)\n- [`TIME_ZONE`](#time_zone)\n\n### `ALLOWED_HOSTS`\n\n*Default: * (any)*\n\nThis option may be set to a single host or comma-separated list of hosts\n(without spaces). This should *always* be set to a specific host or hosts in\nproduction deployments.\n\nSee also: [Django\'s documentation on the ALLOWED_HOSTS setting](https://docs.djangoproject.com/en/1.11/ref/settings/#allowed-hosts)\n\n### `ALLOW_UPLOADS`\n\n*Default: True*\n\nWhether or not to allow uploads (e.g. of Child photos). For some deployments\n(AWS, Heroku, Nanobox) this setting will default to False due to the lack of\navailable persistent storage.\n\n### `AWS_ACCESS_KEY_ID`\n\n*Default: None*\n\nRequired to access your AWS S3 bucket, should be uniquely generated per bucket\nfor security.\n\nSee also: [`AWS_STORAGE_BUCKET_NAME`](#aws_storage_bucket_name)\n\n### `AWS_SECRET_ACCESS_KEY`\n\n*Default: None*\n\nRequired to access your AWS S3 bucket, should be uniquely generated per bucket\nfor security.\n\nSee also: [`AWS_STORAGE_BUCKET_NAME`](#aws_storage_bucket_name)\n\n### `AWS_STORAGE_BUCKET_NAME`\n\n*Default: None*\n\nIf you would like to use AWS S3 for storage on ephemeral storage platforms like\nHeroku you will need to create a bucket and add it\'s name. See django-storages\'\n[Amazon S3 documentation]\n(http://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html).\n\n### `DEBUG`\n\n*Default: False*\n\nWhen in debug mode, Baby Buddy will print much more detailed error information\nfor exceptions. This setting should be *False* in production deployments.\n\nSee also [Django\'s documentation on the DEBUG setting](https://docs.djangoproject.com/en/1.11/ref/settings/#debug).\n\n### `NAP_START_MAX`\n\n*Default: 18:00*\n\nThe maximum *start* time (in the instance\'s time zone) before which a sleep\nentry is consider a nap. Expects the format %H:%M.\n\n### `NAP_START_MIN`\n\n*Default: 06:00*\n\nThe minimum *start* time (in the instance\'s time zone) after which a sleep\nentry is considered a nap. Expects the format %H:%M.\n\n### `SECRET_KEY`\n\n*Default: None*\n\nA random, unique string must be set as the "secret key" before Baby Buddy can\nbe deployed and run.\n\nSee also [Django\'s documentation on the SECRET_KEY setting](https://docs.djangoproject.com/en/1.11/ref/settings/#secret-key).\n\n### `TIME_ZONE`\n\n*Default: Etc/UTC*\n\nThe time zone to use for the instance. See [List of tz database time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\nfor all possible values.\n\n## Languages\n\nBaby Buddy includes translation support as of v1.2.2. Language can be set on a per-user basis from the user settings page (`/user/settings/`). See [CONTRIBUTING.md](CONTRIBUTING.md#translation) for information about how to create/update translations.\n\n### Available languages\n:us: English (U.S.) *(base)*\n\n:fr: French\n\n:de: German\n\n:sweden: Swedish\n\n## API\n\nBaby Buddy uses the [Django REST Framework](http://www.django-rest-framework.org/)\n(DRF) to provide a REST API.\n\nThe only requirement for (most) requests is that the `Authorization` header is\nset as described in the [Authentication](#authentication) section. The one\nexception is the `/api` endpoint, which lists all available endpoints.\n\nCurrently, the following endpoints are available for `GET`, `OPTIONS`, and\n`POST` requests:\n\n- `/api/children/`\n- `/api/changes/` (Diaper Changes)\n- `/api/feedings/`\n- `/api/notes/`\n- `/api/sleep/`\n- `/api/temperature/`\n- `/api/timers/`\n- `/api/tummy-times/`\n- `/api/weight/`\n\n### Authentication\n\nBy default, the [TokenAuthentication](http://www.django-rest-framework.org/api-guide/authentication/#tokenauthentication)\nand [SessionAuthentication](http://www.django-rest-framework.org/api-guide/authentication/#sessionauthentication)\nclasses are enabled. Session authentication covers local API requests made by\nthe application itself. Token authentication allows external requests to be\nmade.\n\n:exclamation: **In a production environment, token authentication should only\nbe used for API calls to an `https` endpoint.** :exclamation:\n\nEach user is automatically assigned an API key that can be used for token\nauthentication. This key can be found on the User Settings page for the logged\nin the user. To use a key for an API request, set the request `Authorization`\nheader to `Token <user-key>`. E.g.\n\n    Authorization: Token 2h23807gd72h7hop382p98hd823dw3g665g56\n\nIf the `Authorization` header is not set or the key is not valid, the API will\nreturn `403 Forbidden` with additional details in the response body.\n\n### `GET` Method\n\n#### Request\n\nThe `limit` and `offset` request parameters can be used to limit\nand offset the results set respectively. For example, the following request\nwill return five diaper changes starting from the 10th diaper change entry:\n\n    curl -X GET \'https://[...]/api/changes/?limit=5&offset=10\' -H \'Authorization: Token [...]\'\n    {\n        "count": <int>,\n        "next": "https://[...]/api/changes/?limit=5&offset=15",\n        "previous": "https://[...]/api/changes/?limit=5&offset=5",\n        "results": [...]\n    }\n\nField-based filters for specific endpoints can be found the in the `filters`\nfield of the `OPTIONS` response for specific endpoints.\n\n#### Response\n\nReturns JSON data in the response body in the following format:\n\n    {\n        "count":<int>,\n        "next":<url>,\n        "previous":<url>,\n        "results":[{...}]\n    }\n\n- `count`: Total number of records (*in the database*, not just the response).\n- `next`: URL for the next set of results.\n- `previous`: URL for the previous set of results.\n- `results`: An array of the results of the request.\n\n### `OPTIONS` Method\n\n#### Request\n\nAll endpoints will respond to an `OPTIONS` request with detailed information\nabout the endpoint\'s purpose, parameters, filters, etc.\n\n#### Response\n\nReturns JSON data in the response body describing the endpoint, available\noptions for `POST` requests, and available filters for `GET` requests. The\nfollowing example describes the `/api/children` endpoint:\n\n    {\n        "name": "Child List",\n        "renders": [\n            "application/json",\n            "text/html"\n        ],\n        "parses": [\n            "application/json",\n            "application/x-www-form-urlencoded",\n            "multipart/form-data"\n        ],\n        "actions": {\n            "POST": {\n                "id": {\n                    "type": "integer",\n                    "required": false,\n                    "read_only": true,\n                    "label": "ID"\n                },\n                [...]\n            }\n        },\n        "filters": [\n            "first_name",\n            "last_name",\n            "slug"\n        ]\n    }\n\n### `POST` Method\n\n#### Request\n\nTo add new entries for a particular endpoint, send a `POST` request with the\nentry data in JSON format in the request body. The `Content-Type` header for\n`POST` request must be set to `application/json`.\n\nRegular sanity checks will be performed on relevant data. See the `OPTIONS`\nresponse for a particular endpoint for details on required fields and data\nformats.\n\n#### Response\n\nReturns JSON data in the response body describing the added/updated instance or\nerror details if errors exist. Errors are keyed by either the field in error or\nthe general string "non_field_errors" (usually when validation incorporates\nmultiple fields).\n\n## Contributing\n\nContributions are welcome! See [CONTRIBUTING.md](CONTRIBUTING.md) for detailed\ninformation about how to develop and contribute to Baby Buddy.\n'