b"# Timestrap\n\nTime tracking you can host anywhere. Full export support in\nmultiple formats and easily extensible.\n\n## Warning\n\nThis app is currently very unstable. Everything may, and probably will, change.\nAll migrations are going to be wiped and setup properly before release 1.0 so\nyou will not be able to upgrade to 1.0 from early development.\n\n## Documentation\n\nFor more details and screenshots check out our main docs website:\n[https://docs.gettimestrap.com/](https://docs.gettimestrap.com/)\n\n## Demo\n\nThere is a [demo instance of Timestrap](https://timestrap.herokuapp.com/) on\nHeroku that resets every 10 minutes.\n\n## Superuser Credentials\n\nAll installations and the demo create a superuser to get you started, if this\nis a production deployment you will want to change these.\n\n-   Username: `admin`\n-   Password: `admin`\n\n## Heroku Installation\n\nThe easiest way to run Timestrap and the only installation that I can actively\nsupport since I use it myself in production.\n\n[![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy?template=https://github.com/overshard/timestrap)\n\nFor manual deployments to Heroku, make sure to create two environmental\nvariables before pushing using `heroku config:set`:\n\n    heroku config:set DJANGO_SETTINGS_MODULE=timestrap.settings.heroku\n    heroku config:set SECRET_KEY=ChangeMeToSomethingRandom\n\n## Docker Installation\n\nThis creates a minimal docker server setup for Timestrap. This currently is\nin development and may not have persistent data without fiddling. Any help to\nimprove the docker configuration files would be appreciated.\n\n### Docker Requirements\n\n-   Docker\n-   Docker Compose\n\nDocker Compose is used for running multiple containers since we require a\nPostgreSQL database and, not yet but soon, a Redis server for messages and\nevents.\n\n### Docker Running\n\nMake sure to update the environmental variables in `docker-compose.yml` and\ncheck the `timestrap/settings/docker.py` file to see if you'd like to change\nanything then run:\n\n    docker-compose up --detach --build\n\nTo migrate the database, create your first superuser, and create the initial\nsite configuration you then need to run:\n\n    docker-compose exec web python3 manage.py migrate\n\nThe Timestrap application should now be running on port 80 of whatever system\nyou ran these commands on, if you ran this locally then that would be\n[http://localhost/](http://localhost/).\n\n### Docker Data\n\nAll data should be stored in the timestrap_db volume. If you wish to rebuild\nTimestrap at the latest you can do the following from the timestrap repo you\ncloned:\n\n    git pull\n    docker-compose up --detach --build\n    docker-compose exec web python3 manage.py migrate\n\nAll data will be kept during this process and you'll have the latest version\nof Timestrap.\n\n## Development Installation\n\nIf you'd like to contribute code to Timestrap you'll need to do this!\n\n### Development Requirements\n\n-   Python 3.7+\n-   Node 10+\n-   pipenv\n-   yarn\n\nYou'll probably need to install pipenv with pip, run `pip install pipenv` to\nget this. Same with yarn for node, `npm install --global yarn`. On some systems\nyou may have to install some additional development files. For example on\nUbuntu you will need to install `apt install build-essential`. On Alpine you\nwill need `apk add python3-dev nodejs-dev postgresql-dev gcc musl-dev libffi-dev`.\n\n### Development Setup\n\nOnce you have all of the above you can get started!\n\n    yarn install\n    pipenv install --dev\n\nAfter all the dependencies install you can migrate the database and run the\nserver.\n\n    pipenv run python manage.py migrate\n    pipenv run python manage.py fake\n    yarn start\n\nTimestrap should now be running at [http://localhost:8000](http://localhost:8000)\nand the test server will automatically recognize and recompile changes to any\nfile allowing for quick modification and review.\n\nOnce you've made your changes you can share your changes by creating a\n[pull request](https://github.com/overshard/timestrap/pulls)!\n"