b'dj-stripe\n=========\n\n.. image:: https://travis-ci.org/dj-stripe/dj-stripe.png\n   :alt: Build Status\n   :target: https://travis-ci.org/dj-stripe/dj-stripe\n\n.. image:: https://readthedocs.org/projects/dj-stripe/badge/\n   :alt: Documentation Status\n   :target: https://dj-stripe.readthedocs.io/\n\nStripe Models for Django.\n\n\nIntroduction\n------------\n\ndj-stripe implements all of the Stripe models, for Django.\nSet up your webhook and start receiving model updates.\nYou will then have a copy of all the Stripe models available in Django models, no API traffic required!\n\nThe full documentation is available here: https://dj-stripe.readthedocs.io/\n\nFeatures\n--------\n\n* Subscriptions\n* Individual charges\n* Stripe Sources\n* Stripe v2 and v3 support\n* Supports SCA regulations, Checkout Sessions, and Payment Intents\n* Tested with Stripe API `2019-09-09` (see https://dj-stripe.readthedocs.io/en/latest/api_versions.html )\n\nRequirements\n------------\n\n* Django >= 2.1\n* Python >= 3.5\n* Supports Stripe exclusively. For PayPal, see `dj-paypal <https://github.com/HearthSim/dj-paypal>`_ instead.\n* PostgreSQL engine (recommended): >= 9.4\n* MySQL engine: MariaDB >= 10.2 or MySQL >= 5.7\n\n\nQuickstart\n----------\n\nInstall dj-stripe:\n\n.. code-block:: bash\n\n    pip install dj-stripe\n\nAdd ``djstripe`` to your ``INSTALLED_APPS``:\n\n.. code-block:: python\n\n    INSTALLED_APPS =(\n        ...\n        "djstripe",\n        ...\n    )\n\nAdd to urls.py:\n\n.. code-block:: python\n\n    path("stripe/", include("djstripe.urls", namespace="djstripe")),\n\nTell Stripe about the webhook (Stripe webhook docs can be found `here <https://stripe.com/docs/webhooks>`_) using the full URL of your endpoint from the urls.py step above (e.g. ``https://example.com/stripe/webhook``).\n\nAdd your Stripe keys and set the operating mode:\n\n.. code-block:: python\n\n    STRIPE_LIVE_PUBLIC_KEY = os.environ.get("STRIPE_LIVE_PUBLIC_KEY", "<your publishable key>")\n    STRIPE_LIVE_SECRET_KEY = os.environ.get("STRIPE_LIVE_SECRET_KEY", "<your secret key>")\n    STRIPE_TEST_PUBLIC_KEY = os.environ.get("STRIPE_TEST_PUBLIC_KEY", "<your publishable key>")\n    STRIPE_TEST_SECRET_KEY = os.environ.get("STRIPE_TEST_SECRET_KEY", "<your secret key>")\n    STRIPE_LIVE_MODE = False  # Change to True in production\n    DJSTRIPE_WEBHOOK_SECRET = "whsec_xxx"  # Get it from the section in the Stripe dashboard where you added the webhook endpoint\n\nAdd some payment plans via the Stripe.com dashboard.\n\nRun the commands::\n\n    python manage.py migrate\n\n    python manage.py djstripe_init_customers\n\n    python manage.py djstripe_sync_plans_from_stripe\n\nSee https://dj-stripe.readthedocs.io/en/latest/stripe_elements_js.html for notes about\nusage of the Stripe Elements frontend JS library.\n\nRunning the Tests\n------------------\n\nAssuming the tests are run against PostgreSQL::\n\n    createdb djstripe\n    pip install tox\n    tox\n\nFollows Best Practices\n======================\n\n.. image:: https://twoscoops.smugmug.com/Two-Scoops-Press-Media-Kit/i-C8s5jkn/0/O/favicon-152.png\n   :name: Two Scoops Logo\n   :align: center\n   :alt: Two Scoops of Django\n   :target: https://www.twoscoopspress.org/products/two-scoops-of-django-1-11\n\nThis project follows best practices as espoused in `Two Scoops of Django: Best Practices for Django 1.11`_.\n\n.. _`Two Scoops of Django: Best Practices for Django 1.11`: https://twoscoopspress.org/products/two-scoops-of-django-1-11\n'