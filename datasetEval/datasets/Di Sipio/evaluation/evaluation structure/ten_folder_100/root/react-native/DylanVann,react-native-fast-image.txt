b'<h1 align="center">\n  \xf0\x9f\x9a\xa9 FastImage\n</h1>\n\n<div align="center">\n\nPerformant React Native image component.\n\n[![Version][version-badge]][package]\n[![Downloads][downloads-badge]][npmtrends]\n[![Build Status][build-badge]][build]\n[![Code Coverage][coverage-badge]][coverage]\n\n[![Watch on GitHub][github-watch-badge]][github-watch]\n[![Star on GitHub][github-star-badge]][github-star]\n[![Tweet][twitter-badge]][twitter]\n\n</div>\n\n<p align="center" >\n  <kbd>\n    <img src="https://github.com/DylanVann/react-native-fast-image/raw/master/docs/assets/scroll.gif" title="Scroll Demo" float="left">\n  </kbd>\n  <kbd>\n    <img src="https://github.com/DylanVann/react-native-fast-image/raw/master/docs/assets/priority.gif" title="Priority Demo" float="left">\n  </kbd>\n  <br>\n  <em>FastImage example app.</em>\n</p>\n\nReact Native\'s `Image` component handles image caching like browsers\nfor the most part.\nIf the server is returning proper cache control\nheaders for images you\'ll generally get the sort of built in\ncaching behavior you\'d have in a browser.\nEven so many people have noticed:\n\n-   Flickering.\n-   Cache misses.\n-   Low performance loading from cache.\n-   Low performance in general.\n\n`FastImage` is an `Image` replacement that solves these issues.\n`FastImage` is a wrapper around\n[SDWebImage (iOS)](https://github.com/rs/SDWebImage)\nand\n[Glide (Android)](https://github.com/bumptech/glide).\n\n## Features\n\n-   [x] Aggressively cache images.\n-   [x] Add authorization headers.\n-   [x] Prioritize images.\n-   [x] Preload images.\n-   [x] GIF support.\n-   [x] Border radius.\n\n## Usage\n\n**Note: You must be using React Native 0.60.0 or higher to use the most recent version of `react-native-fast-image`.**\n\n```bash\nyarn add react-native-fast-image\n```\n\n```jsx\nimport FastImage from \'react-native-fast-image\'\n\nconst YourImage = () => (\n    <FastImage\n        style={{ width: 200, height: 200 }}\n        source={{\n            uri: \'https://unsplash.it/400/400?image=1\',\n            headers: { Authorization: \'someAuthToken\' },\n            priority: FastImage.priority.normal,\n        }}\n        resizeMode={FastImage.resizeMode.contain}\n    />\n)\n```\n\n## Are you using Glide already using an AppGlideModule?\n\n-   [Are you using Glide already using an AppGlideModule?](docs/app-glide-module.md) (you might have problems if you don\'t read this)\n\n## Are you using Proguard?\n\nIf you use Proguard you will need to add these lines to `android/app/proguard-rules.pro`:\n\n```\n-keep public class com.dylanvann.fastimage.* {*;}\n-keep public class com.dylanvann.fastimage.** {*;}\n-keep public class * implements com.bumptech.glide.module.GlideModule\n-keep public class * extends com.bumptech.glide.module.AppGlideModule\n-keep public enum com.bumptech.glide.load.ImageHeaderParser$** {\n  **[] $VALUES;\n  public *;\n}\n```\n\n## Properties\n\n### `source?: object`\n\nSource for the remote image to load.\n\n---\n\n### `source.uri?: string`\n\nRemote url to load the image from. e.g. `\'https://facebook.github.io/react/img/logo_og.png\'`.\n\n---\n\n### `source.headers?: object`\n\nHeaders to load the image with. e.g. `{ Authorization: \'someAuthToken\' }`.\n\n---\n\n### `source.priority?: enum`\n\n-   `FastImage.priority.low` - Low Priority.\n-   `FastImage.priority.normal` **(Default)** - Normal Priority.\n-   `FastImage.priority.high` - High Priority.\n\n---\n\n### `source.cache?: enum`\n\n-   `FastImage.cacheControl.immutable` - **(Default)** - Only updates if url changes.\n-   `FastImage.cacheControl.web` - Use headers and follow normal caching procedures.\n-   `FastImage.cacheControl.cacheOnly` - Only show images from cache, do not make any network requests.\n\n---\n\n### `resizeMode?: enum`\n\n-   `FastImage.resizeMode.contain` - Scale the image uniformly (maintain the image\'s aspect ratio) so that both dimensions (width and height) of the image will be equal to or less than the corresponding dimension of the view (minus padding).\n-   `FastImage.resizeMode.cover` **(Default)** - Scale the image uniformly (maintain the image\'s aspect ratio) so that both dimensions (width and height) of the image will be equal to or larger than the corresponding dimension of the view (minus padding).\n-   `FastImage.resizeMode.stretch` - Scale width and height independently, This may change the aspect ratio of the src.\n-   `FastImage.resizeMode.center` - Do not scale the image, keep centered.\n\n---\n\n### `onLoadStart?: () => void`\n\nCalled when the image starts to load.\n\n---\n\n### `onProgress?: (event) => void`\n\nCalled when the image is loading.\n\ne.g. `onProgress={e => console.log(e.nativeEvent.loaded / e.nativeEvent.total)}`\n\n---\n\n### `onLoad?: (event) => void`\n\nCalled on a successful image fetch. Called with the width and height of the loaded image.\n\ne.g. `onLoad={e => console.log(e.nativeEvent.width, e.nativeEvent.height)}`\n\n---\n\n### `onError?: () => void`\n\nCalled on an image fetching error.\n\n---\n\n### `onLoadEnd?: () => void`\n\nCalled when the image finishes loading, whether it was successful or an error.\n\n---\n\n### `style`\n\nA React Native style. Supports using `borderRadius`.\n\n---\n\n### `fallback: boolean`\n\nIf true will fallback to using `Image`.\nIn this case the image will still be styled and laid out the same way as `FastImage`.\n\n---\n\n### `tintColor?: number | string`\n\nIf supplied, changes the color of all the non-transparent pixels to the given color.\n\n## Static Methods\n\n### `FastImage.preload: (source[]) => void`\n\nPreload images to display later. e.g.\n\n```js\nFastImage.preload([\n    {\n        uri: \'https://facebook.github.io/react/img/logo_og.png\',\n        headers: { Authorization: \'someAuthToken\' },\n    },\n    {\n        uri: \'https://facebook.github.io/react/img/logo_og.png\',\n        headers: { Authorization: \'someAuthToken\' },\n    },\n])\n```\n\n## Troubleshooting\n\nIf you have any problems using this library try the steps in [troubleshooting](docs/troubleshooting.md) and see if they fix it.\n\n## Development\n\n[Follow these instructions to get the example app running.](docs/development.md)\n\n## Supported React Native Versions\n\nThis project only aims to support the latest version of React Native.\\\nThis simplifies the development and the testing of the project.\n\nIf you require new features or bug fixes for older versions you can fork this project.\n\n## Credits\n\nThe idea for this modules came from\n[vovkasm\'s](https://github.com/vovkasm)\n[react-native-web-image](https://github.com/vovkasm/react-native-web-image)\npackage.\nIt also uses Glide and SDWebImage, but didn\'t have some features I needed (priority, headers).\n\nThanks to [@mobinni](https://github.com/mobinni) for helping with the conceptualization\n\n## Licenses\n\n-   FastImage - MIT \xc2\xa9 [DylanVann](https://github.com/DylanVann)\n-   SDWebImage - `MIT`\n-   Glide - BSD, part MIT and Apache 2.0. See the [LICENSE](https://github.com/bumptech/glide/blob/master/license) file for details.\n\n[build-badge]: https://img.shields.io/circleci/project/github/DylanVann/react-native-fast-image/master.svg?style=flat-square\n[build]: https://circleci.com/gh/DylanVann/react-native-fast-image/tree/master\n[coverage-badge]: https://img.shields.io/codecov/c/github/dylanvann/react-native-fast-image.svg?style=flat-square\n[coverage]: https://codecov.io/github/dylanvann/react-native-fast-image\n[downloads-badge]: https://img.shields.io/npm/dm/react-native-fast-image.svg?style=flat-square\n[npmtrends]: http://www.npmtrends.com/react-native-fast-image\n[package]: https://www.npmjs.com/package/react-native-fast-image\n[version-badge]: https://img.shields.io/npm/v/react-native-fast-image.svg?style=flat-square\n[twitter]: https://twitter.com/home?status=Check%20out%20react-native-fast-image%20by%20%40atomarranger%20https%3A//github.com/DylanVann/react-native-fast-image\n[twitter-badge]: https://img.shields.io/twitter/url/https/github.com/DylanVann/react-native-fast-image.svg?style=social\n[github-watch-badge]: https://img.shields.io/github/watchers/dylanvann/react-native-fast-image.svg?style=social\n[github-watch]: https://github.com/dylanvann/react-native-fast-image/watchers\n[github-star-badge]: https://img.shields.io/github/stars/dylanvann/react-native-fast-image.svg?style=social\n[github-star]: https://github.com/dylanvann/react-native-fast-image/stargazers\n'