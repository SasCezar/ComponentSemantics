b"[![npm](https://img.shields.io/npm/v/react-native-swipe-list-view.svg)](https://www.npmjs.com/package/react-native-swipe-list-view) [![npm](https://img.shields.io/npm/dm/react-native-swipe-list-view.svg)](https://www.npmjs.com/package/react-native-swipe-list-view)\n\n# react-native-swipe-list-view\n****\n--------\n\n```<SwipeListView>``` is a ListView with rows that swipe open and closed. Handles default native behavior such as closing rows when ListView is scrolled or when other rows are opened.\n\nAlso includes ```<SwipeRow>``` if you want to use a swipeable row outside of the ```<SwipeListView>```\n\n--------\n\xf0\x9f\x94\xa5\xf0\x9f\x94\xa5 BREAKING CHANGES \xf0\x9f\x94\xa5\xf0\x9f\x94\xa5\n\nFor use with RN 0.60+ please use react-native-swipe-list-view@2.0.0+\n\nRN 0.60 and RNSLV 2.0.0 deprecate the use of ListView entirely, please see `example.js` for examples and see the [migrating-to-flatlist doc](https://github.com/jemise111/react-native-swipe-list-view/blob/master/docs/migrating-to-flatlist.md) for a migration guide if you aren't already using `FlatList`.\n\nThe `useFlatList` prop is no longer required, as `FlatList` is the default ListView used.\n\n\n--------\n\n## Example\n![](http://i.imgur.com/6fTrdZa.gif) &nbsp;&nbsp;&nbsp;&nbsp; ![](http://i.imgur.com/3IdOA77.gif)\n\nTry it out! https://snack.expo.io/@jemise111/react-native-swipe-list-view\n\n([What's a Snack?](https://blog.expo.io/sketch-a-playground-for-react-native-16b2401f44a2))\n\n## Installation\n```bash\nnpm install --save react-native-swipe-list-view\n```\n\n## Running the example\nThe application under ./SwipeListExample will produce the above example. To run execute the following:\n\n* ```git clone https://github.com/jemise111/react-native-swipe-list-view.git```\n* ```cd react-native-swipe-list-view```\n* ```cd SwipeListExample```\n* ```yarn```\n* ```react-native run-ios | react-native run-android```\n\n## Usage\n```javascript\nimport { SwipeListView } from 'react-native-swipe-list-view';\n\nrender() {\n    return (\n        <SwipeListView\n            data={this.state.listViewData}\n            renderItem={ (data, rowMap) => (\n                <View style={styles.rowFront}>\n                    <Text>I am {data.item} in a SwipeListView</Text>\n                </View>\n            )}\n            renderHiddenItem={ (data, rowMap) => (\n                <View style={styles.rowBack}>\n                    <Text>Left</Text>\n                    <Text>Right</Text>\n                </View>\n            )}\n            leftOpenValue={75}\n            rightOpenValue={-75}\n        />\n    )\n}\n```\n\n*See ```example.js``` for full usage guide (including using ```<SwipeRow>``` by itself)*\n\n#### Note:\nIf your row is touchable (TouchableOpacity, TouchableHighlight, etc.)  with an ```onPress``` function make sure ```renderItem``` returns the Touchable as the topmost element.\n\nGOOD:\n```javascript\nrenderItem={ data => (\n    <TouchableHighlight onPress={this.doSomething.bind(this)}>\n        <View>\n            <Text>I am {data.item} in a SwipeListView</Text>\n        </View>\n    </TouchableHighlight>\n)}\n```\nBAD:\n```javascript\nrenderItem={ data => (\n    <View>\n        <TouchableHighlight onPress={this.doSomething.bind(this)}>\n            <Text>I am {data.item} in a SwipeListView</Text>\n        </TouchableHighlight>\n    </View>\n)}\n```\n\n## Component APIs\n[`<SwipeListView />`](https://github.com/jemise111/react-native-swipe-list-view/blob/master/docs/SwipeListView.md)\n\n[`<SwipeRow />`](https://github.com/jemise111/react-native-swipe-list-view/blob/master/docs/SwipeRow.md)\n\n## Flatlist / SectionList support\n`SwipeListView` now supports `FlatList` and `SectionList`! (as of v1.0.0)\n\nPlease see the [migrating-to-flatlist doc](https://github.com/jemise111/react-native-swipe-list-view/blob/master/docs/migrating-to-flatlist.md) for all details.\nAnd see `example.js` for a full usage example.\n\n\n## Other Useful Guides\n * [Per Row Behavior](https://github.com/jemise111/react-native-swipe-list-view/blob/master/docs/per-row-behavior.md) (Define different swipe values, stop values, etc for each individual row)\n * [UI Based On Swipe Values](https://github.com/jemise111/react-native-swipe-list-view/blob/master/docs/ui-based-on-swipe-values.md) (aka the gmail effect - animate components in rows based on current swipe position)\n * [Swipe To Delete](https://github.com/jemise111/react-native-swipe-list-view/blob/master/docs/swipe-to-delete.md) (Swiping a row all the way across causes a delete animation)\n\n## Core Support\nRN Core added a SwipeList component as of [v0.27.0](https://github.com/facebook/react-native/releases/tag/v0.27.0)\nIt is actively being worked on and has no documentation yet. So I will continue to maintain this component until a future date.\n\n## License\nMIT\n"