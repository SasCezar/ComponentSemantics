b'# libui.cr\n\nCrystal-lang bindings for [libui](https://github.com/andlabs/libui), a GUI library for Linux, OS X and Windows.\n\n(well, forget about Windows for now, this is Crystal)\n\n![OS X](https://raw.githubusercontent.com/andlabs/libui/master/examples/controlgallery/darwin.png)\n\n## What\'s New\n\n04/15/17\n- Sync\'d to upstream #5fa7ba4\n- Updated for Crystal 0.21.1\n\n08/13/16\n- Sync\'d to upstream #6e45859\n- Control Gallery not updated, but yml examples were\n- Proper component stretching and margins\n- Waiting for tables definition to materialize\n\n07/24/16\n- Now with YAML builder\n\n06/19/16\n- Sync\'d to upstream #9656a81\n- Control Gallery example not updated but library is.\n\n## Installation\n\nAdd these package to your dependencies in shard.yml:\n\n    dependencies:\n      libui:\n        github: fusion/libui.cr\n\n\n## Usage\n\n### Standard (C-like) usage\n\nHave a look at examples/controlgallery, which is a direct port of a C example.\n\n### Crystal-only YAML builder\n\n(see examples/crgallery)\n\nThis is a feature I am introducing in addition to the library bindings.\nIt allows devs to specify a UI without hard coding it and maintain it using\nfragments described in simple .yml files.\n\nSome advantages:\n- No need to recompile your code to test a UI change\n- Team collaboration now easier\n- Descriptive UI\n- Separation of concerns\n\nObvious drawback:\n- No compile-time checks\n\nNote that inflating fragments and pure coding can be mixed.\n\n#### API\n\n    CUI.menubar "path_to_yml_file"\n\n    CUI.inflate "path_to_yml_file"\n\n    CUI.get/CUI.get!\n    CUI.get_as_menuitem/CUI.get_as_menuitem!\n    CUI.get_mainwindow/CUI.get_mainwindow!\n\nThe \'!\' forms will throw an exception if component is not found.\n\n## Development\n\nRecent versions of Crystal now require you to include the current path explicitly to find libraries:\n\n    crystal build --link-flags "-L$(pwd)" examples/controlgallery/main.cr\n    crystal build --link-flags "-L$(pwd)" examples/crgallery/crgallery.cr\n\nIf you omit this flag, libui.A.dylib or libui.so (system-specific) will not be found.\n\nNote: in this example, I used the current directory but it could be `-L/usr/local/includes` or any\n other location depending on your setup.\n\nTo run the generated binaries:\n\n    LD_LIBRARY_PATH=. ./main\n    LD_LIBRARY_PATH=. ./crgallery\n\n## Contributing\n\n1. Fork it ( https://github.com/fusion/libui.cr/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am \'Add some feature\')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [[fusion]](https://github.com/fusion) Chris F Ravenscroft - creator, maintainer\n'