b'\n<img src="logo/logotype_horizontal.svg" alt="mosquito">\n\n[![CircleCI](https://img.shields.io/circleci/project/github/robacarp/mosquito/master.svg?logo=circleci&label=Circle%20CI&style=for-the-badge)](https://circleci.com/gh/robacarp/mosquito)\n[![Crystal Version](https://img.shields.io/badge/crystal-0.29-blueviolet.svg?longCache=true&style=for-the-badge)](https://crystal-lang.org/)\n[![GitHub](https://img.shields.io/github/license/robacarp/mosquito.svg?style=for-the-badge)](https://tldrlegal.com/license/mit-license)\n\n\nMosquito is a generic background job runner written specifically for Crystal. Significant inspiration from my experience with the successes and failings of the Ruby gem Sidekiq.\n\nMosquito currently provides these features:\n- Delayed execution\n- Scheduled / Periodic execution\n- Job Storage in Redis\n- Crystal hash style `?` methods for parameter getters which return nil instead of raise\n- Automatic rescheduling of failed jobs\n- Progressively increasing delay of failed jobs\n- Dead letter queue of jobs which have failed too many times\n- Rate limited jobs\n\nCurrent Limitations:\n- Job failure delay, maximum retry count, and several other variables cannot be easily configured.\n- Visibility into the job queue is difficult and must be done through redis manually.\n\n![](https://cdn.shopify.com/s/files/1/0242/0179/products/amber1_1024x1024.png?v=1455409061)\n\n## Project State\n\nUpdated 2019-04-26\n\n> Sufficient working beta.\n>\n> Use in a production environment at your own risk, and please open issues and feature requests.\n\n## Installation\n\nUpdate your `shard.yml` to include mosquito:\n\n```diff\ndependencies:\n+  mosquito:\n+    github: robacarp/mosquito\n```\n\nFurther installation instructions are available for use with Amber as well as a vanilla crystal application:\n\n- [Installing with Amber](https://github.com/robacarp/mosquito/wiki/Usage:-Amber)\n- [Adding to a vanilla crystal application](https://github.com/robacarp/mosquito/wiki/Usage:-vanilla-crystal)\n\n## Usage\n\n### Step 1: Define a queued job\n\n```crystal\nclass PutsJob < Mosquito::QueuedJob\n  params message : String\n\n  def perform\n    puts message\n  end\nend\n```\n\n### Step 2: Trigger that job\n\n```crystal\nPutsJob.new(message: "ohai background job").enqueue\n```\n\n### Step 3: Run your worker to process the job\n\n```text\ncrystal run bin/worker.cr\n```\n\n### Success\n\n```\n> crystal run src/worker.cr\n2017-11-06 17:07:29 - Mosquito is buzzing...\n2017-11-06 17:07:51 - Running task puts_job<...> from puts_job\n2017-11-06 17:07:51 - [PutsJob] ohai background job\n2017-11-06 17:07:51 - task puts_job<...> succeeded, took 0.0 seconds\n```\n\n[More information about queued jobs](https://github.com/robacarp/mosquito/wiki/Queued-jobs) in the wiki.\n\n------\n\n## Periodic Jobs\n\nPeriodic jobs run according to a predefined period. \n\nThis periodic job:\n```crystal\nclass PeriodicallyPutsJob < Mosquito::PeriodicJob\n  run_every 1.minute\n\n  def perform\n    emotions = %w{happy sad angry optimistic political skeptical epuhoric}\n    puts "The time is now #{Time.local} and the wizard is feeling #{emotions.sample}"\n  end\nend\n```\n\nWould produce this output:\n```crystal\n2017-11-06 17:20:13 - Mosquito is buzzing...\n2017-11-06 17:20:13 - Queues: periodically_puts_job\n2017-11-06 17:20:13 - Running task periodically_puts_job<...> from periodically_puts_job\n2017-11-06 17:20:13 - [PeriodicallyPutsJob] The time is now 2017-11-06 17:20:13 and the wizard is feeling skeptical\n2017-11-06 17:20:13 - task periodically_puts_job<...> succeeded, took 0.0 seconds\n2017-11-06 17:21:14 - Queues: periodically_puts_job\n2017-11-06 17:21:14 - Running task periodically_puts_job<...> from periodically_puts_job\n2017-11-06 17:21:14 - [PeriodicallyPutsJob] The time is now 2017-11-06 17:21:14 and the wizard is feeling optimistic\n2017-11-06 17:21:14 - task periodically_puts_job<...> succeeded, took 0.0 seconds\n2017-11-06 17:22:15 - Queues: periodically_puts_job\n2017-11-06 17:22:15 - Running task periodically_puts_job<...> from periodically_puts_job\n2017-11-06 17:22:15 - [PeriodicallyPutsJob] The time is now 2017-11-06 17:22:15 and the wizard is feeling political\n2017-11-06 17:22:15 - task periodically_puts_job<...> succeeded, took 0.0 seconds\n```\n\nMore information: [periodic jobs on the wiki](https://github.com/robacarp/mosquito/wiki/Periodic-Jobs)\n\n## Throttling Jobs\n\nJobs can be throttled to limit the number of messages that get executed within a given period of time.  For example, if 10 messages were enqueued for `ThrottledJob`\xc2\xa0at one time; 5 would be executed immediately, then pause for a minute, then execute the last 5.  \n\n```crystal\nclass ThrottledJob < Mosquito::QueuedJob\n  params message : String\n  throttle limit: 5, period: 60\n\n  def perform\n    puts message\n  end\nend\n```\n\n\n\n\n## Connecting to Redis\n\nMosquito currently reads directly from the `REDIS_URL` environment variable to connect to redis. If no variable is set, it uses redis connection defaults to connect to redis on localhost. \n\n## Contributing\n\nContributions are welcome. Please fork the repository, commit changes on a branch, and then open a pull request.\n\n### Testing\n\nThis repository uses [minitest](https://github.com/ysbaddaden/minitest.cr) for testing. As a result, `crystal spec` doesn\'t do anything helpful. Do this instead:\n\n```\nmake test\n```\n\nIn lieu of `crystal spec` bells and whistles, Minitest provides a nice alternative to [running one test at a time instead of the whole suite](https://github.com/ysbaddaden/minitest.cr/pull/31).\n\n## Contributors\n\n- [robacarp](https://github.com/robacarp) robacarp - creator, maintainer\n'