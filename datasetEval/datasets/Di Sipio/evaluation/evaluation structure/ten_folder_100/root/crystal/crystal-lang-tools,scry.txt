b"# Scry\n\n[![Join the chat at https://gitter.im/crystal-scry/Lobby](https://badges.gitter.im/crystal-scry/Lobby.svg)](https://gitter.im/crystal-scry/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![Build Status](https://travis-ci.org/crystal-lang-tools/scry.svg?branch=master)](https://travis-ci.org/crystal-lang-tools/scry)\n\n![Scry logo](https://i.imgur.com/ticTfT8.png)\n\nScry is a code analysis server for [Crystal](http://crystal-lang.org).\nIt is an implementation of a [common language protocol](https://code.visualstudio.com/blogs/2016/06/27/common-language-protocol).\nIt is being built as a server for VSCode, but is compatible with any\nclient that implements this [protocol](https://microsoft.github.io/language-server-protocol).\n\nThe server is implemented in Crystal.\n\n## Installation\n\nTo install Scry download it from the [releases page](https://github.com/crystal-lang-tools/scry/releases) or compile the latest version using:\n\n> **Note:** Crystal is required in order to compile Scry.\n\n```bash\ngit clone https://github.com/crystal-lang-tools/scry.git\ncd scry\nshards build -v\n```\n\nThen setup `scry` binary path on your LSP client.\n\n## Known issues\n\n- Completion feature is still experimental.\n- Unexpected diagnostics can appear on files using implicit `require`, try using explicit `require` at top of your files.\n- Go to definition only works for some methods and variables. Go to classes or macros definition is not supported yet.\n- Symbol listing works per file, searching for workspace symbols is not supported yet.\n\n## Roadmap\n\nOngoing, in [our](https://github.com/kofno/scry#contributors) free time.\n\nThe goal is to implement all of the currently supported Language Server features.\n\n- [Completion](https://microsoft.github.io/language-server-protocol/specification#textDocument_completion) **(WIP)**: compute completion items at a given cursor position.\n- [Diagnostics](https://microsoft.github.io/language-server-protocol/specification#textDocument_publishDiagnostics) **(WIP)**: provides problem detection for text document.\n- [Document Formatting](https://microsoft.github.io/language-server-protocol/specification#textDocument_formatting) **(WIP)**: this includes formatting of whole documents, document ranges and formatting on type.\n- [Goto Definition](https://microsoft.github.io/language-server-protocol/specification#textDocument_definition): **(WIP)** provides go to definition support for a symbol selected in a text document.\n- [Document Highlights](https://microsoft.github.io/language-server-protocol/specification#textDocument_documentHighlight): highlights all 'equal' symbols in a text document.\n- [Hover](https://microsoft.github.io/language-server-protocol/specification#textDocument_hover): provides hover information for a symbol selected in a text document.\n- [Signature Help](https://microsoft.github.io/language-server-protocol/specification#textDocument_signatureHelp): provides signature help for a symbol selected in a text document.\n- [Find References](https://microsoft.github.io/language-server-protocol/specification#textDocument_references): finds all project-wide references for a symbol selected in a text document.\n- [List Document Symbols](https://microsoft.github.io/language-server-protocol/specification#textDocument_documentSymbol): **(WIP)** lists all symbols defined in a text document.\n- [List Workspace Symbols](https://microsoft.github.io/language-server-protocol/specification#workspace_symbol): **(WIP)** lists all project-wide symbols.\n- [Code Actions:](https://microsoft.github.io/language-server-protocol/specification#textDocument_codeAction) compute commands for a given text document and range.\n- [CodeLens](https://microsoft.github.io/language-server-protocol/specification#textDocument_codeLens): compute CodeLens statistics for a given text document. (OK, maybe not this one)\n- [rename](https://microsoft.github.io/language-server-protocol/specification#textDocument_rename): project-wide rename of a symbol.\n\n## Contributing\n\n1. Fork it <https://github.com/crystal-lang-tools/scry/fork>\n2. Create your feature branch `git checkout -b my-new-feature`\n3. Commit your changes `git commit -am 'Add some feature'`\n4. Push to the branch `git push origin my-new-feature`\n5. Create a new Pull Request\n\n## Contributors\n\n- [@kofno](https://github.com/kofno) Ryan L. Bell - creator, maintainer\n- [@keplersj](https://github.com/keplersj) Kepler Sticka-Jones - contributor\n- [@faustinoaq](https://github.com/faustinoaq) Faustino Aguilar - contributor\n- [@laginha87](https://github.com/laginha87) Filipe Correia - contributor\n- [@bmulvihill](https://github.com/bmulvihill) Bryan Mulvihill - contributor\n\n[See all of Scry's contributors](https://github.com/crystal-lang-tools/scry/graphs/contributors)\n"