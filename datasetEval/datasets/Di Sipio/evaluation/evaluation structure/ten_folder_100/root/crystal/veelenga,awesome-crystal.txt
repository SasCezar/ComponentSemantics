b'<p align="center"><img src="logo/logotype_horizontal.png" alt="awesome-crystal"></p>\n\n# Awesome Crystal\n[![Awesome](https://awesome.re/badge.svg)](https://awesome.re)\n[![Build Status](https://api.travis-ci.org/veelenga/awesome-crystal.svg)](https://travis-ci.org/veelenga/awesome-crystal)\n\nA curated list of awesome Crystal code and resources. Inspired by [awesome](https://github.com/sindresorhus/awesome) and [awesome-awesomeness](https://github.com/bayandin/awesome-awesomeness).\nThe goal is to have projects mostly stable and useful for the community.\n\nSearch [Crystal Shards](https://crystalshards.xyz) or follow announcements [Crystal [ANN]](https://crystal-ann.com) for more.\n\nContributions are welcome. Please take a quick look at the [contribution guidelines](https://github.com/veelenga/awesome-crystal/blob/master/.github/CONTRIBUTING.md) first.\n\n* [Awesome Crystal](#awesome-crystal)\n  * [Algorithms and Data structures](#algorithms-and-data-structures)\n  * [Api Builders](#api-builders)\n  * [Blockchain](#blockchain)\n  * [C Bindings](#c-bindings)\n  * [Caching](#caching)\n  * [CLI Builders](#cli-builders)\n  * [CLI Utils](#cli-utils)\n  * [Code Analysis and Metrics](#code-analysis-and-metrics)\n  * [Compression](#compression)\n  * [Configuration](#configuration)\n  * [Converters](#converters)\n  * [Cryptography](#cryptography)\n  * [Data Formats](#data-formats)\n  * [Data Generators](#data-generators)\n  * [Database Drivers/Clients](#database-driversclients)\n  * [Database Tools](#database-tools)\n  * [Debugging](#debugging)\n  * [Dependency Injection](#dependency-injection)\n  * [Development Tools](#development-tools)\n  * [Email](#email)\n  * [Environment Management](#environment-management)\n  * [Examples and funny stuff](#examples-and-funny-stuff)\n  * [Feature Flipping](#feature-flipping)\n  * [Framework Components](#framework-components)\n  * [Game Development](#game-development)\n  * [GUI library](#gui-library)\n  * [HTML Builders](#html-builders)\n  * [HTML/XML parsing](#htmlxml-parsing)\n  * [HTTP](#http)\n  * [Image Processing](#image-processing)\n  * [Implementations/Compilers](#implementationscompilers)\n  * [Logging and monitoring](#logging-and-monitoring)\n  * [Machine Learning](#machine-learning)\n  * [Markdown/Text Processors](#markdowntext-processors)\n  * [Misc](#misc)\n  * [Network Protocols](#network-protocols)\n  * [Networking](#networking)\n  * [ORM/ODM Extensions](#ormodm-extensions)\n  * [Package Management](#package-management)\n  * [Processes and Threads](#processes-and-threads)\n  * [Project Generators](#project-generators)\n  * [Queues and Messaging](#queues-and-messaging)\n  * [Routing](#routing)\n  * [Scheduling](#scheduling)\n  * [Science and Data analysis](#science-and-data-analysis)\n  * [Search](#search)\n  * [Serverless Computing](#serverless-computing)\n  * [System](#system)\n  * [Task management](#task-management)\n  * [Template Engine](#template-engine)\n  * [Testing](#testing)\n  * [Third-party APIs](#third-party-apis)\n  * [Validation](#validation)\n  * [Web Frameworks](#web-frameworks)\n  * [Web Servers](#web-servers)\n* [Community](#community)\n  * [Unofficial](#unofficial)\n* [Resources](#resources)\n  * [Official Documentation Translations](#official-documentation-translations)\n* [Services and Apps](#services-and-apps)\n* [Tools](#tools)\n  * [DevOps](#devops)\n  * [Editor Plugins](#editor-plugins)\n  * [Shell Plugins](#shell-plugins)\n\n## Algorithms and Data structures\n * [bisect](https://github.com/spider-gazelle/bisect) - Inserting values into a sorted array\n * [bitfields](https://github.com/elorest/bitfields) - Pure Crystal implementation of BitFields. Handles encoding/decoding of bytes.\n * [crie](https://github.com/c910335/crie) - Compile-time Trie\n * [CrOTP](https://github.com/philnash/crotp) - HOTP and TOTP implementation for two factor authentication\n * [crystal-diff](https://github.com/MakeNowJust/crystal-diff) - A Crystal sequence differencing implementation\n * [crystal-linked-list](https://github.com/abvdasker/crystal-linked-list) - Implementation of Linked List\n * [crystaledge](https://github.com/unn4m3d/crystaledge) - A pure Vector Math library\n * [crystalg](https://github.com/TobiasGSmollett/crystalg) - A Generic Algorithm Library\n * [crystalline](https://github.com/jtomschroeder/crystalline) - A collection of containers and algorithms\n * [delimiter_tree](https://github.com/drujensen/delimiter_tree) - A tree structure that is built using a delimiter\n * [edits.cr](https://github.com/tcrouch/edits.cr) - Collection of edit distance algorithms\n * [graphlb](https://github.com/mettuaditya/graphlb) - Collection of graph datastructure and algorithms\n * [hash_ring](https://github.com/TobiasGSmollett/hash_ring) - An Implementation of Consistent Hash Ring\n * [haversine](https://github.com/mamantoha/haversine) - An Implementation of the Haversine formula\n * [kd_tree](https://github.com/mamantoha/kd_tree) - An implementation of "K-Dimensional Tree" and "N-Nearest Neighbors"\n * [ksuid.cr](https://github.com/Sija/ksuid.cr) - K-Sortable Globally Unique IDs\n * [markov](https://github.com/mccallofthewild/markov) - Build Markov Chains and run Markov Processes\n * [multiset.cr](https://github.com/tcrouch/multiset.cr) - Implementation of a multiset\n * [murmur3](https://github.com/kuende/murmur3) - Implementation of Murmur3 hash algorithm used by Cassandra\n * [oak](https://github.com/obsidian/oak) - A flexible Radix Tree implementation\n * [radix](https://github.com/luislavena/radix) - Radix Tree implementation\n * [ternary_search_tree](https://github.com/johnjansen/ternary_search_tree) - Ternary Search Tree\n\n## Api Builders\n * [kemal-rest-api](https://github.com/blocknotes/kemal-rest-api) - A library to create RESTful API with Kemal\n\n## Blockchain\n * [SushiChain](https://github.com/SushiChain/SushiChain) - A custom blockchain platform\n\n## C bindings\n * [asound-cr](https://github.com/TamasSzekeres/asound-cr) - Bindings for ALSA/libasound\n * [cairo-cr](https://github.com/TamasSzekeres/cairo-cr) - Bindings for [Cairo](https://cairographics.org/) graphics library\n * [clang.cr](https://github.com/crystal-lang/clang.cr) - Libclang bindings\n * [crass](https://github.com/vonKingsley/crass) - Bindings for libsass\n * [crt.cr](https://github.com/maiha/crt.cr) - Bindings for libncursesw and crt\n * [crystal-gsl](https://github.com/ruivieira/crystal-gsl) - GNU Scientific Library bindings\n * [crystal-hunspell](https://github.com/mamantoha/crystal-hunspell) - Bindings for [Hunspell](https://hunspell.github.io/)\n * [curl-crystal](https://github.com/blocknotes/curl-crystal) - Bindings for [libcurl](https://curl.haxx.se/libcurl/)\n * [duktape.cr](https://github.com/jessedoyle/duktape.cr) - Bindings for the [Duktape](https://github.com/svaarala/duktape) javascript engine\n * [gphoto2.cr](https://github.com/Sija/gphoto2.cr) - Bindings for the [libgphoto2](http://www.gphoto.org/) library\n * [icu.cr](https://github.com/olbat/icu.cr) - Bindings for the [ICU](http://site.icu-project.org/) library\n * [libnotify.cr](https://github.com/splattael/libnotify.cr) - Bindings for Libnotify\n * [pcap.cr](https://github.com/maiha/pcap.cr) - Bindings for libpcap\n * [pledge.cr](https://github.com/chris-huxtable/pledge.cr) - Bindings for OpenBSD\'s `pledge(2)`\n * [posix](https://github.com/ysbaddaden/posix) - POSIX/C bindings\n * [soundfile](https://github.com/mjago/soundfile) - Bindings for [libsndfile](http://www.mega-nerd.com/libsndfile/) library\n * [ssh2.cr](https://github.com/spider-gazelle/ssh2.cr) - Bindings for libssh2 library\n * [syslog.cr](https://github.com/chris-huxtable/syslog.cr) - Bindings for `syslog`\n * [termbox-crystal](https://github.com/andrewsuzuki/termbox-crystal) - Bindings and extension library for [termbox](https://github.com/nsf/termbox) (terminal UI library)\n * [x11-cr](https://github.com/TamasSzekeres/x11-cr) - X11 bindings\n * [x_do.cr](https://github.com/woodruffw/x_do.cr) - Bindings for libxdo ([`xdotool`](https://github.com/jordansissel/xdotool))\n\n## Caching\n * [bloom_filter](https://github.com/crystal-community/bloom_filter) - Implementation of Bloom filter\n * [bojack](https://github.com/marceloboeira/bojack) - A non-reliable in-memory key-value store\n * [cache-hash](https://github.com/samueleaton/cache-hash) - A key/value store where entries expire after a specified interval\n * [crystal-memcached](https://github.com/comandeo/crystal-memcached) - Implementation of a memcached client\n * [Nuummite](https://github.com/CodeSteak/Nuummite) - A tiny persistent embedded key-value store\n\n## CLI Builders\n * [admiral](https://github.com/jwaldrip/admiral.cr) - A robust DSL for writing command line interfaces\n * [cli](https://github.com/mosop/cli) - Library for building command-line interface applications\n * [clicr](https://github.com/j8r/clicr) -  A simple declarative command line interface builder\n * [clim](https://github.com/at-grandpa/clim) - Slim command line interface builder\n * [commander](https://github.com/mrrooijen/commander) - Command-line interface builder\n * [completion](https://github.com/f/completion) - Easy command line completion engine\n * [optarg](https://github.com/mosop/optarg) - Yet another library for parsing command-line options and arguments\n * [OptionParser](https://crystal-lang.org/api/OptionParser.html) - command-line options processing (Crystal stdlib)\n * [Phreak](https://github.com/shinzlet/phreak) - A highly flexible Crystal CLI builder in the style of OptionParser\n\n## CLI Utils\n * [cride](https://github.com/j8r/cride) - A light CLI text editor/IDE\n * [oq](https://github.com/Blacksmoke16/oq) - A performant, and portable jq wrapper to facilitate the consumption and output of formats other than JSON; using [jq](https://github.com/stedolan/jq) filters to transform the data.\n * [progress_bar.cr](https://github.com/TPei/progress_bar.cr) - A simple and customizable progress bar\n * [tablo](https://github.com/hutou/tablo) - A flexible terminal table generator\n * [tallboy](https://github.com/epoch/tallboy) - Generate ASCII character tables with support for spanning cells over multiple columns\n * [terminal_table.cr](https://github.com/benoist/terminal_table.cr) - Simple ASCII table generator\n * [terminimal](https://github.com/aca-labs/terminimal) - A tiny CLI toolkit for building terminal apps for humans\n * [todo](https://git.sceptique.eu/Sceptique/todo) - Todo list working in command line\n\n## Code Analysis and Metrics\n * [ameba](https://github.com/crystal-ameba/ameba) - A static code analysis tool\n\n## Compression\n * [brotli.cr](https://github.com/naqvis/brotli.cr) - Bindings to the Google brotli compression library\n * [Crystar](https://github.com/naqvis/crystar) - Readers and writers of Tar archive format\n * [Gzip](https://crystal-lang.org/api/Gzip.html) - readers and writers of gzip format (Crystal stdlib)\n * [snappy](https://github.com/naqvis/snappy) -  Snappy compression format reader/writer for Crystal\n * [xz](https://github.com/naqvis/xz.cr) - Bindings to the xz (lzma) compression library\n * [Zip](https://crystal-lang.org/api/Zip.html) - readers and writers of zip format (Crystal stdlib)\n * [Zlib](https://crystal-lang.org/api/Zlib.html) - readers and writers of zlib format (Crystal stdlib)\n * [zstd.cr](https://github.com/didactic-drunk/zstd.cr) - Bindings for [Zstandard](https://github.com/facebook/zstd) compression library\n\n## Configuration\n * [cr-dotenv](https://github.com/gdotdesign/cr-dotenv) - Loads .env file\n * [envyable](https://github.com/philnash/envyable.cr) -  A simple YAML to ENV config loader\n * [habitat](https://github.com/luckyframework/habitat) - Type safe configuration for your classes and modules\n * [totem](https://github.com/icyleaf/totem) - Load and parse a configuration in JSON, YAML, dotenv formats\n\n## Converters\n * [base62.cr](https://github.com/Sija/base62.cr) - Base62 encoder/decoder, well suited for url-shortening\n * [money](https://github.com/crystal-money/money) - Handling money and currency conversion with ease (almost complete port of [RubyMoney](https://github.com/RubyMoney/money))\n * [ms](https://github.com/SuperPaintman/ms) - Library to easily convert various time formats to milliseconds and milliseconds to human readable format\n * [sass.cr](https://github.com/straight-shoota/sass.cr) - Compile SASS/SCSS to CSS ([libsass](https://github.com/sass/libsass/) binding)\n * [time_format.cr](https://github.com/vladfaust/time_format.cr) - Convert time in human readable format with ease\n * [turkish-number](https://github.com/izniburak/turkish-number) - Turn integers into the Turkish words\n * [wkhtmltopdf-crystal](https://github.com/blocknotes/wkhtmltopdf-crystal) - Bindings / wrapper for libwkhtmltox (HTML to PDF / image converter)\n\n## Cryptography\n * [openssl.cr](https://github.com/z64/openssl.cr) - This library provides binding for OpenSSL library\n * [sodium.cr](https://github.com/didactic-drunk/sodium.cr) - Crystal wrapper for the libsodium crypto API\n\n## Data Formats\n * [BinData](https://github.com/spider-gazelle/bindata) - Binary data parser helper with an [ASN.1](https://en.wikipedia.org/wiki/Abstract_Syntax_Notation_One) parser\n * [config.cr](https://github.com/chris-huxtable/config.cr) - Easy to use configuration format parser\n * [crinder](https://github.com/c910335/crinder) - Class based json renderer\n * [CSV](https://crystal-lang.org/api/CSV.html) - parsing and generating for comma-separated values (Crystal stdlib)\n * [front_matter.cr](https://github.com/chris-huxtable/front_matter.cr) - Separates a files front matter from its content\n * [geoip2.cr](https://github.com/delef/geoip2.cr) - GeoIP2 reader\n * [INI](https://crystal-lang.org/api/INI.html) - INI file parser (Crystal stdlib)\n * [JSON](https://crystal-lang.org/api/JSON.html) - parsing and generating JSON documents (Crystal stdlib)\n * [JSON tools](https://github.com/impatienttraveller/json-tools) - An implementation of JSON Patch and Pointer RFC\'s\n * [maxminddb.cr](https://github.com/delef/maxminddb.cr) - MaxMindDB reader\n * [toml.cr](https://github.com/crystal-community/toml.cr) - TOML parser\n * [XML](https://crystal-lang.org/api/XML.html) - parsing and generating XML documents (Crystal stdlib)\n * [YAML](https://crystal-lang.org/api/YAML.html) - parsing and generating YAML documents (Crystal stdlib)\n * [zq](https://github.com/colstrom/zq) - Command-line ZPL processor\n\n## Data Generators\n * [faker](https://github.com/askn/faker) - A library for generating fake data\n * [hashids.cr](https://github.com/splattael/hashids.cr) - A library to generate YouTube-like ids from one or many numbers\n\n## Database Drivers/Clients\n * [couchdb.cr](https://github.com/TechMagister/couchdb.cr) - CouchDB client\n * [crystal-db](https://github.com/crystal-lang/crystal-db) - Common db api\n * [crystal-monetdb-libmapi](https://github.com/puppetpies/crystal-monetdb-libmapi) - Bindings for MonetDB\n * [crystal-mysql](https://github.com/crystal-lang/crystal-mysql) - MySQL connector for Crystal\n * [crystal-pg](https://github.com/will/crystal-pg) - A Postgres driver\n * [crystal-redis](https://github.com/stefanwille/crystal-redis) - Full featured Redis client\n * [crystal-rethinkdb](https://github.com/kingsleyh/crystal-rethinkdb) - Driver for RethinkDB / RebirthDB\n * [crystal-sqlite3](https://github.com/crystal-lang/crystal-sqlite3) - SQLite3 bindings\n * [eventql-crystal](https://github.com/measurechina/eventql-crystal) - EventQL driver\n * [leveldb](https://github.com/crystal-community/leveldb) - Crystal bindings for LevelDB\n * [mongo.cr](https://github.com/ambercommunity/mongo.cr) - Binding for MongoDB C driver\n * [rocksdb.cr](https://github.com/maiha/rocksdb.cr) - RocksDB client\n\n## Database Tools\n * [migrate](https://github.com/vladfaust/migrate.cr) - A simpler database migration tool with transactions\n * [migro](https://github.com/aisrael/migro) - A database migration tool that allows migrations to be specified in either YAML or raw SQL\n\n## Debugging\n * [debug.cr](https://github.com/Sija/debug.cr) - `debug!(\xe2\x80\xa6)` macro for `pp`-style debugging\n\n## Dependency Injection\n * [Crystal-DI](https://github.com/funk-yourself/crystal-di) - Lightweight DI Container\n * [syringe](https://github.com/Bonemind/syringe) - A simple and basic dependency injection shard for crystal\n\n## Development Tools\n * [guardian](https://github.com/f/guardian) - File change watcher for Crystal and Non-Crystal libs\n * [kemal-watcher](https://github.com/faustinoaq/kemal-watcher) - Kemal plugin to watch files and live-reload the browser\n * [sentry](https://github.com/samueleaton/sentry) - Watches src files, rebuilds/reruns application on file changes\n * [sentry-run](https://github.com/faustinoaq/sentry-run) - Reload code changes using Sentry.run\n * [Warden](https://github.com/diggersheep/warden) - Watches files, run command and a git command if succeed on file changes\n * [watcher](https://github.com/faustinoaq/watcher) - Watch file changes using File.stat\n\n## Email\n * [carbon](https://github.com/luckyframework/carbon) - Fun, testable, and adapter-based email library\n * [crystal-email](https://github.com/arcage/crystal-email) - Simple e-mail sending library\n * [CrystalEmail](https://git.sceptique.eu/Sceptique/CrystalEmail) - A RFC compliant Email validator\n * [sendgrid.cr](https://github.com/dlanileonardo/sendgrid.cr) - Simple Sendgrid Client\n\n## Environment Management\n * [asdf-crystal](https://github.com/marciogm/asdf-crystal) - Plugin for asdf version manager\n * [crenv](https://github.com/pine/crenv) - Crystal version manager\n * [rcm.cr](https://github.com/maiha/rcm.cr) - Redis Cluster Manager\n\n## Examples and funny stuff\n * [blackjack-cr](https://github.com/gdonald/blackjack-cr) - Console Blackjack\n * [chuck-norris-holy-quotes](https://github.com/codenoid/chuck-norris-holy-quotes) - Chuck Norris holy quotes\n * [clamp](https://github.com/johnjansen/clamp) - Clamp any Comparable\n * [crsfml-examples](https://github.com/oprypin/crsfml-examples) - Simple games made with CrSFML\n * [crystal-benchmarks-game](https://github.com/kostya/crystal-benchmarks-game) - The Computer Language Benchmarks Game\n * [crystal-by-example](https://github.com/askn/crystal-by-example) - Crystal By Example\n * [crystal-mysql-crud-example](https://github.com/codenoid/crystal-mysql-crud-example) - Crystal MySQL CRUD example\n * [crystal-patterns](https://github.com/crystal-community/crystal-patterns) - Examples of GOF patters\n * [crystalized_ruby](https://github.com/phoffer/crystalized_ruby) - Native Ruby extensions written in Crystal\n * [crystalworld](https://github.com/vladfaust/crystalworld) - [realworld.io](https://realworld.io) back-end API implementation\n * [exercism-crystal](https://github.com/exercism/crystal) - Exercism exercises\n * [jihantoro-cr-mysql](https://github.com/codenoid/jihantoro-cr-mysql) - Crystal MySQL from scratch sample app\n * [jihantoro.sd](https://github.com/codenoid/jihantoro.sd) - Crystal & Kemal version of Serdar Dogruyol blog\n * [kemal-chat](https://github.com/sdogruyol/kemal-chat) - Build realtime applications with Kemal and WebSocket\n * [kemal-heroku-example](https://github.com/cagataycali/kemal-heroku-example) - This repository shows, how you can publish your open source apps which powered kemal framework publish as heroku app in seconds\n * [kemal-mysql-blog](https://github.com/codenoid/kemal-mysql-blog) - Blog written with Crystal, Kemal and MySQL\n * [kemal-react-chat](https://github.com/f/kemal-react-chat) - Build Realtime Web applications with Kemal and React\n * [kemal-vue-chat](https://github.com/ChangJoo-Park/kemal-vue-chat) - Build Realtime Web applications with Kemal and Vue.js\n * [lattice-core-card-game](https://github.com/jasonl99/card_game) - A demo web app for (WebSocket-based) lattice-core\n * [realtime-todo-app](https://github.com/Angarsk8/realtime-todo-app) - Realtime Todo application developed with Kemal, Websockets, React, ES2015 and PostgreSQL\n * [try.cr](https://github.com/maiha/try.cr) - Try monad\n\n## Feature Flipping\n * [can_use](https://github.com/rodrigopinto/can_use) - It is a minimalist feature toggle/flag for crystal based on yaml\n * [flipper](https://github.com/metaware/flipper) - Feature flipping/flags/rollouts. Supports multiple backends\n\n## Framework Components\n * [cr-melon](https://github.com/gdotdesign/cr-melon) - Class based Http APIs\n * [crystal-mime](https://github.com/spalger/crystal-mime) - Mimetypes for Crystal\n * [device_detector](https://github.com/creadone/device_detector) - Shard for detect device by user agent string\n * [Exception Page](https://github.com/crystal-loot/exception_page) - An exceptional exception page for Crystal web libraries and frameworks\n * [graphql-crystal](https://github.com/ziprandom/graphql-crystal) - [Graphql](http://graphql.org) implementation\n * [kave](https://github.com/jwoertink/kave) - Kemal API Version Extension\n * [kemal-auth-token](https://github.com/akwiatkowski/kemal-auth-token) - Kemal middleware to authentication via HTTP header token using JWT\n * [kemal-monetdb](https://github.com/puppetpies/kemal-monetdb) - MonetDB Data connection for Kemal\n * [kemal-session](https://github.com/kemalcr/kemal-session) - Session handler for Kemal\n * [multi-auth](https://github.com/msa7/multi_auth) - Standardized multi-provider OAuth2 authentication (inspired by omniauth)\n * [praetorian](https://github.com/ilanusse/praetorian) - Minimalist authorization library inspired by Pundit\n * [request_id](https://github.com/SuperPaintman/request-id) - Middleware for generates / pick up a unique request ID for Crystal servers\n * [response_time](https://github.com/SuperPaintman/response-time) - Response time for Crystal servers (pure http server, kemal, etc.)\n * [spec-kemal](https://github.com/kemalcr/spec-kemal) - Easy testing for Kemal\n * [tourmaline](https://github.com/watzon/tourmaline) - Telegram bot framework with an API loosely based on [telegraf.js](https://telegraf.js.org/)\n\n## Game Development\n * [cray](https://gitlab.com/Zatherz/cray) - Bindings for [raylib](http://www.raylib.com/), an easy-to-use game development library\n * [CrSFML](https://github.com/oprypin/crsfml) - Bindings to [SFML](https://www.sfml-dev.org/) multimedia/game library\n * [crystal-chipmunk](https://github.com/oprypin/crystal-chipmunk) - Bindings for [Chipmunk](http://chipmunk-physics.net/), a fast and lightweight 2D game physics library\n * [glove](https://github.com/ddfreyne/glove) - A library for gaming development\n * [mos_game](https://github.com/bararchy/mos_game) - Mini Offline Singleplayer game\n\n## GUI library\n * [hedron](https://github.com/Qwerp-Derp/hedron) - An extendable GUI library, with markup language capabilities\n * [libui.cr](https://github.com/Fusion/libui.cr) - Bindings for [libui](https://github.com/andlabs/libui)\n * [qt5.cr](https://github.com/Papierkorb/qt5.cr) - Qt5 bindings for Crystal, based on Bindgen\n\n## HTML Builders\n * [form_builder.cr](https://github.com/westonganger/form_builder.cr) - Dead simple HTML form builder for Crystal with built-in support for many popular UI libraries such as Bootstrap\n * [html_builder](https://github.com/crystal-lang/html_builder) - DSL for creating HTML\n\n## HTML/XML Parsing\n * [gumbo-crystal](https://github.com/blocknotes/gumbo-crystal) - Bindings for [Gumbo](https://github.com/google/gumbo-parser), an HTML5 parsing library made by Google\n * [hq.cr](https://github.com/maiha/hq.cr) - Simple wrapper for crystal-xml\n * [myhtml](https://github.com/kostya/myhtml) - Fast HTML5 Parser that includes CSS selectors\n\n## HTTP\n * [Cable](https://github.com/cable-cr/cable) - An ActionCable "port" to Crystal, framework agnostic, 100% compatible with the ActionCable JS Client\n * [cossack](https://github.com/crystal-community/cossack) - Simple flexible HTTP client\n * [crest](https://github.com/mamantoha/crest) - Simple HTTP and REST client, inspired by the Ruby\'s RestClient gem\n * [crul](https://github.com/porras/crul) - Command line HTTP client\n * [cryload](https://github.com/sdogruyol/cryload) - HTTP benchmarking tool\n * [halite](https://github.com/icyleaf/halite) - Crystal HTTP Requests with a chainable REST API, built-in sessions and loggers\n * [helmet](https://github.com/EvanHahn/crystal-helmet) - Set security-related HTTP headers\n * [http-multiserver.cr](https://github.com/vladfaust/http-multiserver.cr) - Mounting multiple servers via routes (a.k.a. URL mapping)\n * [http-params-serializable](https://github.com/vladfaust/http-params-serializable) - HTTP params (de)serialization, applicable to URL queries and URL-encoded forms\n * [http-protection](https://github.com/rogeriozambon/http-protection) - Protection against typical web attacks\n * [http2](https://github.com/ysbaddaden/http2) - HTTP/2 Protocol Implementation\n * [HTTP::Client](https://crystal-lang.org/api/HTTP/Client.html) - HTTP client (Crystal stdlib)\n * [HTTP::Server](https://crystal-lang.org/api/HTTP/Server.html) - HTTP server (Crystal stdlib)\n * [HTTP::WebSocket](https://crystal-lang.org/api/HTTP/WebSocket.html) - HTTP WebSocket client (Crystal stdlib)\n * [keyer_cr](https://github.com/danielpclark/keyer_cr) - Adds HTTP GET/POST parameter parsing as a Hash-like object\n * [proxy-fetcher.cr](https://github.com/nbulaj/proxy-fetcher.cr) - Proxy lists fetching & validating library\n * [resp-crystal](https://github.com/soveran/resp-crystal) - Lightweight RESP client\n * [sse.cr](https://github.com/y2k2mt/sse.cr) - [Server-Sent Events](https://www.w3.org/TR/2009/WD-eventsource-20090421) client\n\n## Image processing\n * [libpixel.cr](https://github.com/libpixel/libpixel.cr)\n * [magickwand-crystal](https://github.com/blocknotes/magickwand-crystal) - Bindings for [MagickWand](https://www.imagemagick.org/script/magick-wand.php), the C interface for ImageMagick processing libraries\n * [stumpy_gif](https://github.com/stumpycr/stumpy_gif) - Write (animated) GIF images\n * [stumpy_png](https://github.com/stumpycr/stumpy_png) - Read and write PNG images\n\n## Implementations/Compilers\n * [charly](https://github.com/charly-lang) - Charly Programming Language\n * [cltk](https://github.com/ziprandom/cltk) - A crystal port of the Ruby Language Toolkit\n * [cppize](https://github.com/unn4m3d/cppize) - Crystal-to-C++ transpiler\n * [crisp](https://github.com/rhysd/Crisp) - Lisp dialect implemented with Crystal\n * [crow](https://github.com/geppetto-apps/crow) - Transpile/compile Crystal to [Flow](https://flow.org/)\n * [LinCAS-lang](https://github.com/LinCAS-lang) - A programming language for scientific computation\n * [mint-lang](https://github.com/mint-lang/mint) - A refreshing programming language for the front-end web\n * [myst-lang](https://github.com/myst-lang/) - A practical, dynamic language designed to be written and understood as easily and efficiently as possible\n * [runic-lang](https://github.com/runic-lang) - In-design toy language\n\n## Logging and monitoring\n * [crafana](https://github.com/spoved/crafana.cr) - A [Grafana](https://grafana.com/) library to help autogenerate dashboards\n * [crometheus](https://gitlab.com/ezrast/crometheus) - A [Prometheus](https://prometheus.io/) client library\n * [crylog](https://github.com/blacksmoke16/crylog) - Flexible logging framework based on Monolog\n * [crystal-logreader](https://github.com/arcage/crystal-logreader) - Tailing log file\n * [fluent-logger-crystal](https://github.com/TobiasGSmollett/fluent-logger-crystal) - A structured logger for [Fluentd](https://www.fluentd.org/)\n * [instana](https://github.com/instana/crystal-sensor) - A metrics and distributed trace collector for [Instana](https://www.instana.com/)\n * [Logger](https://crystal-lang.org/api/Logger.html) - logging utility (Crystal stdlib)\n * [statsd.cr](https://github.com/miketheman/statsd.cr) - [Statsd](https://github.com/etsy/statsd) client library\n * [syslog.cr](https://github.com/comandeo/syslog.cr) - Implementation of Syslog client\n\n## Machine Learning\n * [ai4cr](https://github.com/drhuffman12/ai4cr) - Artificial Intelligence (based on https://github.com/SergioFierens/ai4r)\n * [Cadmium](https://github.com/watzon/cadmium) - NLP library based heavily on [natural](https://github.com/NaturalNode/natural)\n * [crystal-fann](https://github.com/NeuraLegion/crystal-fann) - FANN (Fast Artifical Neural Network) binding\n * [shainet](https://github.com/NeuraLegion/shainet) - SHAInet (Neural Network in pure crystal)\n * [tensorflow.cr](https://github.com/fazibear/tensorflow.cr) - Bindings for [TensorFlow](https://github.com/tensorflow/tensorflow)\n\n## Markdown/Text Processors\n * [html-pipeline](https://github.com/huacnlee/html-pipeline) - HTML processing filters and utilities\n * [markd](https://github.com/icyleaf/markd) - Yet another markdown parser built for speed, Compliant to CommonMark specification\n\n## Misc\n * [aasm.cr](https://github.com/veelenga/aasm.cr) - Easy to use finite state machine for Crystal classes\n * [any_hash.cr](https://github.com/Sija/any_hash.cr) - Recursive Hash with better JSON::Any included\n * [atomic_write.cr](https://github.com/chris-huxtable/atomic_write.cr) - Library for writing or apppending files atomically\n * [burocracia.cr](https://github.com/vnbrs/burocracia.cr) - burocracia.cr the dependecyless shard to validate, generate and format Brazilian burocracias such as CPF, CNPJ and CEP\n * [callbacks](https://github.com/vladfaust/callbacks.cr) - Expressive callbacks module\n * [circuit_breaker](https://github.com/TPei/circuit_breaker) - Implementation of the circuit breaker pattern\n * [compiled_license](https://github.com/elorest/compiled_license) - Compiles licenses into binary for complience with MIT when copying binary to system or container without the code\n * [containerregistry.cr](https://github.com/naqvis/containerregistry.cr) - Library for working with container registries\n * [CrSerializer](https://github.com/blacksmoke16/CrSerializer) - Extensible annotation based serialization/deserialization library\n * [crystal-binary_parser](https://github.com/DanSnow/crystal-binary_parser) - Binary parser\n * [crystal-web-framework-stars](https://github.com/isaced/crystal-web-framework-stars) - Web frameworks for Crystal, most starred on Github\n * [crz](https://github.com/dhruvrajvanshi/crz) - Functional programming library\n * [emoji.cr](https://github.com/veelenga/emoji.cr) - Emoji library\n * [hoop](https://github.com/0x73/hoop) - Building native OSX apps\n * [i18n.cr](https://github.com/vladfaust/i18n.cr) - Internationalization shard\n * [immutable](https://github.com/lucaong/immutable) - Implementation of thread-safe, persistent, immutable collections\n * [inflector.cr](https://github.com/phoffer/inflector.cr) - Singularize, pluralize, camelize, etc (port from ActiveSupport)\n * [lirith](https://github.com/lirith-engine/lirith) - Graphics engine\n * [m3u8](https://github.com/akiicat/m3u8) - Generate and parse m3u8 playlists for HTTP Live Streaming\n * [manual-generator](https://github.com/blocknotes/manual-generator) - Tool to generate PDF manuals from documentation sites\n * [message_verifier.cr](https://github.com/danielwestendorf/message_verifier.cr) - Verify and generate Rails `ActiveSupport::MessageVerifier` signed tokens\n * [monads](https://github.com/alex-lairan/monads) - Monad implementation\n * [pangu.cr](https://github.com/isaced/pangu.cr) - Paranoid text spacing in Crystal\n * [pinger](https://github.com/spider-gazelle/pinger) - Ping IP addresses and DNS entries without requiring sudo\n * [port_midi](https://github.com/jimm/crystal_port_midi) - Crystal C bindings for the PortMIDI cross-platform MIDI I/O library\n * [raytracer](https://github.com/l3kn/raytracer) - CPU Raytracer with examples\n * [retriable.cr](https://github.com/Sija/retriable.cr) - Simple DSL to retry failed code blocks\n * [tren](https://github.com/sdogruyol/tren) - Give your SQL some love\n * [ulid](https://github.com/SuperPaintman/ulid) - Universally Unique Lexicographically Sortable Identifier (ULID)\n * [zaru_crystal](https://github.com/szTheory/zaru_crystal) - Filename sanitization\n\n## Network Protocols\n * [bson.cr](https://github.com/jeromegn/bson.cr) - Native BSON implementation\n * [connect-proxy](https://github.com/spider-gazelle/connect-proxy) - Connect method style of HTTP tunnelling / HTTP proxy\n * [cr-xmpp](https://github.com/naqvis/cr-xmpp) - XMPP/Jabber Library\n * [Crirc](https://github.com/Meoowww/Crirc) - IRC protocol implementation (Client, Server, Bots)\n * [crystal-json-socket](https://github.com/foi/crystal-json-socket) - JSON-socket client & server implementation. Inspired by and compatible with [node-json-socket](https://github.com/sebastianseilund/node-json-socket/) and [ruby-json-socket](https://github.com/foi/ruby-json-socket)\n * [crystal-snmp](https://github.com/spider-gazelle/crystal-snmp) - An SNMP implementation with version 1, 2c and 3 support\n * [fast_irc.cr](https://github.com/RX14/fast_irc.cr) - Fast IRC parser/generator\n * [gopher.cr](https://github.com/anicholson/gopher.cr) - Gopher server toolkit\n * [jwt](https://github.com/crystal-community/jwt) - Implementation of JWT (JSON Web Token)\n * [msgpack-crystal](https://github.com/crystal-community/msgpack-crystal) - MessagePack library\n * [OAuth](https://crystal-lang.org/api/OAuth.html) - OAuth consumer (Crystal stdlib)\n * [OAuth2](https://crystal-lang.org/api/OAuth2.html) - OAuth2 client (Crystal stdlib)\n * [OpenSSL](https://crystal-lang.org/api/OpenSSL.html) - bindings to libssl (Crystal stdlib)\n * [telnet.cr](https://github.com/spider-gazelle/telnet.cr) - Telnet protocol\n * [transfer_more](https://git.sceptique.eu/Sceptique/transfer_more) - Clone of transfer.sh to uploads files\n\n## Networking\n * [ipaddress.cr](https://github.com/Sija/ipaddress.cr) - Library to handle IPv4 and IPv6 addresses\n\n## ORM/ODM Extensions\n * [avram](https://github.com/luckyframework/avram) - A database wrapper for reading, writing, and migrating Postgres databases.\n * [clear](https://github.com/anykeyh/clear) - ORM specialized to PostgreSQL only but with advanced features\n * [crecto](https://github.com/Crecto/crecto) - Database wrapper, based on Ecto\n * [granite](https://github.com/amberframework/granite) - ORM for Postgres, Mysql, Sqlite\n * [jennifer.cr](https://github.com/imdrasil/jennifer.cr) - Active Record pattern implementation with flexible query chainable builder and migration system\n * [ohm-crystal](https://github.com/soveran/ohm-crystal) - Object-hash mapping library for Redis\n * [onyx-sql](https://github.com/onyxframework/sql) - DB-agnostic SQL ORM with beautiful DSL and type-safe Query builder\n * [redis-tsv.cr](https://github.com/maiha/redis-tsv.cr) - Import and export data from Redis in TSV format\n * [rethinkdb-orm](https://github.com/spider-gazelle/rethinkdb-orm) - ORM for RethinkDB / RebirthDB\n * [stal-crystal](https://github.com/soveran/stal-crystal) - Set algebra solver for Redis\n * [topaz](https://github.com/topaz-crystal/topaz) - A simple and useful db wrapper\n\n## Package Management\n * [CRelease](https://github.com/elorest/crelease) - Version and git tag manager that makes shard releases easy\n * [shards](https://github.com/crystal-lang/shards) - Dependency manager for the Crystal\n\n## Processes and Threads\n * [await_async](https://github.com/anykeyh/await_async) - Add keywords await & async in Crystal Lang\n * [crystal-futures](https://github.com/dhruvrajvanshi/crystal-futures) - Future type implementation\n * [neph](https://github.com/tbrand/neph) - A modern command line job processor that can execute jobs concurrently\n * [promise](https://github.com/spider-gazelle/promise) - A Promise implementation with type inference\n\n## Project Generators\n * [bindgencr](https://github.com/TechMagister/bindgencr) - Generator of bindings based on castxml output\n * [crystal_lib](https://github.com/crystal-lang/crystal_lib) - Automatic binding generator for native libraries\n * [fez](https://github.com/jwoertink/fez) - A Kemal application generator\n * [kgen](https://github.com/kemalyst/kemalyst-generator) - Kemalyst command line tool for console, init, generate (scaffolding), and watch.\n * [libgen](https://github.com/olbat/libgen) - Automatic bindings generator configured using JSON/YAML files\n * [wasp](https://github.com/icyleaf/wasp) - Static Site Generator\n\n## Queues and Messaging\n * [dispatch](https://github.com/bmulvihill/dispatch) - In memory asynchronous job processing\n * [mosquito](https://github.com/robacarp/mosquito/) - Redis backed periodic and ad hoc job processing\n * [NATS.io](https://github.com/nats-io/nats.cr) - NATS client\n * [sidekiq.cr](https://github.com/mperham/sidekiq.cr) - Simple, efficient job processing\n\n## Routing\n * [orion](https://github.com/obsidian/orion) - A minimal, rails-esque routing library\n * [router.cr](https://github.com/tbrand/router.cr) - Minimum but powerful http router for HTTP::Server\n * [toro](https://github.com/soveran/toro) - Tree Oriented Routing\n\n## Scheduling\n * [cron_scheduler](https://github.com/kostya/cron_scheduler) - Job scheduler with crontab patterns\n * [crystime](https://gitlab.com/crystallabs/crystime) - Advanced time, calendar, schedule, and remind library\n * [schedule.cr](https://github.com/hugoabonizio/schedule.cr) - Run periodic tasks\n * [tasker](https://github.com/spider-gazelle/tasker) - A high precision scheduler including timezone aware cron jobs\n\n## Science and Data analysis\n * [bottle](https://github.com/crystal-data/bottle) - Numerical computing library supporting N-Dimensional data\n * [linalg](https://github.com/konovod/linalg) - Linear algebra library inspired by MATLAB and SciPy.linalg\n * [predict.cr](https://github.com/RX14/predict.cr) - Satellite prediction library using the sgp4 model\n * [stats](https://git.sceptique.eu/Sceptique/stats) - An expressive implementation of statistical distributions\n\n## Search\n * [hermes](https://github.com/imdrasil/hermes.cr) - Data Mapper pattern implementation for ElastiSearch\n * [query-builder](https://github.com/izniburak/query-builder) - Sql Query Builder library\n * [query.cr](https://github.com/waterlink/query.cr) - Query abstraction\n * [soegen](https://github.com/Ragmaanir/soegen) - Elasticsearch client for Crystal similar to the stretcher gem for ruby\n\n## Serverless Computing\n * [crystal_openfaas](https://github.com/TPei/crystal_openfaas/) - Template to enable crystal as first class citizens in OpenFaaS\n * [FaaStRuby](https://faastruby.io) - Serverless Software Development Platform for Ruby and Crystal.\n * [gcf.cr](https://github.com/sam0x17/gcf.cr) - Managed execution of Crystal in Google Cloud Functions\n\n## System\n * [baked_file_system](https://github.com/schovi/baked_file_system) - Virtual file system implementation\n * [hardware](https://github.com/crystal-community/hardware) - Get CPU, Memory and Network informations of the running OS and its processes\n\n## Task management\n * [cake](https://github.com/axvm/cake) - Production-ready Make-like utility tool\n * [sam](https://github.com/imdrasil/sam.cr) - Another one Rake-like task manager with namespacing and arguments system\n\n## Template Engine\n * [crinja](https://github.com/straight-shoota/crinja) - An implementation of the [Jinja2 template engine](http://jinja.pocoo.org/)\n * [crustache](https://github.com/MakeNowJust/crustache) - [{{Mustache}}](https://mustache.github.io) for Crystal\n * [ECR (Embedded Crystal)](https://crystal-lang.org/api/ECR.html) - compile time template language which uses plain crystal expressions (Crystal stdlib)\n * [Jbuilder](https://github.com/shootingfly/jbuilder) - Generate JSON objects with a Builder-style DSL, inspired by jbuilder\n * [Kilt](https://github.com/jeromegn/kilt) - Abstraction layer for template engines\n * [Slang](https://github.com/jeromegn/slang) - Lightweight, terse, templating language inspired by Ruby\'s Slim\n * [teeplate](https://github.com/mosop/teeplate) - A library for rendering multiple template files\n * [temel](https://github.com/f/temel) - Extensible HTML::Builder alternative for Crystal, supports custom tag definitions\n\n## Testing\n * [coverage](https://github.com/anykeyh/crystal-coverage) \xe2\x80\x93 Generate cover report for your crystal code\n * [crotest](https://github.com/emancu/crotest) - A tiny and simple test framework\n * [crytic](https://github.com/hanneskaeufler/crytic) - Mutation testing framework\n * [LuckyFlow](https://github.com/luckyframework/lucky_flow) - Automated browser tests similar to Capybara\n * [mass-spec](https://github.com/c910335/mass-spec) - Web API testing library\n * [microtest](https://github.com/Ragmaanir/microtest) - Small opinionated testing library focusing on power asserts\n * [minitest.cr](https://github.com/ysbaddaden/minitest.cr) - Library for unit tests and assertions\n * [mocks.cr](https://github.com/waterlink/mocks.cr) - Mocking library for Crystal\n * [Spec](https://crystal-lang.org/api/Spec.html) - spec framework (Crystal stdlib)\n * [spectator](https://gitlab.com/arctic-fox/spectator) - Feature rich spec framework that uses the modern expect syntax\n * [timecop.cr](https://github.com/crystal-community/timecop.cr) - Library for mocking with `Time.now`. Inspired by the [timecop ruby gem](https://github.com/travisjeffery/timecop)\n * [vcr](https://github.com/spoved/vcr.cr) - A HTTP capture and replay implementation for crystal\n * [webdriver_pump](https://github.com/bwilczek/webdriver_pump) - Page Object library. Inspired by Ruby\'s [WatirPump](https://github.com/bwilczek/watir_pump)\n * [webmock.cr](https://github.com/manastech/webmock.cr) - Library for stubbing `HTTP::Client` requests\n\n## Third-party APIs\n * [aws-credentials](https://github.com/y2k2mt/aws-credentials) - Get AWS credentials in various ways\n * [aws-signer.cr](https://github.com/beanieboi/aws-signer.cr) - This library signs your HTTP requests using AWS v4\n * [awscr-s3](https://github.com/taylorfinnell/awscr-s3) - AWS S3 interface\n * [awscr-signer](https://github.com/taylorfinnell/awscr-signer) - Sign HTTP::Request objects and generate presigned post forms\n * [bugsnag.cr](https://github.com/gewo/bugsnag.cr) - Bugsnag exception notifier and sidekiq middleware\n * [crystal-consul](https://github.com/rogerwelin/crystal-consul) - Consul API client\n * [crystal-darksky](https://github.com/sb89/crystal-darksky) - Wrapper for the [Dark Sky](https://darksky.net) API\n * [crystal-github](https://github.com/felipeelias/crystal-github) - Wrapper for the [Github](https://github.com/) API\n * [crystal-monzo](https://github.com/barisbalic/crystal-monzo) - A client for the [Monzo API](https://monzo.com/docs/)\n * [crystal-swapi](https://github.com/sb89/crystal-swapi) - Star Wars API (SWAPI) wrapper\n * [crystal_slack](https://github.com/manastech/crystal_slack) - A tool that parses Slack slash commands or send incoming web hooks\n * [discordcr](https://github.com/meew0/discordcr) - A minimalist Discord API library\n * [GDAX](https://github.com/mccallofthewild/gdax) - GDAX REST and WebSocket API Wrapper with request signing\n * [gitlab.cr](https://github.com/icyleaf/gitlab.cr) - GitLab API wrapper\n * [google_maps_api](https://github.com/fridgerator/google_maps_api) - Google Maps API\n * [kube-client.cr](https://github.com/spoved/kube-client.cr) - Kubernetes API Client\n * [mixpanel-crystal](https://github.com/petoem/mixpanel-crystal) - A library for sending events to Mixpanel\n * [nexmo-crystal](https://github.com/timcraft/nexmo-crystal) - [Nexmo REST API](https://developer.nexmo.com/) client\n * [open_exchange_rates](https://github.com/osfx/open_exchange_rates) - A library to access [Open Exchange Rates](https://openexchangerates.org/) API\n * [pinboard.cr](https://github.com/oz/pinboard.cr) - [Pinboard](https://pinboard.in) API\n * [raven.cr](https://github.com/sija/raven.cr) - Raven is a client for [Sentry](https://github.com/getsentry/sentry)\n * [slack.cr](https://github.com/DougEverly/slack.cr) - A Slack [Real Time Messaging API](https://api.slack.com/rtm) WebSocket client library\n * [twitter-crystal](https://github.com/sferik/twitter-crystal) - A library to access the Twitter API\n * [ynab.cr](https://github.com/jaredsmithse/ynab.cr) - A library to interact with your YNAB data\n\n## Validation\n * [accord](https://github.com/neovintage/accord) - Shareable validation library for Crystal Objects\n * [assert](https://github.com/blacksmoke16/assert) - Extensible annotation based object validation library\n * [denetmen](https://github.com/izniburak/denetmen) - Micro check library that patches Crystal stdlib\n * [validations](https://github.com/vladfaust/validations.cr) - Validations mixin\n\n## Web Frameworks\n * [amber](https://github.com/amberframework/amber) - Open source efficient and cohesive web application framework\n * [athena](https://github.com/blacksmoke16/athena) - Modular, annotation based, API oriented framework with built in param conversion\n * [kemal](https://github.com/kemalcr/kemal) - Lightning Fast, Super Simple web framework. Inspired by Sinatra\n * [lattice-core](https://github.com/jasonl99/lattice-core) - A WebSocket-first object-oriented framework (based on Kemal)\n * [lucky](https://github.com/luckyframework/lucky) - Catch bugs early, forget about most performance issues, and spend more time on code instead of debugging and writing tests\n * [spider-gazelle](https://github.com/spider-gazelle/spider-gazelle) - A Rails esque web framework with a focus on speed and extensibility\n\n## Web Servers\n * [fast-http-server](https://github.com/sdogruyol/fast-http-server) - Super fast, zero configuration command line HTTP Server\n * [prax.cr](https://github.com/ysbaddaden/prax.cr) - Rack proxy server for development\n * [serve](https://github.com/SuperPaintman/serve) - Command line static HTTP server\n\n# Community\n * [Crystal weekly newsletters](http://crystalweekly.com/)\n * [Gitter](https://gitter.im/crystal-lang/crystal)\n * [Google Group](https://groups.google.com/forum/?fromgroups#!forum/crystal-lang)\n * [IRC](http://irc.lc/freenode/crystal-lang) - #crystal-lang on Freenode\n * [Metaruby](https://metaruby.com/c/crystal-forum) - Crystal Forum on Metaruby\n * [Reddit](https://www.reddit.com/r/crystal_programming/)\n * [Stackoverflow](https://stackoverflow.com/tags/crystal-lang/info)\n\n## Unofficial\n * [Chinese-speaking Telegram Group](https://t.me/crystal_cn) - \xe6\x9d\xa5\xe5\x90\xa7\xef\xbc\x81TG \xe4\xb8\xad\xe6\x96\x87\xe5\x9c\x88\xe7\x9a\x84\xe6\x9c\x8b\xe5\x8f\x8b\xe4\xbb\xac\xef\xbc\x81\n * [Crystal Programming Discord Server](https://discord.gg/YPGkQ5A) - Unofficial Discord server dedicated to the Crystal Programming Language\n * [Russian-speaking Telegram Group](https://t.me/crystal_ru) - \xd0\x94\xd0\xbe\xd0\xb1\xd1\x80\xd0\xbe \xd0\xbf\xd0\xbe\xd0\xb6\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c, \xd1\x82\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x80\xd0\xb8\xd1\x89!\n\n# Resources\n * [Crystal for Rubyists](http://www.crystalforrubyists.com/) - Free book to bootstrap your Crystal journey\n * [Crystal Mastery](https://crystalmastery.io/) - Screencasts for learning Crystal\n * [crystal-lang.org](https://crystal-lang.org) - Official language site\n * [devdocs.io](https://devdocs.io/crystal/) - API Documentation Browser with Crystal support\n * [getgood.at](https://getgood.at/crystal/in-a-day) - Learn Crystal in a Day\n * [Programming Crystal](https://pragprog.com/book/crystal/programming-crystal) - PragProg book to start your Crystal journey\n\n## Official Documentation Translations\n * [br.crystal-lang.org](http://br.crystal-lang.org/) - Brazilian\n * [ja.crystal-lang.org](http://ja.crystal-lang.org/) - Japanese\n * [kr.crystal-lang.org](https://kr.crystal-lang.org/) - Korean\n * [ru.crystal-lang.org](http://ru.crystal-lang.org/) - Russian\n * [tw.crystal-lang.org](http://tw.crystal-lang.org/) - Chinese Traditional\n\n# Services and Apps\n * [carc.in](https://carc.in/) - A web service that runs your code and displays the result\n * [cry](https://github.com/elorest/cry) - Ability to execute crystal code in a fashion similar to Ruby\'s pry edit\n * [Crystal [ANN]](https://crystal-ann.com) - Announce new project, blog post, version update or any other Crystal work\n * [crystalshards.herokuapp.com](https://crystalshards.herokuapp.com/), [crystalshards.xyz](http://crystalshards.xyz/) - Web services that list all available Crystal shards\n * [Crystular](http://www.crystular.org) - Regular expression tester\n * [DeBot](https://github.com/jhass/DeBot) - IRC bot written in Crystal\n * [Fluence](https://github.com/crystallabs/fluence) - WYSIWYG wiki using markdown and Git\n * [icr](https://github.com/crystal-community/icr) - Interactive console for Crystal (like IRB for Ruby)\n * [Invidious](https://github.com/omarroth/invidious) - Invidious is an alternative front-end to YouTube\n * [mpngin](https://github.com/thewalkingtoast/mpngin) - A URL shortener with simple stats\n * [nes](https://github.com/romeroadrian/nes.cr) - A NES emulator\n * [quicktype](https://quicktype.io/) - Generate models and serializers from JSON, JSON Schema, GraphQL, and TypeScript\n * [shards.info](http://shards.info/) - Web service that lists all repositories on GitHub that have Crystal code in them. The sources are available on [GitHub](https://github.com/mamantoha/shards-info)\n * [wikicr](https://git.sceptique.eu/Sceptique/wikicr) - Wiki using git to manage revisions\n\n# Tools\n * [ast_helper](https://github.com/bcardiff/crystal-ast-helper) - Helper tool to debug parser and formatter\n * [crystal-base](https://github.com/ruivieira/crystal-base) - CentOS base docker image for Crystal development\n * [crystal-ctags](https://github.com/SuperPaintman/crystal-ctags) - Ctags generator for Crystal\n * [crystal-dash-docset](https://github.com/Sija/crystal-dash-docset) - [Dash](https://kapeli.com/dash) docset generator\n * [helptransl8](https://github.com/papilip/helptransl8) - Tool for document translators\n\n## DevOps\n * [ansible-crystal](https://github.com/CorbanR/ansible-crystal) - Ansible playbook for installing crystal\n * [capistrano-kemal](https://github.com/bitfex/capistrano-kemal) - Capistrano Plugin for Kemal\n * [crystal-cookbook](https://github.com/vjdhama/crystal-cookbook) - Chef cookbook for installing crystal\n * [DPPM](https://github.com/DFabric/dppm) - An easy, universal way to install and manage applications as packages (mostly Linux)\n\n## Editor Plugins\n * Atom\n   * [crystal-tools](https://atom.io/packages/crystal-tools) - Enables built in tools in Crystal compiler\n   * [language-crystal-actual](https://atom.io/packages/language-crystal-actual) - Crystal language support in Atom\n * Emacs\n   * [emacs-crystal-mode](https://github.com/dotmilk/emacs-crystal-mode) - Crystal language support for Emacs\n   * [play-crystal.el](https://github.com/veelenga/play-crystal.el) - [play.crystal-lang.org](https://play.crystal-lang.org/#/cr) integration in Emacs\n * [scry](https://github.com/crystal-lang-tools/scry) - Code analysis server for Crystal implementing the [Language Server Protocol](https://microsoft.github.io/language-server-protocol/)\n * Spacemacs\n   * [crystal-spacemacs-layer](https://github.com/juanedi/crystal-spacemacs-layer) - Spacemacs contribution layer for Crystal\n * Sublime\n   * [sublime-crystal](https://github.com/crystal-lang-tools/sublime-crystal) - Crystal syntax highlighting for sublime Text\n * TextMate\n   * [Crystal.tmbundle](https://github.com/crystal-lang-tools/Crystal.tmbundle) - Crystal syntax highlighting, compile, format command, snippets\n * Vim\n   * [vim-crystal](https://github.com/rhysd/vim-crystal) - Vim filetype support for Crystal\n   * [vim-slang](https://github.com/elorest/vim-slang) - Vim filetype support for Slang Templating Engine\n * Visual Studio Code\n   * [vscode-crystal](https://github.com/g3ortega/vscode-crystal) - Crystal language support in VSCode\n   * [vscode-crystal-ide](https://github.com/crystal-lang-tools/crystal-ide) - Crystal IDE powered by [Language Server Protocol](https://code.visualstudio.com/blogs/2016/06/27/common-language-protocol)\n   * [vscode-crystal-lang](https://github.com/crystal-lang-tools/vscode-crystal-lang) - Formatter, linter and syntax highlighting for `cr` and `ecr` files\n\n## Shell plugins\n * [crun](https://github.com/Val/crun) - Crystal Run : shebang wrapper for Crystal\n * [crystal-zsh](https://github.com/veelenga/crystal-zsh) - .oh-my-zsh plugin\n'