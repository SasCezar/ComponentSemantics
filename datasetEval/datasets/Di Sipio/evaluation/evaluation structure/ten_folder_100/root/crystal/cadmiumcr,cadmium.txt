b'![Logo](img/cadmium.png)\n\n**Cadmium** is a *Natural Language Processing* (NLP) library for [Crystal](https://crystal-lang.org/).\n\nFor full API documentation check out [the docs](https://cadmiumcr.github.io/cadmium/).\n\nFor more complete and up to date information about specific parts of Cadmium, check out each relevant shard repository.\n\n\n\n| Shard name                                                   | Description                                                  |\n| ------------------------------------------------------------ | ------------------------------------------------------------ |\n| [cadmium_tokenizer](https://github.com/cadmiumcr/tokenizer)  | Contains several types of string tokenizers                  |\n| [cadmium_stemmer](https://github.com/cadmiumcr/stemmer)      | Contains a Porter stemmer, useful to get the stems of english words |\n| [cadmium_ngrams](https://github.com/cadmiumcr/ngrams)        | Contains methods to obtain unigram, bigrams, trigrams or ngrams from strings |\n| [cadmium_classifier](https://github.com/cadmiumcr/classifier) | Contains two probabilistic classifiers used in NLP operations like language detection or POS tagging for example |\n| [cadmium_readability](https://github.com/cadmiumcr/readability) | Analyzes blocks of text and determine, using various algorithms, the readability of the text. |\n| [cadmium_tfidf](https://github.com/cadmiumcr/tfidf)          | Calculates the Term Frequency\xe2\x80\x93Inverse Document Frequency of a corpus |\n| [cadmium_glove](https://github.com/cadmiumcr/glove)          | Pure Crystal implementation of Global Vectors for Word Representations |\n| [cadmium_pos_tagger](https://github.com/cadmiumcr/pos_tagger) | Tags each token of a text with its Part Of Speech category   |\n| [cadmium_lemmatizer](https://github.com/cadmiumcr/lemmatizer) | Returns the lemma of each given string token                 |\n| [cadmium_summarizer](https://github.com/cadmiumcr/summarizer) | Extracts the most meaningful sentences of a text to create a summary |\n| [cadmium_sentiment](https://github.com/cadmiumcr/sentiment)  | Evaluates the sentiment of a text                            |\n| [cadmium_distance](https://github.com/cadmiumcr/distance)    | Provides two string distance algorithms                      |\n| [cadmium_transliterator](https://github.com/cadmiumcr/transliterator) | Provides the ability to transliterate UTF-8 strings into pure ASCII so that they can be safely displayed in URL slugs or file names. |\n| [cadmium_phonetics](https://github.com/cadmiumcr/phonetics)  | Allows to match a string with its sound representation       |\n| [cadmium_inflector](https://github.com/cadmiumcr/inflector)  | Allows to inflect english words (nouns, verbs and numbers)   |\n| [cadmium_graph](https://github.com/cadmiumcr/graph)          | EdgeWeightedDigraph represents a digraph, you can add an edge, get the number vertexes, edges, get all edges and use toString to print the Digraph. |\n| [cadmium_trie](https://github.com/cadmiumcr/trie)            | A [trie](https://en.wikipedia.org/wiki/Trie) is a data structure for efficiently storing and retrieving strings with identical prefixes, like "**mee**t" and "**mee**k". |\n| [cadmium_wordnet](https://github.com/cadmiumcr/wordnet)      | Pure crystal implementation of Stanford NLPs WordNet         |\n| [cadmium_util](https://github.com/cadmiumcr/utilities)       | A collection of useful utilities used internally in Cadmium. |\n| [cadmium_language_detector](https://github.com/cadmiumcr/language_detector) | Returns the most probable language code of the analysed text. |\n\n\n\n\n## Installation\n\nYour project *should* only include the Cadmium shard(s) you need.\n\nHowever, in case you want to test out **all of Cadmium** in a simple way, you can install all modules of the project in a few lines.\n\nAdd this to your application\'s `shard.yml`:\n\n```yaml\ndependencies:\n  cadmium:\n    github: cadmiumcr/cadmium\n    branch: master\n```\n\n## Contributing\n\n1. Fork it ( https://github.com/cadmiumcr/cadmium/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am \'Add some feature\')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. <a href="https://github.com/cadmiumcr/Cadmium/graphs/contributors"><img src="https://opencollective.com/Cadmium/contributors.svg?width=890&button=false" /></a>\n'