b'# Crecto\n\n![crecto](crecto.png)\n\n[https://www.crecto.com/](https://www.crecto.com/)\n\n[![Build Status](https://travis-ci.org/Crecto/crecto.svg?branch=master)](https://travis-ci.org/Crecto/crecto) [![Join the chat at https://gitter.im/crecto/Lobby](https://badges.gitter.im/crecto/Lobby.svg)](https://gitter.im/crecto/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nRobust database wrapper for Crystal.  Inspired by [Ecto](https://github.com/elixir-ecto/ecto) for Elixir language.\n\nWith built in query composer, associations, transactions, validations, constraints, and more.\n\nWebsite with guides and examples - [https://www.crecto.com/](https://www.crecto.com/)\n\nSee api docs - <http://docs.crecto.com>\n\n## Example\n\n```crystal\nuser = User.new\nuser.name = "Shakira"\n\nchangeset = Repo.insert(user)\nchangeset.errors.any?\n\ninserted_user = changeset.instance\ninserted_user.name = "Keanu"\n\nchangeset = Repo.update(user)\nchangeset.errors.any?\n\nupdated_user = changeset.instance\n\nchangeset = Repo.delete(updated_user)\n```\n\n## Usage and Guides\n\nVisit [www.crecto.com](https://www.crecto.com)\n\n#### Benchmarks\n\n* [VS raw crystal-pg](https://github.com/Crecto/crecto/wiki/Benchmarks)\n\n## Support\n\n<a href="https://www.buymeacoffee.com/I9Tdb0po3" target="_blank"><img src="https://www.buymeacoffee.com/assets/img/custom_images/yellow_img.png" alt="Buy Me A Coffee" style="height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;" ></a>\n\n## Contributing\n\n1. Fork it ( https://github.com/fridgerator/crecto/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am \'Add some feature\')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n### Development Notes\n\nWhen developing against crecto, the database must exist prior to\ntesting. There are migrations for each database type in `spec/migrations`,\nand references on how to migrate then in the `.travis.yml` file.\n\nCreate a new file `spec/repo.cr` and create a module name `Repo` to use for testing.\nThere are example repos for each database type in the spec folder: `travis_pg_repo.cr`,\n`travis_mysql_repo.cr`, and `travis_sqlite_repo.cr`\n\nWhen submitting a pull request, please test against all 3 databases.\n\n## Thanks / Inspiration\n\n* [Ecto](https://github.com/elixir-ecto/ecto)\n* [AciveRecord](https://github.com/rails/rails/tree/master/activerecord)\n* [active_record.cr](https://github.com/waterlink/active_record.cr)\n* [crystal-api-backend](https://github.com/dantebronto/crystal-api-backend)\n'