b"Vis a vim-like text editor\n==========================\n\n[![Linux Build Status](https://travis-ci.org/martanne/vis.svg?branch=master)](https://travis-ci.org/martanne/vis)\n[![Cygwin Build Status](https://ci.appveyor.com/api/projects/status/61059w4jpdnb77ft/branch/master?svg=true)](https://ci.appveyor.com/project/martanne/vis/branch/master)\n[![Coverity Scan Build Status](https://scan.coverity.com/projects/3939/badge.svg)](https://scan.coverity.com/projects/3939)\n[![codecov](https://codecov.io/gh/martanne/vis/branch/master/graph/badge.svg)](https://codecov.io/gh/martanne/vis)\n[![Documentation Status](https://readthedocs.org/projects/vis/badge/?version=master)](http://vis.readthedocs.io/en/master/?badge=master)\n[![#vis-editor on freenode](https://img.shields.io/badge/IRC-%23vis--editor-blue.svg)](irc://irc.freenode.net/vis-editor)\n\nVis aims to be a modern, legacy-free, simple yet efficient editor,\ncombining the strengths of both vi(m) and sam.\n\nIt extends vi's modal editing with built-in support for multiple\ncursors/selections and combines it with [sam's](http://sam.cat-v.org/)\n[structural regular expression](http://doc.cat-v.org/bell_labs/structural_regexps/)\nbased [command language](http://doc.cat-v.org/bell_labs/sam_lang_tutorial/).\n\nA universal editor, it has decent Unicode support and should cope with arbitrary\nfiles, including large, binary or single-line ones.\n\nEfficient syntax highlighting is provided using\n[Parsing Expression Grammars](https://en.wikipedia.org/wiki/Parsing_expression_grammar),\nwhich can be conveniently expressed using [Lua](http://www.lua.org/)\nin the form of [LPeg](http://www.inf.puc-rio.br/~roberto/lpeg/).\n\nThe editor core is written in a reasonable amount of clean (your mileage\nmay vary), modern and legacy-free C code, enabling it to run in\nresource-constrained environments. The implementation should be easy to hack on\nand encourage experimentation. There is also a Lua API for in-process\nextensions.\n\nVis strives to be *simple* and focuses on its core task: efficient text\nmanagement. Clipboard and digraph handling as well as a fuzzy file open\ndialog are all provided by independent utilities. There exist plans to use\na client/server architecture, delegating window management to your windowing\nsystem or favorite terminal multiplexer.\n\nThe intention is *not* to be bug-for-bug compatible with vi(m). Instead,  \nwe aim to provide more powerful editing features based on an elegant design\nand clean implementation.\n\n[![vis demo](https://asciinema.org/a/41361.png)](https://asciinema.org/a/41361)\n\nBuild instructions\n------------------\n\nIn order to build vis you will need a\n[C99](http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf)\ncompiler, a [POSIX.1-2008](http://pubs.opengroup.org/onlinepubs/9699919799/)\ncompatible environment as well as:\n\n * [libtermkey](http://www.leonerd.org.uk/code/libtermkey/)\n * [curses](https://en.wikipedia.org/wiki/Curses_(programming_library)) (recommended)\n * [Lua](http://www.lua.org/) >= 5.2 (optional)\n * [LPeg](http://www.inf.puc-rio.br/~roberto/lpeg/) >= 0.12\n   (optional runtime dependency required for syntax highlighting)\n * [TRE](http://laurikari.net/tre/) (optional for more memory efficient regex search)\n\nAssuming these dependencies are met, execute:\n\n    $ ./configure && make && sudo make install\n\nBy default the `configure` script will try to auto detect support for\nLua. See `configure --help` for a list of supported options. You can\nalso manually tweak the generated `config.mk` file.\n\nOr simply use one of the\n[distribution provided packages](https://github.com/martanne/vis/wiki/Distribution-Packages).\n\nDocumentation\n-------------\n\nEnd user documentation can be found in the\n[`vis(1)` manual page](http://martanne.github.io/vis/man/vis.1.html)\nand the [Wiki](https://github.com/martanne/vis/wiki). Read the\n[FAQ](https://github.com/martanne/vis/wiki/FAQ) for common questions.\nLearn about some differences compared to\n[`sam(1)`](https://github.com/martanne/vis/wiki/Differences-from-Sam) and\n[`vim(1)`](https://github.com/martanne/vis/wiki/Differences-from-Vi(m)),\nrespectively.\n\n[C API](https://vis.readthedocs.io/) as well as [Lua API](http://martanne.github.io/vis/doc/)\ndocumentation is also available.\n\nNon Goals\n---------\n\n  Some features which will *not* be implemented:\n\n   - tabs / multiple workspaces / advanced window management\n   - file and directory browser\n   - support for file archives (tar, zip, ...)\n   - support for network protocols (ftp, http, ssh ...)\n   - encryption\n   - compression\n   - GUIs (neither x11, motif, gtk, win32 ...) although the codebase\n     should make it easy to add them\n   - VimL\n   - right-to-left text\n   - ex mode, we have more elegant structural regexp\n   - diff mode\n   - vimgrep\n   - internal spell checker\n   - lots of compile time configurable features / `#ifdef` mess\n\nHow to help?\n------------\n\nThere are plenty of ways to contribute, below are a few ideas:\n\n * Artwork\n    - [Color Themes](https://github.com/martanne/vis/wiki/Themes)\n    - [Name](https://github.com/martanne/vis/issues/338) +\n      [Logo](https://github.com/martanne/vis/issues/328)\n    - Homepage?\n * Documentation\n    - [Manual Pages](https://github.com/martanne/vis/wiki/Developer-Overview#manual-pages)\n    - Improve `:help` output\n * Lua\n    - [API Documentation](https://github.com/martanne/vis/wiki/Developer-Overview#api-documentation)\n      and Examples\n    - [Unit Tests](https://github.com/martanne/vis-test/tree/master/lua)\n    - [Plugin Development](https://github.com/martanne/vis/wiki/Plugins)\n    - [API Design](https://github.com/martanne/vis/issues/292)\n * [Testing Infrastructure](https://github.com/martanne/vis-test)\n * [Distribution Packaging](https://github.com/martanne/vis/wiki/Distribution-Packages)\n * [Core Editor Design](https://github.com/martanne/vis/issues?q=is%3Aopen+is%3Aissue+label%3Adesign)\n\nCheckout the [Developer Overview](https://github.com/martanne/vis/wiki/Developer-Overview)\nto get started and do not hesitate to ask question in the `#vis-editor`\nIRC channel on freenode.\n"