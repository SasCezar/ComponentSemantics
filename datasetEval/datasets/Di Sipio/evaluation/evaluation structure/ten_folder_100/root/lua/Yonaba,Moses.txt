b'[![Build Status](https://travis-ci.org/Yonaba/Moses.png)](https://travis-ci.org/Yonaba/Moses)\n[![Latest Stable](https://img.shields.io/badge/Latest_Stable-2.1.0-blue.svg)](https://github.com/Yonaba/Moses/releases/tag/Moses-2.1.0-1)\n[![License](http://img.shields.io/badge/Licence-MIT-brightgreen.svg)](LICENSE)\n[![Lua](https://img.shields.io/badge/Lua-5.1%2C%205.2%2C%205.3%2C%20JIT-blue.svg)]()\n\nA Lua utility-belt library for [functional programming](http://en.wikipedia.org/wiki/Functional_programming).<br/>\n\n## Examples\n\nHow can I get the sum of all integers between 1 and 100 ?\n\n```lua\nlocal sum = M.sum(M.range(100))\nprint(sum) -- 5050\n````\nSay I am looking for the length of the longest word in some array ?\n\n```lua\nlocal words = {\'some\',\'words\',\'of\',\'different\',\'lengths\'}\nprint(M.max(words, M.op.length)) -- 9 letters\n````\n\nWhat is the sum of all fibonacci numbers for n below or equal 25 ?\n\n```lua\nlocal function fib(n) return n < 2 and n or fib(n - 1) + fib(n - 2) end\nlocal fibsum = M.sum(M.map(M.range(25), fib))\nprint(fibsum) -- 196417\n````\n\nOr let us do the same, object-oriented style with chaining :\n\n```lua\nlocal function fib(n) return n < 2 and n or fib(n - 1) + fib(n - 2) end\nlocal fibsum = M.chain(M.range(25)):map(fib):sum():value()\nprint(fibsum) -- 196417\n````\n\nOr even shorter :\n\n```lua\nlocal fibsum = M(M.range(25)):map(fib):sum():value()\nprint(fibsum) -- 196417\n````\n\nFeel free to download and try it on your own!\n\n## Download\n\n### Archive\n* __2.1.0__ *(latest stable)*: [zip](http://github.com/Yonaba/Moses/archive/Moses-2.1.0-1.zip) | [tar.gz](http://github.com/Yonaba/Moses/archive/Moses-2.1.0-1.tar.gz) \n* __Previous versions__ : [tags](http://github.com/Yonaba/Moses/tags)\n\n### Bash\n\n```bash\ngit clone git://github.com/Yonaba/Moses.git\n````\n\n### LuaRocks\n\n````\nluarocks install moses\n````\n\n### MoonRocks\n\n````\nmoonrocks install moses\n````\n\n## Usage\n\n```lua\nlocal M = require "moses"\n````\n\n*Note:* the full source [moses.lua](https://github.com/Yonaba/Moses/blob/master/moses.lua) is quite heavy (~92 kiB, 3115 LOC). You can alternatively use the [minified version](https://github.com/Yonaba/Moses/blob/master/moses_min.lua) (~35 kiB, 561 LOC).\n\n## Tutorial\n\nFind a complete set of code examples in [tutorial.md](https://github.com/Yonaba/Moses/blob/master/doc/tutorial.md).\n  \n## Documentation\n\n* Read it [online](http://yonaba.github.io/Moses/doc).\n\n## Credits and Acknowledgement\n\n* [Jeremy Ashkenas](https://github.com/jashkenas), for the amazing [Underscore.js](http://documentcloud.github.com/underscore/)\n* [Marcus Irven](http://mirven.github.com/underscore.lua/)\'s and [JT Archie](https://github.com/jtarchie/underscore-lua)\'s 1-to-1 ports that also inspired this\n* [Matthew Rocklin](https://github.com/mrocklin)\'s [Toolz](https://github.com/pytoolz/toolz/) from which I borrowed some ideas\n* [Steve Donovan](https://github.com/stevedonovan)\'s [LDoc](https://github.com/stevedonovan/ldoc/), used to generate the current HTML documentation.\n* [Mark Langen](https://github.com/stravant)\'s [LuaMinify](https://github.com/stravant/LuaMinify/), used to generate a minified version of this library.\n\n## Specification\n\nRun [spec tests](https://github.com/Yonaba/Moses/blob/master/spec) from Lua using [busted](https://github.com/Olivine-Labs/busted/) with the following command from the root folder:\n\n````\nbusted\n````\n\n## License\n\nThis work is under [MIT-LICENSE](http://www.opensource.org/licenses/mit-license.php)<br/>\nCopyright (c) 2012-2018 Roland Yonaba. <br/>\nSee [LICENSE](LICENSE).\n\n\n'