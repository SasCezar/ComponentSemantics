b'Minetest\n========\n\n[![Build Status](https://travis-ci.org/minetest/minetest.svg?branch=master)](https://travis-ci.org/minetest/minetest)\n[![Translation status](https://hosted.weblate.org/widgets/minetest/-/svg-badge.svg)](https://hosted.weblate.org/engage/minetest/?utm_source=widget)\n[![License](https://img.shields.io/badge/license-LGPLv2.1%2B-blue.svg)](https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html)\n\nMinetest is a free open-source voxel game engine with easy modding and game creation.\n\nCopyright (C) 2010-2019 Perttu Ahola <celeron55@gmail.com>\nand contributors (see source file comments and the version control log)\n\nIn case you downloaded the source code\n--------------------------------------\nIf you downloaded the Minetest Engine source code in which this file is\ncontained, you probably want to download the [Minetest Game](https://github.com/minetest/minetest_game/)\nproject too. See its README.txt for more information.\n\nTable of Contents\n------------------\n\n1. [Further Documentation](#further-documentation)\n2. [Default Controls](#default-controls)\n3. [Paths](#paths)\n4. [Configuration File](#configuration-file)\n5. [Command-line Options](#command-line-options)\n6. [Compiling](#compiling)\n7. [Docker](#docker)\n8. [Version Scheme](#version-scheme)\n\n\nFurther documentation\n----------------------\n- Website: http://minetest.net/\n- Wiki: http://wiki.minetest.net/\n- Developer wiki: http://dev.minetest.net/\n- Forum: http://forum.minetest.net/\n- GitHub: https://github.com/minetest/minetest/\n- [doc/](doc/) directory of source distribution\n\nDefault controls\n----------------\nAll controls are re-bindable using settings.\nSome can be changed in the key config dialog in the settings tab.\n\n| Button                        | Action                                                         |\n|-------------------------------|----------------------------------------------------------------|\n| Move mouse                    | Look around                                                    |\n| W, A, S, D                    | Move                                                           |\n| Space                         | Jump/move up                                                   |\n| Shift                         | Sneak/move down                                                |\n| Q                             | Drop itemstack                                                 |\n| Shift + Q                     | Drop single item                                               |\n| Left mouse button             | Dig/punch/take item                                            |\n| Right mouse button            | Place/use                                                      |\n| Shift + right mouse button    | Build (without using)                                          |\n| I                             | Inventory menu                                                 |\n| Mouse wheel                   | Select item                                                    |\n| 0-9                           | Select item                                                    |\n| Z                             | Zoom (needs zoom privilege)                                    |\n| T                             | Chat                                                           |\n| /                             | Command                                                        |\n| Esc                           | Pause menu/abort/exit (pauses only singleplayer game)          |\n| R                             | Enable/disable full range view                                 |\n| +                             | Increase view range                                            |\n| -                             | Decrease view range                                            |\n| K                             | Enable/disable fly mode (needs fly privilege)                  |\n| P                             | Enable/disable pitch move mode                                 |\n| J                             | Enable/disable fast mode (needs fast privilege)                |\n| H                             | Enable/disable noclip mode (needs noclip privilege)            |\n| E                             | Move fast in fast mode                                         |\n| F1                            | Hide/show HUD                                                  |\n| F2                            | Hide/show chat                                                 |\n| F3                            | Disable/enable fog                                             |\n| F4                            | Disable/enable camera update (Mapblocks are not updated anymore when disabled, disabled in release builds)  |\n| F5                            | Cycle through debug information screens                        |\n| F6                            | Cycle through profiler info screens                            |\n| F7                            | Cycle through camera modes                                     |\n| F9                            | Cycle through minimap modes                                    |\n| Shift + F9                    | Change minimap orientation                                     |\n| F10                           | Show/hide console                                              |\n| F12                           | Take screenshot                                                |\n\nPaths\n-----\nLocations:\n\n* `bin`   - Compiled binaries\n* `share` - Distributed read-only data\n* `user`  - User-created modifiable data\n\nWhere each location is on each platform:\n\n* Windows .zip / RUN_IN_PLACE source:\n    * `bin`   = `bin`\n    * `share` = `.`\n    * `user`  = `.`\n* Windows installed:\n    * `bin`   = `C:\\Program Files\\Minetest\\bin (Depends on the install location)`\n    * `share` = `C:\\Program Files\\Minetest (Depends on the install location)`\n    * `user`  = `%APPDATA%\\Minetest`\n* Linux installed:\n    * `bin`   = `/usr/bin`\n    * `share` = `/usr/share/minetest`\n    * `user`  = `~/.minetest`\n* macOS:\n    * `bin`   = `Contents/MacOS`\n    * `share` = `Contents/Resources`\n    * `user`  = `Contents/User OR ~/Library/Application Support/minetest`\n\nWorlds can be found as separate folders in: `user/worlds/`\n\nConfiguration file\n------------------\n- Default location:\n    `user/minetest.conf`\n- This file is created by closing Minetest for the first time.\n- A specific file can be specified on the command line:\n    `--config <path-to-file>`\n- A run-in-place build will look for the configuration file in\n    `location_of_exe/../minetest.conf` and also `location_of_exe/../../minetest.conf`\n\nCommand-line options\n--------------------\n- Use `--help`\n\nCompiling\n---------\n### Compiling on GNU/Linux\n\n#### Dependencies\n\n| Dependency | Version | Commentary |\n|------------|---------|------------|\n| GCC        | 4.9+    | Can be replaced with Clang 3.4+ |\n| CMake      | 2.6+    |            |\n| Irrlicht   | 1.7.3+  |            |\n| SQLite3    | 3.0+    |            |\n| LuaJIT     | 2.0+    | Bundled Lua 5.1 is used if not present |\n| GMP        | 5.0.0+  | Bundled mini-GMP is used if not present |\n| JsonCPP    | 1.0.0+  | Bundled JsonCPP is used if not present |\n\nFor Debian/Ubuntu users:\n\n    sudo apt install build-essential libirrlicht-dev cmake libbz2-dev libpng-dev libjpeg-dev libxxf86vm-dev libgl1-mesa-dev libsqlite3-dev libogg-dev libvorbis-dev libopenal-dev libcurl4-gnutls-dev libfreetype6-dev zlib1g-dev libgmp-dev libjsoncpp-dev\n\nFor Fedora users:\n\n    sudo dnf install make automake gcc gcc-c++ kernel-devel cmake libcurl-devel openal-soft-devel libvorbis-devel libXxf86vm-devel libogg-devel freetype-devel mesa-libGL-devel zlib-devel jsoncpp-devel irrlicht-devel bzip2-libs gmp-devel sqlite-devel luajit-devel leveldb-devel ncurses-devel doxygen spatialindex-devel bzip2-devel\n    \nFor Arch users:\n\n    sudo pacman -S base-devel libcurl-gnutls cmake libxxf86vm irrlicht libpng sqlite libogg libvorbis openal freetype2 jsoncpp gmp luajit leveldb ncurses\n\n#### Download\n\nYou can install Git for easily keeping your copy up to date.\nIf you don\xe2\x80\x99t want Git, read below on how to get the source without Git.\nThis is an example for installing Git on Debian/Ubuntu:\n\n    sudo apt install git\n\nFor Fedora users:\n\n    sudo dnf install git\n\nDownload source (this is the URL to the latest of source repository, which might not work at all times) using Git:\n\n    git clone --depth 1 https://github.com/minetest/minetest.git\n    cd minetest\n\nDownload minetest_game (otherwise only the "Minimal development test" game is available) using Git:\n\n    git clone --depth 1 https://github.com/minetest/minetest_game.git games/minetest_game\n\nDownload source, without using Git:\n\n    wget https://github.com/minetest/minetest/archive/master.tar.gz\n    tar xf master.tar.gz\n    cd minetest-master\n\nDownload minetest_game, without using Git:\n\n    cd games/\n    wget https://github.com/minetest/minetest_game/archive/master.tar.gz\n    tar xf master.tar.gz\n    mv minetest_game-master minetest_game\n    cd ..\n\n#### Build\n\nBuild a version that runs directly from the source directory:\n\n    cmake . -DRUN_IN_PLACE=TRUE\n    make -j$(nproc)\n\nRun it:\n\n    ./bin/minetest\n\n- Use `cmake . -LH` to see all CMake options and their current state.\n- If you want to install it system-wide (or are making a distribution package),\n  you will want to use `-DRUN_IN_PLACE=FALSE`.\n- You can build a bare server by specifying `-DBUILD_SERVER=TRUE`.\n- You can disable the client build by specifying `-DBUILD_CLIENT=FALSE`.\n- You can select between Release and Debug build by `-DCMAKE_BUILD_TYPE=<Debug or Release>`.\n  - Debug build is slower, but gives much more useful output in a debugger.\n- If you build a bare server you don\'t need to have Irrlicht installed.\n  - In that case use `-DIRRLICHT_SOURCE_DIR=/the/irrlicht/source`.\n\n### CMake options\n\nGeneral options and their default values:\n\n    BUILD_CLIENT=TRUE          - Build Minetest client\n    BUILD_SERVER=FALSE         - Build Minetest server\n    CMAKE_BUILD_TYPE=Release   - Type of build (Release vs. Debug)\n        Release                - Release build\n        Debug                  - Debug build\n        SemiDebug              - Partially optimized debug build\n        RelWithDebInfo         - Release build with debug information\n        MinSizeRel             - Release build with -Os passed to compiler to make executable as small as possible\n    ENABLE_CURL=ON             - Build with cURL; Enables use of online mod repo, public serverlist and remote media fetching via http\n    ENABLE_CURSES=ON           - Build with (n)curses; Enables a server side terminal (command line option: --terminal)\n    ENABLE_FREETYPE=ON         - Build with FreeType2; Allows using TTF fonts\n    ENABLE_GETTEXT=ON          - Build with Gettext; Allows using translations\n    ENABLE_GLES=OFF            - Build for OpenGL ES instead of OpenGL (requires support by Irrlicht)\n    ENABLE_LEVELDB=ON          - Build with LevelDB; Enables use of LevelDB map backend\n    ENABLE_POSTGRESQL=ON       - Build with libpq; Enables use of PostgreSQL map backend (PostgreSQL 9.5 or greater recommended)\n    ENABLE_REDIS=ON            - Build with libhiredis; Enables use of Redis map backend\n    ENABLE_SPATIAL=ON          - Build with LibSpatial; Speeds up AreaStores\n    ENABLE_SOUND=ON            - Build with OpenAL, libogg & libvorbis; in-game sounds\n    ENABLE_LUAJIT=ON           - Build with LuaJIT (much faster than non-JIT Lua)\n    ENABLE_SYSTEM_GMP=ON       - Use GMP from system (much faster than bundled mini-gmp)\n    ENABLE_SYSTEM_JSONCPP=OFF  - Use JsonCPP from system\n    OPENGL_GL_PREFERENCE=LEGACY - Linux client build only; See CMake Policy CMP0072 for reference\n    RUN_IN_PLACE=FALSE         - Create a portable install (worlds, settings etc. in current directory)\n    USE_GPROF=FALSE            - Enable profiling using GProf\n    VERSION_EXTRA=             - Text to append to version (e.g. VERSION_EXTRA=foobar -> Minetest 0.4.9-foobar)\n\nLibrary specific options:\n\n    BZIP2_INCLUDE_DIR               - Linux only; directory where bzlib.h is located\n    BZIP2_LIBRARY                   - Linux only; path to libbz2.a/libbz2.so\n    CURL_DLL                        - Only if building with cURL on Windows; path to libcurl.dll\n    CURL_INCLUDE_DIR                - Only if building with cURL; directory where curl.h is located\n    CURL_LIBRARY                    - Only if building with cURL; path to libcurl.a/libcurl.so/libcurl.lib\n    EGL_INCLUDE_DIR                 - Only if building with GLES; directory that contains egl.h\n    EGL_LIBRARY                     - Only if building with GLES; path to libEGL.a/libEGL.so\n    FREETYPE_INCLUDE_DIR_freetype2  - Only if building with FreeType 2; directory that contains an freetype directory with files such as ftimage.h in it\n    FREETYPE_INCLUDE_DIR_ft2build   - Only if building with FreeType 2; directory that contains ft2build.h\n    FREETYPE_LIBRARY                - Only if building with FreeType 2; path to libfreetype.a/libfreetype.so/freetype.lib\n    FREETYPE_DLL                    - Only if building with FreeType 2 on Windows; path to libfreetype.dll\n    GETTEXT_DLL                     - Only when building with gettext on Windows; path to libintl3.dll\n    GETTEXT_ICONV_DLL               - Only when building with gettext on Windows; path to libiconv2.dll\n    GETTEXT_INCLUDE_DIR             - Only when building with gettext; directory that contains iconv.h\n    GETTEXT_LIBRARY                 - Only when building with gettext on Windows; path to libintl.dll.a\n    GETTEXT_MSGFMT                  - Only when building with gettext; path to msgfmt/msgfmt.exe\n    IRRLICHT_DLL                    - Only on Windows; path to Irrlicht.dll\n    IRRLICHT_INCLUDE_DIR            - Directory that contains IrrCompileConfig.h\n    IRRLICHT_LIBRARY                - Path to libIrrlicht.a/libIrrlicht.so/libIrrlicht.dll.a/Irrlicht.lib\n    LEVELDB_INCLUDE_DIR             - Only when building with LevelDB; directory that contains db.h\n    LEVELDB_LIBRARY                 - Only when building with LevelDB; path to libleveldb.a/libleveldb.so/libleveldb.dll.a\n    LEVELDB_DLL                     - Only when building with LevelDB on Windows; path to libleveldb.dll\n    PostgreSQL_INCLUDE_DIR          - Only when building with PostgreSQL; directory that contains libpq-fe.h\n    PostgreSQL_LIBRARY              - Only when building with PostgreSQL; path to libpq.a/libpq.so/libpq.lib\n    REDIS_INCLUDE_DIR               - Only when building with Redis; directory that contains hiredis.h\n    REDIS_LIBRARY                   - Only when building with Redis; path to libhiredis.a/libhiredis.so\n    SPATIAL_INCLUDE_DIR             - Only when building with LibSpatial; directory that contains spatialindex/SpatialIndex.h\n    SPATIAL_LIBRARY                 - Only when building with LibSpatial; path to libspatialindex_c.so/spatialindex-32.lib\n    LUA_INCLUDE_DIR                 - Only if you want to use LuaJIT; directory where luajit.h is located\n    LUA_LIBRARY                     - Only if you want to use LuaJIT; path to libluajit.a/libluajit.so\n    MINGWM10_DLL                    - Only if compiling with MinGW; path to mingwm10.dll\n    OGG_DLL                         - Only if building with sound on Windows; path to libogg.dll\n    OGG_INCLUDE_DIR                 - Only if building with sound; directory that contains an ogg directory which contains ogg.h\n    OGG_LIBRARY                     - Only if building with sound; path to libogg.a/libogg.so/libogg.dll.a\n    OPENAL_DLL                      - Only if building with sound on Windows; path to OpenAL32.dll\n    OPENAL_INCLUDE_DIR              - Only if building with sound; directory where al.h is located\n    OPENAL_LIBRARY                  - Only if building with sound; path to libopenal.a/libopenal.so/OpenAL32.lib\n    OPENGLES2_INCLUDE_DIR           - Only if building with GLES; directory that contains gl2.h\n    OPENGLES2_LIBRARY               - Only if building with GLES; path to libGLESv2.a/libGLESv2.so\n    SQLITE3_INCLUDE_DIR             - Directory that contains sqlite3.h\n    SQLITE3_LIBRARY                 - Path to libsqlite3.a/libsqlite3.so/sqlite3.lib\n    VORBISFILE_DLL                  - Only if building with sound on Windows; path to libvorbisfile-3.dll\n    VORBISFILE_LIBRARY              - Only if building with sound; path to libvorbisfile.a/libvorbisfile.so/libvorbisfile.dll.a\n    VORBIS_DLL                      - Only if building with sound on Windows; path to libvorbis-0.dll\n    VORBIS_INCLUDE_DIR              - Only if building with sound; directory that contains a directory vorbis with vorbisenc.h inside\n    VORBIS_LIBRARY                  - Only if building with sound; path to libvorbis.a/libvorbis.so/libvorbis.dll.a\n    XXF86VM_LIBRARY                 - Only on Linux; path to libXXf86vm.a/libXXf86vm.so\n    ZLIB_DLL                        - Only on Windows; path to zlib1.dll\n    ZLIB_INCLUDE_DIR                - Directory that contains zlib.h\n    ZLIB_LIBRARY                    - Path to libz.a/libz.so/zlib.lib\n\n### Compiling on Windows\n\n### Requirements\n\n- [Visual Studio 2015 or newer](https://visualstudio.microsoft.com)\n- [CMake](https://cmake.org/download/)\n- [vcpkg](https://github.com/Microsoft/vcpkg)\n- [Git](https://git-scm.com/downloads)\n\n### Compiling and installing the dependencies\n\nIt is highly recommended to use vcpkg as package manager.\n\n#### a) Using vcpkg to install dependencies\n\nAfter you successfully built vcpkg you can easily install the required libraries:\n```powershell\nvcpkg install irrlicht zlib curl[winssl] openal-soft libvorbis libogg sqlite3 freetype luajit --triplet x64-windows\n```\n\n- `curl` is optional, but required to read the serverlist, `curl[winssl]` is required to use the content store.\n- `openal-soft`, `libvorbis` and `libogg` are optional, but required to use sound.\n- `freetype` is optional, it allows true-type font rendering.\n- `luajit` is optional, it replaces the integrated Lua interpreter with a faster just-in-time interpreter.\n\nThere are other optional libraries, but they are not tested if they can build and link correctly.\n\nUse `--triplet` to specify the target triplet, e.g. `x64-windows` or `x86-windows`.\n\n#### b) Compile the dependencies on your own\n\nThis is outdated and not recommended. Follow the instructions on https://dev.minetest.net/Build_Win32_Minetest_including_all_required_libraries#VS2012_Build\n\n### Compile Minetest\n\n#### a) Using the vcpkg toolchain and CMake GUI\n1. Start up the CMake GUI\n2. Select **Browse Source...** and select DIR/minetest\n3. Select **Browse Build...** and select DIR/minetest-build\n4. Select **Configure**\n5. Choose the right visual Studio version and target platform. It has to match the version of the installed dependencies\n6. Choose **Specify toolchain file for cross-compiling**\n7. Click **Next**\n8. Select the vcpkg toolchain file e.g. `D:/vcpkg/scripts/buildsystems/vcpkg.cmake`\n9. Click Finish\n10. Wait until cmake have generated the cash file\n11. If there are any errors, solve them and hit **Configure**\n12. Click **Generate**\n13. Click **Open Project**\n14. Compile Minetest inside Visual studio.\n\n#### b) Using the vcpkg toolchain and the commandline\n\nRun the following script in PowerShell:\n\n```powershell\ncmake . -G"Visual Studio 15 2017 Win64" -DCMAKE_TOOLCHAIN_FILE=D:/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_GETTEXT=0 -DENABLE_CURSES=0\ncmake --build . --config Release\n```\nMake sure that the right compiler is selected and the path to the vcpkg toolchain is correct.\n\n#### c) Using your own compiled libraries\n\n**This is outdated and not recommended**\n\nFollow the instructions on https://dev.minetest.net/Build_Win32_Minetest_including_all_required_libraries#VS2012_Build\n\n### Windows Installer using WiX Toolset\n\nRequirements:\n* [Visual Studio 2017](https://visualstudio.microsoft.com/)\n* [WiX Toolset](https://wixtoolset.org/)\n\nIn the Visual Studio 2017 Installer select **Optional Features -> WiX Toolset**.\n\nBuild the binaries as described above, but make sure you unselect `RUN_IN_PLACE`.\n\nOpen the generated project file with Visual Studio. Right-click **Package** and choose **Generate**.\nIt may take some minutes to generate the installer.\n\n\nDocker\n------\nWe provide Minetest server Docker images using the GitLab mirror registry.\n\nImages are built on each commit and available using the following tag scheme:\n\n* `registry.gitlab.com/minetest/minetest/server:latest` (latest build)\n* `registry.gitlab.com/minetest/minetest/server:<branch/tag>` (current branch or current tag)\n* `registry.gitlab.com/minetest/minetest/server:<commit-id>` (current commit id)\n\nIf you want to test it on a Docker server you can easily run:\n\n\tsudo docker run registry.gitlab.com/minetest/minetest/server:<docker tag>\n\nIf you want to use it in a production environment you should use volumes bound to the Docker host\nto persist data and modify the configuration:\n\n\tsudo docker create -v /home/minetest/data/:/var/lib/minetest/ -v /home/minetest/conf/:/etc/minetest/ registry.gitlab.com/minetest/minetest/server:master\n\nData will be written to `/home/minetest/data` on the host, and configuration will be read from `/home/minetest/conf/minetest.conf`.\n\n**Note:** If you don\'t understand the previous commands please read the official Docker documentation before use.\n\nYou can also host your Minetest server inside a Kubernetes cluster. See our example implementation in [`misc/kubernetes.yml`](misc/kubernetes.yml).\n\n\nVersion scheme\n--------------\nWe use `major.minor.patch` since 5.0.0-dev. Prior to that we used `0.major.minor`.\n\n- Major is incremented when the release contains breaking changes, all other\nnumbers are set to 0.\n- Minor is incremented when the release contains new non-breaking features,\npatch is set to 0.\n- Patch is incremented when the release only contains bugfixes and very\nminor/trivial features considered necessary.\n\nSince 5.0.0-dev and 0.4.17-dev, the dev notation refers to the next release,\ni.e.: 5.0.0-dev is the development version leading to 5.0.0.\nPrior to that we used `previous_version-dev`.\n'