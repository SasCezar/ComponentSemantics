b'<h2 align="center">Hacker News Clone React/GraphQL</h2>\n\n<p align="center">\n<a href="https://github.com/clintonwoo/hackernews-react-graphql/stargazers"><img alt="GitHub Stars" src="https://img.shields.io/github/stars/clintonwoo/hackernews-react-graphql.svg?style=social&label=Star"></a> \n<a href="https://github.com/clintonwoo/hackernews-react-graphql/"><img alt="GitHub Followers" src="https://img.shields.io/github/followers/clintonwoo.svg?style=social&label=Follow"></a> \n<a href="https://github.com/clintonwoo/hackernews-react-graphql/issues"><img alt="GitHub Issues" src="https://img.shields.io/github/issues/clintonwoo/hackernews-react-graphql.svg"></a> \n<a href="https://github.com/clintonwoo/hackernews-react-graphql/pulls"><img alt="GitHub Pull Requests" src="https://img.shields.io/github/issues-pr-raw/clintonwoo/hackernews-react-graphql.svg"></a>\n</p>\n\nThis project is a clone of hacker news rewritten with universal JavaScript, using React and GraphQL. It is intended to be an example or boilerplate to help you structure your projects using production-ready technologies.\n\n<p align="center" margin-bottom="0">\n  <a href="http://www.hnclone.win" target="_blank">\n    <img alt="Hacker News Clone Demo" width="auto" height="auto" src="docs/HN-Demo.jpg">\n  </a>\n</p>\n<p align="center">\n  <a href="http://www.hnclone.win">Live Demo</a>\n</p>\n\n## Overview\n\n### Featuring\n\n- React - (UI Framework)\n- GraphQL - (Web Data API)\n- Apollo - (GraphQL Client/Server)\n- Next - (Routing, SSR, Hot Module Reloading, Code Splitting, Build tool uses Webpack)\n- TypeScript - (Static Types)\n- Webpack - (Module Bundler)\n- PostCSS - (CSS Processing)\n- Node.js - (Web Server)\n- Express - (Web App Server)\n- Passport - (Authentication)\n- TSLint - (JS Best Practices/Code Highlighting)\n- Jest - (Tests)\n- Docker - (Container Deployment)\n\n- Optional - Yarn or Pnpm Package Manager - (Better Dependencies)\n\n### Benefits\n\n**Front End**\n\n- Declarative UI - (react)\n- Static Typing (typescript)\n- GraphQL Fragment Colocation - (react-apollo)\n- Prefetch Page Assets - (next)\n\n**Server**\n\n- Universal JS - (node & express)\n- Declarative GraphQL Schema - (apollo-server)\n- GraphQL Query Batching - (apollo-server-express)\n- GraphQL Stored Queries - (apollo-server-express)\n- Easy GraphiQL Include - (apollo-server-express)\n- Local Authentication Strategy - (passport)\n- Server Side Rendering - (next)\n- Code Splitting - (next)\n- Build to Static Website - (next)\n- Container Based Runtime - (docker)\n\n**Dev/Test**\n\n- Hot Module Reloading - (next)\n- Snapshot Testing - (jest)\n- GraphQL Playground\n- Faster Package Install - (yarn)\n- JS Best Practices - (tslint)\n\n### Architecture Overview\n\n<p align="center">\n  <img alt="Hacker News Clone Architecture Overview" width="auto" height="400px" src="docs/HN-Clone-Architecture-overview.png">\n</p>\n\n_Server.js_ is the entry point. It uses Express and passes requests to Next. Next SSR renders the pages using `getInitialProps()` hook from Apollo helper. Therefore the app makes GraphQL requests on the client or server.\n\nWhen the client receives the page it preloads next page JS designated with `<Link prefetch href="/">`. When the client navigates to the linked page it only needs to make a GraphQL query to render. _Great!_\n\nSee more: <a href="https://github.com/zeit/next.js/">Next.js</a>,\n<a href="http://dev.apollodata.com/react/">Apollo GraphQL Client</a>\n\nGraphQL: <a href="http://dev.apollodata.com/tools/graphql-tools/index.html">GraphQL-Tools by Apollo</a>\nor\n<a href="http://graphql.org/graphql-js/">GraphQL docs</a>\n\n### Directory Structure\n\nEach directory contains a README.\n\n_root_ - Only contains config files such as Babel, ESLint, Docker, Flow, NPM, Yarn, Git.\n\n## How To Start\n\n### One Click Download & Run\n\nYou can download and run the repo with one command to rule them all:\n\n`git clone https://github.com/clintonwoo/hackernews-react-graphql.git && cd hackernews-react-graphql && npm install && npm run dev`\n\n### Setup\n\nRunning the app in dev mode is fully featured including _hot module reloading_:\n\n`npm install`\n\n`npm run dev`\n\nTo run in production mode:\n\n`npm run build && npm start`\n\n### Configuration\n\nThe project runs out of the box with default settings (_/src/config.js_). You can include a .env file in your project root to configure settings (this is the \'_dotenv_\' npm package). The _.env_ file is included in _.gitignore_.\n\n## How To Test\n\n### Jest\n\n`npm test`\n\nThis project uses Jest and can do snapshot testing of React components. Whenever a component is changed, please update the snapshots using `npm test -- -u` or `jest --updateSnapshot`.\n\n## How To Build For Deployment\n\n`npm run build`: NextJS app with entry point _server.js_ that uses Node.js/Express. Uses Babel compiler to transpile project src to build.\n\nOR\n\n`npm run build-docker`\nDocker Container: Builds a docker container using Dockerfile.\n\n#### Static Website (Optional)\n\nNextJS lets us make a powerful static website but you need to consider if you need server side rendering.\n\n`npm run build-static-website`: Builds static website to _/build/static_. Use a static web server _eg._ NGINX/Github Pages.\n\n## Contributing\n\nPull requests are welcome. File an issue for ideas, conversation or feedback.\n\n### Community\n\nAfter you \xe2\x98\x85Star this project, follow [@ClintonDAnnolfo](https://twitter.com/clintondannolfo) on Twitter.\n'