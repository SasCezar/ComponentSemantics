b"## 3REE\n[![Circle CI](https://circleci.com/gh/GordyD/3ree.svg?style=svg)](https://circleci.com/gh/GordyD/3ree)\n\nAn example universal JS application written with the 3REE stack, *Re*act + *Re*dux + *Re*thinkDB + *E*xpress. A stack for building apps, front and back end, with just Javascript.\n\nThis project was initially conceived to experiment with using these technologies in conjunction with one-another. I have written a [blog](http://blog.workshape.io/the-3ree-stack-react-redux-rethinkdb-express-js/) that relates to this codebase.\n\n![Screenshot](http://i.imgur.com/RiFteKV.png)\n\nThis project is useful for:\n - seeing how to build a Universal Javascript application\n - understanding how to handle asyncronousity in Redux action creators\n - seeing how you can use Socket.io with Redux\n - building your own Redux powered application\n - seeing how you can use System.import() with React Router + Webpack2 to acheive code splitting for different routes of your application\n - forking so that you can build your own 3REE stack app!\n\n### Main Features\n\n - Universal (Isomorphic) Javascript Application\n - Use of Webpack 2's Code Splitting and Tree Shaking features\n - Asyncronous Redux actions example\n - Use of RethinkDB Changefeeds for realtime updates reflected in the UI\n\n### Demo\n\nThere is a demo app hosted at [3ree-demo.workshape.io](http://3ree-demo.workshape.io). Check it out. If it is down, please email  tanc@workshape.io\n\n### Setup\n\nYou will need to install [RethinkDB](http://www.rethinkdb.com). You can find instruction on how to do so [here](http://rethinkdb.com/docs/install/). Make sure you have the latest version installed.\n\n - Clone the repo `git clone git@github.com:GordyD/3ree.git`\n - Make sure you are using Node v6.0.0 (I recommend using [n](https://github.com/tj/n) for Node version management)\n - Run `npm install`\n - If your local environment is not reflected by `config/default.json`, then add a file at `config/local.json` to provide local customisation.\n - Run `npm run db-setup` to set up DB\n\n### Running Dev Server\n\nOn Linux/OSX: `npm start`\n\nOn Windows: `npm run start:win`\n\nThis will start the Webpack dev server - for serving the client, as well as the server-side API.\n\nGo to http://localhost:3001 in two separate tabs - see changes propagate in real time (Hot Module Replacement works too).\n\n### Running Production Server\n\nYou will need to roll out your own deployment script for a server, but before you can ship you will need to:\n\n - Build the client with `npm run build:prod`\n - Ensure all production npm modules are installed on the server. e.g. `npm install --prod`\n - Rsync your application to your server\n - Set up nginx or your web server of choice to map HTTP requests for your URL to `http://localhost:3000`\n - Run `npm run start:prod` to run on your server\n - Go to your URL\n\nNOTE: Production has not been tested on Windows.\n\n### Tech Used\n\n| **Tech** | **Description** |\n| ---------|-----------------|\n| [React](https://facebook.github.io/react/) | View layer |\n| [React Router](https://github.com/reactjs/react-router) | Universal routing |\n| [Redux](http://redux.js.org/) | State management |\n| [RethinkDB](http://www.rethinkdb.com) | Persistance layer |\n| [Express](http://expressjs.com/) | Node.js server framework |\n| [Socket.io]() | Used for realtime communication between clients and server |\n| [Webpack](https://webpack.github.io/) | Module bundling + build for client |\n| [Superagent](https://github.com/visionmedia/superagent) | Universal http requests |\n| [Stylus](http://stylus-lang.com/) | Expressive, dynamic, robust CSS |\n"