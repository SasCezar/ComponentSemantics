b'[![forthebadge](http://forthebadge.com/images/badges/60-percent-of-the-time-works-every-time.svg)](http://forthebadge.com)\n[![forthebadge](http://forthebadge.com/images/badges/as-seen-on-tv.svg)](http://forthebadge.com)\n[![forthebadge](http://forthebadge.com/images/badges/fuck-it-ship-it.svg)](http://forthebadge.com)\n\n---\n\n[![Code Climate](https://img.shields.io/codeclimate/github/EQuimper/nodejs-api-boilerplate.svg?style=flat-square)](https://codeclimate.com/github/EQuimper/nodejs-api-boilerplate)\n[![Coverage Status](https://img.shields.io/coveralls/EQuimper/nodejs-api-boilerplate/master.svg?style=flat-square)](https://coveralls.io/github/EQuimper/nodejs-api-boilerplate?branch=master)\n[![Build Status](https://img.shields.io/travis/EQuimper/nodejs-api-boilerplate/master.svg?style=flat-square)](https://travis-ci.org/EQuimper/nodejs-api-boilerplate)\n[![CircleCI](https://circleci.com/gh/EQuimper/nodejs-api-boilerplate.svg?&style=shield)](https://circleci.com/gh/EQuimper/nodejs-api-boilerplate)\n[![Greenkeeper badge](https://badges.greenkeeper.io/EQuimper/nodejs-api-boilerplate.svg)](https://greenkeeper.io/)\n[![styled with prettier](https://img.shields.io/badge/styled_with-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\n[![MIT License](https://img.shields.io/npm/l/stack-overflow-copy-paste.svg?style=flat-square)](http://opensource.org/licenses/MIT)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n[![Dependency Status](https://dependencyci.com/github/EQuimper/nodejs-api-boilerplate/badge)](https://dependencyci.com/github/EQuimper/nodejs-api-boilerplate)\n[![dependencies Status](https://david-dm.org/equimper/nodejs-api-boilerplate/status.svg?style=flat-square)](https://david-dm.org/equimper/nodejs-api-boilerplate)\n[![devDependencies Status](https://david-dm.org/equimper/nodejs-api-boilerplate/dev-status.svg?style=flat-square)](https://david-dm.org/equimper/nodejs-api-boilerplate?type=dev)\n[![nps](https://img.shields.io/badge/scripts%20run%20with-nps-blue.svg?style=flat-square)](https://github.com/kentcdodds/nps)\n[![code style equimper](https://img.shields.io/badge/code%20style-equimper-blue.svg?style=flat-square)](https://github.com/EQuimper/eslint-config-equimper)\n[![All Contributors](https://img.shields.io/badge/all_contributors-2-orange.svg?style=flat-square)](#contributors)\n\n# NodeJS-API-Boilerplate\n\n[![forthebadge](http://forthebadge.com/images/badges/built-by-developers.svg)](http://forthebadge.com)\n[![forthebadge](http://forthebadge.com/images/badges/powered-by-water.svg)](http://forthebadge.com)\n[![forthebadge](http://forthebadge.com/images/badges/powered-by-netflix.svg)](http://forthebadge.com)\n[![forthebadge](http://forthebadge.com/images/badges/mom-made-pizza-rolls.svg)](http://forthebadge.com)\n[![forthebadge](http://forthebadge.com/images/badges/you-didnt-ask-for-this.svg)](http://forthebadge.com)\n[![forthebadge](http://forthebadge.com/images/badges/winter-is-coming.svg)](http://forthebadge.com)\n\n# Always in progress \xf0\x9f\x91\xb7\xe2\x80\x8d\n\n# Get Started\n\n- [Installation](https://github.com/EQuimper/nodejs-api-boilerplate#installation)\n- [Install Mongodb](https://github.com/EQuimper/nodejs-api-boilerplate#install-mongodb)\n- [Raven Log](https://github.com/EQuimper/nodejs-api-boilerplate#raven-log)\n- [Body Whitelist](https://github.com/EQuimper/nodejs-api-boilerplate#body-whitelist)\n- [Api Doc](https://github.com/EQuimper/nodejs-api-boilerplate#api-doc)\n- [Pre-Commit Hook](https://github.com/EQuimper/nodejs-api-boilerplate#pre-commit-hook)\n- [Scripts](https://github.com/EQuimper/nodejs-api-boilerplate#scripts)\n- [Dev-Debug](https://github.com/EQuimper/nodejs-api-boilerplate#dev-debug)\n- [Why toJSON() on methods model](https://github.com/EQuimper/nodejs-api-boilerplate#why-tojson-on-methods-model-)\n- [For validation on request](https://github.com/EQuimper/nodejs-api-boilerplate#for-validation-on-request)\n- [Seeds](https://github.com/EQuimper/nodejs-api-boilerplate#seeds)\n- [Docker](https://github.com/EQuimper/nodejs-api-boilerplate#docker)\n- [Techs](https://github.com/EQuimper/nodejs-api-boilerplate#techs)\n- [Todo](https://github.com/EQuimper/nodejs-api-boilerplate#todo)\n\n## Build\n\nThis Boilerplate use webpack 3 to compile code.\n\n## Installation\n\n1. Clone the project `git clone https://github.com/EQuimper/nodejs-api-boilerplate.git`.\n2. Install dependencies `yarn install` or `npm i`\n3. Create a `.env` file in the root like the `.env.example` file.\n4. For dev you need to have mongodb db locally. [How to?](https://github.com/EQuimper/nodejs-api-boilerplate#install-mongodb)\n\n---\n\n## Install Mongodb\n\nWith Homebrew you can just run `brew install mongodb` and after `brew services start mongodb`.\n\n---\n\n## Raven Log\n\nFor get raven log create account here: [Sentry](https://sentry.io/)\n\n---\n\n## Body Whitelist\n\nFor security have add a whitelist function for your `req.body` coming from the front end. You can take a look of it in the `contants.js` file.\n\n```js\nconst WHITELIST = {\n  posts: {\n    create: [\'title\', \'text\'],\n    update: [\'title\', \'text\'],\n  },\n  users: {\n    create: [\'email\', \'username\', \'password\'],\n  },\n};\n```\n\n---\n\n## Api Doc\n\nApi doc his hosted on surge. [Link](http://equimper-nodejs-api-boilerplate.surge.sh/). For change the url and have your own docs just add you link in the `.env` file.\n\n---\n\n## Pre-Commit Hook\n\nI\'ve add `pre-commit` and `lint-staged` for lint your code before commit. That can maybe take time :bowtie:\n\n---\n\n## Scripts\n\n### DEV\n\n```\nyarn dev\n```\n\nor\n\n```\nnpm run dev\n```\n\n**PS** That can crash if this is the first time but don\'t worry give it 2 sec the scripts gonna work. He just need to created a dist folder :) This way you have only one command to run.\n\n### DEV-DEBUG\n\n```\nyarn dev:debug\n```\n\nor\n\n```\nnpm run dev:debug\n```\n\n---\n\n## Why toJSON on methods model ?\n\n`toJSON()` help us to get only the data we want when we push the info to the client. So now we just need to put the user object in the `res.json(user)` and we received only what we want. Why `toAuthJSON()` ? Cause if we populated the post we get the `toJSON()` so the `toAuthJSON()` is the on to call on signup and login for get the token and _id.\n\n```js\ntoAuthJSON() {\n  return {\n    _id: this._id,\n    token: `JWT ${this.createToken()}`,\n  };\n},\n\ntoJSON() {\n  return {\n    _id: this._id,\n    username: this.username,\n  };\n},\n```\n\n---\n\n## For Validation on Request\n\nI\'m using Joi in this boilerplate, that make the validation really easy.\n\n```js\nexport const validation = {\n  create: {\n    body: {\n      email: Joi.string().email().required(),\n      password: Joi.string().regex(/^[a-zA-Z0-9]{3,30}$/).required(),\n      username: Joi.string().min(3).max(20).required(),\n    },\n  },\n};\n\nroutes.post(\n  \'/signup\',\n  validate(UserController.validation.create),\n  UserController.create,\n);\n```\n\n## Seeds\n\nFor seed just run one of this following comand. This is helpful in dev for making fake user.\n\n**This is only available in dev environment**\n\n*You can change the number of seed by changing the number in each script inside `/scripts/seeds`*\n\n- Seeds 10 user `yarn db:seeds-user`\n- Clear user collection `yarn db:seeds-clear-user`\n- Clear all collection `yarn db:seeds-clear`\n\n---\n\nMonitoring Server on `http://localhost:3000/status`\n\n---\n\n\n## Docker\n\n```\nbash scripts/development.sh\n```\n\n---\n\n## Techs\n\n- [Helmet](https://github.com/helmetjs/helmet)\n- [Cors](https://github.com/expressjs/cors)\n- [Body-Parser](https://github.com/expressjs/body-parser)\n- [Morgan](https://github.com/expressjs/morgan)\n- [PassportJS](https://github.com/jaredhanson/passport)\n- [Passport-Local](https://github.com/jaredhanson/passport-local)\n- [Passport-JWT](https://github.com/themikenicholson/passport-jwt)\n- [Raven](https://github.com/getsentry/raven-node)\n- [Joi](https://github.com/hapijs/joi)\n- [Http-Status](https://github.com/adaltas/node-http-status)\n- [Lint-Staged](https://github.com/okonet/lint-staged)\n- [Husky](https://github.com/typicode/husky)\n- [Prettier](https://github.com/prettier/prettier)\n- [Eslint Config EQuimper](https://github.com/EQuimper/eslint-config-equimper)\n- [Eslint Config Prettier](https://github.com/prettier/eslint-config-prettier)\n- [CodeClimate](https://codeclimate.com/)\n- [Coveralls](https://github.com/integrations/coveralls)\n- [Travis Ci](https://travis-ci.org/)\n- [Circle Ci](https://circleci.com/)\n- [Greenkeeper](https://greenkeeper.io/)\n- [Istanbul](https://github.com/gotwarlost/istanbul)\n- [Mocha](https://github.com/mochajs/mocha)\n- [Chai](https://github.com/chaijs/chai)\n- [Supertest](https://github.com/visionmedia/supertest)\n- [NPS](https://github.com/kentcdodds/nps)\n- [MongoDB](https://www.mongodb.com/)\n- [Mongoose](http://mongoosejs.com/)\n- [Webpack3](https://webpack.js.org/)\n\n---\n\n## Todo\n\n- [x] Test seeds controller - Done by [cpenarrieta](https://github.com/cpenarrieta)\n- [ ] Sendgrid or Other Mail supply\n- [ ] Add S3 for user image\n- [ ] Change Mocha for Jest\n\n# PR are welcome!!! \xf0\x9f\x98\x83\n\n## Contributors\n\nThanks goes to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n| [<img src="https://avatars0.githubusercontent.com/u/15819498?v=3" width="100px;"/><br /><sub>Emanuel Quimper</sub>](https://equimper.me/)<br />[\xf0\x9f\x92\xac](#question-EQuimper "Answering Questions") [\xf0\x9f\x93\x9d](#blog-EQuimper "Blogposts") [\xf0\x9f\x90\x9b](https://github.com/EQuimper/nodejs-api-boilerplate/issues?q=author%3AEQuimper "Bug reports") [\xf0\x9f\x92\xbb](https://github.com/EQuimper/nodejs-api-boilerplate/commits?author=EQuimper "Code") [\xf0\x9f\x93\x96](https://github.com/EQuimper/nodejs-api-boilerplate/commits?author=EQuimper "Documentation") [\xf0\x9f\x92\xa1](#example-EQuimper "Examples") [\xf0\x9f\x9a\x87](#infra-EQuimper "Infrastructure (Hosting, Build-Tools, etc)") [\xf0\x9f\x94\x8c](#plugin-EQuimper "Plugin/utility libraries") [\xf0\x9f\x91\x80](#review-EQuimper "Reviewed Pull Requests") [\xe2\x9a\xa0\xef\xb8\x8f](https://github.com/EQuimper/nodejs-api-boilerplate/commits?author=EQuimper "Tests") [\xf0\x9f\x94\xa7](#tool-EQuimper "Tools") [\xe2\x9c\x85](#tutorial-EQuimper "Tutorials") | [<img src="https://avatars0.githubusercontent.com/u/1692542?v=3" width="100px;"/><br /><sub>Cristian Penarrieta</sub>](https://medium.com/@cpenarrieta)<br />[\xe2\x9a\xa0\xef\xb8\x8f](https://github.com/EQuimper/nodejs-api-boilerplate/commits?author=cpenarrieta "Tests") |\n| :---: | :---: |\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specification. Contributions of any kind welcome!\n'