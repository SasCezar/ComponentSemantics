b'# NextAuth\n\n## About NextAuth\n\nNextAuth is an authentication library for Next.js projects.\n\nThe NextAuth library uses Express and Passport, the most commonly used authentication library for Node.js, to provide support for signing in with email and with services like Facebook, Google and Twitter.\n\nNextAuth adds Cross Site Request Forgery (CSRF) tokens and HTTP Only cookies, supports universal rendering and does not require client side JavaScript.\n\nIt adds session support without using client side accessible session tokens, providing protection against Cross Site Scripting (XSS) and session hijacking, while leveraging localStorage where available to cache non-critical session state for optimal performance in Single Page Apps.\n\nThe NextAuth comes with a client library, designed to work with React pages powered by Next.js to easily add universal session support to sites.\n\nIt contains an [example site](https://github.com/iaincollins/next-auth/tree/master/example) that shows how to use it in a simple project. It\'s also used in the [nextjs-starter.now.sh](https://nextjs-starter.now.sh) project, which provides a more complete example with a live demo.\n\nNote: As of version 1.5 NextAuth is also compatible non-Next.js React projects, just pass `null` instead of a nextApp instance when calling `nextAuth()`.\n\nYou will need to handle setting up routes before and after initialising NextAuth if you are not using Next.js. NextAuth lets you pass an instance of express as \'expressApp\' option (and returns it in the response).\n\n## Example Client Usage\n\n````javascript\nimport React from \'react\'\nimport { NextAuth } from \'next-auth/client\'\n\nexport default class extends React.Component {\n  static async getInitialProps({req}) {\n    return {\n      session: await NextAuth.init({req})\n    }\n  }\n  render() {\n    if (this.props.session.user) {\n      return(\n        <div>\n          <p>You are logged in as {this.props.session.user.name || this.props.session.user.email}.</p>\n        </div>\n        )\n    } else {\n      return(\n        <div>\n          <p>You are not logged in.</p>\n        </div>\n      )\n    }\n  }\n}\n````\n\nSee [Documentation for the NextAuth Client](https://github.com/iaincollins/next-auth/blob/master/README-CLIENT.md) for more information on how to interact with the client.\n\n## Routes\n\nNextAuth adds a number of routes under `/auth\':\n\n* POST `/auth/email/signin` - Request Sign In Token\n* GET `/auth/email/signin/:token` - Validate Sign In Token\n* POST `/auth/signout` - Sign Out\n* GET `/auth/csrf` - CSRF endpoint for Single Page Apps\n* GET `/auth/session` - Session endpoint for Single Page Apps\n* GET `/auth/linked` - View linked accounts for Single Page Apps\n\nAll POST routes request must include a CSRF token.\n\nCSRF, Session and Linked Account endpoints are provided for Single Page Apps.\n\nNote: Session Tokens are stored in HTTP Only cookies to prevent session hijacking and protect against Cross Site Scripting (XSS) attacks. Only HTTP requests that originate from the original domain are able to read from them.\n\nIn addition, it will add the following routes for each oAuth provider currently configured:\n\n* GET `/auth/oauth/${provider}`\n* GET `/auth/oauth/${provider}/callback`\n* POST `/auth/oauth/${provider}/unlink`\n\nYou can see which routes are configured and the callback URLs defined for them via this route:\n\n* GET `/auth/providers`\n\nIt will return a JSON object with the current oAuth provider configuration:\n\n````json\n{\n  "Facebook": {\n    "signin": "/auth/oauth/facebook",\n    "callback": "/auth/oauth/facebook/callback"\n  },\n  "Google": {\n    "signin": "/auth/oauth/google",\n    "callback": "/auth/oauth/google/callback"\n  },\n  "Twitter": {\n    "signin": "/auth/oauth/twitter",\n    "callback": "/auth/oauth/twitter/callback"\n  }\n}\n````\n\nNote: The `/auth` prefix is configurable via an option in the module, but it is currently hard coded in the client component, so you probably don\'t want to change it. It will be configurable in future releases.\n\n## Getting Started\n\nCreate an `index.js` file in the root of your Next.js project containing the following:\n\n````javascript\nconst next = require(\'next\')\nconst nextAuth = require(\'next-auth\')\nconst nextAuthConfig = require(\'./next-auth.config\')\n\nrequire(\'dotenv\').load()\n\nconst nextApp = next({\n  dir: \'.\',\n  dev: (process.env.NODE_ENV === \'development\')\n})\n\nnextApp.prepare()\n.then(async () => {\n  const nextAuthOptions = await nextAuthConfig()\n  const nextAuthApp = await nextAuth(nextApp, nextAuthOptions)  \n  console.log(`Ready on http://localhost:${process.env.PORT || 3000}`)\n})\n.catch(err => {\n  console.log(\'An error occurred, unable to start the server\')\n  console.log(err)\n})\n````\n\nYou can add the following to your `package.json` file to start the project:\n\n````json\n"scripts": {\n  "dev": "NODE_ENV=development node index.js",\n  "build": "next build",\n  "start": "node index.js"\n}\n````\n\n## Pages\n\nYou will need to create following pages under `./pages/auth` in your project:\n\n* index.js \xe2\x80\x93 Sign In and Link/Unlink accounts\n* error.js \xe2\x80\x93 If an authentication error occurs\n* check-email.js \xe2\x80\x93 \'Check your email\' messsage\n* callback.js \xe2\x80\x93 Callback page; updates local session on sign in / sign out\n\nYou can [find examples of these](https://github.com/iaincollins/next-auth/tree/master/example) included which you can copy and paste into your project.\n\n## Configuration\n\nConfiguration can be split across three files to make it easier to understand and manage.\n\nYou can copy over the following configuration files into the root of your project to get started:\n\n* [next-auth.config.js](https://github.com/iaincollins/next-auth/tree/master/example/next-auth.config.js)\n* [next-auth.functions.js](https://github.com/iaincollins/next-auth/tree/master/example/next-auth.functions.js)\n* [next-auth.providers.js](https://github.com/iaincollins/next-auth/tree/master/example/next-auth.providers.js)\n\n\nYou can also add a **.env** file to the root of the project as a place to specify configuration options. The provided example files for NextAuth will use one if there is is one.\n\n````\nSERVER_URL=http://localhost:3000\nMONGO_URI=mongodb://localhost:27017/my-database\nFACEBOOK_ID=\nFACEBOOK_SECRET=\nGOOGLE_ID=\nGOOGLE_SECRET=\nTWITTER_KEY=\nTWITTER_SECRET=\nEMAIL_FROM=username@gmail.com\nEMAIL_SERVER=smtp.gmail.com\nEMAIL_PORT=465\nEMAIL_USERNAME=username@gmail.com\nEMAIL_PASSWORD=\n````\n\n### next-auth.config.js\n\nBasic configuration of NextAuth is handled in **next-auth.config.js**.\n\nIt is also where the **next-auth.functions.js** and **next-auth.providers.js** files are loaded.\n\n### next-auth.functions.js\n\nMethods for user management and sending email are defined in **next-auth.functions.js**\n\nThe example configuration provided is for Mongo DB. By defining the behaviour in these functions you can use NextAuth with any database, including a relational database that uses SQL.\n\n#### Required\n\n* find({id,email,emailToken,provider})\n* insert(user, oAuthProfile, providerParams)\n* update(user, oAuthProfile, providerParams)\n* remove(id)\n* serialize(user)\n* deserialize(id)\n\n#### Optional\n\n* sendSigninEmail({email, url, req})\n* signIn({form, req})\n\nThe `sendSigninEmail()` method is used to send an email for email token based sign in (one time use passwords). Omit it or set it to null to disable email based sign in.\n\nThe `signIn()` method is used to handle authenticating with custom credentials (e.g. username and password, 2FA token, etc). Omit it or leave it undefined unless you need it.\n\nYou can use any combination of authentication methods (email, credentials, oAuth providers).\n\n### next-auth.providers.js \n\nConfiguration for oAuth providers are defined in **next-auth.functions.js**\n\nIt includes configuration examples for Facebook, Google and Twitter oAuth, which can easily be copied and replicated to add support for signing in other oAuth providers.\n\nFor tips on configuring oAuth see [AUTHENTICATION.md](https://github.com/iaincollins/next-auth/tree/master/AUTHENTICATION.md).\n\n---- \n\nSee the included [example site](https://github.com/iaincollins/next-auth/tree/master/example) and the expanded example at [nextjs-starter.now.sh](https://nextjs-starter.now.sh/examples/authentication).\n'