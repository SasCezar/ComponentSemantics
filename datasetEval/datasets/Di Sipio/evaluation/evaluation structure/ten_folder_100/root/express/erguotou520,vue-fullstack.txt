b"![Logo](./assets/images/logo.png)\n# Vue fullstack template\n![](https://travis-ci.org/erguotou520/vue-fullstack.svg?branch=master)\n![MIT Licence](https://badges.frapsoft.com/os/mit/mit.svg?v=103)\n![vue version](https://img.shields.io/badge/vue-2.x-brightgreen.svg)\n\nThis project's goal is to help people create a **reactive, realtime and user friendly** backend system.:smirk:\n\n## Vue version\nThis template only support vue2, because it use `ElementUI` as the default ui library and `ElementUI` just support vue2.\n\n## Requirement\n- `Mongodb` This project requires `mongodb` as the database. You can follow [it's tutorial](https://docs.mongodb.com/manual/administration/install-community/) to install it if you haven't installed it already. In consideration of the recent [mongodb attack event](https://www.bleepingcomputer.com/news/security/mongodb-apocalypse-is-here-as-ransom-attacks-hit-10-000-servers/), it's highly recommend to enable auth and disable public login for your mongodb.\n- Basic `vue.js` skills\n\n## About mock and i18n\nIf you chose to use mock server or not use i18n at project initialization, you need to take a look at this description, else you can skip this step.  \nAs `vue-cli` does't support to run a task after initialization, you need to run `npm run remove:i18n`(*This script doesn't change the page view which contains `change locale` in `client/src/components/Header.vue` and `client/src/view/auth/Login.vue`, you can remove that code manually.*) and `npm run remove:mock` manually.\n\n## Usage\nThis is a project template for vue-cli. It is recommended to use npm 3+ for a more efficient dependency tree.\n```shell\n# cli version must be greater than 2.8.0\n$ npm install -g vue-cli\n$ vue init erguotou520/vue-fullstack my-project ## (important hint: don't use a dot in your project name, otherwise it will cause issues with mongodb)\n$ cd my-project\n$ npm install\n# If you chose to use mock server, you need to run remove:mock to change the file structure, otherwise just skip this step\n$ npm run remove:mock\n# If you chose not to use vue-i18n, you need to run remove:i18n to replace the files with default locale text, otherwise just skip this step\n$ npm run remove:i18n\n# If you chose to use real backend server, run this script to start an express server\n$ npm run server\n# If you chose to use mock server, run this script to start a mock server\n$ npm run mock\n# Open another terminal and cd into my-project\n# This runs a frontend dev server\n$ npm run client\n```\n\n## What's Included\n- `vue`\n- `vue-router`\n- `vuex`\n- `vue-i18n`\n- `vue-resource`\n- `element-ui`\n- `express`\n- `mongoose`\n- `socket.io`\n- `mock server`\n\n## Demo app\n~~* Here is a [demo](https://vue-fullstack-demo.herokuapp.com) and the demo repo is [here](https://github.com/erguotou520/vue-fullstack-demo)~~  \n~~* This is [another one](http://meals.erguotou.me)~~\n\nNow the demo apps are generated by ci automatically and pushed to `vf-backend`|`vf-mock` branches.\n- [Backend server demo](https://vf-backend.herokuapp.com)\n- [Mock server demo](https://vf-mock.herokuapp.com/)\n\n*Do not change the password please.*\n```\nusername: admin\npassword: admin\n```\n\n## App structure\n```\n\xe2\x94\x9c\xe2\x94\x80client               # frontend source folder\n\xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80build             # frontend dev scripts\n\xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80src               # frontend src\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80assets\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80css\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80fonts\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x94\xe2\x94\x80images\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80components     # vue components\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80http           # vue-resource configuration\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80locale         # vue-i18n configuration\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80router         # vue-router configuration\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80socket         # socket.io configuration\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80storage        # web storage api\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80store          # vuex store\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x94\xe2\x94\x80modules\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x94\xe2\x94\x80view           # app pages\n\xe2\x94\x82  \xe2\x94\x82     \xe2\x94\x94\xe2\x94\x80auth\n\xe2\x94\x82  \xe2\x94\x94\xe2\x94\x80static            # static folder\n\xe2\x94\x9c\xe2\x94\x80mock                 # mock server\n\xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80ajax              # ajax mock configs\n\xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80socket            # socket.io mock configs\n\xe2\x94\x94\xe2\x94\x80server               # backend server folder\n    \xe2\x94\x9c\xe2\x94\x80api              # backend api list\n    \xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80thing\n    \xe2\x94\x82  \xe2\x94\x94\xe2\x94\x80user\n    \xe2\x94\x9c\xe2\x94\x80auth             # user auth logical\n    \xe2\x94\x82  \xe2\x94\x94\xe2\x94\x80local\n    \xe2\x94\x9c\xe2\x94\x80components       # server components\n    \xe2\x94\x82  \xe2\x94\x94\xe2\x94\x80errors\n    \xe2\x94\x9c\xe2\x94\x80config           # server configs, contains express socket.io, etc.\n    \xe2\x94\x94\xe2\x94\x80views            # server served pages\n```\n\n## Configuration\nMost of the configuration is concentrated in the `config.js` file and most of them have explicit comments. You need to take a look at it first.\n\nHere are some important/frequently-used configurations:\n- `frontend.port` port that frontend server listens at\n- `backend.port` port that backend server listen at\n- `backend.secrets.session` secret for session, important when you deploy your app, make sure it's complex enough\n- `backend.mongo.uri` change this if your mongodb uri is not matched\n- `backend.serverFrontend` whether to server the frontend code. If set to `true` the express server serves the frontend code. Otherwise you may need a http server like nginx to serve frontend code and there is a nginx configuration at `nginx.example.conf` (default true)\n\n## Environment variables\nWhen you deploy your app to you cloud server it's easy to configure youre app with `environment variables`. Following are supported:  \n- `APP_port` or `PORT`: set to `backend.port`\n- `APP_HOST` or `APP_IP` or `HOST` or `IP`: set to `backend.ip`\n- `MONGODB_URI` or `MONGOHQ_URI`: set to `backend.mongo.uri`\n- `SECRET`: set to `backend.secrets.session`\n\n## Notice\nThe generated app is just a template to build your app system fast. Maybe it can't meet your needs, so you need to do some changes at this issue.\n\n## License\nUnder [MIT license](./LICENSE)\n\n## Reference resources\n- [generator-angular-fullstack](https://github.com/angular-fullstack/generator-angular-fullstack) most express code are copied from this repo :kissing_heart:\n- [ElementUI](http://element.eleme.io/) design page fast and easy :+1:\n\n## At the end\nI am very glad to receive your suggestions and pull request.\n"