b'# poosh\n\n> Publish local files to virtually any remote endpoint (AWS S3, etc.)\n\n[![npm version](https://img.shields.io/npm/v/poosh-cli.svg)](https://www.npmjs.com/package/poosh-cli)\n[![Travis Status](https://img.shields.io/travis/yvele/poosh/master.svg?label=travis)](https://travis-ci.org/yvele/poosh)\n[![Coverage Status](https://img.shields.io/codecov/c/github/yvele/poosh/master.svg)](https://codecov.io/github/yvele/poosh)\n[![MIT licensed](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)\n\n![poosh cli screenshot](media/screenshot-publish.png)\n\n\n## Short Example\n\nInstall [poosh CLI][poosh-cli] and [S3 plugin][poosh-plugin-s3]:\n\n```shell\n> npm install -g poosh-cli poosh-plugin-s3\n```\n\nCreate a `.poosh.json5` file at the root of your project:\n\n```json5\n{\n  plugins : ["s3"],\n  baseDir : "./deploy",\n  remote  : "s3-us-west-2.amazonaws.com/my-bucket",\n\n  each: [{\n    headers   : { "cache-control": { cacheable: "public" } }\n  }, {\n    match     : "**/*.{html,css,js}",\n    gzip      : true,\n    headers   : { "cache-control": { maxAge: "48 hours" } }\n  }, {\n    match     : "**/*.{jpg,png,gif,ico}",\n    gzip      : false,\n    headers   : { "cache-control": { maxAge: "1 year" } }\n  }, {\n    match     : "**/*.html",\n    priority  : -1\n  }]\n}\n```\n\nYou can now upload:\n\n```shell\n> poosh\n```\n\nOr sync if you want to delete remote files that has been locally removed:\n\n```shell\n> poosh sync\n```\n\n## Main Features\n\n[Glob Selection](#glob-selection) |\n[GZIP](#gzip) |\n[HTTP Headers](#http-headers) |\n[Upload Ordering](#upload-ordering) |\n[Automatic Redirection](#automatic-redirection) |\n[Cache](#cache) |\n[Simulation](#simulation)\n\nPoosh allow you to upload and sync local files to virtually any remote destination.\n\n### Glob Selection\n\nUsing the [match](#each) [option](#options),\nlocal files that needs to be uploaded can be selected and configured with a [glob] string:\n\n```json5\n{\n  each: [{\n    match: "**/*.html"\n  }]\n}\n```\n\nor an array of patterns\n\n```json5\n{\n  each: [{\n    match: ["*.*", "!*.txt"]\n  }]\n}\n```\n\nSome supported glob features are:\n\n| Feature | Example\n| ------- | --------\n| [Brace Expansion](https://github.com/jonschlinkert/braces) | `"foo/bar-{1..5}.html"`, `"one/{two,three}/four.html"`\n| Typical glob patterns | `"**/*"`, `"a/b/*.js"`\n| Logical OR | <code>"foo/bar/(abc&#124;xyz).js"</code> |\n| Regex character classes | `"foo/bar/baz-[1-5].jpg"`\n| POSIX [bracket expressions](https://github.com/jonschlinkert/expand-brackets) | `"**/[[:alpha:][:digit:]]/"`\n| [extglobs](https://github.com/jonschlinkert/extglob) | <code>"**/+(x&#124;y)"</code>, <code>"!(a&#124;b)"</code>, etc.\n\n### GZIP\n\nUsing the [GZIP](#each) [option](#options), files can be compressed at remote destination:\n\n```json5\n{\n  each: [{\n    match : "**/*.html",\n    gzip  : true\n  }]\n}\n```\n\n`content-encoding` HTTP header will accordingly be set to `gzip`.\n\n### HTTP Headers\n\nUsing the [headers](#headers) [option](#options),\nHTTP headers can be configured for each files:\n\n```json5\n{\n  each: [{\n    match : "**/*.html",\n    headers: {\n      "cache-control": {\n        maxAge      : "60 days",\n        cacheable   : "public",\n        noTransform : true,\n        immutable   : true\n      },\n      "content-disposition" : "attachment; filename=\\"foo.html\\"",\n      "content-encoding"    : "utf-8",\n      "content-language"    : "en-us",\n      "content-length"      : 500,\n      "content-md5"         : "Q2hlY2sgSW50ZWdyaXR5IQ==",\n      "content-type"        : "text/html; charset=utf-8",\n      "expires"             : "0",\n      "location"            : "http://www.zombo.com"\n    }\n  }]\n}\n```\n\n`content-encoding`, `content-length` and `content-type` HTTP headers are automatically generated by default.\n\n### Upload Ordering\n\nSometimes some files must be uploaded before other ones to avoid inconsistency.\nThe [priority](#each) [option](#options) can be used to order uploads:\n\n```json5\n{\n  each: [{\n    match     : "**/*.html",\n    priority  : -1\n  }]\n}\n```\n\nGreatest values are uploaded first.\n\n### Automatic Redirection\n\nUsing the [header-location-from-html](packages/poosh-plugin-header-location-from-html) plugin,\nthe `location` HTTP header can be automatically generated from a file HTML [http-equiv](http://www.w3schools.com/tags/att_meta_http_equiv.asp) meta tag.\n\nFirst install the plugin:\n\n```shell\n> npm install -g poosh-plugin-header-location-from-html\n```\n\nAnd then use it in your configuration file:\n\n```json5\n{\n  plugins: ["header-location-from-html"],\n  each: [{\n    match     : "**/*.html",\n    headers   : { location: { fromContent: true } }\n  }]\n}\n```\n\n### Cache\n\nWhen local files are processed, a `.poosh.cache` file is generated next to the `.poosh.json5` configuration file.\n\nConsecutive runs of poosh will use this file to avoid unnecessary remote requests.\n\n[Poosh CLI][poosh-cli] can be used with the `--force` options to bypass cache lookup:\n\n```shell\n> poosh --force cache\n```\n\nThe cache file is written after each individual file processing\n(using the great [NeDB append-only format](https://github.com/louischatriot/nedb#persistence)).\nCache file stores 3 separate hash keys for each processed local file:\n  - File content hash key\n  - HTTP headers hash key\n  - Remote options hash key\n\nThis is useful to poosh to detect distinctive local changes in either file content, HTTP headers and remote options.\n\n### Simulation\n\nUsing the [CLI][poosh-cli] `--dry-run` or `--read-only` options,\nno changes will be maid while output still showing potential changes:\n\n```shell\n> poosh --dry-run\n```\n\nor\n\n```shell\n> poosh sync --dry-run\n```\n\n## Options\n\n| Option       | Default | Description\n| ------------ | ------- | -------------\n| plugins      | `[]`    | List of plugins to load and use. A single plugin is designed by it\'s package name (with or without it\'s `poosh-plugin-` prefix).\n| baseDir      | `null`  | The base directory of local files. This path can either be absolute or relative (to the configuration file).\n| remote       | `null`  | The remote client or a key/value map of remote clients to use for processing files. See your remote plugin documentation for more information (e.g. [S3 Plugin][poosh-plugin-s3]).\n| concurrency  | `3`     | File processing concurrency.\n| each         | `[]`    | List of items used to select and process local files. Available options are described in the [each section](#each).\n| ignore       | `[]`    | List of [glob] strings identifying files to totally ignore (prevent files to be created, updated or deleted).\n\n### Each\n\nAll "each" items are applied to files **in order**. Same options are overridden by the last one.\n\n| Option       | Default     | Description\n| ------------ | ----------- | -------------\n| match        | `null`      | A [glob] string used to match files. If not specified, other options are applied to all files without marking them "to be processed".\n| priority     | `null`      | Greatest values are processed first.\n| gzip         | `false`     | If true, will gzip the file in remote destination.\n| headers      | `[]`        | List of [headers options](#headers).\n| remote       | `"default"` | The [key of the remote client](#options) to use. Or an object with an `id` key and some other ones that will define specific remote client options.\n\n### Headers\n\nOptions used to control file\'s HTTP headers.\n\n<table>\n  <tr>\n    <th>Option</th>\n    <th>Default</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>cache-control</td>\n    <td><code>null</code></td>\n    <td>\n      String or object. The object can be a combination of the following keys:\n      <ul>\n        <li>\n          <strong>maxAge</strong>:\n          A number (of seconds) or a string that will be parsed by\n          <a href="https://github.com/rauchg/ms.js">ms</a>.\n          For example\n          <code>"60 days"</code>,\n          <code>"2.5 hours"</code>,\n          <code>"1 year"</code>,\n          <code>"35 minutes"</code>,\n          etc.\n        </li>\n        <li>\n          <strong>cacheable</strong>:\n          Can be one of the following values:\n          <code>null</code>,\n          <code>"public"</code>,\n          <code>"private"</code>,\n          <code>"no-cache"</code>.\n          </li>\n        <li>\n          <strong>noTransform</strong>:\n          Boolean.\n        </li>\n      </ul>\n      All those keys are <code>null</code> by default.\n    </td>\n  </tr>\n  <tr>\n    <td>content-disposition</td>\n    <td><code>null</code></td>\n    <td>String.</td>\n  </tr>\n  <tr>\n    <td>content-encoding</td>\n    <td><code>null</code></td>\n    <td>\n      Content encoding header is automatically generated at runtime.\n      Using this option will force the header to the specified value.\n    </td>\n  </tr>\n  <tr>\n    <td>content-language</td>\n    <td><code>null</code></td>\n    <td>String.</td>\n  </tr>\n  <tr>\n    <td>content-length</td>\n    <td><code>null</code></td>\n    <td>\n      Number.\n      Content length header is automatically generated at runtime.\n      Using this option will force the header to the specified value.\n    </td>\n  </tr>\n  <tr>\n    <td>content-md5</td>\n    <td><code>null</code></td>\n    <td>String.</td>\n  </tr>\n  <tr>\n    <td>content-type</td>\n    <td><code>null</code></td>\n    <td>\n      Content type header is automatically generated at runtime.\n      Using this option will force the header to the specified value.\n    </td>\n  </tr>\n  <tr>\n    <td>expires</td>\n    <td><code>null</code></td>\n    <td>String.</td>\n  </tr>\n  <tr>\n    <td>location</td>\n    <td><code>null</code></td>\n    <td>String.</td>\n  </tr>\n</table>\n\n[glob]: https://github.com/jonschlinkert/micromatch#features\n[poosh-cli]: packages/poosh-cli\n[poosh-plugin-s3]: packages/poosh-plugin-s3\n'