b'# DITA Open Toolkit Docs [![Build Status][1]](http://travis-ci.org/dita-ot/docs) [![Slack][2]](http://slack.dita-ot.org/)\n\nThis repository tracks the [documentation][3] source files for the [DITA Open Toolkit project][4].\n\n## Contribution Guidelines\n\nWe welcome contributions to the DITA-OT documentation. Please review the [guidelines for contributing][5] to this repository before creating issues or opening pull requests.\n\nFor best results, follow the [coding guidelines][6] and [best practices][7] outlined in the docs project wiki:\n\n- [Test before committing][8]\n- [Commit related changes][9]\n- [Commit often][10]\n- [Write good commit messages][11]\n- [Sign your work][12]\n\n## Building the documentation output\n\n\xe2\x9a\xa0\xef\xb8\x8f **Important:** The maps in this repository contain references to additional topics that are created at build time from the toolkit\xe2\x80\x99s plug-in configuration.\n\nTo generate the missing topics and build the HTML and PDF versions of the documentation, run the Gradle build script from the root level of the `docs` repository and pass the path to your DITA-OT installation as a parameter.\n\n### Prerequisites\n\nYou must have a JRE and a local installation of DITA-OT. There is no need to download and install Gradle.\n\n### Steps\n\n1. Open a command prompt, and change to the location of your local repository for the documentation source.\n2. Type a variant of the following command for your operating system, adjust the path to your DITA-OT installation, and press <kbd>Enter</kbd>:\n\n    - On Linux or macOS, use `./gradlew`:\n\n          ./gradlew -PditaHome=/path/to/dita-ot\n\n    - On **Windows**, use `gradlew.bat`:\n\n          gradlew.bat -PditaHome=C:\\path\\to\\dita-ot\n\n    <details>\n    <summary>Using a `dita-ot` repository clone</summary>\n\n    - If you\xe2\x80\x99re using a clone of the [DITA-OT development repository][13] as your toolkit installation alongside your clone of the docs repository, run the build script on **Linux** or **macOS** like this:\n\n            ./gradlew -PditaHome=../dita-ot/src/main\n\n    - You can also specify a single output format. To build HTML output, enter the following on the command line:\n\n            ./gradlew -PditaHome=../dita-ot/src/main html\n\n    </details>\n\n### Results\n\nIf all goes well, you receive a "BUILD SUCCESSFUL" message, and the generated DITA topics are written to the `extension-points` and `parameters` directories in the `out` folder of the `docs` repository.\n\nThis folder is created automatically if it doesn\xe2\x80\x99t exist. _(Git ignores the contents so you don\xe2\x80\x99t inadvertently commit these transient output files.)_\n\n## Building with development versions of DITA Open Toolkit\n\nThe `develop` branch of the documentation repository may depend on features from recent development versions of DITA Open Toolkit.\n\nTo use these features when building the documentation, you may either download the [latest development version][14] of the distribution package, or clone the [DITA-OT repository][13] and install the [bundled plug-ins][15] via `dita --install`.\n\n[1]: https://travis-ci.org/dita-ot/docs.svg?branch=develop\n[2]: http://slack.dita-ot.org/badge.svg\n[3]: https://www.dita-ot.org/dev/\n[4]: https://www.dita-ot.org\n[5]: .github/CONTRIBUTING.md\n[6]: https://github.com/dita-ot/docs/wiki/Coding-guidelines\n[7]: https://github.com/dita-ot/docs/wiki/Git-workflow#best-practices\n[8]: https://github.com/dita-ot/docs/wiki/Git-workflow#test-before-committing\n[9]: https://github.com/dita-ot/docs/wiki/Git-workflow#commit-related-changes\n[10]: https://github.com/dita-ot/docs/wiki/Git-workflow#commit-often\n[11]: https://github.com/dita-ot/docs/wiki/Git-workflow#writing-good-commit-messages\n[12]: https://www.dita-ot.org/DCO\n[13]: https://github.com/dita-ot/dita-ot\n[14]: https://s3-eu-west-1.amazonaws.com/dita-ot/dita-ot-develop.zip\n[15]: https://github.com/dita-ot/dita-ot/blob/develop/build.gradle#L169-L176\n'