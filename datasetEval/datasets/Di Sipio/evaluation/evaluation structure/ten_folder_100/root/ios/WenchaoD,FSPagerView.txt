b'![fspagerview](https://cloud.githubusercontent.com/assets/5186464/24086370/45e7e8dc-0d49-11e7-86aa-139354fe00c5.jpg)\n\n[![Languages](https://img.shields.io/badge/language-swift%205.0%20|%20objc-FF69B4.svg?style=plastic)](#) <br/>\n[![Platform](https://img.shields.io/badge/platform-iOS%20|%20tvOS-blue.svg?style=plastic)](http://cocoadocs.org/docsets/FSPagerView)\n[![Version](https://img.shields.io/cocoapods/v/FSPagerView.svg?style=plastic)](http://cocoadocs.org/docsets/FSPagerView) \n[![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=plastic)](https://github.com/Carthage/Carthage)\n[![SPM compatible](https://img.shields.io/badge/SPM-compatible-FF9966.svg?style=plastic)](https://swift.org/package-manager/)\n\n|<b>SWIFT</b>|[<b>OBJECTIVE-C</b>](https://github.com/WenchaoD/FSPagerView/blob/master/README-OBJECTIVE-C.md) |\n|---|---|\n\n**FSPagerView** is an elegant Screen Slide Library implemented primarily with ***UICollectionView***. It is extremely helpful for making Banner\xe3\x80\x81Product Show\xe3\x80\x81Welcome/Guide Pages\xe3\x80\x81Screen/ViewController Sliders.\n\n## Features\n*  ***Infinite*** scrolling.\n*  ***Automatic*** Sliding.\n*  ***Horizontal*** and ***Vertical*** paging.\n*  Fully customizable item, with predefined banner-style item.\n*  Fully customizable ***page control***.\n*  Rich build-in 3D transformers.\n*  ***Simple*** and ***Delightful*** api usage.\n*  Support **SWIFT** and **OBJECTIVE-C**.\n\n## Demos\n* [Demo1 - Banner](#banner)\n* [Demo2 - Transformer](#transformer)\n* [Demo3 - Page Control](#page_control)\n\n### Demo1 - Banner <a id="banner"></a>\n\n| Banner |\n|---|\n|![9](https://cloud.githubusercontent.com/assets/5186464/22688057/9003d880-ed65-11e6-882e-4587c97c8878.gif) |\n\n### automaticSlidingInterval\nThe time interval of automatic sliding. 0 means disabling automatic sliding. Default is 0.\n\n**e.g.**\n\n```swift\npagerView.automaticSlidingInterval = 3.0\n```\n\n\n### isInfinite\nA boolean value indicates whether the pager view has infinite number of items. Default is false.\n\n**e.g.**\n\n```swift\npagerView.isInfinite = true\n```\n\n### decelerationDistance\nAn unsigned integer value that determines the paging distance of the pager view, which indicates the number of passing items during the deceleration. When the value of this property is FSPagerView.automaticDistance, the actual \'distance\' is automatically calculated according to the scrolling speed of the pager view. Default is 1.\n\n**e.g.**\n\n```swift\npagerView.decelerationDistance = 2\n```\n\n### itemSize\nThe item size of the pager view. When the value of this property is FSPagerView.automaticSize, the items fill the entire visible area of the pager view. Default is FSPagerView.automaticSize.\n\n**e.g.**\n\n```swift\npagerView.itemSize = CGSize(width: 200, height: 180)\n```\n\n### interitemSpacing\nThe spacing to use between items in the pager view. Default is 0.\n\n**e.g.**\n\n```swift\npagerView.interitemSpacing = 10\n```\n\n## Demo2 - Transformers\n\n|Cross Fading|\n|---|\n| ![1](https://cloud.githubusercontent.com/assets/5186464/22686429/1983b97e-ed5f-11e6-9a32-44c1830df7ac.gif) |\n\n```swift\npagerView.transformer = FSPagerViewTransformer(type: .crossfading)\n```\n---\n\n\n\n|Zoom Out|\n|---|\n| ![2](https://cloud.githubusercontent.com/assets/5186464/22686426/19830862-ed5f-11e6-90be-8fb1319cd125.gif) |\n\n```swift\npagerView.transformer = FSPagerViewTransformer(type: .zoomout)\n```\n---\n\n\n|Depth|\n|---|\n| ![3](https://cloud.githubusercontent.com/assets/5186464/22686430/19856c1a-ed5f-11e6-8187-9e4395b7597c.gif) |\n\n```swift\npagerView.transformer = FSPagerViewTransformer(type: .depth)\n```\n---\n\n\n|Linear|\n|---|\n| ![4](https://cloud.githubusercontent.com/assets/5186464/22686428/198368c0-ed5f-11e6-95df-cfcfe9bc3f29.gif) |\n\n```swift\npagerView.transformer = FSPagerViewTransformer(type: .linear)\n```\n---\n\n\n|Overlap|\n|---|\n| ![5](https://cloud.githubusercontent.com/assets/5186464/22686431/198905aa-ed5f-11e6-9312-ec371c8c4e44.gif) |\n\n```swift\npagerView.transformer = FSPagerViewTransformer(type: .overlap)\n```\n---\n\n\n|Ferris Wheel|\n|------|\n| ![6](https://cloud.githubusercontent.com/assets/5186464/22686427/19831c08-ed5f-11e6-8bdb-30e762a85d4b.gif) |\n\n```swift\npagerView.transformer = FSPagerViewTransformer(type: .ferrisWheel)\n```\n---\n\n\n|Inverted Ferris Wheel|\n|------|\n| ![7](https://cloud.githubusercontent.com/assets/5186464/22686433/19b669a0-ed5f-11e6-8bf0-dc23edf8101f.gif) |\n\n```swift\npagerView.transformer = FSPagerViewTransformer(type: .invertedFerrisWheel)\n```\n---\n\n\n|Cover Flow|\n|------|\n| ![8](https://cloud.githubusercontent.com/assets/5186464/22686432/19b567f8-ed5f-11e6-885d-bd660c98b507.gif) |\n```swift\npagerView.transformer = FSPagerViewTransformer(type: .coverFlow)\n```\n---\n\n|Cubic|\n|------|\n| ![9](https://cloud.githubusercontent.com/assets/5186464/23461598/8875080c-fec5-11e6-8db6-6d8864acfcc1.gif) |\n```swift\npagerView.transformer = FSPagerViewTransformer(type: .cubic)\n```\n---\n\n\n\n> Customize your own transformer by subclassing`FSPagerViewTransformer.`\n\n\n## Demo3 Page Control\n|Page Control|\n|---|\n|![10](https://cloud.githubusercontent.com/assets/5186464/22689720/2baabdb0-ed6d-11e6-8287-ef7a2c0f64bc.gif)\n|\n\n### numberOfPages\nThe number of page indicators of the page control. Default is 0.\n\n**e.g.**\n\n```swift\npageControl.numberOfPages = 5\n```\n\n### currentPage\nThe current page, highlighted by the page control. Default is 0.\n\n**e.g.**\n\n```swift\npageControl.currentPage = 1\n```\n\n### contentHorizontalAlignment\nThe horizontal alignment of content within the control\xe2\x80\x99s bounds. Default is center.\n\n**e.g.**\n```swift\npageControl.contentHorizontalAlignment = .right\n```\n\n### setStrokeColor:forState:\nSets the stroke color for page indicators to use for the specified state. (selected/normal).\n\n**e.g.**\n\n```swift\npageControl.setStrokeColor(.green, for: .normal)\npageControl.setStrokeColor(.yellow, for: .selected)\n```\n\n\n### setFillColor:forState:\nSets the fill color for page indicators to use for the specified state. (selected/normal).\n\n**e.g.**\n\n```swift\npageControl.setFillColor(.gray, for: .normal)\npageControl.setFillColor(.white, for: .selected)\n```\n\n### setImage:forState:\nSets the image for page indicators to use for the specified state. (selected/normal).\n\n**e.g.**\n\n```swift\npageControl.setImage(UIImage(named:"image1"), for: .normal)\npageControl.setImage(UIImage(named:"image2"), for: .selected)\n```\n\n### setPath:forState:\nSets the path for page indicators to use for the specified state. (selected/normal).\n\n**e.g.**\n\n```swift\npageControl.setPath(UIBezierPath(rect: CGRect(x: 0, y: 0, width: 8, height: 8)), for: .normal)\npageControl.setPath(UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 8, height: 8)), for: .selected)\n```\n\n## Installation\n* Manually\n* Cocoapods\n* Carthage\n\n### Manually\n1. ***[Download](#)*** the source code.\n2. Extract the zip file, simply drag folder ***Sources*** into your project.\n3. Make sure ***Copy items if needed*** is checked.\n\n### Cocoapods\n```ruby\nuse_frameworks!\ntarget \'<Your Target Name>\' do\n    pod \'FSPagerView\'\nend\n```\n\n### Carthage\n```ruby\ngithub "WenchaoD/FSPagerView"\n```\n\n## Tutorial\n* [Getting started](#getting_started)\n* [Implement FSPagerViewDataSource](#implement_fspagerviewdatasource)\n* [Implement FSPagerViewDelegate](#implement_fspagerviewdelegate)\n\n### 1. Getting started <a id=\'getting_started\'></a>\n\n* Getting started with code\n\n```swift\n// Create a pager view\nlet pagerView = FSPagerView(frame: frame1)\npagerView.dataSource = self\npagerView.delegate = self\npagerView.register(FSPagerViewCell.self, forCellWithReuseIdentifier: "cell")\nself.view.addSubview(pagerView)\n// Create a page control\nlet pageControl = FSPageControl(frame: frame2)\nself.view.addSubview(pageControl)\n```\n\n* Getting started with Interface Builder <br/>\n1\xe3\x80\x81Simply drag **UIView** instance into your View Controller, Change the `Custom Class` to `FSPagerView`. (Or `FSPageControl`) <br/>\n2\xe3\x80\x81Link the `dataSource` and `delegate` property of **FSPagerView** to your View Controller. <br/>\n3\xe3\x80\x81Register a cell class.\n\n```swift\n@IBOutlet weak var pagerView: FSPagerView! {\n    didSet {\n        self.pagerView.register(FSPagerViewCell.self, forCellWithReuseIdentifier: "cell")\n    }\n}\n```\n\n\n### 2. Implement FSPagerViewDataSource <a id=\'implement_fspagerviewdatasource\'></a>\n```swift\npublic func numberOfItems(in pagerView: FSPagerView) -> Int {\n    return numberOfItems\n}\n    \npublic func pagerView(_ pagerView: FSPagerView, cellForItemAt index: Int) -> FSPagerViewCell {\n    let cell = pagerView.dequeueReusableCell(withReuseIdentifier: "cell", at: index)\n    cell.imageView?.image = ...\n    cell.textLabel?.text = ...\n    return cell\n}\n```\n\n### 3. Implement FSPagerViewDelegate <a id=\'implement_fspagerviewdelegate\'></a>\n\n```swift\nfunc pagerView(_ pagerView: FSPagerView, shouldHighlightItemAt index: Int) -> Bool\n```\n> Asks the delegate if the item should be highlighted during tracking.\n\n---\n\n```swift\nfunc pagerView(_ pagerView: FSPagerView, didHighlightItemAt index: Int)\n```\n> Tells the delegate that the item at the specified index was highlighted.\n    \n---\n    \n```swift\nfunc pagerView(_ pagerView: FSPagerView, shouldSelectItemAt index: Int) -> Bool\n```\n> Asks the delegate if the specified item should be selected.\n    \n---\n    \n```swift\nfunc pagerView(_ pagerView: FSPagerView, didSelectItemAt index: Int)\n```\n> Tells the delegate that the item at the specified index was selected.\n    \n---\n    \n```swift\nfunc pagerView(_ pagerView: FSPagerView, willDisplay cell: FSPagerViewCell, forItemAt index: Int)\n```\n> Tells the delegate that the specified cell is about to be displayed in the pager view.\n    \n---\n    \n```swift\nfunc pagerView(_ pagerView: FSPagerView, didEndDisplaying cell: FSPagerViewCell, forItemAt index: Int)\n```\n> Tells the delegate that the specified cell was removed from the pager view.\n    \n---\n    \n```swift\nfunc pagerViewWillBeginDragging(_ pagerView: FSPagerView)\n```\n> Tells the delegate when the pager view is about to start scrolling the content.\n    \n---\n    \n```swift\nfunc pagerViewWillEndDragging(_ pagerView: FSPagerView, targetIndex: Int)\n```\n> Tells the delegate when the user finishes scrolling the content.\n    \n---\n    \n```swift\nfunc pagerViewDidScroll(_ pagerView: FSPagerView)\n```\n> Tells the delegate when the user scrolls the content view within the receiver.\n    \n---\n    \n```swift\nfunc pagerViewDidEndScrollAnimation(_ pagerView: FSPagerView)\n```\n> Tells the delegate when a scrolling animation in the pager view concludes.\n    \n---\n    \n```swift\nfunc pagerViewDidEndDecelerating(_ pagerView: FSPagerView)\n```\n> Tells the delegate that the pager view has ended decelerating the scrolling movement.\n\n---\n\n## <a id="support"></a>Support this repo\n* ***Star*** this repo <a href="#"><img style="margin-bottom:-12px" width="72" alt="star" src="https://cloud.githubusercontent.com/assets/5186464/15383105/fcf9cdf0-1dc2-11e6-88db-bf221042a584.png"></a>\n<br/>\n\n* Buy me a Coffee. \xe2\x98\x95\xef\xb8\x8f \n   \n   <a href="https://www.paypal.me/WenchaoD" target="_blank"><img src="https://www.paypalobjects.com/webstatic/i/logo/rebrand/ppcom.svg" width="100" height="40" style="margin-bottom:-15px;"></a> &nbsp;&nbsp;|&nbsp;&nbsp;\n\t<a href="https://user-images.githubusercontent.com/5186464/45949944-46960480-c030-11e8-9e90-30b015698cf6.png" target="_blank"><img src="http://a1.mzstatic.com/us/r30/Purple49/v4/50/16/b3/5016b341-39c1-b47b-2994-d7e23823baed/icon175x175.png" width="40" height="40" style="margin-bottom:-15px;-webkit-border-radius:10px;border:1px solid rgba(30, 154, 236, 1);"></a> &nbsp;&nbsp;|&nbsp;&nbsp;\n\t<a href="https://cloud.githubusercontent.com/assets/5186464/15096872/b06f3a3a-153c-11e6-89f9-2e9c7b88ef42.png" target="_blank"><img src="http://a4.mzstatic.com/us/r30/Purple49/v4/23/31/14/233114f8-2e8d-7b63-8dc5-85d29893061e/icon175x175.jpeg" height="40" width="40" style="margin-bottom:-15px; -webkit-border-radius: 10px;border:1px solid rgba(43, 177, 0, 1)"></a>\n\n--- \n\t\n\t\n## Author\n* ***\xe5\xbe\xae\xe5\x8d\x9a\xef\xbc\x9a[@WenchaoD](http://weibo.com/WenchaoD)***\n* ***Twitter: [@WenchaoD](https://twitter.com/WenchaoD)***\n* Other repos: \n\t* [***FSCalendar***](https://github.com/WenchaoD)\n\n---\n\n# [Documentation](http://cocoadocs.org/docsets/FSPagerView)\n'