b'# Bagel\n![Bagel](https://github.com/yagiz/Bagel/blob/master/assets/header.png?raw=true)\n<p align="center">\n    <a href="https://github.com/CocoaPods/CocoaPods" alt="CocoaPods">\n        <img src="https://img.shields.io/badge/CocoaPods-compatible-4BC51D.svg?style=flat" /></a>\n    <a href="https://github.com/Carthage/Carthage" alt="Carthage">\n        <img src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" /></a>\n    <a href="https://github.com/JamitLabs/Accio" alt="Accio">\n        <img src="https://img.shields.io/badge/Accio-supported-0A7CF5.svg?style=flat" /></a>\n    <a href="https://github.com/yagiz/Bagel/releases" alt="Version">\n        <img src="https://img.shields.io/github/release/yagiz/Bagel.svg" /></a>\n</p>\n\nBagel is a little native iOS network debugger. It\'s not a proxy debugger so you don\'t have to mess around with certificates, proxy settings etc. As long as your iOS devices and your Mac are in the same network, you can view the network traffic of your apps seperated by the devices or simulators.\n\n## Preview\n![Bagel](https://github.com/yagiz/Bagel/blob/develop/assets/screenshot.png?raw=true)\n## Installation\n#### Install Mac App\n- Clone the repo.\n- Install pods.\n- Build and archive the project.\n#### Install iOS Client\n#### CocoaPods\n```shhttps://img.shields.io/badge/version-1.3.1-blue.svg?style=flat\npod \'Bagel\', \'~>  1.3.2\'\n```\n##### Carthage\n```sh\ngithub "yagiz/Bagel" "1.3.2"\n```\n##### Accio\n```swift\n.package(url: "https://github.com/yagiz/Bagel.git", .upToNextMajor(from: "1.3.2")),\n```\n\n### Usage\nMost basic usage is to start Bagel iOS before any network operation. \n```swift\n//import Bagel\nBagel.start()\n```\nSince Bagel exposes every request info to the public it would be better if you disable it for the store versions. You can use the below snippet to do it:\n```swift\n//import Bagel\n#if DEBUG\nBagel.start()\n#endif\n```\n\n###  Configuring Bagel\nBy default, Bagel gets your project name and device information. Desktop client uses these informations to separate projects and devices. You can configure these if you wish:\n```swift\nlet bagelConfig = BagelConfiguration()\n\nbagelConfig.project.projectName = "Custom Project Name"\nbagelConfig.device.deviceName = "Custom Device Name"\nbagelConfig.device.deviceDescription = "Custom Device Description"\n\nBagel.start(bagelConfig)\n```\nBagel framework communicates with the desktop client by using Bonjour protocol. You can also configure these Netservice parameters. Default values are:\n\n```swift\nlet bagelConfig = BagelConfiguration()\n\nbagelConfig.netservicePort = 43434\nbagelConfig.netserviceDomain = ""\nbagelConfig.netserviceType = "_Bagel._tcp"\nbagelConfig.netserviceName = ""\n\nBagel.start(bagelConfig)\n```\nIf you change Netservice parameters in your app, you should also change them on desktop client.\n\nLicense\n----\nApache\n'