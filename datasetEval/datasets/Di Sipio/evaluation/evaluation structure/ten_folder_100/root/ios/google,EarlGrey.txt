b'# EarlGrey\n[![Apache License](https://img.shields.io/badge/license-Apache%202-lightgrey.svg?style=flat)](https://github.com/google/EarlGrey/blob/master/LICENSE)\n[![CC-BY 4.0 License](https://img.shields.io/badge/license-CC%20BY%204.0-lightgrey.svg)](https://github.com/google/EarlGrey/blob/master/LICENSE)\n[![Build Status](https://travis-ci.org/google/EarlGrey.svg?branch=master)](https://travis-ci.org/google/EarlGrey)\n[![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)\n[![CocoaPods](https://img.shields.io/cocoapods/v/EarlGrey.svg?maxAge=2592000)](https://cocoapods.org/pods/EarlGrey)\n[![Gem Version](https://badge.fury.io/rb/earlgrey.svg)](https://rubygems.org/gems/earlgrey)\n\nEarlGrey is a native iOS UI automation test framework that enables you to write\nclear, concise tests.\n\nWith the EarlGrey framework, you have access to enhanced synchronization\nfeatures. EarlGrey automatically synchronizes with the UI, network requests,\nand various queues; but still allows you to manually implement customized\ntimings, if needed.\n\nEarlGrey\xe2\x80\x99s synchronization features help to ensure that the UI is in a steady\nstate before actions are performed. This greatly increases test stability and\nmakes tests highly repeatable.\n\nEarlGrey works in conjunction with the XCTest framework and integrates with\nXcode\xe2\x80\x99s Test Navigator so you can run tests directly from Xcode or the command\nline (using xcodebuild).\n\n## Getting Started\n\nThe EarlGrey documentation for users is located in the\n[EarlGrey/docs](https://github.com/google/EarlGrey/tree/master/docs) folder.\nTo get started, review the EarlGrey features, check for backward compatibility,\nand then install/run EarlGrey with your test target. After everything is\nconfigured, take a look at the EarlGrey API and start writing your own tests.\n\n  * [Features](https://github.com/google/EarlGrey/tree/master/docs/features.md)\n  * [Backward Compatibility](https://github.com/google/EarlGrey/tree/master/docs/backward-compatibility.md)\n  * [Install and Run](https://github.com/google/EarlGrey/tree/master/docs/install-and-run.md)\n  * [API](https://github.com/google/EarlGrey/tree/master/docs/api.md)\n  * [Cheat Sheet](https://github.com/google/EarlGrey/tree/master/docs/cheatsheet/cheatsheet.png)\n\n## Getting Help\n\nIf you need help, several resources are available. First check the [FAQ](https://github.com/google/EarlGrey/tree/master/docs/faq.md).\nIf you have more questions after reading the FAQ, see [Known Issues](https://github.com/google/EarlGrey/tree/master/docs/known-issues.md).\nYou can bring more specific issues to our attention by asking them on\n[stackoverflow.com](http://stackoverflow.com/) using the [#earlgrey tag](http://stackoverflow.com/questions/tagged/earlgrey).\nYou can also start new discussions with us on our [Google group](https://groups.google.com/forum/#!forum/earlgrey-discuss)\nor request to join our [slack channel](https://googleoss.slack.com/messages/earlgrey).\n\n  * [FAQ - Frequently Asked Questions](https://github.com/google/EarlGrey/tree/master/docs/faq.md)\n  * [IFAQ - Infrequently Asked Questions](https://github.com/google/EarlGrey/tree/master/docs/ifaq.md)\n  * [Known Issues](https://github.com/google/EarlGrey/tree/master/docs/known-issues.md)\n  * [Stack Overflow](http://stackoverflow.com/questions/tagged/earlgrey)\n  * [Slack](https://googleoss.slack.com/messages/earlgrey)\n  * [Google Group](https://groups.google.com/forum/#!forum/earlgrey-discuss)\n\n## Analytics\n\nTo prioritize and improve EarlGrey, the framework collects usage data and\nuploads it to Google Analytics. More specifically, the framework collects the\n**MD5 hash** of *Bundle ID*,  *Test Class Names* and *Test Method Names*. This\ninformation allows us to measure the volume of usage. For more detailed\ninformation about our analytics collection, please peruse the\n[GREYAnalytics.m](https://github.com/google/EarlGrey/tree/master/EarlGrey/Common/GREYAnalytics.m)\nfile which contains the implementation details. If they wish, users can choose\nto opt out by disabling the Analytics config setting in their test\xe2\x80\x99s\n`- (void)setUp` method:\n\nIn Objective-C:\n\n```objc\n// Disable analytics.\n[[GREYConfiguration sharedInstance] setValue:@(NO) forConfigKey:kGREYConfigKeyAnalyticsEnabled];\n```\n\nIn Swift:\n\n```swift\n// Disable analytics.\nGREYConfiguration.sharedInstance().setValue(false, forConfigKey: kGREYConfigKeyAnalyticsEnabled)\n```\n\n## For Contributors\n\nPlease make sure you\xe2\x80\x99ve followed the guidelines in\n[CONTRIBUTING.md](https://github.com/google/EarlGrey/tree/master/CONTRIBUTING.md) before making any contributions.\n\n### Setup an EarlGrey Project\n\n  1. Clone the EarlGrey repository from GitHub:\n\n    git clone https://github.com/google/EarlGrey.git\n\n  2. After you have cloned the EarlGrey repository, download all the dependencies\nusing [**setup-earlgrey.sh**](https://github.com/google/EarlGrey/tree/master/Scripts/setup-earlgrey.sh).\n  3. After the script completes successfully, open `EarlGrey.xcodeproj` and ensure that all\nthe targets build.\n  4. You can now use `EarlGrey.xcodeproj` to make changes to the framework.\n\n### Add and Run Tests\n\n#### Unit Tests\n\nTo add unit tests for EarlGrey, use `UnitTests.xcodeproj` located at\n`Tests/UnitTests`. To run all unit tests, select the **UnitTests** Scheme and press Cmd+U.\n\n#### Functional Tests\n\nTo add functional tests for EarlGrey, use the `FunctionalTests.xcodeproj` located\nat `Tests/FunctionalTests`. To run all functional tests, select the **FunctionalTests** Scheme and press Cmd+U.\n'