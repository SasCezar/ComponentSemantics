b'<p align="center">\n<img src="./Resources/banner_new.svg"/>\n</p>\n\n<p align="center">\n    <img src="https://img.shields.io/badge/Swift-4.2-orange.svg" />\n        <img src="https://img.shields.io/badge/Platforms-iOS%20%7C%20tvOS-blue.svg?style=flat" />\n        <img src="https://img.shields.io/cocoapods/dt/ViewAnimator.svg?style=flat"/>\n    <a href="https://cocoapods.org/pods/ViewAnimator">\n        <img src="https://img.shields.io/cocoapods/v/ViewAnimator.svg" alt="CocoaPods" />\n    </a>\n    <a href="https://github.com/Carthage/Carthage">\n        <img src="https://img.shields.io/badge/carthage-compatible-4BC51D.svg?style=flat" alt="Carthage" />\n    </a>\n    <a href="https://codebeat.co/projects/github-com-marcosgriselli-viewanimator-master">\n      <img src="https://codebeat.co/badges/633fb33d-66b6-4034-93c0-0f52c5d0e15c" alt="Codebeat" />\n    </a>\n    <a href="https://opensource.org/licenses/MIT">\n      <img src="https://img.shields.io/cocoapods/l/ViewAnimator.svg?style=flat" alt="License" />\n    </a>\n</p>\n\n**ViewAnimator** is a library for building complex iOS UIView animations in an easy way. It provides one line animations for any view included the ones which contain other views like UITableView and UICollectionView with its cells or UIStackView with its arrangedSubviews.\n\n### Entire View&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UITableView&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UICollectionView\n<img src="https://cdn.jsdelivr.net/gh/marcosgriselli/ViewAnimator@cf065e96ac34c924710dd84c718ecd3be179ae37/Resources/entireView.svg"/>&nbsp;&nbsp;&nbsp;&nbsp;\n<img src="https://cdn.jsdelivr.net/gh/marcosgriselli/ViewAnimator@cf065e96ac34c924710dd84c718ecd3be179ae37/Resources/horizontal.svg"/>&nbsp;&nbsp;&nbsp;&nbsp;\n<img src="https://cdn.jsdelivr.net/gh/marcosgriselli/ViewAnimator@cf065e96ac34c924710dd84c718ecd3be179ae37/Resources/vertical.svg"/>&nbsp;&nbsp;&nbsp;&nbsp;\n<img src="https://cdn.jsdelivr.net/gh/marcosgriselli/ViewAnimator@cf065e96ac34c924710dd84c718ecd3be179ae37/Resources/collection.svg"/>&nbsp;&nbsp;&nbsp;&nbsp;\n<img src="https://cdn.jsdelivr.net/gh/marcosgriselli/ViewAnimator@cf065e96ac34c924710dd84c718ecd3be179ae37/Resources/collectionX.svg"/>\n\nSVG animations inspired by [Luke Zhao\'s](http://lkzhao.com) project [Hero](https://github.com/lkzhao/Hero/blob/master/README.md)\n\n### Complex Layouts\n<image src="https://cdn.dribbble.com/users/702789/screenshots/3816087/preview-messaki.gif" width="400"/>\n\nUI created by [Messaki](https://dribbble.com/messaki), make sure to check out his profile.\n\n*Logo and banner created by [@cintia_ve](https://twitter.com/cintia_ve)*\n\n## Installation\n\n### CocoaPods\n\nViewAnimator is available through [CocoaPods](http://cocoapods.org). To install\nit, simply add the following line to your Podfile:\n\n```ruby\npod "ViewAnimator"\n```\n\n### Manual\n\nDrop the swift files inside of [ViewAnimator/Classes](https://github.com/marcosgriselli/ViewAnimator/tree/master/ViewAnimator/Classes) into your project.\n\n### Carthage \n\n```\ngithub "marcosgriselli/ViewAnimator"\n```\n\n## Usage\n\n`ViewAnimator` provides a set of `UIView` extensions to easily add custom animations to your views. From version `2.0.0` there are two ways to use this extension. \n\n### Self animating views\n\nViews can animate theirselves calling `.animate(animations: [Animation])` that\'s the most basic usage. Here\'s the full method that contains many default arguments: \n\n```swift\nfunc animate(animations: [Animation],\n             reversed: Bool = false,\n             initialAlpha: CGFloat = 0.0,\n             finalAlpha: CGFloat = 1.0,\n             delay: Double = 0,\n             duration: TimeInterval = ViewAnimatorConfig.duration,\n             usingSpringWithDamping dampingRatio: CGFloat = ViewAnimatorConfig.springDampingRatio,\n             initialSpringVelocity velocity: CGFloat = ViewAnimatorConfig.initialSpringVelocity,\n             completion: (() -> Void)? = nil)\n``` \n\n### Animating multiple views \n\nViewAnimator follows the UIKit animations API style with a static method  `UIView.animate(views: [UIView], animations: [Animation])`. This makes the library really easy to use and extensible to any kind of view. As the previous example, the method contains a lot of default arguments: \n\n```swift\nstatic func animate(views: [UIView],\n                    animations: [Animation],\n                    reversed: Bool = false,\n                    initialAlpha: CGFloat = 0.0,\n                    finalAlpha: CGFloat = 1.0,\n                    delay: Double = 0,\n                    animationInterval: TimeInterval = 0.05,\n                    duration: TimeInterval = ViewAnimatorConfig.duration,\n                    usingSpringWithDamping dampingRatio: CGFloat = ViewAnimatorConfig.springDampingRatio,\n                    initialSpringVelocity velocity: CGFloat = ViewAnimatorConfig.initialSpringVelocity,\n                    completion: (() -> Void)? = nil)\n```\n\n### AnimationType\n\n#### Direction\n`Direction` provides the axis where the animation should take place and its movement direction.\n\n```swift\nlet animation = AnimationType.from(direction: .top, offset: 30.0)\nview.animate(animations: [animation])\n```\n\n#### Zoom\nZoom in and Zoom out animation support.\n\n```swift\nlet animation = AnimationType.zoom(scale: 0.5)\nview.animate(animations: [animation])\n```\n\n### Combined Animations\n\nYou can combine conformances of `Animation` to apply multiple transforms on your animation block. \n\n```swift \nlet fromAnimation = AnimationType.from(direction: .right, offset: 30.0)\nlet zoomAnimation = AnimationType.zoom(scale: 0.2)\nlet rotateAnimation = AnimationType.rotate(angle: CGFloat.pi/6)\nUIView.animate(views: collectionView.visibleCells,\n               animations: [zoomAnimation, rotateAnimation],\n               duration: 0.5)\nUIView.animate(views: tableView.visibleCells,\n               animations: [fromAnimation, zoomAnimation], \n               delay: 0.5)\n\n```\n\n## Animation\n\n`Animation` protocol provides you the posibility of expanding the animations supported by `ViewAnimator` with exception of the `animateRandom` function.\n\n```swift \npublic protocol Animation {\n    var initialTransform: CGAffineTransform { get }\n}\n```\n\n## UITableView/UICollection extensions\n\nViewAnimator comes with a set of handy extensions to make your animations in `UITableView` and `UICollectionView` a lot simpler. They both have access to cells in a section to animate easily. \n\nThey both expose a method `visibleCells(in section: Int)` that returns an array of `UITableViewCell` or `UICollectionViewCell`.\n\n```swift\nlet cells = tableView.visibleCells(in: 1)\nUIView.animate(views: cells, animations: [rotateAnimation, fadeAnimation])\n``` \n\n## Mentions\n\n- [iOS Dev Weekly 323](http://iosdevweekly.com/issues/323#start)\n- [Natasha The Robot\'s Newsleter 147](https://swiftnews.curated.co/issues/147#start)\n- [Top 10 Swift Articles October](https://medium.mybridge.co/swift-top-10-articles-for-the-past-month-v-oct-2017-4e0f1bd031e8)\n- [30 Amazing iOS Swift Libraries (v2018)](https://medium.mybridge.co/30-amazing-ios-swift-libraries-for-the-past-year-v-2018-7cf15027eee9)\n\n\n## Project Details\n\n### Requirements\n* Swift 4.0\n* Xcode 7.0+\n* iOS 8.0+\n\n### Contributing\nFeel free to collaborate with ideas \xf0\x9f\x92\xad, issues \xe2\x81\x89\xef\xb8\x8f and/or pull requests \xf0\x9f\x94\x83.\n\nIf you use ViewAnimator in your app I\'d love to hear about it and feature your animation here!\n\n### Contributors\n\n[![](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/images/0)](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/links/0)[![](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/images/1)](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/links/1)[![](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/images/2)](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/links/2)[![](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/images/3)](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/links/3)[![](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/images/4)](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/links/4)[![](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/images/5)](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/links/5)[![](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/images/6)](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/links/6)[![](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/images/7)](https://sourcerer.io/fame/marcosgriselli/marcosgriselli/ViewAnimator/links/7)\n\n### Author\n\nMarcos Griselli | <a href="url"><img src="https://cdn.jsdelivr.net/gh/marcosgriselli/ViewAnimator@cf065e96ac34c924710dd84c718ecd3be179ae37/Resources/twitterLogo.svg" height="17"></a> [@marcosgriselli](https://twitter.com/marcosgriselli)\n\n\n[![Twitter Follow](https://img.shields.io/twitter/follow/marcosgriselli.svg?style=social)](https://twitter.com/marcosgriselli)\n\n[![Twitter Follow](https://img.shields.io/github/followers/marcosgriselli.svg?style=social&label=Follow)](https://github.com/marcosgriselli)\n\n### License\n\nViewAnimator is available under the MIT license. See the [LICENSE](https://github.com/marcosgriselli/ViewAnimator/blob/master/LICENSE) file for more info.\n'