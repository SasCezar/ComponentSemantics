b'# JsonResume\n\nJsonResume creates pretty versions of resume from a single JSON input file. Output formats are specifically customized to modern resume templates. Also, there are a ton of customizations to the templates possible, to make your own version of resume created easily and super quickly.\n\n## Installation\n\n    $ gem install json_resume\n\n## Usage\n\n### Create a sample JSON input file to start\n\n    $ json_resume sample\n\nA [sample](https://github.com/prat0318/json_resume/blob/master/examples/prateek_cv.json) `prateek_cv.json` is generated in the current working directory(cwd).\n\nModify it as per the needs, and remove or keep rest of the fields empty.\n\nNote: YAML files are also supported. Try `$ json_resume sample --in=yaml`.\n\n### Conversion\n\n* Syntax\n\n```\n    json_resume convert [--template=/path/to/custom/template]\n                        [--out=html|html_pdf|tex|tex_pdf|md]\n                        [--locale=es|en|ge|fi|pl|pt|zh_cn|ja]\n                        [--dest_dir=/path/to/put/output/files]\n                        [--theme=default|classic] <json_input>\n\n    <json_input> can be /path/to/json OR "{\'json\':\'string\'}" OR http://raw.json\n```\n\n    NEW: YAML files are also supported. Pass path/to/yaml file (must have .yaml or .yml).\n\n* Default (HTML) version\n\n```\n    $ json_resume convert prateek_cv.json\n```\n\nA directory `resume/` will be generated in cwd, which can be put hosted on /var/www or on github pages. ([Sample](http://prat0318.github.io/json_resume/html_version/resume_with_icons/))\n\n\n* HTML\\* version\n\n`html` version without icons can be generated by giving `icons` as `false` : ([Sample](http://prat0318.github.io/json_resume/html_version/resume_without_icons/))\n\n```\n     "settings": {\n         "icons" : false\n    },\n```\n\n* PDF version from HTML ([Sample](http://prat0318.github.io/json_resume/html_version/resume_with_icons/resume.pdf))\n\n```\n    $ json_resume convert --out=html_pdf prateek_cv.json\n```\n\n* LaTeX version ([Sample](https://www.writelatex.com/read/ynhgbrnmtrbw))\n\n```\n    $ json_resume convert --out=tex prateek_cv.json\n```\n\n  LaTex also includes a ``classic`` theme. Usage: ``--theme=classic`` ([Sample](https://www.writelatex.com/read/xscbhfpxwkqh)).\n\n* PDF version from LaTeX ([Sample](https://www.writelatex.com/read/ynhgbrnmtrbw))\n\n```\n    $ json_resume convert --out=tex_pdf prateek_cv.json\n```\n\n* Markdown version ([Sample](https://gist.github.com/prat0318/9c6e36fdcfd6a854f1f9))\n\n```\n    $ json_resume convert --out=md prateek_cv.json\n```\n\n## i18n Support\n\nSupport for ``en``, ``ge``, ``es``, ``fi``, ``pl`` and ``pt`` right now. Pull requests for others are welcome.\n\n```\n    $ json_resume convert --locale=es prateek_cv.json\n```\n\nIt is also possible to define a custom location for locale definitions.\nPass the option `--locale_dir=path/to/defs`.\nIn this location there should be the definitions available.\nThe default one is `en.yml`, others may be provided as well.\nThis is useful if you want to define new headings.\n\n## Markup Language\n\nJSON is parsed as per the `markdown` standards. This implies all this works-\n- \\*\\* **bold** \\*\\*,\n- \\_ _italics_ \\_,\n- script&lt;sup&gt;<sup>sup</sup>&lt;sup/&gt;,\n- script&lt;sub&gt;<sub>sub</sub>&lt;sub/&gt;,\n- \\[[href](#)\\]\\(#\\),\n- <<[http://github.com](http://github.com)>>\n\n## Customization\n\n#### Mustache Templates\n* Output is created using mustache templates. They are located in `templates/`. These can be modified and given as `--template=/path/to/template` to `convert`.\n\n#### Adding your own icons to json_resume\n1. Download the svg(s) you would like to use from a site like [IcoMoon](https://icomoon.io/app/) or [IconFinder](https://www.iconfinder.com) and chose size as 16X16.\n2. Download the official ``json_resume`` svgs from [the json_resume_icon repo zip](https://github.com/NoahHines/json_resume_icons/archive/master.zip). Unzip it, svgs are present in `/SVG`.\n3. Drag all svgs (including yours) onto the [grumpicon](http://www.grumpicon.com/) and then "downlode it".\n4. Drag all the files (``.css`` and ``.png``) from the ``grunticon`` folder into your local ``json_resume`` gem\'s folder ``json_resume-1.X.X/extras/resume_html/public/css/``, replacing existing files ([Read this](http://stackoverflow.com/questions/2827496/where-are-my-ruby-gems) to find your gem\'s location in your machine).\n5. Modify your HTML [mustache template](#mustache-templates) to include your icons. Specifically, edit the ``div`` class in the template to include your new grunticon (```<div class="icon-user icon-square">```, where "user" is the SVG name). You can also check grunticon\'s generated ``preview.html`` file to verify the icon class name.\n6. Run ``json_resume convert --template=/path/to/template <json>``, and you should be able to see the changes in the generated HTML. Also, steps 1-5 are to be done just once and the icons will be stored within your local gem.\n\n## Changelog\n\n### v1.0\n* Glyphicons are now replaced by Font-Awesome icons.\n* HTML version has a responsive design.\n* Supports i18n. (Supporting ``es``, ``pt`` right now).\n* New classic theme for latex format.\n\n## Contributing\n\nMany awesome formats can be created by writing new mustache templates. We :heart: **Pull Requests**.\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am \'Add some feature\'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\n### Installation of local fork\nIf you want to checkout your local changes do the following:\n1. `gem build json_resume.gemspec`\n2. `sudo gem install ./json_resume-x.y.z.gem`\n'