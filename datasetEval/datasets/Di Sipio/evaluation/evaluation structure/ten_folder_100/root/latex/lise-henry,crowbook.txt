b'Crowbook\n========\n\n[![Travis status](https://travis-ci.org/lise-henry/crowbook.svg?branch=master)](https://travis-ci.org/lise-henry/crowbook) [![Appveyor status](https://ci.appveyor.com/api/projects/status/bnj1rg76khth0aia?svg=true)](https://ci.appveyor.com/project/lise-henry/crowbook)\n\nCrowbook\'s aim is to allow you to write a book in Markdown without\nworrying about formatting or typography, and let the program generate\nHTML, PDF and EPUB output for you. Its focus is\nnovels and fiction, and the default settings should (hopefully) generate readable\nbooks with correct typography without requiring you to worry about it.\n    \nExample\n-------\n\nTo see what Crowbook\'s output looks like, you can read the Crowbook\nguide rendered in\n[HTML](http://lise-henry.github.io/crowbook/book/book.html), \n[PDF](http://lise-henry.github.io/crowbook/book/book.pdf) or [EPUB](http://lise-henry.github.io/crowbook/book/book.epub). \n\nYou can also play with the [online demo version](http://vps.crowdagger.fr/crowbook/).\n\n\n \n\nInstalling\n----------\n\nThere are two ways to install Crowbook: either using precompiled\nbinaries, or compiling it using `cargo`.\n\n### Binaries ###\n\nSee [the releases page](https://github.com/lise-henry/crowbook/releases)\nto download a precompiled binary for your architecture (currently:\nLinux, Windows and MacOSX). Just extract the archive and run\n`crowbook` (or `crowbook.exe` on Windows). You might also want to copy\nthe binary somewhere in your `PATH` for later usage.\n\nIf you are on Debian GNU/Linux or Ubuntu (on a PC architecture), you can\nalso download `.deb` packages on\n[the releases page](https://github.com/lise-henry/crowbook/releases). \n\n### Using Cargo ###\n\n[Cargo](https://crates.io/) is the\n[Rust](https://www.rust-lang.org/)\'s package manager. You can\n[install it here](https://www.rust-lang.org/downloads.html). Once\nit is done: \n\n```bash\n$ cargo install crowbook\n```\n\nwill automatically download the latest `crowbook` release on\n[crates.io](https://crates.io/crates/crowbook), compile it, and\ninstall it on your system.\n\n> Some dependencies also require building C libraries; you might thus\n> also need to install a C compiler and `make`/`cmake` build\n> tools. You can also try to build a version of Crowbook without\n> optional features: `cargo install crowbook --no-default-features\n> --features "clap"` will disable syntactic highlighting and\n> proofreading, requiring less dependencies.\n\nDependencies\n------------\n\nWhile there should be, strictly speaking, no real dependencies to be able to\nrun Crowbook (it is published as a statically compiled binary), some\nfeatures require additional commands to work correctly:\n\n* EPUB rendering requires the `zip` command to be present on your system;\n* PDF rendering requires a working installation of LaTeX (preferably\n`xelatex`).\n\nQuick tour\n----------\n\nThe simplest command is:\n\n```bash\n$ crowbook <BOOK>\n```\n\nwhere `BOOK` is a configuration file. Crowbook will parse this\nfile and generate HTML, EPUB, and/or PDF output formats,\naccording to the settings in the configuration file. \n\nTo create a new book, assuming you have a\nlist of Markdown files, you can generate a template configuration file\nwith the `--create` argument:\n\n```bash\n$ crowbook my.book --create chapter_*.md\n```\n\nThis will generate a default `my.book` file, which you\'ll need to\ncomplete. This configuration file contains some metadata, options, and lists the\nMarkdown files. \n\nFor short books containing only a single Markdown file, it is possible\nto embed some metadata at the beginning of the file and use the\n`--single` or `-s` option to run `crowbook` directly on this Markdown\nfile and avoid creating a separate book configuration file:\n\n```bash\n$ crowbook -s text.md\n```\n\n\nFor more information, see the chapters\non [the arguments supported by `crowbook`](guide/arguments.md) and on [the configuration file](guide/config.md).\n\n\n\nCurrent features\n----------------\n\n### Output formats ###\n\nCrowbook supports HTML, PDF and EPUB (either\nversion 2 or 3) as output formats. See the Crowbook User Guide \nrendered in\n[HTML](http://lise-henry.github.io/crowbook/book/book.html),\n[EPUB](http://lise-henry.github.io/crowbook/book/book.epub) and\n[PDF](http://lise-henry.github.io/crowbook/book.pdf).\n\n### Input format ###\n\nCrowbook uses\n[pulldown-cmark](https://crates.io/crates/pulldown-cmark) and thus\nshould support most\nof [CommonMark Markdown](http://commonmark.org/). Inline HTML,\nhowever, is not implemented, and probably won\'t be, as the goal is to have books\nthat can also be generated in PDF (and maybe ODT).\n\n### Typographic "cleaning" ###\n\nMaybe the most specific "feature" of Crowbook is that it does its best\nto "clean" the input text before rendering it. By default,\nit removes superfluous spaces and tries to use curly quotes. If the \nbook\'s language is set to french, it also tries to respect french\ntypography by replacing spaces with non-breaking ones when it is\nappropriate (e.g. before \'?\', \'!\', \';\' or \':\').\n\n> Please\n> [open an issue](https://github.com/lise-henry/crowbook/issues/new)\n> describing typographic rules if you want them to be\n> implemented for other languages.\n\n### Links handling ###\n\nCrowbook tries to correctly translate local links in the input\nMarkdown files: e.g. if you have a link to a Markdown file that is\npart of your book, it will be transformed into a link inside the\ndocument. \n\n### Inline YAML blocks ###\n\nCrowbook supports inline YAML blocks: \n\n```yaml\n---\nauthor: Me\ntitle: My title\n---\n```\n\nThis is mostly useful when Crowbook is run with the `--single`\nargument (receiving a single Markdown file instead of a book\nconfiguration file), for short\ntexts that only contain one "chapter".\n\n### Proofreading ###\n\nCrowbook can also generate "proofreading" copies in HTML or PDF,\nhighlighting grammar errors and repetitions. For more information, see\n[the proofreading chapter of the guide](guide/proofreading.md). \n\n### Interactive fiction ####\n\nCrowbook has experimental support for writing interactive fiction\n(only for HTML). For more information, read the [interactive fiction chapter](guide/if.md).\n\n### Customization ###\n\nWhile the default settings will hopefully generate something that\nshould look "good enough", it is possible to customize the output,\nessentially by providing different [templates](guide/templates.md).\n\n### Bugs ###\n\nSee the [github\'s issue tracker](https://github.com/lise-henry/crowbook/issues).\n\nContributors\n------------\n\n* [St\xc3\xa9phane Mourey](http://stephanemourey.fr/) `<s+crowbook AT stephanemourey DOT fr>`\n* [Falco Hirschenberger](https://github.com/hirschenberger)\n\nAcknowledgements\n----------------\n\nBesides the [Rust](https://www.rust-lang.org/) compiler and standard\nlibrary, Crowbook uses the following\nlibraries:\n[pulldown-cmark](https://crates.io/crates/pulldown-cmark),\n[yaml-rust](https://crates.io/crates/yaml-rust),\n[mustache](https://crates.io/crates/mustache),\n[clap](https://github.com/kbknapp/clap-rs),\n[chrono](https://crates.io/crates/chrono),\n[uuid](https://crates.io/crates/uuid),\n[mime_guess](https://crates.io/crates/mime_guess),\n[crossbeam](https://crates.io/crates/crossbeam),\n[walkdir](https://crates.io/crates/walkdir),\n[rustc-serialize](https://crates.io/crates/rustc-serialize),\n[caribon](https://crates.io/crates/caribon),\n[hyper](https://crates.io/crates/hyper),\n[url](https://crates.io/crates/url),\n[lazy_static](https://crates.io/crates/lazy_static),\n[regex](https://crates.io/crates/regex),\n[term](https://crates.io/crates/term),\n[numerals](https://crates.io/crates/numerals), [syntect](https://crates.io/crates/syntect).\n\nIt can also embed [Highlight.js](https://highlightjs.org/) in HTML output\nto enable syntax highlighting for code blocks.\n\nIt also uses configuration files from\n[rust-everywhere](https://github.com/japaric/rust-everywhere) to use\n[Travis](https://travis-ci.org/) and\n[Appveyor](http://www.appveyor.com/) to generate binaries for\nvarious platforms on each release.\n\nWhile Crowbook directly doesn\'t use them, there was also inspiration\nfrom [Pandoc](http://pandoc.org/) and\n[mdBook](https://github.com/azerupi/mdBook).\n\nAlso, the [W3C HTML validator](https://validator.w3.org/) and the\n[IDPF EPUB validator](http://validator.idpf.org/) prove very useful\nduring development and testing.\n\nChangeLog\n-----------\n\nSee [ChangeLog](ChangeLog.md).\n\nContributing\n---------------\n\nSee [how you can contribute to Crowbook](guide/contribute.md).\n\nIf you find this project useful, you can also support its author\nby [making a Paypal donation](https://www.paypal.me/crowdagger).\n\nLibrary\n-------\n\nWhile the main purpose of Crowbook is to be run as a standalone\nprogram, \nthe code is written as a library, so if you want to build on it you can\nuse it as such. You can look at the generated documentation on\n[docs.rs](https://docs.rs/releases/search?query=crowbook).\n\nNote that, in order to facilitate code reuse, some features have been\nsplit to separate libraries:\n  * [epub-builder](https://github.com/lise-henry/epub-builder) makes it easier to generate EPUB files.\n  * [crowbook-text-processing](https://github.com/lise-henry/crowbook-text-processing/) contains all the "typographic" functions (smart\nquotes, handling of non-breaking spaces in french, ...). \n  * [crowbook-intl](https://github.com/lise-henry/crowbook-intl/) is\n    used for the internationalization (translation) process.\n\nLicense \n-------\n\nCrowbook is free software: you can redistribute it and/or modify it\nunder the terms of the GNU Lesser General Public License (LGPL),\nversion 2.1 or (at your option) any ulterior version. See \n[LICENSE](LICENSE.md) for more information.\n\nCrowbook\'s logo is licensed under the [Creative Commons Attribution 4.0\nInternational license](https://creativecommons.org/licenses/by/4.0/deed.en),\nbased on the\n[Rust logo](https://commons.wikimedia.org/wiki/File:Rust_programming_language_black_logo.svg)\nby Mozilla Corporation.\n\nCrowbook includes binary (minified) CSS and Javascript files from\n[Highlight.js](https://highlightjs.org/), written by Ivan\nSagalaev, licensed under the following terms:\n\n> Copyright (c) 2006, Ivan Sagalaev\n>\n> All rights reserved.\n>\n> Redistribution and use in source and binary forms, with or without\n> modification, are permitted provided that the following conditions are met:\n>  * Redistributions of source code must retain the above copyright\n>    notice, this list of conditions and the following disclaimer.\n>  * Redistributions in binary form must reproduce the above copyright\n>    notice, this list of conditions and the following disclaimer in the\n>    documentation and/or other materials provided with the\n>    distribution.\n>  * Neither the name of highlight.js nor the names of its contributors \n>    may be used to endorse or promote products derived from this software \n>    without specific prior written permission.\n> \n> THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS\'\' AND ANY\n> EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n> WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n> DISCLAIMED. IN NO EVENT SHALL THE REGENTS AND CONTRIBUTORS BE LIABLE FOR ANY\n> DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n> (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n> LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n> ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n> (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n> SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n'