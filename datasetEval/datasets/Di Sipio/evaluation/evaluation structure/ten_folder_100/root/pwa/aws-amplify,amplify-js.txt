b'<img src="https://s3.amazonaws.com/aws-mobile-hub-images/aws-amplify-logo.png" alt="AWS Amplify" width="550" >\n\n<a href="https://nodei.co/npm/aws-amplify/">\n  <img src="https://nodei.co/npm/aws-amplify.svg?downloads=true&downloadRank=true&stars=true">\n</a>\n<p>\n  <a href="https://gitter.im/AWS-Amplify/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link" target="_blank">\n    <img src="https://badges.gitter.im/aws/aws-amplify.png" alt="Gitter Chat" />  \n  </a>\n  <a href="https://codecov.io/gh/aws-amplify/amplify-js">\n    <img src="https://codecov.io/gh/aws-amplify/amplify-js/branch/master/graph/badge.svg" />\n  </a>\n  <a href="https://lgtm.com/projects/g/aws-amplify/amplify-js/context:javascript"><img alt="Language grade: JavaScript" src="https://img.shields.io/lgtm/grade/javascript/g/aws-amplify/amplify-js.svg?logo=lgtm&logoWidth=18"/>\n  </a>\n  <a href="https://circleci.com/gh/aws-amplify/amplify-js">\n    <img src="https://img.shields.io/circleci/project/github/aws-amplify/amplify-js/master.svg" alt="build:started">\n  </a>\n</p>\n\n### AWS Amplify is a JavaScript library for frontend and mobile developers building cloud-enabled applications.\n\nAWS Amplify provides a declarative and easy-to-use interface across different categories of cloud operations. AWS Amplify goes well with any JavaScript based frontend workflow, and React Native for mobile developers.\n\nOur default implementation works with Amazon Web Services (AWS), but AWS Amplify is designed to be open and pluggable for any custom backend or service.\n\nNotice:\n\nAmplify@1.x.x has structural changes. For details please check [Amplify Modularization](https://github.com/aws/aws-amplify/wiki/Amplify-modularization).\n\n### Features / APIs\n\n- [**Authentication**](https://aws.github.io/aws-amplify/media/authentication_guide): APIs and building blocks for developers who want to create user authentication experiences.\n- [**Analytics**](https://aws.github.io/aws-amplify/media/analytics_guide): Easily collect analytics data for your app. Analytics data includes user sessions and other custom events that you want to track in your app.\n- [**API**](https://aws.github.io/aws-amplify/media/api_guide): Provides a simple solution when making HTTP requests. It provides an automatic, lightweight signing process which complies with AWS Signature Version 4.\n- [**GraphQL Client**](https://aws.github.io/aws-amplify/media/api_guide#configuration-for-graphql-server): Interact with your GraphQL server or AWS AppSync API with an easy-to-use & configured GraphQL client.\n- [**Storage**](https://aws.github.io/aws-amplify/media/storage_guide): Provides a simple mechanism for managing user content for your app in public, protected or private storage buckets.\n- [**Push Notifications**](https://aws.github.io/aws-amplify/media/push_notifications_setup): Allows you to integrate push notifications in your app with Amazon Pinpoint targeting and campaign management support.\n- [**Interactions**](https://aws.github.io/aws-amplify/media/interactions_guide): Create conversational bots powered by deep learning technologies.\n- [**PubSub**](https://aws.github.io/aws-amplify/media/pub_sub_guide): Provides connectivity with cloud-based message-oriented middleware.\n- [**Internationalization**](https://aws.github.io/aws-amplify/media/i18n_guide): A lightweight internationalization solution.\n- [**Cache**](https://aws.github.io/aws-amplify/media/cache_guide): Provides a generic LRU cache for JavaScript developers to store data with priority and expiration settings.\n- [**Predictions**](https://aws-amplify.github.io/docs/js/predictions): Provides a solution for using AI and ML cloud services to enhance your application.\n\n#### Visit our [Web Site](https://aws.github.io/aws-amplify) to learn more about AWS Amplify.\n\n- [Documentation](https://aws.github.io/aws-amplify)\n- [Installation](#installation)\n- [Configuration](#configuration)\n- [Examples](#examples)\n- [Contributing](https://github.com/aws/aws-amplify/blob/master/CONTRIBUTING.md)\n\n## Installation\n\nAWS Amplify is available as `aws-amplify` package on [npm](https://www.npmjs.com/).\n\n**Web**\n\n```bash\n$ npm install aws-amplify --save\n```\n\nor you could install the module you want to use individually:\n\n```bash\n$ npm install @aws-amplify/auth --save\n```\n\n**React**\n\nIf you are developing a [React](https://github.com/facebook/react/) app, you can install an additional package `aws-amplify-react` containing [Higher Order Components](https://reactjs.org/docs/higher-order-components.html):\n\n```bash\n$ npm install aws-amplify --save\n$ npm install aws-amplify-react --save\n```\n\n**Angular**\n\nIf you are developing an [Angular](https://github.com/angular/angular) app, you can install an additional package `aws-amplify-angular`. This package contains an [Angular module](https://angular.io/guide/architecture-modules) with a [provider and components](https://aws.github.io/aws-amplify/media/angular_guide):\n\n```bash\n$ npm install aws-amplify --save\n$ npm install aws-amplify-angular --save\n```\n\nVisit our [Installation Guide for Web](https://aws.github.io/aws-amplify/media/install_n_config?platform=javascript) to start building your web app.\n\n**Vue**\n\nIf you are developing a [Vue](https://github.com/vuejs/vue) app, you can install an additional package `aws-amplify-vue`. This package contains a [Vue plugin](https://vuejs.org/v2/guide/plugins.html) for the Amplify library along with [Vue components](https://vuejs.org/v2/guide/components.html):\n\n```bash\n$ npm install aws-amplify --save\n$ npm install aws-amplify-vue --save\n```\n\nVisit our [Installation Guide for Web](https://aws-amplify.github.io/amplify-js/media/vue_guide#vue) to start building your Vue app.\n\n**React Native**\n\nFor React Native development, install `aws-amplify`:\n\n```bash\n$ npm install aws-amplify --save\n```\n\nIf you are developing a [React Native](https://github.com/facebook/react-native) app, you can install an additional package `aws-amplify-react-native` containing [Higher Order Components](https://reactjs.org/docs/higher-order-components.html):\n\n```bash\n$ npm install aws-amplify-react-native --save\n```\n\nVisit our [Installation Guide for React Native](https://aws.github.io/aws-amplify/media/install_n_config?platform=react-native) to start building your web app.\n\n## Configuration\n\nSomewhere in your app, preferably at the root level, configure Amplify with your resources.\n\n**Using AWS Resources**\n\n```js\nimport Amplify from \'aws-amplify\';\nimport aws_exports from \'./aws-exports\';\n\nAmplify.configure(aws_exports);\n\n// or if you don\'t want to install all the categories\nimport Amplify from \'@aws-amplify/core\';\nimport Auth from \'@aws-amplify/auth\';\nimport aws_exports from \'./aws-exports\';\n\n// in this way you are only importing Auth and configuring it.\nAmplify.configure(aws_exports);\n```\n\n**Without AWS**\n\n```js\nAmplify.configure({\n\tAPI: {\n\t\tgraphql_endpoint: \'https://www.example.com/my-graphql-endpoint\',\n\t},\n});\n```\n\n## Examples\n\nAWS Amplify supports many category scenarios such as Auth, Analytics, APIs and Storage as outlined in the [Developer Guide](https://aws.github.io/aws-amplify/media/developer_guide). A couple of samples are below:\n\n### 1. Collect user session metrics\n\nBy default, AWS Amplify can collect user session tracking data with a few lines of code:\n\n```js\nimport Analytics from \'@aws-amplify/analytics\';\n\nAnalytics.record(\'myCustomEvent\');\n```\n\nSee our [Analytics Developer Guide](https://aws.github.io/aws-amplify/media/analytics_guide) for detailed information.\n\n### 2. Add Authentication to your App\n\nAdd user sign up and sign in using two of the many methods available to the [Auth class](https://aws.github.io/aws-amplify/api/classes/authclass.html):\n\n```js\nimport Auth from \'@aws-amplify/auth\';\n\nAuth.signUp({\n\tusername: \'AmandaB\',\n\tpassword: \'MyCoolPassword1!\',\n\tattributes: {\n\t\temail: \'someemail@example.com\',\n\t},\n});\n\nAuth.signIn(username, password)\n\t.then(success => console.log(\'successful sign in\'))\n\t.catch(err => console.log(err));\n```\n\nSee our [Authentication Developer Guide](https://aws.github.io/aws-amplify/media/authentication_guide) for detailed information.\n\n**React / React Native**\n\nAdding authentication to your React or React Native app is as easy as wrapping your app\'s main component with our `withAuthenticator` higher order component. AWS Amplify will provide you customizable UI for common use cases such as user registration and login.\n\n```jsx\n// For React\nimport { withAuthenticator } from \'aws-amplify-react\';\n\n// For React Native\nimport { withAuthenticator } from \'aws-amplify-react-native\';\n\nexport default withAuthenticator(App);\n```\n\n**Angular**\n\nTo add authentication to your Angular app you can also use the built-in service provider and components:\n\n```js\n// app.component.ts\nimport { AmplifyService }  from \'aws-amplify-angular\';\n\n...\n\nconstructor( public amplify:AmplifyService ) {\n  // handle auth state changes\n  this.amplify.authStateChange$\n    .subscribe(authState => {\n      this.authenticated = authState.state === \'signedIn\';\n      if (!authState.user) {\n        this.user = null;\n      } else {\n        this.user = authState.user;\n      }\n  });\n}\n\n// app.component.html\n<amplify-authenticator></amplify-authenticator>\n\n```\n\nSee our [Angular Guide](https://aws.github.io/aws-amplify/media/angular_guide) for more details on Angular setup and usage.\n\n### 3. Sign HTTP requests\n\nAWS Amplify automatically signs your REST requests with [AWS Signature Version 4](http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html) when using the API module:\n\n```js\nimport API from \'@aws-amplify/api\';\n\nlet apiName = \'MyApiName\';\nlet path = \'/path\';\nlet options = {\n  headers: {...} // OPTIONAL\n}\nAPI.get(apiName, path, options).then(response => {\n  // Add your code here\n});\n```\n\nSee our [API Developer Guide](https://aws.github.io/aws-amplify/media/api_guide) for detailed information.\n\n### 4. GraphQL API Operations\n\nTo access a GraphQL API with your app, you need to make sure to configure the endpoint URL in your app\xe2\x80\x99s configuration.\n\n```js\n// configure a custom GraphQL endpoint\nAmplify.configure({\n\tAPI: {\n\t\tgraphql_endpoint: \'https://www.example.com/my-graphql-endpoint\',\n\t},\n});\n\n// Or configure an AWS AppSync endpoint.\nlet myAppConfig = {\n\t// ...\n\taws_appsync_graphqlEndpoint:\n\t\t\'https://xxxxxx.appsync-api.us-east-1.amazonaws.com/graphql\',\n\taws_appsync_region: \'us-east-1\',\n\taws_appsync_authenticationType: \'API_KEY\',\n\taws_appsync_apiKey: \'da2-xxxxxxxxxxxxxxxxxxxxxxxxxx\',\n\t// ...\n};\n\nAmplify.configure(myAppConfig);\n```\n\n**queries**\n\n```js\nimport API, { graphqlOperation } from \'@aws-amplify/api\';\n\nconst ListEvents = `query ListEvents {\n  listEvents {\n    items {\n      id\n      where\n      description\n    }\n  }\n}`;\n\nconst allEvents = await API.graphql(graphqlOperation(ListEvents));\n```\n\n**mutations**\n\n```js\nimport API, { graphqlOperation } from \'@aws-amplify/api\';\n\nconst CreateEvent = `mutation CreateEvent($name: String!, $when: String!, $where: String!, $description: String!) {\n  createEvent(name: $name, when: $when, where: $where, description: $description) {\n    id\n    name\n    where\n    when\n    description\n  }\n}`;\n\nconst eventDetails = {\n\tname: \'Party tonight!\',\n\twhen: \'8:00pm\',\n\twhere: \'Ballroom\',\n\tdescription: \'Coming together as a team!\',\n};\n\nconst newEvent = await API.graphql(graphqlOperation(CreateEvent, eventDetails));\n```\n\n**subscriptions**\n\n```js\nimport API, { graphqlOperation } from \'@aws-amplify/api\';\n\nconst SubscribeToEventComments = `subscription subscribeToComments {\n  subscribeToComments {\n    commentId\n    content\n  }\n}`;\n\nconst subscription = API.graphql(\n\tgraphqlOperation(SubscribeToEventComments)\n).subscribe({\n\tnext: eventData => console.log(eventData),\n});\n```\n\nSee our [GraphQL API Developer Guide](https://aws.github.io/aws-amplify/media/api_guide#configuration-for-graphql-server) for detailed information.\n\n### 5. Upload and Download public or private content\n\nAWS Amplify provides an easy-to-use API to store and get content from public or private storage folders:\n\n```js\nStorage.put(key, fileObj, { level: \'private\' })\n\t.then(result => console.log(result))\n\t.catch(err => console.log(err));\n\n// Store data with specifying its MIME type\nStorage.put(key, fileObj, {\n\tlevel: \'private\',\n\tcontentType: \'text/plain\',\n})\n\t.then(result => console.log(result))\n\t.catch(err => console.log(err));\n```\n\nSee our [Storage Developer Guide](https://aws.github.io/aws-amplify/media/storage_guide) for detailed information.\n'