b'# preact-starter\n\n> Webpack3 boilerplate for building SPA / PWA / offline front-end apps with :atom_symbol: [Preact](https://github.com/developit/preact)\n\nUsing `preact-starter` will kickstart your next application! :100: It is designed to fit the "90% use-case" for those who want to build offline-first web apps (see [features](#features) below).\n\n> :triangular_flag_on_post: **Important:** This is meant for _client-side_ apps only; there is **no support** included for universal / server-side rendering. I plan to release my own SSR kit shortly!\n\n**Please note:** Boilerplate _does not_ incorporate the latest ["css-in-js" or "css modules" technique](https://github.com/MicheleBertoli/css-in-js). Instead, the more traditional approach is taken, wherein `styles` and `scripts` are kept separate. That said, you may **certainly and easily** take that route if desired. :white_check_mark:\n\n---\n\n<p align="center">:warning: Boilerplate & commands will evolve as my own development process does. :warning:</p>\n\n---\n\n## Install\n\n```sh\ngit clone https://github.com/lukeed/preact-starter\ncd preact-starter\nnpm install\nnpm run build\nnpm start\n```\n\n> :exclamation: **Pro Tip:** Use [Yarn](https://yarnpkg.com/) to install dependencies 3x faster than NPM!\n\n## Features\n\n* Offline Caching (via `serviceWorker`)\n* SASS & Autoprefixer\n* Asset Versioning (aka "cache-busting")\n* ES2015 (ES6) and ES2016 (ES7) support\n* Hot Module Replacement (HMR) for all files\n* Preact\'s [Developer Tools](#preact-developer-tools)\n* [Lighthouse](https://github.com/GoogleChrome/lighthouse) certified\n\n  ![lightouse](src/static/img/lighthouse.jpg)\n\n## Development\n\n### Commands\n\nAny of the following commands can (and should :wink:) be run from the command line.\n\n> If using [Yarn](https://yarnpkg.com/), all instances of `npm` can be replaced with `yarn`. :ok_hand:\n\n#### build\n\n```\n$ npm run build\n```\n\nCompiles all files. Output is sent to the `dist` directory.\n\n#### start\n\n```\n$ npm start\n```\n\nRuns your application (from the `dist` directory) in the browser.\n\n#### watch\n\n```\n$ npm run watch\n```\n\nLike [`start`](#start), but will auto-compile & auto-reload the server after any file changes within the `src` directory.\n\n### Preact Developer Tools\n\nYou can inspect and modify the state of your Preact UI components at runtime using the [React Developer Tools](https://github.com/facebook/react-devtools) browser extension.\n\n1. Install the [React Developer Tools](https://github.com/facebook/react-devtools) extension\n2. [Import the `preact/devtools`](src/index.js#L23) module in your app\n3. Reload and go to the \'React\' tab in the browser\'s development tools\n\n## License\n\nMIT \xc2\xa9 [Luke Edwards](https://lukeed.com)\n'