b'# NoahGameFrame\r\n\r\n- develop\r\n[![Build Status](https://travis-ci.org/ketoo/NoahGameFrame.svg?branch=develop)](https://travis-ci.org/ketoo/NoahGameFrame)\r\n- master\r\n[![Build Status](https://travis-ci.org/ketoo/NoahGameFrame.svg?branch=master)](https://travis-ci.org/ketoo/NoahGameFrame)\r\n- chat\r\n[![Join the chat at https://gitter.im/ketoo/NoahGameFrame](https://badges.gitter.im/ketoo/NoahGameFrame.svg)](https://gitter.im/ketoo/NoahGameFrame?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n#####QQ\xe7\xbe\xa4\xef\xbc\x9a330241037 [![NF\xe5\xbc\x80\xe6\xba\x90\xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8\xe5\xbc\x95\xe6\x93\x8e2\xe7\xbe\xa4](https://pub.idqqimg.com/wpa/images/group.png)](https://shang.qq.com/wpa/qunwpa?idkey=17ce92a5aacdec7b1c5ef0ff99bc84ca39c927fbd4ec7a3a83449e96afa63899)\r\n\r\n## What is NoahGameFrame?\r\n\r\nNoahGameFrame (NF) is a lightweight, fast, scalable, distributed plugin framework. NF is greatly inspired by OGRE and Bigworld.\r\n\r\n## Features\r\n- Easy-to-use, interface-oriented design\r\n- An extensible plugin framework that makes getting your application running quick and easy\r\n- A clean, uncluttered design and stable engine that has been used in several commercial products\r\n- A high performance actor model (by a safe thread pool)\r\n- Event and attribute-driven, making it clear and easy to maintain your business\r\n- Based on standard C++ development, ensuring cross-platform support\r\n- An existing C++ and C# game client for rapid development\r\n- Cross-platform support\r\n\r\n\r\n## Tutorial && Documents\r\n\r\nhttps://github.com/ketoo/NoahGameFrame/wiki\r\n\r\n### Client (Unity3D && Cocos2d)\r\n[Client](https://github.com/ketoo/NFClient)\r\n\r\n## Architecture\r\n\r\n### App Architecture:\r\n![App Architecture](https://github.com/ketoo/NoahGameFrame/wiki/images/architecture/NF_app_arch.png)\r\n\r\n### Server Architecture\r\n![Server Architecture](https://github.com/ketoo/NoahGameFrame/wiki/images/architecture/NF_server_arch.png)\r\n\r\n## Get the Sources:\r\n\r\ngit clone https://github.com/ketoo/NoahGameFrame.git\r\n\r\nor\r\n\r\nsvn checkout https://github.com/ketoo/NoahGameFrame\r\n\r\n## MidWare\r\nThe projects in midware repo are usefull to develop a business game.\r\n\r\n## Game Example\r\nThie repo show people how to use NF and NF\'s MidWare as submodule.\r\n\r\n\r\n## Dependencies\r\n\r\n- libevent 2.0.22\r\n- easylogging++ 9.80\r\n- google protobuf\r\n- hiredis\r\n- ajson\r\n- concurrentqueue\r\n- RapidXML\r\n- LuaIntf\r\n- navigation\r\n- lua\r\n\r\n## IF YOU CAN NOT BUILD THE DEPENDENCIES THEN PLEASE RUN THE CMDS BELOW TO SET UP THE ENVIRONMENT:\r\n\r\n* sudo apt-get g++\r\n* sudo apt-get cmake\r\n* sudo apt-get install automake\r\n* sudo apt-get install zip unzip\r\n\r\n## Supported Compilers\r\n\r\n* GCC >= 4.8 (**Tested in Ubuntu 15.04**)\r\n* MSVC >= VS2017 (**Tested in Win7/10**)\r\n\r\n## Build and Install\r\n### MSVC >= 2015\r\n\r\n1. Git pull all source\r\n2. Open the solution: **NoahFrame.sln**, build FileProcessTool project\r\n3. Run **GenerateConfigXML.bat** to generate configuration files\r\n4. Run the script file named **build_dep.bat** where located /Dependencies\r\n5. Build the solution(if u build failed, please build again(**not rebuild**))\r\n6. Run the binary file by **_Out/rund.bat**\r\n\r\n### CMake ---- please use administrator(or sudo) to do these:\r\n1. Git pull all source\r\n2. Install cmake[>= 3.1] please choose options for installing: **Add CMake to the system PATH for all users and restart your computer**\r\n3. Install VS2015 or gcc[>= 4.8]\r\n4. Run Dependencies/build_dep.sh\r\n5. Run **install4cmake.bat** or **install4cmake.sh** to build NF\r\n6. Run the binary file by **_Out/rund.bat** or **_Out/rund.sh**\r\n\r\n\r\n\r\n### JAVA Project\r\nWebSite:  https://github.com/NFGameTeam/NFrame-java\r\n\r\n### C# Project\r\nWebSite:  https://github.com/ketoo/NFrame\r\n\r\n\r\n## License\r\nThe NFrame project is currently available under the [Apache License](https://github.com/ketoo/NoahGameFrame/blob/develop/LICENSE).\r\n\r\n\r\nTutorial:\r\n-------------------\r\n### [01-Hello world, add a module](https://github.com/ketoo/NoahGameFrame/tree/master/Tutorial/Tutorial1)\r\n\r\n\r\n```cpp\r\n\r\n// -------------------------------------------------------------------------\r\n//    @FileName      \t:    HelloWorld1.h\r\n//    @Author           :    ketoo\r\n//    @Date             :    2014-05-01 08:51\r\n//    @Module           :   HelloWorld1\r\n//\r\n// -------------------------------------------------------------------------\r\n\r\n#ifndef NFC_HELLO_WORLD1_H\r\n#define NFC_HELLO_WORLD1_H\r\n\r\n#include "NFComm/NFPluginModule/NFIPluginManager.h"\r\n\r\nclass HelloWorld1\r\n    : public NFIModule\r\n{\r\npublic:\r\n    HelloWorld1(NFIPluginManager* p)\r\n    {\r\n        pPluginManager = p;\r\n    }\r\n\r\n    virtual bool Init();\r\n    virtual bool AfterInit();\r\n\r\n    virtual bool Execute();\r\n\r\n    virtual bool BeforeShut();\r\n    virtual bool Shut();\r\n\r\nprotected:\r\n\r\n};\r\n\r\n#endif\r\n\r\n\r\n#include "HelloWorld1.h"\r\n\r\nbool HelloWorld1::Init()\r\n{\r\n    // Use this for initialization\r\n\t\r\n    std::cout << "Hello, world1, Init" << std::endl;\r\n\r\n    return true;\r\n}\r\n\r\nbool HelloWorld1::AfterInit()\r\n{\r\n    // AfterInit is called after Init\r\n\t\r\n    std::cout << "Hello, world1, AfterInit" << std::endl;\r\n\r\n    return true;\r\n}\r\n\r\nbool HelloWorld1::Execute()\r\n{\r\n    // Execute is called once per frame\r\n\t\r\n    //std::cout << "Hello, world1, Execute" << std::endl;\r\n\r\n    return true;\r\n}\r\n\r\nbool HelloWorld1::BeforeShut()\r\n{\r\n    //before final\r\n\t\r\n    std::cout << "Hello, world1, BeforeShut" << std::endl;\r\n\r\n    return true;\r\n}\r\n\r\nbool HelloWorld1::Shut()\r\n{\r\n    //final\r\n\t\r\n    std::cout << "Hello, world1, Shut" << std::endl;\r\n\r\n    return true;\r\n}\r\n\r\n```\r\n\r\n\r\n-------------------\r\n### [02-Hello world, test data driver](https://github.com/ketoo/NoahGameFrame/tree/master/Tutorial/Tutorial2)\r\n\r\n* how to use the world\'s most advanced data engine \r\n\r\n-------------------\r\n### [03-Hello world, test heartbeat and event system](https://github.com/ketoo/NoahGameFrame/tree/master/Tutorial/Tutorial3)\r\n\r\n* how to use the synchronous events\r\n\r\n-------------------\r\n### [04-Hello actor, test actor model(async event system)](https://github.com/ketoo/NoahGameFrame/tree/master/Tutorial/Tutorial4)\r\n\r\n* how to use the asynchronous events\r\n* use multiple cpus to get high performance\r\n\r\n### How to Create a New LuaScriptModule\r\n\r\n## Step 1\r\nCreate a Lua Script File, and Must Contain following functions\r\n- reload()\r\n- awake()\r\n- init()\r\n- ready_execute()\r\n- after_init()\r\n- before_shut()\r\n- shut()\r\n\r\nMostly like this\r\n# [test_module.lua](https://github.com/ketoo/NoahGameFrame/blob/master/_Out/NFDataCfg/ScriptModule/game/test_game_module.lua)\r\n\r\n```lua\r\ntest_module = {}\r\nregister_module(test_module,"test_module");\r\n\r\nfunction test_module.reload()\r\nend\r\n\r\nfunction test_module.awake()\r\n\treload();\r\nend\r\n\r\nfunction test_module.init()\r\nend\r\n\r\nfunction test_module.after_init()\r\nend\r\n\r\nfunction test_module.ready_execute()\r\nend\r\n\r\nfunction test_module.before_shut()\r\nend\r\n\r\nfunction test_module.shut()\r\nend\r\n\r\n```\r\n\r\n##Step 2\r\nAdd your LuaScriptModule Infomation into [script_list.lua](https://github.com/ketoo/NoahGameFrame/blob/master/_Out/NFDataCfg/ScriptModule/game/script_list.lua)\r\n\r\n\r\n```lua\r\nScriptList={\r\n    {tbl=nil, tblName="TestModule"},\r\n    {tbl=nil, tblName="TestModule2"},\r\n}\r\n\r\nload_script_file(ScriptList)\r\n```\r\n\r\n\r\n\r\n##Hot fix\r\nAdd your lua script file name on here [script_reload.lua](https://github.com/ketoo/NoahGameFrame/blob/master/_Out/NFDataCfg/ScriptModule/game/script_reload.lua)\r\n\r\n-------------------\r\n### About The Author\r\n\r\n* Mail: 342006@qq.com\r\n* BBS: http://bbs.noahframe.com\r\n\r\n-------------------\r\n\r\n### Amazing  open source projects:\r\n**breeze**\r\n* Auther: zsummer\r\n* Github: https://github.com/zsummer/breeze\r\n* Description:A fast, scalable, distributed game server framework for C++\r\n\r\n\r\n**gce**\r\n* Auther: nousxiong\r\n* GitHub: https://github.com/nousxiong/gce\r\n* Description: The Game Communication Environment (GCE) is an actor model framework for online game development.\r\n\r\n**moon**\r\n* Auther: bruce\r\n* GitHub: https://github.com/sniper00/moon.git\r\n* Description: A  cross-platform,lightweight,scalable game server framework  written in C++, and suport Lua Script.\r\n\r\n\r\n\r\n\r\n'