b'<img src="https://github.com/elnormous/ouzel/blob/master/img/ouzel.png" alt="ouzel" width=128>\n\n# Ouzel v0.40\n\n[![Build Status](https://api.travis-ci.org/elnormous/ouzel.svg?branch=master)](https://travis-ci.org/elnormous/ouzel) [![Build Status](https://ci.appveyor.com/api/projects/status/dp8av7iegdjs6xuj?svg=true)](https://ci.appveyor.com/project/elnormous/ouzel) [![Quality Gate](https://sonarcloud.io/api/project_badges/measure?project=Ouzel&metric=alert_status)](https://sonarcloud.io/dashboard?id=Ouzel) [![Join the chat at https://gitter.im/ouzelengine/Lobby](https://badges.gitter.im/elnormous/ouzel.svg)](https://gitter.im/elnormous/ouzel?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nOuzel is a C++ game engine mainly targeted for development of 2D games.\n\nSupported platforms:\n\n* Windows 7, 8, 10\n* macOS 10.8+\n* Linux\n* iOS 8+\n* tvOS 9+\n* Android 3.0+\n* Emscripten ([sample](http://www.ouzel.org/samples/))\n\nSupported rendering backends:\n\n* Direct3D 11\n* OpenGL 2, OpenGL 3 and OpenGL 4\n* OpenGL ES 2 and OpenGL ES 3\n* Metal\n\nSupported audio backends:\n\n* XAudio 2\n* DirectSound\n* CoreAudio\n* OpenAL\n* OpenSL ES\n* ALSA\n\n## Features\n\n* Cross-platform (Windows, macOS, iOS, tvOS, Android, Linux, and Emscripten targets supported)\n* Multi-threaded (separate threads for rendering, sound, and game)\n* 2D and 3D scene management\n* GUI helper classes and management\n* Bitmap and true-type font support\n* Multiple side-by-side viewport support\n* XInput, DirectInput, IOKit, Apple GameController, and Linux evdev gamepad support\n* Actor animation (including tweening) system\n* Particle systems\n* Resource caching system\n* Localization support via loading string translations and UTF-8 string support\n* Software audio mixer for sound effect playback\n* High DPI support on Windows, macOS, and iOS\n* Easy to install (just pull the repository and build it)\n\n## Example app\n\nThe following code will open create a scene with a sprite in the center of it:\n\n```cpp\n#include "ouzel.hpp"\n\nclass Example: public ouzel::Application\n{\npublic:\n    Example():\n        assets(ouzel::engine->getCache(),\n               ouzel::engine->getFileSystem())\n    {\n        assets.loadAsset(ouzel::assets::Loader::Image, "player", "player.png");\n        ouzel::engine->getSceneManager().setScene(&scene);\n        scene.addLayer(&layer);\n        cameraActor.addComponent(&camera);\n        layer.addChild(&cameraActor);\n        playerSprite.init("player");\n        player.addComponent(&playerSprite);\n        layer.addChild(&player);\n    }\n\nprivate:\n    ouzel::scene::Scene scene;\n    ouzel::scene::Layer layer;\n    ouzel::scene::Camera camera;\n    ouzel::scene::Actor cameraActor;\n    ouzel::scene::SpriteRenderer playerSprite;\n    ouzel::scene::Actor player;\n    ouzel::assets::Bundle assets;\n};\n\nstd::unique_ptr<ouzel::Application> ouzel::main(const std::vector<std::string>& args)\n{\n    return std::make_unique<Example>();\n}\n```\n\n## Showcase\n\n2D platformer [Bearslayer](http://store.steampowered.com/app/460210) is being developed using Ouzel engine.\n\n[![Bearslayer](https://github.com/elnormous/ouzel/blob/master/img/bearslayer.gif "Bear Slayer")](https://www.youtube.com/watch?v=q-O8-hpvJ5A)\n\n## Compilation\n\nGNU makefile, Xcode project, and Visual Studio project files are located in the "build" directory. Makefile and project files for sample project are located in the "samples" directory.\n\nYou will need to download OpenGL (e.g. Mesa), ALSA, and OpenAL drivers installed in order to build Ouzel on Linux. For x86 Linux also libx11, libxcursor, libxi, and libxss are required.\n\nTo build Ouzel with Emscripten, pass "PLATFORM=emscripten" to "make" command, but make sure that you have Emscripten SDK installed before doing so:\n\n```shell\n$ make PLATFORM=emscripten\n```\n\nYou can build Android samples and run them on an Android device by executing the following commands in "samples/android" directory (Android SDK and NDK must be installed and added to PATH):\n\n```shell\n$ gradle assembleDebug\n$ gradle installDebug\n$ adb shell am start -n org.ouzel/org.ouzel.MainActivity\n```\n\nBecause on Raspbian Stretch libEGL.so was renamed to libbrcmEGL.so and libGLESv2.so to libbrcmGLESv2.so you will have to run the following commands before building the samples on Raspbian 8 (Jessie) or older:\n\n```shell\n$ sudo ln -s /opt/vc/lib/libEGL.so /opt/vc/lib/libbrcmEGL.so \n$ sudo ln -s /opt/vc/lib/libGLESv2.so /opt/vc/lib/libbrcmGLESv2.so\n```\n\n## System requirements\n* Windows 7+ with Visual Studio 2017 or newer\n* macOS 10.10+ with Xcode 7.2+\n* Any reasonable new Linux distro (x86 and ARM are supported) with gcc 6+ or clang 3.4+\n\n## Getting help\n\nYou can ask question in the following locations:\n\n* Ouzel Twitter account: https://twitter.com/ouzelengine\n* Ouzel server on Discord: https://discord.gg/4sWuJE8\n* #ouzel channel on the Freenode network ([Freenode Webchat](http://webchat.freenode.net/?channels=ouzel))\n* Author of the Ouzel engine: https://twitter.com/elnormous\n* Development roadmap: https://trello.com/b/5tRlUXKR/ouzel-roadmap\n\n## License\n\nOuzel codebase is licensed under the BSD license. Please refer to the LICENSE file for detailed information.\n'