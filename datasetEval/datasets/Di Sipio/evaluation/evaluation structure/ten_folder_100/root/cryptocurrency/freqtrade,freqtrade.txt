b"# Freqtrade\n\n[![Build Status](https://travis-ci.org/freqtrade/freqtrade.svg?branch=develop)](https://travis-ci.org/freqtrade/freqtrade)\n[![Coverage Status](https://coveralls.io/repos/github/freqtrade/freqtrade/badge.svg?branch=develop&service=github)](https://coveralls.io/github/freqtrade/freqtrade?branch=develop)\n[![Documentation](https://readthedocs.org/projects/freqtrade/badge/)](https://www.freqtrade.io)\n[![Maintainability](https://api.codeclimate.com/v1/badges/5737e6d668200b7518ff/maintainability)](https://codeclimate.com/github/freqtrade/freqtrade/maintainability)\n\nFreqtrade is a free and open source crypto trading bot written in Python. It is designed to support all major exchanges and be controlled via Telegram. It contains backtesting, plotting and money management tools as well as strategy optimization by machine learning.\n\n![freqtrade](https://raw.githubusercontent.com/freqtrade/freqtrade/develop/docs/assets/freqtrade-screenshot.png)\n\n## Disclaimer\n\nThis software is for educational purposes only. Do not risk money which\nyou are afraid to lose. USE THE SOFTWARE AT YOUR OWN RISK. THE AUTHORS\nAND ALL AFFILIATES ASSUME NO RESPONSIBILITY FOR YOUR TRADING RESULTS.\n\nAlways start by running a trading bot in Dry-run and do not engage money\nbefore you understand how it works and what profit/loss you should\nexpect.\n\nWe strongly recommend you to have coding and Python knowledge. Do not\nhesitate to read the source code and understand the mechanism of this bot.\n\n## Exchange marketplaces supported\n\n- [X] [Bittrex](https://bittrex.com/)\n- [X] [Binance](https://www.binance.com/) ([*Note for binance users](#a-note-on-binance))\n- [ ] [113 others to tests](https://github.com/ccxt/ccxt/). _(We cannot guarantee they will work)_\n\n## Documentation\n\nWe invite you to read the bot documentation to ensure you understand how the bot is working.\n\nPlease find the complete documentation on our [website](https://www.freqtrade.io).\n\n## Features\n\n- [x] **Based on Python 3.6+**: For botting on any operating system - Windows, macOS and Linux.\n- [x] **Persistence**: Persistence is achieved through sqlite.\n- [x] **Dry-run**: Run the bot without playing money.\n- [x] **Backtesting**: Run a simulation of your buy/sell strategy.\n- [x] **Strategy Optimization by machine learning**: Use machine learning to optimize your buy/sell strategy parameters with real exchange data.\n- [x] **Edge position sizing** Calculate your win rate, risk reward ratio, the best stoploss and adjust your position size before taking a position for each specific market. [Learn more](https://www.freqtrade.io/en/latest/edge/).\n- [x] **Whitelist crypto-currencies**: Select which crypto-currency you want to trade or use dynamic whitelists.\n- [x] **Blacklist crypto-currencies**: Select which crypto-currency you want to avoid.\n- [x] **Manageable via Telegram**: Manage the bot with Telegram.\n- [x] **Display profit/loss in fiat**: Display your profit/loss in 33 fiat.\n- [x] **Daily summary of profit/loss**: Provide a daily summary of your profit/loss.\n- [x] **Performance status report**: Provide a performance status of your current trades.\n\n## Quick start\n\nFreqtrade provides a Linux/macOS script to install all dependencies and help you to configure the bot.\n\n```bash\ngit clone git@github.com:freqtrade/freqtrade.git\ncd freqtrade\ngit checkout develop\n./setup.sh --install\n```\n\nFor any other type of installation please refer to [Installation doc](https://www.freqtrade.io/en/latest/installation/).\n\n## Basic Usage\n\n### Bot commands\n\n```\nusage: freqtrade [-h] [-v] [--logfile FILE] [--version] [-c PATH] [-d PATH]\n                 [-s NAME] [--strategy-path PATH] [--dynamic-whitelist [INT]]\n                 [--db-url PATH] [--sd-notify]\n                 {backtesting,edge,hyperopt} ...\n\nFree, open source crypto trading bot\n\npositional arguments:\n  {backtesting,edge,hyperopt}\n    backtesting         Backtesting module.\n    edge                Edge module.\n    hyperopt            Hyperopt module.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         Verbose mode (-vv for more, -vvv to get all messages).\n  --logfile FILE        Log to the file specified\n  --version             show program's version number and exit\n  -c PATH, --config PATH\n                        Specify configuration file (default: None). Multiple\n                        --config options may be used.\n  -d PATH, --datadir PATH\n                        Path to backtest data.\n  -s NAME, --strategy NAME\n                        Specify strategy class name (default:\n                        DefaultStrategy).\n  --strategy-path PATH  Specify additional strategy lookup path.\n  --dynamic-whitelist [INT]\n                        Dynamically generate and update whitelist based on 24h\n                        BaseVolume (default: 20). DEPRECATED.\n  --db-url PATH         Override trades database URL, this is useful if\n                        dry_run is enabled or in custom deployments (default:\n                        None).\n  --sd-notify           Notify systemd service manager.\n```\n\n### Telegram RPC commands\n\nTelegram is not mandatory. However, this is a great way to control your bot. More details and the full command list on our [documentation](https://www.freqtrade.io/en/latest/telegram-usage/)\n\n- `/start`: Starts the trader\n- `/stop`: Stops the trader\n- `/status [table]`: Lists all open trades\n- `/count`: Displays number of open trades\n- `/profit`: Lists cumulative profit from all finished trades\n- `/forcesell <trade_id>|all`: Instantly sells the given trade (Ignoring `minimum_roi`).\n- `/performance`: Show performance of each finished trade grouped by pair\n- `/balance`: Show account balance per currency\n- `/daily <n>`: Shows profit or loss per day, over the last n days\n- `/help`: Show help message\n- `/version`: Show version\n\n\n## Development branches\n\nThe project is currently setup in two main branches:\n\n- `develop` - This branch has often new features, but might also cause breaking changes.\n- `master` - This branch contains the latest stable release. The bot 'should' be stable on this branch, and is generally well tested.\n- `feat/*` - These are feature branches, which are being worked on heavily. Please don't use these unless you want to test a specific feature.\n\n## Support\n\n### Help / Slack\n\nFor any questions not covered by the documentation or for further\ninformation about the bot, we encourage you to join our slack channel.\n\n- [Click here to join Slack channel](https://join.slack.com/t/highfrequencybot/shared_invite/enQtNjU5ODcwNjI1MDU3LTU1MTgxMjkzNmYxNWE1MDEzYzQ3YmU4N2MwZjUyNjJjODRkMDVkNjg4YTAyZGYzYzlhOTZiMTE4ZjQ4YzM0OGE).\n\n### [Bugs / Issues](https://github.com/freqtrade/freqtrade/issues?q=is%3Aissue)\n\nIf you discover a bug in the bot, please\n[search our issue tracker](https://github.com/freqtrade/freqtrade/issues?q=is%3Aissue)\nfirst. If it hasn't been reported, please\n[create a new issue](https://github.com/freqtrade/freqtrade/issues/new) and\nensure you follow the template guide so that our team can assist you as\nquickly as possible.\n\n### [Feature Requests](https://github.com/freqtrade/freqtrade/labels/enhancement)\n\nHave you a great idea to improve the bot you want to share? Please,\nfirst search if this feature was not [already discussed](https://github.com/freqtrade/freqtrade/labels/enhancement).\nIf it hasn't been requested, please\n[create a new request](https://github.com/freqtrade/freqtrade/issues/new)\nand ensure you follow the template guide so that it does not get lost\nin the bug reports.\n\n### [Pull Requests](https://github.com/freqtrade/freqtrade/pulls)\n\nFeel like our bot is missing a feature? We welcome your pull requests!\n\nPlease read our\n[Contributing document](https://github.com/freqtrade/freqtrade/blob/develop/CONTRIBUTING.md)\nto understand the requirements before sending your pull-requests.\n\nCoding is not a neccessity to contribute - maybe start with improving our documentation?\nIssues labeled [good first issue](https://github.com/freqtrade/freqtrade/labels/good%20first%20issue) can be good first contributions, and will help get you familiar with the codebase.\n\n**Note** before starting any major new feature work, *please open an issue describing what you are planning to do* or talk to us on [Slack](https://join.slack.com/t/highfrequencybot/shared_invite/enQtNjU5ODcwNjI1MDU3LTU1MTgxMjkzNmYxNWE1MDEzYzQ3YmU4N2MwZjUyNjJjODRkMDVkNjg4YTAyZGYzYzlhOTZiMTE4ZjQ4YzM0OGE). This will ensure that interested parties can give valuable feedback on the feature, and let others know that you are working on it.\n\n**Important:** Always create your PR against the `develop` branch, not `master`.\n\n## Requirements\n\n### Uptodate clock\n\nThe clock must be accurate, syncronized to a NTP server very frequently to avoid problems with communication to the exchanges.\n\n### Min hardware required\n\nTo run this bot we recommend you a cloud instance with a minimum of:\n\n- Minimal (advised) system requirements: 2GB RAM, 1GB disk space, 2vCPU\n\n### Software requirements\n\n- [Python 3.6.x](http://docs.python-guide.org/en/latest/starting/installation/)\n- [pip](https://pip.pypa.io/en/stable/installing/)\n- [git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git)\n- [TA-Lib](https://mrjbq7.github.io/ta-lib/install.html)\n- [virtualenv](https://virtualenv.pypa.io/en/stable/installation/) (Recommended)\n- [Docker](https://www.docker.com/products/docker) (Recommended)\n"