b'# Ledger Live (desktop) [![CircleCI](https://circleci.com/gh/LedgerHQ/ledger-live-desktop.svg?style=svg)](https://circleci.com/gh/LedgerHQ/ledger-live-desktop) [![Crowdin](https://d322cqt584bo4o.cloudfront.net/ledger-wallet/localized.svg)](https://crowdin.com/project/ledger-wallet)\n\n- Related: [ledger-live-mobile](https://github.com/ledgerhq/ledger-live-mobile)\n\n> Ledger Live is a new generation wallet desktop application providing a unique interface to maintain multiple cryptocurrencies for your Ledger Nano S / Blue. Manage your device, create accounts, receive and send cryptoassets, [...and many more](https://www.ledger.fr/2018/07/09/ledger-launches-ledger-live-the-all-in-one-companion-app-to-your-ledger-device/).\n\n<a href="https://github.com/LedgerHQ/ledger-live-desktop/releases">\n  <p align="center">\n    <img src="/docs/screenshot.png" width="550"/>\n  </p>\n </a>\n\n## Architecture\n\nLedger Live is an hybrid desktop application built with Electron, React, Redux, RxJS,.. and highly optimized with [ledger-core](https://github.com/LedgerHQ/lib-ledger-core) C++ library to deal with blockchains (sync, broadcast,..) via [ledger-core-node-bindings](https://github.com/LedgerHQ/lib-ledger-core-node-bindings). It communicates to Ledger hardware wallet devices (Nano S / Blue) to verify address and sign transactions with [ledgerjs](https://github.com/LedgerHQ/ledgerjs). Some logic is shared with [live-common](https://github.com/LedgerHQ/ledger-live-common).\n\n<p align="center">\n <img src="/docs/architecture.png" width="550"/>\n</p>\n\n### Coins\n\n- supported by [ledger-core](https://github.com/LedgerHQ/lib-ledger-core) (C++) implementation: BTC BCH LTC DASH QTUM ZEC BTG STRAT DOGE DGB HSR KMD PIVX ZEN VTC PPC VIA XST POSW CLUB\n- supported by JavaScript implementation: ETH, ETC, XRP\n\n## Setup\n\n### Requirements\n\n- [NodeJS](https://nodejs.org) LTS/carbon (Node 8.x)\n- [Yarn](https://yarnpkg.com) LTS\n- [Python](https://www.python.org/) v2.7.10 (used by [node-gyp](https://github.com/nodejs/node-gyp) to build native addons)\n- You will also need a C++ compiler\n\n## Install\n\n```bash\n# install dependencies\nyarn\n```\n\n## Run\n\n```bash\n# launch the app\nyarn start\n```\n\n## Build\n\n```bash\n# Build & package the whole app\n# Creates a .dmg for Mac, .exe installer for Windows, or .AppImage for Linux\n# Output files will be created in dist/ folder\nyarn dist\n```\n\n**Note:** Use `yarn dist:dir` to speed up the process: it will skip the packaging step. Handy for debugging builds. You can also use `BUNDLE_ANALYZER=1 yarn dist:dir` to generate [webpack-bundle-analyzer](https://github.com/webpack-contrib/webpack-bundle-analyzer) report.\n\n---\n\n## Config (optional helpers)\n\n### Environment variables\n\n(you can use a .env or export environment variables)\n\n```bash\nDEV_TOOLS_MODE=bottom # devtools position Options: right, bottom, undocked, detach\nHIDE_DEV_WINDOW=0\n\n## flags for development purpose\nDEBUG_DEVICE=1\nDEBUG_NETWORK=1\nDEBUG_COMMANDS=1\nDEBUG_DB=1\nDEBUG_ACTION=1\nDEBUG_TAB_KEY=1\nDEBUG_LIBCORE=1\nDEBUG_WS=1\nSKIP_GENUINE=1\nSKIP_ONBOARDING=1\nSHOW_LEGACY_NEW_ACCOUNT=1\nHIGHLIGHT_I18N=1\nEXPERIMENTAL_WS_EXPORT=0\nEXPERIMENTAL_LANGUAGES=1\nEXPERIMENTAL_EXPLORERS=1\n\n## constants\nGET_CALLS_TIMEOUT=30000\nGET_CALLS_RETRY=2\nSYNC_MAX_CONCURRENT=6\nSYNC_BOOT_DELAY=2000\nSYNC_ALL_INTERVAL=60000\nCHECK_APP_INTERVAL_WHEN_INVALID=600\nCHECK_APP_INTERVAL_WHEN_VALID=1200\nCHECK_UPDATE_DELAY=5000\n```\n\n### Launch storybook\n\nWe use [storybook](https://storybook.js.org/) for UI development.\n\n```bash\nyarn storybook\n```\n\n### Run code quality checks\n\n```bash\nyarn lint                # launch eslint\nyarn prettier            # launch prettier\nyarn flow                # launch flow\nyarn test                # launch unit tests\n```\n\n### Programmatically reset app files\n\n```bash\n# clear the dev electron user data directory\n# it remove sqlite db, accounts, settings\n# useful to start from a fresh state\n\nyarn reset-files\n```\n\n## File structure\n\n```\n.\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 dist : output folder generate by the build\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 scripts : commands (for building, releasing,...)\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 src\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 internals : code that run on the \'internal\' thread.\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 main : code that run on the \'main\' thread.\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 renderer : code that run on the \'renderer\' thread\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 components : all the React components\n|       \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 modals : sub levels for the modals\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 api : related to HTTP APIs\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 bridge : an abstraction on top of blockchains apis (libcore / js impls)\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 commands : an abstraction to run code over the internal thread\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 icons : all the icons of our app, as React components.\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 config : contains the constants,...\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 helpers : generic folder for our business logic (might be reorganized in the future)\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 middlewares : redux middlewares\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 actions : redux actions\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 reducers : redux reducers\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 sentry : for our bug tracker\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 stories : for storybook\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 styles : theme\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 logger.js : abstraction for all our console.log s\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 types : global flow types\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 static\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 docs\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 fonts\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 i18n\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 images\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 videos\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 webpack : build configuration\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 yarn.lock\n```\n\n## Troubleshooting\n\n#### The \'gyp==0.1\' distribution was not found and is required by the application\n\nYou will need to install the python gyp module\n\n```\npip install git+https://chromium.googlesource.com/external/gyp\n```\n\nsee [stackoverflow/40025591](https://stackoverflow.com/questions/40025591/the-gyp-0-1-distribution-was-not-found)\n'