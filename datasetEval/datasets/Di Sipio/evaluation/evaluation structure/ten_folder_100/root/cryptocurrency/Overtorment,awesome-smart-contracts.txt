b'# Awesome Smart Contracts [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\nCurated list of platforms to run Smart Contracts.\n\n### What is Smart Contract?\n\n```\n"New institutions, and new ways to formalize the relationships that make up these institutions, are now \nmade possible by the digital revolution. I call these new contracts "smart", because they are far more \nfunctional than their inanimate paper-based ancestors. No use of artificial intelligence is implied. \nA smart contract is a set of promises, specified in digital form, including protocols within which the \nparties perform on these promises."\n\n-Nick Szabo, 1996\n```\n```\nSmart contracts are contracts whose terms are encoded in  computer language instead of legal language. \nSmart contracts can be executed by a computing network such as RSK, so that the terms of the contracts \nare automatically enforced by a protocol that all nodes in the network follow.\n\nA smart contract can be fully autonomous if all the objects referred (such as currency, payments, \nobligations, property titles, assets, licenses) have a digital representation in the platform. \n\nSource: https://faq.rsk.co/en/main/\n```\n\n### License\n\n[![CC0](http://i.creativecommons.org/p/zero/1.0/88x31.png)](http://creativecommons.org/publicdomain/zero/1.0/)\n\nTo the extent possible under law, [Igor Korsakov](http://igorkorsakov.com/) has waived all copyright and related or neighboring rights to this work.\n\n### Contribute!\nShare your knowledge. [Contributing guide](CONTRIBUTING.md)\n\n### Referenced by\n* https://hackernoon.com/comparison-of-smart-contract-platforms-2796e34673b7\n* https://medium.com/@PaulRBerg/forget-thrones-welcome-the-game-of-smart-contracts-cf4fad9e0489\n* https://medium.com/coinmonks/should-i-develop-for-blockchain-d3321a6faecd\n\n\n## Platforms list\n\n| Platform name                          | Engine         | Contract language                                           | Live? |Origin | Inc. in     | Est.  | Pub. rel.|\n|----------------------------------------|----------------|:-----------------------------------------------------------:|------:|------:|------------:|------:|----------|\n| [Aeternity](https://aeternity.com/)    | HLM, FTWVM, AEVM | [Sophia, Varna, Solidity](https://github.com/aeternity/protocol/blob/master/contracts/contract_vms.md) | no | FL | Liechtenstein | 2017 | |\n| [Bitcoin](https://bitcoin.org/)        | Bitcoin script |  [Ivy-lang](https://docs.ivy-lang.org), [Balzac](https://blockchain.unica.it/balzac/docs/)           | Yes   | USA     | USA       |2017.12|2017.12   |\n| [BitShares](https://bitshares.org/)    | ?              |  ?                                                          | Yes   |    \n| [Byteball](https://byteball.org)       | Byteball       |  JSON                                                       | Yes   | RU    |             |2016.12|2016.12   |\n|[Cardano](https://cardanofoundation.org)| [IELE](https://iohk.io/blog/iele-a-new-virtual-machine-for-the-blockchain) |  Plutus (Haskell inspired)                                  | no    |HK       |Switzerland|2015   |\n| Counterparty                           | ?              |  ?                                                          | Yes   |    \n| [Corda](https://www.corda.net/)        | ?              |\n| [DFINITY](https://dfinity.org/)        | EVM?           | Ethereum compatible (aka Solidity, Serpent, etc.)                                           | No |  |  |   |  |\n| [EOS](https://eos.io/)                 | EVM / eWASM    |  C/C++ (compiles to WASM)                                   | Yes   |       |             |       |2018.06    \n| [Ethereum](https://www.ethereum.org/)  | EVM            |  Solidity                                                   | Yes   | CA    |Switzerland  |2014.04|2015.07   |\n| [Ethereum Classic](https://ethereumclassic.github.io/)| EVM |  Solidity                                              | Yes   | ^^^   | no          | ^^^   | ^^^      |\n| [Exonum](https://exonum.com)           | ?              |  Rust. Java bindings TBD                                    | No    | UA    |Netherlands  |       |2017.07   |\n| hyperledger                            | Sandbox        |  ?                                                          | ?     |    \n| [Lisk](https://lisk.io/)               | N/A            |  Javascript\n| [Nem](https://nem.io/)                 | Offchiain      |  ?                                                          | ?     |\n| [Neo](https://neo.org/)                | NeoVM          |  1st batch: dotNet; 2nd: Java,Kotlin; 3rd: C,C++,GO,Py,JS (TBD)| Yes| China | China       |2014.06|2016.10   |\n| [Neblio](https://nebl.io)              | ?              |  REST-API, Python,JS, .NET(C# & VB.NET), Objective-C, Java, Node.js, GO, PHP | Yes| USA | USA       |2017.01|2017.07   |\n| NXT                                    | ?              |  ?                                                          | Yes   |    \n| OmniLayer                              | ?              |\n| [Qtum](https://qtum.org/)              | EVM            |  Solidity                                                   | Yes   |Singapore|Singapore  |2016   |2017.09   |\n| quorum                                 | ?              |  ?                                                          | ?     |    \n| [Radix](https://www.radixdlt.com/)     | ?              | Scrypto (Based on JavaScript/TypeScript) | Yes | UK | UK     | 2018  | |\n| [Rootstock](http://www.rsk.co/)        | EVM            |  Solidity                                                   | no    |Argentina|Argentina  |2015.11|\n| [Snax](https://snax.one/)                 | EVM / eWASM    |  C/C++ (compiles to WASM)                                   | no   |       |             | 2018.12 |  \n| [Tezos](https://www.tezos.com)         | ?              |  Michelson                                                  | no    |\n| [Ubiq](http://www.ubiqsmart.com/)      | EVM            |  Solidity                                                   | Yes   | CA    | CA ?        |       |2017.01   |\n| [Universa](https://www.universa.io/)   | ?              |\n| [Urbit](https://urbit.org/)            | ?              |  Hoon                                                       | Yes   |    \n| [Waves](https://wavesplatform.com/)    | ?              |  _NA_                                                       | Yes   |RU     |  ?          |2016   |2016.11   | \n\n## Ethereum\n\nEthereum is a gold standard in smart contracts and has biggest capitalization among other platforms.\nMajority of token sales go on Ethereum platform,  with recently standartized token format ERC-20.\n\nFounded by son of russian expats in Canada Vitalik Buterin. Incorporated in Switzerland.\n\nDocs:\n  * [solidity.readthedocs.io](http://solidity.readthedocs.io)\n  * [Awesome Ethereum list](https://github.com/void4/awesome-ethereum)\n\nContract examples: \n* https://github.com/fivedogit/solidity-baby-steps\n* https://github.com/OpenZeppelin/zeppelin-solidity/tree/master/contracts\n* https://github.com/ConsenSys/\n\n## Ethereum Classic\n\nClassic appeared as a fork of main Ethereum chain (right after famous DAO hack) by a community that disagreed to \nalter the blockchain to get back stolen funds.\nETC is still in search of its place in smart contracts world. Some engineering changes are still going under the hood\n(like, changing the emission and difficulty retarget algo), and developer tools are being developed. \nNo major token crowdsales were made yet, but the community is looking forward to it.\n\nNot incorporated.\n\n\n## Neo\n\nNEO (formerly Antshares) is a Chinese answer to Ethereum. Neo is a major player in SmartContracts world and \noften compared to Ethereum.\n\nFirst batch of supported languages is ready for production use. Second is partially ready, and third is planned.\n\nDocs:\n * [docs.neo.org/en-us/sc/introduction.html](http://docs.neo.org/en-us/sc/introduction.html)\n \nContract examples:\n * https://github.com/neo-project/examples-csharp\n\n## Ubiq\n\nUbiq functions as a fork of Ethereum codebase, with several adjustmens, fully compatible with EVM and Solidity.\n\nGoverned by Ubiq Technology Inc.\n\n## Urbit\n\nContract examples: \n* https://github.com/urbit/examples\n\n\n## Rootstock\n\nRootstock is a Bitcoin sidechain, adding Turing-complete language (enabling smart contracts) and ability to\nscale up to 20k transactions per second (eventually). Sidechain shall be secured by a merge-mining with regular Bitcoin pools.\n\nRootstock is very well received by community, and among all 2nd layer solutions for Bitcoin is considered to be \none of the closest to completion.\n\nLanguage used shall be Solidity, and RSK VM is fully compatible with Ethereum VM.\n\nDocs:\n * https://faq.rsk.co/en/main/\n * https://github.com/rsksmart/rskj/wiki\n * http://media.rsk.co/\n    \n    \n\n## Cardano\n\nCardano claims it is the first Blockchain to use a provably secure, proof of stake algorithm.\nCardano is designed in separate layers, where the 1st layer (aka Settlement Layer; PoS blockchain) is already live (as of 2017.10),\nand internal currency (Ada) being added to exchanges.\n\nSecond (aka computational) layer will run smart contracts using a Haskell-inspired scripting language, called Plutus,\nand is scheduled to release in first quarter 2018.\n\nGoverned by The Cardano Foundation, IOHK and Emurgo.\n\nDocs:\n  * https://whycardano.com/\n  * https://cardanodocs.com/technical/plutus/introduction/  \n    \nContract examples:\n  * https://cardanodocs.com/technical/plutus/examples/\n\n\n## Exonum\n\nExonum is an extensible open-source framework for creating blockchain applications. It is designed to \nallow you, your company or your government to build a tailor-cut private or permissioned blockchain.  \nThus, there\'s no public Exonum network or traded Exonum tokens.\n\nExonum is developed and supported by the Bitfury Group.\n\n```\nServices are the main extension point for the Exonum framework. By itself, Exonum provides building \nblocks for creating blockchains; it does not come with any concrete transaction processing rules. \nThis is where services come into play. If you want to create an instance of the Exonum blockchain, \nservices are the way to go.\n```\n\n```\nEndpoints defined by services fulfill the same role as smart contracts in other blockchain platforms. \nThey define business logic of the blockchain, allow to retrieve data from the blockchain, and can be \nreused across different projects. Partial analogies for this execution model are endpoints of RESTful \nweb services and stored procedures for DBMSs.\n```\n\nDocs:\n  * https://exonum.com/doc/architecture/services/\n  * https://exonum.com/doc/get-started/design-overview/#smart-contracting\n  \nContract examples:\n  * https://exonum.com/doc/get-started/create-service/\n  \n  \n## BitShares\n\nBitShares 2.0 is the first application of Graphene technology.\n\n\n## Qtum\n\nQtum is a hybrid blockchain application platform. Qtum\xe2\x80\x99s core technology combines a fork of bitcoin core, \nan Account Abstraction Layer allowing for multiple Virtual Machines including the Ethereum Virtual Machine (EVM) and Proof-of-Stake consensus.\n\nQtum smart contracts aim to be compatible with existing Ethereum contracts.\n\nMain selling points of Qtum is: lite mobile wallets that can execute smart contracts; compatibility with existing bitcoin infrastructure/tools\n(since Qtum forked off bitcoin, and aims to adopt most of bitcoin BIPs).\n\nQtum started in 2016, in 2017.03 Qtum had a crowdsale distributng their tokens. Main net launched on 2017.10.\n\n\n\n## Waves\n\nWaves is a PoS blockchain specifically designed to issue tokens (and run ICOs). Some of the largest ICOs were run on Waves Platform. \nUsers can also lease funds to miners o generate interest.  There\'s also a decentralized exchange (DEX) with front-run protection, \nand gateways to common fiat currencies.\n\nNon-Turing-complete [smart contracts](https://docs.wavesplatform.com/technical-details/waves-contracts-language-description.html) support [was launched](https://blog.wavesplatform.com/waves-smart-contracts-stage-1-311e4e5a0441) on TestNet on May 3, 2018. \n\nDocs:\n  * https://github.com/wavesplatform/Waves/wiki/Waves-Node-REST-API\n  * https://github.com/wavesplatform/Waves/wiki/Matcher\n\n## Bitcoin\n\n### Ivy\n\nIvy: a smart contract language that compiles to Bitcoin Script\n\nDocs:\n* https://blog.chain.com/ivy-for-bitcoin-a-smart-contract-language-that-compiles-to-bitcoin-script-bec06377141a\n* https://docs.ivy-lang.org/bitcoin/\n\nOnline tool:\n* https://ivy-lang.org/bitcoin\n\n### Balzac\n\nBalzac: an high-level language for writing transactions, verifying their correctness, and compiling them into actual Bitcoin transactions.\n\nDocs:\n* https://blockchain.unica.it/balzac/docs/\n\nOnline tool:\n* https://blockchain.unica.it/balzac/\n\n## Neblio\n\nThe Neblio network has an assortment of services that deploy blockchain technology. Simply put, it is an API suite, hosting platform, \nconsultancy service provider, Node deployment base as well as a private blockchain DApps.\n\nNeblio uses RESTful APIs to give maximum compatibility to almost any language.\n\nDocs:\n* https://nebl.io\n* https://nebl.io/wp-content/uploads/2017/07/NeblioWhitepaper.pdf\n* https://github.com/NeblioTeam\n* https://neblio.wiki\n'