b"BitShares-UI\n============\n[\xe4\xb8\xad\xe6\x96\x87\xe7\x89\x88](README_zh.md)\n\nThis is a light wallet that connects to a BitShares API provided by the *witness_node* executable.\n\nIt *stores all keys locally* in the browser, *never exposing your keys to anyone* as it signs transactions locally before transmitting them to the API server which then broadcasts them to the blockchain network. The wallet is encrypted with a password of your choosing and encrypted in a browser database.\n\n## Getting started\n\nBitShares-UI depends node Node.js, and version 8+ is required.\n\nOn Ubuntu and OSX, the easiest way to install Node is to use the [Node Version Manager](https://github.com/creationix/nvm).\n\nTo install NVM for Linux/OSX, simply copy paste the following in a terminal:\n\n```\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.30.2/install.sh | bash\nnvm install v9\nnvm use v9\n```\n\nOnce you have Node installed, you can clone the repo:\n\n```\ngit clone https://github.com/bitshares/bitshares-ui.git\ncd bitshares-ui\n```\n\nBefore launching the GUI you will need to install the npm packages:\n\n```\nnpm install\n```\n\n## Running the dev server\n\nThe dev server uses Express in combination with Webpack.\n\nOnce all the packages have been installed you can start the development server by running:\n\n```\nnpm start\n```\n\nOnce the compilation is done the GUI will be available in your browser at: `localhost:8080` or `127.0.0.1:8080`. Hot Reloading is enabled so the browser will live update as you edit the source files.\n\n\n## Testnet\nBy default bitshares-ui connects to the live BitShares network, but it's very easy to switch it to the testnet run by Xeroc. To do so, open the UI in a browser, go to Settings, then under Access, select the *Public Testnet Server* in the dropdown menu. You should also change the faucet if you need to create an account, the testnet faucet address is https://testnet.bitshares.eu.\n\nThe UI will reload and connect to the testnet, where you can use the faucet to create an account and receive an initial sum of test BTS.\n\n![image](https://cloud.githubusercontent.com/assets/6890015/22055747/f8e15e68-dd5c-11e6-84cd-692749b578d8.png)\n\n## Production\nIf you'd like to host your own wallet somewhere, you should create a production build and host it using NGINX or Apache. In order to create a prod bundle, simply run the following command:\n\n```\nnpm run build\n```\nThis will create a bundle in the ./build/dist folder that can be hosted with the web server of your choice.\n\n\n### Installable wallets\nWe use Electron to provide installable wallets, available for Windows, OSX and Linux Debian platforms such as Ubuntu. First, make sure your local python version is 2.7.x, as a dependency requires this.\n\nOn Linux you will need to install the following packages to handle icon generation:\n\n`sudo apt-get install --no-install-recommends -y icnsutils graphicsmagick xz-utils`\n\nFor building, each architecture has it's own script that you can use to build your native binary:\n\n__Linux__\n`npm run package-deb`  \n__Windows__\n`npm run package-win`  \n__Mac__\n`npm run package-mac`  \n\nThis will compile the UI with some special modifications for use with Electron, generate installable binaries with Electron and copy the result to the root `build/binaries` folder.\n\n\n### Docker\n\nClone this repository, run `docker-compose up` and visit localhost:8080\n\n\n## Contributing & Coding style guideline\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## Code of Conduct\nThis repository has a Code of Conduct that should be followed by everyone. \nPlease read [CODE_OF_CONDUCT.md](CODE_OF_CONDUCT.md)\n\n**Please keep comments constructive and clean**\n\n## BrowserStack \n\nThe BitShares UI is integrated with BrowserStack (https://www.browserstack.com) to allow manual compatibility testing across devices and browser versions. In the future we will switch to a automated Selenium testing framework.\n![image](https://user-images.githubusercontent.com/33128181/48697885-05f8d880-ebe6-11e8-95a2-d87516cbb3d9.png)\n\n## Release Branches\nDevelopment is processed through two week milestones.\nThere are three branches that forms the current release process.\n\n### Develop\nAll PRs should be pushed to the `develop` branch. At the end of each milestone this branch is pushed to `staging`.\nNew commits are automatically deployed to this branch and published for review.\n\nAvailable for browsing on https://develop.bitshares.org/\n\n### Staging (Current Release Candidate)\nAt the end of each milestone, `develop` branch is pushed to staging and forms the Release Candidate. The date of the RC forms the name, ie. 190214-RC*.\n\nApplication breaking issues and bugs should be submitted to the issue tracker and PRs should be pushed to `staging`.\n\nAvailable for browsing on https://staging.bitshares.org/\n\n### Master (stable)\nWhen all issues to the current RC are fixed, `staging` branch is released to the stable `master` branch.\n\nAvailable for browsing on https://wallet.bitshares.org/, which is the official reference wallet for Bitshares.\n\n\n\n"