b'# Waves [![Build Status](https://travis-ci.org/wavesplatform/Waves.svg?branch=master)](https://travis-ci.org/wavesplatform/Waves)\n\nWaves is an open source [blockchain platform](https://wavesplatform.com/).\n\nYou can use it to build your own decentralised applications. Waves provides full blockchain ecosystem including smart contracts language called RIDE.\n\n### How does the blockchain network work?\n\nThere is a huge collection of nodes deployed by miners that store all of the network information in the chain of blocks (blockchain), process requests and can add new transactions to the network after checking their compliance with the rules. The miners are rewarded with the network coins called MRT. \n\nThe main advantage of this technology is that each node is a synchronized copy of the main blockchain: it means that the information is stored decentralized and won\'t be overwritten globally if one of the users changes it at one of the node storages. This can guarantee that the user\'s information will stay fair and unchangeable. \n\n\n\n# What is node?\n\nA **node** is a [host](https://en.wikipedia.org/wiki/Host_(network)) connected to the [blockchain network](https://docs.wavesplatform.com/en/blockchain/blockchain-network.html) using the [Waves Node](https://github.com/wavesplatform/Waves) application.\n\nNode functions are:\n\n- [blocks](https://docs.wavesplatform.com/en/blockchain/block.html) storage\n- [transaction validation](https://docs.wavesplatform.com/en/blockchain/transaction/transaction-validation.html)\n- sending [transactions](https://docs.wavesplatform.com/en/blockchain/transaction.html)\n\n\n\nLearn more about Waves Full Node in the [documentation](https://docs.wavesplatform.com/en/waves-node/what-is-a-full-node.html).\n\n\n\n\n\n# How to Build and Test a Node\n\nThe node can be built and installed wherever java can run. For ***Ubuntu***,sbt packageAll \xe2\x80\x8cproduces only deb package but for other operating systems, ZIP archive or a fat JAR can be used as well. To build and test your Waves Node, you will need to follow these steps:\n\n\n\n## 1. Setup the environment\n\n- ### Installing Java\n\n```\nsudo apt-get update\nsudo apt-get install default-jre default-jdk\n```\n\n- ### Installing SBT\n\nPlease follow the SBT installation instructions depending on your operating system ([Mac](https://www.scala-sbt.org/1.0/docs/Installing-sbt-on-Mac.html), [Windows](https://www.scala-sbt.org/1.0/docs/Installing-sbt-on-Windows.html), [Linux](https://www.scala-sbt.org/1.0/docs/Installing-sbt-on-Linux.html)).\n\n\n\n## 2. Obtaining Source Codes\n\nCloning with HTTPS URLs (recommended)\n\n```\ngit clone https://github.com/wavesplatform/Waves.git\ncd Waves\n```\n\nor cloning with SSH URLs\n\n```\ngit clone git@github.com:wavesplatform/Waves.git\ncd Waves\n```\n\n\n\n## 3. Compilation and unit tests\n\n```\nsbt checkPR\n```\n\n\n\n## 4. Running NODE integration tests (optional)\n\nCreate a Docker image before you run any test: `sbt node-it/docker`\n\n- Run all tests: `SBT_THREAD_NUMBER=4 sbt node-it/test` . You can increase or decrease number of parallel running tests by changing `SBT_THREAD_NUMBER`\n- Run one test: `sbt node-it/testOnly *.TestClassName` or `node-it/testOnly full.package.TestClassName`\n\n\n\n## 5. Building packages\n\n- ### Mainnet\n\n```\nsbt packageAll\n```\n\n- ### Testnet\n\n```\nsbt -Dnetwork=testnet packageAll\n```\n\n\n\n## 6. Installing DEB package\n\nDEB package located in target folder. You can replace \'*\' with actual package name:\n\n```\nsudo dpkg -i node/target/*.deb\n```\n\n\n\n## 7. Running fat jar\n\nYou can replace waves-all*.jar with actual jar name (it should have "all"-word):\n\n```\njava -jar node/target/waves-all*.jar path/to/config/file\n```\n\n**Note.** For OSX - homebrew is preferable choice. You can install java with brew cask install java and sbt with brew install sbt@1. Build/Test steps are common for any OS (but you should use \xe2\x80\x98\' instead of \'/\' in windows). {% endprettyhint %}\n\n\n\n## 8. Running an extension project locally during development\n\n### SBT\n\n```\nsbt "extension-module/run /path/to/configuration"\n\n```\n\n### IntelliJ IDEA\n\n1. Click on `Add configuration` (or `Edit configurations...`)\n2. Click on `+` to add a new configuration, choose `Application`\n3. Specify:\n   - Main class: `com.wavesplatform.Application`\n   - Program arguments: `/path/to/configuration`\n   - Use classpath of module: `extension-module`\n4. Click on `OK`\n5. Run this configuration\n\n\n\n> There is another way to run a Waves Node: using **Waves Docker container**. Learn more about it in the [docs](https://docs.wavesplatform.com/en/waves-node/waves-node-in-docker.html). \n\n\n\n# Useful links\n\n- [Official Documentation](https://docs.wavesplatform.com/)\n- [Client Mainnet](https://client.wavesplatform.com/) \xe2\x80\x93 Waves Platform client\n- [Explorer Mainnet](https://wavesexplorer.com/) \xe2\x80\x93 Waves Platform transactions explorer\n- [Testnet](https://testnet.wavesplatform.com/) \xe2\x80\x93 the alternative Waves blockchain being used for testing\n- [Testnet Explorer](https://wavesexplorer.com/testnet) \xe2\x80\x93 Test Net transactions explorer\n- [RIDE](https://github.com/wavesplatform/waves-documentation/blob/master/en/ride/ride-script.md) \xe2\x80\x93 Waves smart contract coding language\n- [Waves Ride IDE](https://ide.wavesplatform.com/) \xe2\x80\x93 software for RIDE coding\n\n\n\n# Support\n\nKeep up with the latest news and articles, and find out all about events happening on the [Waves Platform](https://wavesplatform.com/).\n\n- [Telegram Dev Chat](https://t.me/waves_ride_dapps_dev)\n- [Community Forum](https://forum.wavesplatform.com/)\n- [Community Portal](https://wavescommunity.com/)\n- [Waves Blog](https://blog.wavesplatform.com/)\n- [Support](https://support.wavesplatform.com/)\n\n\n\n# Acknowledgement\n\n![img](https://camo.githubusercontent.com/97fa03cac759a772255b93c64ab1c9f76a103681/68747470733a2f2f7777772e796f75726b69742e636f6d2f696d616765732f796b6c6f676f2e706e67)\n\nWe use YourKit full-featured Java Profiler to make Waves node faster. YourKit, LLC is the creator of innovative and intelligent tools for profiling Java and .NET applications.\n\nTake a look at YourKit\'s leading software products: YourKit Java Profiler and YourKit .NET Profiler.\n'