b'<img src=\'logo.png\' width=\'600\' alt="Project\'s logo" />\n\n[![Build Status](https://dev.azure.com/DigitalRuby/DigitalRuby/_apis/build/status/jjxtra_ExchangeSharp?branchName=master)](https://dev.azure.com/DigitalRuby/DigitalRuby/_build/latest?definitionId=5&branchName=master) [![NuGet](https://img.shields.io/nuget/dt/DigitalRuby.ExchangeSharp.svg)][nuget]\n\n## Overview\nExchangeSharp is a C# **framework/lib** and [console app](#Installing-the-CLI) for trading and communicating with [various](#Exchanges) exchange API end points for cryptocurrency assets. Many exchanges are supported, along with [web sockets](#Websockets), withdraws and more!\n\nFeel free to visit the discord channel at https://discord.gg/sHCUHH3 and chat with other developers.\n\n### Features\n- Many exchanges supported with public, private and web socket API\n- Easy to use and well documented code and API\n- Optional global market symbol normalization, since each exchange has their own way of doing market symbols\n- Runs anywhere .NET Core runs. (Windows, Mac, Linux, Containers, Serverless, iOS, Android, [etc.](https://docs.microsoft.com/en-us/dotnet/core/about))\n- Can be used from [many different C# platforms](https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.0.md#platform-support)\n- Has a great [CLI](#Installing-the-CLI) that enables you to use all features from all exchanges right from your command line.\n\n### Exchanges\nThe following cryptocurrency exchanges are supported:  \n(Web socket key: T = tickers, R = trades, B = order book, O = private orders)\n\n|Exchange Name     |Public REST|Private REST |Web Socket | Notes\n| ---------------- | --------- | ----------- | --------- | ---------\n| Binance          | x         | x           | T R B     |\n| Binance.US       | x         | x           | T R B     |\n| Binance DEX      |           |             |   R       |\n| Bitbank          | x         | x           |           |\n| Bitfinex         | x         | x           | T R   O   |\n| Bithumb          | x         |             |           |\n| BitMEX           | x         | x           |   R   O   |\n| Bitstamp         | x         | x           |   R       |\n| Bittrex          | x         | x           | T R       |\n| BL3P             | x         | x           |   R B     | Trades stream does not send trade\'s ids.\n| Bleutrade        | x         | x           |           |\n| Coinbase         | x         | x           | T R       |\n| Digifinex        | x         | x           |   R B     |\n| Gemini           | x         | x           |   R       |\n| HitBTC           | x         | x           |   R       |\n| Huobi            | x         | x           |   R B     |\n| Kraken           | x         | x           |   R       | Dark order symbols not supported\n| KuCoin           | x         | x           | T R       |\n| LBank            | x         | x           |           |\n| Livecoin         | x         | x           |           |\n| OKCoin           | x         | x           |   R B     |\n| OKEx             | x         | x           |   R B     |\n| Poloniex         | x         | x           | T R B     |\n| YoBit            | x         | x           |           |\n| ZB.com           | wip       |             |   R       |\n| NDAX             | x         | x           | T R       |\n\nThe following cryptocurrency services are supported:\n- Cryptowatch (partial)\n\n### Installing the CLI\n\nOn *nix systems:\n  - Run this command `curl https://github.com/jjxtra/ExchangeSharp/raw/master/install-console.sh | sh`\n\nOn Windows (or manually):\n  - Download the [latest binaries](https://github.com/jjxtra/ExchangeSharp/releases/latest) for your OS.\n  - Unzip it into a folder that is in your environment variable `PATH` (`ctrl` + `shift` + `pause|break` -> Environment Variables)\n  - Use it from the your preferred command-line emulator (e.g. Powershell, cmd, etc.)\n  - `exchange-sharp --help` shows all available commands\n\n### Notes\nExchangeSharp uses **`marketSymbol`** to refer to markets, or pairs of currencies.\n\nPlease send pull requests if you have made a change that you feel is worthwhile, want a bug fixed or want a new feature. You can also donate to get new features.\n\n### [Building/Compiling](./BUILDING.md)\n\n### Websockets\n\nIf you must use an older Windows (older than win8.1), you\'ll need to use the [Websocket4Net][websocket4net] nuget package, and override the web socket implementation by calling\n\n```csharp\nExchangeSharp.ClientWebSocket.RegisterWebSocketCreator(\n    () => new ExchangeSharpConsole.WebSocket4NetClientWebSocket()\n);\n```\n\nSee [`WebSocket4NetClientWebSocket.cs`][websocket4net] for implementation details.\n\n### Nuget\n\n#### dotnet CLI\n[`dotnet add package DigitalRuby.ExchangeSharp --version 0.6.3`][nuget]\n\n#### Package Manager on VS\n[`PM> Install-Package DigitalRuby.ExchangeSharp -Version 0.6.3`][nuget]\n\n### Examples\n\n#### Creating an order\n\nThere\'s a lot of examples on how to use the API in our [console application](./src/ExchangeSharpConsole/Options). \\\ne.g.\n[`ExampleOption.cs`](./src/ExchangeSharpConsole/Options/ExampleOption.cs)\n\n#### Getting ticker info via Web Sockets\n\n```csharp\npublic static async Task Main(string[] args)\n{\n    // create a web socket connection to Binance. Note you can Dispose the socket anytime to shut it down.\n    using var api = new ExchangeBinanceAPI();\n    // the web socket will handle disconnects and attempt to re-connect automatically.\n    using var socket = await api.GetTickersWebSocket(tickers =>\n    {\n        Console.WriteLine("{0} tickers, first: {1}", tickers.Count, tickers.First());\n    });\n\n    Console.WriteLine("Press ENTER to shutdown.");\n    Console.ReadLine(true);\n}\n```\n\n### Logging\nExchangeSharp uses NLog internally _currently_. To log, use `ExchangeSharp.Logger`.\n\nDo **not** use `Console.WriteLine` to log messages in the lib project.\n\nProvide your own `nlog.config` or `app.config` nlog configuration if you want to change logging settings or turn logging off.\n\n### Caching\n\nThe `ExchageAPI` class provides a method caching mechanism. Use `MethodCachePolicy` to put caching behind public methods, or clear to remove caching. Some methods are cached by default. You can set `ExchangeAPI.UseDefaultMethodCachePolicy` to `false` to stop all caching as well.\n\nYou can also set request cache policy if you want to tweak how the http caching behaves.\n\n### How to contribute\nPlease read the [contributing guideline](CONTRIBUTING.md) **before** submitting a **pull request**.\n\n### Consulting\nI\'m happy to make customizations to the software for you and keep in private repo, email exchangesharp@digitalruby.com.\n\n### Donations Gratefully Accepted\nBelieve it or not, donations are quite rare. I\'ve posted publicly the total donation amounts below. If ExchangeSharp has helped you in anyway, please consider donating.\n\n[![Donate with Bitcoin](https://en.cryptobadges.io/badge/small/1GBz8ithHvTqeRZxkmpHx5kQ9wBXuSH8AG)](https://en.cryptobadges.io/donate/1GBz8ithHvTqeRZxkmpHx5kQ9wBXuSH8AG)\n\n[![Donate with Litecoin](https://en.cryptobadges.io/badge/small/LWxRMaVFeXLmaq5munDJxADYYLv2szYi9i)](https://en.cryptobadges.io/donate/LWxRMaVFeXLmaq5munDJxADYYLv2szYi9i)\n\n[![Donate with Ethereum](https://en.cryptobadges.io/badge/small/0x77d3D990859a8c3e3486b5Ad63Da223f7F3778dc)](https://en.cryptobadges.io/donate/0x77d3D990859a8c3e3486b5Ad63Da223f7F3778dc)\n\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=L67Q4KQN5DHLY)\n\nDonation totals:\n0.02350084 BTC, 10.25 LTC\n\nThanks for visiting!\n\nJeff Johnson  \njeff@digitalruby.com  \nhttp://www.digitalruby.com  \n\n [nuget]: https://www.nuget.org/packages/DigitalRuby.ExchangeSharp/\n [websocket4net]: https://github.com/kerryjiang/WebSocket4Net'