b'<h1 align="center">\n  <img src="logo.svg" width="360px" height="123px" alt="furl">\n</h1>\n\n<p align="center">\n  <a href="https://pypi.python.org/pypi/furl"><img src="https://badge.fury.io/py/furl.svg"></a>\n  <a href="https://travis-ci.org/gruns/furl"><img src="https://img.shields.io/travis/gruns/furl.svg"></a>\n  <a href="http://unlicense.org/"><img src="https://img.shields.io/pypi/l/furl.svg"></a>\n  <a href="https://pypi.python.org/pypi/furl"><img src="https://img.shields.io/pypi/pyversions/furl.svg"></a>\n</p>\n\n### furl is a small Python library that makes parsing and<br>manipulating URLs easy.\n\nPython\'s standard [urllib](https://docs.python.org/2/library/urllib.html) and\n[urlparse](https://docs.python.org/2/library/urlparse.html) modules provide a\nnumber of URL\\\nrelated functions, but using these functions to perform common\nURL\\\noperations proves tedious. Furl makes parsing and manipulating URLs\\\neasy.\n\nFurl is well tested, [Unlicensed](http://unlicense.org/) in the public domain,\nand supports\\\nPython 2, Python 3, PyPy2, and PyPy3.\n\nCode time: Paths and query arguments are easy. Really easy.\n\n```python\n>>> from furl import furl\n>>> f = furl(\'http://www.google.com/?one=1&two=2\')\n>>> f /= \'path\'\n>>> f.args[\'three\'] = \'3\'\n>>> del f.args[\'one\']\n>>> f.url\n\'http://www.google.com/path?two=2&three=3\'\n```\n\nOr use furl\'s inline modification methods.\n\n```python\n>>> furl(\'http://www.google.com/?one=1\').add({\'two\':\'2\'}).url\n\'http://www.google.com/?one=1&two=2\'\n\n>>> furl(\'http://www.google.com/?one=1&two=2\').set({\'three\':\'3\'}).url\n\'http://www.google.com/?three=3\'\n\n>>> furl(\'http://www.google.com/?one=1&two=2\').remove([\'one\']).url\n\'http://www.google.com/?two=2\'\n```\n\nEncoding is handled for you. Unicode, too.\n\n```python\n>>> f = furl(\'http://www.google.com/\')\n>>> f.path = \'some encoding here\'\n>>> f.args[\'and some encoding\'] = \'here, too\'\n>>> f.url\n\'http://www.google.com/some%20encoding%20here?and+some+encoding=here,+too\'\n>>> f.set(host=u\'\xe3\x83\x89\xe3\x83\xa1\xe3\x82\xa4\xe3\x83\xb3.\xe3\x83\x86\xe3\x82\xb9\xe3\x83\x88\', path=u\'\xd0\xb4\xd0\xb6\xd0\xba\', query=u\'\xe2\x98\x83=\xe2\x98\xba\')\n>>> f.url\n\'http://xn--eckwd4c7c.xn--zckzah/%D0%B4%D0%B6%D0%BA?%E2%98%83=%E2%98%BA\'\n```\n\nFragments also have a path and a query.\n\n```python\n>>> f = furl(\'http://www.google.com/\')\n>>> f.fragment.path.segments = [\'two\', \'directories\']\n>>> f.fragment.args = {\'one\': \'argument\'}\n>>> f.url\n\'http://www.google.com/#two/directories?one=argument\'\n```\n\nOr get fancy.\n\n```python\n>>> f = furl(\'http://www.google.com/search?q=query#1\')\n>>> f.copy().remove(path=True).set(host=\'taco.com\')\n...  .join(\'/pumps.html\').add(fragment_path=\'party\').url\n\'http://taco.com/pumps.html#party\'\n>>>\n>>> f.asdict()\n{ \'url\': \'http://taco.com/pumps.html#party\',\n  \'scheme\': \'http\',\n  \'username\': None,\n  \'password\': None,\n  \'host\': \'taco.com\',\n  \'host_encoded\': \'taco.com\',\n  \'port\': 80,\n  \'netloc\': \'taco.com\',\n  \'origin\': \'http://taco.com\',\n  \'path\': { \'encoded\': \'/pumps.html\',\n            \'isabsolute\': True,\n            \'isdir\': False,\n            \'isfile\': True,\n            \'segments\': [\'pumps.html\']},\n  \'query\': { \'encoded\': \'\',\n             \'params\': []},\n  \'fragment\': { \'encoded\': \'party\',\n                \'path\': { \'encoded\': \'party\',\n                          \'isabsolute\': False,\n                          \'isdir\': False,\n                          \'isfile\': True,\n                          \'segments\': [\'party\']},\n                \'query\': { \'encoded\': \'\',\n                           \'params\': []},\n                \'separator\': True}, }\n\n```\n\n\n### API\n\nSee more furl magic and examples in furl\'s API document,\n[API.md](https://github.com/gruns/furl/blob/master/API.md).\n\n\n### Installation\n\nInstalling furl with pip is easy.\n\n```\n$ pip install furl\n```\n'