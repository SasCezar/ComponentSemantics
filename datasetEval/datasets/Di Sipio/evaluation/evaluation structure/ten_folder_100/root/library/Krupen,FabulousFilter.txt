b'# FabulousFilter\n[![API](https://img.shields.io/badge/API-15%2B-brightgreen.svg)](https://android-arsenal.com/api?level=15) [![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-FabulousFilter-2CB3E5.svg)]( https://android-arsenal.com/details/1/5943) [![Material Up](https://img.shields.io/badge/MaterialUp-FabulousFilter-2856b6.svg)](https://material.uplabs.com/posts/fabulousfilter-library)\n\n### Show some :heart: and star the repo to support the project\n[![GitHub stars](https://img.shields.io/github/stars/Krupen/FabulousFilter.svg?style=social)](https://github.com/Krupen/FabulousFilter/stargazers) [![GitHub forks](https://img.shields.io/github/forks/Krupen/FabulousFilter.svg?style=social)](https://github.com/Krupen/FabulousFilter/network) [![GitHub watchers](https://img.shields.io/github/watchers/Krupen/FabulousFilter.svg?style=social)](https://github.com/Krupen/FabulousFilter/watchers) [![GitHub followers](https://img.shields.io/github/followers/Krupen.svg?style=social)](https://github.com/Krupen/followers)  \n[![Twitter Follow](https://img.shields.io/twitter/follow/KrupenGhetiya.svg?style=social&label=Follow)](https://twitter.com/krupenghetiya)\n\n\nThis library is the implementation of filter-concept posted on <a href="https://material.uplabs.com/posts/filters-interface-resources" target="_blank">MaterialUp.com</a>.\n\nIt makes animation of FloatingActionButton to BottomSheetDialog easy to implement.\n\n# Concept\n![fabulousfilter concept](https://raw.githubusercontent.com/Krupen/FabulousFilter/master/concept.gif)\n\n# Demo\n![fabulousfilter demo 1](https://raw.githubusercontent.com/Krupen/FabulousFilter/master/newDemo1.gif)  ![fabulousfilter demo 1](https://raw.githubusercontent.com/Krupen/FabulousFilter/master/newDemo2.gif)\n\n# Download\n**Gradle**\n\n**Step 1.** Add the jCenter repository to your project-level build.gradle file\n\n``` groovy\nallprojects {\n\trepositories {\n\t\tjcenter()\n\t}\n}\n```\n\n**Step 2.** Add the dependency to your app-level build.gradle file:\n\n``` groovy\ndependencies {\n\t compile \'com.allattentionhere:fabulousfilter:0.0.5\'\n}\n```\n\n# Usage\n\nCreate a Fragment that extends `AAH_FabulousFragment`:\n```\npublic class MySampleFabFragment extends AAH_FabulousFragment {\n\n    public static MySampleFabFragment newInstance() {\n        MySampleFabFragment f = new MySampleFabFragment();\n        return f;\n    }\n\n    @Override\n\n    public void setupDialog(Dialog dialog, int style) {\n        View contentView = View.inflate(getContext(), R.layout.filter_sample_view, null);\n        RelativeLayout rl_content = (RelativeLayout) contentView.findViewById(R.id.rl_content);\n        LinearLayout ll_buttons = (LinearLayout) contentView.findViewById(R.id.ll_buttons);\n        contentView.findViewById(R.id.btn_close).setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                closeFilter("closed");\n            }\n        });\n\n        //params to set\n        setAnimationDuration(600); //optional; default 500ms\n        setPeekHeight(300); // optional; default 400dp\n        setCallbacks((Callbacks) getActivity()); //optional; to get back result\n\tsetAnimationListener((AnimationListener) getActivity()); //optional; to get animation callbacks\n        setViewgroupStatic(ll_buttons); // optional; layout to stick at bottom on slide\n        setViewPager(vp_types); //optional; if you use viewpager that has scrollview\n        setViewMain(rl_content); //necessary; main bottomsheet view\n        setMainContentView(contentView); // necessary; call at end before super\n        super.setupDialog(dialog, style); //call super at last\n    }\n\n}\n```\nCreate view for the fragment which has parent element `AAH_FilterView`:\n```\n<com.allattentionhere.fabulousfilter.AAH_FilterView \n    xmlns:android="http://schemas.android.com/apk/res/android"\n    xmlns:tools="http://schemas.android.com/tools"\n    android:layout_width="match_parent"\n    android:layout_height="match_parent"\n    android:orientation="vertical">\n\n    <RelativeLayout\n        android:id="@+id/rl_content"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        android:layout_alignParentBottom="true"\n        android:background="@color/orange"\n        android:visibility="invisible"\n        tools:ignore="MissingPrefix"\n        tools:visibility="visible">\n\n        <LinearLayout\n            android:id="@+id/ll_buttons"\n            android:layout_width="match_parent"\n            android:layout_height="56dp"\n            android:layout_alignParentBottom="true"\n            android:background="@color/brown"\n            android:orientation="horizontal"\n            android:weightSum="2">\n        </LinearLayout>\n\n    </RelativeLayout>\n\n</com.allattentionhere.fabulousfilter.AAH_FilterView>\n```\n\nStart the fragment on click of FloatingActionButton as below:\n```\nfab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                MySampleFabFragment dialogFrag = MySampleFabFragment.newInstance();\n                dialogFrag.setParentFab(fab);\n                dialogFrag.show(getSupportFragmentManager(), dialogFrag.getTag());\n            }\n        });\n```\n\n# Parameters\n\n* ### Main View (Required)\nThis parameter specifies the ViewGroup of the bottom sheet to be shown after animation ends. It can be any ViewGroup(LinearLayout/FrameLayout etc):\n```\nsetViewMain(relativelayout_content);\n```\n\n* ### Inflated Dialog View (Required)\nThis parameter specifies the inflated view for the dialog:\n```\nsetMainContentView(contentDialogView);\n```\n\n* ### Animation duration (Optional)\nThis parameter sets animation duration of translate and scale animation in `milliseconds`:\n```\nsetAnimationDuration(600); // default 500ms\n```\n\n* ### Peek Height (Optional)\nThis parameter sets the peek height of the bottom sheet in `dp`:\n```\nsetPeekHeight(300); // default 400dp\n```\n\n* ### Callback (Optional)\nThis paramter is used to get callback from `AAH_FabulousFragment` to the component that called it:\n```\nsetCallbacks((Callbacks) getActivity());\n```\nTo use it, implement the callback in the calling component(Activity/Fragment etc), example:\n```\npublic class MainSampleActivity extends AppCompatActivity implements AAH_FabulousFragment.Callbacks {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main_sample);\n    }\n\n    @Override\n    public void onResult(Object result) {\n        Log.d("k9res", "onResult: " + result.toString());\n        if (result.toString().equalsIgnoreCase("swiped_down")) {\n            //do something or nothing\n        } else {\n            //handle result\n        }\n    }\n}\n\n```\n\n* ### Animation Listener (Optional)\nThis parameter is used to get animation callbacks.\n```\nsetAnimationListener((AnimationListener) getActivity());\n```\nTo use it, implement the AnimationListener in the calling component(Activity/Fragment etc), example:\n```\npublic class MainSampleActivity extends AppCompatActivity implements AAH_FabulousFragment.AnimationListener {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main_sample);\n    }\n    \n   @Override\n    public void onOpenAnimationStart() {\n        //do something on open animation start\n    }\n\n    @Override\n    public void onOpenAnimationEnd() {\n        //do something on open animation end\n    }\n\n    @Override\n    public void onCloseAnimationStart() {\n        //do something on close animation start\n    }\n\n    @Override\n    public void onCloseAnimationEnd() {\n        //do something on close animation start\n    }\n}\n\n```\n\n* ### Static View (Optional)\nThis parameter is used to make view in Bottom Sheet static when user slides it. It can be any ViewGroup(LinearLayout/FrameLayout etc):\n```\nsetViewgroupStatic(linearlayout_buttons);\n```\n\n* ### ViewPager (Optional)\nThis parameter is used to support scrolling in ViewPager as BottomSheetDialog does not support multiple views with scroll:\n```\nsetViewPager(viewPager);\n```\n# Libraries by developer\n* <a href="https://github.com/Krupen/AutoplayVideos" target="_blank">AutoplayVideos</a>\n\n# Apps by developer\n[![Price Stalker](https://github.com/Krupen/AutoplayVideos/blob/master/pricestalker.png?raw=true)](https://play.google.com/store/apps/details?id=com.allattentionhere.pricestalker)  [![Show Card Game](https://github.com/Krupen/AutoplayVideos/blob/master/show.png?raw=true)](https://play.google.com/store/apps/details?id=com.allattentionhere.show)  [![Safio chat](https://github.com/Krupen/AutoplayVideos/blob/master/safiochat.png?raw=true)](https://play.google.com/store/apps/details?id=com.allattentionhere.safio)\n\n# License\nCopyright 2017 Krupen Ghetiya\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n'