b'**Notice: TSMessages is no longer being maintained/updated. We recommend everyone migrate to [RMessage](https://github.com/donileo/RMessage).**\n\n**This repository will be kept as is for those who want to continue using TSMessages or are in the process of migrating. If an issue you submitted to TSMessages still applies to RMessage feel free to create a new issue in RMessage\'s repository.**\n\n**If your project is Swift based, you might want to check out [SwiftMessages](https://github.com/SwiftKickMobile/SwiftMessages), which offers the same features, but is written completely in Swift.**\n\nTSMessages\n==========\n\nThis library provides an easy to use class to show little notification views on the top of the screen. (\xc3\xa0 la Tweetbot).\n\n[![Twitter: @KauseFx](https://img.shields.io/badge/contact-@KrauseFx-blue.svg?style=flat)](https://twitter.com/KrauseFx)\n[![Version](https://img.shields.io/cocoapods/v/TSMessages.svg?style=flat)](http://cocoadocs.org/docsets/TSMessages)\n[![License](https://img.shields.io/cocoapods/l/TSMessages.svg?style=flat)](http://cocoadocs.org/docsets/TSMessages)\n[![Platform](https://img.shields.io/cocoapods/p/TSMessages.svg?style=flat)](http://cocoadocs.org/docsets/TSMessages)\n\nThe notification moves from the top of the screen underneath the navigation bar and stays there for a few seconds, depending on the length of the displayed text. To dismiss a notification before the time runs out, the user can swipe it to the top or just tap it.\n\nThere are 4 different types already set up for you: Success, Error, Warning, Message (take a look at the screenshots)\n\nIt is very easy to add new notification types with a different design. Add the new type to the notificationType enum, add the needed design properties to the configuration file and set the name of the theme (used in the config file and images) in TSMessagesView.m inside the switch case.\n\n**Take a look at the Example project to see how to use this library.** You have to open the workspace, not the project file, since the Example project uses cocoapods.\n\nGet in contact with the developer on Twitter: [KrauseFx](https://twitter.com/KrauseFx) (Felix Krause)\n\n# Installation\n\n## From CocoaPods\nTSMessages is available through [CocoaPods](https://cocoapods.org/). To install\nit, simply add the following line to your Podfile:\n\n    pod "TSMessages"\n    \n## Manually\nCopy the source files TSMessageView and TSMessage into your project. Also copy the TSMessagesDesignDefault.json.\n\n# Usage\n\nTo show notifications use the following code:\n\n```objective-c\n    [TSMessage showNotificationWithTitle:@"Your Title"\n                                subtitle:@"A description"\n                                    type:TSMessageNotificationTypeError];\n\n\n    // Add a button inside the message\n    [TSMessage showNotificationInViewController:self\n                                          title:@"Update available"\n                                       subtitle:@"Please update the app"\n                                          image:nil\n                                           type:TSMessageNotificationTypeMessage\n                                       duration:TSMessageNotificationDurationAutomatic\n                                       callback:nil\n                                    buttonTitle:@"Update"\n                                 buttonCallback:^{\n                                     NSLog(@"User tapped the button");\n                                 }\n                                     atPosition:TSMessageNotificationPositionTop\n                           canBeDismissedByUser:YES];\n\n\n    // Use a custom design file\n    [TSMessage addCustomDesignFromFileWithName:@"AlternativeDesign.json"];\n```\n\nYou can define a default view controller in which the notifications should be displayed:\n```objective-c\n   [TSMessage setDefaultViewController:myNavController];\n```\n\nYou can define a default view controller in which the notifications should be displayed:\n```objective-c\n   [TSMessage setDelegate:self];\n   \n   ...\n   \n   - (CGFloat)messageLocationOfMessageView:(TSMessageView *)messageView\n   {\n    return messageView.viewController...; // any calculation here\n   }\n```\n\nYou can customize a message view, right before it\'s displayed, like setting an alpha value, or adding a custom subview\n```objective-c\n   [TSMessage setDelegate:self];\n   \n   ...\n   \n   - (void)customizeMessageView:(TSMessageView *)messageView\n   {\n      messageView.alpha = 0.4;\n      [messageView addSubview:...];\n   }\n```\n\nYou can customize message view elements using UIAppearance\n```objective-c\n#import <TSMessages/TSMessageView.h>\n@implementation TSAppDelegate\n....\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n//If you want you can overidde some properties using UIAppearance\n[[TSMessageView appearance] setTitleFont:[UIFont boldSystemFontOfSize:6]];\n[[TSMessageView appearance] setTitleTextColor:[UIColor redColor]];\n[[TSMessageView appearance] setContentFont:[UIFont boldSystemFontOfSize:10]];\n[[TSMessageView appearance]setContentTextColor:[UIColor greenColor]];\n[[TSMessageView appearance]setErrorIcon:[UIImage imageNamed:@"NotificationButtonBackground"]];\n[[TSMessageView appearance]setSuccessIcon:[UIImage imageNamed:@"NotificationButtonBackground"]];\n[[TSMessageView appearance]setMessageIcon:[UIImage imageNamed:@"NotificationButtonBackground"]];\n[[TSMessageView appearance]setWarningIcon:[UIImage imageNamed:@"NotificationButtonBackground"]];\n//End of override\n\nreturn YES;\n}\n```\n\n\n\nThe following properties can be set when creating a new notification:\n\n* **viewController**: The view controller to show the notification in. This might be the navigation controller.\n* **title**: The title of the notification view\n* **subtitle**: The text that is displayed underneath the title (optional)\n* **image**: A custom icon image that is used instead of the default one (optional)\n* **type**: The notification type (Message, Warning, Error, Success)\n* **duration**: The duration the notification should be displayed\n* **callback**: The block that should be executed, when the user dismissed the message by tapping on it or swiping it to the top.\n\nExcept the title and the notification type, all of the listed values are optional\n\nIf you don\'t want a detailed description (the text underneath the title) you don\'t need to set one. The notification will automatically resize itself properly. \n\n## Screenshots\n\n**iOS 7 Design**\n\n![iOS 7 Error](http://www.toursprung.com/wp-content/uploads/2013/09/error_ios7.png)\n\n![iOS 7 Message](http://www.toursprung.com/wp-content/uploads/2013/09/warning_ios7.png)\n\n**iOS 6 Design**\n\n![Warning](http://www.toursprung.com/wp-content/uploads/2013/04/iNotificationWarning.png)\n\n![Success](http://www.toursprung.com/wp-content/uploads/2013/04/iNotificationSuccess.png)\n\n![Error](http://www.toursprung.com/wp-content/uploads/2013/04/iNotificationError.png)\n\n![Message](http://www.toursprung.com/wp-content/uploads/2013/04/iNotificationMessage.png)\n\n\n# License\nTSMessages is available under the MIT license. See the LICENSE file for more information.\n\n# Recent Changes\nCan be found in the [releases section](https://github.com/KrauseFx/TSMessages/releases) of this repo.\n'