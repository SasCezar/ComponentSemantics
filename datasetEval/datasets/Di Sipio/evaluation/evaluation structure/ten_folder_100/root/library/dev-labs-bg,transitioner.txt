b'![logo](https://raw.githubusercontent.com/dev-labs-bg/transitioner/master/logo.png)\n\n[![License: MIT](https://img.shields.io/badge/license-MIT-a31f34.svg?style=flat-square)](https://opensource.org/licenses/MIT) [![Download](https://img.shields.io/badge/download-1.3-6db33f.svg?style=flat-square&label=version)](https://bintray.com/radoslav/maven/transitioner/1.3/link) [![Kotlin](https://img.shields.io/badge/kotlin-1.2.0-f5801e.svg?style=flat-square)](http://kotlinlang.org) [![Twitter URL](https://img.shields.io/badge/twitter-%40devlabsbg-1DA1F2.svg?style=flat-square&logo=twitter)](http://twitter.com/devlabsbg)\n\nTransitioner provides easy, dynamic and adjustable animations between two views with nested children.\n\n\n<img src="https://github.com/dev-labs-bg/transitioner/blob/master/preview1.gif" width="600">\n\nApp design feature [here](https://www.uplabs.com/posts/ios-weather-app-animation-interface).\n## Usage\n\nFirst you need to create a Transitioner object containing your original and ending views:\n\n```kotlin\nval transition = Transitioner(original_view, ending_view)\n```\n  \nThe view pairs must have matching "tag" attributes so that they can be bound together:\n\n```xml\n<ConstraintLayout\n        android:id="@+id/original_view"\n        android:tag="constrView"\n        ...>\n\n        <TextView\n            android:id="@+id/text"\n            android:tag="firstView"\n            .../>\n</ConstraintLayout>\n\n<ConstraintLayout\n        android:id="@+id/ending_view"\n        android:tag="constrView"\n        android:visibility="invisible"\n        ...>\n\n        <EditText\n            android:id="@+id/text3"\n            android:tag="firstView"\n            .../>\n </ConstraintLayout>\n```\n\nI recommend you hide the second view layout, since it\'s only used as a placeholder for the end destination.\nThe views can be of any type, you can mix and match them, the two layouts can have a different number of views and nested layouts are 100% supported. The only things to keep in mind are:\n\n-  all views which you would want to match together must have the same tag attribute in both layouts\n\n-  all unmatched views will remain at their original place inside the original layout\n\n-  the second layout is just a placeholder. It doesn\'t hold any logic, it only shows where the original layout should move to.\n\n### Basic Usage\n\n```kotlin\n transition.setProgress(0.5f)\n //or\n transition.setProgress(50)\n```\n\n### Additional methods and tweaks\n```kotlin\ntransition.duration = 500\n\ntransition.interpolator = AccelerateDecelerateInterpolator()\n\ntransition.animateTo(percent = 0f)\n\ntransition.onProgressChanged {\n//triggered on every progress change of the transition\n    seekBar.progress = (it * 100).toInt()\n    }\n    \nval progress: Float = transition.currentProgress\n\n```\n\nHere is a preview of a simple application made using this library\n\n![Preview](https://raw.githubusercontent.com/dev-labs-bg/transitioner/master/preview.gif)\n\nThis effect can be reproduced by placing the "Transitioner.setProgress(Float)" function inside a onTouch or a onProgressChanged method.\n\n---\n## Download\n\n### Gradle\n\n```gradle\ndependencies {\n  compile \'bg.devlabs.transitioner:transitioner:<latest_version>\'\n}\n ```\n \n### Maven\n```xml\n<dependency>\n  <groupId>bg.devlabs.transitioner</groupId>\n  <artifactId>transitioner</artifactId>\n  <version>latest_version</version>\n  <type>pom</type>\n</dependency>\n```\n\n### Manually\n\nYou can also manually download [the library class](https://github.com/dev-labs-bg/transitioner/blob/master/transitioner/src/main/java/bg/devlabs/transitioner/Transitioner.kt) and use it in your application.\n\n---\n## Compatibility\n\nMinimum Android SDK: API level 19\n\n---\n## Author\n\nRadoslav Yankov [@Radoslav_Y](https://twitter.com/Radoslav_Y)\n\n---\n## Getting help\n\nIf you spot a problem you can open an issue on the Github page, or alternatively, you can tweet us at [@devlabsbg](https://twitter.com/devlabsbg)\n\n---\n## License\n\nTransitioner is released under the [MIT License](https://gitlab.com/SimonaStoyanova/flying-fab/blob/master/LICENSE).\n'