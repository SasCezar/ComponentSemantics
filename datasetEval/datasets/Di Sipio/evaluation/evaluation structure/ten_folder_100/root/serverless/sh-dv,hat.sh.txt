b'\n<p align="center">\n  <a href="#" rel="noopener">\n <img src="https://i.imgur.com/F8nNzHi.png"></a>\n</p>\n\n<a href="https://hat.sh" style="color:#000"><h3 align="center">Hat.sh</h3></a>\n\n<div align="center">\n\n  [![Status](https://img.shields.io/badge/status-active-success.svg)](#)\n  [![Build](https://travis-ci.org/sh-dv/hat.sh.svg?branch=master)](https://travis-ci.org/sh-dv/hat.sh)\n  [![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg)](#)\n\n<a href="https://www.producthunt.com/posts/hat-sh?utm_source=badge-featured&utm_medium=badge&utm_souce=badge-hat-sh" target="_blank">\n    <img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=157956&theme=dark&period=daily" alt="hat.sh - Free, fast, secure and serverless file encryption | Product Hunt Embed" width="250px"/>\n</a>\n<br>\n<a href="https://www.privacytools.io/software/encryption-tools/" target="_blank">\n    <img src="https://i.imgur.com/Euyd1ap.png" alt="hat.sh - Free, fast, secure and serverless file encryption" width="250px"/>\n</a>\n\n</div>\n\n---\n\n\n[hat.sh](https://hat.sh) is a  javascript app that provides secure file encryption using the [AES-256-GCM](https://www.w3.org/TR/WebCryptoAPI/#aes-gcm) algorithm from [WebCryptoAPI](https://www.w3.org/TR/WebCryptoAPI/#aes-gcm) provided by your browser. it was coded following the WebCrypto [Documentations](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto) .\n\n It\'s **fast**, **secure** and **Serverless**, the app never uploads the files to the server.\n \nin a small amount of code the app can encrypt any **type** of files at any **size** within seconds.\n \nTo use the app all you have to do is **Browse** a file,  **Type** a Decryption Key or **Generate** one through our secure key generator. and your encrypted file is ready to download.\n\n\n\n\n## How to use\njust simply browse a file, type a decryption key or use our secure key generator, and encrypt or decrypt.\n\n![enter image description here](https://i.imgur.com/btZRe3c.gif)\n\n## Offline Use\n\nthe app is cross-platform and is available to download on [**macOS**](https://github.com/sh-dv/hat.sh/releases/download/release-builds/hat.sh-mac.zip) , [**Windows**](https://github.com/sh-dv/hat.sh/releases/download/release-builds/hat.sh-win.zip) and [**linux**](https://github.com/sh-dv/hat.sh/releases/download/release-builds/hat.sh-linux.zip)\n\n## Requirements\n[NodeJS and NPM](https://www.npmjs.com/get-npm)\n\n[Browserify](http://browserify.org/#install) which lets you require(\'modules\') in the browser by bundling up all of your dependencies.\n\n## Installation\n\nDownload or clone the repository\n\n \n\n    $ git clone https://github.com/sh-dv/hat.sh.git hat.sh\n\ngo to the app directory\n\n    cd [app directory]\n\nopen terminal and install the node modules that are in the package.json file\n\n    sudo npm install\nafter the packages are installed \nbundle main app.js and modules together in one file using Browserify\n\n    browserify src/js/app.js -o bundle.js\nthen start the app by running index.html\n\n## Browser Compatibility\nWe officially support the last two versions of every major browser. Specifically, we test on the following \n-   **Chrome**  on Windows, macOS, and Linux , IOS, Android\n-   **Firefox**  on Windows, macOS, and Linux\n-   **Safari**  on iOS and macOS\n-   **Edge**  on Windows\n-   **IE 11**  on Windows\n\nfor more info see [WebCryptoAPI](https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API) home page\n![enter image description here](https://i.imgur.com/hJveblf.png)\n\n\n## Crypto Examples\n\n#### AES-GCM - generateKey\n```javascript\n  window.crypto.subtle.generateKey(\n    {\n      name: "AES-GCM",\n      length: 256,\n    },\n    true,\n    ["encrypt", "decrypt"]\n  )\n.then(function(key){\n    console.log(key);\n})\n.catch(function(err){\n    console.error(err);\n});\n```\n#### AES-GCM - importKey\n```javascript\nfunction importSecretKey(rawKey) {\n    return window.crypto.subtle.importKey(\n      "raw",\n      rawKey,\n      "AES-GCM",\n      true,\n      ["encrypt", "decrypt"]\n    );\n  }\n.then(function(key){\n    console.log(key);\n})\n.catch(function(err){\n    console.error(err);\n});\n```\n#### AES-GCM - exportKey\n```javascript\nasync function exportCryptoKey(key) {\n    const exported = await window.crypto.subtle.exportKey(\n      "raw",\n      key\n    )\n.then(function(keydata){\n    console.log(keydata);\n})\n.catch(function(err){\n    console.error(err);\n});\n```\n#### AES-GCM - encrypt\n```javascript\nasync function encryptMessage(key) {\n    let encoded = getMessageEncoding();\n    // The iv must never be reused with a given key.\n    iv = window.crypto.getRandomValues(new Uint8Array(12));\n    ciphertext = await window.crypto.subtle.encrypt(\n            {\n                name: "AES-GCM",\n                iv: iv\n            },\n            key,\n            encoded\n        )\n        .then(function (encrypted) {\n            console.log(new Uint8Array(encrypted));\n        })\n        .catch(function (err) {\n            console.error(err);\n        });\n}\n```\n#### AES-GCM - decrypt\n```javascript\nasync function decryptMessage(key) {\n    let encoded = getMessageEncoding();\n    let decrypted = await window.crypto.subtle.decrypt({\n            name: "AES-GCM",\n            iv: iv\n        },\n        key,\n        ciphertext\n       )\n       .then(function (decrypted) {\n            console.log(new Uint8Array(encrypted));\n        })\n        .catch(function (err) {\n            console.error(err);\n        });\n}\n```\n## Credits\n[zxcvbn.js](https://github.com/dropbox/zxcvbn) for Smart Password Strength Estimation\n\n[bootstrap](https://github.com/twbs/bootstrap) for the responsive css layout\n\n[font-awesome](https://github.com/FortAwesome/Font-Awesome) for the icons\n\n## License\n[Copyright (c) 2019 sh-dv](https://github.com/sh-dv/hat.sh/blob/master/LICENSE)\n'