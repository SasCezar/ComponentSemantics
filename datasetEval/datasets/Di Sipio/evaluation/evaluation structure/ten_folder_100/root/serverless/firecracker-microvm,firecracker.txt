b'![Firecracker Logo Title](docs/images/fc_logo_full_white-bg.png)\n\nOur mission is to enable secure, multi-tenant, minimal-overhead execution of\ncontainer and function workloads.\n\nRead more about the Firecracker Charter [here](CHARTER.md).\n\n## What is Firecracker?\n\nFirecracker is an open source virtualization technology that is purpose-built\nfor creating and managing secure, multi-tenant container and function-based\nservices that provide serverless operational models. Firecracker runs workloads\nin lightweight virtual machines, called microVMs, which combine the security and\nisolation properties provided by hardware virtualization technology with the\nspeed and flexibility of containers.\n\nThe main component of Firecracker is a virtual machine monitor (VMM) that uses\nthe Linux Kernel Virtual Machine (KVM) to create and run microVMs. Firecracker\nhas a minimalist design. It excludes unnecessary devices and guest-facing\nfunctionality to reduce the memory footprint and attack surface area of each\nmicroVM. This improves security, decreases the startup time, and increases\nhardware utilization. Firecracker currently supports Intel, AMD (preview) and\nArm (preview) CPUs. Firecracker has also been integrated in container runtimes,\nfor example\n[Kata Containers](https://github.com/kata-containers/documentation/wiki/Initial-release-of-Kata-Containers-with-Firecracker-support)\nand [Weaveworks Ignite](https://github.com/weaveworks/ignite).\n\nFirecracker was developed at Amazon Web Services to accelerate the speed and\nefficiency of services like [AWS Lambda](https://aws.amazon.com/lambda/) and\n[AWS Fargate](https://aws.amazon.com/fargate/). Firecracker is open\nsourced under [Apache version 2.0](LICENSE).\n\nTo read more about Firecracker, check out\n[firecracker-microvm.io](https://firecracker-microvm.github.io).\n\n## Getting Started\n\nTo get started with Firecracker, download the latest\n[release](https://github.com/firecracker-microvm/firecracker/releases) binaries\nor build it from source.\n\nYou can build Firecracker on any system that has Docker running (we use a\ndevelopment container) as follows:\n\n```bash\ngit clone https://github.com/firecracker-microvm/firecracker\ncd firecracker\ntools/devtool build\ntoolchain="$(uname -m)-unknown-linux-musl"\n```\n\nThe Firecracker binary will be placed at\n`build/cargo_target/${toolchain}/debug/firecracker`. For more information on\nbuilding, testing, and running Firecracker, go to the\n[quickstart guide](docs/getting-started.md).\n\nThe overall security of Firecracker microVMs, including the ability to meet the\ncriteria for safe multi-tenant computing, depends on a well configured Linux\nhost operating system. A configuration that we believe meets this bar is\nincluded in [the production host setup document](docs/prod-host-setup.md).\n\n## Contributing\n\nFirecracker is already running production workloads within AWS, but it\'s still\nDay 1 on the journey guided by our [mission](CHARTER.md). There\'s a lot more to\nbuild and we welcome all contributions.\n\nTo contribute to Firecracker, check out the development setup section in the\n[getting started guide](docs/getting-started.md) and then the Firecracker\n[contribution guidelines](CONTRIBUTING.md).\n\n## Releases\n\nNew Firecracker versions are released via the GitHub repository\n[releases](https://github.com/firecracker-microvm/firecracker/releases) page,\ntypically every one or two months. A history of changes is recorded in our\n[changelog](CHANGELOG.md).\n\n## Design\n\nFirecracker\'s overall architecture is described in\n[the design document](docs/design.md).\n\n## Features & Capabilities\n\nFirecracker consists of a single micro Virtual Machine Manager process that\nexposes an API endpoint to the host once started. The API is\n[specified in OpenAPI format](api_server/swagger/firecracker.yaml). Read more\nabout it in the [API docs](docs/api_requests).\n\nThe **API endpoint** can be used to:\n\n- Configure the microvm by:\n  - Setting the number of vCPUs (the default is 1).\n  - Setting the memory size (the default is 128 MiB).\n  - Choosing a CPU template (currently, C3 and T2 are available).\n- Add one or more network interfaces to the microVM.\n- Add one or more read-write or read-only disks to the microVM, each represented\n  by a file-backed block device.\n- Trigger a block device re-scan while the guest is running. This enables the\n  guest OS to pick up size changes to the block device\'s backing file.\n- Change the backing file for a block device, before or after the guest boots.\n- Configure rate limiters for virtio devices which can limit the bandwidth,\n  operations per second, or both.\n- Configure the logging and metric system.\n- `[BETA]` Configure the data tree of the guest-facing metadata service. The\n  service is only available to the guest if this resource is configured.\n- Add a [vsock socket](docs/vsock.md) to the microVM.\n- Start the microVM using a given kernel image, root file system, and boot\n  arguments.\n- Stop the microVM.\n\n**Built-in Capabilities**:\n\n- Demand fault paging and CPU oversubscription enabled by default.\n- [Jailer](docs/jailer.md) process for starting Firecracker in production\n  scenarios; applies a cgroup/namespace/seccomp rule isolation barrier and then\n  drops privileges.\n\n## Performance\n\nFirecracker\'s performance characteristics are listed as part of the\n[specification documentation](SPECIFICATION.md). All specifications are a part\nof our commitment to supporting container and function workloads in serverless\noperational models, and are therefore enforced via continuous integration\ntesting.\n\n## Policy for Security Disclosures\n\nThe security of Firecracker is our top priority. If you suspect you have\nuncovered a vulnerability, contact us privately, as outlined in our\n[security policy document](SECURITY-POLICY.md); we will immediately prioritize\nyour disclosure.\n\n## FAQ & Contact\n\nFrequently asked questions are collected in our [FAQ doc](FAQ.md).\n\nYou can get in touch with the Firecracker community in the following ways:\n- Security-related issues, see our [security policy document](SECURITY-POLICY.md).\n- Chat with us on our\n  [Slack workspace](https://join.slack.com/t/firecracker-microvm/shared_invite/enQtNDY2NTUwMzQ3MDE1LWIwMzA0OWFkMTZhMTlmMDZiMmFkYjMyODMxMGQ1ZjliMzJjNjJiNWRhNWNkOGEyNmUxNmRkMjZhYTc3MmVjZjM).\n  _Note: most of the maintainers are on a European time zone._\n- Open a GitHub issue in this repository.\n- Email the maintainers at\n  [firecracker-maintainers@amazon.com](mailto:firecracker-maintainers@amazon.com).\n- [Subscribe](https://lists.infradead.org/mailman/listinfo/firecracker-devel) to\n  our development email list:\n  [firecracker-devel@lists.infradead.org](mailto:firecracker-devel@lists.infradead.org).\n\nWhen communicating within the Firecracker community, please mind our\n[code of conduct](CODE_OF_CONDUCT.md).\n'