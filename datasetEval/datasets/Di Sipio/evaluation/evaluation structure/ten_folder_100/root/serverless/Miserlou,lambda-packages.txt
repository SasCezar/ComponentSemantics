b'![Logo](http://i.imgur.com/AlmKP2q.png)\n\n# lambda-packages\n[![Build Status](https://travis-ci.org/Miserlou/lambda-packages.svg)](https://travis-ci.org/Miserlou/lambda-packages)\n[![PyPI](https://img.shields.io/pypi/v/lambda-packages.svg)](https://pypi.python.org/pypi/lambda-packages)\n[![Slack](https://img.shields.io/badge/chat-slack-ff69b4.svg)](https://slack.zappa.io)\n\nVarious popular libraries, pre-compiled to be compatible with AWS Lambda.\n\nCurrently includes (at least Python 2.7) support for:\n\n* bcrypt\n* cffi\n* cryptography\n* datrie_extended\n* LXML\n* misaka\n* MySQL-Python\n* mysqlclient\n* numpy\n* OpenCV\n* Pillow (PIL)\n* psycopg2\n* PyCrypto\n* PyNaCl\n* pyproj\n* python-ldap\n* python-Levenshtein\n* regex\n* SQLite\n* xmlsec\n\nThis project is intended for use by [Zappa](https://github.com/Miserlou/Zappa), but could also be used by any Python/Lambda project.\n\n## Installation\n\n    pip install lambda-packages\n\n## Usage\n\nThe best way to use these packages is with [Zappa](https://github.com/Miserlou/Zappa), which will automatically install the right packages during deployment, and do a million other useful things. Whatever you\'re currently trying to do on Lambda, it\'ll be way easier for you if you just use Zappa right now. Trust me. It\'s awesome. As a bonus, Zappa now also provides support for [manylinux wheels](https://blog.zappa.io/posts/zappa-adds-support-for-manylinux-wheels), which adds support for hundreds of other packages.\n\nBut, if you want to use this project the other (wrong) way, just put the contents of the .tar.gz archive into your lambda .zip.\n\n**lambda-packages** also includes a manifest with information about the included packages and the paths to their binaries.\n\n```python\nfrom lambda_packages import lambda_packages\n\nprint lambda_packages[\'psycopg2\']\n\n#{\n#    \'python2.7\': {\n#        \'version\': \'2.6.1\',\n#        \'path\': \'<absolute-local-path>/lambda_packages/psycopg2/python2.7-psycopg2-2.6.1.tar.gz\'\n#    }\n#}\n```\n\n## Contributing\n\nTo add support for more packages, send a pull request containing a gzipped tarball (`tar -zcvf <package-name>.tar.gz <list-of-files>`) of the package (built on Amazon Linux and tested on AWS Lambda) in the appropriate directory, an updated manifest, and deterministic build instructions for creating the archive.\n\nYou may find the [build.sh script](https://github.com/Miserlou/lambda-packages/blob/master/lambda_packages/cryptography/build.sh) useful as a starting point.\n\nBefore contributing, you should also make sure that there is no `manylinux` wheel on PyPI for your package, as Zappa will automatically use those in addition to `lambda-packages`.\n\nYou may also be interested in [this guide on deploying with Zappa and Docker](https://blog.zappa.io/posts/simplified-aws-lambda-deployments-with-docker-and-zappa).\n\nUseful targets which don\'t have manylinux wheels versions include:\n\n* MongoEngine\n\n## Support / Development / Training / Consulting\n\nDo you need help with..\n\n  * Porting existing Python applications to AWS Lambda?\n  * Building new applications and services that scale infinitely?\n  * Reducing your operations and hosting costs?\n  * Training your team to use AWS and other server-less paradigms?\n\nGood news! We\'re currently available for remote and on-site consulting for small, large and enterprise teams. Please contact <miserlou@gmail.com> with your needs and let\'s work together!\n\n<br />\n<p align="center">\n  <a href="https://gun.io"><img src="http://i.imgur.com/M7wJipR.png" alt="Made by Gun.io"/></a>\n</p>\n'