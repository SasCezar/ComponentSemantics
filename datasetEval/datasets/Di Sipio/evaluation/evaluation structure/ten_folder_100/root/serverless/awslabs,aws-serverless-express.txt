b"# AWS Serverless Express\n\n[![Join the chat at https://gitter.im/awslabs/aws-serverless-express](https://badges.gitter.im/awslabs/aws-serverless-express.svg)](https://gitter.im/awslabs/aws-serverless-express?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Build Status](https://travis-ci.org/awslabs/aws-serverless-express.svg?branch=master)](https://travis-ci.org/awslabs/aws-serverless-express) [![npm](https://img.shields.io/npm/v/aws-serverless-express.svg)]() [![npm](https://img.shields.io/npm/dm/aws-serverless-express.svg)]() [![dependencies Status](https://david-dm.org/awslabs/aws-serverless-express/status.svg)](https://david-dm.org/awslabs/aws-serverless-express) [![devDependencies Status](https://david-dm.org/awslabs/aws-serverless-express/dev-status.svg)](https://david-dm.org/awslabs/aws-serverless-express?type=dev)\n\nRun serverless applications and REST APIs using your existing [Node.js](https://nodejs.org/) application framework, on top of [AWS Lambda](https://aws.amazon.com/lambda/) and [Amazon API Gateway](https://aws.amazon.com/api-gateway/). The sample provided allows you to easily build serverless web applications/services and RESTful APIs using the [Express](https://expressjs.com/) framework.\n\n## Getting Started\n\n```bash\nnpm install aws-serverless-express\n```\n\n```js\n// lambda.js\n'use strict'\nconst awsServerlessExpress = require('aws-serverless-express')\nconst app = require('./app')\nconst server = awsServerlessExpress.createServer(app)\n\nexports.handler = (event, context) => { awsServerlessExpress.proxy(server, event, context) }\n```\n\n[Package and create your Lambda function](http://docs.aws.amazon.com/lambda/latest/dg/nodejs-create-deployment-pkg.html), then configure a simple proxy API using Amazon API Gateway and integrate it with your Lambda function.\n\n## Quick Start/Example\n\nWant to get up and running quickly? [Check out our basic starter example](examples/basic-starter) which includes:\n\n - Lambda function\n - Express server\n [Swagger file](http://swagger.io/specification/)\n - [Serverless Application Model (SAM)](https://github.com/awslabs/serverless-application-model)/[CloudFormation](https://aws.amazon.com/cloudformation/aws-cloudformation-templates/) template\n - Helper scripts to configure, deploy, and manage your application\n\n### Getting the API Gateway event object\nThis package includes middleware to easily get the event object Lambda receives from API Gateway\n\n```js\nconst awsServerlessExpressMiddleware = require('aws-serverless-express/middleware')\napp.use(awsServerlessExpressMiddleware.eventContext())\napp.get('/', (req, res) => {\n  res.json(req.apiGateway.event)\n})\n```\n\n### Is AWS serverless right for my app?\n\n#### Benefits\n\n - Pay for what you use\n - No infrastructure to manage\n - Auto-scaling with no configuration needed\n - [Usage Plans](http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html)\n - [Caching](http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html)\n - [Authorization](http://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-control-access-to-api.html)\n - [Staging](http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html)\n - [SDK Generation](http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-generate-sdk.html)\n - [API Monitoring](http://docs.aws.amazon.com/apigateway/latest/developerguide/monitoring-cloudwatch.html)\n - [Request Validation](http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-request-validation.html)\n - [Documentation](http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html)\n\n#### Considerations\n\n - For apps that may not see traffic for several minutes at a time, you could see [cold starts](https://aws.amazon.com/blogs/compute/container-reuse-in-lambda/)\n - Cannot use native libraries (aka [Addons](https://nodejs.org/api/addons.html)) unless you package your app on an EC2 machine running Amazon Linux\n - Stateless only\n - API Gateway has a timeout of 29 seconds, and Lambda has a maximum execution time of 15 minutes.\n"