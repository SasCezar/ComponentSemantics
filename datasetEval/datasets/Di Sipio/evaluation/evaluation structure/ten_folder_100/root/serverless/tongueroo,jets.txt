b'<div align="center">\n  <a href="http://rubyonjets.com"><img src="http://rubyonjets.com/img/logos/jets-logo-full.png" /></a>\n</div>\n\nRuby and Lambda splat out a baby and that child\'s name is [Jets](http://rubyonjets.com/).\n\n![Build Status](https://codebuild.us-west-2.amazonaws.com/badges?uuid=eyJlbmNyeXB0ZWREYXRhIjoiRXY0bzFlZS93TUF0cXhDaGdEY2FIbTVtdW43YjB0andmbnRTL3VvbWJOcTBOM3IxWDZPSFh2OHpvczBmdU5QcHpjUThvd084RERORFlvZVI4QWVKcis0PSIsIml2UGFyYW1ldGVyU3BlYyI6IllBZk0xTmVWZ3c2K3VWdTYiLCJtYXRlcmlhbFNldFNlcmlhbCI6MX0%3D&branch=master)\n[![CircleCI](https://circleci.com/gh/tongueroo/jets.svg?style=svg)](https://circleci.com/gh/tongueroo/jets)\n[![Gem Version](https://badge.fury.io/rb/jets.svg)](https://badge.fury.io/rb/jets)\n[![Support](https://img.shields.io/badge/Support-Help-blue.svg)](http://rubyonjets.com/support/)\n[![Gitter Chat](https://badges.gitter.im/tongueroo/jets.png)](https://gitter.im/tongueroo/jets)\n\n[![BoltOps Badge](https://img.boltops.com/boltops/badges/boltops-badge.png)](https://www.boltops.com)\n\n**Upgrading**: If you are upgrading Jets, please check on the [Upgrading Notes](http://rubyonjets.com/docs/extras/upgrading/).\n\n## What is Ruby on Jets?\n\nJets is a Ruby Serverless Framework.  Jets allows you to create serverless applications with a beautiful language: Ruby.  It includes everything required to build an application and deploy it to AWS Lambda.\n\nIt is key to understand AWS Lambda and API Gateway to understand Jets conceptually.  Jets maps your code to Lambda functions and API Gateway resources.\n\n* **AWS Lambda** is Functions as a Service. It allows you to upload and run functions without worrying about the underlying infrastructure.\n* **API Gateway** is the routing layer for Lambda. It is used to route REST URL endpoints to Lambda functions.\n\nThe official documentation is at [Ruby on Jets](http://rubyonjets.com).\n\nRefer to the official docs for more info, but here\'s a quick intro.\n\n### Jets Functions\n\nJets supports writing AWS Lambda functions with Ruby. You define them in the `app/functions` folder. A function looks like this:\n\napp/functions/simple.rb:\n\n```ruby\ndef lambda_handler(event:, context:)\n  puts "hello world"\n  {hello: "world"}\nend\n```\n\nHere\'s the function in the Lambda console:\n\n![Code Example in AWS Lambda console](https://raw.githubusercontent.com/tongueroo/jets/master/docs/img/docs/jets-simple-lambda-function-console.png)\n\n\nThough simple functions are supported by Jets, they do not add much value as other ways to write Ruby code with Jets. Classes like [Controllers](http://rubyonjets.com/docs/controllers/) and [Jobs](http://rubyonjets.com/docs/jobs/) add many conveniences and are more powerful to use. We\xe2\x80\x99ll cover them next.\n\n### Jets Controllers\n\nA Jets controller handles a web request and renders a response.  Here\'s an example:\n\napp/controllers/posts_controller.rb:\n\n```ruby\nclass PostsController < ApplicationController\n  def index\n    # renders Lambda Proxy structure compatible with API Gateway\n    render json: {hello: "world", action: "index"}\n  end\n\n  def show\n    id = params[:id] # params available\n    # puts goes to the lambda logs\n    puts event # raw lambda event available\n    render json: {action: "show", id: id}\n  end\nend\n```\n\nHelper methods like `params` provide the parameters from the API Gateway event. The `render` method renders a Lambda Proxy structure back that API Gateway understands.\n\nJets creates Lambda functions for each public method in your controller. Here they are in the Lambda console:\n\n![Lambda Functions for each public method in AWS Console](https://raw.githubusercontent.com/tongueroo/jets/master/docs/img/docs/demo-lambda-functions-controller.png)\n\n### Jets Routing\n\nYou connect Lambda functions to API Gateway URL endpoints with a routes file:\n\nconfig/routes.rb:\n\n```ruby\nJets.application.routes.draw do\n  get  "posts", to: "posts#index"\n  get  "posts/new", to: "posts#new"\n  get  "posts/:id", to: "posts#show"\n  post "posts", to: "posts#create"\n  get  "posts/:id/edit", to: "posts#edit"\n  put  "posts", to: "posts#update"\n  delete  "posts", to: "posts#delete"\n\n  resources :comments # expands to the RESTful routes above\n\n  any "posts/hot", to: "posts#hot" # GET, POST, PUT, etc request all work\nend\n```\n\nThe `routes.rb` gets translated to API Gateway resources:\n\n![API Gateway Resources generated from routes in AWS console](https://raw.githubusercontent.com/tongueroo/jets/master/docs/img/quick-start/demo-api-gateway.png)\n\nTest your API Gateway endpoints with curl or postman. Note, replace the URL endpoint with the one that is created:\n\n    $ curl -s "https://quabepiu80.execute-api.us-east-1.amazonaws.com/dev/posts" | jq .\n    {\n      "hello": "world",\n      "action": "index"\n    }\n\n### Jets Jobs\n\nA Jets job handles asynchronous background jobs performed outside of the web request/response cycle. Here\'s an example:\n\napp/jobs/hard_job.rb:\n\n```ruby\nclass HardJob < ApplicationJob\n  rate "10 hours" # every 10 hours\n  def dig\n    puts "done digging"\n  end\n\n  cron "0 */12 * * ? *" # every 12 hours\n  def lift\n    puts "done lifting"\n  end\nend\n```\n\n`HardJob#dig` runs every 10 hours and `HardJob#lift` runs every 12 hours.  The `rate` and `cron` methods created CloudWatch Event Rules. Example:\n\n![CloudWatch Event Rules in AWS Console](https://raw.githubusercontent.com/tongueroo/jets/master/docs/img/docs/demo-job-cloudwatch-rule.png)\n\n### Jets Deployment\n\nYou can test your application with a local server that mimics API Gateway: [Jets Local Server](http://rubyonjets.com/docs/local-server/). Once ready, deploying to AWS Lambda is a single command.\n\n    jets deploy\n\nAfter deployment, you can test the Lambda functions with the AWS Lambda console or the CLI.\n\n### AWS Lambda Console\n\n![Lambda Console](https://s3.amazonaws.com/boltops-demo/images/screenshots/lambda-console-posts-controller-index.png)\n\n### Live Demos\n\nHere are some demos of Jets applications:\n\n* [Quintessential CRUD Jets app](https://demo.rubyonjets.com/)\n* [API Demo](https://api.demo.rubyonjets.com/)\n* [Jets Afterburner: Easy Rails Support](https://afterburner.demo.rubyonjets.com/)\n* [Mega Mode: Jets and Rails Combined](https://mega.demo.rubyonjets.com/)\n* [Image Upload with CarrierWave](https://upload.demo.rubyonjets.com/)\n\nPlease feel free to add your own example to the [jets-examples](https://github.com/tongueroo/jets-examples) repo.\n\n### Rails Support\n\n[Jets Afterburner Mode](http://rubyonjets.com/docs/rails-support/) provides Rails support with little effort.  This allows you to run a Rails application on AWS Lambda. Also here\'s a Tutorial Blog Post: [Jets Afterburner: Rails Support](https://blog.boltops.com/2018/12/21/jets-afterburner-serverless-rails-on-aws-lambda-in-5-minutes).\n\n### More Info\n\nFor more documentation, check out the official docs: [Ruby on Jets](http://rubyonjets.com/).  Here\'s a list of useful links:\n\n* [Quick Start](http://rubyonjets.com/quick-start/)\n* [Local Jets Server](http://rubyonjets.com/docs/local-server/)\n* [REPL Console](http://rubyonjets.com/docs/repl-console/)\n* [Project Structure](http://rubyonjets.com/docs/structure/)\n* [App Configuration](http://rubyonjets.com/docs/app-config/)\n* [Database Support](http://rubyonjets.com/docs/database-support/)\n* [Polymorphic Support](http://rubyonjets.com/docs/polymorphic-support/)\n* [Rails Support](http://rubyonjets.com/docs/rails-support/)\n* [Tutorials](http://rubyonjets.com/docs/tutorials/)\n* [Prewarming](http://rubyonjets.com/docs/prewarming/)\n* [Custom Resources](http://rubyonjets.com/docs/associated-resources/)\n* [Shared Resources](http://rubyonjets.com/docs/shared-resources/)\n* [Installation](http://rubyonjets.com/docs/install/)\n* [CLI Reference](http://rubyonjets.com/reference/)\n* [Contributing](http://rubyonjets.com/docs/contributing/)\n* [Support Jets](http://rubyonjets.com/support-jets/)\n* [Example Projects](https://github.com/tongueroo/jets-examples)\n\n## Learning Content\n\n* [Introducing Jets: A Ruby Serverless Framework](https://blog.boltops.com/2018/08/18/introducing-jets-a-ruby-serverless-framework)\n* [Official AWS Ruby Support for Jets](https://blog.boltops.com/2018/12/12/official-aws-ruby-support-for-jets-serverless-framework)\n* [Build an API with Jets](https://blog.boltops.com/2019/01/13/build-an-api-service-with-jets-ruby-serverless-framework)\n* [Serverless Ruby Cron Jobs Tutorial: Route53 Backup](https://blog.boltops.com/2019/01/03/serverless-ruby-cron-jobs-with-jets-route53-backup)\n* [Serverless Slack Commands: Fun with AWS Image Recognition](https://blog.boltops.com/2019/01/14/serverless-slack-commands-with-ruby)\n* [Jets Afterburner: Rails Support](https://blog.boltops.com/2018/12/21/jets-afterburner-serverless-rails-on-aws-lambda-in-5-minutes)\n* [Jets Mega Mode: Jets and Rails](https://blog.boltops.com/2018/11/03/jets-mega-mode-run-rails-on-aws-lambda)\n* [Toronto Serverless Presentation](https://blog.boltops.com/2018/09/25/toronto-serverless-presentation-jets-framework-on-aws-lambda)\n* [Jets Image Uploads Tutorial with CarrierWave](https://blog.boltops.com/2018/12/13/jets-image-upload-carrierwave-tutorial-binary-support)\n* [Jets Tutorial An Introductory CRUD App Part 1](https://blog.boltops.com/2018/09/07/jets-tutorial-crud-app-introduction-part-1)\n* [Jets Tutorial Deploy to AWS Lambda Part 2](https://blog.boltops.com/2018/09/08/jets-tutorial-deploy-to-aws-lambda-part-2)\n* [Jets Tutorial Debugging Logs Part 3](https://blog.boltops.com/2018/09/09/jets-tutorial-debugging-logs-part-3)\n* [Jets Tutorial Background Jobs Part 4](https://blog.boltops.com/2018/09/10/jets-tutorial-background-jobs-part-4)\n* [Jets Tutorial IAM Policies Part 5](https://blog.boltops.com/2018/09/11/jets-tutorial-iam-policies-part-5)\n* [Jets Tutorial Function Properties Part 6](https://blog.boltops.com/2018/09/12/jets-tutorial-function-properties-part-6)\n* [Jets Tutorial Extra Environments Part 7](https://blog.boltops.com/2018/09/13/jets-tutorial-extra-environments-part-7)\n* [Jets Tutorial Different Environments Part 8](https://blog.boltops.com/2018/09/26/jets-tutorial-different-environments-part-8)\n* [Jets Tutorial Polymorphic Support Part 9](https://blog.boltops.com/2018/09/27/jets-tutorial-polymorphic-support-part-9)\n* [Jets Delete Tutorial](https://blog.boltops.com/2018/11/12/jets-tutorial-jets-delete)\n'