b'# OpenLambda\n\nOpenLambda is an Apache-licensed serverless computing project, written\nin Go and based on Linux containers.  The primary goal of OpenLambda\nis to enable exploration of new approaches to serverless computing.  Our\nresearch agenda is described in more detail in a [HotCloud \'16\npaper](https://www.usenix.org/system/files/conference/hotcloud16/hotcloud16_hendrickson.pdf).\n\n## Getting Started\n\nOpenLambda relies heavily on operations that require root\nprivilege. To simplify this, we suggest that you run all commands as\nthe root user.  OpenLambda is only actively tested on Ubuntu 16.04 LTS.\n\n### Build and Test\n\nOL is changing rapidly.  We recommend syncing to a commit that passed our nightly tests: https://s3.us-east-2.amazonaws.com/open-lambda-public/tests.html.\n\nOur tests run on a VM built with this init script:\nhttps://github.com/open-lambda/testing/blob/master/dev-build/bootstrap2.sh.\nThus, you can consider that file testable documentation of the\ndependencies.\n\nYou can build the `ol` and other resources with just `make`.  Then make sure it works with some simple tests:\n\n```\nmake test-all\n```\n\n### Getting Started\n\nYou can create a new OL environment with the following comment:\n\n```\n./ol new\n```\n\nThis creates a directory named `default` with various OL resources.\nYou can create an OL environment at another location by passing a\n`-path=DIRNAME` to the `new` command.\n\nDefault config settings were saved to `./default/config.json`.  Modify\nthem if you wish, then start an OL worker (if you used `-path` above,\nuse it again with the `worker` command):\n\n```\n./ol worker\n```\n\nIn another terminal, make sure the worker is running with `./ol status`.\n\nNow save the following to `./default/registry/echo.py`:\n\n```python\ndef f(event):\n    return event\n```\n\nNow invoke your lambda (the result should be the same as the POST body):\n\n```\ncurl -X POST localhost:5000/run/echo -d \'{"hello": "world"}\'\n```\n\nWhen you\'re done, just kill the worker with `ctrl-C`.  If you want to\nrun the worker in detached mode (i.e., in the background), just start\nit again with the `-d` flag:\n\n```\n./ol worker -d\n```\n\nYou can shutdown a detached worker like this:\n\n```\n./ol kill\n```\n\n## License\n\nThis project is licensed under the Apache License - see the [LICENSE.md](LICENSE.md) file for details.\n'