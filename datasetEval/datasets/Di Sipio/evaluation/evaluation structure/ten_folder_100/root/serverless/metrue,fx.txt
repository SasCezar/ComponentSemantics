b'fx\n------\nPoor man\'s function as a service.\n<br/>\n![CI](https://github.com/metrue/fx/workflows/ci/badge.svg)\n[![CodeCov](https://codecov.io/gh/metrue/fx/branch/master/graph/badge.svg)](https://codecov.io/gh/metrue/fx)\n[![Go Report Card](https://goreportcard.com/badge/github.com/metrue/fx?style=flat-square)](https://goreportcard.com/report/github.com/metrue/fx)\n[![Go Doc](https://img.shields.io/badge/godoc-reference-blue.svg?style=flat-square)](http://godoc.org/github.com/metrue/fx)\n![](https://img.shields.io/github/license/metrue/fx.svg)\n[![Release](https://img.shields.io/github/release/metrue/fx.svg?style=flat-square)](https://github.com/metrue/fx/releases/latest)\n\n## Table of Contents\n- [Introduction](#introduction)\n- [Installation](#installation)\n- [Usage](#usage)\n- [Contribute](#contribute)\n\n\n## Introduction\n\n![workflow](https://raw.githubusercontent.com/metrue/fx/master/docs/fx-workflow.png)\n\nfx is a tool to help you do Function as a Service on your own server, fx can make your stateless function a service in seconds, both Docker host and Kubernetes cluster supported. The most exciting thing is that you can write your functions with most programming languages.\n\nFeel free hacking fx to support the languages not listed. Welcome to tweet me [@_metrue](https://twitter.com/_metrue) on Twitter, [@metrue](https://www.weibo.com/u/2165714507) on Weibo.\n\n\n| Language      | Status        | Contributor   | Example        |\n| ------------- |:-------------:|:-------------:| :-------------:|\n| Go            | Supported     | fx            | [/examples/Golang](https://github.com/metrue/fx/tree/master/examples/functions/Golang) |\n| Rust          | Supported     | [@FrontMage](https://github.com/FrontMage)| [/examples/Rust](https://github.com/metrue/fx/tree/master/examples/functions/Rust) |\n| Node          | Supported     | fx            | [/examples/JavaScript](https://github.com/metrue/fx/tree/master/examples/functions/JavaScript) |\n| Python        | Supported     | fx            | [/examples/Python](https://github.com/metrue/fx/tree/master/examples/functions/Python) |\n| Ruby          | Supported     | fx            | [/examples/Ruby](https://github.com/metrue/fx/tree/master/examples/functions/Ruby) |\n| Java          | Supported     | fx            | [/examples/Java](https://github.com/metrue/fx/tree/master/examples/functions/Java) |\n| PHP           | Supported     | [@chlins](https://github.com/chlins)| [/examples/PHP](https://github.com/metrue/fx/tree/master/examples/functions/PHP) |\n| Julia         | Supported     | [@matbesancon](https://github.com/matbesancon)| [/examples/Julia](https://github.com/metrue/fx/tree/master/examples/functions/Julia) |\n| D             | Supported     | [@andre2007](https://github.com/andre2007)| [/examples/D](https://github.com/metrue/fx/tree/master/examples/functions/D) |\n| R             | Working on [need your help](https://github.com/metrue/fx/issues/31)   | ||\n\n# Installation\n\nBinaries are available for Windows, MacOS and Linux/Unix on x86. For other architectures and platforms, follow instructions to [build fx from source](#buildtest).\n\n* MacOS\n\n```\nbrew tap metrue/homebrew-fx\nbrew install metrue/fx/fx\n```\n\n* Linux/Unix\n\nvia cURL\n\n```shell\n# Install to local directory\ncurl -o- https://raw.githubusercontent.com/metrue/fx/master/scripts/install.sh | bash\n\n# Install to /usr/local/bin/\ncurl -o- https://raw.githubusercontent.com/metrue/fx/master/scripts/install.sh | sudo bash\n```\n\nfx will be installed into /usr/local/bin, sometimes you may need `source ~/.zshrc` or `source ~/.bashrc` to make fx available in `$PATH`.\n\n* Windows\n\nYou can go the release page to [download](https://github.com/metrue/fx/releases) fx manually;\n\n## Usage\n\nMake sure [Docker](https://docs.docker.com/engine/installation/) installed and running on your server first. then type `fx -h` on your terminal to check out basic help.\n\n```\nNAME:\n   fx - makes function as a service\n\nUSAGE:\n   fx [global options] command [command options] [arguments...]\n\nVERSION:\n   0.8.4\n\nCOMMANDS:\n   infra     manage infrastructure\n   up        deploy a function\n   down      destroy a service\n   list, ls  list deployed services\n   call      run a function instantly\n   image     manage image of service\n   doctor    health check for fx\n   help, h   Shows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   --help, -h     show help\n   --version, -v  print the version\n```\n\n1. Write a function\n\nYou can check out [examples](https://github.com/metrue/fx/tree/master/examples/functions) for reference. Let\'s write a function as an example,  it calculates the sum of two numbers then returns:\n\n```js\nmodule.exports = (ctx) => {\n    ctx.body = \'hello world\'\n}\n```\nThen save it to a file `func.js`.\n\n2. Deploy your function as a service\n\nGive your service a port with `--port`, and name with `--name`, heath checking with `--healthcheck` if you want.\n\n```shell\n$ fx up -name fx_service_name -p 10001 --healthcheck func.js\n\n2019/08/10 13:26:37  info Pack Service: \xe2\x9c\x93\n2019/08/10 13:26:39  info Build Service: \xe2\x9c\x93\n2019/08/10 13:26:39  info Run Service: \xe2\x9c\x93\n2019/08/10 13:26:39  info Service (fx_service_name) is running on: 0.0.0.0:10001\n2019/08/10 13:26:39  info up function fx_service_name(func.js) to machine localhost: \xe2\x9c\x93\n```\n\nif you want see what the source code of your service looks like, you can export it into a dirctory,\n\n```shell\n$ fx image export -o <path of dir> func.js\n2019/09/25 19:31:19  info exported to <path of dir>: \xe2\x9c\x93\n```\n\n3. Test your service\n\nthen you can test your service:\n\n```shell\n$ curl -v 0.0.0.0:10001\n\n\nGET / HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nHost: 0.0.0.0:10001\nUser-Agent: HTTPie/1.0.2\n\n\n\nHTTP/1.1 200 OK\nConnection: keep-alive\nContent-Length: 11\nContent-Type: text/plain; charset=utf-8\nDate: Sat, 10 Aug 2019 05:28:03 GMT\n\nhello world\n\n```\n\n## Docker\n\n**fx** is originally designed to turn a function into a runnable Docker container in a easiest way, on a host with Docker running, you can just deploy your function with `fx up` command,\n\n```shell\nfx up --name hello-svc --port 7777 hello.js # onto localhost\nDOCKER_REMOTE_HOST_ADDR=xx.xx.xx.xx DOCKER_REMOTE_HOST_USER=xxxx DOCKER_REMOTE_HOST_PASSWORD=xxxx fx up --name hello-svc --port 7777 hello.js # onto remote host\n```\n\n## Kubernetes\n\n**fx** supports deploy function to be a service onto Kubernetes cluster infrasture, and we encourage you to do that other than on bare Docker environment, there are lots of advantage to run your function on Kubernetes like self-healing, load balancing, easy horizontal scaling, etc. It\'s pretty simple to deploy your function onto Kubernetes with **fx**, you just set KUBECONFIG in your enviroment.\n\n```shell\nKUBECONFIG=<Your KUBECONFIG> fx deploy -n fx-service-abc_js -p 12349 examples/functions/JavaScript/func.js   # function will be deploy to your Kubernetes cluster and expose a IP address of your loadbalencer\n```\n\nor\n\n```shell\n$ export KUBECONFIG=<Your KUBECONFIG>\n$ fx deploy -n fx-service-abc_js -p 12349 examples/functions/JavaScript/func.js   # function will be deploy to your Kubernetes cluster and expose a IP address of your loadbalencer\n```\n\n* Local Kubernetes Cluster\n\nDocker for Mac and Docker for Windows already support Kubernetes with single node cluster, we can use it directly, and the default `KUBECONFIG` is `~/.kube/config`.\n\n```shell\n$ export KUBECONFIG=~/.kube/config  # then fx will take the config to deloy function\n```\n\nif you have multiple Kubernetes clusters configured, you have to set context correctly. FYI [configure-access-multiple-clusters](https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/)\n\n* Azure Kubernetes Service (AKS)\n\nYou should create a Kubernetes cluster if you don\'t have one on AKS, detail document can found [here](https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough).\n\n```shell\n$ az group create --name <myResourceGroup> --location eastus\n$ az aks create --resource-group <myResourceGroup> --name myAKSCluster --node-count <count>\n$ az aks get-credentials --resource-group <myResourceGroup> --name <myAKSCluster>\n```\n\nThen you can verify it with `kubectl`,\n\n```shell\n$ kubectl get nodes\n\nNAME                       STATUS   ROLES   AGE     VERSION\naks-nodepool1-31718369-0   Ready    agent   6m44s   v1.12.8\n```\n\nSince AKS\'s config will be merged into `~/.kube/config` and set to be current context after you run `az aks get-credentials` command, so you can just set KUBECONFIG to default config also,\n\n```shell\n$ export KUBECONFIG=~/.kube/config  # then fx will take the config to deloy function\n```\n\nBut we would suggest you run `kubectl config current-context` to check if the current context is what you want.\n\n* Amazon Elastic Kubernetes Service (EKS)\n  TODO\n\n* Google Kubernetes Engine (GKET)\n  TODO\n\n* Setup your own Kubernetes cluster\n\n![init workflow](https://raw.githubusercontent.com/metrue/fx/master/docs/fx-init-cluster.png)\n\n```shell\nfx init --master <host ip> --agents "<host ip 1>,<host ip 2>" --user <user> --password <password>\n```\n\n## Contribute\n\nfx uses [Project](https://github.com/metrue/fx/projects/4) to manage the development.\n\n#### Prerequisites\n\nDocker: make sure [Docker](https://docs.docker.com/engine/installation/) installed and running on your server.\n\n\n<a name="buildtest"></a>\n#### Build & Test\n\n```\n$ git clone https://github.com/metrue/fx\n$ cd fx\n$ make build\n```\n\nThen you can build and test:\n\n```\n$ make build\n$ ./build/fx -h\n```\n\n\n## Contributors\n\nThank you to all the people who already contributed to fx!\n\n<table>\n  <tbody>\n    <tr>\n        <a href="https://github.com/metrue" target="_blank">\n            <img alt="metrue" src="https://avatars2.githubusercontent.com/u/1001246?v=4&s=50" width="50">\n        </a>\n        <a href="https://github.com/muka" target="_blank">\n            <img alt="muka" src="https://avatars2.githubusercontent.com/u/1021269?v=4&s=50" width="50">\n        </a>\n        <a href="https://github.com/pplam" target="_blank">\n            <img alt="pplam" src="https://avatars2.githubusercontent.com/u/12783579?v=4&s=50" width="50">\n        </a>\n        <a href="https://github.com/matbesancon" target="_blank">\n            <img alt="mbesancon" src="https://avatars2.githubusercontent.com/u/7623090?s=60&v=4" width="50">\n        </a>\n        <a href="https://github.com/chlins" target="_blank">\n            <img alt="chlins" src="https://avatars2.githubusercontent.com/u/31262637?v=4&s=50" width="50">\n        </a>\n        <a href="https://github.com/xwjdsh" target="_blank">\n            <img alt="xwjdsh" src="https://avatars2.githubusercontent.com/u/11025519?v=4&s=50" width="50">\n        </a>\n        <a href="https://github.com/DaidoujiChen" target="_blank">\n            <img alt="DaidoujiChen" src="https://avatars0.githubusercontent.com/u/670441?v=4&s=50" width="50">\n        </a>\n        <a href="https://github.com/avelino" target="_blank">\n            <img alt="avelino" src="https://avatars2.githubusercontent.com/u/31996?v=4&s=50" width="50">\n        </a>\n        <a href="https://github.com/andre2007" target="_blank">\n            <img alt="andre2007" src="https://avatars1.githubusercontent.com/u/1451047?s=50&v=4" width="50">\n        </a>\n        <a href="https://github.com/polyrabbit" target="_blank">\n            <img alt="polyrabbit" src="https://avatars0.githubusercontent.com/u/2657334?s=60&v=4" width="50">\n        </a>\n        <a href="https://github.com/johnlunney" target="_blank">\n            <img alt="johnlunney" src="https://avatars3.githubusercontent.com/u/536947?s=60&v=4" width="50">\n        </a>\n        <a href="https://github.com/tbrand" target="_blank">\n            <img alt="tbrand" src="https://avatars0.githubusercontent.com/u/3483230?s=60&v=4" width="50">\n        </a>\n        <a href="https://github.com/steventhanna" target="_blank">\n            <img alt="andre2007" src="https://avatars1.githubusercontent.com/u/2541678?s=50&v=4" width="50">\n        </a>\n        <a href="https://github.com/border-radius" target="_blank">\n            <img alt="border-radius" src="https://avatars0.githubusercontent.com/u/3204785?s=60&v=4" width="50">\n        </a>\n        <a href="https://github.com/Russtopia" target="_blank">\n            <img alt="Russtopia" src="https://avatars1.githubusercontent.com/u/2966177?s=60&v=4<Paste>" width="50">\n        </a>\n        <a href="https://github.com/FrontMage" target="_blank">\n            <img alt="FrontMage" src="https://avatars2.githubusercontent.com/u/17007026?s=60&v=4" width="50">\n        </a>\n        <a href="https://github.com/DropNib" target="_blank">\n            <img alt="DropNib" src="https://avatars0.githubusercontent.com/u/32019589?s=60&v=4" width="50">\n        </a>\n    </tr>\n  </tbody>\n</table>\n'