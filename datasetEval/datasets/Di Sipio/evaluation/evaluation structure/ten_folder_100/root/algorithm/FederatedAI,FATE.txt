b'[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0) [![CodeStyle](https://img.shields.io/badge/Check%20Style-Google-brightgreen)](https://checkstyle.sourceforge.io/google_style.html) [![Pinpoint Satellite](https://img.shields.io/endpoint?url=https%3A%2F%2Fscan.sbrella.com%2Fadmin%2Fapi%2Fv1%2Fpinpoint%2Fshield%2FFederatedAI%2FFATE)](https://github.com/mmyjona/FATE-Serving/pulls) [![Style](https://img.shields.io/badge/Check%20Style-Black-black)](https://checkstyle.sourceforge.io/google_style.html) \n\n<div align="center">\n  <img src="./doc/images/FATE_logo.png">\n</div>\n\n\nFATE (Federated AI Technology Enabler) is an open-source project initiated by Webank\'s AI Department to provide a secure computing framework to support the federated AI ecosystem. It implements secure computation protocols based on homomorphic encryption and multi-party computation (MPC). It supports federated learning architectures and secure computation of various machine learning algorithms, including logistic regression, tree-based algorithms, deep learning and transfer learning.\n\n<https://fate.fedai.org>\n\n## Getting Involved\n\n*  Join our maillist [Fate-FedAI Group IO](https://groups.io/g/Fate-FedAI). You can ask questions and participate in the development discussion.\n\n*  For any frequently asked questions, you can check in [FAQ](https://github.com/FederatedAI/FATE/wiki/FATE-FAQ).  \n\n*  Please report bugs by submitting [issues](https://github.com/FederatedAI/FATE/issues). \n\n*  Submit contributions using [pull requests](https://github.com/FederatedAI/FATE/pulls)\n\n\n## Federated Learning Algorithms In FATE\nFATE already supports a number of federated learning algorithms, including vertical federated learning, horizontal federated learning, and federated transfer learning. More details are available in [federatedml](./federatedml).\n\n\n## Install\nFATE can be installed on Linux or Mac. Now, FATE can support standalone and cluster deployments.\n\nSoftware environment :jdk1.8+\xe3\x80\x81Python3.6\xe3\x80\x81python virtualenv\xe3\x80\x81mysql5.6+\xe3\x80\x81redis-5.0.2\n\n#### Standalone\nFATE provides Standalone runtime architecture for developers. It can help developers quickly test FATE. Standalone support two types of deployment: Docker version and Manual version. Please refer to Standalone deployment guide: [standalone-deploy](./standalone-deploy/)\n\n#### Cluster\nFATE also provides a distributed runtime architecture for Big Data scenario. Migration from standalone to cluster requires configuration change only. No algorithm change is needed. \n\nTo deploy FATE on a cluster, please refer to cluster deployment guide: [cluster-deploy](./cluster-deploy).\n\n#### Get source\n```shell\ngit clone --recursive git@github.com:FederatedAI/FATE.git\n```\n\n## Running Tests\n\nA script to run all the unittests has been provided in ./federatedml/test folder. \n\nOnce FATE is installed, tests can be run using:\n\n> sh ./federatedml/test/run_test.sh\n\nAll the unittests shall pass if FATE is installed properly. \n\n## Example Programs\n\n### Quick Start\n\nWe have provided a python script for quick starting modeling task. This scrip is located at ["examples/federatedml-1.x-examples"](./examples/federatedml-1.x-examples)\n\n#### Standalone Version\n1. Start standalone version hetero-lr task (default)\n> python quick_run.py\n\n\n#### Cluster Version\n\n1. Host party:\n> python quick_run.py -r host\n\nThis is just uploading data\n\n2. Guest party:\n> python quick_run.py -r guest\n\nThe config files that generated is stored in a new created folder named **user_config**\n\n#### Start a Predict Task\nOnce you finish one training task, you can start a predict task. You need to modify "TASK" variable in quick_run.py script as "predict":\n```\n# Define what type of task it is\n# TASK = \'train\'\nTASK = \'predict\'\n```\nThen all you need to do is running the following command:\n> python quick_run.py\n\nPlease note this works only if you have finished the trainning task.\n\n###  Obtain Model and Check Out Results\nWe provided functions such as tracking component output models or logs etc. through a tool called fate-flow. The deployment and usage of fate-flow can be found [here](./fate_flow/README.md)\n\n\n## Doc\n### API doc\nFATE provides some API documents in [doc-api](./doc/api/), including federatedml, eggroll, federation.\n### Develop Guide doc\nHow to develop your federated learning algorithm using FATE? you can see FATE develop guide document in [develop-guide](./doc/develop_guide.md)\n### Other doc\nFATE also provides many other documents in [doc](./doc/). These documents can help you understand FATE better.\n### License\n[Apache License 2.0](LICENSE)\n\n'