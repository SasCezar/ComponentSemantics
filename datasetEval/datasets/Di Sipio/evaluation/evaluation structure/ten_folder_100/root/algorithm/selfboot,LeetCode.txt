b'\xe8\x99\xbd\xe7\x84\xb6\xe5\x88\xb7\xe9\xa2\x98\xe4\xb8\x80\xe7\x9b\xb4\xe9\xa5\xb1\xe5\x8f\x97\xe8\xaf\x9f\xe7\x97\x85\xef\xbc\x8c\xe4\xb8\x8d\xe8\xbf\x87\xe4\xb8\x8d\xe5\x8f\xaf\xe5\x90\xa6\xe8\xae\xa4\xe5\x88\xb7\xe9\xa2\x98\xe7\xa1\xae\xe5\xae\x9e\xe8\x83\xbd\xe9\x94\xbb\xe7\x82\xbc\xe6\x88\x91\xe4\xbb\xac\xe7\x9a\x84\xe7\xbc\x96\xe7\xa8\x8b\xe8\x83\xbd\xe5\x8a\x9b\xef\xbc\x8c\xe7\x9b\xb8\xe4\xbf\xa1\xe6\xaf\x8f\xe4\xb8\xaa\xe8\xae\xa4\xe7\x9c\x9f\xe5\x88\xb7\xe9\xa2\x98\xe7\x9a\x84\xe4\xba\xba\xe9\x83\xbd\xe4\xbc\x9a\xe6\x9c\x89\xe4\xbd\x93\xe4\xbc\x9a\xe3\x80\x82LeetCode \xe6\x98\xaf\xe4\xb8\x80\xe4\xb8\xaa\xe9\x9d\x9e\xe5\xb8\xb8\xe6\xa3\x92\xe7\x9a\x84 OJ\xef\xbc\x88Online Judge\xef\xbc\x89\xe5\xb9\xb3\xe5\x8f\xb0\xef\xbc\x8c\xe6\x94\xb6\xe9\x9b\x86\xe4\xba\x86\xe8\xae\xb8\xe5\xa4\x9a\xe5\x85\xac\xe5\x8f\xb8\xe7\x9a\x84\xe9\x9d\xa2\xe8\xaf\x95\xe9\xa2\x98\xe7\x9b\xae\xe3\x80\x82\xe7\x9b\xb8\xe5\xaf\xb9\xe5\x85\xb6\xe4\xbb\x96 OJ \xe5\xb9\xb3\xe5\x8f\xb0\xe8\x80\x8c\xe8\xa8\x80\xef\xbc\x8c\xe6\x9c\x89\xe7\x9d\x80\xe4\xb8\x8b\xe9\x9d\xa2\xe7\x9a\x84\xe5\x87\xa0\xe4\xb8\xaa\xe4\xbc\x98\xe7\x82\xb9\xef\xbc\x9a\n\n* \xe9\xa2\x98\xe7\x9b\xae\xe5\x85\xa8\xe9\x83\xa8\xe6\x9d\xa5\xe8\x87\xaa\xe4\xb8\x9a\xe5\x86\x85\xe5\xa4\xa7\xe5\x85\xac\xe5\x8f\xb8\xe7\x9a\x84\xe7\x9c\x9f\xe5\xae\x9e\xe9\x9d\xa2\xe8\xaf\x95\n* \xe4\xb8\x8d\xe7\x94\xa8\xe5\xa4\x84\xe7\x90\x86\xe8\xbe\x93\xe5\x85\xa5\xe8\xbe\x93\xe5\x87\xba\xef\xbc\x8c\xe7\xb2\xbe\xe5\x8a\x9b\xe5\x85\xa8\xe6\x94\xbe\xe5\x9c\xa8\xe8\xa7\xa3\xe5\x86\xb3\xe5\x85\xb7\xe4\xbd\x93\xe9\x97\xae\xe9\xa2\x98\xe4\xb8\x8a\n* \xe9\xa2\x98\xe7\x9b\xae\xe6\x9c\x89\xe4\xb8\xb0\xe5\xaf\x8c\xe7\x9a\x84\xe8\xae\xa8\xe8\xae\xba\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x8f\x82\xe8\x80\x83\xe5\x88\xab\xe4\xba\xba\xe7\x9a\x84\xe6\x80\x9d\xe8\xb7\xaf\n* \xe7\xb2\xbe\xe7\xa1\xae\xe4\xba\x86\xe8\xa7\xa3\xe8\x87\xaa\xe5\xb7\xb1\xe4\xbb\xa3\xe7\xa0\x81\xe5\x9c\xa8\xe6\x89\x80\xe6\x9c\x89\xe6\x8f\x90\xe4\xba\xa4\xe4\xbb\xa3\xe7\xa0\x81\xe4\xb8\xad\xe8\xbf\x90\xe8\xa1\x8c\xe6\x95\x88\xe7\x8e\x87\xe7\x9a\x84\xe6\x8e\x92\xe5\x90\x8d\n* \xe6\x94\xaf\xe6\x8c\x81\xe5\xa4\x9a\xe7\xa7\x8d\xe4\xb8\xbb\xe6\xb5\x81\xe8\xaf\xad\xe8\xa8\x80\xef\xbc\x9aC/C++\xef\xbc\x8cPython, Java\n* \xe5\x8f\xaf\xe4\xbb\xa5\xe5\x9c\xa8\xe7\xba\xbf\xe8\xbf\x9b\xe8\xa1\x8c\xe6\xb5\x8b\xe8\xaf\x95\xef\xbc\x8c\xe6\x96\xb9\xe4\xbe\xbf\xe8\xb0\x83\xe8\xaf\x95\n\n\xe5\x9c\xa8 LeetCode \xe5\x88\xb7\xe9\xa2\x98\xe7\xa1\xae\xe5\xae\x9e\xe6\x94\xb6\xe8\x8e\xb7\xe4\xb8\x8d\xe5\xb0\x91\xef\xbc\x8c\xe9\x94\xbb\xe7\x82\xbc\xe9\x80\xbb\xe8\xbe\x91\xe6\x80\x9d\xe7\xbb\xb4\xef\xbc\x8c\xe5\x86\x99\xe4\xbb\xa3\xe7\xa0\x81\xe8\x83\xbd\xe5\x8a\x9b\xef\xbc\x8c\xe8\xbf\x98\xe6\x9c\x89\xe7\xae\x97\xe6\xb3\x95\xe6\xb0\xb4\xe5\xb9\xb3\xef\xbc\x8c[LeetCode \xe5\x88\xb7\xe9\xa2\x98\xe6\x8c\x87\xe5\x8d\x97\xef\xbc\x88\xe4\xb8\x80\xef\xbc\x89\xef\xbc\x9a\xe4\xb8\xba\xe4\xbb\x80\xe4\xb9\x88\xe8\xa6\x81\xe5\x88\xb7\xe9\xa2\x98](http://selfboot.cn/2016/07/24/leetcode_guide_why/) \xe6\x9c\x89\xe8\xaf\xa6\xe7\xbb\x86\xe7\x9a\x84\xe8\xae\xa8\xe8\xae\xba\xe3\x80\x82\n\n# \xe4\xb8\x8d\xe4\xbb\x85\xe6\x98\xaf\xe4\xbb\xa3\xe7\xa0\x81\n\n\xe6\x9c\xac\xe4\xbb\x93\xe5\xba\x93\xe4\xb8\xbb\xe8\xa6\x81\xe7\x94\xa8\xe6\x9d\xa5\xe8\xae\xb0\xe5\xbd\x95\xe8\x87\xaa\xe5\xb7\xb1 LeetCode \xe4\xb8\x8a\xe9\x9d\xa2 AC \xe7\x9a\x84\xe4\xbb\xa3\xe7\xa0\x81\xef\xbc\x8c\xe5\x85\xb6\xe4\xb8\xad\xe5\xbe\x88\xe5\xa4\x9a\xe4\xbb\xa3\xe7\xa0\x81\xe9\x83\xbd\xe5\x8f\x82\xe8\x80\x83\xe4\xba\x86 Discuss \xe4\xb8\xad\xe9\x80\x89\xe7\xa5\xa8\xe6\xaf\x94\xe8\xbe\x83\xe5\xa4\x9a\xe7\x9a\x84\xe4\xbb\xa3\xe7\xa0\x81\xef\xbc\x8c\xe6\x95\x88\xe7\x8e\x87\xe4\xb8\x8d\xe4\xbc\x9a\xe5\xb7\xae\xef\xbc\x88\xe6\x97\xb6\xe9\x97\xb4\xe6\x8e\x92\xe5\x90\x8d\xe5\x9f\xba\xe6\x9c\xac\xe9\x83\xbd\xe6\x98\xaf\xe5\x9c\xa8 Top 60% \xe5\xb7\xa6\xe5\x8f\xb3\xef\xbc\x89\xe3\x80\x82\n\n\xe4\xbb\xa3\xe7\xa0\x81\xe4\xb8\xad\xe8\xbf\x98\xe4\xbc\x9a\xe6\x9c\x89\xe7\xae\x80\xe6\x98\x8e\xe6\x89\xbc\xe8\xa6\x81\xe7\x9a\x84\xe8\xa7\xa3\xe9\xa2\x98\xe6\x80\x9d\xe8\xb7\xaf\xe5\x92\x8c\xe5\x85\xb3\xe9\x94\xae\xe7\x82\xb9\xe6\xb3\xa8\xe9\x87\x8a\xef\xbc\x8c\xe6\x9c\x89\xe8\xbe\x83\xe5\xa5\xbd\xe7\x9a\x84\xe5\x8f\xaf\xe8\xaf\xbb\xe6\x80\xa7\xe3\x80\x82\xe6\xad\xa4\xe5\xa4\x96\xef\xbc\x8c\xe4\xb8\x80\xe4\xba\x9b\xe9\xa2\x98\xe7\x9b\xae\xe8\xbf\x98\xe6\x8f\x90\xe4\xbe\x9b\xe4\xba\x86\xe5\xa4\x9a\xe7\xa7\x8d\xe8\xa7\xa3\xe5\x86\xb3\xe6\x96\xb9\xe6\xb3\x95\xef\xbc\x8c\xe4\xbe\x9b\xe5\xaf\xb9\xe6\xaf\x94\xe5\x8f\x82\xe8\x80\x83\xe3\x80\x82\xe8\xbf\x98\xe7\xbb\x99\xe5\x87\xba\xe4\xba\x86\xe4\xb8\x80\xe4\xba\x9b\xe6\xaf\x94\xe8\xbe\x83\xe6\x9c\x89\xe4\xbb\xa3\xe8\xa1\xa8\xe6\x80\xa7\xe7\x9a\x84\xe6\xb5\x8b\xe8\xaf\x95\xe7\x94\xa8\xe4\xbe\x8b\xef\xbc\x8c\xe6\x96\xb9\xe4\xbe\xbf\xe5\xbf\xab\xe9\x80\x9f\xe5\x9c\xb0\xe8\xb0\x83\xe8\xaf\x95\xe3\x80\x82\xe6\xaf\x94\xe5\xa6\x82 337 \xe9\xa2\x98\xef\xbc\x8c\xe8\xbf\x99\xe9\x87\x8c\xe7\xbb\x99\xe5\x87\xba\xe7\x9a\x84\xe4\xbb\xa3\xe7\xa0\x81\xe4\xb8\xba\xef\xbc\x9a\n\n    class Solution(object):\n        """ Dynamic programming,  memory DFS search.\n        The problem exhibits the feature of optimal substructure and overlapping of subproblems.\n            1. Optimal substructure:  If we want to "rob" maximum amount of money\n            from current binary tree (rooted at "root"),\n            we surely hope that we can do the same to its left and right subtrees.\n            2. Overlapping of subproblems: Computed subproblems repeatedly,\n            which resulted in bad time performance.\n        More details can be found as bellows:\n        https://leetcode.com/discuss/91899/step-by-step-tackling-of-the-problem\n        """\n        cache = {}\n    \n        def rob(self, root):\n            if not root:\n                return 0\n    \n            if root in self.cache:\n                return self.cache[root]\n    \n            # Rob the root node.\n            money = root.val\n            if root.left:\n                money += self.rob(root.left.right) + self.rob(root.left.left)\n            if root.right:\n                money += self.rob(root.right.left) + self.rob(root.right.right)\n    \n            # Do not rob the root node.\n            self.cache[root] = max(money, self.rob(root.left) + self.rob(root.right))\n            return self.cache[root]\n    \n    """\n    []\n    [3,4,5,1,3,null,1]\n    [3,2,3,null,3,null,1]\n    """\n\n\xe5\xbd\x93\xe7\x84\xb6\xef\xbc\x8c\xe8\xbf\x99\xe9\x87\x8c\xe4\xb9\x9f\xe4\xb8\x8d\xe6\xad\xa2\xe6\x98\xaf\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x82LeetCode \xe4\xb8\x8a\xe9\x9d\xa2\xe9\xa2\x98\xe7\x9b\xae\xe7\x94\xa8\xe5\x88\xb0\xe7\x9a\x84\xe8\xa7\xa3\xe9\xa2\x98\xe6\x80\x9d\xe6\x83\xb3\xe5\x92\x8c\xe4\xb8\xbb\xe8\xa6\x81\xe7\x9a\x84\xe7\xae\x97\xe6\xb3\x95\xe5\x85\xb6\xe5\xae\x9e\xe5\xb0\xb1\xe9\x82\xa3\xe4\xb9\x88\xe5\x87\xa0\xe7\xa7\x8d\xef\xbc\x8c\xe6\x88\x91\xe5\xaf\xb9\xe9\xa2\x98\xe7\x9b\xae\xe8\xbf\x9b\xe8\xa1\x8c\xe4\xba\x86\xe4\xb8\x80\xe4\xb8\xaa\xe7\xae\x80\xe5\x8d\x95\xe7\x9a\x84\xe5\x88\x86\xe7\xb1\xbb\xef\xbc\x8c\xe6\xaf\x8f\xe7\xb1\xbb\xe9\xa2\x98\xe7\x9b\xae\xe6\x94\xbe\xe5\x9c\xa8\xe4\xb8\x80\xe4\xb8\xaa\xe5\xa4\xa7\xe7\x9a\x84\xe7\x9b\xae\xe5\xbd\x95\xe4\xb8\xad\xef\xbc\x8c\xe9\x97\xae\xe9\xa2\x98\xe5\xbd\x92\xe7\xb1\xbb\xe8\xaf\xa6\xe6\x83\x85\xe5\x9c\xa8 [List](List.md) \xe6\x96\x87\xe4\xbb\xb6\xe4\xb8\xad\xe3\x80\x82\xe6\xb3\xa8\xe6\x84\x8f\xe4\xb8\x8b\xe9\x9d\xa2\xe7\x9a\x84\xe5\x87\xa0\xe4\xb8\xaa\xe7\x9b\xae\xe5\xbd\x95\xef\xbc\x9a\n\n* `Others`\xef\xbc\x9a\xe4\xb8\x80\xe4\xba\x9b\xe6\x9a\x82\xe6\x97\xb6\xe6\xb2\xa1\xe6\x9c\x89\xe6\x89\xbe\xe5\x88\xb0\xe5\x90\x88\xe9\x80\x82\xe5\x88\x86\xe7\xb1\xbb\xe7\x9a\x84\xe9\xa2\x98\xe7\x9b\xae\xef\xbc\x9b\n* `ToBeOptimized`\xef\xbc\x9a\xe4\xb8\x80\xe4\xba\x9b\xe8\xa7\xa3\xe9\xa2\x98\xe6\x96\xb9\xe6\xa1\x88\xe9\x9c\x80\xe8\xa6\x81\xe4\xbc\x98\xe5\x8c\x96\xe7\x9a\x84\xe9\xa2\x98\xe7\x9b\xae\xef\xbc\x9b\n* `Combination`\xef\xbc\x9a\xe4\xb8\x80\xe4\xba\x9b\xe5\x90\x8c\xe6\x97\xb6\xe7\x94\xa8\xe5\x88\xb0\xe5\xa4\x9a\xe4\xb8\xaa\xe8\xa7\xa3\xe9\xa2\x98\xe6\x80\x9d\xe6\x83\xb3\xe7\x9a\x84\xe7\xbb\xbc\xe5\x90\x88\xe5\x9e\x8b\xe9\xa2\x98\xe7\x9b\xae\xe3\x80\x82\n\n\xe5\xaf\xb9\xe6\x9f\x90\xe4\xb8\x80\xe7\xb1\xbb\xe4\xb8\x8b\xe9\x9d\xa2\xe7\x9a\x84\xe9\x97\xae\xe9\xa2\x98\xe4\xb9\x9f\xe4\xbc\x9a\xe8\xbf\x9b\xe8\xa1\x8c\xe7\xae\x80\xe5\x8d\x95\xe7\x9a\x84\xe6\x80\xbb\xe7\xbb\x93\xef\xbc\x88\xe8\xbf\x98\xe6\xb2\xa1\xe6\x9c\x89\xe5\xae\x8c\xe5\x85\xa8\xe5\xae\x8c\xe6\x88\x90\xef\xbc\x89\xef\xbc\x8c\xe7\x94\xa8\xe6\x9d\xa5\xe6\x8f\x90\xe7\x82\xbc\xe9\x97\xae\xe9\xa2\x98\xe7\x9a\x84\xe5\x85\xb1\xe5\x90\x8c\xe7\x82\xb9\xe5\x92\x8c\xe5\x85\xb1\xe5\x90\x8c\xe7\x9a\x84\xe8\xa7\xa3\xe9\xa2\x98\xe6\x80\x9d\xe8\xb7\xaf\xef\xbc\x8c\xe6\xaf\x94\xe5\xa6\x82\xe5\x9b\x9e\xe6\xba\xaf\xe6\xb3\x95\xe7\x9a\x84\xe6\x80\xbb\xe7\xbb\x93\xef\xbc\x9a\n\n> \xe5\xa6\x82\xe6\x9e\x9c\xe6\x8a\x8a\xe4\xbd\xa0\xe6\x94\xbe\xe8\xbf\x9b\xe8\xbf\xb7\xe5\xae\xab\xef\xbc\x8c\xe4\xbd\xa0\xe8\xaf\xa5\xe6\x80\x8e\xe4\xb9\x88\xe8\xb5\xb0\xe5\x87\xba\xe6\x9d\xa5\xef\xbc\x9f\xe4\xb8\x80\xe4\xb8\xaa\xe6\xaf\x94\xe8\xbe\x83\xe7\xa8\xb3\xe5\xa6\xa5\xe5\x9c\xb0\xe5\x81\x9a\xe6\xb3\x95\xe6\x98\xaf\xe8\xaf\x95\xe6\x8e\xa2\xe6\xb3\x95\xef\xbc\x8c\xe7\xae\x80\xe5\x8d\x95\xe6\x9d\xa5\xe8\xaf\xb4\xe5\xb0\xb1\xe6\x98\xaf\xe8\xaf\x95\xe6\x8e\xa2\xe6\x9f\x90\xe6\x9d\xa1\xe8\xb7\xaf\xe5\x8f\xaf\xe5\x90\xa6\xe5\x88\xb0\xe8\xbe\xbe\xe5\x87\xba\xe5\x8f\xa3\xef\xbc\x8c\xe4\xb8\x8d\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x9a\x84\xe8\xaf\x9d\xe6\x8d\xa2\xe5\x8f\xa6\xe4\xb8\x80\xe6\x9d\xa1\xe8\xb7\xaf\xe3\x80\x82\n\n> \xe5\x85\xb7\xe4\xbd\x93\xe6\x9d\xa5\xe8\xaf\xb4\xe5\xb0\xb1\xe6\x98\xaf\xe6\xaf\x8f\xe6\xac\xa1\xe9\x81\x87\xe5\x88\xb0\xe5\xb2\x94\xe5\x8f\xa3\xef\xbc\x8c\xe9\x80\x89\xe6\x8b\xa9\xe4\xb8\x80\xe4\xb8\xaa\xe6\xb2\xa1\xe6\x9c\x89\xe6\x8e\xa2\xe7\xb4\xa2\xe8\xbf\x87\xe7\x9a\x84\xe6\x96\xb9\xe5\x90\x91\xe5\x89\x8d\xe8\xbf\x9b\xef\xbc\x8c\xe5\xbd\x93\xe6\x9c\x80\xe7\xbb\x88\xe5\x8f\x91\xe7\x8e\xb0\xe8\xbf\x99\xe4\xb8\xaa\xe6\x96\xb9\xe5\x90\x91\xe6\x98\xaf\xe6\x9d\xa1\xe6\xad\xbb\xe8\xb7\xaf\xe6\x97\xb6\xef\xbc\x8c\xe5\xb0\xb1\xe5\x9b\x9e\xe5\x88\xb0\xe8\xbf\x99\xe4\xb8\xaa\xe5\xb2\x94\xe5\x8f\xa3\xef\xbc\x8c\xe9\x80\x89\xe6\x8b\xa9\xe5\x8f\xa6\xe4\xb8\x80\xe4\xb8\xaa\xe6\xb2\xa1\xe6\x9c\x89\xe6\x8e\xa2\xe7\xb4\xa2\xe8\xbf\x87\xe7\x9a\x84\xe6\x96\xb9\xe5\x90\x91\xe8\xaf\x95\xe6\x8e\xa2\xef\xbc\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe8\xbf\x99\xe4\xb8\xaa\xe8\xb7\xaf\xe5\x8f\xa3\xe6\x89\x80\xe6\x9c\x89\xe6\x96\xb9\xe5\x90\x91\xe9\x83\xbd\xe6\x98\xaf\xe6\xad\xbb\xe8\xb7\xaf\xef\xbc\x8c\xe5\xb0\xb1\xe5\x9b\x9e\xe9\x80\x80\xe5\x88\xb0\xe4\xb8\x8a\xe4\xb8\x80\xe4\xb8\xaa\xe8\xb7\xaf\xe5\x8f\xa3\xe7\xbb\xa7\xe7\xbb\xad\xe5\xb0\x9d\xe8\xaf\x95\xe3\x80\x82\xe6\x9c\x80\xe7\xbb\x88\xe4\xbc\x9a\xe8\xb5\xb0\xe5\x87\xba\xe8\xbf\xb7\xe5\xae\xab\xef\xbc\x8c\xe6\x88\x96\xe8\x80\x85\xe5\x9b\x9e\xe5\x88\xb0\xe5\x85\xa5\xe5\x8f\xa3\xef\xbc\x88\xe8\xbf\x99\xe6\x97\xb6\xe5\x80\x99\xe8\xbf\xb7\xe5\xae\xab\xe6\x9c\xac\xe6\x9d\xa5\xe5\xb0\xb1\xe6\xb2\xa1\xe6\x9c\x89\xe5\x87\xba\xe5\x8f\xa3\xef\xbc\x89\xe3\x80\x82\n\n> ......\n\n# \xe4\xb8\x80\xe8\xb5\xb7\xe6\x9d\xa5\xe5\xae\x8c\xe5\x96\x84\n\n\xe4\xbd\xa0\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x8c\x87\xe5\x87\xba\xe6\x9f\x90\xe4\xb8\xaa\xe4\xbb\xa3\xe7\xa0\x81\xe7\x9a\x84\xe5\x86\x97\xe4\xbd\x99\xe6\x88\x96\xe8\x80\x85\xe9\x94\x99\xe8\xaf\xaf\xe4\xb9\x8b\xe5\xa4\x84\xef\xbc\x8c\xe4\xb9\x9f\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x94\xa8\xe6\x9b\xb4\xe5\x8a\xa0\xe6\xb8\x85\xe6\x99\xb0\xe7\x9a\x84\xe8\xa7\xa3\xe9\x87\x8a\xe6\x9d\xa5\xe5\xaf\xb9\xe6\x9f\x90\xe4\xb8\xaa\xe4\xbb\xa3\xe7\xa0\x81\xe8\xbf\x9b\xe8\xa1\x8c\xe6\xb3\xa8\xe9\x87\x8a\xe3\x80\x82\n\n\xe4\xbd\xa0\xe8\xbf\x98\xe5\x8f\xaf\xe4\xbb\xa5\xe5\xae\x8c\xe5\x96\x84\xe6\x9f\x90\xe4\xb8\xaa\xe5\x88\x86\xe7\xb1\xbb\xe4\xb8\x8b\xe9\x9d\xa2\xe9\x97\xae\xe9\xa2\x98\xe7\x9a\x84\xe6\x80\xbb\xe7\xbb\x93\xef\xbc\x8c\xe8\xaf\xb4\xe5\x87\xba\xe4\xbd\xa0\xe5\xaf\xb9\xe6\x9f\x90\xe7\xb1\xbb\xe9\x97\xae\xe9\xa2\x98\xe7\x9a\x84\xe7\x8b\xac\xe5\x88\xb0\xe8\xa7\x81\xe8\xa7\xa3\xef\xbc\x8c\xe6\x80\xbb\xe4\xb9\x8b\xe5\x8f\xaf\xe4\xbb\xa5\xe5\x81\x9a\xe7\x9a\x84\xe5\xbe\x88\xe5\xa4\x9a\xe3\x80\x82\xe6\xac\xa2\xe8\xbf\x8e Pull Request\xef\xbc\x8c\xe8\xae\xa9\xe6\x88\x91\xe4\xbb\xac\xe4\xb8\x80\xe8\xb5\xb7\xe7\xbb\xb4\xe6\x8a\xa4\xe4\xb8\x80\xe4\xb8\xaa\xe6\xaf\x94\xe8\xbe\x83\xe5\xae\x8c\xe5\x96\x84\xe7\x9a\x84 LeetCode \xe4\xbb\xa3\xe7\xa0\x81\xe5\x8c\xba\xe3\x80\x82\n\n'