b'<img width=\'500px\' src=\'http://i.imgur.com/pa4vzNh.png\'>\n\nAs much as this series is to educate aspiring computer programmers and data scientists of all ages and all backgrounds, it is also a reminder to myself. After playing with computers and numbers for nearly 4 decades, I\'ve also made this to keep in mind how to have fun with computers and maths.\n\nUsing Jupyter notebooks as an interactive learning medium, this series provides an introduction to:\n\n- Computer Science\n- Python programming language\n- Numerical computing\n- Numbers theory\n- Prime numbers\n- Data visualization\n- Deep learning\n\n#### Interactive in Mybinder:\n\n[![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/mikkokotila/jupyter4kids/master?filepath=notebooks)\n\n#### Interative in Azure (requires logging in):\n\n<a href="https://notebooks.azure.com/import/gh/mikkokotila/jupyter4kids"><img src="https://notebooks.azure.com/launch.png" /></a>\n\n#### Static in Nbviewer:\n\nUse the link provided for each part below the corresponding title.\n\n#### Launch in Binder (no login required)\n\nClick the badge in the corresponding part below.\n\n## Part 1 : Introduction\n\nStart learning [here](https://nbviewer.jupyter.org/github/mikkokotila/jupyter4kids/blob/master/notebooks/numerical-computing-is-fun-1.ipynb) or \n\n[![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/mikkokotila/jupyter4kids/master?filepath=%2Fnotebooks%2Fnumerical-computing-is-fun-1.ipynb)\n\nWhat you will learn:\n\n- <code>print</code> is the command to print something on the screen\n- Math operations are very easy to perform in Python\n- Python deals with numbers based on data types\n- In Python there are two numerical data types; int and float\n- Functions are powerful tools to easily perform various operations\n- Functions may accept arguments (parameters) as input\n- Functions are computer processes, and arguments are what is being processed\n- It\'s very easy to create your own functions\n\n## Part 2 : Prime Numbers\n\nContinue learning [here](https://nbviewer.jupyter.org/github/mikkokotila/jupyter4kids/blob/master/notebooks/numerical-computing-is-fun-2.ipynb). \n\n[![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/mikkokotila/jupyter4kids/master?filepath=%2Fnotebooks%2Fnumerical-computing-is-fun-2.ipynb)\n\nWhat you will learn:\n\n- Prime numbers relate with divisibility\n- Divisibility means that when one number is divided by other, the product is not a whole number\n- A prime number is any number that is divisible only by itself and 1\n- Binary means 0 and 1\n- Boolean logic is the binary language of computers\n- Python gives us an easy to use way to instruct computers\n- Boolean logic statements involve <code>is</code>, <code>is not</code>, <code>and</code> and <code>or</code> statements\n- Boolean statements can be joined together\n- Boolean statements always return either True or False as output\n- It\'s easy to perform computing operations with small numbers\n- The biggest prime number is a really big number\n- Very big numbers require vast networks of computers joined together\n\n## Part 3 : Algorithms Overview\n\nContinue learning [here](https://nbviewer.jupyter.org/github/mikkokotila/jupyter4kids/blob/master/notebooks/numerical-computing-is-fun-3.ipynb).\n\n[![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/mikkokotila/jupyter4kids/master?filepath=%2Fnotebooks%2Fnumerical-computing-is-fun-3.ipynb)\n\nWhat you will learn: \n\n- Algoritms are like insides of factories \n- Algoritms process inputs to produce outputs\n- Conditional statements are a tool for putting boolean logic in to action\n- Conditional statements are part of "flow control"\n- Flow controls give us the ability to create rules for computer programs\n- The three conditional statements in Python are <code>if</code>, <code>else</code> and <code>elif</code>\n- Even just <code>if</code> alone can be used to create a conditional statement\n\n## Part 4: Automation Overview\n\nContinue learning [here](https://nbviewer.jupyter.org/github/mikkokotila/jupyter4kids/blob/master/notebooks/numerical-computing-is-fun-4.ipynb).\n\n[![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/mikkokotila/jupyter4kids/master?filepath=%2Fnotebooks%2Fnumerical-computing-is-fun-4.ipynb)\n\nWhat you will learn: \n\n- Generally speaking computer programs are focused on process automation\n- Loops are a highly effective method for automation\n- With small changes to our code, we can make big improvements in capability\n- Sometimes we can get more done with less code!\n- It\'s very convinient to store values in to memory\n- Computer memory is nothing like human memory, and also not like a safe deposit box\n- Any value can be stored in to memory \n- Numbers can be automatically generated with <code>range</code> function\n- It\'s meaningful to learn new concepts by gradually improving things\n\n<hr>\n\n## CREDITS \n\n**Numerical Computing is Fun** is an [Eka Foundation](http://eka.to) project.\n'