b"Helmet\n======\n[![npm version](https://badge.fury.io/js/helmet.svg)](http://badge.fury.io/js/helmet)\n[![npm dependency status](https://david-dm.org/helmetjs/helmet.svg)](https://david-dm.org/helmetjs/helmet)\n[![Build Status](https://travis-ci.org/helmetjs/helmet.svg?branch=master)](https://travis-ci.org/helmetjs/helmet)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fhelmetjs%2Fhelmet.svg?type=shield)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fhelmetjs%2Fhelmet?ref=badge_shield)\n\nHelmet helps you secure your Express apps by setting various HTTP headers. *It's not a silver bullet*, but it can help!\n\n[Looking for a version of Helmet that supports the Koa framework?](https://github.com/venables/koa-helmet)\n\nQuick start\n-----------\n\nFirst, run `npm install helmet --save` for your app. Then, in an Express (or Connect) app:\n\n```js\nconst express = require('express')\nconst helmet = require('helmet')\n\nconst app = express()\n\napp.use(helmet())\n\n// ...\n```\n\nIt's best to `use` Helmet early in your middleware stack so that its headers are sure to be set.\n\nYou can also use its pieces individually:\n\n```js\napp.use(helmet.xssFilter())\napp.use(helmet.frameguard())\n```\n\nYou can disable a middleware that's normally enabled by default. This will disable `frameguard` but include the other defaults.\n\n```js\napp.use(helmet({\n  frameguard: false\n}))\n```\n\nYou can also set options for a middleware. Setting options like this will *always* include the middleware, whether or not it's a default.\n\n```js\napp.use(helmet({\n  frameguard: {\n    action: 'deny'\n  }\n}))\n```\n\n*If you're using Express 3, make sure these middlewares are listed before `app.router`.*\n\nHow it works\n------------\n\nHelmet is a collection of 14 smaller middleware functions that set HTTP response headers. Running `app.use(helmet())` will not include all of these middleware functions by default.\n\n| Module | Default? |\n|---|---|\n| [contentSecurityPolicy](https://helmetjs.github.io/docs/csp/) for setting Content Security Policy |  |\n| [crossdomain](https://helmetjs.github.io/docs/crossdomain/) for handling Adobe products' crossdomain requests |  |\n| [dnsPrefetchControl](https://helmetjs.github.io/docs/dns-prefetch-control) controls browser DNS prefetching | \xe2\x9c\x93 |\n| [expectCt](https://helmetjs.github.io/docs/expect-ct/) for handling Certificate Transparency |  |\n| [featurePolicy](https://helmetjs.github.io/docs/feature-policy/) to limit your site's features |  |\n| [frameguard](https://helmetjs.github.io/docs/frameguard/) to prevent clickjacking | \xe2\x9c\x93 |\n| [hidePoweredBy](https://helmetjs.github.io/docs/hide-powered-by) to remove the X-Powered-By header | \xe2\x9c\x93 |\n| [hpkp](https://helmetjs.github.io/docs/hpkp/) for HTTP Public Key Pinning |  |\n| [hsts](https://helmetjs.github.io/docs/hsts/) for HTTP Strict Transport Security | \xe2\x9c\x93 |\n| [ieNoOpen](https://helmetjs.github.io/docs/ienoopen) sets X-Download-Options for IE8+ | \xe2\x9c\x93 |\n| [noCache](https://helmetjs.github.io/docs/nocache/) to disable client-side caching |  |\n| [noSniff](https://helmetjs.github.io/docs/dont-sniff-mimetype) to keep clients from sniffing the MIME type | \xe2\x9c\x93 |\n| [referrerPolicy](https://helmetjs.github.io/docs/referrer-policy) to hide the Referer header |  |\n| [xssFilter](https://helmetjs.github.io/docs/xss-filter) adds some small XSS protections | \xe2\x9c\x93 |\n\nYou can see more in [the documentation](https://helmetjs.github.io/docs/).\n"