b'# Universal Radio Hacker [![Blackhat Arsenal 2017](https://rawgit.com/toolswatch/badges/master/arsenal/usa/2017.svg)](http://www.toolswatch.org/2017/06/the-black-hat-arsenal-usa-2017-phenomenal-line-up-announced/) [![Blackhat Arsenal 2018](https://rawgit.com/toolswatch/badges/master/arsenal/europe/2018.svg)](http://www.toolswatch.org/2018/09/black-hat-arsenal-europe-2018-lineup-announced/)\n\n[![Tests status](https://img.shields.io/azure-devops/tests/jopohl/urh/2/master.svg)](https://dev.azure.com/jopohl/urh/_build?definitionId=2)\n[![Coverage](https://img.shields.io/azure-devops/coverage/jopohl/urh/2/master.svg)](https://dev.azure.com/jopohl/urh/_build?definitionId=2)\n[![PyPI version](https://badge.fury.io/py/urh.svg)](https://badge.fury.io/py/urh)\n[![Packaging status](https://repology.org/badge/tiny-repos/urh.svg)](https://repology.org/project/urh/versions)\n[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/jopohl/urh.svg)](http://isitmaintained.com/project/jopohl/urh "Average time to resolve an issue")\n[![Percentage of issues still open](http://isitmaintained.com/badge/open/jopohl/urh.svg)](http://isitmaintained.com/project/jopohl/urh "Percentage of issues still open")\n\nThe Universal Radio Hacker (URH) is a software for investigating unknown wireless protocols. Features include\n\n* __hardware interfaces__ for common Software Defined Radios\n* __easy demodulation__ of signals\n* __assigning participants__ to keep overview of your data\n* __customizable decodings__ to crack even sophisticated encodings like CC1101 data whitening\n* __assign labels__ to reveal the logic of the protocol\n* __automatic reverse engineering__ of protocol fields\n* __fuzzing component__ to find security leaks\n* __modulation support__ to inject the data back into the system\n* __simulation environment__ to perform stateful attacks\n\nTo get started, download the [official userguide (PDF)](https://github.com/jopohl/urh/releases/download/v2.0.0/userguide.pdf), watch the [demonstration videos (YouTube)](https://www.youtube.com/watch?v=kuubkTDAxwA&index=1&list=PLlKjreY6G-1EKKBs9sucMdk8PwzcFuIPB)\nor check out the [wiki](https://github.com/jopohl/urh/wiki) for more information and supported devices. Scroll down this page to learn how to install URH on your system.\n\nWant to stay in touch? [![Slack](https://img.shields.io/badge/chat-on%20slack-blue.svg?logo=slack)](https://join.slack.com/t/stralsundsecurity/shared_invite/enQtMjEwOTIxNzMzODc3LTk3NmE4MGVjYjEyYTMzYTdmN2RlNzUzYzg0NTNjNTQ2ODBkMzI3MDZlOWY3MjE4YjBkNTM4ZjJlNTJlZmJhNDg)\n\nIf you find URH useful, please consider giving this repository a :star: or even [donate via PayPal](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=6WDFF59DL56Z2). We appreciate your support!\n\nIf you use URH in your research paper, please cite [this](https://www.usenix.org/conference/woot18/presentation/pohl) WOOT\'18 paper, or directly use the following BibTeX entry.\n<details>\n  <summary>\n    <b>BibTeX entry for citing URH</b>\n  </summary>\n  \n  ```latex\n@inproceedings {220562,\nauthor = {Johannes Pohl and Andreas Noack},\ntitle = {Universal Radio Hacker: A Suite for Analyzing and Attacking Stateful Wireless Protocols},\nbooktitle = {12th {USENIX} Workshop on Offensive Technologies ({WOOT} 18)},\nyear = {2018},\naddress = {Baltimore, MD},\nurl = {https://www.usenix.org/conference/woot18/presentation/pohl},\npublisher = {{USENIX} Association},\n}\n```\n</details>\n\n# Installation\nUniversal Radio Hacker can be installed via __pip__ or using the __package manager__ of your distribution (if included).\nBelow you find more specific installation instructions for:\n- [Windows](#windows)\n- [Linux](#linux)\n  - [Install via Package Manager](#install-via-package-manager)\n  - [Generic Installation with pip (Ubuntu/Debian)](#generic-installation-with-pip-ubuntudebian)\n  - [Docker Image](#docker-image)\n- [MacOS](#macos)\n- [Updating your installation](#update-your-installation)\n  - [Updating with pip](#updating-with-pip)\n  - [Updating with MSI](#updating-with-msi)\n- [Running from source](#running-from-source)\n\n\n## Windows\nOn Windows, URH can be installed with it\'s [MSI Installer](https://github.com/jopohl/urh/releases). No further dependencies are required.\n \nIf you get an error about missing ``` api-ms-win-crt-runtime-l1-1-0.dll ```, run Windows Update or directly install [KB2999226](https://support.microsoft.com/en-us/help/2999226/update-for-universal-c-runtime-in-windows).\n\n## Linux\n### Install via Package Manager\nURH is included in the repositories of many linux distributions such as __Arch Linux__, __Gentoo__, __Fedora__, __openSUSE__ or __NixOS__. There is also a package for __FreeBSD__. If available, simply use your package manager to install URH. \n\n### Generic Installation with pip (Ubuntu/Debian)\nURH you can also be installed with using ```python3 -m pip install urh```. \nIn case you are running __Ubuntu__ or __Debian__ read on for more specific instructions.\n\nIn order to use native device backends, make sure you install the __-dev__ package for your desired SDRs, that is ``` libairspy-dev ```, ``` libhackrf-dev ```, ``` librtlsdr-dev  ```, ``` libuhd-dev  ```.\n\nIf your device does not have a ``` -dev ``` package, e.g. LimeSDR, you need to manually create a symlink to the ``` .so ```, like this:\n```bash\nsudo ln -s /usr/lib/x86_64-linux-gnu/libLimeSuite.so.17.02.2 /usr/lib/x86_64-linux-gnu/libLimeSuite.so\n```\n\n__before__ installing URH, using:\n\n```bash\nsudo apt-get update\nsudo apt-get install python3-numpy python3-psutil python3-zmq python3-pyqt5 g++ libpython3-dev python3-pip cython3\nsudo pip3 install urh\n```\n\n### Docker Image\nThe official URH docker image is available [here](https://hub.docker.com/r/jopohl/urh/).\n\n## MacOS\n### Using DMG\nIt is recommended to use __at least macOS 10.14__ when using the DMG available [here](https://github.com/jopohl/urh/releases).\n\n### With pip\n1. Install [Python 3 for Mac OS X](https://www.python.org/downloads/mac-osx/). \n   _If you experience issues with preinstalled Python, make sure you update to a recent version using the given link._\n2. (Optional) Install desired native libs e.g. ``` brew install librtlsdr ``` for \ncorresponding native device support.\n3. In a terminal, type: ``` pip3 install urh ```.\n4. Type ``` urh ``` in a terminal to get it started.\n\n\n## Update your installation\n### Updating with pip\nIf you installed URH via pip you can keep it up to date with ``` pip3 install --upgrade urh ```, or, if this should not work ``` python3 -m pip install --upgrade urh ```.\n\n### Updating with MSI\nIf you experience issues after updating URH using the ``` .msi ``` installer on Windows, please perform a __full uninstallation__. That is, uninstall URH via Windows and after that remove the installation folder (something like ``` C:\\Program Files\\Universal Radio Hacker ```). Now, install the new version using the recent ```.msi ```.\n\n## Running from source\nIf you like to live on bleeding edge, you can run URH from source.\n\n### Without installation\nTo execute the Universal Radio Hacker without installation, just run:\n```bash\ngit clone https://github.com/jopohl/urh/\ncd urh/src/urh\n./main.py\n```\n\nNote, before first usage the C++ extensions will be built.\n\n### Installing from source\nTo install from source you need to have ``` python-setuptools ``` installed. You can get it e.g. with ``` pip install setuptools ```. \nOnce the setuptools are installed use: \n```bash\ngit clone https://github.com/jopohl/urh/\ncd urh\npython setup.py install\n```\n\nAnd start the application by typing ``` urh ``` in a terminal.\n\n## Articles\n### Hacking stuff with URH\n* [Hacking Burger Pagers](https://www.rtl-sdr.com/using-a-hackrf-to-reverse-engineer-and-control-restaurant-pagers/)\n* [Reverse-engineer and Clone a Remote Control](https://www.rtl-sdr.com/video-tutorial-using-universal-radio-hacker-an-rtl-sdr-and-a-microcontroller-to-clone-433-mhz-remotes/)\n* [Reverse-engineering Weather Station RF Signals](https://www.rtl-sdr.com/tag/universal-radio-hacker/)\n* [Reverse-engineering Wireless Blinds](https://www.rtl-sdr.com/reverse-engineering-wireless-blinds-with-an-rtl-sdr-and-controlling-them-with-amazon-alexa/)\n* [Attacking Logitech Wireless Presenters (German Article)](https://www.heise.de/security/meldung/Wireless-Presenter-von-Logitech-und-Inateck-anfaellig-fuer-Angriffe-ueber-Funk-4439795.html)\n* [Attacking Wireless Keyboards](https://threatpost.com/fujitsu-wireless-keyboard-unpatched-flaws/149477/)\n* [Reverse-engineering a 433MHz Remote-controlled Power Socket for use with Arduino](http://www.ignorantofthings.com/2018/11/reverse-engineering-433mhz-remote.html)\n\n### General presentations and tutorials on URH\n* [Hackaday Article](https://hackaday.com/2017/02/23/universal-radio-hacker/)\n* [RTL-SDR.com Article](https://www.rtl-sdr.com/reverse-engineering-signals-universal-radio-hacker-software/)\n* [Short Tutorial on URH with LimeSDR Mini](https://www.crowdsupply.com/lime-micro/limesdr-mini/updates/investigating-wireless-protocols-with-universal-radio-hacker)\n* [Brute-forcing a RF Device: a Step-by-step Guide](https://pandwarf.com/news/brute-forcing-a-new-device-a-step-by-step-guide/)\n\n## External decodings\nSee [wiki](https://github.com/jopohl/urh/wiki/External-decodings) for a list of external decodings provided by our community! Thanks for that!\n\n## Screenshots\n### Get the data out of raw signals\n![Interpretation phase](http://i.imgur.com/Wy17Zv3.png)\n\n### Keep an overview even on complex protocols\n ![Analysis phase](http://i.imgur.com/ubAL3pE.png)\n\n### Record and send signals\n ![Record](http://i.imgur.com/BfQpg23.png)\n'