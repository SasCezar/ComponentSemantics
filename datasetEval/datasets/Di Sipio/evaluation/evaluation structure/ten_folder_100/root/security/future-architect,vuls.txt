b"\n# Vuls: VULnerability Scanner\n\n[![Slack](https://img.shields.io/badge/slack-join-blue.svg)](http://goo.gl/forms/xm5KFo35tu)\n[![License](https://img.shields.io/github/license/future-architect/vuls.svg?style=flat-square)](https://github.com/future-architect/vuls/blob/master/LICENSE)\n[![Build Status](https://travis-ci.org/future-architect/vuls.svg?branch=master)](https://travis-ci.org/future-architect/vuls)\n[![Go Report Card](https://goreportcard.com/badge/github.com/future-architect/vuls)](https://goreportcard.com/report/github.com/future-architect/vuls)\n[![Contributors](https://img.shields.io/github/contributors/future-architect/vuls.svg)](https://github.com/future-architect/vuls/graphs/contributors)\n\n![Vuls-logo](img/vuls_logo.png)\n\nVulnerability scanner for Linux/FreeBSD, agentless, written in golang.\nWe have a slack team. [Join slack team](http://goo.gl/forms/xm5KFo35tu)\nTwitter: [@vuls_en](https://twitter.com/vuls_en)\n\n![Vuls-Abstract](img/vuls-abstract.png)\n\n![Vulsrepo](https://raw.githubusercontent.com/usiusi360/vulsrepo/master/gallery/demo.gif)\n\n[![asciicast](https://asciinema.org/a/3y9zrf950agiko7klg8abvyck.png)](https://asciinema.org/a/3y9zrf950agiko7klg8abvyck)\n\n![Vuls-slack](img/vuls-slack-en.png)\n\n----\n\n## NEWS\n\n| Version     | Main Feature |  Date |\n|:------------|:---------------------------------|:--------------------|\n| [v0.8.0](https://github.com/future-architect/vuls/releases/tag/v0.8.0) | secret | Coming soon |\n| [v0.7.0](https://github.com/future-architect/vuls/releases/tag/v0.7.0) | WordPress Vulnerability Scan | 2019/Apr/8 |\n| [v0.6.3](https://github.com/future-architect/vuls/releases/tag/v0.6.3) | GitHub Integration | 2019/Feb/20 |\n| [v0.6.2](https://github.com/future-architect/vuls/releases/tag/v0.6.2) | Add US-CERT/JPCERT Alerts as VulnSrc | 2019/Jan/23 |\n| [v0.6.1](https://github.com/future-architect/vuls/releases/tag/v0.6.1) | BugFix | 2018/Nov/16 |\n| [v0.6.0](https://github.com/future-architect/vuls/releases/tag/v0.6.0) | Add ExploitDB as VulnSrc | 2018/Nov/3 |\n| [v0.5.0](https://github.com/future-architect/vuls/releases/tag/v0.5.0) | Scan accuracy improvement | 2018/Aug/27 |\n\n----\n\n## Abstract\n\nFor a system administrator, having to perform security vulnerability analysis and software update on a daily basis can be a burden.\nTo avoid downtime in a production environment, it is common for a system administrator to choose not to use the automatic update option provided by the package manager and to perform update manually.\nThis leads to the following problems.\n\n- The system administrator will have to constantly watch out for any new vulnerabilities in NVD (National Vulnerability Database) or similar databases.\n- It might be impossible for the system administrator to monitor all the software if there are a large number of software packages installed in the server.\n- It is expensive to perform analysis to determine the servers affected by new vulnerabilities. The possibility of overlooking a server or two during analysis is there.\n\nVuls is a tool created to solve the problems listed above. It has the following characteristics.\n\n- Informs users of the vulnerabilities that are related to the system.\n- Informs users of the servers that are affected.\n- Vulnerability detection is done automatically to prevent any oversight.\n- A report is generated on a regular basis using CRON or other methods. to manage vulnerability.\n\n![Vuls-Motivation](img/vuls-motivation.png)\n\n----\n\n## Main Features\n\n### Scan for any vulnerabilities in Linux/FreeBSD Server\n\n[Supports major Linux/FreeBSD](https://vuls.io/docs/en/supported-os.html)\n\n- Alpine, Amazon Linux, CentOS, Debian, Oracle Linux, Raspbian, RHEL, SUSE Enterprise Linux, and Ubuntu\n- FreeBSD\n- Cloud, on-premise, Docker Container and Docker Image\n\n### High-quality scan\n\nVuls uses multiple vulnerability databases\n\n- [NVD](https://nvd.nist.gov/)\n- [JVN(Japanese)](http://jvndb.jvn.jp/apis/myjvn/)\n- OVAL\n  - [Debian](https://www.debian.org/security/oval/)\n  - [Oracle Linux](https://linux.oracle.com/security/oval/)\n  - [RedHat](https://www.redhat.com/security/data/oval/)\n  - [SUSE](http://ftp.suse.com/pub/projects/security/oval/)\n  - [Ubuntu](https://people.canonical.com/~ubuntu-security/oval/)\n\n- [Alpine-secdb](https://git.alpinelinux.org/cgit/alpine-secdb/)\n- [Debian Security Bug Tracker](https://security-tracker.debian.org/tracker/)\n- [Red Hat Security Advisories](https://access.redhat.com/security/security-updates/)\n- Commands (yum, zypper, and pkg-audit)\n  - RHSA/ALAS/ELSA/FreeBSD-SA\n- [Exploit Database](https://www.exploit-db.com/)\n- [US-CERT](https://www.us-cert.gov/ncas/alerts)\n- [JPCERT](http://www.jpcert.or.jp/at/2019.html)\n- [WPVulnDB](https://wpvulndb.com/api)\n- [Node.js Security Working Group](https://github.com/nodejs/security-wg)\n- [Ruby Advisory Database](https://github.com/rubysec/ruby-advisory-db)\n- [Safety DB(Python)](https://github.com/pyupio/safety-db)\n- [PHP Security Advisories Database](https://github.com/FriendsOfPHP/security-advisories)\n- [RustSec Advisory Database](https://github.com/RustSec/advisory-db)\n- Changelog\n\n### Scan mode\n\n[Fast Scan](https://vuls.io/docs/en/architecture-fast-scan.html)\n\n- Scan without root privilege, no dependencies\n- Almost no load on the scan target server\n- Offline mode scan with no internet access. (CentOS, Debian, Oracle Linux, Red Hat, and Ubuntu)\n\n[Fast Root Scan](https://vuls.io/docs/en/architecture-fast-root-scan.html)\n\n- Scan with root privilege\n- Almost no load on the scan target server\n- Detect processes affected by update using yum-ps (Amazon Linux, CentOS, Oracle Linux, and RedHat)\n- Detect processes which updated before but not restarting yet using checkrestart of debian-goodies (Debian and Ubuntu)\n- Offline mode scan with no internet access. (CentOS, Debian, Oracle Linux, Red Hat, and Ubuntu)\n\n### [Remote, Local scan mode, Server mode](https://vuls.io/docs/en/architecture-remote-local.html)\n\n[Remote scan mode](https://vuls.io/docs/en/architecture-remote-scan.html)\n\n- User is required to only set up one machine that is connected to other target servers via SSH\n\n[Local scan mode](https://vuls.io/docs/en/architecture-local-scan.html)\n\n- If you don't want the central Vuls server to connect to each server by SSH, you can use Vuls in the Local Scan mode.\n\n[Server mode](https://vuls.io/docs/en/usage-server.html)\n\n- First, start Vuls in server mode and listen as an HTTP server.\n- Next, issue a command on the scan target server to collect software information. Then send the result to Vuls Server via HTTP. You receive the scan results as JSON format.\n- No SSH needed, No Scanner needed. Only issuing Linux commands directory on the scan target server.\n\n### **Dynamic** Analysis\n\n- It is possible to acquire the state of the server by connecting via SSH and executing the command.\n- Vuls warns when the scan target server was updated the kernel etc. but not restarting it.\n\n### **Static** Analysis\n\nVuls v0.8.0 can scan Docker images using [knqyf263/trivy](https://github.com/knqyf263/trivy).\nFollowing Registry supported.\n\n- ECR\n- GCR\n- Local Image\n\nFor details, see [Scan docker image](https://vuls.io/docs/en/tutorial-scan-docker-image.html)\n\n### Scan vulnerabilities of non-OS-packages\n\n- Libraries of programming language\n- Self-compiled software\n- Network Devices\n\nVuls has some options to detect the vulnerabilities\n\n- [Lockfile based Scan](https://vuls.io/docs/en/usage-scan-non-os-packages.html#library-vulns-scan)\n- [GitHub Integration](https://vuls.io/docs/en/usage-scan-non-os-packages.html#usage-integrate-with-github-security-alerts)\n- [Common Platform Enumeration (CPE) based Scan](https://vuls.io/docs/en/usage-scan-non-os-packages.html#cpe-scan)\n- [OWASP Dependency Check Integration](https://vuls.io/docs/en/usage-scan-non-os-packages.html#usage-integrate-with-owasp-dependency-check-to-automatic-update-when-the-libraries-are-updated-experimental)\n\n## Scan WordPress core, themes, plugins\n\n- [Scan WordPress](https://vuls.io/docs/en/usage-scan-wordpress.html)\n\n## MISC\n\n- Nondestructive testing\n- Pre-authorization is *NOT* necessary before scanning on AWS\n  - Vuls works well with Continuous Integration since tests can be run every day. This allows you to find vulnerabilities very quickly.\n- Auto-generation of configuration file template\n  - Auto-detection of servers set using CIDR, generate configuration file template\n- Email and Slack notification is possible (supports Japanese language)\n- Scan result is viewable on accessory software, TUI Viewer in a terminal or Web UI ([VulsRepo](https://github.com/future-architect/vulsrepo)).\n\n----\n\n## What Vuls Doesn't Do\n\n- Vuls doesn't update the vulnerable packages.\n\n----\n\n## Document\n\nFor more information such as Installation, Tutorial, Usage, visit [vuls.io](https://vuls.io/)\n[\xe6\x97\xa5\xe6\x9c\xac\xe8\xaa\x9e\xe7\xbf\xbb\xe8\xa8\xb3\xe3\x83\x89\xe3\x82\xad\xe3\x83\xa5\xe3\x83\xa1\xe3\x83\xb3\xe3\x83\x88](https://vuls.io/ja/)\n\n----\n\n## Authors\n\nkotakanbe ([@kotakanbe](https://twitter.com/kotakanbe)) created vuls and [these fine people](https://github.com/future-architect/vuls/graphs/contributors) have contributed.\n\n----\n\n## Change Log\n\nPlease see [CHANGELOG](https://github.com/future-architect/vuls/blob/master/CHANGELOG.md).\n\n----\n\n## Stargazers over time\n\n[![Stargazers over time](https://starcharts.herokuapp.com/future-architect/vuls.svg)](https://starcharts.herokuapp.com/future-architect/vuls)\n\n-----;\n\n## License\n\nPlease see [LICENSE](https://github.com/future-architect/vuls/blob/master/LICENSE).\n"