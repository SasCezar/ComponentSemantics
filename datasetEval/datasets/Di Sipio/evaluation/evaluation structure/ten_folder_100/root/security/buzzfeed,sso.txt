b'# sso\n\n> See our launch [blog post](https://tech.buzzfeed.com/unleashing-the-a6a1a5da39d6) for more information!\n\n[![CircleCI](https://circleci.com/gh/buzzfeed/sso.svg?style=svg)](https://circleci.com/gh/buzzfeed/sso)\n[![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg)](http://opensource.org/licenses/MIT)\n[![Docker Automated build](https://img.shields.io/docker/automated/buzzfeed/sso.svg)](https://hub.docker.com/r/buzzfeed/sso/)\n[![codecov.io](https://codecov.io/github/buzzfeed/sso/coverage.svg?branch=master)](https://codecov.io/github/buzzfeed/sso?branch=master)\n\n\n<img src="https://user-images.githubusercontent.com/10510566/44476420-a64e5980-a605-11e8-8ad9-2820109deb75.png" width="128px">\n\n> Please take the [SSO Community Survey][sso_survey] to let us know how we\'re doing, and to help us plan our roadmap!\n\n----\n\n**sso** \xe2\x80\x94\xc2\xa0lovingly known as *the S.S. Octopus* or *octoboi* \xe2\x80\x94 is the\nauthentication and authorization system BuzzFeed developed to provide a secure,\nsingle sign-on experience for access to the many internal web apps used by our\nemployees.\n\nIt depends on Google as its authoritative OAuth2 provider, and authenticates\nusers against a specific email domain. Further authorization based on Google\nGroup membership can be required on a per-upstream basis.\n\nThe main idea behind **sso** is a "double OAuth2" flow, where `sso-auth` is the\nOAuth2 provider for `sso-proxy` and Google is the OAuth2 provider for `sso-auth`.\n\n[sso](https://github.com/buzzfeed/sso) is built on top of Bitly\xe2\x80\x99s open source [oauth2_proxy](https://github.com/bitly/oauth2_proxy)\n\nIn a nutshell:\n\n- If a user visits an `sso-proxy`-protected service (`foo.sso.example.com`) and does not have a session cookie, they are redirected to `sso-auth` (`sso-auth.example.com`).\n   - If the user **does not** have a session cookie for `sso-auth`,\n     they are prompted to log in via the usual Google OAuth2 flow, and then\n     redirected back to `sso-proxy` where they will now be logged in (to\n     `foo.sso.example.com`)\n   - If the user *does* have a session cookie for `sso-auth` (e.g. they\n     have already logged into `bar.sso.example.com`), they are\n     transparently redirected back to `proxy` where they will be logged in,\n     without needing to go through the Google OAuth2 flow\n- `sso-proxy` transparently re-validates & refreshes the user\'s session with `sso-auth`\n\n## Installation\n\n- [Prebuilt binary releases](https://github.com/buzzfeed/sso/releases)\n- [Docker][docker_hub]\n- `go get github.com/buzzfeed/sso/cmd/...`\n\n## Quickstart\n\nFollow our [Quickstart guide](docs/quickstart.md) to spin up a local deployment\nof **sso** to get a feel for how it works!\n\n## Code of Conduct\n\nHelp us keep **sso** open and inclusive. Please read and follow our [Code of Conduct](CODE_OF_CONDUCT.md).\n\n## Contributing\n\nContributions to **sso** are welcome! Please follow our [contribution guideline](CONTRIBUTING.md).\n\n### Issues\n\nPlease file any issues you find in our [issue tracker](https://github.com/buzzfeed/sso/issues).\n\n### Security Vulns\n\nIf you come across any security vulnerabilities with the **sso** repo or software, please email security@buzzfeed.com. In your email, please request access to our [bug bounty program](https://hackerone.com/buzzfeed) so we can compensate you for any valid issues reported.\n\n## Maintainers\n\n**sso** is actively maintained by the BuzzFeed Infrastructure teams.\n\n## Notable forks\n\n - [pomerium](https://github.com/pomerium/pomerium) an identity-access proxy, inspired by BeyondCorp.\n\n[docker_hub]: https://hub.docker.com/r/buzzfeed/sso/\n[sso_survey]: https://docs.google.com/forms/d/e/1FAIpQLSeRjf66ZSpMkSASMbYebx6QvECYRj9nUevOhUF2huw53sE6_g/viewform\n'