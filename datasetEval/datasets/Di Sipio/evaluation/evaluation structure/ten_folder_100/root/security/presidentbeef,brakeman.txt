b'[![Brakeman Logo](http://brakemanscanner.org/images/logo_medium.png)](http://brakemanscanner.org/)\n\n[![Build Status](https://circleci.com/gh/presidentbeef/brakeman.svg?style=svg)](https://circleci.com/gh/presidentbeef/brakeman)\n[![Test Coverage](https://api.codeclimate.com/v1/badges/1b08a5c74695cb0d11ec/test_coverage)](https://codeclimate.com/github/presidentbeef/brakeman/test_coverage)\n[![Gitter](https://badges.gitter.im/presidentbeef/brakeman.svg)](https://gitter.im/presidentbeef/brakeman)\n\n# Brakeman\n\nBrakeman is a static analysis tool which checks Ruby on Rails applications for security vulnerabilities.\n\n# Installation\n\nUsing RubyGems:\n\n    gem install brakeman\n\nUsing Bundler:\n\n    group :development do\n      gem \'brakeman\'\n    end\n\nUsing Docker:\n\n    docker pull presidentbeef/brakeman\n\nUsing Docker to build from source:\n\n    git clone https://github.com/presidentbeef/brakeman.git\n    cd brakeman\n    docker build . -t brakeman\n\n# Usage\n\n#### Running locally\n\nFrom a Rails application\'s root directory:\n\n    brakeman\n\nOutside of Rails root:\n\n    brakeman /path/to/rails/application\n\n#### Running with Docker\n\nFrom a Rails application\'s root directory:\n\n    docker run -v "$(pwd)":/code presidentbeef/brakeman\n\nWith a little nicer color:\n\n    docker run -v "$(pwd)":/code presidentbeef/brakeman --color\n\nFor an HTML report:\n\n    docker run -v "$(pwd)":/code presidentbeef/brakeman -o brakeman_results.html\n\nOutside of Rails root (note that the output file is relative to path/to/rails/application):\n\n    docker run -v \'path/to/rails/application\':/code presidentbeef/brakeman -o brakeman_results.html\n\n# Compatibility\n\nBrakeman should work with any version of Rails from 2.3.x to 6.x.\n\nBrakeman can analyze code written with Ruby 1.8 syntax and newer, but requires at least Ruby 2.3.0 to run.\n\n# Basic Options\n\nFor a full list of options, use `brakeman --help` or see the [OPTIONS.md](OPTIONS.md) file.\n\nTo specify an output file for the results:\n\n    brakeman -o output_file\n\nThe output format is determined by the file extension or by using the `-f` option. Current options are: `text`, `html`, `tabs`, `json`, `markdown`, `csv`, and `codeclimate`.\n\nMultiple output files can be specified:\n\n    brakeman -o output.html -o output.json\n\nTo suppress informational warnings and just output the report:\n\n    brakeman -q\n\nNote all Brakeman output except reports are sent to stderr, making it simple to redirect stdout to a file and just get the report.\n\nTo see all kinds of debugging information:\n\n    brakeman -d\n\nSpecific checks can be skipped, if desired. The name needs to be the correct case. For example, to skip looking for default routes (`DefaultRoutes`):\n\n    brakeman -x DefaultRoutes\n\nMultiple checks should be separated by a comma:\n\n    brakeman -x DefaultRoutes,Redirect\n\nTo do the opposite and only run a certain set of tests:\n\n    brakeman -t SQL,ValidationRegex\n\nIf Brakeman is running a bit slow, try\n\n    brakeman --faster\n\nThis will disable some features, but will probably be much faster (currently it is the same as `--skip-libs --no-branching`). *WARNING*: This may cause Brakeman to miss some vulnerabilities.\n\nBy default, Brakeman will return a non-zero exit code if any security warnings are found or scanning errors are encountered. To disable this:\n\n    brakeman --no-exit-on-warn --no-exit-on-error\n\nTo skip certain files or directories that Brakeman may have trouble parsing, use:\n\n    brakeman --skip-files file1,/path1/,path2/\n\nTo compare results of a scan with a previous scan, use the JSON output option and then:\n\n    brakeman --compare old_report.json\n\nThis will output JSON with two lists: one of fixed warnings and one of new warnings.\n\nBrakeman will ignore warnings if configured to do so. By default, it looks for a configuration file in `config/brakeman.ignore`.\nTo create and manage this file, use:\n\n    brakeman -I\n\n# Warning information\n\nSee [warning\\_types](docs/warning_types) for more information on the warnings reported by this tool.\n\n# Warning context\n\nThe HTML output format provides an excerpt from the original application source where a warning was triggered. Due to the processing done while looking for vulnerabilities, the source may not resemble the reported warning and reported line numbers may be slightly off. However, the context still provides a quick look into the code which raised the warning.\n\n# Confidence levels\n\nBrakeman assigns a confidence level to each warning. This provides a rough estimate of how certain the tool is that a given warning is actually a problem. Naturally, these ratings should not be taken as absolute truth.\n\nThere are three levels of confidence:\n\n + High - Either this is a simple warning (boolean value) or user input is very likely being used in unsafe ways.\n + Medium - This generally indicates an unsafe use of a variable, but the variable may or may not be user input.\n + Weak - Typically means user input was indirectly used in a potentially unsafe manner.\n\nTo only get warnings above a given confidence level:\n\n    brakeman -w3\n\nThe `-w` switch takes a number from 1 to 3, with 1 being low (all warnings) and 3 being high (only highest confidence warnings).\n\n# Configuration files\n\nBrakeman options can stored and read from YAML files. To simplify the process of writing a configuration file, the `-C` option will output the currently set options.\n\nOptions passed in on the commandline have priority over configuration files.\n\nThe default config locations are `./config/brakeman.yml`, `~/.brakeman/config.yml`, and `/etc/brakeman/config.yml`\n\nThe `-c` option can be used to specify a configuration file to use.\n\n# Continuous Integration\n\nThere is a [plugin available](http://brakemanscanner.org/docs/jenkins/) for Jenkins/Hudson.\n\nFor even more continuous testing, try the [Guard plugin](https://github.com/guard/guard-brakeman).\n\n# Building\n\n    git clone git://github.com/presidentbeef/brakeman.git\n    cd brakeman\n    gem build brakeman.gemspec\n    gem install brakeman*.gem\n\n# Who is Using Brakeman?\n\n* [Code Climate](https://codeclimate.com/)\n* [GitHub](https://github.com/)\n* [Groupon](http://www.groupon.com/)\n* [New Relic](http://newrelic.com)\n* [Twitter](https://twitter.com/)\n\n[..and more!](http://brakemanscanner.org/brakeman_users)\n\n# Homepage/News\n\nWebsite: http://brakemanscanner.org/\n\nTwitter: https://twitter.com/brakeman\n\nChat: https://gitter.im/presidentbeef/brakeman\n\n# License\n\nBrakeman is free for non-commercial use.\n\nSee [COPYING](COPYING.md) for details.\n'