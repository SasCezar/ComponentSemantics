b"# docker-windows-box\n\nThis repo is a collection of various Vagrant environments to work with Windows Containers on a Windows Server 2019 or Windows 10 VM.\n\nThere are different Vagrantfiles for each scenario:\n\n* `Vagrantfile` - Windows Server 2019 and Docker 18.09.0\n* [`lcow/Vagrantfile`](lcow/README.md) - Windows 10 with nightly Docker and LCOW enabled\n* [`nano/Vagrantfile`](nano/README.md) - Test setup to have Docker engine installed in a Windows Nanoserver VM\n* [`swarm-demo/Vagrantfile`](swarm-demo/README.md) - some Windows Server 2016 VM's in classical Docker Swarm\n* [`swarm-mode/Vagrantfile`](swarm-mode/README.md) - some Windows Server 2016 VM's in Docker Swarm-mode and overlay network\n* [`windows10/Vagrantfile`](windows10/README.md) - Windows 10 1809 and nightly Docker to test process isolation\n* docker-machine test environments\n  * [`docker-machine/Vagrantfile`](docker-machine/README.md) - Windows 10 with `docker-machine` installed to test with VMware Workstation\n  * [`docker-machine-fusion/Vagrantfile`](docker-machine-fusion/README.md) - macOS 10.13 with `docker-machine` installed to test with VMware Fusion\n* [`wsl2/Vagrantfile`](wsl2/README.md) - Windows 10 Home Insider Preview with WSL 2\n\n## Introduction\n\nThis repo has started with a single Vagrantfile that is explained below. As you can see there are several interesting setups here as well in the sub folders.\n\nHave a look at my blog posts how to [Setup a local Windows 2016 TP5 Docker VM](https://stefanscherer.github.io/setup-local-windows-2016-tp5-docker-vm/) and [Adding Hyper-V support to 2016 TP5 Docker VM](https://stefanscherer.github.io/adding-hyper-v-support-to-2016-tp5-docker-vm/) for more details. I also can recommend a more up to date guide [Getting started with Windows Containers](http://glennsarti.github.io/blog/getting-started-with-windows-containers/) by [@glennsarti](https://github.com/glennsarti)\n\n![](images/server2016.png)\n\nAfter provisioning the box has the following tools installed:\n\n* Windows Server 2019 with Docker Engine 18.09.0 and client\n* docker-machine 0.16.0\n* docker-compose 1.23.0\n* (Docker Tab completion for PowerShell (posh-docker))\n* Chocolatey\n* Git command line\n* Git Tab completion for PowerShell (posh-git)\n* SSH client\n\nOptionally you can create a Hyper-V Docker Linux machine and have a multi architecture experience in one VM.\n\nTested with Vagrant 2.1.2, VMware Fusion Pro 10.1.3 on a MacBookPro with Retina display. The Vagrant box will be started in fullscreen mode also with Retina support.\n\nYou can learn and play a lot of scenarios with it:\n\n![](images/docker-windows-box.png)\n\nFuture work will be a Docker Swarm with both Linux and Windows Docker Engines...\n\n## Get the base box\n\nFirst register to [evaluate Windows 2019](https://www.microsoft.com/evalcenter/evaluate-windows-server-2019), but you don't need to download the ISO manually.\n\nThe Vagrant base box is available in Vagrant Cloud https://app.vagrantup.com/StefanScherer, these are all eval versions of Windows Server 2019 or Windows 10.\n\nVagrant will download the base box if it's not available locally, a `vagrant box list` shows which boxes you already have downloaded.\n\n## Install Vagrant reload plugin\n\nAs we need to reboot the VM once during the provisioning, you will need an additional Vagrant plugin\n\n```bash\nvagrant plugin install vagrant-reload\n```\n\n## Spin up the box\n\nTo start the VM with [Vagrant](https://vagrantup.com) run this command\n\n```bash\nvagrant up\n```\n\nYou only have to logout and login once to have the Docker tools in user vagrant's PATH.\n\n## Create some Windows Docker Container images\n\nYou may clone my [dockerfiles-windows](https://github.com/StefanScherer/dockerfiles-windows) repo and create some container images.\n\n```\ngit clone https://github.com/StefanScherer/dockerfiles-windows\ncd dockerfiles-windows\ncd node\n.\\build.ps1\n```\n\n## Test the nightly Windows Docker Engine\n\nYou can update the Docker Engine with the script\n\n```\nC:\\update-container-host.ps1\n```\n\nThis will stop the Docker service, download the nightly build from https://master.dockerproject.org and restart the service.\n\n## Create a Linux Docker machine in Hyper-V\n\nIf you want to try out multi architecture you also use `docker-machine` to create a Linux Docker Engine running in Hyper-V.\nI have prepared a script that will set up everything as there are some known issues.\n\n```\nC:\\vagrant\\scripts\\create-hyperv-linux-docker-machine.ps1\n```\n\nThis PowerShell script creates a Docker machine and updates Docker Engine to the latest so that the Windows Docker client is able to communicate with the Linux Docker Engine.\n\n### Use the Linux Docker machine\n\nOpen a PowerShell terminal as an administrator and select the Linux Docker machine with\n\n```\ndocker-machine env --shell powershell | iex\n```\n\nNow run your first busybox container with\n\n```\ndocker run -it busybox uname -a\n```\n\n## Windows Docker Swarm demo\n\nSee subdirectory [swarm-demo](swarm-demo/README.md)\n\n## Use Vagrant to control your box\n\nFrom your host control your Vagrant box with the usual Vagrant workflow:\n\n* vagrant up\n* vagrant halt\n* vagrant destroy -f\n* vagrant snap take\n* vagrant snap rollback\n* ...\n\nWriting the installation script for the Hyper-V Docker machine the snapshot functions helped me a lot to test the script again and again.\n"