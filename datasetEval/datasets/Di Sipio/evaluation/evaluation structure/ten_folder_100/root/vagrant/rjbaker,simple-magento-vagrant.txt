b'simple-magento-vagrant\n======================\n\nA VERY simple Magento environment provisioner for [Vagrant](http://www.vagrantup.com/).\n\n![Magento & Vagrant](https://cookieflow.files.wordpress.com/2013/07/magento_vagrant.jpg?w=525&h=225)\n\n* Creates a running Magento development environment with a few simple commands.\n* Runs on Ubuntu (Trusty 14.04 64 Bit) \\w PHP 5.5, MySQL 5.5, Apache 2.2\n* Uses [Magento CE 1.9.1.0](http://www.magentocommerce.com/download)\n* Automatically runs Magento\'s installer and creates CMS admin account.\n* Optionally installs Magento Sample Store Inventory\n* Automatically runs [n98-magerun](https://github.com/netz98/n98-magerun) installer.\n* Perfect for rapid development or extension testing with an unopionionated, bare-bones and easily tweaked configuration.\n* Goes from naught-to-Magento in a couple of minutes.\n\n## Getting Started\n\n**Prerequisites**\n\n* Install [VirtualBox](https://www.virtualbox.org/wiki/Downloads)\n* Install [Vagrant](http://www.vagrantup.com/)\n* Clone or [download](https://github.com/r-baker/simple-magento-vagrant/archive/master.zip) this repository to the root of your project directory `git clone https://github.com/r-baker/simple-magento-vagrant.git`\n* In your project directory, run `vagrant up`\n\nThe first time you run this, Vagrant will download the bare Ubuntu box image. This can take a little while as the image is a few-hundred Mb. This is only performed once.\n\nVagrant will configure the base system before downloading Magento and running the installer.\n\n## Usage\n\n* In your browser, head to `127.0.0.1:8080`\n* Magento CMS is accessed at `127.0.0.1:8080/admin`\n* User: `admin` Password: `password123123`\n* Access the virtual machine directly using `vagrant ssh`\n* When you\'re done `vagrant halt`\n\n[Full Vagrant command documentation](http://docs.vagrantup.com/v2/cli/index.html)\n\n## Sample Data\n\nSample data is automatically downloaded and installed by default. However, it\'s a reasonably large file and can take a while to download.\n\n> "I don\'t want sample data"\n\nSample data installation can be disabled:\n\n * Open `Vagrantfile`\n * Change `sample_data = "true"` to `sample_data = "false"`\n * Run `vagrant up` as normal\n\n> "I have already downloaded the sample data"\n\n * Place the sample data `tar.gz` file in the project root\n * Ensure `sample_data = "true"`\n * The provisioning script will skip the download and use the provided file instead. The same goes for when the provisioner is rerun. e.g. `vagrant reload --provision`\n\n## Todo\n* Install Modman.\n\n**Why no Puppet/Chef?**\nAdmittedly, Puppet and Chef are excellent solutions for predictable and documented system configurations. The emphasis for this provisioner is on unopinionated simplicity. There are some excellent Puppet / Chef Magento configurations on Github with far more bells and whistles.\n'