b'# k8s-vagrant-multi-node\n\nThis project was based on work from [coolsvap/kubeadm-vagrant](https://github.com/coolsvap/kubeadm-vagrant) by [@coolsvap](https://twitter.com/coolsvap), now it is mostly independent.\n\nA demo of the start and destroy of a cluster can be found here: [README.md Demo section](#demo).\n\n<!-- TOC depthFrom:2 depthTo:6 withLinks:1 updateOnSave:1 orderedList:0 -->\n\n- [Prerequisites](#prerequisites)\n- [Hardware Requirements](#hardware-requirements)\n- [Quickstart](#quickstart)\n- [Different OS / Vagrantfiles](#different-os--vagrantfiles)\n- [Usage](#usage)\n\t- [Starting the environment](#starting-the-environment)\n\t- [Faster (parallel) environment start](#faster-parallel-environment-start)\n\t- [Show status of VMs](#show-status-of-vms)\n\t- [Shutting down the environment](#shutting-down-the-environment)\n\t- [Copy local Docker image into VMs](#copy-local-docker-image-into-vms)\n\t- [Data inside VM](#data-inside-vm)\n\t- [Show `make` targets](#show-make-targets)\n- [Variables](#variables)\n- [Demo](#demo)\n\t- [Start Cluster](#start-cluster)\n\t- [Destroy Cluster](#destroy-cluster)\n\n<!-- /TOC -->\n\n## Prerequisites\n\n* `make`\n* `kubectl` - Optional when `KUBECTL_AUTO_CONF=false` (default `true`) is set.\n* `grep`\n* `cut`\n* `rsync`\n* Source for randomness (only used to generate a kubeadm token, when no custom `KUBETOKEN` is given):\n\t* `/dev/urandom`\n\t* `openssl` command - Fallback for when `/dev/urandom` is not available.\n* Vagrant (>= `2.2.0`)\n\t* Tested with `2.2.2` (if you should experience issues, please upgrade to at least this version or higher)\n* Virtualbox\n\t* Tested with `6.0.0` (if you should experience issues, please upgrade to at least this version or higher)\n\t* `VBoxManage` binary in `PATH`.\n\n> **NOTE** `kubectl` is only needed when the `kubectl` auto configuration is enabled (default is enabled), to disable it set the variable `KUBECTL_AUTO_CONF` to `false`.\n> For more information, see the [Variables](#variables) section.\n\n## Hardware Requirements\n\n* Master\n    * CPU: 2 Cores\n    * Memory: 2GB\n* 1x Node:\n    * CPU: 2 Core\n    * Memory: 2GB\n\nThese resources can be changed by setting the according variables for the `make up` command, see [Variables section](#variables),\n\n## Quickstart\n\nTo start with the defaults, 1x master and 2x workers, run the following:\n```\n$ make up -j 3\n```\nThe `-j3` will cause three VMs to be started in parallel to speed up the cluster creation.\n> **NOTE** Your `kubectl` is automatically configured to use a context for the\n> created cluster, after the master VM is started.\n> The context is named after the directory the `Makefile` is in.\n\n```\n$ kubectl config current-context\nk8s-vagrant-multi-node\n$ kubectl get componentstatus\nNAME                 STATUS    MESSAGE              ERROR\nscheduler            Healthy   ok\ncontroller-manager   Healthy   ok\netcd-0               Healthy   {"health": "true"}\n$ kubectl get nodes\nNAME      STATUS    ROLES     AGE       VERSION\nmaster    Ready     master    4m        v1.10.4\nnode1     Ready     <none>    4m        v1.10.4\nnode2     Ready     <none>    4m        v1.10.4\n```\n\n## Different OS / Vagrantfiles\n\nThere are multiple sets of Vagrantfiles available (see [`vagrantfiles/`](/vagrantfiles/)) which can be used to use a different OS for the Kubernetes environment.\n\nList of currently available Vagrantfile sets:\n\n| Name     | Container Runtime                           | OS Version   | Special Notes                                                                                                                           |\n| -------- | ------------------------------------------- | ------------ | --------------------------------------------------------------------------------------------------------------------------------------- |\n| `centos` | [Docker/Moby](https://github.com/moby/moby) | CentOS 7     | N/A                                                                                                                                     |\n| `fedora` | [Docker/Moby](https://github.com/moby/moby) | Fedora 29    | N/A                                                                                                                                     |\n| `ubuntu` | [Docker/Moby](https://github.com/moby/moby) | Ubuntu 18.04 | `canal` is used here due to issues with Ubuntu. Google DNS Servers are used due to resolution issues with the ubuntu Vagrant Box image. |\n\nTo use a different set than the default `fedora` one\'s, add `BOX_OS=__NAME__` (where `__NAME__` is, e.g., `fedora`).\n\n## Usage\n\n### Starting the environment\n\nTo start up the Vagrant Kubernetes multi node environment with the default of two worker nodes + a master (not parallel) run:\n```\n$ make up\n```\n> **NOTE** Your `kubectl` is automatically configured to use a context for the\n> created cluster, after the master VM is started.\n> The context is named after the directory the `Makefile` is in.\n\n### Faster (parallel) environment start\n\nTo start up 4 VMs in parallel run (`-j` flag does not control how many (worker) VMs are started, the `NODE_COUNT` variable is used for that):\n```\n$ NODE_COUNT=3 make up -j4\n```\nThe flag `-j CORES/THREADS` allows yout to set how many VMs (Makefile targets) will be run at the same time.\nYou can also use `-j $(nproc)` to start as many VMs as cores/threads you have in your machine.\nSo to start up all VMs (master and three nodes) in parallel, you would add one to the chosen `NODE_COUNT`.\n\n### Show status of VMs\n\n```\n$ make status\nmaster                    not created (virtualbox)\nnode1                     not created (virtualbox)\nnode2                     not created (virtualbox)\n```\n\n### Shutting down the environment\n\nTo destroy the Vagrant environment run:\n```\n$ make clean\n$ make clean-data\n```\n\n### Copy local Docker image into VMs\n\nThe `make load-image` target can be used to copy a docker image from your local docker daemon to all the VMs in your cluster.\nThe `IMG` variable can be expressed in a few ways, for example:\n```\n$ make load-image IMG=your_name/your_image_name:your_tag\n$ make load-image IMG=your_name/your_image_name\n$ make load-image IMG=my-private-registry.com/your_name/your_image_name:your_tag\n```\n\nYou can also specify a new image name and tag to use after the image has been copied to the VM\'s by setting the `TAG` variable.\nThis will not change the image/tag in your local docker daemon, it will only affect the image in the VM\'s.\n```\n$ make load-image IMG=repo/image:tag TAG=new_repo/new_image:new_tag\n```\n\n### Data inside VM\n\nSee the `data/VM_NAME/` directories, where `VM_NAME` is for example `master`.\n\n### Show `make` targets\n\n```\n$ make help\nclean                          Destroy master and node VMs, and delete data.\nclean-data                     Remove data (shared folders) and disks of all VMs (master and nodes).\nclean-master                   Remove the master VM.\nclean-node-%                   Remove a node VM, where `%` is the number of the node.\nclean-nodes                    Remove all node VMs.\nhelp                           Show this help menu.\nkubectl                        Configure kubeconfig context for the cluster using `kubectl config` (automatically done by `up` target).\nload-image                     Load local/pulled Docker image into master and all node VMs.\nload-image-master              Load local/pulled image into master VM.\nload-image-node-%              Load local/pulled image into node VM, where `%` is the number of the node.\nload-image-nodes               Load local/pulled Docker image into all node VMs.\npreflight                      Run checks and gather variables, used for the the `up` target.\nssh-master                     SSH into the master VM.\nssh-node-%                     SSH into a node VM, where `%` is the number of the node.\nstart-master                   Start up master VM (automatically done by `up` target).\nstart-nodes                    Create and start all node VMs by utilizing the `node-X` target (automatically done by `up` target).\nstart-node-%                   Start node VM, where `%` is the number of the node.\nstatus-master                  Show status of the master VM.\nstatus-node-%                  Show status of a node VM, where `%` is the number of the node.\nstatus-nodes                   Show status of all node VMs.\nstatus                         Show status of master and all node VMs.\nstop-master                    Stop/Halt the master VM.\nstop-nodes                     Stop/Halt all node VMs.\nstop-node-%                    Stop/Halt a node VM, where `%` is the number of the node.\nstop                           Stop/Halt master and all nodes VMs.\ntoken                          Generate a kubeadm join token, if needed (token file is `DIRECTORY_OF_MAKEFILE/.vagrant/KUBETOKEN`).\nup                             Start Kubernetes Vagrant multi-node cluster. Creates, starts and bootsup the master and node VMs.\nversions                       Print the "imporant" tools versions out for easier debugging.\n```\n\n## Variables\n\n| Variable Name                   | Default Value            | Description                                                                                                                                                                                                                            |\n| ------------------------------- | ------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `BOX_OS`                        | `fedora`                 | Which set of Vagrantfiles to use to start the VMs.                                                                                                                                                                                     |\n| `BOX_IMAGE`                     | ``                       | Set the VM box image to use (only for override purposes).                                                                                                                                                                              |\n| `DISK_COUNT`                    | `1`                      | Set how many additional disks will be added to the VMs.                                                                                                                                                                                |\n| `DISK_SIZE_GB`                  | `25` GB                  | Size of additional disks added to the VMs.                                                                                                                                                                                             |\n| `MASTER_CPUS`                   | `2` Core                 | Amount of cores to use for the master VM.                                                                                                                                                                                              |\n| `MASTER_MEMORY_SIZE_GB`         | `2` GB                   | Size of memory (in GB) to be allocated for the master VM.                                                                                                                                                                              |\n| `NODE_CPUS`                     | `2`                      | Amount of cores to use for each node VM.                                                                                                                                                                                               |\n| `NODE_MEMORY_SIZE_GB`           | `2` GB                   | Size of memory (in GB) to be allocated for each node VM.                                                                                                                                                                               |\n| `NODE_COUNT`                    | `2`                      | How many worker nodes should be spawned.                                                                                                                                                                                               |\n| `MASTER_IP`                     | `192.168.26.10`          | The Kubernetes master node IP.                                                                                                                                                                                                         |\n| `NODE_IP_NW`                    | `192.168.26.`            | The first three parts of the IPs used for the nodes.                                                                                                                                                                                   |\n| `POD_NW_CIDR`                   | `10.244.0.0/16`          | The Pod (container) network CIDR used for the CNI.                                                                                                                                                                                     |\n| `K8S_DASHBOARD`                 | `false`                  | Install the Kubernetes dashboard addon.                                                                                                                                                                                                |\n| `K8S_DASHBOARD_VERSION`         | `v1.10.1`                | The Kubernetes dashboard addon version. Note it is recommended to at least version `1.10.1`.                                                                                                                                           |\n| `CLUSTER_NAME`                  | `k8s-vagrant-multi-node` | The name of the directory the Makefile is in. **This is not the Kubernetes cluster name**, due to `kubeadm init` limitations.                                                                                                          |\n| `KUBETOKEN`                     | `""` (empty)             | The `kubeadm` "join" token to use. Will be generated automatically using `/dev/urandom/` when empty.                                                                                                                                   |\n| `KUBEADM_INIT_FLAGS`            | `""` (empty)             | The `kubeadm init` flags to use. (When `KUBERNETES_VERSION` is set and `KUBEADM_INIT_FLAGS` is empty, `KUBEADM_INIT_FLAGS` will automatically be set to `--kubernetes-version=$KUBERNETES_VERSION`).                                   |\n| `KUBEADM_JOIN_FLAGS`            | `""` (empty)             | The `kubeadm join` flags to use.                                                                                                                                                                                                       |\n| `KUBERNETES_VERSION`            | `""` (empty)             | The `kubeadm` and `kubelet` package and API server version to install. Must be a fully qualified version string, e.g., `1.15.3` and not just `1.15`.                                                                                 |\n| `KUBERNETES_PKG_VERSION_SUFFIX` | `""` (empty)             | String which will be appended to the `kubeadm` and `kubelet` package versions when installed (only used for `vagrantfiles/ubuntu`).                                                                                                    |\n| `KUBE_PROXY_IPVS`               | `false`                  | Enable IPVS kernel modules to then use IPVS for the kube-proxy.                                                                                                                                                                        |\n| `KUBE_NETWORK`                  | `flannel`                | What CNI to install, if empty don\'t install any CNI. `flannel`, `canal` and `calico` are supported options. Ubuntu CNI is forced to use `canal` and can\'t be changed (see [Different OS / Vagrantfiles](#different-os--vagrantfiles)). |\n| `KUBECTL_AUTO_CONF`             | `true`                   | If `kubectl` should be  automatically configured to be able to talk with the cluster (if disabled, removes need for `kubectl` binary).                                                                                                 |\n\n## Demo\n\nPlease note that these terminal recordings are currently outdated.\n\n### Start Cluster\n\n[![asciicast](https://asciinema.org/a/186375.png)](https://asciinema.org/a/186375)\n\n### Destroy Cluster\n\n[![asciicast](https://asciinema.org/a/186376.png)](https://asciinema.org/a/186376)\n\n## Creating an Issue\nPlease attach the `make versions` output to the issue as is shown in the issue template. This makes debugging easier.\n'