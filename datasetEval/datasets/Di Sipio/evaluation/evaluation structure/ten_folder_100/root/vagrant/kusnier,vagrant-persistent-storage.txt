b'# Vagrant::Persistent-Storage\n\nA Vagrant plugin that creates a persistent storage and attaches it to guest machine.\n\nRequires Virtualbox 5\n\n## Installation\n\n    $ vagrant plugin install vagrant-persistent-storage\n\n## Usage\n\nAfter installing you can set the location and size of the persistent storage.\n\nThe following options will create a persistent storage with 5000 MB, named mysql,\nmounted on /var/lib/mysql, in a volume group called \'myvolgroup\'\n```ruby\nconfig.persistent_storage.enabled = true\nconfig.persistent_storage.location = "~/development/sourcehdd.vdi"\nconfig.persistent_storage.size = 5000\nconfig.persistent_storage.mountname = \'mysql\'\nconfig.persistent_storage.filesystem = \'ext4\'\nconfig.persistent_storage.mountpoint = \'/var/lib/mysql\'\nconfig.persistent_storage.volgroupname = \'myvolgroup\'\n```\n\nWith `config.persistent_storage.mountoptions` you can change the mount options (default: defaults).  \nAn example which sets `prjquota` option with xfs.\n```ruby\nconfig.persistent_storage.mountname    = \'xfs\'\nconfig.persistent_storage.filesystem   = \'xfs\'\nconfig.persistent_storage.mountpoint   = \'/mnt/xfs\'\nconfig.persistent_storage.mountoptions = [\'defaults\', \'prjquota\']\n```\n\nDevice defaults to `/dev/sdb`. For boxes with multiple disks, make sure you increment the drive:\n```ruby\nconfig.persistent_storage.diskdevice = \'/dev/sdc\'\n```\n\nIf you are using LVM and you would prefer to use the disk rather than a partition, you can set the following configuration:\n```ruby\nconfig.persistent_storage.partition = false\n```\n\nWhen you expect a lot of writes in the disk (the case for `/home` mountpoints) it is recommended to change the disk variant to `Fixed` (fixed allocation) instead of the default `Standard` (dyanamic allocation). The tested types are `Standard` (default) and `Fixed`.\n```ruby\nconfig.persistent_storage.variant    = \'Fixed\'\n```\n\nEvery `vagrant up` will attach this file as hard disk to the guest machine.\nA `vagrant destroy` will detach the storage to avoid deletion of the storage by vagrant.\nA `vagrant destroy` generally destroys all attached drives. See [VBoxManage unregistervm --delete option][vboxmanage_delete].\n\nThe disk is initialized and added to it\'s own volume group as specfied in the config; \nthis defaults to \'vagrant\'. An ext4 filesystem is created and the disk mounted appropriately,\nwith entries added to fstab ... subsequent runs will mount this disk with the options specified.\n\n## Windows Guests\n\nWindows Guests must use the WinRM communicator by setting `vm.communicator = \'winrm\'`.  An additional option is provided to \nallow you to set the drive letter using:\n\n```ruby\nconfig.persistent_storage.drive_letter = \'Z\'\n```\n\nOptions that are irrelevent to Windows are ignored, such as `mountname`, `filesystem`, `mountpoint` and `volgroupname`.\n\n## How Is The Storage Created?\n\nBased on the configuration provided, during a `vagrant up` a bash script is generated and uploaded to `$tmpdir/disk_operations_#{mnt_name}.sh` (Linux) or `disk_operations_#{mnt_name}.ps1` (Windows).  If the box has not been previously provisioned the script is executed on a `vagrant up`.  To force the script to be executed again you can run `vagrant provision` or if you have halted the box, `vagrant up --provision`.\n\nThe outcome of the script being run is placed in the home drive of the vagrant user in a file called `disk_operation_log.txt`.\n\n## Optional settings\n\n```ruby\nconfig.persistent_storage.part_type_code = \'82\'\n```\n\n## Troubleshooting\n\nIf your box is not using LVM you must set `config.persistent_storage.use_lvm = false`.\n\n## Supported Providers\n\n* Only the VirtualBox provider is supported.\n\n## Contributors\n\n* [madAndroid](https://github.com/madAndroid)\n* [Jeremiah Snapp](https://github.com/jeremiahsnapp)\n* [Hiroya Ito](https://github.com/hiboma)\n* [joshuata](https://github.com/joshuata)\n* [Ciprian Zaharie](https://github.com/bucatzel)\n* [aishahalim](https://github.com/aishahalim)\n* [Dick Tang](https://github.com/dictcp)\n* [dsmaher](https://github.com/dsmaher)\n* [Marsup](https://github.com/Marsup)\n* [k2s](https://github.com/k2s)\n* [vvavrychuk](https://github.com/vvavrychuk)\n* [Lars Hupfeldt Nielsen](https://github.com/lhupfeldt)\n* [Chen Yu Pao](https://github.com/windperson)\n* [Kris Reese](https://github.com/ktreese)\n* [Henry N.](https://github.com/HenryNe)\n* [fredleger](https://github.com/fredleger)\n* [Sebastian Wendel](https://github.com/sourceindex)\n* [Ben Phegan](https://github.com/BenPhegan)\n* [Philipp Schrader](https://github.com/philsc)\n* [Alex Tomkins](https://github.com/tomkins)\n* [Marcin Wolny](https://github.com/mwolny)\n* [Adam Huffman](https://github.com/verdurin)\n* [caio2k](https://github.com/caio2k)\n* [Francesco](https://github.com/cisco87)\n\n## TODO\n\n* There\'s Always Something to Do\n* Add more options (controller, port, etc.)\n\n\n[vboxmanage_delete]: http://www.virtualbox.org/manual/ch08.html#vboxmanage-registervm "VBoxManage registervm / unregistervm"\n'