b'# Vagrant Provisioner: Docker Compose\n\n[![CircleCI](https://img.shields.io/circleci/build/github/leighmcculloch/vagrant-docker-compose?style=for-the-badge)](https://circleci.com/gh/leighmcculloch/vagrant-docker-compose/tree/master)\n\nA Vagrant provisioner for [Docker Compose](https://docs.docker.com/compose/). Installs Docker Compose and can also bring up the containers defined by a [docker-compose.yml](https://docs.docker.com/compose/yml/).\n\n## Install\n\n```bash\nvagrant plugin install vagrant-docker-compose\n```\n\n## Usage\n\n### To install docker and docker-compose\n\n```ruby\nVagrant.configure("2") do |config|\n  config.vm.box = "ubuntu/bionic64"\n\n  config.vm.provision :docker\n  config.vm.provision :docker_compose\nend\n```\n\n### To install and run docker-compose on `vagrant up`\n\n```ruby\nVagrant.configure("2") do |config|\n  config.vm.box = "ubuntu/bionic64"\n\n  config.vm.provision :docker\n  config.vm.provision :docker_compose, yml: "/vagrant/docker-compose.yml", run: "always"\nend\n```\n\nEquivalent to running:\n\n```bash\ndocker-compose -f [yml] up -d\n```\n\n### To install and run docker-compose, with multiple files, on `vagrant up`\n\n```ruby\nVagrant.configure("2") do |config|\n  config.vm.box = "ubuntu/bionic64"\n\n  config.vm.provision :docker\n  config.vm.provision :docker_compose,\n    yml: [\n      "/vagrant/docker-compose-base.yml",\n      "/vagrant/docker-compose.yml",\n      ...\n    ],\n    run: "always"\nend\n```\n\nEquivalent to running:\n\n```bash\ndocker-compose -f [yml-0] -f [yml-1] ... up -d\n```\n\n### To install, rebuild and run docker-compose on `vagrant up`\n\n```ruby\nVagrant.configure("2") do |config|\n  config.vm.box = "ubuntu/bionic64"\n\n  config.vm.provision :docker\n  config.vm.provision :docker_compose, yml: "/vagrant/docker-compose.yml", rebuild: true, run: "always"\nend\n```\n\nEquivalent to running:\n\n```bash\ndocker-compose -f [yml] rm --force\ndocker-compose -f [yml] build\ndocker-compose -f [yml] up -d\n```\n\n### To install, rebuild and run docker-compose with options on `vagrant up`\n\n```ruby\nVagrant.configure("2") do |config|\n  config.vm.box = "ubuntu/bionic64"\n\n  config.vm.provision :docker\n  config.vm.provision :docker_compose, yml: "/vagrant/docker-compose.yml", rebuild: true,\n    options: "--x-networking", command_options: { rm: "", up: "-d --timeout 20"}, run: "always"\nend\n```\n\nEquivalent to running:\n\n```bash\ndocker-compose --x-networking -f [yml] rm\ndocker-compose --x-networking -f [yml] build\ndocker-compose --x-networking -f [yml] up -d --timeout 20\n```\n\n\n### Other configs\n\n* `yml` \xe2\x80\x93 one or more [Compose files](https://docs.docker.com/compose/compose-file/) (YAML), may be a `String` for a single file, or `Array` for multiple.\n* `compose_version` \xe2\x80\x93 defaults to `1.24.1`.\n* `project_name` \xe2\x80\x93 compose will default to naming the project `vagrant`.\n* `env` \xe2\x80\x93 a `Hash` of environment variables to value that are passed to the `docker-compose` commands, defaults to an empty `Hash`.\n* `executable_symlink_path` \xe2\x80\x93 the location the executable will be symlinked to, defaults to `/usr/local/bin/docker-compose`.\n* `executable_install_path` \xe2\x80\x93 the location the executable will be stored, defaults to `<executable_symlink_path>-<compose_version>`, i.e. `/usr/local/bin/docker-compose-1.5.0`.\n* `options` - a `String` that\'s included as the first arguments when calling the docker-compose executable, you can use this to pass arbitrary options/flags to docker-compose, default to `nil`.\n* `command_options` - a `Hash` of docker-compose commands to options, you can use this to pass arbitrary options/flags to the docker-compose commands, defaults to: `{ rm: "--force", up: "-d" }`.\n\n## Example\n\nSee `example` in the repository for a full working example.\n'