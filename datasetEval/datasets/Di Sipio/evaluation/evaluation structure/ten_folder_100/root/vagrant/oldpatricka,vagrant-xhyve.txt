b'# Vagrant xhyve Provider\n\n[![Gem Version](https://badge.fury.io/rb/vagrant-xhyve.svg)](https://badge.fury.io/rb/vagrant-xhyve)\n\nThis is a [Vagrant](http://www.vagrantup.com) plugin that adds an [xhyve](http://xhyve.org)\nprovider to Vagrant.\n\n## Features\n\n* Basic features work\n* Can work with Hyperkit fork of Xhyve\n* qcow image support\n\n## Limitations\n\nYou need to use sudo for most vagrant actions with the xhyve driver,\ndue to the entitlements needed for xhyve to run without sudo. More details\nin the [xhyve github issue](https://github.com/mist64/xhyve/issues/60).\n\n## Usage\n\nInstall using standard Vagrant plugin installation methods. After\ninstalling, `vagrant up` and specify the `xhyve` provider. An example is\nshown below.\n\n```\n$ vagrant plugin install vagrant-xhyve\n...\n$ sudo vagrant up --provider=xhyve\n...\n```\n\nOf course prior to doing this, you\'ll need to obtain an xhyve-compatible\nbox file for Vagrant.\n\n## Quick Start\n\nAfter installing the plugin (instructions above), you can try an xhyve ubuntu\nlinux example. This is similar to the example from the xhyve intro blog post.\n\n```\n$ mkdir xhyve-vagrant\n$ cd xhyve-vagrant\n$ vagrant init oldpatricka/ubuntu-14.04\n$ sudo vagrant up --provider xhyve\n...\n```\n\nThis will start an Ubuntu Linux instance. you can log in with:\n\n```\n$ sudo vagrant ssh\n```\n\n## Box Format\n\nThe vagrant-xhyve box format is pretty straightforward. See\nthe [example_box/ directory](https://github.com/oldpatricka/vagrant-xhyve/tree/master/example_box).\nThat directory also contains instructions on how to build a box.\n\n## Configuration\n\nThis provider exposes quite a few provider-specific configuration options:\n\n* `memory` - The amount of memory to give the VM. This can just be a simple\n  integer for memory in MB or you can use the suffixed style, eg. 2G for two\n  Gigabytes\n* `cpus` - The number of CPUs to give the VM\n* `xhyve_binary` - use a custom xhyve version\n* kernel_command - send a custom kernel boot command\n\nThese can be set like typical provider-specific configuration:\n\n```ruby\nVagrant.configure("2") do |config|\n  # ... other stuff\n\n  config.vm.provider :xhyve do |xhyve|\n    xhyve.cpus = 2\n    xhyve.memory = "1G"\n    xhyve.xhyve_binary = "/Applications/Docker.app/Contents/MacOS/com.docker.hyperkit"\n    xhyve.kernel_command = "root=/dev/mapper/centos-root ro crashkernel=auto rd.lvm.lv=centos/root rd.lvm.lv=centos/swap acpi=off console=ttyS0 LANG=en_GB.UTF-8" # example for a CentOS installed in a LVM filesystem\n  end\nend\n```\n## Synced Folders\n\nThere is minimal support for synced folders. Upon `vagrant up`,\n`vagrant reload`, and `vagrant provision`, the XHYVE provider will use\n`rsync` (if available) to uni-directionally sync the folder to\nthe remote machine over SSH.\n\n## Using Docker\'s HyperKit Fork of Xhyve\n\nDocker has a very nice port of Xhyve called [HyperKit](https://github.com/docker/hyperkit). It has some interesting features like better stability and qcow support (which this provider can\'t use yet).\n\nIf you want to try it out, either install hyperkit directly, or you can use the version bundled with [Docker for Mac](https://docs.docker.com/engine/installation/mac/). The path to the binary is `/Applications/Docker.app/Contents/MacOS/com.docker.hyperkit`. See the configuration section above for how to use this with the `xhyve_binary` option.\n\n## Questions\n\nQ. Should I use this for my work?\n\nA. Do you want to keep your job? I\'m not even sure you should use this for toy\nprojects.\n\nQ. Why?\n\nA. This project is powered by ignorance and good intentions.\n\nQ. Will I ever not have to use sudo or setuid root?\n\nA. There\'s a theory in that issue linked above that wrapping xhyve in an\napp store app would help. If that were the case, you could probably use the\nembedded binary with vagrant-xhyve. Another option is to use setuid root.\n\nQ. This sucks.\n\nA. That\'s not a question, but why don\'t you try out [another implementation](https://github.com/sirn/vagrant-xhyve). Looks pretty nice.\n\n## Acknowledgements\n\nThis plugin was heavilly cribbed from the vagrant-aws and vagrant-virtualbox\nproviders. So thanks for those.\n\nThis also uses the nice [xhyve-ruby](https://github.com/dalehamel/xhyve-ruby)\ngem, by Dale Hamel.\n\n## Development\n\nTo work on the `vagrant-xhyve` plugin, clone this repository out, and use\n[Bundler](http://gembundler.com) to get the dependencies:\n\n```\n$ bundle\n```\n\nOnce you have the dependencies, verify the unit tests pass with `rake`:\n\n```\n$ bundle exec rake\n```\n\nIf those pass, you\'re ready to start developing the plugin. You can test\nthe plugin without installing it into your Vagrant environment by just\ncreating a `Vagrantfile` in the top level of this directory (it is gitignored)\nand add the following line to your `Vagrantfile`\n```ruby\nVagrant.require_plugin "vagrant-xhyve"\n```\nUse bundler to execute Vagrant:\n```\n$ bundle exec vagrant up --provider=xhyve\n```\n\n## Contributors\n\n* Patrick Armstrong\n* Nuno Passaro\n* Guy Pascarella\n'