b'<!-- vim: set tw=120: -->\n\n![](Images/README/FermataIcon.png)\n\n# Background Music\n##### macOS audio utility\n\n<img src="Images/README/Screenshot.png" width="340" height="342" />\n\n[Overview](#overview)<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Auto-pause music](#auto-pause-music)<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Application volume](#application-volume)<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Recording system audio](#recording-system-audio)<br/> \n[Download](#download)<br/> \n[Build and Install](#build-and-install)</br>\n[Uninstall](#uninstall)<br/>\n[Troubleshooting](#troubleshooting)<br/> \n[Related Projects](#related-projects)<br/> \n[License](#license)<br/>  \n\n# Overview\n\n+ Automatically pause/unpause your music player when other audio sources are playing/stopped\n+ Per-application volume control\n+ Record system audio\n+ No restart required to install\n\n##### *Note: Background Music is still in alpha.*\n\n## Auto-pause music\n\n**Background Music** automatically pauses your music player when a second audio source is playing, and unpauses the player when the second source has stopped. \n\nThe auto-pause feature currently supports following music players:\n\n+ iTunes\n+ [Spotify](https://www.spotify.com)\n+ [VLC](https://www.videolan.org/vlc/)\n+ [VOX](https://vox.rocks/mac-music-player)\n+ [Decibel](https://sbooth.org/Decibel/)\n+ [Hermes](http://hermesapp.org/)\n+ [Swinsian](https://swinsian.com/)\n+ [GPMDP](https://www.googleplaymusicdesktopplayer.com/) \n\nAdding support for a new music player is usually straight-forward.<sup id="a1">[1](#f1)</sup> If you don\'t know how to program, or just don\'t feel\nlike it, feel free to [create an issue](https://github.com/kyleneideck/BackgroundMusic/issues/new). Otherwise, see\n[BGMMusicPlayer.h](BGMApp/BGMApp/Music%20Players/BGMMusicPlayer.h). \n\n## Application volume\n\n**Background Music** provides a volume slider for each application running your system. You can boost quiet applications above their maximum volume.\n\n## Recording system audio\n\nYou can record system audio with **Background Music**. With **Background Music** running, launch **QuickTime Player** and select **File > New Audio Recording** (or **New Screen Recording**, **New Movie Recording**). Then click the dropdown menu (`\xe2\x8c\x84`) next to the record button and select **Background Music** as the input device.\n\nYou can record system audio and a microphone together by creating an [aggregate\ndevice](https://support.apple.com/en-us/HT202000) that combines your input device (usually Built-in Input) with\nthe **Background Music** device. You can create the aggregate device using the **Audio MIDI Setup** utility under\n***/Applications/Utilities***.\n\n# Download\n\n**Requires macOS 10.10+**.\n\nYou can download the current version of **Background Music** using the following options. We also have [snapshot builds](https://github.com/kyleneideck/BackgroundMusic/releases).\n\n### Option 1\n\nDownload **version 0.3.2**: \n\n<a href="https://github.com/kyleneideck/BackgroundMusic/releases/download/v0.3.2/BackgroundMusic-0.3.2.pkg"><img \nsrc="Images/README/pkg-icon.png" width="32" height="32" align="absmiddle" />\nBackgroundMusic-0.3.2.pkg</a> (571 KB)\n\n> <sub>MD5: 7f34d9e6595566f3ba14e7afc89c86a2</sub><br/>\n> <sub>SHA256: 0cd7b488b5ab97a1ecb496e484a6c209c29f35ab503e6f73b45e56719a7aba18</sub><br/>\n> <sub>PGP:\n> [sig](https://github.com/kyleneideck/BackgroundMusic/releases/download/v0.3.2/BackgroundMusic-0.3.2.pkg.asc),\n> [key (0595DF814E41A6F69334C5E2CAA8D9B8E39EC18C)](https://bearisdriving.com/kyle-neideck.gpg)</sub>\n\n### Option 2\n\nInstall using [Homebrew](https://brew.sh/) by running the following command in **Terminal**:\n\n```bash\nbrew cask install background-music\n```\n\nIf you want the snapshot version, run:\n\n```bash\nbrew tap homebrew/cask-versions\nbrew cask install background-music-pre\n```\n\n# Installing from Source\n\nIf you need the latest version of **Background Music**, you can download from the source on GitHub using the following options. Building should take less than a minute. You need [Xcode](https://developer.apple.com/xcode/download/) version \n8 or higher.\n\n### Option 1 \n\n1. Open **Terminal**.\n2. Copy and paste the following command into **Terminal**:\n\n```shell\n(set -eo pipefail; URL=\'https://github.com/kyleneideck/BackgroundMusic/archive/master.tar.gz\'; \\\n    cd $(mktemp -d); echo Downloading $URL to $(pwd); curl -qfL# $URL | gzcat - | tar x && \\\n    /bin/bash BackgroundMusic-master/build_and_install.sh -w && rm -rf BackgroundMusic-master)\n```\n\n<details><summary>More info...</summary>\n<p>\nThis command uses `/bin/bash` instead of `bash` in case someone has a nonstandard Bash in their `$PATH`. However, it doesn\'t do this for `tar` or `curl`. In addition, `build_and_install.sh` doesn\'t call programs by absolute paths. This command also uses `gzcat - | tar x` instead of `tar xz` because `gzcat` will also check the file\'s integrity (gzip files\ninclude a checksum), and will ensure that a half-downloaded copy of `build_and_install.sh` doesn\'t run.\n</p>\n</details>\n\n### Option 2\n\n1. Clone or [download](https://github.com/kyleneideck/BackgroundMusic/archive/master.zip) the project.\n2. If the project is in a zip, unzip it.\n3. Open **Terminal** and [change the directory](https://github.com/0nn0/terminal-mac-cheatsheet#core-commands) to the\n  directory containing the project.\n4. Run: `/bin/bash build_and_install.sh`.\n\nThe script restarts the system audio process (coreaudiod) at the end of the installation, so you need to pause any\napplications playing audio.\n\nTo manually build and install, see [MANUAL_INSTALL.md](https://github.com/kyleneideck/BackgroundMusic/blob/master/MANUAL-INSTALL.md).\n\n# Uninstall\n\nTo uninstall **Background Music** from your system, follow these steps:\n\n1. Open **Terminal**.\n2. To locate `uninstall.sh`, run: `cd /Applications/Background\\ Music.app/Contents/Resources/`.\n3. Run: `bash uninstall.sh`.\n\nIf you cannot locate `uninstall.sh`, you can [download the project](https://github.com/kyleneideck/BackgroundMusic/archive/master.zip) again.\n\nTo manually uninstall, see [MANUAL_UNINSTALL.md](https://github.com/kyleneideck/BackgroundMusic/blob/master/MANUAL-UNINSTALL.md).\n\n# Troubleshooting\n\nIf **Background Music** crashes and your audio stops working, open **System Preferences > Sound** and change your\nsystem\'s default output device to something other than the **Background Music** device. If it already is, then\nchange the default device and then change it back again.\n\nIf this does not work, you might have to uninstall. Consider filing a bug report if you do.\n\n## Known issues and solutions\n\n- **Setting an application\'s volume above 50% can cause [clipping](https://en.wikipedia.org/wiki/Clipping_(audio)).**\n\n    - Set your volume to its maximum level and lower the volumes of other applications.\n\n- **VLC pauses iTunes or Spotify when playing, and stops Background Music from unpausing your music afterwards.** \n\n    - Under VLC\'s preferences, select **Show All**. Navigate to **Interface > Main interfaces > macosx** and change *Control external music players* to either *Do nothing* or *Pause and resume iTunes/Spotify*. \n\n- **Skype pauses iTunes during calls.** \n\n    - To disable this, uncheck *Pause iTunes during calls* on the **General** tab of **Skype**\'s preferences.\n\n- **Plugging in or unplugging headphones when Background Music isn\'t running causes silence in the system audio.** \n    - Navigate to **System Preferences > Sound**. Click the **Output** tab and change your default output device to something other than the **Background Music** device. Alternatively, press **Option + Click** on the sound icon within the menu bar to select a different output device. This happens when macOS remembers that the **Background Music** device was your default audio device the last time you used (or didn\'t use) headphones.\n\n- **[A Chrome bug](https://bugs.chromium.org/p/chromium/issues/detail?id=557620) stops Chrome from switching to the Background Music device after you open Background Music.**\n    - Chrome\'s audio will still play, but **Background Music** won\'t be aware of it.\n\n- **Some applications play notification sounds that are only just long enough to trigger an auto-pause.**\n    - Increase the `kPauseDelayNSec` constant in [BGMAutoPauseMusic.mm](/BGMApp/BGMApp/BGMAutoPauseMusic.mm). It will increase your music\'s overlap time over other audio, so don\'t increase it too much. See [#5](https://github.com/kyleneideck/BackgroundMusic/issues/5) for details.\n\n### Other issues \nSome are in listed in [TODO.md](/TODO.md).\n\n# Related projects\n\n- [Core Audio User-Space Driver\n  Examples](https://developer.apple.com/library/mac/samplecode/AudioDriverExamples/Introduction/Intro.html)\n  The sample code from Apple that BGMDriver is based on.\n- [Soundflower](https://github.com/mattingalls/Soundflower) - "MacOS system extension that allows applications to pass\n  audio to other applications."\n- [WavTap](https://github.com/pje/WavTap) - "globally capture whatever your mac is playing\xe2\x80\x94-as simply as a screenshot"\n- [eqMac](http://www.bitgapp.com/eqmac/), [GitHub](https://github.com/nodeful/eqMac2) - "System-wide Audio Equalizer for the Mac"\n- [llaudio](https://github.com/mountainstorm/llaudio) - "An old piece of work to reverse engineer the Mac OSX\n  user/kernel audio interface. Shows how to read audio straight out of the kernel as you would on Darwin (where most the\n  OSX goodness is missing)"\n- [mute.fm](http://www.mute.fm), [GitHub](https://github.com/jaredsohn/mutefm) (Windows) - Auto-pause music\n- [Jack OS X](http://www.jackosx.com) - "A Jack audio connection kit implementation for Mac OS X"\n- [PulseAudio OS X](https://github.com/zonque/PulseAudioOSX) - "PulseAudio for Mac OS X"\n- [Sound Pusher](https://github.com/q-p/SoundPusher) - "Virtual audio device, real-time encoder and SPDIF forwarder for\n  Mac OS X"\n- [Zirkonium](https://code.google.com/archive/p/zirkonium) - "An infrastructure and application for multi-channel sound\n  spatialization on MacOS X."\n\n### Non-free\n\n- [Audio Hijack](https://rogueamoeba.com/audiohijack/) - "Capture Audio From Anywhere on Your Mac"\n- [Sound Siphon](https://staticz.com/soundsiphon/), [Sound Control](https://staticz.com/soundcontrol/) - System/app audio recording, per-app volumes, system audio equaliser\n- [SoundBunny](https://www.prosofteng.com/soundbunny-mac-volume-control/) - "Control application volume independently."\n- [Boom 2](http://www.globaldelight.com/boom/index.php) - "The Best Volume Booster & Equalizer For Mac"\n\n## License\n\nCopyright \xc2\xa9 2016-2019 [Background Music contributors](https://github.com/kyleneideck/BackgroundMusic/graphs/contributors).\nLicensed under [GPLv2](https://www.gnu.org/licenses/gpl-2.0.html), or any later version.\n\n**Background Music** includes code from:\n\n- [Core Audio User-Space Driver\n  Examples](https://developer.apple.com/library/mac/samplecode/AudioDriverExamples/Introduction/Intro.html), [original\n  license](LICENSE-Apple-Sample-Code), Copyright (C) 2013 Apple Inc. All Rights Reserved.\n- [Core Audio Utility\n  Classes](https://developer.apple.com/library/content/samplecode/CoreAudioUtilityClasses/Introduction/Intro.html),\n  [original license](LICENSE-Apple-Sample-Code), Copyright (C) 2014 Apple Inc. All Rights Reserved.\n\n----\n\n<b id="f1">[1]</b> However, if the music player doesn\'t support AppleScript, or doesn\'t support the events Background\nMusic needs (`isPlaying`, `isPaused`, `play` and `pause`), it can take significantly more effort to add. (And in some\ncases would require changes to the music player itself.) [\xe2\x86\xa9](#a1)\n\n\n'