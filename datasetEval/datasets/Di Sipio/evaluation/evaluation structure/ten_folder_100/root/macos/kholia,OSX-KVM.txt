b'### Note\n\nThis `README` documents the new method to install macOS. The older `README` is\navailable [here](README-OLD.md).\n\nThis new method does *not* require an existing physical/virtual macOS\ninstallation. However, this `new method` requires internet access during the\nmacOS installation process. This limitation may be addressed in a future\ncommit.\n\nNote: All blobs and resources included in this repository are re-derivable (all\ninstructions are included!).\n\nNote: Checkout [ideas.md](ideas.md). This project can always use your help,\ntime and attention.\n\n\n### Requirements\n\n* A modern Linux distribution. E.g. Ubuntu 18.04 LTS 64-bit.\n\n* QEMU > 2.11.1\n\n* A CPU with Intel VT-x / AMD SVM support is required\n\n* A CPU with SSE4.1 support is required for macOS Sierra\n\n* A CPU with AVX2 support is required for macOS Mojave\n\nNote: Older AMD CPU(s) are known to be problematic. AMD FX-8350 works but\nPhenom II X3 720 does not. Ryzen processors work just fine.\n\n\n### Installation Preparation\n\n* KVM may need the following tweak on the host machine to work.\n\n  ```\n  # echo 1 > /sys/module/kvm/parameters/ignore_msrs\n  ```\n\n  To make this change permanent, you may use the following command.\n\n  ```\n  $ sudo cp kvm.conf /etc/modprobe.d/kvm.conf\n  ```\n\n* Install QEMU and other packages.\n\n  ```\n  sudo apt-get install qemu uml-utilities virt-manager dmg2img git wget libguestfs-tools\n  ```\n\n  This step may need to be adapted for your Linux distribution.\n\n* Clone this repository on your QEMU system. Files from this repository are\n  used in the following steps.\n\n  ```\n  cd ~\n\n  git clone https://github.com/kholia/OSX-KVM.git\n\n  cd OSX-KVM\n  ```\n\n* Fetch macOS installer.\n\n  ```\n  ./fetch-macOS.py\n  ```\n\n  You can choose your desired macOS version here. After executing this step,\n  you should have the `BaseSystem.dmg` file in the current folder.\n\n  Sample run:\n\n  ```\n  $ ./fetch-macOS.py\n  #    ProductID    Version    Build   Post Date  Title\n  1    041-47723    10.14.4  18E2034  2019-03-25  macOS Mojave\n  2    091-95155    10.13.6    17G66  2019-01-08  macOS High Sierra\n  3    041-64745    10.14.5   18F203  2019-05-22  macOS Mojave\n  4    041-59913    10.14.5   18F132  2019-05-13  macOS Mojave\n  5    041-71284      10.15  19A471t  2019-06-03  macOS 10.15 Beta\n\n  Choose a product to download (1-5): 5\n  ```\n\n  Attention: Modern NVIDIA GPUs are supported on HighSierra but not on Mojave\n  (yet).\n\n  Next, convert this file into a usable format.\n\n  ```\n  dmg2img BaseSystem.dmg BaseSystem.img\n  ```\n\n  Note: You can also use the following command to do this conversion, if your\n  QEMU version is >= 4.0.0.\n\n  ```\n  qemu-img convert BaseSystem.dmg -O raw BaseSystem.img\n  ```\n\n* Create a virtual HDD image where macOS will be installed.  If you change the\n  name of the disk image from `mac_hdd.img` to something else, the boot scripts\n  will need updating to point to the new image name.\n\n  ```\n  qemu-img create -f qcow2 mac_hdd_ng.img 128G\n  ```\n\n* Setup quick networking by running the following commands.\n\n  ```\n  sudo ip tuntap add dev tap0 mode tap\n  sudo ip link set tap0 up promisc on\n  sudo ip link set dev virbr0 up\n  sudo ip link set dev tap0 master virbr0\n  ```\n\n  Note: If `virbr0` network interface is not present on your system, it may\n  have been deactivated. Try enabling it by using the following commands,\n\n  ```\n  virsh net-start default\n\n  virsh net-autostart default\n  ```\n\n* Now you are ready to install macOS \xf0\x9f\x9a\x80\n\n\n### Installation\n\n- CLI method (primary). Just run the `boot-macOS-NG.sh` script to start the\n  installation proces.\n\n  ```\n  ./boot-macOS-NG.sh\n  ```\n\n  If you are new to installing macOS, see the [older README](README-OLD.md) for\n  help.\n\n  For macOS Catalina, use `boot-macOS-Catalina.sh` script.\n\n- GUI method (alternate - functional but needs further debugging work).\n\n  - Edit `macOS-libvirt-NG.xml` file and change the various file paths (search\n    for `CHANGEME` strings in that file). The following command should do the\n    trick usually.\n\n    ```\n    sed -i "s/CHANGEME/$USER/g" macOS-libvirt-NG.xml\n    ```\n\n  - Create a VM by running the following command.\n\n    ```bash\n    virsh --connect qemu:///system define macOS-libvirt-NG.xml\n    ```\n\n  - Launch `virt-manager`, start the `macOS` virtual machine and install macOS\n    as usual.\n\n    Note: You may need to run `sudo ip link delete tap0` command before\n    `virt-manager` is able to start the `macOS` VM.\n\n    Note: You may need to remove the following block from `macOS-libvirt-NG.xml`\n    and run `virsh --connect ...` again. Alternate easier fix: Remove `SATA\n    Disk 3` from the macOS virtual machine in `virt-manager`.\n\n    ```\n    <disk type=\'file\' device=\'disk\'>\n    <driver name=\'qemu\' type=\'raw\' cache=\'writeback\'/>\n      <source file=\'/home/CHANGEME/OSX-KVM/BaseSystem.img\'/>\n      <target dev=\'sdc\' bus=\'sata\'/>\n      <boot order=\'3\'/>\n      <address type=\'drive\' controller=\'0\' bus=\'0\' target=\'0\' unit=\'2\'/>\n    </disk>\n    ```\n\n\n### Post-Installation\n\n* See [networking notes](networking-qemu-kvm-howto.txt) to setup guest networking.\n\n  I have the following commands present in `/etc/rc.local`.\n\n  ```\n  #!/bin/bash\n\n  sudo ip tuntap add dev tap0 mode tap\n  sudo ip link set tap0 up promisc on\n  sudo ip link set dev virbr0 up\n  sudo ip link set dev tap0 master virbr0\n  ```\n\n  This has been enough for me so far.\n\n* To get sound on your virtual Mac, see the "Virtual Sound Device" in [notes](notes.md).\n\n* To passthrough GPUs and other devices, see [these notes](UEFI/README.md).\n\n* Need a different resolution? Check out the [notes](notes.md) included in this\n  repository.\n\n\n### Is This Legal?\n\nThe "secret" Apple OSK string is widely available on the Internet. It is also included in a public court document [available here](http://www.rcfp.org/sites/default/files/docs/20120105_202426_apple_sealing.pdf). I am not a lawyer but it seems that Apple\'s attempt(s) to get the OSK string treated as a trade secret did not work out. Due to these reasons, the OSK string is freely included in this repository.\n\nGabriel Somlo also has [some thoughts](http://www.contrib.andrew.cmu.edu/~somlo/OSXKVM/#sec_4) on the legal aspects involved in running macOS under QEMU/KVM.\n\n\n### Motivation\n\nMy aim is to enable macOS based builds + testing, kernel debugging, reversing\nand security tasks in an easy, reproducible manner without needing to invest in\nApple\'s closed ecosystem (too heavily).\n\nBackstory: I was a (poor) student in Canada once and Apple made [my work on\ncracking Apple Keychains](https://github.com/magnumripper/JohnTheRipper/) a lot\nharder than it needed to be.\n\n\n### References\n\n* https://github.com/foxlet/macOS-Simple-KVM\n\n* http://www.contrib.andrew.cmu.edu/~somlo/OSXKVM/\n\n* https://www.kraxel.org/blog/2017/09/running-macos-as-guest-in-kvm/\n'