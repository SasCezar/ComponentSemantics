b'# Flappy Learning ([Demo](http://xviniette.github.io/FlappyLearning/))\n\nProgram that learns to play Flappy Bird by machine learning ([Neuroevolution](http://www.scholarpedia.org/article/Neuroevolution))\n\n![alt tag](https://github.com/xviniette/FlappyLearning/blob/gh-pages/img/flappy.png?raw=true)\n\n### [NeuroEvolution.js](http://github.com/xviniette/FlappyLearning/blob/gh-pages/Neuroevolution.js) : Utilization\n```javascript\n// Initialize\nvar ne = new Neuroevolution({options});\n\n//Default options values\nvar options = {\n    network:[1, [1], 1],    // Perceptron structure\n    population:50,          // Population by generation\n    elitism:0.2,            // Best networks kepts unchanged for the next generation (rate)\n    randomBehaviour:0.2,    // New random networks for the next generation (rate)\n    mutationRate:0.1,       // Mutation rate on the weights of synapses\n    mutationRange:0.5,      // Interval of the mutation changes on the synapse weight\n    historic:0,             // Latest generations saved\n    lowHistoric:false,      // Only save score (not the network)\n    scoreSort:-1,           // Sort order (-1 = desc, 1 = asc)\n    nbChild:1               // number of child by breeding\n}\n\n//Update options at any time\nne.set({options});\n\n// Generate first or next generation\nvar generation = ne.nextGeneration();\n\n//When an network is over -> save this score\nne.networkScore(generation[x], <score = 0>);\n```\n\nYou can see the NeuroEvolution integration in Flappy Bird in [Game.js](http://github.com/xviniette/FlappyLearning/blob/gh-pages/game.js).\n'