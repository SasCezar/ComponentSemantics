b'\n<div align="center">\n    <img src="doc/logo.jpg", width="400">\n</div>\n\n\n\n## AlphaPose\n[Alpha Pose](http://www.mvig.org/research/alphapose.html) is an accurate multi-person pose estimator, which is the **first real-time** open-source system that achieves **70+ mAP (72.3 mAP)** on COCO dataset and **80+ mAP (82.1 mAP)** on MPII dataset.** \nTo match poses that correspond to the same person across frames, we also provide an efficient online pose tracker called Pose Flow. It is the **first open-source online pose tracker that achieves both 60+ mAP (66.5 mAP) and 50+ MOTA (58.3 MOTA) on PoseTrack Challenge dataset.**\n\n\n## News!\n- Apr 2019: [**MXNet** version](https://github.com/MVIG-SJTU/AlphaPose/tree/mxnet) of AlphaPose is released! It runs at **23 fps** on COCO validation set using a single Nvidia 1080Ti GPU!\n- Feb 2019: [CrowdPose](https://github.com/MVIG-SJTU/AlphaPose/blob/pytorch/doc/CrowdPose.md) is integrated into AlphaPose Now!\n- Dec 2018: [General version](https://github.com/MVIG-SJTU/AlphaPose/tree/master/PoseFlow) of PoseFlow is released! 3X Faster and support pose tracking results visualization!\n- Sep 2018: [**PyTorch** version](https://github.com/MVIG-SJTU/AlphaPose/tree/pytorch) of AlphaPose is released! It runs at **20 fps** on COCO validation set (4.6 people per image on average) and achieves 71 mAP using a single Nvidia 1080Ti GPU!\n\n## Contents\n- [AlphaPose](#alphapose)\n- [News!](#news)\n- [Contents](#contents)\n- [Results](#results)\n  - [Pose Estimation](#pose-estimation)\n  - [Pose Tracking](#pose-tracking)\n  - [CrowdPose](#crowdpose)\n- [Installation](#installation)\n- [Quick Start](#quick-start)\n- [Output](#output)\n- [Speeding Up AlphaPose](#speeding-up-alphapose)\n- [Feedbacks](#feedbacks)\n- [Contributors](#contributors)\n- [Citation](#citation)\n- [License](#license)\n\n\n\n## Results\n### Pose Estimation\n<p align="center">\n    <img src="doc/pose.gif", width="360">\n</p>\n\nResults on COCO test-dev 2015:\n<center>\n\n| Method | AP @0.5:0.95 | AP @0.5 | AP @0.75 | AP medium | AP large |\n|:-------|:-----:|:-------:|:-------:|:-------:|:-------:|\n| OpenPose (CMU-Pose) | 61.8 | 84.9 | 67.5 | 57.1 | 68.2 |\n| Detectron (Mask R-CNN) | 67.0 | 88.0 | 73.1 | 62.2 | 75.6 |\n| **AlphaPose** | **72.3** | **89.2** | **79.1** | **69.0** | **78.6** |\n\n</center>\n\nResults on MPII full test set:\n<center>\n\n| Method | Head | Shoulder | Elbow | Wrist | Hip | Knee | Ankle | Ave |\n|:-------|:-----:|:-------:|:-------:|:-------:|:-------:|:-------:|:-------:|:-------:|\n| OpenPose (CMU-Pose) | 91.2 | 87.6 | 77.7 | 66.8 | 75.4 | 68.9 | 61.7 | 75.6 |\n| Newell & Deng | **92.1** | 89.3 | 78.9 | 69.8 | 76.2 | 71.6 | 64.7 | 77.5 |\n| **AlphaPose** | 91.3 | **90.5** | **84.0** | **76.4** | **80.3** | **79.9** | **72.4** | **82.1** |\n\n</center>\n\n### Pose Tracking\n<p align=\'center\'>\n    <img src="doc/posetrack.gif", width="360">\n    <img src="doc/posetrack2.gif", width="344">\n</p>\n\nResults on PoseTrack Challenge validation set:\n\n1. Task2: Multi-Person Pose Estimation (mAP)\n<center>\n\n| Method | Head mAP | Shoulder mAP | Elbow mAP | Wrist mAP | Hip mAP | Knee mAP | Ankle mAP | Total mAP |\n|:-------|:-----:|:-------:|:-------:|:-------:|:-------:|:-------:|:-------:|:-------:|\n| Detect-and-Track(FAIR) | **67.5** | 70.2 | 62 | 51.7 | 60.7 | 58.7 | 49.8 | 60.6 |\n| **AlphaPose** | 66.7 | **73.3** | **68.3** | **61.1** | **67.5** | **67.0** | **61.3** | **66.5** |\n\n</center>\n\n2. Task3: Pose Tracking (MOTA)\n<center>\n\n| Method | Head MOTA | Shoulder MOTA | Elbow MOTA | Wrist MOTA | Hip MOTA | Knee MOTA | Ankle MOTA | Total MOTA | Total MOTP| Speed(FPS) |\n|:-------|:-----:|:-------:|:-------:|:-------:|:-------:|:-------:|:-------:|:-------:|:-------:|:-------:|\n| Detect-and-Track(FAIR) | **61.7** | 65.5 | 57.3 | 45.7 | 54.3 | 53.1 | 45.7 | 55.2 | 61.5 |Unknown|\n| **PoseFlow(DeepMatch)** | 59.8 | **67.0** | 59.8 | 51.6 | **60.0** | **58.4** | **50.5** | **58.3** | **67.8**|8|\n| **PoseFlow(OrbMatch)** | 59.0 | 66.8 | **60.0** | **51.8** | 59.4 | **58.4** | 50.3 | 58.0 | 62.2|24|\n\n</center>\n\n*Note: Please read [PoseFlow/README.md](PoseFlow/) for details.*\n\n### CrowdPose\n<p align=\'center\'>\n    <img src="doc/crowdpose.gif", width="360">\n</p>\n\n**Results on CrowdPose Validation:**\n\n*Compare with state-of-the-art methods*\n<center>\n\n| Method | AP @0.5:0.95 | AP @0.5 | AP @0.75 | AR @0.5:0.95 | AR @0.5 | AR @0.75 |\n|:-------|:-----:|:-------:|:-------:|:-------:|:-------:|:-------:|\n| Detectron (Mask R-CNN) | 57.2 | 83.5 | 60.3 | 65.9 | 89.3 | 69.4 |\n| Simple Pose (Xiao *et al.*) | 60.8 | 81.4 | 65.7 | 67.3 | 86.3 | 71.8 |\n| **Ours** | **66.0** | **84.2** | **71.5** | **72.7** | **89.5** | **77.5** |\n\n</center>\n\n*Compare with open-source systems*\n<center>\n\n| Method | AP @*Easy* | AP @*Medium* | AP @*Hard* | FPS |\n|:-------|:-----:|:-------:|:-------:|:-------:|\n| OpenPose (CMU-Pose) | 62.7 | 48.7 | 32.3 | 5.3 |\n| Detectron (Mask R-CNN) | 69.4 | 57.9 | 45.8 | 2.9 |\n| **Ours** ([**PyTorch** branch](https://github.com/MVIG-SJTU/AlphaPose/tree/pytorch)) | **75.5** | **66.3** | **57.4** | **10.1** |\n\n*Note: Please read [doc/CrowdPose.md](https://github.com/MVIG-SJTU/AlphaPose/blob/pytorch/doc/CrowdPose.md) for details.*\n\n## Installation\n***Note: For new users or users that are not familiar with TensorFlow or Torch, we suggest using the [**PyTorch** version](https://github.com/MVIG-SJTU/AlphaPose/tree/pytorch) since it\'s more user-friendly and runs faster.***\n\n1. Get the code and build related modules.\n  ```Shell\n  git clone https://github.com/MVIG-SJTU/AlphaPose.git\n  cd AlphaPose/human-detection/lib/\n  make clean\n  make\n  cd newnms/\n  make\n  cd ../../../\n  ```\n2. Install [Torch](https://github.com/torch/distro) and [TensorFlow](https://www.tensorflow.org/install/)(verson >= 1.2). After that, install related dependencies by:\n  ```Shell\n  chmod +x install.sh\n  ./install.sh\n  ```\n3. Run fetch_models.sh to download our pre-trained models. Or download the models manually: output.zip([Google drive](https://drive.google.com/open?id=1dMiUPMvt5o-S1BjDkzUJooEoT3GgasxB)|[Baidu pan](https://pan.baidu.com/s/1hund0US)), final_model.t7([Google drive](https://drive.google.com/open?id=1JYlLspGJHJFIggkDll4MdUdqX2ELqHpk)|[Baidu pan](https://pan.baidu.com/s/1qZuEyF6))\n  ```Shell\n  chmod +x fetch_models.sh\n  ./fetch_models.sh\n  ```\n\n## Quick Start\n- **Demo**:  Run AlphaPose for all images in a folder and visualize the results with:\n```\n./run.sh --indir examples/demo/ --outdir examples/results/ --vis\n```\n\nThe visualized results will be stored in examples/results/RENDER. To easily process images/video and display/save the results, please see [doc/run.md](doc/run.md). **If you get any problems, you can check the [doc/faq.md](doc/faq.md).**\n\n- **Video**:  You can see our video demo [here](https://www.youtube.com/watch?v=Z2WPd59pRi8).\n\n\n## Output\nOutput (format, keypoint index ordering, etc.) in [doc/output.md](doc/output.md).\n\n## Speeding Up AlphaPose\nWe provide a `fast` mode for human-detection that disables multi-scale testing. You can turn it on by adding `--mode fast`.\n\nAnd if you have multiple gpus on your machine or have large gpu memories, you can speed up the pose estimation step by using multi-gpu testing or large batch tesing with:\n```\n./run.sh --indir examples/demo/ --outdir examples/results/ --gpu 0,1,2,3 --batch 5\n```\nIt assumes that you have 4 gpu cards on your machine and *each card* can run a batch of 5 images. Here is the recommended batch size for gpu with different size of memory:\n```\nGPU memory: 4GB -- batch size: 3\nGPU memory: 8GB -- batch size: 6\nGPU memory: 12GB -- batch size: 9\n```\nSee [doc/run.md](doc/run.md) for more details.\n\n\n## Feedbacks\nIf you get any problems, you can check the [doc/faq.md](doc/faq.md) first. If it can not solve your problems or if you find any bugs, don\'t hesitate to comment on GitHub or make a pull request!\n\n\n## Contributors\nAlphaPose is based on RMPE(ICCV\'17), authored by [Hao-shu Fang](https://fang-haoshu.github.io/), Shuqin Xie, [Yu-Wing Tai](https://scholar.google.com/citations?user=nFhLmFkAAAAJ&hl=en) and [Cewu Lu](http://www.mvig.org/), [Cewu Lu](http://mvig.sjtu.edu.cn/) is the corresponding author. Currently, it is developed and maintained by [Hao-shu Fang](https://fang-haoshu.github.io/), [Jiefeng Li](http://jeff-leaf.site/), [Yuliang Xiu](http://xiuyuliang.cn/about/) and [Ruiheng Chang](https://crh19970307.github.io/). \n\nThe main contributors are listed in [doc/contributors.md](doc/contributors.md).\n\n## Citation\nPlease cite these papers in your publications if it helps your research:\n\n    @inproceedings{fang2017rmpe,\n      title={{RMPE}: Regional Multi-person Pose Estimation},\n      author={Fang, Hao-Shu and Xie, Shuqin and Tai, Yu-Wing and Lu, Cewu},\n      booktitle={ICCV},\n      year={2017}\n    }\n\n    @inproceedings{xiu2018poseflow,\n      title = {{Pose Flow}: Efficient Online Pose Tracking},\n      author = {Xiu, Yuliang and Li, Jiefeng and Wang, Haoyu and Fang, Yinghong and Lu, Cewu},\n      booktitle={BMVC},\n      year = {2018}\n    }\n\n\n## License\nAlphaPose is freely available for free non-commercial use, and may be redistributed under these conditions. For commercial queries, please drop an e-mail at mvig.alphapose[at]gmail[dot]com and cc lucewu[[at]sjtu[dot]edu[dot]cn. We will send the detail agreement to you.\n'