b'# The SHOGUN machine learning toolbox\n-------------------------------------\n\nUnified and efficient Machine Learning since 1999.\n\nLatest release:\n\n[![Release](https://img.shields.io/github/release/shogun-toolbox/shogun.svg)](https://github.com/shogun-toolbox/shogun/releases/latest)\n\nCite Shogun:\n\n[![DOI](https://zenodo.org/badge/1555094.svg)](https://zenodo.org/badge/latestdoi/1555094)\n\nDevelop branch build status:\n\n[![Build status](https://dev.azure.com/shogunml/shogun/_apis/build/status/shogun-CI)](https://dev.azure.com/shogunml/shogun/_build/latest?definitionId=-1)\n[![codecov](https://codecov.io/gh/shogun-toolbox/shogun/branch/develop/graph/badge.svg)](https://codecov.io/gh/shogun-toolbox/shogun)\n\nDonate to Shogun via NumFocus:\n\n[![Powered by NumFOCUS](https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A)](http://numfocus.org)\n\n\nBuildbot: http://buildbot.shogun-toolbox.org/waterfall.\n\n * See [doc/readme/ABOUT.md](doc/readme/ABOUT.md) for a project description.\n * See [doc/readme/INSTALL.md](doc/readme/INSTALL.md) for installation instructions.\n * See [doc/readme/INTERFACES.md](doc/readme/INTERFACES.md) for calling Shogun from its interfaces.\n * See [doc/readme/EXAMPLES.md](doc/readme/EXAMPLES.md) for details on creating API examples.\n * See [doc/readme/DEVELOPING.md](doc/readme/DEVELOPING.md) for how to hack Shogun.\n \n * See [API examples](http://shogun.ml/examples) for API examples for all interfaces.\n * See [the wiki](https://github.com/shogun-toolbox/shogun/wiki/) for extended developer information.\n\n## Interfaces\n-------------\n\nShogun is implemented in C++ and offers automatically generated, unified interfaces to Python, Octave, Java / Scala, Ruby, C#, R, Lua. We are currently working on adding more languages including JavaScript, D, and Matlab.\n\n|    Interface     |     Status                                                |\n|:----------------:|-----------------------------------------------------------|\n|python            | *mature* (no known problems)                              |\n|octave            | *mature* (no known problems)                              |\n|java/scala        | *stable* (no known problems)                              |\n|ruby              | *stable* (no known problems)                              |\n|csharp            | *stable* (no known problems)                              |\n|r                 | Currently disabled due to a [swig bug](https://github.com/swig/swig/issues/1660) |\n|perl              | *pre-alpha* (work in progress quality)                    |\n|js                | *pre-alpha* (work in progress quality)                    |\n\nSee [our website](http://shogun.ml/examples) for examples in all languages.\n\n## Platforms\n------------\n\nShogun is supported under GNU/Linux, MacOSX, FreeBSD, and Windows.\nSee our [buildfarm](http://buildbot.shogun-toolbox.org/waterfall).\n\n## Directory Contents\n---------------------\n\nThe following directories are found in the source distribution.\nNote that some folders are submodules that can be checked out with\n`git submodule update --init`.\n\n- *src* - source code, separated into C++ source and interfaces\n- *doc* - readmes (doc/reamde, submodule), ipython notebooks, cookbook (api examples), licenses\n- *examples* - example files for all interfaces\n- *data* - data sets (submodule, required for examples)\n- *tests* - unit tests and continuous integration of interface examples\n- *applications* - applications of SHOGUN (outdated)\n- *benchmarks* - speed benchmarks\n- *cmake* - cmake build scripts\n\n## License\n----------\nShogun is distributed under [BSD 3-clause license](doc/license/LICENSE.md), with\noptional GPL3 components.\nSee [doc/licenses](doc/license) for details.\n\n'