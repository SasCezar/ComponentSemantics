b'# tensorboardX\n\n[![Build Status](https://travis-ci.org/lanpa/tensorboardX.svg?branch=master)](https://travis-ci.org/lanpa/tensorboardX)\n[![PyPI version](https://badge.fury.io/py/tensorboardX.svg)](https://badge.fury.io/py/tensorboardX)\n[![Downloads](https://img.shields.io/badge/pip--downloads-5K+-brightgreen.svg)](https://bigquery.cloud.google.com/savedquery/966219917372:edb59a0d70c54eb687ab2a9417a778ee)\n[![Documentation Status](https://readthedocs.org/projects/tensorboardx/badge/?version=latest)](https://tensorboardx.readthedocs.io/en/latest/?badge=latest)\n[![Documentation Status](https://codecov.io/gh/lanpa/tensorboardX/branch/master/graph/badge.svg)](https://codecov.io/gh/lanpa/tensorboardX/)\n\nWrite TensorBoard events with simple function call.\n\n* Support `scalar`, `image`, `figure`, `histogram`, `audio`, `text`, `graph`, `onnx_graph`, `embedding`, `pr_curve`, `mesh`, `hyper-parameters`\n  and `video` summaries.\n\n* requirement for `demo_graph.py` is tensorboardX>=1.9 and pytorch>=1.3\n\n* [FAQ](https://github.com/lanpa/tensorboardX/wiki)\n\n## Install\n\nTested on anaconda2 / anaconda3, with PyTorch 1.3.0 / torchvision 0.4.1 / tensorboard 1.13.0\n\n`pip install tensorboardX`\n\nor build from source:\n\n`pip install \'git+https://github.com/lanpa/tensorboardX\'`\n\n\nYou can optionally install [`crc32c`](https://github.com/ICRAR/crc32c) to speed up saving a large amount of data.\n\n\n## Example\n\n* Run the demo script: `python examples/demo.py`\n* Use TensorBoard with `tensorboard --logdir runs`  (needs to install TensorFlow)\n\n```python\n# demo.py\n\nimport torch\nimport torchvision.utils as vutils\nimport numpy as np\nimport torchvision.models as models\nfrom torchvision import datasets\nfrom tensorboardX import SummaryWriter\n\nresnet18 = models.resnet18(False)\nwriter = SummaryWriter()\nsample_rate = 44100\nfreqs = [262, 294, 330, 349, 392, 440, 440, 440, 440, 440, 440]\n\nfor n_iter in range(100):\n\n    dummy_s1 = torch.rand(1)\n    dummy_s2 = torch.rand(1)\n    # data grouping by `slash`\n    writer.add_scalar(\'data/scalar1\', dummy_s1[0], n_iter)\n    writer.add_scalar(\'data/scalar2\', dummy_s2[0], n_iter)\n\n    writer.add_scalars(\'data/scalar_group\', {\'xsinx\': n_iter * np.sin(n_iter),\n                                             \'xcosx\': n_iter * np.cos(n_iter),\n                                             \'arctanx\': np.arctan(n_iter)}, n_iter)\n\n    dummy_img = torch.rand(32, 3, 64, 64)  # output from network\n    if n_iter % 10 == 0:\n        x = vutils.make_grid(dummy_img, normalize=True, scale_each=True)\n        writer.add_image(\'Image\', x, n_iter)\n\n        dummy_audio = torch.zeros(sample_rate * 2)\n        for i in range(x.size(0)):\n            # amplitude of sound should in [-1, 1]\n            dummy_audio[i] = np.cos(freqs[n_iter // 10] * np.pi * float(i) / float(sample_rate))\n        writer.add_audio(\'myAudio\', dummy_audio, n_iter, sample_rate=sample_rate)\n\n        writer.add_text(\'Text\', \'text logged at step:\' + str(n_iter), n_iter)\n\n        for name, param in resnet18.named_parameters():\n            writer.add_histogram(name, param.clone().cpu().data.numpy(), n_iter)\n\n        # needs tensorboard 0.4RC or later\n        writer.add_pr_curve(\'xoxo\', np.random.randint(2, size=100), np.random.rand(100), n_iter)\n\ndataset = datasets.MNIST(\'mnist\', train=False, download=True)\nimages = dataset.test_data[:100].float()\nlabel = dataset.test_labels[:100]\n\nfeatures = images.view(100, 784)\nwriter.add_embedding(features, metadata=label, label_img=images.unsqueeze(1))\n\n# export scalar data to JSON for external processing\nwriter.export_scalars_to_json("./all_scalars.json")\nwriter.close()\n```\n\n## Screenshots\n\n<img src="screenshots/Demo.gif">\n\n## Tweaks\n\nTo add more ticks for the slider (show more image history), check https://github.com/lanpa/tensorboardX/issues/44 or \nhttps://github.com/tensorflow/tensorboard/pull/1138\n\n## Reference\n\n* [TeamHG-Memex/tensorboard_logger](https://github.com/TeamHG-Memex/tensorboard_logger)\n* [dmlc/tensorboard](https://github.com/dmlc/tensorboard)\n'