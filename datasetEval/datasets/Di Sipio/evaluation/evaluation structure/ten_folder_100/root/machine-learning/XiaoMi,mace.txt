b'<div align="center">\n<img src="docs/mace-logo.png" width="400" alt="MACE" />\n</div>\n\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](LICENSE)\n[![Build Status](https://travis-ci.org/XiaoMi/mace.svg?branch=master)](https://travis-ci.org/XiaoMi/mace)\n[![pipeline status](https://gitlab.com/llhe/mace/badges/master/pipeline.svg)](https://gitlab.com/llhe/mace/pipelines)\n[![doc build status](https://readthedocs.org/projects/mace/badge/?version=latest)](https://readthedocs.org/projects/mace/badge/?version=latest)\n\n[Documentation](https://mace.readthedocs.io) |\n[FAQ](https://mace.readthedocs.io/en/latest/faq.html) |\n[Release Notes](RELEASE.md) |\n[Roadmap](ROADMAP.md) |\n[MACE Model Zoo](https://github.com/XiaoMi/mace-models) |\n[Demo](mace/examples/android) |\n[Join Us](JOBS.md) |\n[\xe4\xb8\xad\xe6\x96\x87](README_zh.md)\n\n**Mobile AI Compute Engine** (or **MACE** for short) is a deep learning inference framework optimized for\nmobile heterogeneous computing on Android, iOS, Linux and Windows devices. The design focuses on the following\ntargets:\n* Performance\n  * Runtime is optimized with NEON, OpenCL and Hexagon, and\n    [Winograd algorithm](https://arxiv.org/abs/1509.09308) is introduced to\n    speed up convolution operations. The initialization is also optimized to be faster.\n* Power consumption\n  * Chip dependent power options like big.LITTLE scheduling, Adreno GPU hints are\n    included as advanced APIs.\n* Responsiveness\n  * UI responsiveness guarantee is sometimes obligatory when running a model.\n    Mechanism like automatically breaking OpenCL kernel into small units is\n    introduced to allow better preemption for the UI rendering task.\n* Memory usage and library footprint\n  * Graph level memory allocation optimization and buffer reuse are supported.\n    The core library tries to keep minimum external dependencies to keep the\n    library footprint small.\n* Model protection\n  * Model protection has been the highest priority since the beginning of \n    the design. Various techniques are introduced like converting models to C++\n    code and literal obfuscations.\n* Platform coverage\n  * Good coverage of recent Qualcomm, MediaTek, Pinecone and other ARM based\n    chips. CPU runtime supports Android, iOS and Linux.\n* Rich model formats support\n  * [TensorFlow](https://github.com/tensorflow/tensorflow),\n    [Caffe](https://github.com/BVLC/caffe) and\n    [ONNX](https://github.com/onnx/onnx) model formats are supported.\n\n## Getting Started\n* [Introduction](https://mace.readthedocs.io/en/latest/introduction.html)\n* [Installation](https://mace.readthedocs.io/en/latest/installation/env_requirement.html)\n* [Basic Usage](https://mace.readthedocs.io/en/latest/user_guide/basic_usage.html)\n* [Advanced Usage](https://mace.readthedocs.io/en/latest/user_guide/advanced_usage.html)\n\n## Performance\n[MACE Model Zoo](https://github.com/XiaoMi/mace-models) contains\nseveral common neural networks and models which will be built daily against a list of mobile\nphones. The benchmark results can be found in [the CI result page](https://gitlab.com/llhe/mace-models/pipelines)\n(choose the latest passed pipeline, click *release* step and you will see the benchmark results).\nTo get the comparison results with other frameworks, you can take a look at\n[MobileAIBench](https://github.com/XiaoMi/mobile-ai-bench) project.\n\n## Communication\n* GitHub issues: bug reports, usage issues, feature requests\n* Slack: [mace-users.slack.com](https://join.slack.com/t/mace-users/shared_invite/enQtMzkzNjM3MzMxODYwLTAyZTAzMzQyNjc0ZGI5YjU3MjI1N2Q2OWI1ODgwZjAwOWVlNzFlMjFmMTgwYzhjNzU4MDMwZWQ1MjhiM2Y4OTE)\n* QQ\xe7\xbe\xa4: 756046893\n\n## Contributing\nAny kind of contribution is welcome. For bug reports, feature requests,\nplease just open an issue without any hesitation. For code contributions, it\'s\nstrongly suggested to open an issue for discussion first. For more details,\nplease refer to [the contribution guide](https://mace.readthedocs.io/en/latest/development/contributing.html).\n\n## License\n[Apache License 2.0](LICENSE).\n\n## Acknowledgement\nMACE depends on several open source projects located in the\n[third_party](third_party) directory. Particularly, we learned a lot from\nthe following projects during the development:\n* [Qualcomm Hexagon NN Offload Framework](https://developer.qualcomm.com/software/hexagon-dsp-sdk): the Hexagon DSP runtime\n  depends on this library.\n* [TensorFlow](https://github.com/tensorflow/tensorflow),\n  [Caffe](https://github.com/BVLC/caffe),\n  [SNPE](https://developer.qualcomm.com/software/snapdragon-neural-processing-engine-ai),\n  [ARM ComputeLibrary](https://github.com/ARM-software/ComputeLibrary),\n  [ncnn](https://github.com/Tencent/ncnn),\n  [ONNX](https://github.com/onnx/onnx) and many others: we learned many best\n  practices from these projects.\n\nFinally, we also thank the Qualcomm, Pinecone and MediaTek engineering teams for\ntheir help.\n\n## Join Us\n[We are hiring](JOBS.md).\n'