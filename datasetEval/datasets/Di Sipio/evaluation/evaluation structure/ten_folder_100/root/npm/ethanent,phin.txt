b'<p align="center" style="text-align: center"><img src="https://raw.githubusercontent.com/ethanent/phin/master/media/phin-textIncluded.png" width="250" alt="phin logo"/></p>\n\n---\n\n> The ultra-lightweight Node.js HTTP client\n\n[Full documentation](https://ethanent.github.io/phin/) | [GitHub](https://github.com/ethanent/phin) | [NPM](https://www.npmjs.com/package/phin)\n\n\n## Simple Usage\n\n```javascript\nconst p = require(\'phin\')\n\nconst res = await p(\'https://ethanent.me\')\n\nconsole.log(res.body)\n```\n\nNote that the above should be in an async context! phin also provides an unpromisified version of the library.\n\n\n## Install\n\n```\nnpm install phin\n```\n\n\n## Why phin?\n\nphin is **trusted** by some really important projects. The hundreds of contributors at [Less](https://github.com/less/less.js), for example, depend on phin as part of their development process.\n\nAlso, phin is super **lightweight**. Like **99.8% smaller than request** lightweight. To compare to other libraries, see [phin vs. the Competition](https://github.com/ethanent/phin/blob/master/README.md#phin-vs-the-competition).\n\n<img src="https://pbs.twimg.com/media/DSPF9TaUQAA0tIe.jpg:large" alt="phin became 33% lighter with release 2.7.0!"/>\n\n\n## Quick Demos\n\nSimple POST:\n\n```js\nawait p({\n\turl: \'https://ethanent.me\',\n\tmethod: \'POST\',\n\tdata: {\n\t\they: \'hi\'\n\t}\n})\n```\n\n### Unpromisified Usage\n\n```js\nconst p = require(\'phin\').unpromisified\n\np(\'https://ethanent.me\', (err, res) => {\n\tif (!err) console.log(res.body)\n})\n```\n\nSimple parsing of JSON:\n\n```js\n// (In async function in this case.)\n\nconst res = await p({\n\t\'url\': \'https://ethanent.me/name\',\n\t\'parse\': \'json\'\n})\n\nconsole.log(res.body.first)\n```\n\n### Default Options\n\n```js\nconst ppostjson = p.defaults({\n\t\'method\': \'POST\',\n\t\'parse\': \'json\',\n\t\'timeout\': 2000\n})\n\n// In async function...\n\nconst res = await ppostjson(\'https://ethanent.me/somejson\')\n// ^ An options object could also be used here to set other options.\n\n// Do things with res.body?\n```\n\n### Custom Core HTTP Options\n\nphin allows you to set [core HTTP options](https://nodejs.org/api/http.html#http_http_request_url_options_callback).\n\n```js\nawait p({\n\t\'url\': \'https://ethanent.me/name\',\n\t\'core\': {\n\t\t\'agent\': myAgent // Assuming you\'d already created myAgent earlier.\n\t}\n})\n```\n\n\n## Full Documentation\n\nThere\'s a lot more which can be done with the phin library.\n\nSee [the phin documentation](https://ethanent.github.io/phin/).\n\n\n## phin vs. the Competition\n\nphin is a very lightweight library, yet it contains all of the common HTTP client features included in competing libraries!\n\nHere\'s a size comparison table:\n\nPackage | Size\n--- | ---\nrequest | [![request package size](https://packagephobia.now.sh/badge?p=request)](https://packagephobia.now.sh/result?p=request)\nsuperagent | [![superagent package size](https://packagephobia.now.sh/badge?p=superagent)](https://packagephobia.now.sh/result?p=superagent)\nisomorphic-fetch | [![isomorphic-fetch package size](https://packagephobia.now.sh/badge?p=isomorphic-fetch)](https://packagephobia.now.sh/result?p=isomorphic-fetch)\naxios | [![axios package size](https://packagephobia.now.sh/badge?p=axios)](https://packagephobia.now.sh/result?p=axios)\ngot | [![got package size](https://packagephobia.now.sh/badge?p=got)](https://packagephobia.now.sh/result?p=got)\nr2 | [![r2 package size](https://packagephobia.now.sh/badge?p=r2)](https://packagephobia.now.sh/result?p=r2)\nnode-fetch | [![node-fetch package size](https://packagephobia.now.sh/badge?p=node-fetch)](https://packagephobia.now.sh/result?p=node-fetch)\nsnekfetch | [![snekfetch package size](https://packagephobia.now.sh/badge?p=snekfetch)](https://packagephobia.now.sh/result?p=snekfetch)\nphin | [![phin package size](https://packagephobia.now.sh/badge?p=phin)](https://packagephobia.now.sh/result?p=phin)'