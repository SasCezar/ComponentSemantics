b'# eslint-plugin-node\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-node.svg)](https://www.npmjs.com/package/eslint-plugin-node)\n[![Downloads/month](https://img.shields.io/npm/dm/eslint-plugin-node.svg)](http://www.npmtrends.com/eslint-plugin-node)\n[![Build Status](https://github.com/mysticatea/eslint-plugin-node/workflows/CI/badge.svg)](https://github.com/mysticatea/eslint-plugin-node/actions)\n[![Coverage Status](https://codecov.io/gh/mysticatea/eslint-plugin-node/branch/master/graph/badge.svg)](https://codecov.io/gh/mysticatea/eslint-plugin-node)\n[![Dependency Status](https://david-dm.org/mysticatea/eslint-plugin-node.svg)](https://david-dm.org/mysticatea/eslint-plugin-node)\n\nAdditional ESLint\'s rules for Node.js\n\n## \xf0\x9f\x92\xbf Install & Usage\n\n```\n$ npm install --save-dev eslint eslint-plugin-node\n```\n\n- Requires Node.js `>=8.10.0`\n- Requires ESLint `>=5.16.0`\n\n**Note:** It recommends a use of [the "engines" field of package.json](https://docs.npmjs.com/files/package.json#engines). The "engines" field is used by `node/no-unsupported-features/*` rules.\n\n**.eslintrc.json** (An example)\n\n```jsonc\n{\n    "extends": [\n        "eslint:recommended",\n        "plugin:node/recommended"\n    ],\n    "parserOptions": {\n        // Only ESLint 6.2.0 and later support ES2020.\n        "ecmaVersion": 2020\n    },\n    "rules": {\n        "node/exports-style": ["error", "module.exports"],\n        "node/file-extension-in-import": ["error", "always"],\n        "node/prefer-global/buffer": ["error", "always"],\n        "node/prefer-global/console": ["error", "always"],\n        "node/prefer-global/process": ["error", "always"],\n        "node/prefer-global/url-search-params": ["error", "always"],\n        "node/prefer-global/url": ["error", "always"],\n        "node/prefer-promises/dns": "error",\n        "node/prefer-promises/fs": "error"\n    }\n}\n```\n\n**package.json** (An example)\n\n```json\n{\n    "name": "your-module",\n    "version": "1.0.0",\n    "type": "commonjs",\n    "engines": {\n        "node": ">=8.10.0"\n    }\n}\n```\n\n## \xf0\x9f\x93\x96 Rules\n\n- \xe2\xad\x90\xef\xb8\x8f - the mark of recommended rules.\n- \xe2\x9c\x92\xef\xb8\x8f - the mark of fixable rules.\n\n<!--RULES_TABLE_START-->\n### Possible Errors\n\n| Rule ID | Description |    |\n|:--------|:------------|:--:|\n| [node/no-callback-literal](./docs/rules/no-callback-literal.md) | ensure Node.js-style error-first callback pattern is followed |  |\n| [node/no-exports-assign](./docs/rules/no-exports-assign.md) | disallow the assignment to `exports` | \xe2\xad\x90\xef\xb8\x8f |\n| [node/no-extraneous-import](./docs/rules/no-extraneous-import.md) | disallow `import` declarations which import extraneous modules | \xe2\xad\x90\xef\xb8\x8f |\n| [node/no-extraneous-require](./docs/rules/no-extraneous-require.md) | disallow `require()` expressions which import extraneous modules | \xe2\xad\x90\xef\xb8\x8f |\n| [node/no-missing-import](./docs/rules/no-missing-import.md) | disallow `import` declarations which import non-existence modules | \xe2\xad\x90\xef\xb8\x8f |\n| [node/no-missing-require](./docs/rules/no-missing-require.md) | disallow `require()` expressions which import non-existence modules | \xe2\xad\x90\xef\xb8\x8f |\n| [node/no-unpublished-bin](./docs/rules/no-unpublished-bin.md) | disallow `bin` files that npm ignores | \xe2\xad\x90\xef\xb8\x8f |\n| [node/no-unpublished-import](./docs/rules/no-unpublished-import.md) | disallow `import` declarations which import private modules | \xe2\xad\x90\xef\xb8\x8f |\n| [node/no-unpublished-require](./docs/rules/no-unpublished-require.md) | disallow `require()` expressions which import private modules | \xe2\xad\x90\xef\xb8\x8f |\n| [node/no-unsupported-features/es-builtins](./docs/rules/no-unsupported-features/es-builtins.md) | disallow unsupported ECMAScript built-ins on the specified version | \xe2\xad\x90\xef\xb8\x8f |\n| [node/no-unsupported-features/es-syntax](./docs/rules/no-unsupported-features/es-syntax.md) | disallow unsupported ECMAScript syntax on the specified version | \xe2\xad\x90\xef\xb8\x8f |\n| [node/no-unsupported-features/node-builtins](./docs/rules/no-unsupported-features/node-builtins.md) | disallow unsupported Node.js built-in APIs on the specified version | \xe2\xad\x90\xef\xb8\x8f |\n| [node/process-exit-as-throw](./docs/rules/process-exit-as-throw.md) | make `process.exit()` expressions the same code path as `throw` | \xe2\xad\x90\xef\xb8\x8f |\n| [node/shebang](./docs/rules/shebang.md) | suggest correct usage of shebang | \xe2\xad\x90\xef\xb8\x8f\xe2\x9c\x92\xef\xb8\x8f |\n\n### Best Practices\n\n| Rule ID | Description |    |\n|:--------|:------------|:--:|\n| [node/no-deprecated-api](./docs/rules/no-deprecated-api.md) | disallow deprecated APIs | \xe2\xad\x90\xef\xb8\x8f |\n\n### Stylistic Issues\n\n| Rule ID | Description |    |\n|:--------|:------------|:--:|\n| [node/exports-style](./docs/rules/exports-style.md) | enforce either `module.exports` or `exports` |  |\n| [node/file-extension-in-import](./docs/rules/file-extension-in-import.md) | enforce the style of file extensions in `import` declarations | \xe2\x9c\x92\xef\xb8\x8f |\n| [node/prefer-global/buffer](./docs/rules/prefer-global/buffer.md) | enforce either `Buffer` or `require("buffer").Buffer` |  |\n| [node/prefer-global/console](./docs/rules/prefer-global/console.md) | enforce either `console` or `require("console")` |  |\n| [node/prefer-global/process](./docs/rules/prefer-global/process.md) | enforce either `process` or `require("process")` |  |\n| [node/prefer-global/text-decoder](./docs/rules/prefer-global/text-decoder.md) | enforce either `TextDecoder` or `require("util").TextDecoder` |  |\n| [node/prefer-global/text-encoder](./docs/rules/prefer-global/text-encoder.md) | enforce either `TextEncoder` or `require("util").TextEncoder` |  |\n| [node/prefer-global/url-search-params](./docs/rules/prefer-global/url-search-params.md) | enforce either `URLSearchParams` or `require("url").URLSearchParams` |  |\n| [node/prefer-global/url](./docs/rules/prefer-global/url.md) | enforce either `URL` or `require("url").URL` |  |\n| [node/prefer-promises/dns](./docs/rules/prefer-promises/dns.md) | enforce `require("dns").promises` |  |\n| [node/prefer-promises/fs](./docs/rules/prefer-promises/fs.md) | enforce `require("fs").promises` |  |\n\n### Deprecated rules\n\nThese rules have been deprecated in accordance with the [deprecation policy](https://eslint.org/docs/user-guide/rule-deprecation), and replaced by newer rules:\n\n| Rule ID | Replaced by |\n|:--------|:------------|\n| [node/no-hide-core-modules](./docs/rules/no-hide-core-modules.md) | (nothing) |\n| [node/no-unsupported-features](./docs/rules/no-unsupported-features.md) | [node/no-unsupported-features/es-syntax](./docs/rules/no-unsupported-features/es-syntax.md) and [node/no-unsupported-features/es-builtins](./docs/rules/no-unsupported-features/es-builtins.md) |\n\n<!--RULES_TABLE_END-->\n\n## \xf0\x9f\x94\xa7 Configs\n\nThis plugin provides three configs:\n\n- `plugin:node/recommended` condiders both CommonJS and ES Modules. If [`"type":"module"` field](https://medium.com/@nodejs/announcing-a-new-experimental-modules-1be8d2d6c2ff#b023) existed in package.json then it considers files as ES Modules. Otherwise it considers files as CommonJS. In addition, it considers `*.mjs` files as ES Modules and `*.cjs` files as CommonJS.\n- `plugin:node/recommended-module` considers all files as ES Modules.\n- `plugin:node/recommended-script` considers all files as CommonJS.\n\nThose preset config:\n\n- enable [no-process-exit](http://eslint.org/docs/rules/no-process-exit) rule because [the official document](https://nodejs.org/api/process.html#process_process_exit_code) does not recommend a use of `process.exit()`.\n- enable plugin rules which are given :star: in the above table.\n- add `{ecmaVersion: 2019}` and etc into `parserOptions`.\n- add proper globals into `globals`.\n- add this plugin into `plugins`.\n\n## \xf0\x9f\x91\xab FAQ\n\n- Q: The `no-missing-import` / `no-missing-require` rules don\'t work with nested folders in SublimeLinter-eslint\n- A: See [context.getFilename() in rule returns relative path](https://github.com/roadhump/SublimeLinter-eslint#contextgetfilename-in-rule-returns-relative-path) in the SublimeLinter-eslint FAQ.\n\n## \xf0\x9f\x9a\xa5 Semantic Versioning Policy\n\n`eslint-plugin-node` follows [semantic versioning](http://semver.org/) and [ESLint\'s Semantic Versioning Policy](https://github.com/eslint/eslint#semantic-versioning-policy).\n\n- Patch release (intended to not break your lint build)\n    - A bug fix in a rule that results in it reporting fewer errors.\n    - Improvements to documentation.\n    - Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.\n    - Re-releasing after a failed release (i.e., publishing a release that doesn\'t work for anyone).\n- Minor release (might break your lint build)\n    - A bug fix in a rule that results in it reporting more errors.\n    - A new rule is created.\n    - A new option to an existing rule is created.\n    - An existing rule is deprecated.\n- Major release (likely to break your lint build)\n    - A support for old Node version is dropped.\n    - A support for old ESLint version is dropped.\n    - An existing rule is changed in it reporting more errors.\n    - An existing rule is removed.\n    - An existing option of a rule is removed.\n    - An existing config is updated.\n\n## \xf0\x9f\x93\xb0 Changelog\n\n- [GitHub Releases](https://github.com/mysticatea/eslint-plugin-node/releases)\n\n## \xe2\x9d\xa4\xef\xb8\x8f Contributing\n\nWelcome contributing!\n\nPlease use GitHub\'s Issues/PRs.\n\n### Development Tools\n\n- `npm test` runs tests and measures coverage.\n- `npm run coverage` shows the coverage result of `npm test` command.\n- `npm run clean` removes the coverage result of `npm test` command.\n'