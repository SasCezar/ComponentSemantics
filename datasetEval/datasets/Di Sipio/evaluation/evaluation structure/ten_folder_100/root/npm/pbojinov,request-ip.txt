b'# request-ip\n\nA tiny Node.js module for retrieving a request\'s IP address. \n\n![](https://nodei.co/npm/request-ip.png?downloads=true&cacheBust=2)\n\n![](https://travis-ci.org/pbojinov/request-ip.svg?branch=master)\n[![Coverage Status](https://coveralls.io/repos/pbojinov/request-ip/badge.svg)](https://coveralls.io/r/pbojinov/request-ip)\n![](https://img.shields.io/npm/l/express.svg)\n[![npm version](https://badge.fury.io/js/request-ip.svg)](https://badge.fury.io/js/request-ip)\n\n## Installation\n\n```bash\nnpm install request-ip --save\n```\n    \n## Getting Started\n\n```javascript\nconst requestIp = require(\'request-ip\');\n\n// inside middleware handler\nconst ipMiddleware = function(req, res, next) {\n    const clientIp = requestIp.getClientIp(req); \n    next();\n};\n\n// on localhost you\'ll see 127.0.0.1 if you\'re using IPv4 \n// or ::1, ::ffff:127.0.0.1 if you\'re using IPv6\n```\n\n### As Connect Middleware\n\n```javascript\nconst requestIp = require(\'request-ip\');\napp.use(requestIp.mw())\n\napp.use(function(req, res) {\n    const ip = req.clientIp;\n    res.end(ip);\n});\n```\n\nTo see a full working code for the middleware, check out the [examples](https://github.com/pbojinov/request-ip/tree/master/examples) folder.\n\nThe connect-middleware also supports retrieving the ip address under a custom attribute name, which also works as a container for any future settings. \n\n## How It Works\n\nIt looks for specific headers in the request and falls back to some defaults if they do not exist.\n\nThe user ip is determined by the following order:\n\n1. `X-Client-IP`  \n2. `X-Forwarded-For` (Header may return multiple IP addresses in the format: "client IP, proxy 1 IP, proxy 2 IP", so we take the the first one.)\n3. `CF-Connecting-IP` (Cloudflare)\n4. `Fastly-Client-Ip` (Fastly CDN and Firebase hosting header when forwared to a cloud function)\n5. `True-Client-Ip` (Akamai and Cloudflare)\n6. `X-Real-IP` (Nginx proxy/FastCGI)\n7. `X-Cluster-Client-IP` (Rackspace LB, Riverbed Stingray)\n8. `X-Forwarded`, `Forwarded-For` and `Forwarded` (Variations of #2)\n9. `req.connection.remoteAddress`\n10. `req.socket.remoteAddress`\n11. `req.connection.socket.remoteAddress`\n12. `req.info.remoteAddress`\n\nIf an IP address cannot be found, it will return `null`.\n\n## Samples Use Cases\n\n* Getting a user\'s IP for geolocation.\n\n\n## Running the Tests\n\nMake sure you have the necessary dev dependencies needed to run the tests:\n\n```\nnpm install\n```\n\nRun the integration tests\n\n```\nnpm test\n```\n\n## Release Notes\n\nSee the wonderful [changelog](https://github.com/pbojinov/request-ip/blob/master/CHANGELOG.md)\n\nTo easily generate a new changelog, install [github-changelog-generator](https://github.com/skywinder/github-changelog-generator) then run `npm run changelog`.\n\n## Contributors\n\n* Thanks to [@osherx](https://github.com/osherx) for adding the connect-middleware.\n* Thanks to [@raunc](https://github.com/raunc) for adding Squid proxy support.\n* Thanks to [@fluxsauce](https://github.com/fluxsauce) for adding `CF-Connecting-IP`, `True-Client-IP`, and ES6 support.\n* Thanks to [@vishalvijay](https://github.com/vishalvijay) for adding Fastly/Firebase hosting support.\n\n## License\n\nThe MIT License (MIT) - 2018\n'