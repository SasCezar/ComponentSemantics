b"# grunt-eslint [![Build Status](https://travis-ci.org/sindresorhus/grunt-eslint.svg?branch=master)](https://travis-ci.org/sindresorhus/grunt-eslint)\n\n> Validate files with [ESLint](https://eslint.org)\n\n![](screenshot.png)\n\n\n## Install\n\n```\n$ npm install --save-dev grunt-eslint\n```\n\n\n## Usage\n\n```js\nrequire('load-grunt-tasks')(grunt);\n\ngrunt.initConfig({\n\teslint: {\n\t\ttarget: ['file.js']\n\t}\n});\n\ngrunt.registerTask('default', ['eslint']);\n```\n\n\n## Examples\n\n### Custom config and rules\n\n```js\ngrunt.initConfig({\n\teslint: {\n\t\toptions: {\n\t\t\tconfigFile: 'conf/eslint.json',\n\t\t\trulePaths: ['conf/rules']\n\t\t},\n\t\ttarget: ['file.js']\n\t}\n});\n```\n\n### Custom formatter\n\n```js\ngrunt.initConfig({\n\teslint: {\n\t\toptions: {\n\t\t\tformat: require('eslint-tap')\n\t\t},\n\t\ttarget: ['file.js']\n\t}\n});\n```\n\n\n## Options\n\nSee the [ESLint options](https://eslint.org/docs/developer-guide/nodejs-api#cliengine).\n\nIn addition the following options are supported:\n\n### format\n\nType: `string`<br>\nDefault: `'stylish'`\n\nName of a [built-in formatter](https://github.com/eslint/eslint/tree/master/lib/cli-engine/formatters) or path to a custom one.\n\nSome formatters you might find useful: [eslint-json](https://github.com/sindresorhus/eslint-json), [eslint-tap](https://github.com/sindresorhus/eslint-tap).\n\n### outputFile\n\nType: `string`<br>\nDefault: `''`\n\nOutput the report to a file.\n\n### quiet\n\nType: `boolean`<br>\nDefault: `false`\n\nReport errors only.\n\n### maxWarnings\n\nType: `number`<br>\nDefault: `-1` *(Means no limit)*\n\nNumber of warnings to trigger non-zero exit code.\n\n### failOnError\n\nType: `boolean`<br>\nDefault: `true`\n\nFail the build if ESLint found any errors.\n"