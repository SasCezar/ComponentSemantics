b"# React Isomorphic Boilerplate\n\nAn universal React isomorphic boilerplate for building server-side render web app.\n\n[![dependencies Status](https://david-dm.org/chikara-chan/react-isomorphic-boilerplate/status.svg)](https://david-dm.org/chikara-chan/react-isomorphic-boilerplate) [![devDependencies Status](https://david-dm.org/chikara-chan/react-isomorphic-boilerplate/dev-status.svg)](https://david-dm.org/chikara-chan/react-isomorphic-boilerplate?type=dev) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/chikara-chan/react-isomorphic-boilerplate/pulls) [![npm](https://img.shields.io/npm/l/express.svg)](https://github.com/chikara-chan/react-isomorphic-boilerplate/blob/master/LICENSE)\n\n## Introduction\n\nThis repository is an universal React isomorphic boilerplate for developer to quickly build a super fast and powerful web app that can be rendered both on the client and on the server using the most cutting-edge technology. Compared to others, this boilerplate has more pithily and more elegant configuration file based on environment variables, one for development, one for production. In addition, the directory structure is organized corresponding to mvc principle aim at the best practice.\n\n## Technology Stack\n\n- [React](https://github.com/facebook/react)\n- [React Router](https://github.com/ReactTraining/react-router)\n- [Redux](https://github.com/reactjs/redux)\n- [Redux+](https://github.com/xgrommx/awesome-redux)\n- [Sass](https://github.com/sass/sass)\n- [PostCSS](https://github.com/postcss/postcss)\n- [CSS Modules](https://github.com/css-modules/css-modules)\n- [Koa](https://github.com/koajs/koa)\n- [Koa+](https://github.com/koajs)\n- [Webpack](https://github.com/webpack/webpack)\n- [Webpack+](https://webpack.js.org/loaders/)\n- [Babel](https://github.com/babel/babel)\n- [Babel+](http://babeljs.io/docs/plugins/)\n- [ESLint](https://github.com/eslint/eslint)\n- [Hot Module Replacement](https://webpack.github.io/docs/hot-module-replacement.html)\n- [Code Splitting](https://webpack.github.io/docs/code-splitting.html)\n- ~~Database~~\n- ~~Test Framework~~\n\n## Getting Started\n\n- Require Node.js v6 or later.\n- `npm install` to install dependencies and devDependencies.\n- `npm run dev` to start up the development environment.\n- `npm run build` to compile and bundle the client and server files.\n- `npm start` to deploy the production server.\n\n## What's included\n\n```\nreact-isomorphic-boilerplate/                // root directory\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 build/                                   // webpack config directory\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 webpack.dev.config.js                 // config for webpack when run development bundle\n\xe2\x94\x82     \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 webpack.prod.config.js                // config for webpack when run production bundle\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 client/                                  // client directory\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 about/                                // `about` module\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 common/                               // `common` module\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 home/                                 // `home` module\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 shared/                               // shared module\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 explore/                              // `explore` module\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 index.js                              // client entry file\n\xe2\x94\x82     \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 routes.js                             // client route config\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 dist/                                    // bundle output directory\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 client/                               // the client side output directory\n\xe2\x94\x82     \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 server/                               // the server side output directory\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 server/                                  // server directory\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 controllers/                          // controllers in server\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 middlewares/                          // custom middlewares in server\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 models/                               // models in server\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 routes/                               // routes in server\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 app.js                                // create koa instance in server\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 server.dev.js                         // entry file in development mode\n\xe2\x94\x82     \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 server.prod.js                        // entry file in production mode\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 views/                                   // views directory\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 dev/                                  // output files generated by tpl in development mode\n\xe2\x94\x82     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 prod/                                 // output files generated by tpl in production mode\n\xe2\x94\x82     \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 tpl                                   // templates injected by html-webpack-plugin\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 .editorconfig                            // uniform the text editor behavior\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 .eslintignore                            // which paths should be omitted from linting\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 .eslintrc.json                           // specific rules for eslint\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 .gitattributes                           // uniform the new line perform behavior\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 .gitignore                               // ignore the specific files when using git\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 LICENSE                                  // license information\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 package.json                             // npm entry file\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 README.md                                // just what you see now\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 yarn.lock                                // lock file autogenerated by yarn\n```\n\n## Why Isomorphic\n\n#### SEO\n\nAn application that can only run in the client-side cannot serve HTML to crawlers, so it will have poor [SEO](https://en.wikipedia.org/wiki/Search_engine_optimization) by default. Web crawlers function by making a request to a web server and interpreting the result. but if the server returns a blank page, it\xe2\x80\x99s not of much value. There are workarounds, but not without jumping through some hoops.\n\n#### Performance\n\nBy the same token, if the server doesn\xe2\x80\x99t render a full page of HTML but instead waits for client-side JavaScript to do so, users will experience a few critical seconds of blank page or loading spinner before seeing the content on the page. There are plenty of studies showing the drastic effect a slow site has on users, and thus revenue.\n\n#### Maintainability\n\nWhile the ideal case can lead to a nice, clean separation of concerns, inevitably some bits of application logic or view logic end up duplicated between client and server, often in different languages. Common examples are date and currency formatting, form validations, and routing logic. This makes maintenance a nightmare, especially for more complex apps.\n\n## Problem exists yet\n\n#### [FOUC](https://www.google.com.hk/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&ved=0ahUKEwimhPqTrofRAhXHkJQKHTEYCfMQFggjMAE&url=https%3a%2f%2fen%2ewikipedia%2eorg%2fwiki%2fFlash_of_unstyled_content&usg=AFQjCNGjAnNtZtjPb5oLsT9Wlf9az7hXTw)\n\nIt happens when run in development mode. This is caused by deprecated using [extract-text-webpack-plugin](https://github.com/webpack/extract-text-webpack-plugin) in development for getting a seamless hmr experience.(Why deprecated? See this [Issue](https://github.com/webpack/extract-text-webpack-plugin/issues/30)) If you are not an OCD, go ahead, ignore it.\n\n#### Mismatch\n\nIt happens also when run in development mode. This is caused by when you update the react component code and reload the page, the markup generated mismatches that on server render. However, once you restart the server, the checksum will be valid. So it is harmless, ignore it also.\n\n## Links\n\n[http://www.jianshu.com/p/0ecd727107bb](http://www.jianshu.com/p/0ecd727107bb)\n\n## License\n\n[MIT](https://github.com/chikara-chan/react-isomorphic-boilerplate/blob/master/LICENSE)\n"