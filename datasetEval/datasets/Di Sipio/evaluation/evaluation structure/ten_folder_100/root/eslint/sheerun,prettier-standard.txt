b'# ![prettier-standard](https://i.imgur.com/F62GQUk.png)\n\n[![Build Status][build-badge]][build] [![version][version-badge]][package] [![Modern Node](https://img.shields.io/badge/modern-node-9BB48F.svg)](https://github.com/sheerun/modern-node)\n\nFormats with [prettier](https://github.com/prettier/prettier) and lints with [eslint](https://eslint.org/) preconfigured with [standard](https://github.com/standard/standard) rules (\xe2\x9c\xbf\xe2\x97\xa0\xe2\x80\xbf\xe2\x97\xa0)\n\nYou don\'t have to fix any whitespace errors and waste time configuring eslint presets :relieved:\n\n## Installation\n\n```\nyarn add --dev prettier-standard\n```\n\n> If you\'re using the [`npm`][npm]: `npm install --save-dev prettier-standard`.\n\n> You can also install globally with `npm install -g prettier-standard`\n\n## Usage\n\n```\nUsage\n  $ prettier-standard [<glob>]\n\nOptions\n  --lint    Additionally lint code after formatting\n  --check   Do not format, just check formatting\n  --staged  Run only on staged files\n  --changed Run only on changed files\n  --since   Run only on changed files since given revision\n  --lines   Run only on changed lines (warning: experimental!)\n  --stdin   Force reading input from stdin\n  --parser  Force parser to use for stdin (default: babel)\n  --help    Tells how to use prettier-standard\n\nExamples\n  $ prettier-standard --changed --lint\n  $ prettier-standard --lint \'**/*.{js,css}\'\n  $ prettier-standard --since master\n  $ "precommit": "prettier-standard --lint --staged" # in package.json\n  $ echo \'const {foo} = "bar";\' | prettier-standard --stdin\n  $ echo \'.foo { color: "red"; }\' | prettier-standard --parser css\n```\n\nWarning: `--lines` flag should be considered experimental as prettier has issues with range formatting:\n\n- https://github.com/prettier/prettier/issues/4926\n- https://github.com/prettier/prettier/issues/6428\n\n## Usage\n\nTypically you\'ll use this in your [npm scripts][npm scripts] (or [package scripts][package scripts]):\n\n```json\n{\n  "scripts": {\n    "format": "prettier-standard --format"\n  }\n}\n```\n\nWe also encourage to use [modern-node](https://github.com/sheerun/modern-node) and [lint-staged](https://github.com/okonet/lint-staged). You can configure it as follows:\n\n```json\n{\n  "scripts": {\n    "precommit": "lint-staged"\n  },\n  "lint-staged": {\n    "linters": {\n      "**/*": ["prettier-standard --lint", "git add"]\n    }\n  }\n}\n```\n\nNOTE: Unlike [prettier](https://github.com/prettier/prettier) this package simplifies your workflow by making `--write` flag a default, and allowing for passing code to stdin without additional `--stdin` flag.\n\n### Vim\n\nIt\'s probably best to use [ale](https://github.com/w0rp/ale) plugin. It supports multiple fixers, including prettier-standard:\n\n```\nPlug \'w0rp/ale\'\nlet g:ale_fixers = {\'javascript\': [\'prettier_standard\']}\nlet g:ale_linters = {\'javascript\': [\'\']}\nlet g:ale_fix_on_save = 1\n```\n\n### Sublime Text 3\n\nIt\'s possible to use \'prettier-standard\' with Sublime Text 3.\n\n1. Install \'prettier-standard\' globally according to the installation instructions above.\n2. Find the location of your installed executable file.\n   On a unix based system (like MacOS):\n\n```curl\n$ which prettier-standard\n```\n\n3. Copy the location. (e.g. `/usr/local/bin/prettier-standard`)\n4. Install [SublimeJsPrettier](https://github.com/jonlabelle/SublimeJsPrettier) according to their installation instructions.\n5. Open SublimeJsPrettier\'s default settings in Sublime and copy the line: `"prettier_cli_path": ""`\n6. Open SublimeJsPrettier\'s user settings in Sublime and add the line with the correct location of the \'prettier-standard\' executable.\n\n```json\n{\n  "prettier_cli_path": "/usr/local/bin/prettier-standard"\n}\n```\n\nYou can now use \'prettier-standard\' in Sublime Text 3 by opening the **Command Palette** (super + shift + p) and typing `JsPrettier: Format Code`.\n\n## Customizing\n\nYou can use .prettierrc for overriding some options, e.g to use [semistandard](https://www.npmjs.com/package/semistandard):\n\n```json\n{\n  "semi": true\n}\n```\n\nYou can also configure linting by creating appropriate [.eslintrc]() file that will override defaults:\n\n```json\n{\n  "rules": {\n    "eqeqeq": "off"\n  }\n}\n```\n\n### Ignoring Files\n\nYou can use `.prettierignore` file for ignoring any files to format, e.g:\n\n```\ndist\n.next\n**/*.ts\n```\n\nThis package currently doesn\'t recognize `.eslintignore` file for linting and just uses `.prettierignore`.\n\n### API\n\nprettier-standard exposes the same API as prettier: https://prettier.io/docs/en/api.html\n\nIt also exposes one additional method that works similarly to its CLI:\n\n`run(cwd, config)`\n\n- **cwd** - path where to execute prettier-standard\n- **config** - object configuring execution\n  - **patterns** - patterns to use for formatting files (array of strings)\n  - **check** - whether to check instead of format files (boolean, default: false)\n  - **lint** - whether to perform linting (boolean, default: false)\n  - **changed** - whether to format only changed lines (boolean, experimental, default: false)\n  - **since** - format changes that happened since given branch (string, optional, example: "master")\n  - **onProcess** - callback that is called for each processed file matching pattern: { file, formatted, check, runtime }\n\n## LICENSE\n\nMIT\n\n[yarn]: https://yarnpkg.com/\n[npm]: https://www.npmjs.com/\n[node]: https://nodejs.org\n[build-badge]: https://img.shields.io/travis/sheerun/prettier-standard.svg?style=flat-square\n[build]: https://travis-ci.org/sheerun/prettier-standard\n[coverage-badge]: https://img.shields.io/codecov/c/github/sheerun/prettier-standard.svg?style=flat-square\n[coverage]: https://codecov.io/github/sheerun/prettier-standard\n[dependencyci-badge]: https://dependencyci.com/github/sheerun/prettier-standard/badge?style=flat-square\n[dependencyci]: https://dependencyci.com/github/sheerun/prettier-standard\n[version-badge]: https://img.shields.io/npm/v/prettier-standard.svg?style=flat-square\n[package]: https://www.npmjs.com/package/prettier-standard\n[npm scripts]: https://docs.npmjs.com/misc/scripts\n[package scripts]: https://github.com/kentcdodds/p-s\n[glob]: https://github.com/isaacs/node-glob\n'