b'# Awesome Standard [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\nDocumenting the explosion of packages in the [`standard`](https://github.com/feross/standard) ecosystem!\n\n## standard\n\n- **[standard](https://www.npmjs.com/package/standard)** - JavaScript Standard Style. One Style to Rule Them All!\n\n## usage stats\n\n- **[npm packages that use standard (full list)](https://github.com/feross/standard-packages/blob/master/all.json)** - List of packages that use `standard`\n- **[download graphs of standard (npm-stat.com)](http://npm-stat.com/charts.html?package=standard&author=&from=&to=)** - npm registry download count\n- **[top npm packages (gist)](https://gist.github.com/feross/e0882df2fe673d6ce064)** - standard is one of the\xc2\xa0top packages on npm\n\n## packages used by standard\n\n- **[eslint](https://www.npmjs.com/package/eslint)** - AST-based pattern checker for JavaScript\n- **[standard-engine](https://www.npmjs.com/package/standard-engine)** - standard\'s guts, extracted into a reuseable package. build your own!\n- **[eslint-config-standard](https://www.npmjs.com/package/eslint-config-standard)** - standard eslint rules, as a shareable config\n- **[eslint-config-standard-jsx](https://www.npmjs.com/package/eslint-config-standard-jsx)** - standard eslint rules for JSX\n- **[eslint-plugin-standard](https://www.npmjs.com/package/eslint-plugin-standard)** - standard custom eslint rules (not part of eslint core)\n\n## automatic code formatters\n\n- `standard --fix` - automatic formatting is built-in\xc2\xa0to `standard`!\n- **[prettier-standard](https://www.npmjs.com/package/prettier-standard)** - format with [prettier](https://github.com/prettier/prettier) configured to standard rules\n- **["unix commands" gist](https://gist.github.com/watson/453fc63cace521fcdadc)** - A list of search and replace unix commands to help make a node repository \'standard\' compliant\n\n## editor plugins\n- Every major text editor has a plugin or built-in support for `standard`. See the [full list](https://github.com/standard/standard#are-there-text-editor-plugins) of supported editors.\n- Atom: **[linter-js-standard](https://atom.io/packages/linter-js-standard)** - linter\n- Atom: **[linter-js-standard-engine](https://atom.io/packages/linter-js-standard-engine)** - linter\n- Atom: **[standard-formatter](https://atom.io/packages/standard-formatter)** - auto-fixer\n- Atom: **[standardjs-snippets](https://atom.io/packages/standardjs-snippets)** - code snippets\n- Brackets: **[brackets-standard](https://github.com/ishamf/brackets-standard/)** - linter\n- Emacs: see [readme](https://github.com/standard/standard#emacs)\n- Sublime Text: **[SublimeLinter-contrib-standard](https://packagecontrol.io/packages/SublimeLinter-contrib-standard)** - linter\n- Sublime Text: **[StandardFormat](https://packagecontrol.io/packages/StandardFormat)** - auto-fixer\n- Visual Studio Code: **[vscode-standardjs](https://marketplace.visualstudio.com/items?itemName=chenxsan.vscode-standardjs)** - linter & auto-fixer\n- Vim: see [readme](https://github.com/standard/standard#vim)\n- Visual Studio Code: **[vscode-standardjs-snippets](https://marketplace.visualstudio.com/items?itemName=capaj.vscode-standardjs-snippets)** - code snippets\n- Visual Studio Code: **[vscode-react-standard](https://marketplace.visualstudio.com/items?itemName=TimonVS.ReactSnippetsStandard)** - code snippets\n- WebStorm (PhpStorm, IntelliJ, RubyMine, JetBrains, etc.): built-in support. see [readme](https://github.com/standard/standard#webstorm-phpstorm-intellij-rubymine-jetbrains-etc)\n\n## pretty terminal output (reporters)\n\n- **[snazzy](https://www.npmjs.com/package/snazzy)** - Format JavaScript Standard Style as Stylish (i.e. snazzy) output\n- **[standard-tap](https://www.npmjs.com/package/standard-tap)** - Format JavaScript Standard Style as TAP output\n- **[standard-json](https://www.npmjs.com/package/standard-json)** - Format JavaScript Standard Style output to a JSON array\n- **[standard-reporter](https://www.npmjs.com/package/standard-reporter)** - Reporters for feross/standard via unix pipes, many options\n- **[standard-summary](https://www.npmjs.com/package/standard-summary)** - Display output as a list of errors, ordered by count\n\n## build tools\n\n- **[grunt-standard](https://www.npmjs.com/package/grunt-standard)** - Grunt plugin for standard\n- **[gulp-standard](https://www.npmjs.com/package/gulp-standard)** - Gulp plugin for standard\n- **[mocha-standard](https://www.npmjs.com/package/mocha-standard)** - Integrates standard into your mocha tests\n- **[standard-loader](https://www.npmjs.com/package/standard-loader)** - Lint webpack builds with standard\n- **[docker-standard](https://hub.docker.com/r/geniousphp/standard-js/)** - Standardjs Docker image to easily and quickly lint and report javascript files. Very useful in Docker based build systems.\n- **[rollup-plugin-standard](https://www.npmjs.com/package/rollup-plugin-standard)** - Lint Rollup builds with Standard\n\n## code/project generators\n\n- **[generator-babel-standard](https://www.npmjs.com/package/generator-babel-standard)** - Yeoman generator for new packages with babel and standard\n- **[generate-swap-project](https://www.npmjs.com/package/generate-swap-project)** - Generate Your ESNext+StandardJS+Mocha Ready, NodeJS Projects in Seconds!\n- **[generate-swap-generator](https://www.npmjs.com/package/generate-swap-generator)** Generate Your Own ESNext+StandardJS+Mocha Ready NodeJS Generators In Seconds!\n# inspired by `standard`\n\n- **[standard-markdown](https://www.npmjs.com/package/standard-markdown)** - Lint all the javascript code blocks in your markdown files\n- **[stylelint-config-standard](https://www.npmjs.com/package/stylelint-config-standard)** - The standard shareable config for stylelint.\n- **[standard-sass](https://www.npmjs.com/package/standard-sass)** - Sass & Scss & Css Standard Style. One Style to Rule Them All!\n\n## forks\n\n- **[semistandard](https://www.npmjs.com/package/semistandard)** - standard, with semicolons\n- **[uber-standard](https://www.npmjs.com/package/uber-standard)** - fork by the [Uber](https://www.uber.com/) team\n- **[videojs-standard](https://www.npmjs.com/package/videojs-standard)** - fork by the [video.js](https://github.com/videojs/video.js) team\n- **[yodlr-standard](https://www.npmjs.com/package/yodlr-standard)** - fork by the [yodlr](https://getyodlr.com/home) team\n- **[happiness](https://www.npmjs.com/package/happiness)** - standard customized to make @JedWatson happy\n- **[doublestandard](https://www.npmjs.com/package/doublestandard)** - standard, with even more semicolons\n- **[xo](https://www.npmjs.com/package/xo)** - "JavaScript happiness style"\n- **[jsw](https://www.npmjs.com/package/jsw)** - "the spec doesnt care about semicolons and neither should you"\n- **[obama](https://www.npmjs.com/package/obama)** - Move forward and standardize with Obama\n- **[aStandard](https://npmjs.com/package/a-standard)** - A stricter standard made for babel and es7\n- **[standard-own](https://npmjs.com/package/standard-own)** - standard but with more customization and individual rules.\n- **[standard-focus](https://www.npmjs.com/package/standard-focus)** - Focus on one error at a time.\n- **[standa](https://www.npmjs.com/package/standa)** standard without JSX rules.\n\nPRs welcome!\n\n## License\n\n[![CC0](https://i.creativecommons.org/p/zero/1.0/88x31.png)](http://creativecommons.org/publicdomain/zero/1.0/)\n\nTo the extent possible under law, [Feross Aboukhadijeh](http://feross.org) has waived all copyright and related or neighboring rights to this work.\n'