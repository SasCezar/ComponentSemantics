b"# YARSK\n\n**Y**et **A**nother **R**eact **S**tarter **K**it.\n\nEveryone has one, here's mine.\n\n## Features\n\n* [React](http://facebook.github.io/react/), of course.\n* [Webpack](http://webpack.github.io/) for asset bundling.\n* Hot reloading enabled out of the box. Changes to React components will show in the browser immediately without a full reload thanks to [react-transform-hmr](https://github.com/gaearon/react-transform-hmr).\n* [Babel](https://babeljs.io/) for ES6+ transpilation.\n* [SASS](http://sass-lang.com/) (SCSS or Sass style), [Less](http://lesscss.org/), and [Autoprefixer](https://github.com/postcss/autoprefixer) enabled by default through Webpack.\n* Image loaders setup and ready to go so you can reference your images as `require()` statements in JS, or just use `url()` as usual in CSS and Webpack will take care of the rest. See the [Header](https://github.com/bradleyboy/yarsk/blob/master/app/components/Header/index.jsx#L9-L18) component and the [Application component stylesheet](https://github.com/bradleyboy/yarsk/blob/master/app/components/Application/style.sass#L2) for examples of each.\n* [Karma](http://karma-runner.github.io/0.12/index.html) + [Mocha](http://mochajs.org/) + [Enyzme](https://github.com/airbnb/enzyme) for testing. [Istanbul](https://gotwarlost.github.io/istanbul/) and [isparta](https://github.com/douglasduteil/isparta) are also activated with `karma-coverage` for code coverage analysis, even on your ES6 classes. See [Testing](https://github.com/bradleyboy/yarsk#tests) below for more info.\n* Production configuration with best practices applied for optimizing React file size. The bundled JS file produced from this example is right at 40KB minified and gzipped. See [Building](https://github.com/bradleyboy/yarsk#building) below for more info.\n* Built-in command for publishing your app to GitHub pages. See [Building](https://github.com/bradleyboy/yarsk#building) below for more info.\n* [Optional support for ESLint via babel-eslint](https://github.com/bradleyboy/yarsk#linting).\n\nThis kit is intentionally missing a specific Flux implementation, or any other non-essential library, as I use this as a base for experimenting with various parts of the React ecosystem.\n\n## In the wild\n\n* [React TODO app with Flummox](https://github.com/bradleyboy/react-todo-flummox)\n\n## Usage\n\nFork this repo, then run:\n\n```\nnpm install\nnpm start\n```\n\nThat will fire up a webpack dev server in **hot** mode. Most changes will be reflected in the browser automatically without a browser reload. You can view the app in the browser at `http://localhost:8080`.\n\n## Building\n\nTo generate a production build, run:\n\n```\nnpm run build\n```\n\nThe above command will generate a `dist` folder with the appropriate index.html file along with the minified CSS and JS files.\n\nYou can also automatically publish to GitHub pages. Just run this instead of the regular build command:\n\n```\nnpm run build:gh\n```\n\nYou can then view your app at `http://[yourgithubusername].github.io/[reponame]`. For example, you can load this demo at http://bradleyboy.github.io/yarsk.\n\n## Modifying the HTML\n\nThe HTML file is generated using the `conf/tmpl.html` file. This file is used for both the development and production build.\n\n## Tests\n\nThe tests use Karma, Mocha and Chai through PhantomJS. See the example test in `app/components/Application/__tests__/index.js`. The test suite can be run like so:\n\n```\nnpm test\n```\n\nTo run the tests in watch mode (tests will re-run each time a file changes), use this instead:\n\n```\nnpm run test:watch\n```\n\nYou can generate code coverage reports with:\n\n```\nnpm run test:coverage\n```\n\nSee the `coverage` directory once that command is completed.\n\nFinally, the repo is [Travis](https://travis-ci.org) ready. The `.travis.yml` file should work out of the box, just add your repo in Travis.\n\n## Linting\n\nIf you'd like your JavaScript to be linted, copy the `.eslintrc.example` to `.eslintrc`. I've included my own defaults, feel free to modify them to your own taste. For more information on configuring ESLint, [consult its documentation](http://eslint.org/docs/rules/). Linting is run before each webpack build when a `.eslintrc` file is present.\n\n## .editorconfig\n\nAn example `.editorconfig` file is provided with sensible defaults for JavaScript. Feel free to modify `.editorconfig.example` to match your own preferences, then renamed the file to `.editorconfig` and use an IDE or editor that supports [EditorConfig](http://editorconfig.org/).\n"