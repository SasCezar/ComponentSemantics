b'# Pixel2Mesh\nThis repository contains the TensorFlow implementation for the following paper</br>\n\n[Pixel2Mesh: Generating 3D Mesh Models from Single RGB Images (ECCV2018)](http://openaccess.thecvf.com/content_ECCV_2018/papers/Nanyang_Wang_Pixel2Mesh_Generating_3D_ECCV_2018_paper.pdf)</br>\n\nNanyang Wang*, [Yinda Zhang](http://robots.princeton.edu/people/yindaz/)\\*, [Zhuwen Li](http://www.lizhuwen.com/)\\*, [Yanwei Fu](http://yanweifu.github.io/), [Wei Liu](http://www.ee.columbia.edu/~wliu/), [Yu-Gang Jiang](http://www.yugangjiang.info/).\n\nThe code is based on the [gcn](https://github.com/tkipf/gcn) framework.\n\n#### Citation\nIf you use this code for your research, please consider citing:\n\n    @inProceedings{wang2018pixel2mesh,\n      title={Pixel2Mesh: Generating 3D Mesh Models from Single RGB Images},\n      author={Nanyang Wang and Yinda Zhang and Zhuwen Li and Yanwei Fu and Wei Liu and Yu-Gang Jiang},\n      booktitle={ECCV},\n      year={2018}\n    }\n\n# Project Page\nThe project page is available at http://bigvid.fudan.edu.cn/pixel2mesh\n\n# Dependencies\nRequirements:\n* Python2.7+ with Numpy and scikit-image\n* [Tensorflow (version 1.0+)](https://www.tensorflow.org/install/)\n* [TFLearn](http://tflearn.org/installation/)\n\nOur code has been tested with Python 2.7, **TensorFlow 1.3.0**, TFLearn 0.3.2, CUDA 8.0 on Ubuntu 14.04.\n\n# Running the demo\n```\ngit clone https://github.com/nywang16/Pixel2Mesh.git\ncd Data/\n```\nDownload the pre-trained model and unzip to the `Data/` folder.\n* https://drive.google.com/file/d/1gD-dk-XrAa5mfrgdZSunjaS6pUUWsZgU/view?usp=sharing\n```\nunzip checkpoint.zip\n```\n\n#### Reconstructing shapes\n    python demo.py --image Data/examples/plane.png\nRun the demo code and the output mesh file is saved in `Data/examples/plane.obj` \n\n#### Input image, output mesh\n<img src="./Docs/images/plane.png" width = "330px" /><img src="./Docs/images/plane.gif" />\n\n# Installation\n\nIf you use CD and EMD for training or evaluation, we have included the cuda implementations of [Fan et. al.](https://github.com/fanhqme/PointSetGeneration) in external/\n\n    cd Pixel2Mesh/external/\n\n    Modify the first 3 lines of the makefile to point to your nvcc, cudalib and tensorflow library.\n\n    make\n\n\n# Dataset\n\nWe used the [ShapeNet](https://www.shapenet.org) dataset for 3D models, and rendered views from [3D-R2N2](https://github.com/chrischoy/3D-R2N2):</br>\nWhen using the provided data make sure to respect the shapenet [license](https://shapenet.org/terms).\n\nBelow is the complete set of training data. Download it into the `Data/` folder.\n\nhttps://drive.google.com/open?id=131dH36qXCabym1JjSmEpSQZg4dmZVQid </br>\n\n\nThe training/testing split can be found in `Data/train_list.txt` and `Data/test_list.txt` </br>\n    \nEach .dat file in the provided data contain: </br>\n* The sampled point cloud (with vertex normal) from ShapeNet. We transformed it to corresponding coordinates in camera coordinate based on camera parameters from the Rendering Dataset.\n\n**Input image, ground truth point cloud.**</br>\n<img src="./Docs/images/car_example.png" width = "350px" />\n![label](./Docs/images/car_example.gif)\n\n# Training\n    python train.py\nYou can change the training data, learning rate and other parameters by editing `train.py`\n\nThe total number of training epoch is 30; the learning rate is initialized as 3e-5 and drops to 1e-5 after 25 epochs.\n\n# Evaluation\nThe evaluation code was released, please refer to `eval_testset.py` for more details.\n\nNotice that the 3D shape are downscaled by a factor of 0.57 to generate rendering. As result, all the numbers shown in experiments used 0.57xRaw Shape for evaluation. This scale may be related to the render proccess, we used the rendering data from 3DR2N2 paper, and this scale was there since then for reason that we don\'t know.\n\n# Statement\nThis software is for research purpose only. </br>\nPlease contact us for the licence of commercial purposes. All rights are preserved.\n\n# Contact\nNanyang Wang (nywang16 AT fudan.edu.cn)\n\nYinda Zhang (yindaz AT cs.princeton.edu)\n\nZhuwen Li (lzhuwen AT gmail.com)\n\nYanwei Fu (yanweifu AT fudan.edu.cn)\n\nYu-Gang Jiang (ygj AT fudan.edu.cn)\n\n# License\nApache License version 2.0'