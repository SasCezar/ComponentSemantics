b'# Clay Viewer\n\n3D model viewer with high quality rendering based on [ClayGL](https://github.com/pissang/claygl) and [glTF2.0/GLB](https://github.com/KhronosGroup/glTF) export.\n\n\n## App\n\n[Download App](https://github.com/pissang/clay-viewer/releases/) on Windows and macOS with FBX/DAE/OBj import and glTF2.0/GLB export. Use it as a common model preview tool!\n\n## Editor\n\n<a href="https://pissang.github.io/clay-viewer/editor/">\n    <img src="./screenshots/editor.jpg" width="600px" />\n</a>\n\n<a href="https://pissang.github.io/clay-viewer/editor/">\n    <img src="./screenshots/editor2.jpg" width="600px" />\n</a>\n\n## Loader\n\n```js\nvar viewer = new ClayViewer(document.getElementById(\'main\'), {\n    // Full config at\n    // https://github.com/pissang/clay-viewer/blob/master/src/defaultSceneConfig.js\n    devicePixelRatio: 1,\n    // Enable shadow\n    shadow: true,\n    shadowQuality: \'high\',\n    // Environment panorama texture url.\n    environment: \'env.jpg\',\n    mainLight: {\n        intensity: 2.0\n    },\n    ambientCubemapLight: {\n        exposure: 1,\n        diffuseIntensity: 0.2,\n        texture: \'asset/texture/example1.jpg\'\n    },\n    postEffect: {\n        // Enable post effect\n        enable: true,\n        bloom: {\n            // Enable bloom\n            enable: true\n        },\n        screenSpaceAmbientOcculusion: {\n            // Enable screen space ambient occulusion\n            enable: true\n        }\n    }\n});\n\n// Load a glTF model\n// Model will be fit in 10x10x10 automatically after load.\n// Return an eventful object.\nviewer.loadModel(\'asset/xiniu/xiniu_walk_as.gltf\', {\n        // Shading mode. \'standard\'|\'lambert\'\n        shader: \'standard\'\n    })\n    // Model loaded. not include textures.\n    .on(\'loadmodel\', function (modelStat) {\n        // Set camera options.\n        viewer.setCameraControl({\n            // Alpha is rotation from bottom to up.\n            alpha: 10,\n            // Beta is rotation from left to right.\n            beta: 30,\n            distance: 20,\n            // Min distance of zoom.\n            minDistance: 1,\n            // Max distance of zoom.\n            maxDistance: 100,\n\n            // Center of target.\n            center: [0, 0, 0],\n\n            // If auto rotate.\n            autoRotate: false,\n\n            // Degree per second.\n            autoRotateSpeed: 60,\n\n            // Direction of autoRotate. cw or ccw when looking top down.\n            autoRotateDirection: \'cw\',\n\n            // Start auto rotating after still for the given time\n            autoRotateAfterStill: 30\n        });\n\n        // Set main light options.\n        viewer.setMainLight({\n            // Main light intensity\n            intensity: 1,\n            // Main light color string\n            color: \'#fff\',\n            // Alpha is rotation from bottom to up.\n            alpha: 45,\n            // Beta is rotation from left to right.\n            beta: 45\n        });\n        // Set ambient light options\n        viewer.setAmbientLight({\n            // Ambient light intensity\n            intensity: 0.8\n        });\n\n        viewer.start();\n\n        // Load extra animation glTF\n        viewer.loadAnimation(\'asset/xiniu/xiniu_stand_as.gltf\')\n            .on(\'success\', function () {\n                console.log(\'Changed animation\')\n            });\n        // Animation pause and start\n        viewer.pauseAnimation();\n        viewer.resumeAnimation();\n\n        // Print model stat.\n        console.log(\'Model loaded:\');\n        console.log(\'\xe4\xb8\x89\xe8\xa7\x92\xe9\x9d\xa2\xef\xbc\x9a\', modelStat.triangleCount);\n        console.log(\'\xe9\xa1\xb6\xe7\x82\xb9\xef\xbc\x9a\', modelStat.vertexCount);\n        console.log(\'\xe5\x9c\xba\xe6\x99\xaf\xe8\x8a\x82\xe7\x82\xb9\xef\xbc\x9a\', modelStat.nodeCount);\n        console.log(\'Mesh\xef\xbc\x9a\', modelStat.meshCount);\n        console.log(\'\xe6\x9d\x90\xe8\xb4\xa8\xef\xbc\x9a\', modelStat.materialCount);\n        console.log(\'\xe7\xba\xb9\xe7\x90\x86\xef\xbc\x9a\', modelStat.textureCount);\n    })\n    .on(\'ready\', function () {\n        console.log(\'All loaded inlcuding textures.\');\n    })\n    .on(\'error\', function () {\n        console.log(\'Model load error\');\n    });\n\n```\n\n[Here](https://github.com/pissang/clay-viewer/blob/master/src/defaultSceneConfig.js) is the full graphic configuration\n\n## Converter\n\nClayGL provide a python tool for converting FBX to glTF 2.0.\n\nhttps://github.com/pissang/claygl/blob/master/tools/fbx2gltf.py\n\nNeeds [python3.3](https://www.python.org/download/releases/3.3.0/) and [FBX SDK 2018.1.1](http://usa.autodesk.com/adsk/servlet/pc/item?siteID=123112&id=26416130)\n\n```\nusage: fbx2gltf.py [-h] [-e EXCLUDE] [-t TIMERANGE] [-o OUTPUT]\n                    [-f FRAMERATE] [-p POSE] [-q] [-b]\n                    file\n\nFBX to glTF converter\n\npositional arguments:\n  file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -e EXCLUDE, --exclude EXCLUDE\n                        Data excluded. Can be: scene,animation\n  -t TIMERANGE, --timerange TIMERANGE\n                        Export animation time, in format\n                        \'startSecond,endSecond\'\n  -o OUTPUT, --output OUTPUT\n                        Ouput glTF file path\n  -f FRAMERATE, --framerate FRAMERATE\n                        Animation frame per second\n  -p POSE, --pose POSE  Start pose time\n  -q, --quantize        Quantize accessors with WEB3D_quantized_attributes\n                        extension\n  -b, --binary          Export glTF-binary\n  --beautify            Beautify json output.\n  --noflipv             If not flip v in texcoord.\n```\n\n\n## Seperate scene and animation\n\nExport scene\n\n```bash\n# exclude animation\nfbx2gltf2.py -e animation -p 0 xxx.fbx\n```\n\nExport animation\n\n```bash\n# exclude scene, 0 to 20 second, 20 framerate.\nfbx2gltf2.py -e scene -t 0,20 -f 20 -o xxx_ani.gltf xxx.fbx\n```\n\nLoad scene and animation asynchronously\n\n```js\nviewer.loadModel(\'asset/xiniu/xiniu.gltf\')\n    // Model loaded. not include textures.\n    .on(\'loadmodel\', function (modelStat) {\n        viewer.start();\n        // Load extra animation glTF\n        viewer.loadAnimation(\'asset/xiniu/xiniu_ani.gltf\');\n    });\n```\n\n## Build\n\n```bash\nnpm install\n# Build loader\nnpm run build\n# Build editor\nwebpack --config editor/webpack.config.js\n```\n'