b"#######\nPyVista\n#######\n\n.. image:: https://github.com/pyvista/pyvista/raw/master/docs/_static/pyvista_logo.png\n    :alt: pyvista\n\n\n.. |zenodo| image:: https://zenodo.org/badge/92974124.svg\n   :target: https://zenodo.org/badge/latestdoi/92974124\n\n.. |joss| image:: http://joss.theoj.org/papers/10.21105/joss.01450/status.svg\n   :target: https://doi.org/10.21105/joss.01450\n\n.. |pypi| image:: https://img.shields.io/pypi/v/pyvista.svg?logo=python&logoColor=white\n   :target: https://pypi.org/project/pyvista/\n\n.. |conda| image:: https://img.shields.io/conda/vn/conda-forge/pyvista.svg?logo=conda-forge&logoColor=white\n   :target: https://anaconda.org/conda-forge/pyvista\n\n.. |travis| image:: https://img.shields.io/travis/pyvista/pyvista/master.svg?label=build&logo=travis\n   :target: https://travis-ci.org/pyvista/pyvista\n\n.. |azure| image:: https://dev.azure.com/pyvista/PyVista/_apis/build/status/pyvista.pyvista?branchName=master\n   :target: https://dev.azure.com/pyvista/PyVista/_build/latest?definitionId=3&branchName=master\n\n.. |codecov| image:: https://codecov.io/gh/pyvista/pyvista/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/pyvista/pyvista\n\n.. |codacy| image:: https://api.codacy.com/project/badge/Grade/e927f0afec7e4b51aeb7785847d0fd47\n   :target: https://www.codacy.com/app/banesullivan/pyvista?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=akaszynski/pyvista&amp;utm_campaign=Badge_Grade\n\n\n+----------------------+------------------------+\n| Deployment           | |pypi| |conda|         |\n+----------------------+------------------------+\n| Build Status         | |travis| |azure|       |\n+----------------------+------------------------+\n| Metrics              | |codacy| |codecov|     |\n+----------------------+------------------------+\n| Citation             | |joss| |zenodo|        |\n+----------------------+------------------------+\n\n\nPyVista (formerly ``vtki``) is a helper module for the Visualization Toolkit\n(VTK) that takes a different approach on interfacing with VTK through NumPy and\ndirect array access. \nThis package provides a Pythonic, well-documented interface exposing\nVTK's powerful visualization backend to facilitate rapid prototyping, analysis,\nand visual integration of spatially referenced datasets.\n\nThis module can be used for scientific plotting for presentations and research\npapers as well as a supporting module for other mesh 3D rendering dependent\nPython modules; see Connections for a list of projects that leverage\nPyVista.\n\n\n.. |tweet| image:: https://img.shields.io/twitter/url.svg?style=social&url=http%3A%2F%2Fshields.io\n   :target: https://twitter.com/intent/tweet?text=Check%20out%20this%20project%20for%203D%20visualization%20in%20Python&url=https://github.com/pyvista/pyvista&hashtags=3D,visualization,Python,vtk,mesh,plotting,PyVista\n\nShare this project on Twitter: |tweet|\n\n\nHighlights\n==========\n\n.. |binder| image:: https://static.mybinder.org/badge_logo.svg\n   :target: https://mybinder.org/v2/gh/pyvista/pyvista-examples/master\n   :alt: Launch on Binder\n\nHead over to the `Quick Examples`_ page in the docs to explore our gallery of\nexamples showcasing what PyVista can do! Want to test-drive PyVista?\nAll of the examples from the gallery are live on MyBinder for you to test\ndrive without installing anything locally: |binder|\n\n.. _Quick Examples: http://docs.pyvista.org/examples/index.html\n\n\nOverview of Features\n--------------------\n\n* Embeddable rendering in Jupyter Notebooks\n* Filtering/plotting tools built for interactivity (see `Widgets`_)\n* Direct access to mesh analysis and transformation routines (see Filters_)\n* Intuitive plotting routines with ``matplotlib`` similar syntax (see Plotting_)\n* Import meshes from many common formats (use ``pyvista.read()``)\n* Export meshes as VTK, STL, OBJ, or PLY file types\n\n\n.. _Widgets: https://docs.pyvista.org/plotting/widgets.html\n.. _Filters: https://docs.pyvista.org/core/filters.html\n.. _Plotting: https://docs.pyvista.org/plotting/index.html\n\n\nDocumentation\n=============\n\nRefer to the `documentation <http://docs.pyvista.org/>`_ for detailed\ninstallation and usage details.\n\nFor general questions about the project, its applications, or about software\nusage, please create an issue in the `pyvista/pyvista-support`_ repository\nwhere the community can collectively address your questions. You are also\nwelcome to join us on join us on Slack_ or send one of the developers an email.\nThe project support team can be reached at `info@pyvista.org`_.\n\n.. _pyvista/pyvista-support: https://github.com/pyvista/pyvista-support\n.. _Slack: http://slack.pyvista.org\n.. _info@pyvista.org: mailto:info@pyvista.org\n\n\nInstallation\n============\n\nPyVista can be installed from `PyPI <https://pypi.org/project/pyvista/>`_\nusing ``pip`` on Python >= 3.5::\n\n    pip install pyvista\n\nYou can also visit `PyPi <https://pypi.org/project/pyvista/>`_,\n`Anaconda <https://anaconda.org/conda-forge/pyvista>`_, or\n`GitHub <https://github.com/pyvista/pyvista>`_ to download the source.\n\nSee the `Installation <http://docs.pyvista.org/getting-started/installation.html#install-ref.>`_\nfor more details if the installation through pip doesn't work out.\n\nConnections\n===========\n\nPyVista is a powerful tool that researchers can harness to create compelling,\nintegrated visualizations of large datasets in an intuitive, Pythonic manner.\nHere are a few open-source projects that leverage PyVista:\n\n* pyansys_: Pythonic interface to ANSYS result, full, and archive files\n* PVGeo_: Python package of VTK-based algorithms to analyze geoscientific data and models. PyVista is used to make the inputs and outputs of PVGeo's algorithms more accessible.\n* omfvista_: 3D visualization for the Open Mining Format (omf). PyVista provides the foundation for this library's visualization.\n* discretize_: Discretization tools for finite volume and inverse problems. ``discretize`` provides ``toVTK`` methods that return PyVista versions of their data types for `creating compelling visualizations`_.\n* pymeshfix_: Python/Cython wrapper of Marco Attene's wonderful, award-winning MeshFix software.\n* tetgen_: Python Interface to Hang Si's C++ TetGen Library\n\n\n.. _pyansys: https://github.com/akaszynski/pyansys\n.. _PVGeo: https://github.com/OpenGeoVis/PVGeo\n.. _omfvista: https://github.com/OpenGeoVis/omfvista\n.. _discretize: http://discretize.simpeg.xyz/en/master/\n.. _creating compelling visualizations: http://discretize.simpeg.xyz/en/master/api/generated/discretize.mixins.vtkModule.html\n.. _pymeshfix: https://github.com/pyvista/pymeshfix\n.. _MeshFix: https://github.com/MarcoAttene/MeshFix-V2.1\n.. _tetgen: https://github.com/pyvista/tetgen\n\n\nAuthors\n=======\n\nPlease take a look at the `contributors page`_ and the active `list of authors`_\nto learn more about the developers of PyVista.\n\n.. _contributors page: https://github.com/pyvista/pyvista/graphs/contributors/\n.. _list of authors: http://docs.pyvista.org/authors\n\n\nContributing\n============\n\nWe absolutely welcome contributions and we hope that our `Contributing Guide`_\nwill facilitate your ability to make PyVista better. PyVista is mostly\nmaintained on a volunteer basis and thus we need to foster a community that can\nsupport user questions and develop new features to make this software a useful\ntool for all users while encouraging every member of the commutinity to share\ntheir ideas. To learn more about contributing to PyVista, please see the\n`Contributing Guide`_ and our `Code of Conduct`_.\n\n.. _Contributing Guide: https://github.com/pyvista/pyvista/blob/master/CONTRIBUTING.md\n.. _Code of Conduct: https://github.com/pyvista/pyvista/blob/master/CODE_OF_CONDUCT.md\n\n\nCiting PyVista\n==============\n\nThere is a `paper about PyVista <https://doi.org/10.21105/joss.01450>`_!\n\nIf you are using PyVista in your scientific research, please help our scientific\nvisibility by citing our work!\n\n\n    Sullivan et al., (2019). PyVista: 3D plotting and mesh analysis through a streamlined interface for the Visualization Toolkit (VTK). Journal of Open Source Software, 4(37), 1450, https://doi.org/10.21105/joss.01450\n\n\nBibTex:\n\n.. code::\n\n    @article{sullivan2019pyvista,\n      doi = {10.21105/joss.01450},\n      url = {https://doi.org/10.21105/joss.01450},\n      year = {2019},\n      month = {may},\n      publisher = {The Open Journal},\n      volume = {4},\n      number = {37},\n      pages = {1450},\n      author = {C. Bane Sullivan and Alexander Kaszynski},\n      title = {{PyVista}: 3D plotting and mesh analysis through a streamlined interface for the Visualization Toolkit ({VTK})},\n      journal = {Journal of Open Source Software}\n    }\n"