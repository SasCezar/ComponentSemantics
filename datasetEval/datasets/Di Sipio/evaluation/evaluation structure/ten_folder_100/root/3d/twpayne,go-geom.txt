b'# go-geom\n\n[![Build Status](https://travis-ci.org/twpayne/go-geom.svg?branch=master)](https://travis-ci.org/twpayne/go-geom)\n[![GoDoc](https://godoc.org/github.com/twpayne/go-geom?status.svg)](https://godoc.org/github.com/twpayne/go-geom)\n[![Go Report Card](https://goreportcard.com/badge/github.com/twpayne/go-geom)](https://goreportcard.com/report/github.com/twpayne/go-geom)\n[![Coverage Status](https://coveralls.io/repos/github/twpayne/go-geom/badge.svg)](https://coveralls.io/github/twpayne/go-geom)\n\nPackage `geom` implements efficient geometry types for geospatial applications.\n\n## Key features\n\n* OpenGeo Consortium-style geometries.\n* Support for 2D and 3D geometries, measures (time and/or distance), and\n  unlimited extra dimensions.\n* Encoding and decoding of common geometry formats (GeoJSON, KML, WKB, and\n  others) including [`sql.Scanner`](https://godoc.org/database/sql#Scanner) and\n  [`driver.Value`](https://godoc.org/database/sql/driver#Value) interface\n  implementations for easy database integration.\n* [2D](https://godoc.org/github.com/twpayne/go-geom/xy) and\n  [3D](https://godoc.org/github.com/twpayne/go-geom/xyz) topology functions.\n* Efficient, cache-friendly [internal representation](INTERNALS.md).\n* Optional protection against malicious or malformed inputs.\n\n## Examples\n\n* [PostGIS, EWKB, and GeoJSON](https://github.com/twpayne/go-geom/tree/master/examples/postgis).\n\n## Detailed features\n\n### Geometry types\n\n* [Point](https://godoc.org/github.com/twpayne/go-geom#Point)\n* [LineString](https://godoc.org/github.com/twpayne/go-geom#LineString)\n* [Polygon](https://godoc.org/github.com/twpayne/go-geom#Polygon)\n* [MultiPoint](https://godoc.org/github.com/twpayne/go-geom#MultiPoint)\n* [MultiLineString](https://godoc.org/github.com/twpayne/go-geom#MultiLineString)\n* [MultiPolygon](https://godoc.org/github.com/twpayne/go-geom#MultiPolygon)\n* [GeometryCollection](https://godoc.org/github.com/twpayne/go-geom#GeometryCollection)\n\n### Encoding and decoding\n\n* [GeoJSON](https://godoc.org/github.com/twpayne/go-geom/encoding/geojson)\n* [IGC](https://godoc.org/github.com/twpayne/go-geom/encoding/igc)\n* [KML](https://godoc.org/github.com/twpayne/go-geom/encoding/kml) (encoding only)\n* [WKB](https://godoc.org/github.com/twpayne/go-geom/encoding/wkb)\n* [EWKB](https://godoc.org/github.com/twpayne/go-geom/encoding/ewkb)\n* [WKT](https://godoc.org/github.com/twpayne/go-geom/encoding/wkt) (encoding only)\n* [WKB Hex](https://godoc.org/github.com/twpayne/go-geom/encoding/wkbhex)\n* [EWKB Hex](https://godoc.org/github.com/twpayne/go-geom/encoding/ewkbhex)\n\n### Geometry functions\n\n* [XY](https://godoc.org/github.com/twpayne/go-geom/xy) 2D geometry functions\n* [XYZ](https://godoc.org/github.com/twpayne/go-geom/xyz) 3D geometry functions\n\n## Protection against malicious or malformed inputs\n\nThe WKB and EWKB formats encode geometry sizes, and memory is allocated for\nthose geometries. If the input is malicious or malformed, the memory allocation\ncan be very large, leading to a memory starvation denial-of-service attack\nagainst the server. For example, a client might send a `MultiPoint` with header\nindicating that it contains 2^32-1 points. This will result in the server\nreading that geometry to allocate 2 \xc3\x97 `sizeof(float64)` \xc3\x97 (2^32-1) = 64GB of\nmemory to store those points. By default, malicious or malformed input\nprotection is disabled, but can be enabled by setting positive values for\n`wkbcommon.MaxGeometryElements`.\n\n## Related libraries\n\n* [github.com/twpayne/go-gpx](https://github.com/twpayne/go-gpx) GPX encoding and decoding\n* [github.com/twpayne/go-kml](https://github.com/twpayne/go-kml) KML encoding\n* [github.com/twpayne/go-polyline](https://github.com/twpayne/go-polyline) Google Maps Polyline encoding and decoding\n* [github.com/twpayne/go-vali](https://github.com/twpayne/go-vali) IGC validation\n\n## License\n\nBSD-2-Clause'