b"OpenLayers - Cesium integration library. Create your map using [OpenLayers](https://openlayers.org/), and visualize it on a globe with [Cesium](https://cesiumjs.org).\nSee [live examples](https://openlayers.org/ol-cesium/examples/).\n\n\nES6 modules\n-----------\n\nSince version 2.0, the code is entirely based on ES6 modules and syntax.\nIt requires OpenLayers 5.x.\nA convenient ES6 package `olcs` is available on npm.\n\nFeatures\n--------\nSwitch smoothly between 2D and 3D and synchronize:\n\n- Map context (bounding box and zoom level);\n- Raster data sources;\n- Vector data sources in 2D and 3D;\n- Map selection (selected items);\n- Animated transitions between map and globe view.\n\nThe library is configurable and extensible and allows:\n\n- Lazy or eager loading of Cesium\n- Limiting Cesium resource consumption (idle detection)\n\nFor synchronization of maps in projections other than EPSG:4326 and EPSG:3857, see [#562](https://github.com/openlayers/ol-cesium/pull/562) branch.\n\nIntegration in your application\n-------------------------------\n\nThere are several ways to use OL-Cesium in your application.\n\n### As an ES6 library (recommended method)\n```bash\nnpm i --save olcs\n```\n\nThen import the parts you need. Example:\n```js\nimport OLCesium from 'olcs/OLCesium.js';\nconst ol3d = new OLCesium({map: ol2dMap}); // ol2dMap is the ol.Map instance\nol3d.setEnabled(true);\n```\n\nFor Cesium integration see [ol-cesium-webpack-example](https://github.com/gberaudo/ol-cesium-webpack-example)\nbased on the official `Cesium With Webpack` example.\n\n### As an old-fashioned independent library\n\n- build the library in dist/olcs.js:\n```bash\nnpm i --save olcs\nnpm run build-library\n```\n\n- get the CSS from css/olcs.css;\n\n- if needed build a [full OL5 build](https://github.com/geoblocks/legacylib/tree/master/ol5);\n\n- use as follow:\n```js\nconst ol3d = new olcs.OLCesium({map: ol2dMap}); // ol2dMap is the ol.Map instance\nol3d.setEnabled(true);\n```\n\nIn addition, see the [old fashioned example](https://openlayers.org/ol-cesium/examples/oldfashioned.html).\n\n### As an UMD library (Angular, ...)\n```bash\nnpm i --save ol-cesium\n```\nThe UMD-specific build is located here: `node_modules/ol-cesium/dist/olcesium.umd.js`  \n\n\nThen import the parts you need. Example:\n```js\nimport OLCesium from 'olcs/OLCesium.js';\nconst ol3d = new OLCesium({map: ol2dMap}); // ol2dMap is the ol.Map instance\nol3d.setEnabled(true);\n```\n\nGoing further\n-------------\n\nSee the [examples](https://openlayers.org/ol-cesium/examples/).\n\nIf you are new to Cesium, you should also check the [Cesium tutorials](https://cesiumjs.org/tutorials).\n\n\nRunning the examples in debug mode\n----------------------------------\n\nThis is useful for contributing to Ol-Cesium, because it loads the\nsource files instead of a minified build:\n\n    $ make serve\n\nwill make the distribution examples available at http://localhost:3000/examples\n\nRunning the unminified version of Cesium\n----------------------------------------\n\nPassing the parameter `?mode=dev` to an example will load the debug version of\nCesium instead of the minified one. This is helpful when something breaks inside\nCesium. In distribution mode, an unminified version of OpenLayers and Ol-Cesium is\nalso loaded.\n\nLimitations\n-----------\n\n- OpenLayers unmanaged layers are not discoverable and as a consequence not\nsupported. Plain layers should be used instead of the synchronization managed\nmanually. See https://github.com/openlayers/ol-cesium/issues/350.\n\n- OpenLayers interactions are not supported in 3d. See https://github.com/openlayers/ol-cesium/issues/655.\n\nRelease process\n---------------\n\nSee [RELEASE.md](https://github.com/openlayers/ol-cesium/blob/master/RELEASE.md).\n"