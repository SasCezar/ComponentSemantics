b'[![Animated 3D Vue Logo](https://thumbs.gfycat.com/PinkPiercingBull-size_restricted.gif)](https://beg-in.github.io/vue-babylonjs/)\n# Vue-BabylonJS\n\nCreate high quality 3D graphics in the web as easily as writing HTML and CSS.\n\nQuickly make a 3D animation:\n\n![3D Animation](https://thumbs.gfycat.com/WhiteTangibleIndianspinyloach-size_restricted.gif)\n\nIt\'s this easy:\n\n\n```vue\n<template>\n  <Scene>\n    <Camera></Camera>\n    <HemisphericLight diffuse="#0000FF"></HemisphericLight>\n    <Entity :position="[0, 0, 5]">\n      <Animation property="rotation.x" :duration="5" :end="Math.PI * 2"></Animation>\n      <Animation property="rotation.y" :duration="5" :end="Math.PI * 2"></Animation>\n      <Animation property="rotation.z" :duration="5" :end="Math.PI * 2"></Animation>\n      <PointLight diffuse="#FF0000"></PointLight>\n      <template v-for="x in [0, 4, -4]">\n        <template v-for="y in [0, 4, -4]">\n          <Box v-for="z in [0, 4, -4]" :position="[x, y, z]" :key="`${x},${y},${z}`"></Box>\n        </template>\n      </template>\n    </Entity>\n  </Scene>\n</template>\n```\n\nIt\'s even easier if you use [Pug (Jade)](https://pugjs.org) for templating:\n\n```vue\n<template lang="pug">\n  Scene\n    Camera\n    HemisphericLight(diffuse="#0000FF")\n    Entity(:position="[0, 0, 5]")\n      Animation(property="rotation.x" :duration="5" :end="Math.PI * 2")\n      Animation(property="rotation.y" :duration="5" :end="Math.PI * 2")\n      Animation(property="rotation.z" :duration="5" :end="Math.PI * 2")\n      PointLight(diffuse="#FF0000")\n      template(v-for="x in [0, 4, -4]")\n        template(v-for="y in [0, 4, -4]")\n          Box(v-for="z in [0, 4, -4]" :position="[x, y, z]" :key="`${x},${y},${z}`")\n</template>\n```\n\n## Getting Started, Installation, and API Documentation\n\n[See the documentation website](https://beg-in.github.io/vue-babylonjs/)\n\n## Updates\n\n[Subscribe to the mailing list issue to keep up with important updates](https://github.com/Beg-in/vue-babylonjs/issues/1)\n\n## About\n\nVue-BabylonJS is a 3D graphics component plugin for [Vue.js](https://vuejs.org/) powered by [BabylonJS](https://www.babylonjs.com/).\nVue-BabylonJS draws inspiration from A-Frame, but can be more performant with the exclusion of DOM manipulation and has closer ties to JavaScript through property binding syntax in Vue. Compared to ReactVR which uses A-Frame, Vue-BabylonJS has the potential for higher performance, more organized and decoupled components, and a higher-quality rendering engine. \n\n[See the discussion on the HTML 5 Game Dev Forums](http://www.html5gamedevs.com/topic/35379-vue-integration-like-a-frame/)\n\n### Rationale\n\nWe use BabylonJS because it is the most efficient, most feature-rich, and most modern WebGL graphics library available. The addition of Vue makes the engine reactive and development becomes easier to reason about and organize. Out-of-the-box mobile support and sensible defaults make getting started a breeze.\n\nThe underlying engine is easily accessible to give pros the tools to tweak every aspect of BabylonJS. The organizational structure of the library is a Component-Entity-System and the Entity component contains many powerful features such a matrix transformation to allow for interaction with the Scene graph like a group of HTML divs. Powerful tools are available such as an integrated reactive property system that enables modifying 3D objects within templates and a Shader component that makes adding WebGL shaders easy.\n\n## Contributing\n\nSee `CONTRIBUTING.md`\n'