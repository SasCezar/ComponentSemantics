b'# TinyFaces \xf0\x9f\x91\xa6\xf0\x9f\x8f\xbc\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb Sketch Plugin\nFill layers in Sketch with avatars & random data from [tinyfac.es](https://tinyfac.es/)...\n\nFeatures:\n\n* \xf0\x9f\x93\x92 Fills text layers with random names\n* \xf0\x9f\x91\xa6\xf0\x9f\x8f\xbc Fills shapes with random avatar stock photos\n* \xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa6 Supports groups\n* \xf0\x9f\x92\x9f Supports symbols\n* \xf0\x9f\x8e\x9a Choose between high quality or low quality images\n* \xf0\x9f\x92\x91 Filter to only male or female\n\nCheck out how it works:\n\n![Screengrab](/assets/action.gif?raw=true)\n\n## Development\n\n_This plugin was created using `skpm`. For a detailed explanation on how things work, checkout the [skpm Readme](https://github.com/skpm/skpm/blob/master/README.md)._\n\n## Usage\n\nInstall the dependencies\n\n```bash\nnpm install\n```\n\nOnce the installation is done, you can run some commands inside the project folder:\n\n```bash\nnpm run build\n```\n\nTo watch for changes:\n\n```bash\nnpm run watch\n```\n\nAdditionally, if you wish to run the plugin every time it is built:\n\n```bash\nnpm run start\n```\n\n## Custom Configuration\n\n### Babel\n\nTo customize Babel, you have two options:\n\n* You may create a [`.babelrc`](https://babeljs.io/docs/usage/babelrc) file in your project\'s root directory. Any settings you define here will overwrite matching config-keys within skpm preset. For example, if you pass a "presets" object, it will replace & reset all Babel presets that skpm defaults to.\n\n* If you\'d like to modify or add to the existing Babel config, you must use a `webpack.skpm.config.js` file. Visit the [Webpack](#webpack) section for more info.\n\n### Webpack\n\nTo customize webpack create `webpack.skpm.config.js` file which exports function that will change webpack\'s config.\n\n```js\n/**\n * Function that mutates original webpack config.\n * Supports asynchronous changes when promise is returned.\n *\n * @param {object} config - original webpack config.\n * @param {boolean} isPluginCommand - whether the config is for a plugin command or a resource\n **/\nmodule.exports = function(config, isPluginCommand) {\n  /** you can change config here **/\n};\n```\n\n## Debugging\n\nTo view the output of your `console.log`, you have a few different options:\n\n* Use the [`sketch-dev-tools`](https://github.com/skpm/sketch-dev-tools)\n* Open `Console.app` and look for the sketch logs\n* Look at the `~/Library/Logs/com.bohemiancoding.sketch3/Plugin Output.log` file\n\nSkpm provides a convenient way to do the latter:\n\n```bash\nskpm log\n```\n\nThe `-f` option causes `skpm log` to not stop when the end of logs is reached, but rather to wait for additional data to be appended to the input\n\n## Publishing your plugin\n\n```bash\nskpm publish <bump>\n```\n\n(where `bump` can be `patch`, `minor` or `major`)\n\n`skpm publish` will create a new release on your GitHub repository and create an appcast file in order for Sketch users to be notified of the update.\n'