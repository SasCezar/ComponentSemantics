b'# <img alt="SIG Rust TensorFlow" src="https://github.com/tensorflow/community/blob/master/sigs/logos/SIGRust.png" width="340"/>\n[![Version](https://img.shields.io/crates/v/tensorflow.svg)](https://crates.io/crates/tensorflow)\n[![Status](https://travis-ci.org/tensorflow/rust.svg?branch=master)](https://travis-ci.org/tensorflow/rust)\n\nTensorFlow Rust provides idiomatic [Rust](https://www.rust-lang.org) language\nbindings for [TensorFlow](https://www.tensorflow.org).\n\n**Notice:** This project is still under active development and not guaranteed to have a\nstable API. This is especially true because the underlying TensorFlow C API has not yet\nbeen stabilized as well.\n\n* [Documentation](https://tensorflow.github.io/rust/tensorflow/)\n* [TensorFlow Rust Google Group](https://groups.google.com/a/tensorflow.org/forum/#!forum/rust)\n* [TensorFlow website](https://www.tensorflow.org)\n* [TensorFlow GitHub page](https://github.com/tensorflow/tensorflow)\n\n## Getting Started\nSince this crate depends on the TensorFlow C API, it needs to be downloaded or compiled first. This\ncrate will automatically download or compile the TensorFlow shared libraries for you, but it is also\npossible to manually install TensorFlow and the crate will pick it up accordingly.\n\n### Prerequisites\nIf the TensorFlow shared libraries can already be found on your system, they will be used.  If your\nsystem is x86-64 Linux or Mac, a prebuilt binary will be downloaded, and no special prerequisites\nare needed.\n\nOtherwise, the following dependencies are needed to compile and build this crate, which involves\ncompiling TensorFlow itself:\n\n - git\n - [bazel](https://bazel.build/)\n - Python Dependencies `numpy`, `dev`, `pip` and `wheel`\n - Optionally, CUDA packages to support GPU-based processing\n\nThe TensorFlow website provides detailed instructions on how to obtain and install said dependencies,\nso if you are unsure please [check out the docs](https://www.tensorflow.org/install/install_sources)\n for further details.\n\nSome of the examples use TensorFlow code written in Python and require a full TensorFlow\nintallation.\n\n### Usage\nAdd this to your `Cargo.toml`:\n\n```toml\n[dependencies]\ntensorflow = "0.14.0"\n```\n\nand this to your crate root:\n\n```rust\nextern crate tensorflow;\n```\n\nThen run `cargo build -j 1`. The tensorflow-sys crate\'s \n[`build.rs`](https://github.com/tensorflow/rust/blob/f204b39/tensorflow-sys/build.rs#L44-L52)\nnow either downloads a pre-built, basic CPU only binary\n([the default](https://github.com/tensorflow/rust/pull/65))\nor compiles TensorFlow if forced to by an environment variable. If TensorFlow\nis compiled during this process, since the full compilation is very memory\nintensive, we recommend using the `-j 1` flag which tells cargo to use only one\ntask, which in turn tells TensorFlow to build with only one task. Though, if\nyou have a lot of RAM, you can obviously use a higher value.\n\nTo include the especially unstable API (which is currently the `expr` module),\nuse `--features tensorflow_unstable`.\n\nFor now, please see the [Examples](https://github.com/tensorflow/rust/tree/master/examples) for more\ndetails on how to use this binding.\n\n## GPU Support\n\nTo enable GPU support, use the `tensorflow_gpu` feature in your Cargo.toml:\n\n```\n[dependencies]\ntensorflow = { version = "0.14.0", features = ["tensorflow_gpu"] }\n```\n\n## Manual TensorFlow Compilation\n\nIf you want to work against unreleased/unsupported TensorFlow versions or use a build optimized for\nyour machine, manual compilation is the way to go.\n\nSee [tensorflow-sys/README.md](tensorflow-sys/README.md) for details.\n\n## FAQ\'s\n\n### Why does the compiler say that parts of the API don\'t exist?\nThe especially unstable parts of the API (which is currently the `expr` module) are\nfeature-gated behind the feature `tensorflow_unstable` to prevent accidental\nuse. See http://doc.crates.io/manifest.html#the-features-section.\n(We would prefer using an `#[unstable]` attribute, but that\n[doesn\'t exist](https://github.com/rust-lang/rfcs/issues/1491) yet.)\n\n### How do I...?\nTry the [documentation](https://tensorflow.github.io/rust/tensorflow/) first, and see if it answers\nyour question.  If not, take a look at the examples folder.  Note that there may not be an example\nfor your exact question, but it may be answered by an example demonstrating something else.\n\nIf none of the above help, you can ask your question on\n[TensorFlow Rust Google Group](https://groups.google.com/a/tensorflow.org/forum/#!forum/rust).\n\n## Contributing\nDevelopers and users are welcome to join the\n[TensorFlow Rust Google Group](https://groups.google.com/a/tensorflow.org/forum/#!forum/rust).\n\nDevelopers and users are also welcome to join\n[#tensorflow-rust](https://chat.mibbit.com/?server=irc.mozilla.org&channel=%23tensorflow-rust)\non irc.mozilla.org, although the Google Group is more likely to provide a response.\n\nPlease read the [contribution guidelines](CONTRIBUTING.md) on how to contribute code.\n\nThis is not an official Google product.\n\nRFCs are [issues tagged with RFC](https://github.com/tensorflow/rust/labels/rfc).\nCheck them out and comment. Discussions are welcomed. After all, that is the purpose of\nRequest For Comment!\n\n## License\nThis project is licensed under the terms of the [Apache 2.0 license](LICENSE).\n'