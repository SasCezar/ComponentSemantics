b'<p align="center">\n  <strong>**This project is no longer active. Please check out <a href="http://js.tensorflow.org">TensorFlow.js</a>.**<br/>The <a href="https://transcranial.github.io/keras-js">Keras.js demos</a> still work but is no longer updated.</strong>\n</p>\n\n<p align="center">\n  <a href="https://transcranial.github.io/keras-js">\n    <img src="https://cdn.rawgit.com/transcranial/keras-js/73aa4cca/assets/logo.svg" width="300px" />\n  </a>\n</p>\n\n<p align="center">\n  <strong>Run Keras models in the browser, with GPU support using WebGL</strong>\n</p>\n\n<div align="center">\n  <h3>\n    <a href="https://transcranial.github.io/keras-js">Interactive Demos</a>\n    <span> | </span>\n    <a href="https://transcranial.github.io/keras-js-docs">Documentation</a>\n  </h3>\n</div>\n\n<br/>\n\n---\n\nRun [Keras](https://github.com/keras-team/keras) models in the browser, with GPU support provided by WebGL 2. Models can be run in Node.js as well, but only in CPU mode. Because Keras abstracts away a number of frameworks as backends, the models can be trained in any backend, including TensorFlow, CNTK, etc.\n\nLibrary version compatibility: Keras 2.1.2\n\n## [Interactive Demos](https://transcranial.github.io/keras-js)\n\n<p align="center">\n  <a href="https://transcranial.github.io/keras-js"><img src="demos/assets/mnist-cnn.png" height="120" width="auto" /></a>\n  <a href="https://transcranial.github.io/keras-js"><img src="demos/assets/resnet50.png" height="120" width="auto" /></a>\n  <a href="https://transcranial.github.io/keras-js"><img src="demos/assets/inception-v3.png" height="120" width="auto" /></a>\n  <a href="https://transcranial.github.io/keras-js"><img src="demos/assets/imdb-bidirectional-lstm.png" height="120" width="auto" /></a>\n</p>\n\nCheck out the `demos/` directory for real examples running Keras.js in VueJS.\n\n- Basic Convnet for MNIST\n- Convolutional Variational Autoencoder, trained on MNIST\n- Auxiliary Classifier Generative Adversarial Networks (AC-GAN) on MNIST\n- 50-layer Residual Network, trained on ImageNet\n- Inception v3, trained on ImageNet\n- DenseNet-121, trained on ImageNet\n- SqueezeNet v1.1, trained on ImageNet\n- Bidirectional LSTM for IMDB sentiment classification\n\n## [Documentation](https://transcranial.github.io/keras-js-docs)\n\n[MIT License](https://github.com/transcranial/keras-js/blob/master/LICENSE)\n'