b'![deepo](https://user-images.githubusercontent.com/2270240/32102393-aecf573c-bb4e-11e7-811c-dc673cae7b9c.png)\n\n[![CircleCI](https://img.shields.io/circleci/project/github/ufoym/deepo.svg)](https://circleci.com/gh/ufoym/deepo)\n[![docker](https://img.shields.io/docker/pulls/ufoym/deepo.svg)](https://hub.docker.com/r/ufoym/deepo)\n![license](https://img.shields.io/github/license/ufoym/deepo.svg)\n\n\n***Deepo*** is a series of [*Docker*](http://www.docker.com/) images that\n- allows you to quickly set up your deep learning research environment\n- supports almost all [commonly used deep learning frameworks](#Available-tags)\n- supports [GPU acceleration](#GPU) (CUDA and cuDNN included), also works in [CPU-only mode](#CPU)\n- works on Linux ([CPU version](#CPU)/[GPU version](#GPU)), Windows ([CPU version](#CPU)) and OS X ([CPU version](#CPU))\n\nand their Dockerfile generator that\n- allows you to [customize your own environment](#Build) with Lego-like modules\n- automatically resolves the dependencies for you\n\n---\n\n# Table of contents\n- [Quick Start](#Quick-Start)\n  - [GPU Version](#GPU)\n    - [Installation](#Installation)\n    - [Usage](#Usage)\n  - [CPU Version](#CPU)\n    - [Installation](#Installation-cpu)\n    - [Usage](#Usage-cpu)\n- [Customization](#Customization)\n  - [Unhappy with all-in-one solution?](#One)\n  - [Jupyter support](#Jupyter)\n  - [Build your own customized image](#Build)\n- [Comparison to Alternatives](#Comparison)\n- [Tags](#Tags)\n  - [Available Tags](#Available-tags)\n  - [Deprecated Tags](#Deprecated-tags)\n- [Citation](#Citation)\n- [Contributing](#Contributing)\n- [Licensing](#Licensing)\n\n---\n\n<a name="Quick-Start"/>\n\n# Quick Start\n\n\n<a name="GPU"/>\n\n## GPU Version\n\n<a name="Installation"/>\n\n### Installation\n\n#### Step 1. Install [Docker](https://docs.docker.com/engine/installation/) and [nvidia-docker](https://github.com/NVIDIA/nvidia-docker).\n\n#### Step 2. Obtain the all-in-one image from [Docker Hub](https://hub.docker.com/r/ufoym/deepo)\n\n```bash\ndocker pull ufoym/deepo\n```\n\nFor users in China who may suffer from slow speeds when pulling the image from the public Docker registry, you can pull `deepo` images from the China registry mirror by specifying the full path, including the registry, in your docker pull command, for example:\n\n```bash\ndocker pull registry.docker-cn.com/ufoym/deepo\n```\n\n<a name="Usage"/>\n\n### Usage\n\nNow you can try this command:\n```bash\ndocker run --gpus all --rm ufoym/deepo nvidia-smi\n```\nThis should work and enables Deepo to use the GPU from inside a docker container.\nIf this does not work, search [the issues section on the nvidia-docker GitHub](https://github.com/NVIDIA/nvidia-docker/issues) -- many solutions are already documented. To get an interactive shell to a container that will not be automatically deleted after you exit do\n\n```bash\ndocker run --gpus all -it ufoym/deepo bash\n```\n\nIf you want to share your data and configurations between the host (your machine or VM) and the container in which you are using Deepo, use the -v option, e.g.\n```bash\ndocker run --gpus all -it -v /host/data:/data -v /host/config:/config ufoym/deepo bash\n```\nThis will make `/host/data` from the host visible as `/data` in the container, and `/host/config` as `/config`. Such isolation reduces the chances of your containerized experiments overwriting or using wrong data.\n\nPlease note that some frameworks (e.g. PyTorch) use shared memory to share data between processes, so if multiprocessing is used the default shared memory segment size that container runs with is not enough, and you should increase shared memory size either with `--ipc=host` or `--shm-size` command line options to `docker run`.\n```bash\ndocker run --gpus all -it --ipc=host ufoym/deepo bash\n```\n\n\n<a name="CPU"/>\n\n## CPU Version\n\n<a name="Installation-cpu"/>\n\n### Installation\n\n#### Step 1. Install [Docker](https://docs.docker.com/engine/installation/).\n\n#### Step 2. Obtain the all-in-one image from [Docker Hub](https://hub.docker.com/r/ufoym/deepo)\n\n```bash\ndocker pull ufoym/deepo:cpu\n```\n\n<a name="Usage-cpu"/>\n\n### Usage\n\nNow you can try this command:\n```bash\ndocker run -it ufoym/deepo:cpu bash\n```\n\nIf you want to share your data and configurations between the host (your machine or VM) and the container in which you are using Deepo, use the -v option, e.g.\n```bash\ndocker run -it -v /host/data:/data -v /host/config:/config ufoym/deepo:cpu bash\n```\nThis will make `/host/data` from the host visible as `/data` in the container, and `/host/config` as `/config`. Such isolation reduces the chances of your containerized experiments overwriting or using wrong data.\n\nPlease note that some frameworks (e.g. PyTorch) use shared memory to share data between processes, so if multiprocessing is used the default shared memory segment size that container runs with is not enough, and you should increase shared memory size either with `--ipc=host` or `--shm-size` command line options to `docker run`.\n```bash\ndocker run -it --ipc=host ufoym/deepo:cpu bash\n```\n\n\n_You are now ready to begin your journey._\n\n\n```$ python```\n```python\n>>> import tensorflow\n>>> import sonnet\n>>> import torch\n>>> import keras\n>>> import mxnet\n>>> import cntk\n>>> import chainer\n>>> import theano\n>>> import lasagne\n>>> import caffe\n>>> import caffe2\n```\n\n```$ caffe --version```\n```\ncaffe version 1.0.0\n```\n\n```$ darknet```\n```\nusage: darknet <function>\n```\n\n```$ th```\n```\n \xe2\x94\x82  ______             __   |  Torch7\n \xe2\x94\x82 /_  __/__  ________/ /   |  Scientific computing for Lua.\n \xe2\x94\x82  / / / _ \\/ __/ __/ _ \\  |  Type ? for help\n \xe2\x94\x82 /_/  \\___/_/  \\__/_//_/  |  https://github.com/torch\n \xe2\x94\x82                          |  http://torch.ch\n \xe2\x94\x82\n \xe2\x94\x82th>\n```\n\n\n<a name="Customization"/>\n\n# Customization\n\nNote that `docker pull ufoym/deepo` mentioned in [Quick Start](#Quick-Start) will give you a standard image containing all available deep learning frameworks. You can customize your own environment as well.\n\n<a name="One"/>\n\n## Unhappy with all-in-one solution?\n\nIf you prefer a specific framework rather than an all-in-one image, just append a tag with the name of the framework.\nTake tensorflow for example:\n```bash\ndocker pull ufoym/deepo:tensorflow\n```\n\n<a name="Jupyter"/>\n\n## Jupyter support\n\n#### Step 1. pull the all-in-one image\n\n```bash\ndocker pull ufoym/deepo\n```\n\n#### Step 2. run the image\n```bash\ndocker run --gpus all -it -p 8888:8888 --ipc=host ufoym/deepo jupyter notebook --no-browser --ip=0.0.0.0 --allow-root --NotebookApp.token= --notebook-dir=\'/root\'\n```\n\n\n<a name="Build"/>\n\n## Build your own customized image with Lego-like modules\n\n#### Step 1. prepare generator\n\n```bash\ngit clone https://github.com/ufoym/deepo.git\ncd deepo/generator\n```\n\n#### Step 2. generate your customized Dockerfile\n\nFor example, if you like `pytorch` and `lasagne`, then\n```bash\npython generate.py Dockerfile pytorch lasagne\n```\n\nThis should generate a Dockerfile that contains everything for building `pytorch` and `lasagne`. Note that the generator can handle automatic dependency processing and topologically sort the lists. So you don\'t need to worry about missing dependencies and the list order.\n\nYou can also specify the version of Python:\n```bash\npython generate.py Dockerfile pytorch lasagne python==3.6\n```\n\n#### Step 3. build your Dockerfile\n\n```bash\ndocker build -t my/deepo .\n```\n\nThis may take several minutes as it compiles a few libraries from scratch.\n\n\n<a name="Comparison"/>\n\n# Comparison to alternatives\n\n\n.                                                  | modern-deep-learning | dl-docker          | jupyter-deeplearning | Deepo\n:------------------------------------------------: | :------------------: | :----------------: | :------------------: | :----------------:\n [ubuntu](https://www.ubuntu.com)                  | 16.04                | 14.04              | 14.04                | 18.04\n [cuda](https://developer.nvidia.com/cuda-zone)    | X                    | 8.0                | 6.5-8.0              | 8.0-10.0/None\n [cudnn](https://developer.nvidia.com/cudnn)       | X                    | v5                 | v2-5                 | v7\n [onnx](https://onnx.ai)                           | X                    | X                  | X                    | O\n [theano](http://deeplearning.net/software/theano) | X                    | O                  | O                    | O\n [tensorflow](http://www.tensorflow.org)           | O                    | O                  | O                    | O\n [sonnet](https://github.com/deepmind/sonnet)      | X                    | X                  | X                    | O\n [pytorch](http://pytorch.org)                     | X                    | X                  | X                    | O\n [keras](https://keras.io)                         | O                    | O                  | O                    | O\n [lasagne](http://lasagne.readthedocs.io)          | X                    | O                  | O                    | O\n [mxnet](http://mxnet.incubator.apache.org)        | X                    | X                  | X                    | O\n [cntk](http://cntk.ai)                            | X                    | X                  | X                    | O\n [chainer](https://chainer.org)                    | X                    | X                  | X                    | O\n [caffe](http://caffe.berkeleyvision.org)          | O                    | O                  | O                    | O\n [caffe2](https://caffe2.ai)                       | X                    | X                  | X                    | O\n [torch](http://torch.ch/)                         | X                    | O                  | O                    | O\n [darknet](https://pjreddie.com/darknet/)          | X                    | X                  | X                    | O\n\n\n\n<a name="Tags"/>\n\n# Tags\n\n\n<a name="Available-tags"/>\n\n## Available Tags\n\n\n.                                                  | CUDA 10.0 / Python 3.6                                    | CPU-only / Python 3.6\n:------------------------------------------------: | :-------------------------------------------------------: | :-----------------------------------------:\n all-in-one                                        | `latest` `all` `all-py36` `py36-cu100` `all-py36-cu100`   | `all-py36-cpu` `all-cpu` `py36-cpu` `cpu`\n [Theano](http://deeplearning.net/software/theano) | `theano-py36-cu100` `theano-py36` `theano`                | `theano-py36-cpu` `theano-cpu`\n [TensorFlow](http://www.tensorflow.org)           | `tensorflow-py36-cu100` `tensorflow-py36` `tensorflow`    | `tensorflow-py36-cpu` `tensorflow-cpu`\n [Sonnet](https://github.com/deepmind/sonnet)      | `sonnet-py36-cu100` `sonnet-py36` `sonnet`                | `sonnet-py36-cpu` `sonnet-cpu`\n [PyTorch](http://pytorch.org) / [Caffe2](https://caffe2.ai)  | `pytorch-py36-cu100` `pytorch-py36` `pytorch`  | `pytorch-py36-cpu` `pytorch-cpu`\n [Keras](https://keras.io)                         | `keras-py36-cu100` `keras-py36` `keras`                   | `keras-py36-cpu` `keras-cpu`\n [Lasagne](http://lasagne.readthedocs.io)          | `lasagne-py36-cu100` `lasagne-py36` `lasagne`             | `lasagne-py36-cpu` `lasagne-cpu`\n [MXNet](http://mxnet.incubator.apache.org)        | `mxnet-py36-cu100` `mxnet-py36` `mxnet`                   | `mxnet-py36-cpu` `mxnet-cpu`\n [CNTK](http://cntk.ai)                            | `cntk-py36-cu100` `cntk-py36` `cntk`                      | `cntk-py36-cpu` `cntk-cpu`\n [Chainer](https://chainer.org)                    | `chainer-py36-cu100` `chainer-py36` `chainer`             | `chainer-py36-cpu` `chainer-cpu`\n [Caffe](http://caffe.berkeleyvision.org)          | `caffe-py36-cu100` `caffe-py36` `caffe`                   | `caffe-py36-cpu` `caffe-cpu`\n [Torch](http://torch.ch/)                         | `torch-cu100` `torch`                                     | `torch-cpu`\n [Darknet](https://pjreddie.com/darknet/)          | `darknet-cu100` `darknet`                                 | `darknet-cpu`\n\n\n<a name="Deprecated-tags"/>\n\n## Deprecated Tags\n\n\n.                                                  | CUDA 9.0 / Python 3.6                        | CUDA 9.0 / Python 2.7                    | CPU-only / Python 3.6                       | CPU-only / Python 2.7\n:------------------------------------------------: | :------------------------------------------: | :--------------------------------:       | :-----------------------------------------: | :----------------------------------------:\n all-in-one                                        | `py36-cu90` `all-py36-cu90`                  | `all-py27-cu90` `all-py27` `py27-cu90`   |                                             | `all-py27-cpu` `py27-cpu`\n all-in-one with jupyter                           | `all-jupyter-py36-cu90`                      | `all-py27-jupyter` `py27-jupyter`        |                                             | `all-py27-jupyter-cpu` `py27-jupyter-cpu`\n [Theano](http://deeplearning.net/software/theano) | `theano-py36-cu90`                           | `theano-py27-cu90` `theano-py27`         |                                             | `theano-py27-cpu`\n [TensorFlow](http://www.tensorflow.org)           | `tensorflow-py36-cu90`                       | `tensorflow-py27-cu90` `tensorflow-py27` |                                             | `tensorflow-py27-cpu`\n [Sonnet](https://github.com/deepmind/sonnet)      | `sonnet-py36-cu90`                           | `sonnet-py27-cu90` `sonnet-py27`         |                                             | `sonnet-py27-cpu`\n [PyTorch](http://pytorch.org)                     | `pytorch-py36-cu90`                          | `pytorch-py27-cu90` `pytorch-py27`       |                                             | `pytorch-py27-cpu`\n [Keras](https://keras.io)                         | `keras-py36-cu90`                            | `keras-py27-cu90` `keras-py27`           |                                             | `keras-py27-cpu`\n [Lasagne](http://lasagne.readthedocs.io)          | `lasagne-py36-cu90`                          | `lasagne-py27-cu90` `lasagne-py27`       |                                             | `lasagne-py27-cpu`\n [MXNet](http://mxnet.incubator.apache.org)        | `mxnet-py36-cu90`                            | `mxnet-py27-cu90` `mxnet-py27`           |                                             | `mxnet-py27-cpu`\n [CNTK](http://cntk.ai)                            | `cntk-py36-cu90`                             | `cntk-py27-cu90` `cntk-py27`             |                                             | `cntk-py27-cpu`\n [Chainer](https://chainer.org)                    | `chainer-py36-cu90`                          | `chainer-py27-cu90` `chainer-py27`       |                                             | `chainer-py27-cpu`\n [Caffe](http://caffe.berkeleyvision.org)          | `caffe-py36-cu90`                            | `caffe-py27-cu90` `caffe-py27`           |                                             | `caffe-py27-cpu`\n [Caffe2](https://caffe2.ai)                       | `caffe2-py36-cu90` `caffe2-py36` `caffe2`    | `caffe2-py27-cu90` `caffe2-py27`         | `caffe2-py36-cpu` `caffe2-cpu`              | `caffe2-py27-cpu`\n [Torch](http://torch.ch/)                         | `torch-cu90`                                 | `torch-cu90` `torch`                     |                                             | `torch-cpu`\n [Darknet](https://pjreddie.com/darknet/)          | `darknet-cu90`                               | `darknet-cu90` `darknet`                 |                                             | `darknet-cpu`\n\n\n<a name="Citation"/>\n\n# Citation\n```\n@misc{ming2017deepo,\n    author = {Ming Yang},\n    title = {Deepo: set up deep learning environment in a single command line.},\n    year = {2017},\n    publisher = {GitHub},\n    journal = {GitHub repository},\n    howpublished = {\\url{https://github.com/ufoym/deepo}}\n}\n```\n<a name="Contributing"/>\n\n# Contributing\n\nWe appreciate all contributions. If you are planning to contribute back bug-fixes, please do so without any further discussion. If you plan to contribute new features, utility functions or extensions, please first open an issue and discuss the feature with us.\n\n<a name="Licensing"/>\n\n# Licensing\n\nDeepo is [MIT licensed](https://github.com/ufoym/deepo/blob/master/LICENSE).\n'