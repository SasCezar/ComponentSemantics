b'# tensorflow-generative-model-collections\nTensorflow implementation of various GANs and VAEs.\n\n## Related Repositories\n### Pytorch version\nPytorch version of this repository is availabel at https://github.com/znxlwm/pytorch-generative-model-collections\n\n### "Are GANs Created Equal? A Large-Scale Study" Paper \nhttps://github.com/google/compare_gan is the code that was used in [the paper](https://arxiv.org/abs/1711.10337).  \nIt provides IS/FID and rich experimental results for all gan-variants.  \n\n## Generative Adversarial Networks (GANs)\n### Lists  \n\n*Name* | *Paper Link* | *Value Function*\n:---: | :---: | :--- |\n**GAN** | [Arxiv](https://arxiv.org/abs/1406.2661) | <img src = \'assets/equations/GAN.png\' height = \'70px\'>\n**LSGAN**| [Arxiv](https://arxiv.org/abs/1611.04076) | <img src = \'assets/equations/LSGAN.png\' height = \'70px\'>\n**WGAN**| [Arxiv](https://arxiv.org/abs/1701.07875) | <img src = \'assets/equations/WGAN.png\' height = \'105px\'>\n**WGAN_GP**| [Arxiv](https://arxiv.org/abs/1704.00028) | <img src = \'assets/equations/WGAN_GP.png\' height = \'70px\'>\n**DRAGAN**| [Arxiv](https://arxiv.org/abs/1705.07215) | <img src = \'assets/equations/DRAGAN.png\' height = \'70px\'>\n**CGAN**| [Arxiv](https://arxiv.org/abs/1411.1784) | <img src = \'assets/equations/CGAN.png\' height = \'70px\'>\n**infoGAN**| [Arxiv](https://arxiv.org/abs/1606.03657) | <img src = \'assets/equations/infoGAN.png\' height = \'70px\'>\n**ACGAN**| [Arxiv](https://arxiv.org/abs/1610.09585) | <img src = \'assets/equations/ACGAN.png\' height = \'70px\'>\n**EBGAN**| [Arxiv](https://arxiv.org/abs/1609.03126) | <img src = \'assets/equations/EBGAN.png\' height = \'70px\'>\n**BEGAN**| [Arxiv](https://arxiv.org/abs/1702.08431) | <img src = \'assets/equations/BEGAN.png\' height = \'105px\'>  \n\n#### Variants of GAN structure\n<img src = \'assets/etc/GAN_structure.png\' height = \'600px\'>\n\n### Results for mnist\nNetwork architecture of generator and discriminator is the exaclty sames as in [infoGAN paper](https://arxiv.org/abs/1606.03657).  \nFor fair comparison of core ideas in all gan variants, all implementations for network architecture are kept same except EBGAN and BEGAN. Small modification is made for EBGAN/BEGAN, since those adopt auto-encoder strucutre for discriminator. But I tried to keep the capacity of discirminator.\n\nThe following results can be reproduced with command:  \n```\npython main.py --dataset mnist --gan_type <TYPE> --epoch 25 --batch_size 64\n```\n\n#### Random generation\nAll results are randomly sampled.\n\n*Name* | *Epoch 2* | *Epoch 10* | *Epoch 25*\n:---: | :---: | :---: | :---: |\nGAN | <img src = \'assets/mnist_results/random_generation/GAN_epoch001_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/GAN_epoch009_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/GAN_epoch024_test_all_classes.png\' height = \'230px\'>\nLSGAN | <img src = \'assets/mnist_results/random_generation/LSGAN_epoch001_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/LSGAN_epoch009_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/LSGAN_epoch024_test_all_classes.png\' height = \'230px\'>\nWGAN | <img src = \'assets/mnist_results/random_generation/WGAN_epoch001_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/WGAN_epoch009_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/WGAN_epoch024_test_all_classes.png\' height = \'230px\'>\nWGAN_GP | <img src = \'assets/mnist_results/random_generation/WGAN_GP_epoch001_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/WGAN_GP_epoch009_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/WGAN_GP_epoch024_test_all_classes.png\' height = \'230px\'>\nDRAGAN | <img src = \'assets/mnist_results/random_generation/DRAGAN_epoch001_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/DRAGAN_epoch009_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/DRAGAN_epoch024_test_all_classes.png\' height = \'230px\'>\nEBGAN | <img src = \'assets/mnist_results/random_generation/EBGAN_epoch001_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/EBGAN_epoch009_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/EBGAN_epoch024_test_all_classes.png\' height = \'230px\'>\nBEGAN | <img src = \'assets/mnist_results/random_generation/BEGAN_epoch001_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/BEGAN_epoch009_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/BEGAN_epoch024_test_all_classes.png\' height = \'230px\'>\n\n#### Conditional generation\nEach row has the same noise vector and each column has the same label condition.\n\n*Name* | *Epoch 1* | *Epoch 10* | *Epoch 25*\n:---: | :---: | :---: | :---: |\nCGAN | <img src = \'assets/mnist_results/conditional_generation/CGAN_epoch000_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/mnist_results/conditional_generation/CGAN_epoch009_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/mnist_results/conditional_generation/CGAN_epoch024_test_all_classes_style_by_style.png\' height = \'230px\'>\nACGAN | <img src = \'assets/mnist_results/conditional_generation/ACGAN_epoch000_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/mnist_results/conditional_generation/ACGAN_epoch009_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/mnist_results/conditional_generation/ACGAN_epoch024_test_all_classes_style_by_style.png\' height = \'230px\'>\ninfoGAN | <img src = \'assets/mnist_results/conditional_generation/infoGAN_epoch000_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/mnist_results/conditional_generation/infoGAN_epoch009_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/mnist_results/conditional_generation/infoGAN_epoch024_test_all_classes_style_by_style.png\' height = \'230px\'>\n\n#### InfoGAN : Manipulating two continous codes\n<table align=\'center\'>\n<td><img src = \'assets/mnist_results/infogan/infoGAN_epoch024_test_class_c1c2_2.png\' height = \'200px\'></td>\n<td><img src = \'assets/mnist_results/infogan/infoGAN_epoch024_test_class_c1c2_5.png\' height = \'200px\'></td>\n<td><img src = \'assets/mnist_results/infogan/infoGAN_epoch024_test_class_c1c2_7.png\' height = \'200px\'></td>\n<td><img src = \'assets/mnist_results/infogan/infoGAN_epoch024_test_class_c1c2_9.png\' height = \'200px\'></td>\n</table>\n\n### Results for fashion-mnist\nComments on network architecture in mnist are also applied to here.  \n[Fashion-mnist](https://github.com/zalandoresearch/fashion-mnist) is a recently proposed dataset consisting of a training set of 60,000 examples and a test set of 10,000 examples. Each example is a 28x28 grayscale image, associated with a label from 10 classes. (T-shirt/top, Trouser, Pullover, Dress, Coat, Sandal, Shirt, Sneaker, Bag, Ankle boot)\n\nThe following results can be reproduced with command:  \n```\npython main.py --dataset fashion-mnist --gan_type <TYPE> --epoch 40 --batch_size 64\n```\n\n#### Random generation\nAll results are randomly sampled.\n\n*Name* | *Epoch 1* | *Epoch 20* | *Epoch 40*\n:---: | :---: | :---: | :---: |\nGAN | <img src = \'assets/fashion_mnist_results/random_generation/GAN_epoch000_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/GAN_epoch019_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/GAN_epoch039_test_all_classes.png\' height = \'230px\'>\nLSGAN | <img src = \'assets/fashion_mnist_results/random_generation/LSGAN_epoch000_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/LSGAN_epoch019_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/LSGAN_epoch039_test_all_classes.png\' height = \'230px\'>\nWGAN | <img src = \'assets/fashion_mnist_results/random_generation/WGAN_epoch000_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/WGAN_epoch019_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/WGAN_epoch039_test_all_classes.png\' height = \'230px\'>\nWGAN_GP | <img src = \'assets/fashion_mnist_results/random_generation/WGAN_GP_epoch000_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/WGAN_GP_epoch019_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/WGAN_GP_epoch039_test_all_classes.png\' height = \'230px\'>\nDRAGAN | <img src = \'assets/fashion_mnist_results/random_generation/DRAGAN_epoch000_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/DRAGAN_epoch019_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/DRAGAN_epoch039_test_all_classes.png\' height = \'230px\'>\nEBGAN | <img src = \'assets/fashion_mnist_results/random_generation/EBGAN_epoch000_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/EBGAN_epoch019_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/EBGAN_epoch039_test_all_classes.png\' height = \'230px\'>\nBEGAN | <img src = \'assets/fashion_mnist_results/random_generation/BEGAN_epoch000_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/BEGAN_epoch019_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/BEGAN_epoch039_test_all_classes.png\' height = \'230px\'>\n\n#### Conditional generation\nEach row has the same noise vector and each column has the same label condition.\n\n*Name* | *Epoch 1* | *Epoch 20* | *Epoch 40*\n:---: | :---: | :---: | :---: |\nCGAN | <img src = \'assets/fashion_mnist_results/conditional_generation/CGAN_epoch000_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/conditional_generation/CGAN_epoch019_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/conditional_generation/CGAN_epoch039_test_all_classes_style_by_style.png\' height = \'230px\'>\nACGAN | <img src = \'assets/fashion_mnist_results/conditional_generation/ACGAN_epoch000_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/conditional_generation/ACGAN_epoch019_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/conditional_generation/ACGAN_epoch039_test_all_classes_style_by_style.png\' height = \'230px\'>\ninfoGAN | <img src = \'assets/fashion_mnist_results/conditional_generation/infoGAN_epoch000_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/conditional_generation/infoGAN_epoch019_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/conditional_generation/infoGAN_epoch039_test_all_classes_style_by_style.png\' height = \'230px\'>\n\nWithout hyper-parameter tuning from mnist-version, ACGAN/infoGAN does not work well as compared with CGAN.  \nACGAN tends to fall into mode-collapse.  \ninfoGAN tends to ignore noise-vector. It results in that various style within the same class can not be represented.\n\n#### InfoGAN : Manipulating two continous codes\n<table align=\'center\'>\n<td><img src = \'assets/fashion_mnist_results/infogan/infoGAN_epoch039_test_class_c1c2_1.png\' height = \'230px\'></td>\n<td><img src = \'assets/fashion_mnist_results/infogan/infoGAN_epoch039_test_class_c1c2_4.png\' height = \'230px\'></td>\n<td><img src = \'assets/fashion_mnist_results/infogan/infoGAN_epoch039_test_class_c1c2_5.png\' height = \'230px\'></td>\n<td><img src = \'assets/fashion_mnist_results/infogan/infoGAN_epoch039_test_class_c1c2_8.png\' height = \'230px\'></td>\n</table>\n\n### Some results for celebA\n(to be added)\n\n## Variational Auto-Encoders (VAEs)\n\n### Lists\n\n*Name* | *Paper Link* | *Loss Function*\n:---: | :---: | :---\n**VAE**| [Arxiv](https://arxiv.org/abs/1312.6114) | <img src = \'assets/equations/VAE.png\' height = \'35px\'>\n**CVAE**| [Arxiv](https://arxiv.org/abs/1406.5298) | <img src = \'assets/equations/CVAE.png\' height = \'35px\'>\n**DVAE**| [Arxiv](https://arxiv.org/abs/1511.06406) | (to be added)\n**AAE**| [Arxiv](https://arxiv.org/abs/1511.05644) | (to be added) \n\n#### Variants of VAE structure\n<img src = \'assets/etc/VAE_structure.png\' height = \'280px\'>\n\n### Results for mnist\nNetwork architecture of decoder(generator) and encoder(discriminator) is the exaclty sames as in [infoGAN paper](https://arxiv.org/abs/1606.0365). The number of output nodes in encoder is different. (2x z_dim for VAE, 1 for GAN)\n\nThe following results can be reproduced with command:  \n```\npython main.py --dataset mnist --gan_type <TYPE> --epoch 25 --batch_size 64\n```\n\n#### Random generation\nAll results are randomly sampled.\n\n*Name* | *Epoch 1* | *Epoch 10* | *Epoch 25*\n:---: | :---: | :---: | :---: |\nVAE | <img src = \'assets/mnist_results/random_generation/VAE_epoch000_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/VAE_epoch009_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/VAE_epoch024_test_all_classes.png\' height = \'230px\'>\nGAN | <img src = \'assets/mnist_results/random_generation/GAN_epoch000_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/GAN_epoch009_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/mnist_results/random_generation/GAN_epoch024_test_all_classes.png\' height = \'230px\'>\n\nResults of GAN is also given to compare images generated from VAE and GAN.\nThe main difference (VAE generates smooth and blurry images, otherwise GAN generates sharp and artifact images) is cleary observed from the results.\n\n#### Conditional generation\nEach row has the same noise vector and each column has the same label condition.\n\n*Name* | *Epoch 1* | *Epoch 10* | *Epoch 25*\n:---: | :---: | :---: | :---: |\nCVAE | <img src = \'assets/mnist_results/conditional_generation/CVAE_epoch000_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/mnist_results/conditional_generation/CVAE_epoch009_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/mnist_results/conditional_generation/CVAE_epoch024_test_all_classes_style_by_style.png\' height = \'230px\'>\nCGAN | <img src = \'assets/mnist_results/conditional_generation/CGAN_epoch000_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/mnist_results/conditional_generation/CGAN_epoch009_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/mnist_results/conditional_generation/CGAN_epoch024_test_all_classes_style_by_style.png\' height = \'230px\'>\n\nResults of CGAN is also given to compare images generated from CVAE and CGAN.\n\n#### Learned manifold\n\nThe following results can be reproduced with command:  \n```\npython main.py --dataset mnist --gan_type VAE --epoch 25 --batch_size 64 --dim_z 2\n```\nPlease notice that dimension of noise-vector z is 2.\n\n*Name* | *Epoch 1* | *Epoch 10* | *Epoch 25*\n:---: | :---: | :---: | :---: |\nVAE | <img src = \'assets/mnist_results/learned_manifold/VAE_epoch000_learned_manifold.png\' height = \'230px\'> | <img src = \'assets/mnist_results/learned_manifold/VAE_epoch009_learned_manifold.png\' height = \'230px\'> | <img src = \'assets/mnist_results/learned_manifold/VAE_epoch024_learned_manifold.png\' height = \'230px\'>\n\n### Results for fashion-mnist\nComments on network architecture in mnist are also applied to here. \n\nThe following results can be reproduced with command:  \n```\npython main.py --dataset fashion-mnist --gan_type <TYPE> --epoch 40 --batch_size 64\n```\n\n#### Random generation\nAll results are randomly sampled.\n\n*Name* | *Epoch 1* | *Epoch 20* | *Epoch 40*\n:---: | :---: | :---: | :---: |\nVAE | <img src = \'assets/fashion_mnist_results/random_generation/VAE_epoch000_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/VAE_epoch019_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/VAE_epoch039_test_all_classes.png\' height = \'230px\'>\nGAN | <img src = \'assets/fashion_mnist_results/random_generation/GAN_epoch000_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/GAN_epoch019_test_all_classes.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/random_generation/GAN_epoch039_test_all_classes.png\' height = \'230px\'>\n\nResults of GAN is also given to compare images generated from VAE and GAN.\n\n#### Conditional generation\nEach row has the same noise vector and each column has the same label condition.\n\n*Name* | *Epoch 1* | *Epoch 20* | *Epoch 40*\n:---: | :---: | :---: | :---: |\nCVAE | <img src = \'assets/fashion_mnist_results/conditional_generation/CVAE_epoch000_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/conditional_generation/CVAE_epoch019_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/conditional_generation/CVAE_epoch039_test_all_classes_style_by_style.png\' height = \'230px\'>\nCGAN | <img src = \'assets/fashion_mnist_results/conditional_generation/CGAN_epoch000_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/conditional_generation/CGAN_epoch019_test_all_classes_style_by_style.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/conditional_generation/CGAN_epoch039_test_all_classes_style_by_style.png\' height = \'230px\'>\n\nResults of CGAN is also given to compare images generated from CVAE and CGAN.\n\n#### Learned manifold\n\nThe following results can be reproduced with command:  \n```\npython main.py --dataset fashion-mnist --gan_type VAE --epoch 25 --batch_size 64 --dim_z 2\n```\nPlease notice that dimension of noise-vector z is 2.\n\n*Name* | *Epoch 1* | *Epoch 10* | *Epoch 25*\n:---: | :---: | :---: | :---: |\nVAE | <img src = \'assets/fashion_mnist_results/learned_manifold/VAE_epoch000_learned_manifold.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/learned_manifold/VAE_epoch009_learned_manifold.png\' height = \'230px\'> | <img src = \'assets/fashion_mnist_results/learned_manifold/VAE_epoch024_learned_manifold.png\' height = \'230px\'>\n\n### Results for celebA\n(to be added)\n\n## Folder structure\nThe following shows basic folder structure.\n```\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 main.py # gateway\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 data\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 mnist # mnist data (not included in this repo)\n\xe2\x94\x82   |   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 t10k-images-idx3-ubyte.gz\n\xe2\x94\x82   |   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 t10k-labels-idx1-ubyte.gz\n\xe2\x94\x82   |   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 train-images-idx3-ubyte.gz\n\xe2\x94\x82   |   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 train-labels-idx1-ubyte.gz\n\xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 fashion-mnist # fashion-mnist data (not included in this repo)\n\xe2\x94\x82       \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 t10k-images-idx3-ubyte.gz\n\xe2\x94\x82       \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 t10k-labels-idx1-ubyte.gz\n\xe2\x94\x82       \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 train-images-idx3-ubyte.gz\n\xe2\x94\x82       \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 train-labels-idx1-ubyte.gz\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 GAN.py # vanilla GAN\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 ops.py # some operations on layer\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 utils.py # utils\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 logs # log files for tensorboard to be saved here\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 checkpoint # model files to be saved here\n```\n\n## Acknowledgements\nThis implementation has been based on [this repository](https://github.com/carpedm20/DCGAN-tensorflow) and tested with Tensorflow over ver1.0 on Windows 10 and Ubuntu 14.04.\n'