b'# Ansible Role: Firewall (iptables)\n\n[![Build Status](https://travis-ci.org/geerlingguy/ansible-role-firewall.svg?branch=master)](https://travis-ci.org/geerlingguy/ansible-role-firewall)\n\nInstalls an iptables-based firewall for Linux. Supports both IPv4 (`iptables`) and IPv6 (`ip6tables`).\n\nThis firewall aims for simplicity over complexity, and only opens a few specific ports for incoming traffic (configurable through Ansible variables). If you have a rudimentary knowledge of `iptables` and/or firewalls in general, this role should be a good starting point for a secure system firewall.\n\nAfter the role is run, a `firewall` init service will be available on the server. You can use `service firewall [start|stop|restart|status]` to control the firewall.\n\n## Requirements\n\nNone.\n\n## Role Variables\n\nAvailable variables are listed below, along with default values (see `defaults/main.yml`):\n\n    firewall_state: started\n    firewall_enabled_at_boot: true\n\nControls the state of the firewall service; whether it should be running (`firewall_state`) and/or enabled on system boot (`firewall_enabled_at_boot`).\n\n    firewall_allowed_tcp_ports:\n      - "22"\n      - "80"\n      ...\n    firewall_allowed_udp_ports: []\n\nA list of TCP or UDP ports (respectively) to open to incoming traffic.\n\n    firewall_forwarded_tcp_ports:\n      - { src: "22", dest: "2222" }\n      - { src: "80", dest: "8080" }\n    firewall_forwarded_udp_ports: []\n\nForward `src` port to `dest` port, either TCP or UDP (respectively).\n\n    firewall_additional_rules: []\n    firewall_ip6_additional_rules: []\n\nAny additional (custom) rules to be added to the firewall (in the same format you would add them via command line, e.g. `iptables [rule]`/`ip6tables [rule]`). A few examples of how this could be used:\n\n    # Allow only the IP 167.89.89.18 to access port 4949 (Munin).\n    firewall_additional_rules:\n      - "iptables -A INPUT -p tcp --dport 4949 -s 167.89.89.18 -j ACCEPT"\n    \n    # Allow only the IP 214.192.48.21 to access port 3306 (MySQL).\n    firewall_additional_rules:\n      - "iptables -A INPUT -p tcp --dport 3306 -s 214.192.48.21 -j ACCEPT"\n\nSee [Iptables Essentials: Common Firewall Rules and Commands](https://www.digitalocean.com/community/tutorials/iptables-essentials-common-firewall-rules-and-commands) for more examples.\n\n    firewall_log_dropped_packets: true\n\nWhether to log dropped packets to syslog (messages will be prefixed with "Dropped by firewall: ").\n\n    firewall_disable_firewalld: false\n    firewall_disable_ufw: false\n\nSet to `true` to disable firewalld (installed by default on RHEL/CentOS) or ufw (installed by default on Ubuntu), respectively.\n\n    firewall_enable_ipv6: true\n\nSet to `false` to disable configuration of ip6tables (for example, if your `GRUB_CMDLINE_LINUX` contains `ipv6.disable=1`).\n\n## Dependencies\n\nNone.\n\n## Example Playbook\n\n    - hosts: server\n      vars_files:\n        - vars/main.yml\n      roles:\n        - { role: geerlingguy.firewall }\n\n*Inside `vars/main.yml`*:\n\n    firewall_allowed_tcp_ports:\n      - "22"\n      - "25"\n      - "80"\n\n## TODO\n\n  - Make outgoing ports more configurable.\n  - Make other firewall features (like logging) configurable.\n\n## License\n\nMIT / BSD\n\n## Author Information\n\nThis role was created in 2014 by [Jeff Geerling](https://www.jeffgeerling.com/), author of [Ansible for DevOps](https://www.ansiblefordevops.com/).\n'