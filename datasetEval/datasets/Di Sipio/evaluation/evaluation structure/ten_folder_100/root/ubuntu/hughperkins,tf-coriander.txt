b'# Tensorflow-cl\n\nRun [Tensorflow](https://github.com/tensorflow/tensorflow) on OpenCL\xe2\x84\xa2 1.2 devices\n\n- tested on:\n  - Mac Sierra using Radeon Pro 450 GPU (thank you [ASAPP](http://asapp.com) :-) )\n  - Ubuntu 16.04, using NVIDIA K520\n- should work theoretically on any OpenCL 1.2 GPU\n\n## Piccie\n\nOn a Mac:\n\n<img src="doc/img/multilayerperceptron.png" />\n\n## Execution speed\n\n- [Execution speed](doc/execution_speed.md)\n\n## What\'s working\n\n- [What\'s working](doc/whats_working.md)\n\n## Installation\n\n- [Installation](doc/installation.md)\n\n## Tests\n\n- [Tests](doc/testing.md)\n\n## Design/architecture\n\n- tensorflow code stays 100% [NVIDIA\xc2\xae CUDA\xe2\x84\xa2](https://www.nvidia.com/object/cuda_home_new.html)\n- [Coriander](https://github.com/hughperkins/Coriander) compiles the NVIDIA\xc2\xae CUDA\xe2\x84\xa2 code into OpenCL\n- Cedric Nugteren\'s [CLBlast](https://github.com/CNugteren/CLBlast) provides BLAS (matrix multiplications)\n\nPresentation on [Coriander](https://github.com/hughperkins/Coriander) at this year\'s [IWOCL 2017](http://www.iwocl.org/iwocl-2017/conference-program/)\n\n## Related projects\n\n- [OpenCL Torch](https://github.com/hughperkins/distro-cl)\n- [DeepCL](https://github.com/hughperkins/DeepCL)\n\n## News\n\n- June 11 2017:\n  - set up Jenkins build, which makes build logs and a Ubuntu 16.04 wheel available for certain commits, https://github.com/hughperkins/tf-coriander/commits/example-jenkins-builds (click on one of the green ticks)\n- June 7 2017:\n  - created [v0.18.3](https://github.com/hughperkins/tf-coriander/releases/tag/v0.18.3) release:\n    - `tf.split` enabled\n    - following examples from Aymeric Damien\'s [Tensorflow-Examples](https://github.com/aymericdamien/TensorFlow-Examples) run now:\n      - [recurrent_network.py](https://github.com/hughperkins/TensorFlow-Examples/blob/enforce-gpu/examples/3_NeuralNetworks/recurrent_network.py)\n      - [bidirectional_rnn.py](https://github.com/hughperkins/TensorFlow-Examples/blob/enforce-gpu/examples/3_NeuralNetworks/bidirectional_rnn.py)\n      - [dynamic_rnn.py](https://github.com/hughperkins/TensorFlow-Examples/blob/enforce-gpu/examples/3_NeuralNetworks/dynamic_rnn.py)\n'