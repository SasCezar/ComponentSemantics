b'# IKEv2-setup\n\n## Table of Contents\n\n  * [What?](#what)\n    + [VPN server](#vpn-server)\n    + [VPN clients](#vpn-clients)\n    + [Caveats](#caveats)\n  * [How?](#how)\n    + [Troubleshooting](#troubleshooting)\n    + [Users](#users)\n    + [Upgrades](#upgrades)\n    + [Bonus paranoia](#bonus-paranoia)\n  * [Why?](#why)\n    + [Why IKEv2?](#why-ikev2)\n\n## What?\n\nA Bash script that takes Ubuntu Server 18.04 LTS from clean install to production-ready IKEv2 VPN with strongSwan. Comments and pull requests welcome. It may still work on 17.10, 17.04 or 16.10 if you remove the version check, but these are not tested.\n\n### VPN server\n\n* The VPN server identifies itself with a _Let\'s Encrypt_ certificate, so there\'s no need for clients to install private certificates \xe2\x80\x94\xc2\xa0they can simply authenticate with username and strong password (EAP-MSCHAPv2).\n* The box is firewalled with `iptables` and configured for unattended security upgrades, and the _Let\'s Encrypt_ certificate is set up to auto-renew, so it _could_ be safe to forget about it all until 18.04 reaches end-of-life in 2023. (Note that `iptables` setup includes [basic rate-limiting](https://debian-administration.org/article/187/Using_iptables_to_rate-limit_incoming_connections), dropping new connections if there have been 60+ connection attempts in the last 5 minutes).\n\n### VPN clients\n\nThe VPN is tested working with:\n\n*  **macOS 10.12 \xe2\x80\x93\xc2\xa010.14, iOS 10 \xe2\x80\x93 12**  \xe2\x80\x94\xc2\xa0Built-in clients. A `.mobileconfig` profile is generated for Mac and iOS, to set up secure ciphers and enable *Connect on demand* support.\n* **Windows 10 Pro** \xe2\x80\x94 Built-in client. PowerShell commands are generated to configure the VPN and secure ciphers.\n* **Ubuntu (17.04 and presumably others)** \xe2\x80\x94 Using strongSwan. A Bash script is generated to set this up.\n* **Android** \xe2\x80\x94 Using the strongSwan app.\n\nConfiguration files, scripts and instructions are sent by email. They are also dropped in the newly-created non-root user\'s home directory on the server (this point may be important, because VPS providers sometimes block traffic on port 25 by default, and conscientious email providers will sometimes mark a successfully sent email as spam).\n\n### Caveats\n\n* There\'s no IPv6 support \xe2\x80\x94 and, in fact, IPv6 networking is disabled \xe2\x80\x94 because supporting IPv6 prevents the use of `forceencaps`, and honestly also because I haven\'t got to grips with the security implications (`ip6tables` rules and so on).\n* The script **won\'t** work as-is on 16.04 LTS because the `certbot` package is outdated, found under the name `letsencrypt`, and doesn\'t renew certificates automatically.\n* Don\'t use this unmodified on a server you use for anything else, as it does as it sees fit with various wider settings that may conflict with what you\'re doing.\n\n\n## How?\n\n1. _Either:_ Pick a domain name for the VPN server and **ensure that it already resolves to the correct IP** by creating the appropriate A record in the DNS and making sure it has propagated. _Let\'s Encrypt_ needs this in order to create your server certificate.\n\n    _Or:_ Choose to rely on an automatic DNS name from [sslip.io](https://sslip.io/) of the form _nnn.nnn.nnn.nnn.sslip.io_, which will be used automatically if you omit to enter a hostname when prompted by the script.\n\n2. Start with a clean Ubuntu 18.04 Server installation. The cheapest VPSs offered by Linode, OVH, vps.ag, Hetzner and Vultr, and Scaleway\'s ARM64-2GB, have all been tested working. On Scaleway, unblock SMTP ports in the admin panel and *hard* reboot the server first, or your configuration email will not be delivered. On Vultr, port 25 may also be blocked, but you won\'t know, and the only way to fix it is to open a support ticket.\n\n3. Optionally, set up [key-based SSH authentication](https://help.ubuntu.com/community/SSH/OpenSSH/Keys) (alternatively, this may have been handled automatically by your server provider, or you may choose to stick with password-based authentication). This may require you to run some or all of the following commands, with appropriate substitutions, on the machine you\'re going to be logging in from:\n\n       ssh-keygen -t ed25519 -C "me@my-domain.tld"      # if you need a new key, ed25519 is the latest and possibly most secure option\n       ssh-keygen -t rsa -b 4096 -C "me@my-domain.tld"  # alternatively, use RSA and go (4,096 bits) large\n\n       ssh root@myvpn.example.net  # if your host forces a password change before anything else (e.g. Hetzner), do it now, then exit\n       ssh-copy-id -i ~/.ssh/id_ed25519 root@myvpn.example.net  # copy your public key over to the VPN server\n       ssh root@myvpn.example.net  # log back in to the server for the next step ...\n\n4. On your new server installation, become `root`, download the script, give it execute permissions, and run it:\n\n       wget https://raw.githubusercontent.com/jawj/IKEv2-setup/master/setup.sh\n       chmod u+x setup.sh\n       ./setup.sh\n    \n5. You\'ll be prompted to enter all the necessary details after the software updates and installations complete. If you are not using key-based SSH authentication, **you *must* pick a really strong password** for the login user when prompted, or your server *will* be compromised. \n\n    The part of your session where the script asks you questions should look something like this:\n    \n        --- Configuration: VPN settings ---\n\n        Network interface: eth0\n        External IP: 100.100.100.100\n\n        ** Note: hostname must resolve to this machine already, to enable Let\'s Encrypt certificate setup **\n        Hostname for VPN (default: 100.100.100.100.sslip.io): \n        VPN username: george\n        VPN password (no quotes, please): \n        Confirm VPN password: \n\n        Public DNS servers include:\n\n        176.103.130.130,176.103.130.131  AdGuard               https://adguard.com/en/adguard-dns/overview.html\n        176.103.130.132,176.103.130.134  AdGuard Family        https://adguard.com/en/adguard-dns/overview.html\n        1.1.1.1,1.0.0.1                  Cloudflare/APNIC      https://1.1.1.1\n        84.200.69.80,84.200.70.40        DNS.WATCH             https://dns.watch\n        8.8.8.8,8.8.4.4                  Google                https://developers.google.com/speed/public-dns/\n        208.67.222.222,208.67.220.220    OpenDNS               https://www.opendns.com\n        208.67.222.123,208.67.220.123    OpenDNS FamilyShield  https://www.opendns.com\n        9.9.9.9,149.112.112.112          Quad9                 https://quad9.net\n        77.88.8.8,77.88.8.1              Yandex                https://dns.yandex.com\n        77.88.8.88,77.88.8.2             Yandex Safe           https://dns.yandex.com\n        77.88.8.7,77.88.8.3              Yandex Family         https://dns.yandex.com\n        \n        DNS servers for VPN users (default: 1.1.1.1,1.0.0.1): 176.103.130.130,176.103.130.131\n\n        --- Configuration: general server settings ---\n\n        Timezone (default: Europe/London): \n        Email address for sysadmin (e.g. j.bloggs@example.com): me@my-domain.tld\n        Desired SSH log-in port (default: 22): 2222\n        New SSH log-in user name: george\n        Copy /root/.ssh/authorized_keys to new user and disable SSH password log-in [Y/n]? y\n        New SSH user\'s password (e.g. for sudo): \n        Confirm new SSH user\'s password: \n\n6. Once you\'re up and running, use these commands for some insight into what\'s going on:\n\n        sudo ipsec statusall           # status, who\'s connected, etc.\n        sudo iptables -L -v            # how much traffic has been forwarded, dropped, etc.?\n        sudo tail -f /var/log/syslog   # real-time logs of (dis)connections etc.\n        \n\n### Troubleshooting\n\nIf things don\'t work out right away ...\n\n* Make sure you created the client connection using the emailed `.mobileconfig` file or PowerShell commands. Setting it up manually via the OS GUI will not work, since it will default to insecure ciphers which the server has not been configured to support.\n\n* Check the server logs on strongSwan startup and when you try to connect, and the client logs when you try to connect. \n\n  * __On the server:__  Log in via SSH, then `sudo tail -f /var/log/syslog`. To see startup logs, log in to another session and `sudo ipsec restart` there, then switch back. To see what\'s logged during a connection attempt, try to connect from a client. \n  \n  * __On the client:__  On a Mac, open Console.app in /Applications/Utilities. If connecting from an iPhone, plug the iPhone into the Mac. Pick the relevant device (in the bar down the left), filter the output (in the box at top right) to `nesession`, and try to connect. (On Windows or Linux I don\'t know where you find the logs \xe2\x80\x94 if _you_ know, feel free to write the explanation and send a pull request).\n  \n* The setup script is now idempotent \xe2\x80\x94 you can run it repeatedly with no ill effects \xe2\x80\x94 so, when you\'ve fixed any issues, simply run it again.\n\n* If you have a tricky question about strongSwan, it\'s probably better to [raise it with the strongSwan team](https://strongswan.org/support.html) than file an issue here.\n  \n### Users\n\nTo add or change VPN users, it\'s:\n\n      sudo nano /etc/ipsec.secrets\n    \nEdit usernames and passwords as you see fit (but don\'t touch the first line, which specifies the server certificate). The line format for each user is:\n\n      someusername : EAP "somepassword"\n\nTo exit nano it\'s `Ctrl + O` then `Ctrl + X`, and to have strongSwan pick up the changes it\'s:\n\n      sudo ipsec secrets\n\n### Upgrades\n\nIf you\'re on a pre-18.04 version of Ubuntu, it\'s probably easiest to make a record of any changes to `ipsec.secrets`, blow the whole thing away and reinstall, then reinstate `ipsec.secrets`.\n\nNote that you may also need to delete and recreate all your client connection settings using the updated PowerShell commands or .mobileconfig file, since there have been a few cipher changes over time. \n\n### Bonus paranoia\n\nYour traffic is not logged on the server, but if you\'re feeling especially paranoid there are various things you could do to reduce logging further. A simple and somewhat drastic option (once you\'ve got everything working) is:\n\n      sudo rm /var/log/syslog && sudo ln -s /dev/null /var/log/syslog\n      sudo rm /var/log/auth.log && sudo ln -s /dev/null /var/log/auth.log\n\n## Why?\n\nWe use a similar setup as a corporate VPN at [PSYT](http://psyt.co.uk). And I use this to bounce my personal web browsing via Europe, in the hope of giving Theresa May\'s [Investigatory Powers Bill](https://www.openrightsgroup.org/blog/2015/investigatory-powers-bill-published-and-now-the-fight-is-on) the finger.\n\n### Why IKEv2?\n\n* Fair security\n* Built-in clients for latest iOS, Mac and Windows (+ free install on Android)\n* *Connect on demand* support on iOS and Mac\n* Robust to connection switching and interruptions via MOBIKE\n\nMore on IKEv2 at https://www.cl.cam.ac.uk/~mas90/resources/strongswan/ and https://www.bestvpn.com/blog/4147/pptp-vs-l2tp-vs-openvpn-vs-sstp-vs-ikev2/\n'