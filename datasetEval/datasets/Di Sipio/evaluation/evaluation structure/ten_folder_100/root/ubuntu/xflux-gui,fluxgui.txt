b'f.lux indicator applet\n======================\n_Better lighting for your computer_\n\nThe f.lux indicator applet `fluxgui` is an indicator applet to control\n`xflux`, an application that makes the color of your computer\'s\ndisplay adapt to the time of day: warm at night, and like sunlight\nduring the day. Reducing blue light exposure in the evening can help\nyou fall asleep at night. See https://justgetflux.com/research.html\nfor more details.\n\nThis project -- https://github.com/xflux-gui/fluxgui -- is only\nconcerned with the `fluxgui` indicator applet program, not with the\nunderlying `xflux` program the indicator applet controls. The `xflux`\nprogram is responsible for actually changing the color of your\nscreen. See https://justgetflux.com/linux.html for more information\nabout `xflux`.\n\n`xflux` is downloaded automatically when installing `fluxgui`. Simply\nrun `fluxgui` in your terminal after installation to open the applet.\nYou can also easily configure the applet to auto-start on login.\n\nInstall Instructions\n--------------------\n\n### Only Python 3 is Supported\n\nThe `fluxgui` is only known to work with Python 3.\n\n### Ubuntu PPA Package Manager Install\n\nTo install via apt:\n\n```bash\nsudo add-apt-repository ppa:nathan-renniewaldock/flux\nsudo apt-get update\nsudo apt-get install fluxgui\n```\n\nSee [ubuntuhandbook.org instructions](http://ubuntuhandbook.org/index.php/2016/03/install-f-lux-in-ubuntu-16-04/) for more details.\n\nIf you have trouble with the PPA version try the manual install below.\n\n### Fedora Package Manager Install\n\nThere is no Fedora package provided yet. Please use [Manual Install](#manual-install) below.\n\n### Manual Install\n\nTo install manually you first install the dependencies using your package manager, and then install `fluxgui` using the provided `setup.py`. The manual install can be done locally or system wide.\n\n#### Install Dependencies Using Package Manager\n\n##### Ubuntu/Debian\n\nPartial list of Python 3 dependencies (after the uprgrade to GTK+ 3 in PR #112. If you discover the correct deps, please submit a PR):\n\n```bash\nsudo apt-get install python3-distutils gir1.2-appindicator3-0.1 gir1.2-gtk-3.0\n```\n\nOut of date Python 2 dependencies; the remaining Python 3 deps should be similar:\n\n```bash\nsudo apt-get install git python-appindicator python-xdg python-pexpect python-gconf python-gtk2 python-glade2 libxxf86vm1  libcanberra-gtk-module\n```\n\n##### Fedora/CentOS\n\nWARNING: these dependencies may be out of date after the uprgrade to GTK+ 3 in PR #112. If you discover the correct deps, please submit a PR.\n\n```bash\nsudo yum install git python-appindicator python2-pyxdg python3-pexpect gnome-python2-gconf pygtk2 pygtk2-libglade\n```\n\n#### Install `fluxgui`\n\nThere are separate instructions in the code below for installing system wide and for installing locally in your user directory; choose one.\n\n```bash\n# Download fluxgui\ncd /tmp\ngit clone "https://github.com/xflux-gui/fluxgui.git"\ncd fluxgui\n./download-xflux.py\n\n# EITHER install system wide\nsudo ./setup.py install --record installed.txt\n\n# EXCLUSIVE OR, install in your home directory\n#\n# The fluxgui program installs\n# into ~/.local/bin, so be sure to add that to your PATH if installing\n# locally. In particular, autostarting fluxgui in Gnome will not work\n# if the locally installed fluxgui is not on your PATH.\n./setup.py install --user --record installed.txt\n       \n# Run flux\nfluxgui\n```\n\n### Manual Uninstall\n\nIf you manually installed instead of using package manager, you can uninstall\nby making `setup.py` tell you where it installed files and then\nremoving the installed files.\n\n```bash\n# EITHER uninstall globally\n#\n# The \'installed.txt\' is generated when you install. Reinstall first if you\n# as described above if you don\'t have an \'installed.txt\' file.\nsudo xargs rm -vr < installed.txt\nsudo glib-compile-schemas "$(dirname "$(grep apps.fluxgui.gschema.xml installed.txt)")"\n\n# EXCLUSIVE OR uninstall in your home directory\nxargs rm -vr < installed.txt\nglib-compile-schemas "$(dirname "$(grep apps.fluxgui.gschema.xml installed.txt)")"\n```\n\nLicense\n-------\n\nThe f.lux indicator applet is released under the [MIT License](https://github.com/xflux-gui/fluxgui/blob/master/LICENSE).\n\nDeveloping\n----------\n\n### Coding Style\n\nTry to stick to the same coding style that is already used in the file you are editing.\nIn particular, don\'t change the style of code you\'re not already editing for some other\nreason. Style changes create noise in the Git history and make the `git blame` output\nmisleading. When reviewing a PR, the maintainers want to focus on the logical changes\nintroduced by your code, and extraneous style changes make that harder.\n\n### Running `fluxgui` Without Installing\n\nWhen working on `fluxgui`, you can use\n```bash\ncd <path to your fluxgui.git clone>\n# You only need to download xflux once.\n./download-xflux.py\nglib-compile-schemas .\nGSETTINGS_SCHEMA_DIR=`pwd` PATH=`pwd`:$PATH PYTHONPATH=`pwd`/src:$PYTHONPATH ./fluxgui\n```\nto test your local copy of `fluxgui` without installing anything.\n\n### Change Logs, Versions, Releases\n\nNote changes in `./debian/changelog`.\n\nUse version `<ver>~pre` until ready to release a version. When\nreleasing a version remove the `~pre` suffix from the version strings\nand commit, copying the changelog changes for the current release into\nthe commit message. Then `git tag -a v<ver>`, using the commit msg for\nthe tag annotation. Finally, create another commit with the new `<next\nversion>~pre` version strings and changelog entry.\n\nWhen releasing the version string needs to be changed in\n`debian/changelog` and `setup.py`, and the release dates needs to be\nadded in `debian/changelog`.\n'