b'# Comfortable Swipe (Ubuntu)\n[![comfortable-swipe version](https://img.shields.io/github/release/Hikari9/comfortable-swipe.svg?label=comfortable-swipe&color=orange)](https://github.com/Hikari9/comfortable-swipe/releases)\n[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n\nComfortable, seamless, and fast 3-finger (and 4-finger) touchpad swipe gestures for Ubuntu 14.04 LTS and beyond. May work for other Linux distros that support `libinput`.\n\n## Installation\n\n1. Install git, libinput, and g++\n\n    ```bash\n    sudo apt-get install git libinput-tools libxdo-dev g++\n    ```\n\n2. Clone this repository\n\n    ```bash\n    git clone https://github.com/Hikari9/comfortable-swipe.git --depth 1\n    cd comfortable-swipe\n    ```\n\n3. Install\n\n    ```bash\n    bash install\n    ```\n\n4. You may delete the downloaded `comfortable-swipe` folder after installation.\n\n## How to Run\n\n1. You\'ll need some group permissions to read touchpad input data. Run\n    ```bash\n    sudo gpasswd -a $USER $(ls -l /dev/input/event* | awk \'{print $4}\' | head --line=1)\n    ```\n2. ***Important***: After inputing your `sudo` password, log out then log back in\n3. Run\n    ```\n    comfortable-swipe start\n    ```\n4. _Optional_: Automatically run on startup\n    ```\n    comfortable-swipe autostart\n    ```\n5. Check the status of your application by running\n    ```\n    comfortable-swipe status\n    ```\n\n## Configurations\nComfortable swipe makes use of keyboard shortcuts for configurations. Edit by running\n```\ngedit $(comfortable-swipe config)\n```\n\nMake sure to run after making changes:\n```\ncomfortable-swipe restart\n```\n\nProperty  | Description | Default Value | Default Behavior\n--------- | ----------- | -------------- | -----\nthreshold | mouse pixels to activate swipe; higher = less sensitive; floating-point (Note: Sky is the limit! Can be as large as 1000.0) | 0.0\nleft3     | 3-finger swipe left | ctrl+alt+Right | switch to right workspace\nleft4     | 4-finger swipe left | ctrl+alt+shift+Right | move window to right workspace\nright3    | 3-finger swipe right | ctrl+alt+Left | switch to left workspace\nright4    | 4-finger swipe right | ctrl+alt+shift+Left | move window to left workspace\nup3       | 3-finger swipe up | ctrl+alt+Down | switch to bottom workspace\nup4       | 4-finger swipe up | ctrl+alt+shift+Down | move window to bottom workspace\ndown3     | 3-finger swipe down | ctrl+alt+Down | switch to above workspace\ndown4     | 4-finger swipe down | ctrl+alt+shift+Up | move window to above workpace\n\nTaken from `man xdotool`:\n\n> Type a given keystroke. Examples being "alt+r", "Control_L+J",\n> "ctrl+alt+n", "BackSpace".\n>\n> Generally, any valid X Keysym string will work. Multiple keys are\n> separated by \'+\'. Aliases exist for "alt", "ctrl", "shift",\n> "super", and "meta" which all map to Foo_L, such as Alt_L and\n> Control_L, etc.\n>\n> In cases where your keyboard doesn\'t actually have the key you want\n> to type, xdotool will automatically find an unused keycode and use\n> that to type the key.\n\nRefer to https://www.linux.org/threads/xdotool-keyboard.10528/ for a complete list of keycodes you can use.\n\n\n## Debugging\n\nYou can check your touchpad driver by running\n\n```bash\ncomfortable-swipe debug\n```\n\nThis is an alias of `libinput debug-events`. This logs all gestures you make on your touchpad, along with other input-based events that can be captured by libinput.\n\nA working swipe gesture will show the following:\n\n```bash\n$ comfortable-swipe debug\n...\n-event9   DEVICE_ADDED     TouchPad                     seat0 default group7  cap:pg  size 70x50mm tap(dl off) left scroll-nat scroll-2fg-edge click-buttonareas-clickfinger dwt-on\n...\nevent9   GESTURE_SWIPE_BEGIN  +2.03s   3\n event9   GESTURE_SWIPE_UPDATE  +2.03s  3 -9.95/ 2.64 (-26.90/ 7.12 unaccelerated)\n event9   GESTURE_SWIPE_UPDATE  +2.03s  3 -10.44/ 3.19 (-28.22/ 8.62 unaccelerated)\n event9   GESTURE_SWIPE_UPDATE  +2.04s  3 -9.71/ 2.64 (-26.25/ 7.12 unaccelerated)\n event9   GESTURE_SWIPE_UPDATE  +2.05s  3 -8.98/ 2.64 (-24.28/ 7.12 unaccelerated)\n event9   GESTURE_SWIPE_UPDATE  +2.06s  3 -7.40/ 2.36 (-20.01/ 6.37 unaccelerated)\n event9   GESTURE_SWIPE_UPDATE  +2.06s  3 -6.31/ 2.50 (-17.06/ 6.75 unaccelerated)\n event9   GESTURE_SWIPE_UPDATE  +2.07s  3 -5.34/ 1.80 (-14.44/ 4.87 unaccelerated)\n event9   GESTURE_SWIPE_UPDATE  +2.08s  3 -4.61/ 2.08 (-12.47/ 5.62 unaccelerated)\n event9   GESTURE_SWIPE_UPDATE  +2.09s  3 -4.49/ 1.53 (-12.14/ 4.12 unaccelerated)\n event9   GESTURE_SWIPE_UPDATE  +2.09s  3 -4.01/ 1.25 (-10.83/ 3.37 unaccelerated)\n event9   GESTURE_SWIPE_UPDATE  +2.10s  3 -4.13/ 0.42 (-11.15/ 1.12 unaccelerated)\n event9   GESTURE_SWIPE_END  +2.11s     3\n ...\n```\n\nIf you can see `GESTURE_SWIPE_XXX` in your output, that means your touchpad supports multi-touch swipe gestures.\n\n## Uninstall\nDownload the `uninstall` script then run `bash uninstall`\n\n\n## Bug Reports\nSearch in [Issues](https://github.com/Hikari9/comfortable-swipe/issues?utf8=%E2%9C%93&q=is%3Aissue) if the problem has already been solved.\n\nOtherwise, [create a new issue](https://github.com/Hikari9/comfortable-swipe/issues/new) to report your bug.\n\nPlease include the output of the following:\n\n1. `lsb_release -a`\n2. `g++ --version`\n3. `ls -l /dev/input/event*`\n3. `xinput list | grep touchpad -i`\n4. `lsmod | grep hid`\n5. `comfortable-swipe status`\n6. `comfortable-swipe start`  (if you can run it)\n7. `comfortable-swipe debug`  (try swiping if you can see `GESTURE_SWIPE_XXX`)\n8. `cat $(comfortable-swipe config)`\n'