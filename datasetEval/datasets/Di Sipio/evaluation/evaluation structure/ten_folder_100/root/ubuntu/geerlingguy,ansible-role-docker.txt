b'# Ansible Role: Docker\n\n[![Build Status](https://travis-ci.org/geerlingguy/ansible-role-docker.svg?branch=master)](https://travis-ci.org/geerlingguy/ansible-role-docker)\n\nAn Ansible Role that installs [Docker](https://www.docker.com) on Linux.\n\n## Requirements\n\nNone.\n\n## Role Variables\n\nAvailable variables are listed below, along with default values (see `defaults/main.yml`):\n\n    # Edition can be one of: \'ce\' (Community Edition) or \'ee\' (Enterprise Edition).\n    docker_edition: \'ce\'\n    docker_package: "docker-{{ docker_edition }}"\n    docker_package_state: present\n\nThe `docker_edition` should be either `ce` (Community Edition) or `ee` (Enterprise Edition). You can also specify a specific version of Docker to install using the distribution-specific format: Red Hat/CentOS: `docker-{{ docker_edition }}-<VERSION>`; Debian/Ubuntu: `docker-{{ docker_edition }}=<VERSION>`.\n\nYou can control whether the package is installed, uninstalled, or at the latest version by setting `docker_package_state` to `present`, `absent`, or `latest`, respectively. Note that the Docker daemon will be automatically restarted if the Docker package is updated. This is a side effect of flushing all handlers (running any of the handlers that have been notified by this and any other role up to this point in the play).\n\n    docker_service_state: started\n    docker_service_enabled: true\n    docker_restart_handler_state: restarted\n\nVariables to control the state of the `docker` service, and whether it should start on boot. If you\'re installing Docker inside a Docker container without systemd or sysvinit, you should set these to `stopped` and set the enabled variable to `no`.\n\n    docker_install_compose: true\n    docker_compose_version: "1.22.0"\n    docker_compose_path: /usr/local/bin/docker-compose\n\nDocker Compose installation options.\n\n    docker_apt_release_channel: stable\n    docker_apt_arch: amd64\n    docker_apt_repository: "deb [arch={{ docker_apt_arch }}] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} {{ docker_apt_release_channel }}"\n    docker_apt_ignore_key_error: True\n\n(Used only for Debian/Ubuntu.) You can switch the channel to `edge` if you want to use the Edge release.\n\n    docker_yum_repo_url: https://download.docker.com/linux/centos/docker-{{ docker_edition }}.repo\n    docker_yum_repo_enable_edge: 0\n    docker_yum_repo_enable_test: 0\n\n(Used only for RedHat/CentOS.) You can enable the Edge or Test repo by setting the respective vars to `1`.\n\n    docker_users:\n      - user1\n      - user2\n\nA list of system users to be added to the `docker` group (so they can use Docker on the server).\n\n## Use with Ansible (and `docker` Python library)\n\nMany users of this role wish to also use Ansible to then _build_ Docker images and manage Docker containers on the server where Docker is installed. In this case, you can easily add in the `docker` Python library using the `geerlingguy.pip` role:\n\n```yaml\n- hosts: all\n\n  vars:\n    pip_install_packages:\n      - name: docker\n\n  roles:\n    - geerlingguy.pip\n    - geerlingguy.docker\n```\n\n## Dependencies\n\nNone.\n\n## Example Playbook\n\n```yaml\n- hosts: all\n  roles:\n    - geerlingguy.docker\n```\n\n## License\n\nMIT / BSD\n\n## Author Information\n\nThis role was created in 2017 by [Jeff Geerling](https://www.jeffgeerling.com/), author of [Ansible for DevOps](https://www.ansiblefordevops.com/).\n'