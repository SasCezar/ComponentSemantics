b'# cool-retro-term\n\n|> Default Amber|C:\\ IBM DOS|$ Default Green|\n|---|---|---|\n|![Default Amber Cool Retro Term](https://user-images.githubusercontent.com/121322/32070717-16708784-ba42-11e7-8572-a8fcc10d7f7d.gif)|![IBM DOS](https://user-images.githubusercontent.com/121322/32070716-16567e5c-ba42-11e7-9e64-ba96dfe9b64d.gif)|![Default Green Cool Retro Term](https://user-images.githubusercontent.com/121322/32070715-163a1c94-ba42-11e7-80bb-41fbf10fc634.gif)|\n\n## Description\ncool-retro-term is a terminal emulator which mimics the look and feel of the old cathode tube screens.\nIt has been designed to be eye-candy, customizable, and reasonably lightweight.\n\nIt uses the QML port of qtermwidget (Konsole) developed by me: https://github.com/Swordfish90/qmltermwidget .\n\nThis terminal emulator works under Linux and macOS and requires Qt 5.2 or higher.\n\n## Screenshots\n![Image](<https://i.imgur.com/TNumkDn.png>)\n![Image](<https://i.imgur.com/hfjWOM4.png>)\n![Image](<https://i.imgur.com/GYRDPzJ.jpg>)\n\n## Install\nWalk the easy way and install cool-retro-term using one of these convenient packages:\n\nJust grab the latest AppImage from the release page and make it executable and run it:\n\n    wget https://github.com/Swordfish90/cool-retro-term/releases/download/1.1.1/Cool-Retro-Term-1.1.1-x86_64.AppImage\n    chmod a+x Cool-Retro-Term-1.1.1-x86_64.AppImage\n    ./Cool-Retro-Term-1.1.1-x86_64.AppImage\n\n**Fedora** has the `cool-retro-term` in the official repositories. All you have to do is `sudo dnf install cool-retro-term`.\n\nUsers of **openSUSE** can grab a package from [Open Build Service](http://software.opensuse.org/package/cool-retro-term).\n\n**Arch** users can install this [package](https://aur.archlinux.org/packages/cool-retro-term-git/) directly via the [AUR](https://aur.archlinux.org):\n\n    yaourt -S aur/cool-retro-term-git\n\nor use:\n\n    pacman -S cool-retro-term\n\nto install precompiled from community repository.\n\n**Gentoo** users can now install the fourth release "1.1.1" from a 3rd-party repository preferably via layman:\n\n    USE="git" emerge app-portage/layman\n    wget https://www.gerczei.eu/files/gerczei.xml -O /etc/layman/overlays/gerczei.xml\n    layman -f -a qt -a gerczei # those who\'ve added the repo before 27/08/17 should remove, update and add it again as its source has changed\n    ACCEPT_KEYWORDS="~*" emerge =x11-terms/cool-retro-term-1.1.1::gerczei\n\nThe live ebuild (version 9999-r1) tracking the bleeding-edge WIP codebase also remains available.\n\nA word of warning: USE flags and keywords are to be added to portage\'s configuration files and every emerge operation should be executed with \'-p\' (short option for --pretend) appended to the command line first as per best practice!\n\nUsers of **Ubuntu 14.04 LTS (Trusty) up to 15.10 (Wily)** can use [this PPA](https://launchpad.net/~bugs-launchpad-net-falkensweb).\n\n**Ubuntu 17.10** can use [this PPA](https://launchpad.net/%7Evantuz/+archive/ubuntu/cool-retro-term)\n\n**Solus** users can install using `eopg`:\n```\neopkg it cool-retro-term\n```\n\n**macOS** users can grab the latest dmg from the [release page](https://github.com/Swordfish90/cool-retro-term/releases) or install via Homebrew:\n```\nbrew cask install cool-retro-term\n```\n\n**FreeBSD** users can install cool-retro-term with `pkg`:\n\n    pkg install cool-retro-term\n    \n## Build instructions (FreeBSD)\n\nGrab a copy of [the FreeBSD Ports Collection](https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/ports-using.html), modify [`/usr/ports/x11/cool-retro-term/Makefile`](https://svnweb.freebsd.org/ports/head/x11/cool-retro-term/Makefile?view=markup) as you like, and then run `make install` to build and install the emulator:\n\n```\ncd /usr/ports/x11/cool-retro-term\nmake install\n```\n\n## Build instructions (Linux)\n\nBuild cool-retro-term yourself, you know, the retro way.\n\n## Dependencies\nMake sure to install these first.\n\n---\n\n**Ubuntu 14.04**\n\n    sudo apt-get install build-essential qmlscene qt5-qmake qt5-default qtdeclarative5-dev qtdeclarative5-controls-plugin qtdeclarative5-qtquick2-plugin libqt5qml-graphicaleffects qtdeclarative5-dialogs-plugin qtdeclarative5-localstorage-plugin qtdeclarative5-window-plugin\n\n---\n\n**Ubuntu 16.10**\n\n    sudo apt-get install build-essential qmlscene qt5-qmake qt5-default qtdeclarative5-dev qml-module-qtquick-controls qtdeclarative5-qtquick2-plugin libqt5qml-graphicaleffects qml-module-qtquick-dialogs qtdeclarative5-localstorage-plugin qtdeclarative5-window-plugin\n\n---\n\n**Ubuntu 17.04**\n\n    sudo apt install build-essential libqt5qml-graphicaleffects qml-module-qt-labs-folderlistmodel qml-module-qt-labs-settings qml-module-qtquick-controls qml-module-qtquick-dialogs qmlscene qt5-default qt5-qmake qtdeclarative5-dev qtdeclarative5-localstorage-plugin qtdeclarative5-qtquick2-plugin qtdeclarative5-window-plugin\n\n---\n\n**Ubuntu 17.10**\n\n    sudo apt-get install build-essential qml-module-qtgraphicaleffects qml-module-qt-labs-folderlistmodel qml-module-qt-labs-settings qml-module-qtquick-controls qml-module-qtquick-dialogs qmlscene qt5-default qt5-qmake qtdeclarative5-dev qtdeclarative5-localstorage-plugin qtdeclarative5-qtquick2-plugin qtdeclarative5-window-plugin\n\n---\n\n**Debian Jessie and above**\n\n    sudo apt install build-essential qmlscene qt5-qmake qt5-default qtdeclarative5-dev qml-module-qtquick-controls qml-module-qtgraphicaleffects qml-module-qtquick-dialogs qml-module-qtquick-localstorage qml-module-qtquick-window2 qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel\n\n---\n\n**Fedora**\nThis command should install the known fedora dependencies:\n\n    sudo yum -y install qt5-qtbase qt5-qtbase-devel qt5-qtdeclarative qt5-qtdeclarative-devel qt5-qtgraphicaleffects qt5-qtquickcontrols redhat-rpm-config\n\nor:\n\n    sudo dnf -y install qt5-qtbase qt5-qtbase-devel qt5-qtdeclarative qt5-qtdeclarative-devel qt5-qtgraphicaleffects qt5-qtquickcontrols redhat-rpm-config\n\n---\n\n**Arch Linux**\n\n    sudo pacman -S qt5-base qt5-declarative qt5-quickcontrols qt5-graphicaleffects\n    \n---\n\n**openSUSE**\n\nAdd repository with latest Qt 5 (this is only needed on openSUSE 13.1, Factory already has it):\n\n    sudo zypper ar http://download.opensuse.org/repositories/KDE:/Qt5/openSUSE_13.1/ KDE:Qt5\n\nInstall dependencies:\n\n    sudo zypper install libqt5-qtbase-devel libqt5-qtdeclarative-devel libqt5-qtquickcontrols libqt5-qtgraphicaleffects\n\n---\n\n**Anyone else**\n\nInstall Qt directly from here http://qt-project.org/downloads . Once done export them in you path (replace "_/opt/Qt5.3.1/5.3/gcc_64/bin_" with your correct folder):\n    \n    export PATH=/opt/Qt5.3.1/5.3/gcc_64/bin/:$PATH\n---\n\n### Compile\nOnce you installed all dependencies (Qt is installed and in your path) you need to compile and run the application: \n\n```bash\n# Get it from GitHub\ngit clone --recursive https://github.com/Swordfish90/cool-retro-term.git\n\n# Build it\ncd cool-retro-term\n\n# Compile (Fedora and OpenSUSE user should use qmake-qt5 instead of qmake)\nqmake && make\n\n# Have fun!\n./cool-retro-term\n```\n\n## Build instructions (macOS)\n\n1. Install [Xcode](https://developer.apple.com/xcode/) and agree to the licence agreement\n2. Enter the following commands into the terminal:\n\n**Brew**\n\n```sh\nbrew install qt5\ngit clone --recursive https://github.com/Swordfish90/cool-retro-term.git\nexport CPPFLAGS="-I/usr/local/opt/qt5/include"\nexport LDFLAGS="-L/usr/local/opt/qt5/lib"\nexport PATH=/usr/local/opt/qt5/bin:$PATH\ncd cool-retro-term\nqmake && make\nmkdir cool-retro-term.app/Contents/PlugIns\ncp -r qmltermwidget/QMLTermWidget cool-retro-term.app/Contents/PlugIns\nopen cool-retro-term.app\n```\n\n**MacPorts**\n\n```sh\nsudo port install qt5\ngit clone --recursive https://github.com/Swordfish90/cool-retro-term.git\ncd cool-retro-term\n/opt/local/libexec/qt5/bin/qmake && make\nmkdir cool-retro-term.app/Contents/PlugIns\ncp -r qmltermwidget/QMLTermWidget cool-retro-term.app/Contents/PlugIns\nopen cool-retro-term.app\n```\n\n## Donations\nI made this project in my spare time because I love what I\'m doing. If you are enjoying it and you want to buy me a beer click [here](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=flscogna%40gmail%2ecom&lc=IT&item_name=Filippo%20Scognamiglio&currency_code=EUR&bn=PP%2dDonationsBF%3abtn_donate_LG%2egif%3aNonHosted).\n\nYou can also add "bounties" on your favourite issues. More information on the [Bountysource](https://www.bountysource.com/teams/crt/issues) page.\n'