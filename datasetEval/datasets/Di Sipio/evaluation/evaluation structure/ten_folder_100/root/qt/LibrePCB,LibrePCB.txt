b'# LibrePCB\n\n[![Azure Build Status](https://dev.azure.com/LibrePCB/LibrePCB/_apis/build/status/LibrePCB.LibrePCB?branchName=master)](https://dev.azure.com/LibrePCB/LibrePCB/_build/latest?definitionId=2&branchName=master)\n[![AppVeyor Build Status](https://ci.appveyor.com/api/projects/status/jq41j14jlgs6rxsn/branch/master?svg=true)](https://ci.appveyor.com/project/librepcb/librepcb/branch/master)\n[![Become a Patron](https://img.shields.io/badge/patreon-donate-orange.svg)](https://www.patreon.com/librepcb)\n[![Donate with Bitcoin](https://img.shields.io/badge/bitcoin-donate-yellow.svg)](https://blockchain.info/address/1FiXZxoXe3px1nNuNygRb1NwcYr6U8AvG8)\n[![irc.freenode.net](https://img.shields.io/badge/IRC-%23librepcb-blue.svg)](https://webchat.freenode.net/?channels=#librepcb)\n\n\n## About LibrePCB\n\nLibrePCB is a free [EDA](https://en.wikipedia.org/wiki/Electronic_design_automation)\nsoftware to develop printed circuit boards. It runs on Linux, Windows and Mac.\nThe project is still in a quite early development stage (no stable release available).\nSee [Project Status](https://docs.librepcb.org/#projectstatus) for more information\nabout the currently available features, limitations and known bugs.\n\n![Screenshot](doc/screenshot.png)\n\n### Features\n\n- Cross-platform (Unix/Linux, Mac OS X, Windows)\n- Multilingual (both application and library elements)\n- All-In-One: project management + library/schematic/board editors\n- Intuitive, modern and easy-to-use graphical user interface\n- Very powerful library design with some innovative concepts\n- Human-readable file formats for both libraries and projects\n- Multi-PCB feature (different PCB variants of the same schematic)\n- Automatic netlist synchronisation between schematic and board\n\n\n## Installation & Usage\n\n**Please read our [user manual](https://docs.librepcb.org/) to see how you can\ninstall and use LibrePCB.**\nThe [Getting Started](https://docs.librepcb.org/#gettingstarted) guide\ngives you a quick introduction to LibrePCB.\n\nIn addition to the installation methods described in the user manual, Arch\nLinux users can also install the package\n[librepcb-git](https://aur.archlinux.org/packages/librepcb-git/) from the AUR.\nThe package clones and builds the latest (unstable!) version of the `master`\nbranch from GitHub.\n\n\n## Contributing\n\nContributions are welcome! See our [Contributing Guide](CONTRIBUTING.md) for\ndetails.\n\nFor internal details take a look at the\n[automatically generated documentation (doxygen)](https://doxygen.librepcb.org/)\n\n## Development\n\n***WARNING: The `master` branch always contains the latest UNSTABLE version of\nLibrePCB. Everything you do with this unstable version could break your\nworkspace, libraries or projects, so you should not use it productively! For\nproductive use, please install an official release as described in the\n[user manual](https://docs.librepcb.org/). For development, please read details\n[here](https://developers.librepcb.org/df/d30/doc_developers.html#doc_developers_unstable_versions).***\n\n### Requirements\n\nTo compile LibrePCB, you need the following software components:\n\n- g++ >= 4.8, MinGW >= 4.8, or Clang >= 3.3 (C++11 support is required)\n- [Qt](http://www.qt.io/download-open-source/) >= 5.2\n- [zlib](http://www.zlib.net/)\n- [OpenSSL](https://www.openssl.org/)\n\n#### Prepared Docker Image\n\nInstead of installing the dependencies manually on your system (see instructions\nbelow), you can also use our [Docker](https://www.docker.com/) image with all\ndependencies pre-installed. Just follow\n[these instructions](https://github.com/LibrePCB/LibrePCB/tree/master/dev/docker).\n\n#### Installation on Debian/Ubuntu/Mint\n\n```bash\nsudo apt-get install git build-essential qt5-default qttools5-dev-tools libglu1-mesa-dev openssl zlib1g zlib1g-dev libqt5opengl5-dev\nsudo apt-get install qt5-doc qtcreator # optional\n```\n\n#### Installation on Arch Linux\n\n```bash\nsudo pacman -S git base-devel qt5-base qt5-tools desktop-file-utils shared-mime-info openssl zlib\nsudo pacman -S qt5-doc qtcreator # optional\n```\n\n#### Installation on Mac OS X\n\n1. Install Xcode through the app store and start it at least once (for the license)\n2. Install [homebrew](https://github.com/Homebrew/brew) (**the** package manager)\n3. Install *qt5*: `brew update && brew install qt5`\n4. Make the toolchain available: `brew unlink qt && brew link --force qt5`\n\n#### Installation on Windows\n\nDownload and run the\n[Qt for Windows (MinGW) installer](http://download.qt.io/official_releases/qt/5.8/5.8.0/qt-opensource-windows-x86-mingw530-5.8.0.exe)\nfrom [here](https://www.qt.io/download-open-source/). LibrePCB does not compile\nwith MSVC, so you must install following components with the Qt installer:\n\n- The MinGW compiler itself\n- The Qt libraries for MinGW\n\n### Cloning\n\nIt\'s important to clone the repository recursively to get all submodules too:\n\n```bash\ngit clone --recursive https://github.com/LibrePCB/LibrePCB.git && cd LibrePCB\n```\n\n### Updating\n\nWhen updating the repository, make sure to also update all the submodules\nrecursively. Otherwise you may get strange compilation errors:\n\n```bash\ngit submodule update --init --recursive\n```\n\n### Building\n\n#### Using Qt Creator\n\nBuilding with [Qt Creator](http://doc.qt.io/qtcreator/) is probably the easiest\nway. Simply open the `librepcb.pro` file.\n\nWhen opening a project in Qt Creator for the first time, you need to configure\nthe Desktop kit:\n\n![qtcreator_run](doc/qtcreator_desktopkit.png)\n\nClick on the "Configure Project" button to get started.\n\nNote: To keep build time as low as possible make sure to set the correct make\nflags to use all available CPU cores to build. See this [stackoverflow\nanswer](https://stackoverflow.com/questions/8860712/setting-default-make-options-for-qt-creator).\n\n#### Using qmake and make\n\nSince Qt Creator is also using qmake and make to build, it\'s easy to do the same\non the command line:\n\n```bash\nmkdir build && cd build\nqmake -r ../librepcb.pro\nmake -j 8\n```\n\n### Run LibrePCB\n\n#### From Qt Creator\n\nSelect the run configuration `librepcb` and click on the `Run` button:\n\n![qtcreator_run](doc/qtcreator_run.png)\n\n#### From Command Line\n\nExecute inside the `build` directory:\n\n```bash\n./output/librepcb             # Unix/Linux\nopen ./output/librepcb.app    # Mac OS X\noutput\\librepcb.exe           # Windows\n```\n\n### Installation\n\nOn a Unix/Linux system, LibrePCB can be installed with `sudo make install`.\n\n### Workspace\n\nAt the first startup, LibrePCB asks for a workspace directory where the library\nelements and projects are located. For developers there is a demo workspace\ninclusive some libraries and projects (useful for testing purposes) at\n[LibrePCB/demo-workspace](https://github.com/LibrePCB/demo-workspace).\n\n\n## Credits\n\n- First of all, many thanks to all of our [contributors](AUTHORS.md)!\n- Thanks also to [cloudscale.ch](https://www.cloudscale.ch/) for sponsoring our\n  API server!\n\n\n## License\n\nLibrePCB is published under the [GNU GPLv3](http://www.gnu.org/licenses/gpl-3.0.html) license.\n'