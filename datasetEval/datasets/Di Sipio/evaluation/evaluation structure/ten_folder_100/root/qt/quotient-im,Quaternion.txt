b'# Quaternion\n\n<a href=\'https://matrix.org\'><img src=\'https://matrix.org/docs/projects/images/made-for-matrix.png\' alt=\'Made for Matrix\' height=64 target=_blank /></a>\n\n[![license](https://img.shields.io/github/license/quotient-im/quaternion.svg)](https://github.com/quotient-im/Quaternion/blob/master/COPYING)\n![status](https://img.shields.io/badge/status-beta-yellow.svg)\n[![release](https://img.shields.io/github/release/quotient-im/quaternion/all.svg)](https://github.com/quotient-im/Quaternion/releases/latest)\n[![](https://img.shields.io/matrix/quotient:matrix.org.svg)](https://matrix.to/#/#quotient:matrix.org)\n[![](https://img.shields.io/cii/percentage/1663.svg?label=CII%20best%20practices)](https://bestpractices.coreinfrastructure.org/projects/1663/badge)\n[![Language grade: C/C++](https://img.shields.io/lgtm/grade/cpp/g/quotient-im/Quaternion.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/quotient-im/Quaternion/context:cpp)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n\nQuaternion is a cross-platform desktop IM client for the [Matrix](https://matrix.org) protocol. This file contains general information about application usage and settings. See [BUILDING.md](./BUILDING.md) for building instructions.\n\n## Contacts\nMost of talking around Quaternion happens in the room of its parent project,\nQuotient: [#quotient:matrix.org](https://matrix.to/#/#quotient:matrix.org).\n`#quaternion:matrix.org` currently points to the old version of the Quotient\nroom - if you ended up there, just go to the upgraded room instead\n(using Quaternion 0.0.9.4 or later, or Riot).\n\nYou can file issues at\n[the project\'s issue tracker](https://github.com/quotient-im/Quaternion/issues).\nIf you find what looks like a security issue, please use instructions\nin SECURITY.md.\n\n## Download and install\nThe latest release (with links to cross-platform source code archives, as well\nas archived binaries for Windows and macOS) can be found on the\n[GitHub Releases page](https://github.com/quotient-im/Quaternion/releases/latest).\n\nFor those who want to run the bleeding edge code, automatic builds from\ncontinuous integration pipelines can be found in the\n[Quaternion CI repo at bintray](https://bintray.com/quotient/ci/Quaternion/#files).\nAll these builds come with fairly recent Qt bundled. Beware: these builds may\ntell you obscenities in your local language, steal your smartphone and\nshare your private photos. Jokes aside: unless you are ready for very bad and\nsweeping surprises, do NOT run those. Before you do, make sure you have your\nbackups in order.\n\nIf you want to build Quaternion from sources, see [BUILDING.md](./BUILDING.md).\nPackagers are still scarce, so please step up and support your favourite system!\n\n### Requirements\nQuaternion 0.0.9.5 packages on Linux need Qt version 5.9 or higher;\nDebian Buster, Ubuntu Bionic Beaver, Fedora 28 and OpenSUSE 15 are new enough.\nFor Windows, macOS, AppImage, Flatpak all needed Qt libraries are included\nin the packages. On Windows, you need to separately install OpenSSL\n(see the next section).\n\n#### Windows\nSince we can\'t rely on package management on Windows, Qt libraries and\na C++ runtime are packaged/installed together with Quaternion. However,\nOpenSSL libraries are not installed automatically because of export restrictions.\nUnless you already have them around (e.g., they are a part of any\nQt development installation), you should install OpenSSL yourself.\n[OpenSSL\'s Wiki](https://wiki.openssl.org/index.php/Binaries) lists a few links\nto OpenSSL installers. They come in different build configurations; Quaternion\narchives need OpenSSL made with/for Visual Studio (not MinGW), and the version\nshould be chosen as follows:\n* If the Quaternion archive is produced before 11-08-2019 (including older\n  CI builds and releases 0.0.9.4 and older), download OpenSSL 1.0.x; be aware\n  that this version is only supported until the end of 2019.\n* If the archive is made on 11-08-2019 or later, download OpenSSL 1.1.x.\n\nThe deciding point is the used Qt version. To avoid any doubt, go to the folder\nyou unpacked Quaternion to and check the version of Qt5Network.dll (it\'s shown\nin "Properties" dialog box that you can get from the context menu). If it\'s\nQt 5.12.3 or older, you need OpenSSL 1.0; if it\'s newer, take OpenSSL 1.1.\n\n#### macOS\nYou can download the latest release from [GitHub](https://github.com/quotient-im/Quaternion/releases/latest).\n\nAlternatively, you can install Quaternion from [Homebrew Cask](https://brew.sh)\n```\nbrew cask install quaternion\n```\n\n#### Linux and others\nQuaternion is packaged for many distributions, including various versions of\nDebian, Ubuntu and OpenSUSE, as well as Arch Linux, NixOS and FreeBSD.\nA pretty comprehensive list can be found at\n[Repology](https://repology.org/project/quaternion/versions).\n\nFlatpaks for Quaternion are available from Flathub. To install, use:\n```\nflatpak install https://flathub.org/repo/appstream/com.github.quaternion.flatpakref\n```\nWhile generally working well, Flatpak support is still a bit experimental.\nPlease file issues at https://github.com/flathub/com.github.quaternion\nif you believe there\'s a problem specific to Flatpak.\n\n## Running\nJust start the executable in your most preferred way - either from the build\ndirectory or from the installed location. If you\'re interested in tweaking\nconfiguration beyond what\'s available in the UI, read the "Configuration"\nsection further below.\n\n## Translation\nQuaternion uses [Lokalise.co](https://lokalise.co) for the translation effort.\nIt\'s easy to participate:\n[join the project at Lokalise.co](https://lokalise.co/public/730769035bbc328c31e863.62506391/),\nask to add your language (either in #quotient:matrix.org or in\nthe Lokalise project chat) and start translating! Many languages are still\nlonging for contributors.\n\n## Configuration\nThe only non-trivial command-line option available so far is `--locale` - it\nallows you to override the locale Quaternion uses (an equivalent of setting\n`LC_ALL` variable on UNIX-based systems). As of version 0.0.9.3, Quaternion has\nno translations to other languages, so you will hardly notice the difference in\nmessages; number and date formats will be following the setting though. Version\n0.0.9.4 gains German, Polish, and Russian translations.\n\nQuaternion stores its configuration in a way standard for Qt applications. It will read and write the configuration in the user-specific location (creating it if non-existent) and will only read the system-wide location with reasonable defaults if the configuration is nowhere to be found.\n\n- Linux:\n  - system-wide: `$XDG_CONFIG_DIR/Quotient/quaternion` or\n    `/etc/xdg/Quotient/quaternion`\n  - user-specific: `$HOME/.config/Quotient/quaternion.conf`\n- macOS:\n  - system-wide: `/Library/Preferences/im.quotient.quaternion.plist`\n  - user-specific: `$HOME/Library/Preferences/im.quotient.quaternion.plist`\n- Windows: registry keys under\n  - system-wide: `HKEY_LOCAL_MACHINE\\Software\\Quotient\\quaternion`\n  - user-specific: `HKEY_CURRENT_USER\\Software\\Quotient\\quaternion`\n\nSome settings exposed in UI (Settings and View menus):\n\n- `UI/notifications` - a general setting whether Quaternion should distract\n  the user with notifications and how.\n  - `none` suppresses notifications entirely (rooms and messages are still\n    hightlighted but the tray icon is muted);\n  - `non-intrusive` allows the tray icon show notification popups;\n  - `intrusive` (default) adds to that activation of Quaternion window\n    (i.e. the application blinking in the task bar, or getting raised,\n    or otherwise demands attention in an environment-specific way).\n- `UI/timeline_layout` - this allows to choose the timeline layout. If this is\n  set to "xchat", Quaternion will show the author to the left of each message,\n  in a xchat/hexchat style (this was also the only available layout on\n  Quaternion before 0.0.9.2). Any other value will select the "default" layout,\n  with author labels above blocks of messages.\n- `UI/use_shuttle_dial` - Quaternion will use a shuttle dial instead of\n  a classic scrollbar for the timeline\'s vertical scrolling control. Shuttle\n  dials usually control change velocity instead of value; in this case,\n  moving the dial away from the neutral position increases the speed of\n  scrolling. This is more convenient if you need to quickly move around without\n  knowing position relative to the edges, as is the case of a Matrix timeline;\n  however, the control is unusual and not all people like it. Shuttle scrollbar\n  is enabled by default; set this to false (or 0) to use the classic scrollbar.\n- `UI/autoload_images` - whether full-size images should be loaded immediately\n  once the message is shown on the screen. The default is to automatically load\n  full-size images; set this to false (or 0) to disable that and only load\n  a thumbnail initially.\n- `UI/show_noop_events` - set this to 1 to show state events that do not alter\n  the state (you\'ll see "(repeated)" next to most of those).\n- `UI/RoomsDock/tags_order` - allows to alter the order of tags in the room\n  list. The default value for this key will be set by Quaternion if it doesn\'t\n  it so that you could edit it further. This is a list of tags/namespaces;\n  `.*` at the end of the string means a namespace, other strings are treated\n  as fully specified tags. E.g., the default order looks like this:\n  `m.favourite,u.*,im.quotient.direct,im.quotient.none,m.lowpriority`.\n  If a tag is not mentioned and does not fit any namespace, it will be put at\n  the end in lexicographic order. Tags within the same namespace are also\n  ordered lexicographically.\n\nSettings not exposed in UI:\n\n- `UI/condense_chat` - set this to 1 to make the timeline rendered tighter,\n  eliminating vertical gaps between messages as much as possible.\n- `UI/show_author_avatars` - set this to 1 (or true) to show author avatars in\n  the timeline (default if the timeline layout is set to default); setting this\n  to 0 (or false) will suppress avatars (default for the XChat timeline layout).\n- `UI/suppress_local_echo` - set this to 1 (or true) to suppress showing local\n  echo (events sent from the current application but not yet confirmed by\n  the server). By default local echo is shown.\n- `UI/animations_duration_ms` - defines the base duration (in milliseconds) of\n  animation effects in the timline. The default is 400; set it to 0 to disable\n  animation.\n- `UI/outgoing_color` - set this to the color name you prefer for text you sent;\n  HTML color names and SVG `#codes` are supported; by default it\'s `#204A87`\n  (navy blue).\n- `UI/highlight_color` - set this to the color name you prefer for highlighted\n  rooms/messages; HTML color names and SVG `#codes` are supported;\n  by default it\'s `orange`.\n- `UI/highlight_mode` - set this to `text` if you prefer to use the highlight\n  color as the text color (the only option available until 0.0.9.3); the new\n  default is to use the background for highlighting.\n- `UI/use_human_friendly_dates` - set this to false (or 0) if you do NOT want\n  usage of human-friendly dates ("Today", "Monday" instead of the standard\n  day-month-year triad) in the UI; the default is true.\n- `UI/quote_style` - the quote template. The `\\\\1` means the quoted string.\n  By default it\'s `> \\\\1\\n`.\n- `UI/quote_regex` - set to `^([\\\\s\\\\S]*)` to add `UI/quote_style` only at\n  the beginning and end of the quote. By default it\'s `(.+)(?:\\n|$)`.\n- `UI/Fonts/render_type` - select how to render fonts in Quaternion timeline;\n  possible values are "NativeRendering" (default) and "QtRendering".\n- `UI/Fonts/family` - override the font family for the whole application.\n  If not specified, the default font for your environment is used.\n- `UI/Fonts/pointSize` - override the font size (in points) for the whole\n  application. If not specified, the default size for your environment is used.\n- `UI/Fonts/timeline_family` - font family (for example `Monospace`) to\n  display messages in the timeline. If not specified, the application-wide font\n  family is used.\n- `UI/Fonts/timeline_pointSize` - font size (in points) to display messages\n  in the timeline. If not specified, the application-wide point size is used.\n- `UI/maybe_read_timer` - threshold time interval in milliseconds for a displayed\n  message to be considered as read.\n\nSince version 0.0.9.4, AppImage binaries for Linux and .dmg files for macOS\nare compiled with Qt Keychain support. It means that Quaternion will try\nto store your access token(s) in the secure storage configured for your\nplatform. If the storage or Qt Keychain are not available, Quaternion will try\nto store your access token(s) in a dedicated file with restricted access rights\nso that only the owner can access them (this doesn\'t really work on Windows -\nsee below) and with the name matching your user id in the following directory:\n\n- Linux: `$HOME/.local/share/Quotient/quaternion`\n- macOS: `$HOME/Library/Application Support/Quotient/quaternion`\n- Windows: `%LOCALAPPDATA%/Quotient/quaternion`\n\nUnfortunately, Quaternion cannot enforce proper access rights on Windows;\nyou\'ll see a warning about it and will be able to either refuse saving your\naccess token in that case or agree and setup file permissions outside Quaternion.\n\nQuaternion caches the rooms state and user/room avatars on the file system\nin a conventional location for your platform, as follows:\n\n- Linux: `$HOME/.cache/Quotient/quaternion`\n- macOS: `$HOME/Library/Cache/Quotient/quaternion`\n- Windows: `%LOCALAPPDATA%/Quotient/quaternion/cache`\n\nCache files are safe to delete at any time but Quaternion only looks for them\nwhen starting up and overwrites them regularly while running; so it only\nmakes sense to delete cache files when Quaternion is not running. If Quaternion\ndoesn\'t find or cannot fully load cache files at startup it downloads\nthe whole state from Matrix servers. It tries to optimise this process by\nlazy-loading if the server supports it; in an unlucky case when the server\ncannot do lazy-loading, initial sync can take much time (up to a minute and\neven more, depending on the number of rooms and the number of users in them).\nDeleting cache files may help with problems such as missing avatars,\nrooms stuck in a wrong state etc.\n\n## Troubleshooting\n\nlibQuotient has its own section on troubleshooting - make sure to look into its README.md too.\n\n#### Continuously reconnecting though the network is fine\nIf Quaternion starts displaying the message that it couldn\'t connect to the server and retries more than a couple of times without success, while you\'re sure you have the network connection - double-check that you don\'t have Qt bearer management libraries around, as they cause issues with some WiFi networks. To do that, try to find "bearer" directory where your Qt is installed (on Windows it\'s next to Quaternion executable; on Linux it\'s a part of Qt installation, usually in `/usr/lib/qt5/plugins`). Then delete or rename it (on Windows) or delete the package that this directory is in (on Linux).\n\n#### No messages in the timeline\nIf Quaternion runs but you can\'t see any messages in the chat (though you can\ntype them in) - you have either of two problems with Qt Quick (or if you are\nextremely unlucky, both):\n\n- You might not have Qt Quick libraries and/or plugins installed. On Linux,\n  this may be a case when you are not using the official packages for your\n  distro. Check the stdout/stderr logs, they are quite clear in such cases.\n  On Windows and Mac, just open an issue (see "Contacts" in the beginning of\n  this README), because most likely not all necessary Qt parts were installed\n  along with Quaternion (which is a bug).\n- If the logs confirm that QML is up and running but there\'s still nothing\n  for the timeline, you might have hit an issue with QML view stacking order,\n  such as #355/#356. If you use Qt 5.12 or newer (as is the case on Windows\n  and macOS recently), please file a bug: it should not happen with\n  recent Qt at all. If you are on Linux and have to use older Qt, you have\n  to build Quaternion from sources, passing `-DUSE_QQUICKWIDGET=ON` to CMake.\n  Note that it\'s prone to crashing on some platforms so it\'s best to still\n  find a way to run Quaternion with Qt 5.12 (using AppImage, e.g.).\n\n#### SSL problems\nEspecially on Windows, if Quaternion starts up but upon an attempt to connect\nreturns a message like "Failed to make SSL context" - correct SSL libraries\nare not reachable by the Quaternion binary. Re-read the chapter "Requirements",\nsection "Windows" in the beginning of this file and do as it advises. Make sure\nyou use correct version OpenSSL.\n\n#### DLL hell\nIf you have troubles with dynamic libraries on Windows, [the Dependencies Walker tool aka depends.exe](http://www.dependencywalker.com/) helps a lot in navigating the DLL hell - especially when you have a mixed 32/64-bit environment or have different versions of the same library scattered around. OpenSSL, in particular, is notoriously often dragged along by all kinds of software; and you may have other copies of Qt around which you didn\'t even know about - e.g., with CMake GUI.\n\n#### Logging\nIf you run Quaternion from a console on Windows and want to see log messages,\nset `QT_LOGGING_TO_CONSOLE=1` so that the output is redirected to the console.\n\nWhen chasing bugs and investigating crashes, it helps to increase the debug level. Thanks to [@eang:matrix.org](https://matrix.to/#/@eang:matrix.org]), libQuotient uses Qt logging categories - the "Troubleshooting" section of the library\'s `README.md` elaborates on how to setup logging. Note that Quaternion itself doesn\'t use Qt logging categories yet, only the library does.\n\nYou may also want to set `QT_MESSAGE_PATTERN` to make logs slightly more informative (see https://doc.qt.io/qt-5/qtglobal.html#qSetMessagePattern for the format description). My (@kitsune\'s) `QT_MESSAGE_PATTERN` looks as follows:\n`%{time h:mm:ss.zzz}|%{category}|%{if-debug}D%{endif}%{if-info}I%{endif}%{if-warning}W%{endif}%{if-critical}C%{endif}%{if-fatal}F%{endif}|%{message}` (the scary `%{if}`s are just encoding the logging level into its initial letter).\n\n## Screenshot\n![Screenshot](quaternion.png)\n'