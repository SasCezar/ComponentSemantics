b'# Advanced Docking System for Qt\r\n[![Gitter](https://badges.gitter.im/mfreiholz/Qt-Advanced-Docking-System.svg)](https://gitter.im/mfreiholz/Qt-Advanced-Docking-System?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\r\n\r\nManages content widgets more like Visual Studio or similar programs.\r\nI also try to get everything done with basic Qt functionality.\r\nBasic usage of QWidgets an QLayouts and using basic styles as much as possible.\r\n\r\n![Layout of widgets](preview.png)\r\n![Dropping widgets](preview-dragndrop.png)\r\n\r\n## Tested Compatible Environments\r\n- Windows 7 / 8 / 8.1 / 10\r\n- Ubuntu 15.10\r\n\r\n## Build\r\nOpen the `build.pro` with QtCreator and start the build, that\'s it.\r\nYou can run the demo project and test it yourself.\r\n\r\n## Release & Development\r\nThe `master` branch is not guaranteed to be stable or does not even build, since it is the main working branch.\r\nIf you want a version that builds, you should always use a release/beta tag.\r\n\r\n## Getting started / Example\r\nThe following example shows the minimum code required to use ADS.\r\n\r\n_MyWindow.h_\r\n```cpp\r\n#include <QMainWindow>\r\n#include "ads/API.h"\r\n#include "ads/ContainerWidget.h"\r\n#include "ads/SectionContent.h"\r\nclass MyWindow : public QMainWindow\r\n{\r\n\tQ_OBJECT\r\npublic:\r\n\tMyWindow(QWidget* parent);\r\n\t\r\nprivate:\r\n\t// The main container for dockings.\r\n\tADS_NS::ContainerWidget* _container;\r\n\t\r\n\t// You always want to keep a reference of your content,\r\n\t// in case you need to perform any action on it (show, hide, ...)\r\n\tADS_NS::SectionContent::RefPtr _sc1; \r\n};\r\n```\r\n\r\n_MyWindow.cpp_\r\n```cpp\r\n#include "MyWindow.h"\r\n#include <QLabel>\r\nMyWindow::MyWindow(QWidget* parent) : QMainWindow(parent)\r\n{\r\n\t_container = new ADS_NS::ContainerWidget();\r\n\tsetCentralWidget(_container);\r\n\t\r\n\t_sc1 = ADS_NS::SectionContent::newSectionContent(QString("Unique-Internal-Name"), _container, new QLabel("Visible Title"), new QLabel("Content Widget"));\r\n\t_container->addSectionContent(_sc1, NULL, ADS_NS::CenterDropArea);\r\n}\r\n\r\nstatic void initStyleSheet(QApplication& a)\r\n{\r\n\t//Q_INIT_RESOURCE(ads); // If static linked.\r\n\tQFile f(":ads/stylesheets/default-windows.css");\r\n\tif (f.open(QFile::ReadOnly))\r\n\t{\r\n\t\tconst QByteArray ba = f.readAll();\r\n\t\tf.close();\r\n\t\ta.setStyleSheet(QString(ba));\r\n\t}\r\n}\r\n\r\nint main(int argc, char *argv[])\r\n{\r\n\tQApplication a(argc, argv);\r\n\ta.setQuitOnLastWindowClosed(true);\r\n\tinitStyleSheet(a);\r\n\r\n\tMainWindow mw;\r\n\tmw.show();\r\n\treturn a.exec();\r\n}\r\n```\r\n\r\n## Developers\r\n[Manuel Freiholz](https://mfreiholz.de), Project Maintainer\r\n\r\n## License information\r\n![WTFPL](license.png)\r\n\r\nThis projects uses the [WTFPL license](http://www.wtfpl.net/)\r\n(Do **W**hat **T**he **F**uck You Want To **P**ublic **L**icense)\r\n\r\nUsing it? Let us know by creating a [new issue](https://github.com/mfreiholz/qt-docks/issues/new) (You don\'t have to, of course).\r\n'