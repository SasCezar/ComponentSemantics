b"[![Build Status](https://img.shields.io/travis/qxmpp-project/qxmpp.svg)](https://travis-ci.org/qxmpp-project/qxmpp)\n[![Code Coverage](https://img.shields.io/codecov/c/github/qxmpp-project/qxmpp.svg)](https://codecov.io/gh/qxmpp-project/qxmpp)\n\nAbout QXmpp\n===========\n\nQXmpp is a cross-platform C++ XMPP client and server library. It is written\nin C++ and uses Qt framework.\n\nQXmpp strives to be as easy to use as possible, the underlying TCP socket,\nthe core XMPP RFCs (RFC3920 and RFC3921) and XMPP extensions have been\nnicely encapsulated into classes. QXmpp comes with full API\ndocumentation, automatic tests and many examples.\n\nQXmpp uses Qt extensively, and as such users need to a have working knowledge\nof C++ and Qt basics (Signals and Slots and Qt data types).\n\nQt is the only third party library which is required to build QXmpp, but\nlibraries such as speex and theora enable additional features.\n\nQXmpp is released under the terms of the GNU Lesser General Public License,\nversion 2.1 or later.\n\nBuilding QXmpp\n==============\n\nQXmpp requires Qt 5.7 or higher with SSL enabled.\nIt uses CMake as build system.\n\nBuild from command line:\n\n    mkdir build\n    cd build\n    cmake ..\n    cmake --build .\n\nYou can pass the following arguments to CMake:\n\n    BUILD_SHARED                  to build with shared type library, otherwise static (default: true)\n    BUILD_DOCUMENTATION           to build the documentation (default: false)\n    BUILD_EXAMPLES                to build the examples (default: true)\n    BUILD_TESTS                   to build the unit tests (default: true)\n    WITH_OPUS                     to enable opus audio codec (default: false)\n    WITH_SPEEX                    to enable speex audio codec (default: false)\n    WITH_THEORA                   to enable theora video codec (default: false)\n    WITH_VPX                      to enable vpx video codec (default: false)\n\nInstalling QXmpp\n================\n\nAfter building QXmpp, you can install the Headers, Libraries\nand Documentation using the following command:\n\nInstall from command line:\n\n    cmake --build . --target install\n\nExamples\n========\n\nLook at the example directory for various examples. Here is a description of\na few.\n\n* *example_0_connected*\nThis example just connects to the xmpp server and start receiving presences\n(updates) from the server. After running this example, you can see this user\nonline, if it's added in your roster (friends list).\n\n* *example_1_echoClient*\nThis is a very simple bot which echoes the message sent to it. Run this\nexample, send it a message from a friend of this bot and you will\nreceive the message back. This example shows how to receive and send messages.\n\nDocumentation\n=============\n\nYou can find the API documentation for the latest QXmpp version here:\n\nhttp://doc.qxmpp.org/\n\nSupported Platforms\n===================\n\nIt should work on all the platforms supported by Qt. For a complete list of\nplatforms support by Qt, see:\n\nhttps://doc.qt.io/qt-5/supported-platforms.html\n\nHow to report a bug\n===================\n\nIf you think you have found a bug in QXmpp, we would like to hear about\nit so that we can fix it. Before reporting a bug, please check if the issue\nis already know at:\n\nhttps://github.com/qxmpp-project/qxmpp/issues\n\nDiscussion Group\n================\n\nJoin QXmpp Discussion Group for queries, discussions and updates.\n\nhttps://groups.google.com/forum/#!forum/qxmpp\n"