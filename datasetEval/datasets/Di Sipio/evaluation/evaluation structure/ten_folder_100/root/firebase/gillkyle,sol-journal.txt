b'<p align="center">\n  <img alt="logomark" width="50%" src="https://raw.githubusercontent.com/gillkyle/images/master/sol-journal-logo.png" />\n</p>\n<h2 align="center">\n  Personal Journaling Platform\n</h2>\n\nSol Journal is a simple, minimal, journaling platform that works offline and across all devices. It can be hosted yourself on Firebase and then installed as a PWA, on mobile devices for easy access on a phone, or on Desktops.\n\n<p align="center">\n  <img\n    alt="preview of page"\n    src="https://raw.githubusercontent.com/gillkyle/images/master/hero-mixed.png"\n  />\n</p>\n\n## Introduction\n\n<a href="https://www.producthunt.com/posts/sol-journal?utm_source=badge-featured&utm_medium=badge&utm_souce=badge-sol-journal" target="_blank"><img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=157146&theme=light" alt="Sol Journal - A simple, open-source personal journaling platform | Product Hunt Embed" style="width: 250px; height: 54px;" width="250px" height="54px" /></a>\n\nJournaling is a keystone habit that can improve your happiness and [overall health](https://psycnet.apa.org/record/2004-16777-010). Writing in a journal with pen and paper is effective, but not as easily accessible, maintained, or preserved as taking advantage of digital platforms.\n\nHaving a journal that is available on any device makes journaling easier. Being tailored specifically to journaling makes it less cumbersome than trying to utilize a note taking app or document for recording thoughts and impressions.\n\n## Getting Started\n\nThere are 2 ways to get started using Sol Journal:\n\n1. You can develop it locally after hooking it up to your own Firebase project by following the instructions below\n2. You can host your own version and manage it yourself by following the [setup docs](https://github.com/gillkyle/sol-journal/blob/master/SETUP.md)\n\nSol Journal uses firebase to support offline functionality and authentication, meaning a new Firebase app will need to be setup with Firestore as a database if you wish to host it yourself. Be sure to add documents for `users` and `entries`, as well as enabling email for user authentication.\n\n## Features\n\nIn the spirit of minimalism, key features are what are in place for a quick, lightweight journaling experience that can work across devices, including:\n\n- \xf0\x9f\x94\xa5 Authentication: Cloud firestore persists registered users to a users document and saved journal entries to an entries document\n- \xf0\x9f\x8e\xa8 Theming: the `src/styles/theme.js` file contains a set of colors and default styles that are applied to components with Emotion. A default light and dark theme are already in the file (adding [theme-ui](https://theme-ui.com/) support would be a great future addition)\n- \xf0\x9f\x94\x8d Search: full-text search of a user\'s entries stored in Firestore for quick access to past entries\n- \xf0\x9f\x96\xa5 Mobile Friendly: designed to look great on mobile as well as desktop, with easy navigation on both\n- \xf0\x9f\x92\xa1 PWA: being a progressive web app makes it installable from Chrome/Safari on desktop, or be added to the homescreen on iOS/Android\n- \xf0\x9f\x94\x8c Offline Support: read/write when you\'re offline and let the updates happen when your connection is restored\n- \xf0\x9f\x97\x84 Export: backup all of your entries at any time to save your data\n\n## Project setup\n\nFiles are organized into these folders:\n\n`/components`: user interface pieces to construct the design and layout of the site  \n`/data`: local data transformed by Gatsby to become queryable by Gatsby\'s GraphQL data layer  \n`/img`: images used by places like landing pages that are optimized by gatsby-image and then queryable in the GraphQL layer  \n`/pages`: public pages that can be seen by unauthenticated users and are completely server side rendered by Gatsby during `gatsby build`  \n`/routes`: private, client only routes only visible to authenticated users that are used by the app section of the journal  \n`/styles`: role based design tokens and theme definitions  \n`/util`: simple utility functions, for things like formatting dates\n\n## Developing\n\nClone the project:\n\n```bash\ngit clone https://github.com/gillkyle/sol-journal\n```\n\nInstall dependencies:\n\n```bash\nnpm install\n```\n\nor\n\n```bash\nyarn\n```\n\nThen configure a file in a new `.env` file (using the `.env.sample` file as a reference) with the following keys from the firebase console:\n\n```env\nGATSBY_FIREBASE_API_KEY=<BUNCHofRandomNumbersAndChars>\nGATSBY_DEV_AUTH_DOMAIN=<name>.firebaseapp.com\nGATSBY_DEV_DATABASE_URL=https://<name>.firebaseio.com\nGATSBY_DEV_PROJECT_ID=<name>\nGATSBY_DEV_STORAGE_BUCKET=<name>.appspot.com\nGATSBY_DEV_MESSAGING_SENDER_ID=############\n\nGATSBY_CONFIRMATION_EMAIL_REDIRECT=https://<name>.firebaseapp.com\n```\n\nAgain, be sure to add documents for `users` and `entries`, as well as enabling email for user authentication.\n\nNavigate into the project directory, and then launch the site with this command:\n\n```bash\ngatsby develop\n```\n\nThe site will be opened up in your default browser on http://localhost:8000\n\nEdit code in the `/src`, save your changes, and they\'ll reload instantly in the browser.\n\n## Deploy\n\nTo create an optimized build of the site run this command:\n\n```bash\ngatsby build\n```\n\nA `/public` folder will be assembled that can be deployed to any static file hosting service like Netlify or surge.\n\nIt can be deployed to firebase with this command:\n\n```bash\nfirebase deploy -p public\n```\n\n## Inspiration\n\nSol Journal is inspired by [JournalBook](https://github.com/trys/JournalBook) and borrows much of its design and navigation.\n'