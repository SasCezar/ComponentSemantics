b'# The ultimate React Native starter using Firebase, Mobx, Code-Push and OneSignal\n![Preview](./graphics/screenshots.gif)\n\n## Download the app on your phone directly\n[![iOS app][2]][1] [![Android app][4]][3]\n\n  [1]: https://itunes.apple.com/us/app/jsapp-my-app/id1165501349?mt=8\n  [2]: ./graphics/app-store-badge.png\n  [3]: https://play.google.com/store/apps/details?id=me.jsapp.myapp\n  [4]: ./graphics/google-play-badge.png  \n\n#### Build your own Instagram + WhatsApp + chat marketplace mobile app clone with push notifications and code deployment integrated\n\n## Built with\n - [React Native](https://facebook.github.io/react-native/) : One language, JavaScript, one source code.\n - [MobX](https://mobxjs.github.io/mobx/) : Simple, scalable state management (easier than Redux)\n - [Firebase](https://firebase.google.com/) : Cloud based database and storage service\n - [CodePush](https://microsoft.github.io/code-push/) : Push code updates to your apps, instantly\n - [OneSignal](https://onesignal.com/) : Unlimited push notifications\xe2\x80\x8e\n\n## How to install the app?\n### Prerequisites\nTo create your own copy of this application, here are the prerequisites:\n\n - [Yarn](https://yarnpkg.com/) installed on your system or simply use npm if you prefer.\n - [React Native](https://facebook.github.io/react-native/) installed on your system.\n - [Android SDK](https://developer.android.com/studio/index.html) installed to run the app on android devices.\n - [Xcode](https://developer.apple.com/xcode/) installed to test the app on iOS devices or simulator.\n\n### Build your own copy\nClone the repository:\n\n```\ngit clone https://github.com/jsappme/react-native-firebase-starter.git NewApp\ncd NewApp\n```\n\nLet\'s install all the dependencies:\n\n```\nyarn\n```\n\nIn order to run the app you have to setup Firebase (CodePush and OneSignal are optional).\n\n### Firebase Setup:\n\nAfter **Login** or **Register** at https://firebase.google.com/\n\nGo to your Firebase console: https://console.firebase.google.com/\n\n**Create a new project** and click on **Add Firebase to your web app**.\n\nOpen the Firebase config file using your favorite editor (in my case [Atom](https://atom.io/)) and Copy/Paste your Firebase variables:\n\n```\natom src/firebase.js\n```\n\nNext setup the **Firebase Auth** by enabling **Email/Password Signup** method:\nhttps://console.firebase.google.com/project/newapp/authentication/providers\n\nCopy and Paste your **Firebase rules** at:\nhttps://console.firebase.google.com/project/newapp/database/rules\n\n```\n{\n  "rules": {\n    ".read": "auth != null",\n    ".write": "auth != null",\n    "usernameList" : {\n      ".read": true\n    },\n    "posts": {\n        ".indexOn": "createdAt",\n        ".read": true\n    },\n    "user_posts": {\n      "$uid": {\n        "posts": {\n          ".indexOn": "createdAt"\n        },\n      },\n    },\n    "user_orders": {\n      "$uid": {\n        "posts": {\n          ".indexOn": "createdAt"\n        },\n      },\n    },\n    "user_chats": {\n      "$uid": {\n        "posts": {\n          ".indexOn": "updatedAt"\n        },\n      },\n    },\n  }\n}\n```\n\nThat\'s it for Firebase!\n\n**Make sure all the packages are linked to React Native:**\n```\nreact-native link\n```\n\n###We are now ready to lunch the app on an android device.\n```\nreact-native run-android\n```\n\nTo see the logs:\n```\nreact-native log-android\n```\n\n###To open the app on Xcode:\n```\nyarn run ios\n```\nYou might need to add a Signing Team for MyApp and MyApptest to build it.\n\n###To run the app on an iOS simulator:\n```\nreact-native run-ios\n```\n\nTo see the logs:\n```\nreact-native log-ios\n```\n\n### OneSignal Setup for the Push Notification\n\n*With the help from this great article by Spencer Carli:\nhttps://medium.com/differential/react-native-push-notifications-with-onesignal-9db6a7d75e1e#.dwpff7u2z*\n\n>If you want to enable **Push Notification**, you will need to choose an **Explicit App ID** (a.k.a **Product Bundle Identifier** in iOS) for your app. The App Id of this demo app is ***me.jsapp.myapp***. In order to change it, you need to find and replace all the instances of ***myapp*** and ***MyApp*** with your new App Id in the file names and in the content of all the files in the NewApp folder while respecting the case sensitivity. Example: ***myapp*** to ***newapp*** and ***MyApp*** to ***NewApp***.\n>If you change the prefix of the App ID ***me.jsapp*** to something else, you need to change the folder structure in *android/app/src/main/java*.\n\n**Login** or **Register** at https://onesignal.com\n\n**Add new app** and select the Android platform first\n\n![Preview](./graphics/onesignal_android_platform.png)\n\nOpen a new tab and go to your Firebase app Settings > **CLOUD MESSAGING**: https://console.firebase.google.com/project/newapp/settings/cloudmessaging\n\n![Preview](./graphics/cloud_messaging.png)\n\nSave the two values listed:\n* **Server key**, a.k.a the **Google Server API key**\n* **Sender ID**, a.k.a the **Google Project Number** a.k.a ***my_onesignal_google_project_number*** (you will need it later)*\n\nCopy/Paste those two values on the first tab: OneSignal > **Google Android (GCM) Configuration** and **Save** it\n\n![Preview](./graphics/onesignal_android_platform_2.png)\n\nLet\'s configure the **iOS platform** by clicking on **Configure** next to **Apple iOS** in NewApp > **App Settings**\n\n![Preview](./graphics/onesignal_ios_platform.png)\n\nOpen a new tab and **create our app** within the [Apple Developer portal](https://developer.apple.com/account/ios/identifier/bundle)\n\n![Preview](./graphics/app_id_suffix.png)\n\nEnter the **Explicit App ID** of the app, in this case, *me.jsapp.newapp*.\n\nNext **enable Push Notifications** for the app.\n\n![Preview](./graphics/app_services.png)\n\nNow let\'s create the provisioning profile. OneSignal has a tool called [The Provisionator](https://onesignal.com/provisionator) that will help with this process.\n\nSign into your account and make sure you choose the proper team\n\n![Preview](./graphics/ios_wizard_1.png)\n\nAfter pressing **Next**, you\xe2\x80\x99ll see something like this\n\n![Preview](./graphics/ios_wizard_2.png)\n\nDownload those files and remember the password for the p12 file. Then head back to OneSignal tab, **upload the file**, **enter your password** and **Save**\n\n![Preview](./graphics/onesignal_ios_platform_2.png)\n\n####Your Push Notification platforms are now set up. Now we can actually work on integrating this with our app.\n\nOn your browser, go to OneSignal > NewApp > App Settings > **Keys & IDs** and copy the two values:\n\n* **OneSignal App ID** a.k.a. ***my_onesignal_app_id***\n* **REST API Key** a.k.a. ***my_onesignal_api_key***\n\n**Edit**, **Find** and **Replace** these strings by their values into the following files:\n\n* ***my_onesignal_google_project_number*** in:\n```\natom android/app/build.gradle\n```\n\n* ***my_onesignal_app_id*** in:\n```\natom android/app/build.gradle\natom ios/NewApp/AppDelegate.m\natom src/store/AppStore.js\n```\n\n* ***my_onesignal_api_key*** in:\n```\natom src/store/AppStore.js\n```\n\nThat\'s it for the push notification configuration.\n\n### CodePush Setup for Code Deployment\n\nWhy CodePush? [I am a CodePusher and I love it. Thanks MS and not M$ anymore](https://jsapp.me/i-am-a-codepusher-and-i-love-it-thanks-ms-and-not-m-anymore-7be936e86c75#.e4r2dmyqb)\n\n**Install the CodePush CLI**\nhttps://microsoft.github.io/code-push/index.html#getting_started\n\n```\nnpm install -g code-push-cli\n```\n\n**Create a CodePush account** or **Login** if you have one already.\n```\ncode-push register\n```\nor\n```\ncode-push login\n```\n**Register your app** with the service, create one for each platform.\n\n```\ncode-push app add newapp-and\ncode-push app add newapp-ios\n```\n\nCopy/Paste these **Staging** deployment keys to their respective platform files:\n\n***my_codepush_android_key*** in\n```\natom android/app/src/main/res/values/strings.xml\n```\n***my_codepush_ios_key*** in\n```\natom ios/NewApp/Info.plist\n```\n\n### Google Analytics Setup\n\nEdit the Google Analytics Tracker variable:\n```\natom src/store/AppStore.js\n```\n\n\nThis app is only a starter. Now it\'s time for some customizations and improvements.\n\n\n##License\n[MIT License](https://github.com/jsappme/react-native-firestack-starter/blob/master/LICENSE). Do whatever you want to do.\n\n\n## Credits\nAll the credits goes to all library creators and contributors to the open source repositories and libraries that I am using. I\'m very grateful to all of them. Here are some of them:\n\n - [React Native CodePush](https://github.com/Microsoft/react-native-code-push)\n - [React Native Gifted Chat](https://github.com/FaridSafi/react-native-gifted-chat)\n - [React Native OneSignal](https://github.com/geektimecoil/react-native-onesignal)\n - [React Native Fetch Blob](https://github.com/wkh237/react-native-fetch-blob)\n - [React Native Keyboard Aware Scroll View](https://github.com/APSL/react-native-keyboard-aware-scroll-view)\n - [React Native Image Picker](https://github.com/marcshilling/react-native-image-picker)\n - [Mister Poster](https://github.com/shoumma/Mister-Poster)\n - [React Native](https://facebook.github.io/react-native/)\n - [React Native Animatable](https://github.com/oblador/react-native-animatable)\n - [React Native Scrollable Tab View](https://github.com/skv-headless/react-native-scrollable-tab-view)\n - [React Native Vector Icons](https://github.com/oblador/react-native-vector-icons)\n - [MobX](https://github.com/mobxjs/mobx)\n - [MobX React](https://github.com/mobxjs/mobx-react)\n - [React Native MobX](https://github.com/aksonov/react-native-mobx)\n - [Firebase](https://firebase.google.com/)\n - [Moment JS](http://momentjs.com/)\n - [Lodash](https://lodash.com/)\n\nI really appreciate any suggestions, feedback, PRs and issues.\n\nMade with \xe2\x99\xa5 by [JSapp.me](http://jsapp.me)\n'