b'<p align="center">\n  <img height="75px" width="411px" src="https://raw.githubusercontent.com/davideast/Querybase/master/logos/logo-large.png">\n  <p align="center">Bringing the <code>.where()</code> statement to the Firebase Database</p>\n</p>\n\n[![Build Status](https://travis-ci.org/davideast/Querybase.svg?branch=master)](https://travis-ci.org/davideast/Querybase)\n[![Coverage Status](https://coveralls.io/repos/github/davideast/Querybase/badge.svg?branch=master)](https://coveralls.io/github/davideast/Querybase?branch=master)\n\n#### Querybase is in an experiment and not for production apps/sites/anything.\n\n## [Cloud Firestore](https://firebase.google.com/docs/firestore/) makes this library irrelevant as it has much more complex querying.\n\n## What is Querybase?\n\n- **.where()** - Find records by up to three fields.\n- **No client-side filtering** - Querybase genererates composite keys to provide querying on multiple fields.\n- **Simple Query API** - Use common query methods such as `.greaterThan()`, `.lessThan()`, and `.startsWith()`.\n- **Lightweight** - 1.87 kB (gzipped)\n\n## Install\n\n```bash\nnpm install querybase --save\n```\n\nUse via [unpkg](https://unpkg.com)\n\n```html\n<script src="https://unpkg.com/querybase@0.6.0"></script>\n```\n\n## Example usage\n\nQuerybase takes a Firebase Database reference with a list of fields to create composite keys. **You can only use up to three fields**. Any more would create a crazy amount of composite keys in the database.\n\n### Querying using multiple fields\n\n```js\n const databaseRef = firebase.database().ref().child(\'people\');\n const querybaseRef = querybase.ref(databaseRef, [\'name\', \'age\', \'location\']);\n \n // Automatically handles composite keys\n querybaseRef.push({ \n   name: \'David\',\n   age: 27,\n   location: \'SF\'\n });\n \n// Find records by multiple fields\n// returns a Firebase Database ref\nconst queriedDbRef = querybaseRef\n  .where({\n    name: \'David\',\n    age: 27\n  });\n  \n // Listen for realtime updates\n queriedDbRef.on(\'value\', snap => console.log(snap));\n ```\n \n### Querying using one field\n\nQuerybase also provides rich querying methods for single fields.\n \n ```js\n const databaseRef = firebase.database.ref().child(\'people\');\n const querybaseRef = querybase.ref(databaseRef, []);\n // Querybase for single criteria, returns a Firebase Ref\n querybaseRef.where({ name: \'David\'});\n  \n // Querybase for a single string criteria, returns\n // a QuerybaseQuery, which returns a Firebase Ref\n querybaseRef.where(\'name\').startsWith(\'Da\');\n querybaseRef.where(\'age\').lessThan(30);\n querybaseRef.where(\'age\').greaterThan(20);\n querybaseRef.where(\'age\').between(20, 30);\n ```\n'