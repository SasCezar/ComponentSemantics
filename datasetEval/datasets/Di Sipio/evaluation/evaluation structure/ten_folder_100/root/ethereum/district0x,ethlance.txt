b'# ethlance\n\n[![Build Status](https://travis-ci.org/district0x/ethlance.svg?branch=master)](https://travis-ci.org/district0x/ethlance)\n\nRepository for [ethlance.com](http://ethlance.com)\n\nEthlance is the first job market platform written in [ClojureScript](https://clojurescript.org/) and [Solidity](https://solidity.readthedocs.io/en/develop/) working completely on the [Ethereum](https://ethereum.org/) blockchain with 0% service fees.\n\nEthereum Smart Contracts are at `/resources/public/contracts/src`.\n\n# Using Ethlance\n\n## MetaMask\n\n1. Download the [MetaMask](https://metamask.io/) Chrome extension\n2. Create a wallet and fund it with some [Ether](https://ethereum.stackexchange.com/questions/1915/how-do-i-buy-ethereum-with-usd)\n3. Go on [Ethlance](http://ethlance.com/)\n\n# Running on localhost\n\nFollowing instructions assume you\'re familiar with the [Clojure](https://clojure.org/) programming language and have [lein](https://leiningen.org/) installed on your machine.\n\nTo start autocompiling smart contracts (requires [solc](https://github.com/ethereum/solidity) installed):\n```bash\nlein auto compile-solidity\n```\n\nStart [testrpc](https://github.com/ethereumjs/testrpc)\n```bash\ntestrpc --port 8549\n```\n\nStart Clojurescript browser REPL, first start a clojure repl\n```\nlein repl\n```\n\nWhen a clojure prompt is present, type:\n```\n(start-ui!)\n```\nThe clojurescript repl will appear once you navigate to http:://localhost:6229\n\n\nSee `ethlance.el` on how to run the above commands in Emacs via `ethlance-jack-in` and `ethlance-start`.\n\nMake sure in [ethlance.db/default-db](https://github.com/madvas/ethlance/blob/master/src/cljs/ethlance/db.cljs) you have the following configuration:\n```clojure\n:load-node-addresses? true\n:node-url "http://localhost:8549"\n```\nVisit [localhost:6229](http://localhost:6229/) in your browser without MetaMask. I use the Chrome Incognito window. \n\nTo redeploy all smart contracts, run the following in REPL.\n```clojure\n(in-ns \'ethlance.events)\n(dispatch [:reinitialize])\n```\nAfter you see in browser console all contracts have been deployed, refresh the page.\n\nTo redeploy only single or few specific smart contracts run:\n```clojure\n;; Redeploys and hot swaps EthlanceUser smart contract. No need to refresh page.\n(dispatch [:reinitialize [:ethlance-user]])\n```\n\nTo build advanced compilation run:\n```clojure\nlein clean && lein cljsbuild once min\n```\n\n# Contributing\n\nAnyone is welcome to contribute to the ethlance project, here are some brief guidelines:\n\n* Squash commits\n* Reference issue numbers in your pull request\n* Rebase your changes on upstream (```git remote add upstream https://github.com/madvas/ethlance.git```) master before pushing (```git pull --rebase upstream master```)\n* Make changes in a separate well-named branch in your forked repo like ```improve-readme```\n'