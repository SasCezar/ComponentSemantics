b"[![CircleCI](https://circleci.com/gh/ethereum/remix-ide.svg?style=svg)](https://circleci.com/gh/ethereum/remix-ide)\n\n# Remix\n\nRemix is a browser-based compiler and IDE that enables users to build **Ethereum contracts with Solidity language** and to debug transactions.\n\nTo try it out, visit [https://remix.ethereum.org](https://remix.ethereum.org).\n\nhttps://github.com/ethereum/remix-ide/releases also gives others ways to use Remix locally. Please check it out.\n\nRemix consists of many modules and in this repository you will find the Remix IDE (aka. Browser-Solidity).\n\n![Remix screenshot](https://github.com/ethereum/remix-ide/raw/master/remix_screenshot.png)\n\n## Offline Usage\n\nThe `gh-pages` branch has always the latest stable build of Remix. It also contains a ZIP file with the entire build. Download it to use offline.\n\nNote: It contains the latest release of Solidity available at the time of the packaging. No other compiler versions are supported.\n\n\n## INSTALLATION:\n\nInstall **npm** and **node.js** (see https://docs.npmjs.com/getting-started/installing-node), then do:\n\nRemix-ide has been published as an npm module:\n\n```bash\nnpm install remix-ide -g\nremix-ide\n```\nOr if you want to clone the github repository (`wget` need to be installed first) :\n\n```bash\ngit clone https://github.com/ethereum/remix-ide.git\ngit clone https://github.com/ethereum/remix.git # only if you plan to link remix and remix-ide repositories and develop on it.\n\ncd remix  # only if you plan to link remix and remix-ide repositories and develop on it.\nnpm install  # only if you plan to link remix and remix-ide repositories and develop on it.\nnpm run bootstrap  # only if you plan to link remix and remix-ide repositories and develop on it.\n\ncd remix-ide\nnpm install\nnpm run setupremix  # only if you plan to link remix and remix-ide repositories and develop on it.\nnpm start\n```\n\n## DEVELOPING:\n\nRun `npm start` and open `http://127.0.0.1:8080` in your browser.\n\nThen open your `text editor` and start developing.\nThe browser will automatically refresh when files are saved.\n\nMost of the the time working with other modules (like debugger etc.) hosted in the [Remix repository](https://github.com/ethereum/remix) is not needed.\n\n### Troubleshooting building\n\nSome things to consider if you have trouble building the package:\n\n- Make sure that you have the correct version of `node`, `npm` and `nvm`. You can find the version that is tested on Travis CI by looking at the log in the [build results](https://travis-ci.org/ethereum/remix-ide).\n\nRun:\n\n```bash\nnode --version\nnpm --version\nnvm --version\n```\n\n- In Debian based OS such as Ubuntu 14.04LTS you may need to run `apt-get install build-essential`. After installing `build-essential` run `npm rebuild`.\n\n## Unit Testing\n\nRegister new unit test files in `test/index.js`.\nThe tests are written using [tape](https://www.npmjs.com/package/tape).\n\nRun the unit tests via: `npm test`\n\nFor local headless browser tests run `npm run test-browser`\n(requires Selenium to be installed - can be done with `npm run selenium-install`)\n\nRunning unit tests via `npm test` requires at least node v7.0.0\n\n## Browser Testing\n\nTo run the Selenium tests via Nightwatch:\n\n - Build Remix IDE and serve it: `npm run build && npm run serve` # starts web server at localhost:8080\n - Make sure Selenium is installed `npm run selenium-install` # don't need to repeat\n - Run a selenium server `npm run selenium`\n - Run all the tests `npm run nightwatch_local_firefox` or `npm run nightwatch_local_chrome`\n - Or run a specific test case: \n \n\t\t- npm run nightwatch_local_ballot\n\t\t\n\t\t- npm run nightwatch_local_libraryDeployment\n\t\t\n\t\t- npm run nightwatch_local_solidityImport\n\t\t\n\t\t- npm run nightwatch_local_recorder\n\t\t\n\t\t- npm run nightwatch_local_transactionExecution\n\t\t\n\t\t- npm run nightwatch_local_staticAnalysis\n\t\t\n\t\t- npm run nightwatch_local_signingMessage\n\n\t\t- npm run nightwatch_local_console\n\t\t\n\t\t- npm run nightwatch_local_remixd # remixd needs to be run\n\t\t\n\n\n## Usage as a Chrome Extension\n\nIf you would like to use this as a Chrome extension, you must either build it first or pull from the `gh-pages` branch, both described above.\nAfter that, follow these steps:\n\n- Browse to `chrome://extensions/`\n- Make sure 'Developer mode' has been checked\n- Click 'Load unpacked extension...' to pop up a file-selection dialog\n- Select your `remix-ide` folder\n\n## Documentation\n\nTo see details about how to use Remix for developing and/or debugging Solidity contracts, please see [our documentation page](https://remix-ide.readthedocs.io/en/latest/)\n"