b'# Mythril\n\n<p align="center">\n\t<img src="/static/mythril_new.png" height="320px"/>\n</p>\n\n[![Discord](https://img.shields.io/discord/481002907366588416.svg)](https://discord.gg/E3YrVtG)\n[![PyPI](https://badge.fury.io/py/mythril.svg)](https://pypi.python.org/pypi/mythril)\n[![Read the Docs](https://readthedocs.org/projects/mythril-classic/badge/?version=master)](https://mythril-classic.readthedocs.io/en/master/)\n![Master Build Status](https://img.shields.io/circleci/build/github/ConsenSys/mythril.svg?token=97124ecfaee54366859cae98b5dafc0714325f8b)\n[![Sonarcloud - Maintainability](https://sonarcloud.io/api/project_badges/measure?project=mythril&metric=sqale_rating)](https://sonarcloud.io/dashboard?id=mythril)\n[![Pypi Installs](https://pepy.tech/badge/mythril)](https://pepy.tech/project/mythril)\n[![DockerHub Pulls](https://img.shields.io/docker/pulls/mythril/myth.svg?label=DockerHub&nbsp;Pulls)](https://cloud.docker.com/u/mythril/repository/docker/mythril/myth)\n\nMythril is a security analysis tool for EVM bytecode. It detects security vulnerabilities in smart contracts built for Ethereum, Quorum, Vechain, Roostock, Tron and other EVM-compatible blockchains. It uses symbolic execution, SMT solving and taint analysis detect a variety of security vulnerabilities. It\'s also used (in combination with other tools and techniques) in the [MythX](https://mythx.io) security analysis platform.\n\nIf you are a smart contract developer, we recommend using [MythX tools](https://github.com/b-mueller/awesome-mythx-smart-contract-security) which are optimized for usability and cover a wider range of security issues.\n\nWhether you want to contribute, need support, or want to learn what we have cooking for the future, our [Discord server](https://discord.gg/E3YrVtG) will serve your needs.\n\n## Installation and setup\n\nGet it with [Docker](https://www.docker.com):\n\n```bash\n$ docker pull mythril/myth\n```\n\nInstall from Pypi:\n\n```bash\n$ pip3 install mythril\n```\n\nSee the [docs](https://mythril-classic.readthedocs.io/en/master/installation.html) for more detailed instructions. \n\n## Usage\n\nRun:\n\n```\n$ myth analyze <solidity-file>\n```\n\nOr:\n\n```\n$ myth analyze -a <contract-address>\n```\n\nSpecify the maximum number of transaction to explore with `-t <number>`. You can also set a timeout with `--execution-timeout <seconds>`. Example ([source code](https://gist.github.com/b-mueller/2b251297ce88aa7628680f50f177a81a#file-killbilly-sol)):\n\n```\n==== Unprotected Selfdestruct ====\nSWC ID: 106\nSeverity: High\nContract: KillBilly\nFunction name: commencekilling()\nPC address: 354\nEstimated Gas Usage: 574 - 999\nThe contract can be killed by anyone.\nAnyone can kill this contract and withdraw its balance to an arbitrary address.\n--------------------\nIn file: killbilly.sol:22\n\nselfdestruct(msg.sender)\n\n--------------------\nTransaction Sequence:\n\nCaller: [CREATOR], data: [CONTRACT CREATION], value: 0x0\nCaller: [ATTACKER], function: killerize(address), txdata: 0x9fa299ccbebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0\nCaller: [ATTACKER], function: activatekillability(), txdata: 0x84057065, value: 0x0\nCaller: [ATTACKER], function: commencekilling(), txdata: 0x7c11da20, value: 0x0\n```\n\n\nInstructions for using Mythril are found on the [docs](https://mythril-classic.readthedocs.io/en/master/). \n\nFor support or general discussions please join the Mythril community on [Discord](https://discord.gg/E3YrVtG).\n\n## Bulding the Documentation\nMythril\'s documentation is contained in the `docs` folder and is published to [Read the Docs](https://mythril-classic.readthedocs.io/en/master/). It is based on Sphinx and can be built using the Makefile contained in the subdirectory:\n\n```\ncd docs\nmake html\n```\n\nThis will create a `build` output directory containing the HTML output. Alternatively, PDF documentation can be built with `make latexpdf`. The available output format options can be seen with `make help`.\n\n## Vulnerability Remediation\n\nVisit the [Smart Contract Vulnerability Classification Registry](https://smartcontractsecurity.github.io/SWC-registry/) to find detailed information and remediation guidance for the vulnerabilities reported.\n'