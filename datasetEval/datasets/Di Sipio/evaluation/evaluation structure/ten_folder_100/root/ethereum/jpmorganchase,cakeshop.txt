b'# Cakeshop\n\n[![Build Status](https://travis-ci.com/jpmorganchase/cakeshop.svg?branch=master)](https://travis-ci.com/jpmorganchase/cakeshop)\n\nAn integrated development environment and SDK for Ethereum-like ledgers\n\n![screenshot](docs/images/console.png "screenshot")\n\n![screenshot](docs/images/sandbox.png "sandbox screenshot")\n\n## What is it?\n\n_Cakeshop_ is a set of tools and APIs for working with [Ethereum](https://ethereum.org/)-like ledgers, packaged as a Java web application archive (WAR) that gets you up and running in under 60 seconds.\n\nCakeshop will download the latest version of [quorum](https://github.com/jpmorganchase/quorum) and bootnode from [geth](https://github.com/ethereum/go-ethereum) (to use a different version, see [here](docs/configuration.md#custom-quorum-binaries)). The cakeshop package includes the [tessera](https://github.com/jpmorganchase/tessera) and [constellation](https://github.com/jpmorganchase/constellation) transaction managers, a [Solidity](https://solidity.readthedocs.org/en/latest/)\ncompiler, and all dependencies.\n\nIt provides tools for managing a local blockchain node, setting up clusters,\nexploring the state of the chain, and working with contracts.\n\n## Download\n\nBinary packages are available for macOS and Linux platforms on the [releases](https://github.com/jpmorganchase/cakeshop/releases) page.\n\n## Quickstart\n\n### Requirements\n\n* Java 8+\n* NodeJS (if the nodejs binary on your machine isn\'t called \'node\', see [here](docs/configuration.md#nodejs-binary))\n\n### Running via Spring Boot\n\n* Download WAR file\n* Run `java -jar cakeshop.war`\n* Navigate to [http://localhost:8080/](http://localhost:8080/)\n\n\n### Running via Docker -- NEEDS UPDATE\n\nRun via docker and access UI on [http://localhost:8080/](http://localhost:8080/)\n\n```sh\ndocker run -p 8080:8080 quorumengineering/cakeshop\n```\n\nYou\'ll probably want to mount a data volume:\n\n```sh\nmkdir data\ndocker run -p 8080:8080 -v "$PWD/data":/opt/cakeshop/data quorumengineering/cakeshop\n```\n\nRunning under a specific environment\n\n```sh\ndocker run -p 8080:8080 -v "$PWD/data":/opt/cakeshop/data \\\n    -e JAVA_OPTS="-Dspring.profiles.active=local" \\\n    quorumengineering/cakeshop\n```\n\nNote that DAG generation will take time and Cakeshop will not be available until it\'s complete. If you already have a DAG for epoch 0 in your `$HOME/.ethash` folder, then you can expose that to your container (or just cache it for later):\n\n```sh\ndocker run -p 8080:8080 -v "$PWD/data":/opt/cakeshop/data \\\n    -v $HOME/.ethash:/opt/cakeshop/.ethash \\\n    quorumengineering/cakeshop\n```\n\n## Further Reading\n\nFurther documentation can be found on the [wiki](https://github.com/jpmorganchase/cakeshop/wiki/) and in the [docs](docs/) folder.\n\n## See Also\n\n* [JIF Dashboard](https://github.com/jpmorganchase/jif-dashboard) - The Cakeshop UI was built using the JIF Dashboard framework.\n\n* [solc-cakeshop-cli](https://github.com/jpmorganchase/solc-cakeshop-cli) - The solidity compiler used behind the scenes is `solc-cakeshop-cli`, a thin wrapper atop the [solc](https://github.com/ethereum/solc-js) JS binding.\n\n## Contributing\n\nThank you for your interest in contributing to Cakeshop!\n\nCakeshop is built on open source and we invite you to contribute enhancements. Upon review you will be required to complete a Contributor License Agreement (CLA) before we are able to merge. If you have any questions about the contribution process, please feel free to send an email to [quorum_info@jpmorgan.com](mailto:quorum_info@jpmorgan.com).\n\n\n## Reporting Security Bugs\nSecurity is part of our commitment to our users. At Quorum we have a close relationship with the security community, we understand the realm, and encourage security researchers to become part of our mission of building secure reliable software. This section explains how to submit security bugs, and what to expect in return.\n\nAll security bugs in [Quorum](https://github.com/jpmorganchase/quorum) and its ecosystem ([Tessera](https://github.com/jpmorganchase/tessera), [Constellation](https://github.com/jpmorganchase/constellation), [Cakeshop](https://github.com/jpmorganchase/cakeshop), ..etc)  should be reported by email to [info@goquorum.com](mailto:info@goquorum.com). Please use the prefix **[security]** in your subject. This email is delivered to Quorum security team. Your email will be acknowledged, and you\'ll receive a more detailed response to your email as soon as possible indicating the next steps in handling your report. After the initial reply to your report, the security team will endeavor to keep you informed of the progress being made towards a fix and full announcement.\n\nIf you have not received a reply to your email or you have not heard from the security team please contact any team member through quorum slack security channel. **Please note that Quorum slack channels are public discussion forum**. When escalating to this medium, please do not disclose the details of the issue. Simply state that you\'re trying to reach a member of the security team.\n\n#### Responsible Disclosure Process\nQuorum project uses the following responsible disclosure process:\n\n- Once the security report is received it is assigned a primary handler. This person coordinates the fix and release process.\n- The issue is confirmed and a list of affected software is determined.\n- Code is audited to find any potential similar problems.\n- If it is determined, in consultation with the submitter, that a CVE-ID is required, the primary handler will trigger the process.\n- Fixes are applied to the public repository and a new release is issued.\n- On the date that the fixes are applied, announcements are sent to Quorum-announce.\n- At this point you would be able to disclose publicly your finding.\n\n**Note:** This process can take some time. Every effort will be made to handle the security bug in as timely a manner as possible, however it\'s important that we follow the process described above to ensure that disclosures are handled consistently.  \n\n#### Receiving Security Updates\nThe best way to receive security announcements is to subscribe to the Quorum-announce mailing list/channel. Any messages pertaining to a security issue will be prefixed with **[security]**.\n\nComments on This Policy\nIf you have any suggestions to improve this policy, please send an email to info@goquorum.com for discussion.\n## License\n\nCopyright (c) 2016-2019 JPMorgan Chase and/or applicable contributors\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSee the [LICENSE](LICENSE) and [THIRD_PARTY](THIRD_PARTY) files for additional license information.\n'