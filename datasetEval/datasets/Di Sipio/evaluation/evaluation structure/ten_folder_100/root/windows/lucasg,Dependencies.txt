b'# Dependencies - An open-source modern Dependency Walker\r\n[![Build status](https://ci.appveyor.com/api/projects/status/wtr5v8ksndbkkqxg?svg=true)](https://ci.appveyor.com/project/lucasg/dependencies)\r\n\r\n### [Download here](https://github.com/lucasg/Dependencies/releases/download/v1.9/Dependencies_x64_Release.zip)\r\n\r\nNB : due to [limitations on /clr compilation](https://msdn.microsoft.com/en-us/library/ffkc918h.aspx), `Dependencies` needs [Visual C++  Redistributable](https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads) installed to run properly.\r\n\r\n<p align="center">\r\n<img alt="Usage Exemple" src="screenshots/UsageExemple.gif"/>\r\n</p>\r\n\r\n\r\n## Overview\r\n`Dependencies` is a rewrite of the legacy software [Dependency Walker](http://www.dependencywalker.com/) which was shipped along Windows SDKs, but whose development stopped around 2006.\r\n`Dependencies` can help Windows developers troubleshooting their dll load dependencies issues.\r\n\r\n## Releases\r\n* [v1.9](https://github.com/lucasg/Dependencies/releases/download/v1.9/Dependencies_x64_Release.zip) :\r\n\t* Display imports and exports the way Depends.exe does.\r\n\t* Added user customization for search folders and working directory\r\n\t* Added LLVM demangler to availables symbol demangling\r\n\t* Fixed Wow64 FsRedirection bugs\r\n\t* F5 can now refresh the analysis\r\n\t* Added CLR assembly dependencies enumeration\r\n\t* Added a packaging option without Peview.exe (which triggers some AV).\r\n* [v1.8](https://github.com/lucasg/Dependencies/releases/download/v1.8/Dependencies_x64_Release.zip) :\r\n\t* Add x86/x64 variants for Dependencies\r\n* [v1.7](https://github.com/lucasg/Dependencies/releases/download/v1.7/Dependencies.zip) :\r\n\t* Add CLI tool "dependencies.exe"\r\n* [v1.6](https://github.com/lucasg/Dependencies/releases/download/v1.6/Dependencies.zip) :\r\n\t* Add appx packaging\r\n* [v1.5](https://github.com/lucasg/Dependencies/releases/download/v1.5/Dependencies.zip) :\r\n\t* Support of Sxs parsing\r\n\t* Support of api set schema parsing\r\n\t* API and Modules list can be filtered\r\n* [v1.0](https://github.com/lucasg/Dependencies/releases/download/v1.0/Dependencies.zip) -- Initial release\r\n\r\n\r\n## Installation and Usage\r\n\r\n`Dependencies` is currently shipped as a binary (no installer present). Just click on one of the release numbers above (probably the latest), download and uncompress the archive and run DependenciesGui.exe.\r\nSince the binary is not signed, `SmartScreen` might scream at runtime. `Dependencies` also bundle `ClrPhTester.exe`, a dumpbin-like executable used to test for non-regressions.\r\n\r\n`Dependencies` currently does not recursively resolve child imports when parsing a new PE since it can be really memory-hungry to do so ( it can over a GB even for "simple" PEs ). This behavior can be overridden (app-wide) via a property located in "Options->Properties->Tree build behaviour".\r\n\r\n<p align="center">\r\n<img alt="User options" src="screenshots/UserOptions.png"/>\r\n</p>\r\n\r\nTree build behaviours available :\r\n\r\n* `ChildOnly` (default) : only process PE child imports and nothing beyond.\r\n* `RecursiveOnlyOnDirectImports`  : do not process delayload dlls.\r\n* `Recursive` : Full recursive analysis. You better have time and RAM on your hands if you activate this setting :\r\n\r\n<p align="center">\r\n<img alt="Yes that\'s 7 GB of RAM being consumed. I\'m impressed the application didn\'t even crash" src="screenshots/RamEater.PNG"/>\r\n</p>\r\n\r\n\r\n## Limitations\r\n\r\nAt the moment, `Dependencies` recreates features and "features" of `depends.exe`, which means :\r\n\r\n* Only direct, forwarded and delay load dependencies are supported. Dynamic loading via `LoadLibrary` are not supported (and probably won\'t ever be).\r\n* Support of api set schema redirection since 1.5\r\n* Checks between Api Imports and Exports. \r\n* Minimal support of sxs private manifests search only.\r\n\r\n\r\n## Building\r\n\r\nBuilding is pretty straightforward.\r\nThe only caveat is you need to select the "Debug" or "Release" configuration and "x64" or "x86" platform which may not be the default.\r\n\r\n\r\n## Credits and licensing\r\n\r\nSpecial thanks to :\r\n\r\n* [ProcessHacker2](https://github.com/processhacker2/processhacker) for :\r\n  * `phlib`, which does the heavy lifting for processing PE informations.\r\n  * `peview`, a powerful and lightweight PE informations viewer.\r\n* [Dragablz](https://github.com/ButchersBoy/Dragablz) a C#/XAML library which implement dockable and dragable UI elements, and can recreate the [MDI programming model](https://en.wikipedia.org/wiki/Multiple_document_interface) in `WPF`.\r\n* @aionescu, @zodiacon and Quarkslab for their public infos on ApiSets schema.\r\n* [Thomas levesque\'s blog](https://www.thomaslevesque.com) which pretty much solved all my `WPF` programming issues. His [`AutoGridSort`](http://www.thomaslevesque.com/2009/08/04/wpf-automatically-sort-a-gridview-continued/) is used in this project \r\n* Venkatesh Mookkan [for it\'s `FilterControl` for ListView used in this project](https://www.codeproject.com/Articles/170095/WPF-Custom-Control-FilterControl-for-ListBox-ListV)\r\n* [demumble](https://github.com/nico/demumble) for demangling GCC symbols on Windows\r\n'