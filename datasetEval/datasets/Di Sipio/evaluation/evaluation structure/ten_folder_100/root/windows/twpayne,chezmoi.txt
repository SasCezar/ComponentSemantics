b"# ![chezmoi logo](logo-144px.svg) chezmoi\n\n[![GitHub Release](https://img.shields.io/github/release/twpayne/chezmoi.svg)](https://github.com/twpayne/chezmoi/releases)\n[![Build\nStatus](https://travis-ci.org/twpayne/chezmoi.svg?branch=master)](https://travis-ci.org/twpayne/chezmoi)\n[![Coverage Status](https://coveralls.io/repos/github/twpayne/chezmoi/badge.svg)](https://coveralls.io/github/twpayne/chezmoi)\n\nManage your dotfiles across multiple machines, securely.\n\n* [Documentation](#documentation)\n* [What does chezmoi do and why should I use it?](#what-does-chezmoi-do-and-why-should-i-use-it)\n* [What are chezmoi's key features?](#what-are-chezmois-key-features)\n* [I already have a system to manage my dotfiles, why should I use chezmoi?](#i-already-have-a-system-to-manage-my-dotfiles-why-should-i-use-chezmoi)\n* [How do I start with chezmoi?](#how-do-i-start-with-chezmoi)\n* [License](#license)\n\n## Documentation\n\n* [Install guide](docs/INSTALL.md) to get chezmoi installed on your machine with\n  one or two commands.\n* [Quick start guide](docs/QUICKSTART.md) for your first steps.\n* [How-to guide](docs/HOWTO.md) for achieving specific tasks.\n* [FAQ](docs/FAQ.md) for questions that aren't answered elsewhere.\n* [Changes](docs/CHANGES.md) for non-backwards compatible changes.\n* [Reference](docs/REFERENCE.md) for a complete description of chezmoi.\n* [Contributing](docs/CONTRIBUTING.md) for people looking to contribute to or\n  package chezmoi.\n\n## What does chezmoi do and why should I use it?\n\nchezmoi helps you manage your personal configuration files (dotfiles) across\nmultiple machines. It is particularly helpful if you have spent time customizing\nthe tools you use (e.g. shells, editors, and version control systems) and want\nto keep machines running different accounts (e.g. home and work) and/or\ndifferent operating systems (e.g. Linux and macOS) in sync, while still being\nable to easily cope with differences from machine to machine.\n\nchezmoi has particularly strong support for security, allowing you to manage\nsecrets (e.g. passwords, access tokens, and private keys) securely and\nseamlessly using either gpg encryption or a password manager of your choice.\n\nIn all cases you only need to maintain a single source of truth: a single branch\nin a version control system (e.g. git) for everything public and a single\npassword manager for all your secrets, with seamless integration between them.\n\nIf you do not personalize your configuration or only ever use a single operating\nsystem with a single account and none of your dotfiles contain secrets then you\ndon't need chezmoi. Otherwise, read on...\n\n## What are chezmoi's key features?\n\n* Flexible: You can share as much configuration across machines as you want,\n  while still being able to control machine-specific details. You only need to\n  maintain a single branch. Your dotfiles can be templates (using\n  [`text/template`](https://godoc.org/text/template) syntax). Predefined\n  variables allow you to change behaviour depending on operating system,\n  architecture, and hostname.\n\n* Personal and secure: Nothing leaves your machine, unless you want it to. You\n  can use the version control system of your choice to manage your\n  configuration, and you can write the configuration file in the format of your\n  choice. chezmoi can retrieve secrets from [1Password](https://1password.com/),\n  [Bitwarden](https://bitwarden.com/), [gopass](https://www.gopass.pw/),\n  [KeePassXC](https://keepassxc.org/), [LastPass](https://lastpass.com/),\n  [pass](https://www.passwordstore.org/), [Vault](https://www.vaultproject.io/),\n  your Keychain (on macOS), [GNOME\n  Keyring](https://wiki.gnome.org/Projects/GnomeKeyring) (on Linux), or any\n  command-line utility of your choice. You can encrypt individual files with\n  [gpg](https://www.gnupg.org). You can checkout your dotfiles repo on as many\n  machines as you want without revealing any secrets to anyone.\n\n* Transparent: chezmoi includes verbose and dry run modes so you can review\n  exactly what changes it will make to your home directory before making them.\n  chezmoi's source format uses only regular files and directories that map\n  one-to-one with the files, directories, and symlinks in your home directory\n  that you choose to manage. If you decide not to use chezmoi in the future, it\n  is easy to move your data elsewhere.\n\n* Robust: chezmoi updates all files and symbolic links atomically (using\n  [`google/renameio`](https://github.com/google/renameio)). You will never be\n  left with incomplete files that could lock you out, even if the update process\n  is interrupted.\n\n* Declarative: you declare the desired state of files, directories, and symbolic\n  links in your home directory and chezmoi updates your home directory to match\n  that state. What you want is what you get.\n\n* Fast and easy to use: chezmoi runs in fractions of a second and makes most\n  day-to-day operations one line commands, including installation,\n  initialization, and keeping your machines up-to-date.\n\n## I already have a system to manage my dotfiles, why should I use chezmoi?\n\n* If your system is based on copying files with a shell script or creating\n  symlinks (e.g. using [GNU\n  Stow](http://brandon.invergo.net/news/2012-05-26-using-gnu-stow-to-manage-your-dotfiles.html))\n  then handling files that vary from machine to machine requires manual work.\n  You might need to maintain separate config files for separate machines, or run\n  different commands on different machines. chezmoi gives you a single command\n  (`chezmoi update`)  that works on every machine.\n\n* If your system is based on using git with a different branches for different\n  machines, then you need manually merge or rebase to ensure that changes you\n  make are applied to each machine. chezmoi uses a single branch and makes it\n  trivial to share common parts while allowing specific per-machine\n  configuration.\n\n* If your system stores secrets in plain text, then your dotfiles repository\n  must be private. With chezmoi you can store secrets in your password manager,\n  so you can make your dotfiles public. You can share your repository between\n  your personal and work machines, without leaving personal secrets on your work\n  machine or work secrets on your personal machine.\n\n* If your system was written by you for your personal use, then it probably has\n  the minimum functionality that you need. chezmoi includes a wide range of\n  functionality out-of-the-box, including dry run and diff modes, conflict\n  resolution, and running scripts.\n\n* All systems suffer from the bootstrap problem: you need to install your system\n  before you can install your dotfiles. chezmoi provides one-line installs,\n  statically-linked binaries, packages for many Linux and BSD distributions,\n  Homebrew formulae, and a initial config file generation mechanism to make\n  overcoming the bootstrap problem as painless as possible.\n\n## How do I start with chezmoi?\n\n[Install chezmoi](docs/INSTALL.md) then read the [quick start\nguide](docs/QUICKSTART.md). The [how-to guide](docs/HOWTO.md) covers most common\ntasks, and there's the [frequently asked questions](docs/FAQ.md) for specific\nquestions. For a full description of chezmoi, consult the\n[reference](docs/REFERENCE.md). If all else fails, [open an\nissue](https://github.com/twpayne/chezmoi/issues/new).\n\n## License\n\nMIT\n"