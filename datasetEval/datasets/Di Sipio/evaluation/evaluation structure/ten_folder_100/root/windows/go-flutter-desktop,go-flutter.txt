b'<img src="./mascot.png" width="170" align="right">\n\n# go-flutter - A package that brings Flutter to the desktop\n\n[![Awesome Flutter](https://img.shields.io/badge/Awesome-Flutter-blue.svg?longCache=true&style=flat)](https://github.com/Solido/awesome-flutter)\n[![Documentation](https://godoc.org/github.com/go-flutter-desktop/go-flutter?status.svg)](http://godoc.org/github.com/go-flutter-desktop/go-flutter)\n[![Go Report Card](https://goreportcard.com/badge/github.com/go-flutter-desktop/go-flutter)](https://goreportcard.com/report/github.com/go-flutter-desktop/go-flutter)\n[![Join the chat at https://gitter.im/go-flutter-desktop/go-flutter](https://badges.gitter.im/go-flutter-desktop/go-flutter.svg)](https://gitter.im/go-flutter-desktop/go-flutter?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n## Purpose\n\n[Flutter](http://flutter.io/) allows you to build beautiful native apps on iOS and Android from a single codebase.\n\nThis [unofficial](https://github.com/go-flutter-desktop/go-flutter/issues/191#issuecomment-511384007) project brings Flutter to the desktop through the power of [Go](http://golang.org/) and [GLFW](https://github.com/go-gl/glfw).\n\nThe flutter engine itself doesn\'t know how to deal with desktop platforms _(eg handling mouse/keyboard input)_. Instead, it exposes an abstraction layer for whatever platform to implement. This project implements the [Flutter\'s Embedding API](https://github.com/flutter/flutter/wiki/Custom-Flutter-Engine-Embedders) using a single code base that runs on Windows, macOS, and Linux. For rendering, [**GLFW**](https://github.com/go-gl/glfw) fits the job because it provides the right abstractions over the OpenGL\'s Buffer/Mouse/Keyboard for each platform. \n\nThe choice of [Golang](https://github.com/golang/go) comes from the fact that it has the same tooling on every platform. Plus Golang is a great language because it keeps everything simple and readable, which makes it easy to build cross-platform plugins.\n\n<p align="center">\n  <img src="./stocks.jpg" width="650" align="center" alt="Screenshot of the Stocks demo app on macOS">\n</p>\n\n## Getting started\n\nThe best way to get started is to install [hover](https://github.com/go-flutter-desktop/hover), the official go-flutter tool to set up, build and run Flutter apps on the desktop, including hot-reload.\n\nRead the [hover tutorial](https://github.com/go-flutter-desktop/hover) to run your app on the desktop, or start with [one of our example apps](https://github.com/go-flutter-desktop/examples).\n\nIf you want more in-depth information about go-flutter, read the [wiki](https://github.com/go-flutter-desktop/go-flutter/wiki).\n\n## Supported features\n\n- Linux :penguin:\n- MacOS :apple:\n- Windows :checkered_flag:\n- [**Hot Reload**](https://github.com/go-flutter-desktop/go-flutter/issues/129#issuecomment-513590141)\n- Plugin system\n  - BinaryMessageCodec, BinaryMessageChannel\n  - StandardMessageCodec, JSONMessageCodec\n  - StandardMethodCodec, **MethodChannel**\n- Plugin detection for [suppoted plugins](https://github.com/go-flutter-desktop/go-flutter/wiki/Create-a-hover-compatible-plugin)\n- Importable as Go library into custom projects\n- UTF-8 Text input\n- Clipboard copy & paste\n- Window title and icon\n- Standard keyboard shortcuts\n  - <kbd>ctrl-c</kbd>  <kbd>ctrl-v</kbd>  <kbd>ctrl-x</kbd>  <kbd>ctrl-a</kbd>\n  - <kbd>Home</kbd>  <kbd>End</kbd>  <kbd>shift-Home</kbd>  <kbd>shift-End</kbd>\n  - <kbd>Left</kbd>  <kbd>ctrl-Left</kbd>  <kbd>ctrl-shift-Left</kbd>\n  - <kbd>Right</kbd>  <kbd>ctrl-Right</kbd>  <kbd>ctrl-shift-Right</kbd>\n  - <kbd>Backspace</kbd>  <kbd>ctrl-Backspace</kbd> <kbd>Delete</kbd>\n- Mouse-over/hovering\n- Mouse-buttons\n- RawKeyboard events (through `RawKeyEventDataLinux` regardless of the platform)\n- Distribution format (windows-msi, mac-dmg, linux-appimage, and more)\n- Cross-compiling using docker :whale:\n\nAre you missing a feature? [Open an issue!](https://github.com/go-flutter-desktop/go-flutter/issues/new)\n\n## Examples\n\nA separate repository contains example Flutter apps that also run on the desktop. Go to [github.com/go-flutter-desktop/examples](https://github.com/go-flutter-desktop/examples) to give them a try.\n\n## Plugins\n\nSome popular plugins are already implemented over at [github.com/go-flutter-desktop/plugins](https://github.com/go-flutter-desktop/plugins).\nIf you have implemented a plugin that you would like to share, feel free to open a PR on the plugins repository!  \n\nFor a detailed tutorial on how to create a plugin, read the [wiki](https://github.com/go-flutter-desktop/go-flutter/wiki/Implement-a-plugin).\n\n## Version compatibility\n\n### Flutter version\n\nFlutter itself is a relatively young project. Its framework and engine are updated often. The go-flutter project tries to stay compatible with the [beta channel](https://github.com/flutter/flutter/wiki/Flutter-build-release-channels) of Flutter.\n\n### Go version\n\nUpdating Go is simple and Go [seldomly has backwards-incompatible changes](https://golang.org/doc/go1compat). This project remains compatible with the [latest Go stable release](https://golang.org/dl/).\n\n### GLFW version\n\nThis project uses go-gl/glfw for GLFW v3.2.\n\n## License\n\n[BSD 3-Clause License](LICENSE)\n'