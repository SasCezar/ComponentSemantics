b'# Dokany\n[![Build status](https://ci.appveyor.com/api/projects/status/4tpt4v8btyahh3le/branch/master?svg=true)](https://ci.appveyor.com/project/Maxhy/dokany/branch/master)\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=dokany&metric=alert_status)](https://sonarcloud.io/dashboard?id=dokany)\n[![Coverity Scan](https://img.shields.io/coverity/scan/6789.svg)](https://scan.coverity.com/projects/dokan-dev-dokany)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/43afb600ca75462e94d9484c32090135)](https://www.codacy.com/app/Liryna/dokany?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=dokan-dev/dokany&amp;utm_campaign=Badge_Grade)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1234/badge)](https://bestpractices.coreinfrastructure.org/projects/1234)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fdokan-dev%2Fdokany.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fdokan-dev%2Fdokany?ref=badge_shield)\n|\n[![Bounty](https://img.shields.io/bountysource/team/dokan-dev/activity.svg)](https://www.bountysource.com/teams/dokan-dev/issues)\n|\n[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/dokan-dev/dokany.svg)](http://isitmaintained.com/project/dokan-dev/dokany "Average time to resolve an issue")\n[![Percentage of issues still open](http://isitmaintained.com/badge/open/dokan-dev/dokany.svg)](http://isitmaintained.com/project/dokan-dev/dokany "Percentage of issues still open")\n\n![Dokan Demo](http://dokan-dev.github.io/images/screencast.gif)\n\n## What is Dokan\nWhen you want to create a new file system on Windows, other than FAT or NTFS,\nyou need to develop a file system driver. Developing a device driver that works\nin kernel mode on windows is extremely technical. By using Dokan, you can create\nyour own file systems very easily without writing device drivers. Dokan is\nsimilar to FUSE (Linux file system in user space) but works on Windows. Moreover,\ndokany includes a [FUSE wrapper](https://github.com/dokan-dev/dokany/wiki/FUSE)\nthat helps you to port your FUSE filesystems without changes.\n\n## What is Dokany\n*Dokany is a fork of Dokan 0.6.0 with bug fixes, clean change history and\nupdated to build with latest tools.*\n\nBecause the original Dokan Legacy (< 0.6.0) project is no longer maintained.\n\nSince version 0.8.0, dokany broke compatibility with the dokan API. See\n[Choose a version](https://github.com/dokan-dev/dokany/wiki/Installation#choose-a-version)\nfor more information.\n\n**Signed x86 / x64 / ARM / ARM64 drivers** are provided at each release.\n\n## Licensing\nDokan contains LGPL and MIT licensed programs.\n\n- user-mode library (dokan1.dll)  **LGPL**\n- driver (dokan1.sys)             **LGPL**\n- network library (dokannp1.dll)  **LGPL**\n- fuse library (dokanfuse1.dll)   **LGPL**\n- installer (DokanSetup.exe)      **LGPL**\n- control program (dokanctl.exe)  **MIT**\n- samples (mirror.c)              **MIT**\n\nFor details, please check the license files.\n * **LGPL** license.lgpl.txt\n * **MIT**  license.mit.txt\n\nYou can obtain source files from https://dokan-dev.github.io\n\n## Environment\nDokan works on\n * Windows Server 2019\n * Windows Server 2016\n * Windows 10\n * Windows Server 2012 R2\n * Windows 8.1\n * Windows Server 2012\n * Windows 8\n * Windows Server 2008 R2 SP1\n * Windows 7 SP1\n \nPlatform\n * x86\n * x64\n * ARM\n * ARM64\n\n## How it works\nDokan library contains a user mode DLL (dokan1.dll) and a kernel mode file\nsystem driver (dokan1.sys). Once the Dokan file system driver is installed, you can\ncreate file systems which can be seen as normal file systems in Windows. The\napplication that creates file systems using Dokan library is called File system\napplication.\n\nFile operation requests from user programs (e.g., CreateFile, ReadFile,\nWriteFile, ...) will be sent to the Windows I/O subsystem (runs in kernel mode)\nwhich will subsequently forward the requests to the Dokan file system driver\n(dokan1.sys). By using functions provided by the Dokan user mode library\n(dokan1.dll), file system applications are able to register callback functions\nto the file system driver. The file system driver will invoke these callback\nroutines in order to respond to the requests it received. The results of the\ncallback routines will be sent back to the user program.\n\nFor example, when Windows Explorer requests to open a directory, the CreateFile\nwith Direction option request will be sent to Dokan file system driver and the\ndriver will invoke the CreateFile callback provided by the file system\napplication. The results of this routine are sent back to Windows Explorer as\nthe response to the CreateFile request. Therefore, the Dokan file system driver\nacts as a proxy between user programs and file system applications. The\nadvantage of this approach is that it allows programmers to develop file systems\nin user mode which is safe and easy to debug.\n \nTo learn more about Dokan file system development, see the\n[![API documentation](https://img.shields.io/badge/Documentation-API-green.svg)](https://dokan-dev.github.io/dokany-doc/html/).\n\n## Build\nIn short, download and install the\n[Visual Studio 2019](https://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx)\nwith [SDK 10](https://dev.windows.com/en-us/downloads/windows-10-sdk) &\n[WDK 10](https://msdn.microsoft.com/en-us/windows/hardware/hh852365.aspx)\n\nFor details, see the\n[build page](https://github.com/dokan-dev/dokany/wiki/Build).\n\n## Installation\nFor manual installation, see the\n[installation page](https://github.com/dokan-dev/dokany/wiki/Installation).\n\n## Contribute\nYou want Dokan to get better? Contribute!\n\nLearn the code and suggest your changes on\n[GitHub repository](https://github.com/dokan-dev).\n\nDetect defects and report them on\n[GitHub issue tracker](https://github.com/dokan-dev/dokany/issues).\n\nAsk and answer questions on\n[Google discussion group](https://groups.google.com/forum/#!forum/dokan).\n'