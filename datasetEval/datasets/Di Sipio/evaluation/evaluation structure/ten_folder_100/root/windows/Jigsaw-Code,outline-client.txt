b'# Outline Client\n[![Build Status](https://travis-ci.org/Jigsaw-Code/outline-client.svg?branch=master)](https://travis-ci.org/Jigsaw-Code/outline-client)\n\nThe Outline Client is a cross-platform VPN or proxy client for Windows, macOS, iOS, Android, and ChromeOS.  The Outline Client is designed for use with the [Outline Server](https://github.com/Jigsaw-Code/outline-server) software, but it is fully compatible with any [Shadowsocks](https://shadowsocks.org/) server.\n\nThe client\'s user interface is implemented in [Polymer](https://www.polymer-project.org/) 2.0.  Platform support is provided by [Cordova](https://cordova.apache.org/) and [Electron](https://electronjs.org/), with additional native components in this repository.\n\n## Requirements for all builds\n\nAll builds require [yarn](https://yarnpkg.com/en/docs/install), in addition to other per-platform requirements. After cloning this repo, you should run "yarn" to install all dependencies.\n\n## Building the web app\n\nOutline clients shares the same web app across all platforms. This code is located in the src/www directory. If you are making changes to the shared web app and do not need to test platform-specific functionality, you can test in a desktop browser by running:\n\n    yarn gulp build --platform=browser\n    yarn cordova run browser\n\nThe latter command will open a browser instance running the app. Browser platform development will use fake servers to test successful and unsuccessful connections.\n\nUI components are located in [src/www/ui_components](src/www/ui_components). The app logic is located in [src/www/app](www/app).\n\n## Building the Android app\n\nAdditional requirements for Android:\n\n* Android Studio\n* Android SDK 28\n\nTo build for android, run:\n\n    yarn gulp build --platform=android\n\nTo rebuild after modifying platform dependent files, run:\n\n    yarn cordova platform rm android && yarn gulp build --platform=android\n\nIf this gives you unexpected Cordova errors, run:\n\n    yarn run clean && yarn && yarn gulp build --platform=android\n\nCordova will generate a new Android project in the platforms/android directory.  Install the built apk by  platforms/android/build/outputs/apk/android-armv7-debug.apk\n\nTo learn more about developing for Android, see [docs/android-development](docs/android-development.md).\n\n### Building for Android with Docker\n\nA Docker image with all pre-requisites for Android builds is included.  To build:\n\n* Install dependencies with `./tools/build/build.sh yarn`\n* Then build with `./tools/build/build.sh yarn gulp build --platform=android`\n\n## Apple (macOS and iOS)\n\nAdditional requirements for Apple:\n\n* An Apple Developer Account.  You will need to be invited to join the "Jigsaw Operations LLC" team\n* XCode 10+ ([download](https://developer.apple.com/xcode/))\n* XCode command line tools\n\nTo build for macOS (OS X), run:\n\n    yarn run clean && yarn && yarn gulp build --platform=osx\n\nTo build for iOS, run:\n\n    yarn run clean && yarn && yarn gulp build --platform=ios\n\nTo learn more about developing for Apple, see [docs/apple-development](docs/apple-development.md)\n\n## Windows\n\nAdditional requirements for building on Windows:\n\n* [Cygwin](https://cygwin.com/install.html). It provides the "missing Unix pieces" required by build system such as rsync (and many others)\n\nTo build for Windows, run:\n\n    yarn do src/electron/build\n\nUnlike the Android and Apple clients, the Windows build uses the Electron framework, rather than Cordova.\n'