b'MJExtension\n===\n[![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)\n![podversion](https://img.shields.io/cocoapods/v/MJExtension.svg)\n- A fast, convenient and nonintrusive conversion framework between JSON and model.\n- \xe8\xbd\xac\xe6\x8d\xa2\xe9\x80\x9f\xe5\xba\xa6\xe5\xbf\xab\xe3\x80\x81\xe4\xbd\xbf\xe7\x94\xa8\xe7\xae\x80\xe5\x8d\x95\xe6\x96\xb9\xe4\xbe\xbf\xe7\x9a\x84\xe5\xad\x97\xe5\x85\xb8\xe8\xbd\xac\xe6\xa8\xa1\xe5\x9e\x8b\xe6\xa1\x86\xe6\x9e\xb6\n\n\n\n## \xe2\x80\xbc\xef\xb8\x8f \xe7\xba\xafSwift\xe7\x89\x88\xe7\x9a\x84JSON\xe4\xb8\x8eModel\xe8\xbd\xac\xe6\x8d\xa2\xe6\xa1\x86\xe6\x9e\xb6\xe5\xb7\xb2\xe7\xbb\x8f\xe5\xbc\x80\xe6\xba\x90\xe4\xb8\x8a\xe6\x9e\xb6 \xe2\x80\xbc\xef\xb8\x8f\n\n- [KakaJSON](https://github.com/kakaopensource/KakaJSON)\n- [\xe4\xb8\xad\xe6\x96\x87\xe6\x95\x99\xe7\xa8\x8b](https://www.cnblogs.com/mjios/p/11352776.html)\n- \xe5\xa6\x82\xe6\x9e\x9c\xe4\xbd\xa0\xe7\x9a\x84\xe9\xa1\xb9\xe7\x9b\xae\xe6\x98\xaf\xe7\x94\xa8Swift\xe5\x86\x99\xe7\x9a\x84Model\xef\xbc\x8c\xe5\xa2\x99\xe8\xa3\x82\xe6\x8e\xa8\xe8\x8d\x90\xe4\xbd\xbf\xe7\x94\xa8[KakaJSON](https://github.com/kakaopensource/KakaJSON)\n  - \xe5\xb7\xb2\xe7\xbb\x8f\xe5\xaf\xb9\xe5\x90\x84\xe7\xa7\x8d\xe5\xb8\xb8\xe7\x94\xa8\xe7\x9a\x84\xe6\x95\xb0\xe6\x8d\xae\xe5\x9c\xba\xe6\x99\xaf\xe8\xbf\x9b\xe8\xa1\x8c\xe4\xba\x86\xe5\xa4\xa7\xe9\x87\x8f\xe7\x9a\x84\xe5\x8d\x95\xe5\x85\x83\xe6\xb5\x8b\xe8\xaf\x95\n  - \xe7\xae\x80\xe5\x8d\x95\xe6\x98\x93\xe7\x94\xa8\xe3\x80\x81\xe5\x8a\x9f\xe8\x83\xbd\xe4\xb8\xb0\xe5\xaf\x8c\xe3\x80\x81\xe8\xbd\xac\xe6\x8d\xa2\xe5\xbf\xab\xe9\x80\x9f\n\n\n\n## \xe5\x85\xb3\xe4\xba\x8e\xe5\x9c\xa8Swift\xe4\xb8\xad\xe4\xbd\xbf\xe7\x94\xa8MJExtension \xe2\x80\xbc\xef\xb8\x8f\n\n### \xe2\x80\xbc\xef\xb8\x8f `@objc` attributes should be added to class and property for declaration of Objc accessibility [\xe5\x9c\xa8 Swift4 \xe4\xb9\x8b\xe5\x90\x8e, \xe8\xaf\xb7\xe5\x9c\xa8\xe5\xb1\x9e\xe6\x80\xa7\xe5\x89\x8d\xe5\x8a\xa0 `@objc` \xe4\xbf\xae\xe9\xa5\xb0. \xe4\xbb\xa5\xe4\xbf\x9d\xe8\xaf\x81 Swift \xe7\x9a\x84\xe5\xb1\x9e\xe6\x80\xa7\xe8\x83\xbd\xe5\xa4\x9f\xe6\x9a\xb4\xe9\x9c\xb2\xe7\xbb\x99 Objc \xe4\xbd\xbf\xe7\x94\xa8. ]\xe2\x80\xbc\xef\xb8\x8f\n### \xe2\x80\xbc\xef\xb8\x8f Use `NSNumber` instead of `Bool`, which is not bridged to `BOOL`. [\xe8\xaf\xb7\xe5\x8b\xbf\xe4\xbd\xbf\xe7\x94\xa8 `Bool` \xe7\xb1\xbb\xe5\x9e\x8b, \xe5\x9b\xa0\xe4\xb8\xba\xe5\x9c\xa8 Swift \xe4\xb8\xad\xe5\xb9\xb6\xe6\xb2\xa1\xe6\x9c\x89\xe6\xa1\xa5\xe6\x8e\xa5\xe8\xaf\xa5\xe7\xb1\xbb\xe5\x9e\x8b, \xe4\xb8\x8d\xe8\x83\xbd\xe6\x98\xbe\xe5\xbc\x8f\xe7\x9a\x84\xe5\xaf\xb9\xe5\xba\x94 `BOOL`, \xe8\xaf\xb7\xe4\xbd\xbf\xe7\x94\xa8 `NSNumber` \xe6\x9b\xbf\xe4\xbb\xa3] \xe2\x80\xbc\xef\xb8\x8f\n\n\n\n## Contents\n\n* [Getting Started \xe3\x80\x90\xe5\xbc\x80\xe5\xa7\x8b\xe4\xbd\xbf\xe7\x94\xa8\xe3\x80\x91](#Getting_Started)\n\t* [Features \xe3\x80\x90\xe8\x83\xbd\xe5\x81\x9a\xe4\xbb\x80\xe4\xb9\x88\xe3\x80\x91](#Features)\n\t* [Installation \xe3\x80\x90\xe5\xae\x89\xe8\xa3\x85\xe3\x80\x91](#Installation)\n* [Examples \xe3\x80\x90\xe7\xa4\xba\xe4\xbe\x8b\xe3\x80\x91](#Examples)\n\t* [JSON -> Model](#JSON_Model)\n\t* [JSONString -> Model](#JSONString_Model)\n\t* [Model contains model](#Model_contains_model)\n\t* [Model contains model-array](#Model_contains_model_array)\n\t* [Model name - JSON key mapping](#Model_name_JSON_key_mapping)\n\t* [JSON array -> model array](#JSON_array_model_array)\n\t* [Model -> JSON](#Model_JSON)\n\t* [Model array -> JSON array](#Model_array_JSON_array)\n\t* [Core Data](#Core_Data)\n\t* [Coding](#Coding)\n\t* [Camel -> underline](#Camel_underline)\n\t* [NSString -> NSDate, nil -> @""](#NSString_NSDate)\n\t* [More use cases](#More_use_cases)\n\n---\n\n# <a id="Getting_Started"></a> Getting Started\xe3\x80\x90\xe5\xbc\x80\xe5\xa7\x8b\xe4\xbd\xbf\xe7\x94\xa8\xe3\x80\x91\n\n## <a id="Features"></a> Features\xe3\x80\x90\xe8\x83\xbd\xe5\x81\x9a\xe4\xbb\x80\xe4\xb9\x88\xe3\x80\x91\n- MJExtension\xe6\x98\xaf\xe4\xb8\x80\xe5\xa5\x97\xe5\xad\x97\xe5\x85\xb8\xe5\x92\x8c\xe6\xa8\xa1\xe5\x9e\x8b\xe4\xb9\x8b\xe9\x97\xb4\xe4\xba\x92\xe7\x9b\xb8\xe8\xbd\xac\xe6\x8d\xa2\xe7\x9a\x84\xe8\xb6\x85\xe8\xbd\xbb\xe9\x87\x8f\xe7\xba\xa7\xe6\xa1\x86\xe6\x9e\xb6\n* `JSON` --> `Model`\xe3\x80\x81`Core Data Model`\n* `JSONString` --> `Model`\xe3\x80\x81`Core Data Model`\n* `Model`\xe3\x80\x81`Core Data Model` --> `JSON`\n* `JSON Array` --> `Model Array`\xe3\x80\x81`Core Data Model Array`\n* `JSONString` --> `Model Array`\xe3\x80\x81`Core Data Model Array`\n* `Model Array`\xe3\x80\x81`Core Data Model Array` --> `JSON Array`\n* Coding all properties of a model with only one line of code.\n    * \xe5\x8f\xaa\xe9\x9c\x80\xe8\xa6\x81\xe4\xb8\x80\xe8\xa1\x8c\xe4\xbb\xa3\xe7\xa0\x81\xef\xbc\x8c\xe5\xb0\xb1\xe8\x83\xbd\xe5\xae\x9e\xe7\x8e\xb0\xe6\xa8\xa1\xe5\x9e\x8b\xe7\x9a\x84\xe6\x89\x80\xe6\x9c\x89\xe5\xb1\x9e\xe6\x80\xa7\xe8\xbf\x9b\xe8\xa1\x8cCoding\xef\xbc\x88\xe5\xbd\x92\xe6\xa1\xa3\xe5\x92\x8c\xe8\xa7\xa3\xe6\xa1\xa3\xef\xbc\x89\n\n## <a id="Installation"></a> Installation\xe3\x80\x90\xe5\xae\x89\xe8\xa3\x85\xe3\x80\x91\n\n### From CocoaPods\xe3\x80\x90\xe4\xbd\xbf\xe7\x94\xa8CocoaPods\xe3\x80\x91\n\n```ruby\npod \'MJExtension\'\n```\n\n### Manually\xe3\x80\x90\xe6\x89\x8b\xe5\x8a\xa8\xe5\xaf\xbc\xe5\x85\xa5\xe3\x80\x91\n- Drag all source files under folder `MJExtension` to your project.\xe3\x80\x90\xe5\xb0\x86`MJExtension`\xe6\x96\x87\xe4\xbb\xb6\xe5\xa4\xb9\xe4\xb8\xad\xe7\x9a\x84\xe6\x89\x80\xe6\x9c\x89\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe6\x8b\xbd\xe5\x85\xa5\xe9\xa1\xb9\xe7\x9b\xae\xe4\xb8\xad\xe3\x80\x91\n- Import the main header file\xef\xbc\x9a`#import "MJExtension.h"`\xe3\x80\x90\xe5\xaf\xbc\xe5\x85\xa5\xe4\xb8\xbb\xe5\xa4\xb4\xe6\x96\x87\xe4\xbb\xb6\xef\xbc\x9a`#import "MJExtension.h"`\xe3\x80\x91\n\n```objc\nMJExtension.h\nMJConst.h               MJConst.m\nMJFoundation.h          MJFoundation.m\nMJProperty.h            MJProperty.m\nMJType.h                MJType.m\nNSObject+MJCoding.h     NSObject+MJCoding.m\nNSObject+MJProperty.h   NSObject+MJProperty.m\nNSObject+MJKeyValue.h   NSObject+MJKeyValue.m\n```\n\n# <a id="Examples"></a> Examples\xe3\x80\x90\xe7\xa4\xba\xe4\xbe\x8b\xe3\x80\x91\n\n### <a id="JSON_Model"></a> The most simple JSON -> Model\xe3\x80\x90\xe6\x9c\x80\xe7\xae\x80\xe5\x8d\x95\xe7\x9a\x84\xe5\xad\x97\xe5\x85\xb8\xe8\xbd\xac\xe6\xa8\xa1\xe5\x9e\x8b\xe3\x80\x91\n\n```objc\ntypedef enum {\n    SexMale,\n    SexFemale\n} Sex;\n\n@interface User : NSObject\n@property (copy, nonatomic) NSString *name;\n@property (copy, nonatomic) NSString *icon;\n@property (assign, nonatomic) unsigned int age;\n@property (copy, nonatomic) NSString *height;\n@property (strong, nonatomic) NSNumber *money;\n@property (assign, nonatomic) Sex sex;\n@property (assign, nonatomic, getter=isGay) BOOL gay;\n@end\n\n/***********************************************/\n\nNSDictionary *dict = @{\n    @"name" : @"Jack",\n    @"icon" : @"lufy.png",\n    @"age" : @20,\n    @"height" : @"1.55",\n    @"money" : @100.9,\n    @"sex" : @(SexFemale),\n    @"gay" : @"true"\n//   @"gay" : @"1"\n//   @"gay" : @"NO"\n};\n\n// JSON -> User\nUser *user = [User mj_objectWithKeyValues:dict];\n\nNSLog(@"name=%@, icon=%@, age=%zd, height=%@, money=%@, sex=%d, gay=%d", user.name, user.icon, user.age, user.height, user.money, user.sex, user.gay);\n// name=Jack, icon=lufy.png, age=20, height=1.550000, money=100.9, sex=1\n```\n\n### <a id="JSONString_Model"></a> JSONString -> Model\xe3\x80\x90JSON\xe5\xad\x97\xe7\xac\xa6\xe4\xb8\xb2\xe8\xbd\xac\xe6\xa8\xa1\xe5\x9e\x8b\xe3\x80\x91\n\n```objc\n// 1.Define a JSONString\nNSString *jsonString = @"{\\"name\\":\\"Jack\\", \\"icon\\":\\"lufy.png\\", \\"age\\":20}";\n\n// 2.JSONString -> User\nUser *user = [User mj_objectWithKeyValues:jsonString];\n\n// 3.Print user\'s properties\nNSLog(@"name=%@, icon=%@, age=%d", user.name, user.icon, user.age);\n// name=Jack, icon=lufy.png, age=20\n```\n\n### <a id="Model_contains_model"></a> Model contains model\xe3\x80\x90\xe6\xa8\xa1\xe5\x9e\x8b\xe4\xb8\xad\xe5\xb5\x8c\xe5\xa5\x97\xe6\xa8\xa1\xe5\x9e\x8b\xe3\x80\x91\n\n```objc\n@interface Status : NSObject\n@property (copy, nonatomic) NSString *text;\n@property (strong, nonatomic) User *user;\n@property (strong, nonatomic) Status *retweetedStatus;\n@end\n\n/***********************************************/\n\nNSDictionary *dict = @{\n    @"text" : @"Agree!Nice weather!",\n    @"user" : @{\n        @"name" : @"Jack",\n        @"icon" : @"lufy.png"\n    },\n    @"retweetedStatus" : @{\n        @"text" : @"Nice weather!",\n        @"user" : @{\n            @"name" : @"Rose",\n            @"icon" : @"nami.png"\n        }\n    }\n};\n\n// JSON -> Status\nStatus *status = [Status mj_objectWithKeyValues:dict];\n\nNSString *text = status.text;\nNSString *name = status.user.name;\nNSString *icon = status.user.icon;\nNSLog(@"text=%@, name=%@, icon=%@", text, name, icon);\n// text=Agree!Nice weather!, name=Jack, icon=lufy.png\n\nNSString *text2 = status.retweetedStatus.text;\nNSString *name2 = status.retweetedStatus.user.name;\nNSString *icon2 = status.retweetedStatus.user.icon;\nNSLog(@"text2=%@, name2=%@, icon2=%@", text2, name2, icon2);\n// text2=Nice weather!, name2=Rose, icon2=nami.png\n```\n\n### <a id="Model_contains_model_array"></a> Model contains model-array\xe3\x80\x90\xe6\xa8\xa1\xe5\x9e\x8b\xe4\xb8\xad\xe6\x9c\x89\xe4\xb8\xaa\xe6\x95\xb0\xe7\xbb\x84\xe5\xb1\x9e\xe6\x80\xa7\xef\xbc\x8c\xe6\x95\xb0\xe7\xbb\x84\xe9\x87\x8c\xe9\x9d\xa2\xe5\x8f\x88\xe8\xa6\x81\xe8\xa3\x85\xe7\x9d\x80\xe5\x85\xb6\xe4\xbb\x96\xe6\xa8\xa1\xe5\x9e\x8b\xe3\x80\x91\n\n```objc\n@interface Ad : NSObject\n@property (copy, nonatomic) NSString *image;\n@property (copy, nonatomic) NSString *url;\n@end\n\n@interface StatusResult : NSObject\n/** Contatins status model */\n@property (strong, nonatomic) NSMutableArray *statuses;\n/** Contatins ad model */\n@property (strong, nonatomic) NSArray *ads;\n@property (strong, nonatomic) NSNumber *totalNumber;\n@end\n\n/***********************************************/\n\n// Tell MJExtension what type of model will be contained in statuses and ads.\n[StatusResult mj_setupObjectClassInArray:^NSDictionary *{\n    return @{\n               @"statuses" : @"Status",\n               // @"statuses" : [Status class],\n               @"ads" : @"Ad"\n               // @"ads" : [Ad class]\n           };\n}];\n// Equals: StatusResult.m implements +mj_objectClassInArray method.\n\nNSDictionary *dict = @{\n    @"statuses" : @[\n                      @{\n                          @"text" : @"Nice weather!",\n                          @"user" : @{\n                              @"name" : @"Rose",\n                              @"icon" : @"nami.png"\n                          }\n                      },\n                      @{\n                          @"text" : @"Go camping tomorrow!",\n                          @"user" : @{\n                              @"name" : @"Jack",\n                              @"icon" : @"lufy.png"\n                          }\n                      }\n                  ],\n    @"ads" : @[\n                 @{\n                     @"image" : @"ad01.png",\n                     @"url" : @"http://www.ad01.com"\n                 },\n                 @{\n                     @"image" : @"ad02.png",\n                     @"url" : @"http://www.ad02.com"\n                 }\n             ],\n    @"totalNumber" : @"2014"\n};\n\n// JSON -> StatusResult\nStatusResult *result = [StatusResult mj_objectWithKeyValues:dict];\n\nNSLog(@"totalNumber=%@", result.totalNumber);\n// totalNumber=2014\n\n// Printing\nfor (Status *status in result.statuses) {\n    NSString *text = status.text;\n    NSString *name = status.user.name;\n    NSString *icon = status.user.icon;\n    NSLog(@"text=%@, name=%@, icon=%@", text, name, icon);\n}\n// text=Nice weather!, name=Rose, icon=nami.png\n// text=Go camping tomorrow!, name=Jack, icon=lufy.png\n\n// Printing\nfor (Ad *ad in result.ads) {\n    NSLog(@"image=%@, url=%@", ad.image, ad.url);\n}\n// image=ad01.png, url=http://www.ad01.com\n// image=ad02.png, url=http://www.ad02.com\n```\n\n### <a id="Model_name_JSON_key_mapping"></a> Model name - JSON key mapping\xe3\x80\x90\xe6\xa8\xa1\xe5\x9e\x8b\xe4\xb8\xad\xe7\x9a\x84\xe5\xb1\x9e\xe6\x80\xa7\xe5\x90\x8d\xe5\x92\x8c\xe5\xad\x97\xe5\x85\xb8\xe4\xb8\xad\xe7\x9a\x84key\xe4\xb8\x8d\xe7\x9b\xb8\xe5\x90\x8c(\xe6\x88\x96\xe8\x80\x85\xe9\x9c\x80\xe8\xa6\x81\xe5\xa4\x9a\xe7\xba\xa7\xe6\x98\xa0\xe5\xb0\x84)\xe3\x80\x91\n\n```objc\n@interface Bag : NSObject\n@property (copy, nonatomic) NSString *name;\n@property (assign, nonatomic) double price;\n@end\n\n@interface Student : NSObject\n@property (copy, nonatomic) NSString *ID;\n@property (copy, nonatomic) NSString *desc;\n@property (copy, nonatomic) NSString *nowName;\n@property (copy, nonatomic) NSString *oldName;\n@property (copy, nonatomic) NSString *nameChangedTime;\n@property (strong, nonatomic) Bag *bag;\n@end\n\n/***********************************************/\n\n// How to map\n[Student mj_setupReplacedKeyFromPropertyName:^NSDictionary *{\n    return @{\n               @"ID" : @"id",\n               @"desc" : @"description",\n               @"oldName" : @"name.oldName",\n               @"nowName" : @"name.newName",\n               @"nameChangedTime" : @"name.info[1].nameChangedTime",\n               @"bag" : @"other.bag"\n           };\n}];\n// Equals: Student.m implements +mj_replacedKeyFromPropertyName method.\n\nNSDictionary *dict = @{\n    @"id" : @"20",\n    @"description" : @"kids",\n    @"name" : @{\n        @"newName" : @"lufy",\n        @"oldName" : @"kitty",\n        @"info" : @[\n        \t\t @"test-data",\n        \t\t @{\n            \t             @"nameChangedTime" : @"2013-08"\n                         }\n                  ]\n    },\n    @"other" : @{\n        @"bag" : @{\n            @"name" : @"a red bag",\n            @"price" : @100.7\n        }\n    }\n};\n\n// JSON -> Student\nStudent *stu = [Student mj_objectWithKeyValues:dict];\n\n// Printing\nNSLog(@"ID=%@, desc=%@, oldName=%@, nowName=%@, nameChangedTime=%@",\n      stu.ID, stu.desc, stu.oldName, stu.nowName, stu.nameChangedTime);\n// ID=20, desc=kids, oldName=kitty, nowName=lufy, nameChangedTime=2013-08\nNSLog(@"bagName=%@, bagPrice=%f", stu.bag.name, stu.bag.price);\n// bagName=a red bag, bagPrice=100.700000\n```\n\n\n### <a id="JSON_array_model_array"></a> JSON array -> model array\xe3\x80\x90\xe5\xb0\x86\xe4\xb8\x80\xe4\xb8\xaa\xe5\xad\x97\xe5\x85\xb8\xe6\x95\xb0\xe7\xbb\x84\xe8\xbd\xac\xe6\x88\x90\xe6\xa8\xa1\xe5\x9e\x8b\xe6\x95\xb0\xe7\xbb\x84\xe3\x80\x91\n\n```objc\nNSArray *dictArray = @[\n                         @{\n                             @"name" : @"Jack",\n                             @"icon" : @"lufy.png"\n                         },\n                         @{\n                             @"name" : @"Rose",\n                             @"icon" : @"nami.png"\n                         }\n                     ];\n\n// JSON array -> User array\nNSArray *userArray = [User mj_objectArrayWithKeyValuesArray:dictArray];\n\n// Printing\nfor (User *user in userArray) {\n    NSLog(@"name=%@, icon=%@", user.name, user.icon);\n}\n// name=Jack, icon=lufy.png\n// name=Rose, icon=nami.png\n```\n\n### <a id="Model_JSON"></a> Model -> JSON\xe3\x80\x90\xe5\xb0\x86\xe4\xb8\x80\xe4\xb8\xaa\xe6\xa8\xa1\xe5\x9e\x8b\xe8\xbd\xac\xe6\x88\x90\xe5\xad\x97\xe5\x85\xb8\xe3\x80\x91\n```objc\n// New model\nUser *user = [[User alloc] init];\nuser.name = @"Jack";\nuser.icon = @"lufy.png";\n\nStatus *status = [[Status alloc] init];\nstatus.user = user;\nstatus.text = @"Nice mood!";\n\n// Status -> JSON\nNSDictionary *statusDict = status.mj_keyValues;\nNSLog(@"%@", statusDict);\n/*\n {\n text = "Nice mood!";\n user =     {\n icon = "lufy.png";\n name = Jack;\n };\n }\n */\n\n// More complex situation\nStudent *stu = [[Student alloc] init];\nstu.ID = @"123";\nstu.oldName = @"rose";\nstu.nowName = @"jack";\nstu.desc = @"handsome";\nstu.nameChangedTime = @"2018-09-08";\n\nBag *bag = [[Bag alloc] init];\nbag.name = @"a red bag";\nbag.price = 205;\nstu.bag = bag;\n\nNSDictionary *stuDict = stu.mj_keyValues;\nNSLog(@"%@", stuDict);\n/*\n{\n    ID = 123;\n    bag =     {\n        name = "\\U5c0f\\U4e66\\U5305";\n        price = 205;\n    };\n    desc = handsome;\n    nameChangedTime = "2018-09-08";\n    nowName = jack;\n    oldName = rose;\n}\n */\n```\n\n### <a id="Model_array_JSON_array"></a> Model array -> JSON array\xe3\x80\x90\xe5\xb0\x86\xe4\xb8\x80\xe4\xb8\xaa\xe6\xa8\xa1\xe5\x9e\x8b\xe6\x95\xb0\xe7\xbb\x84\xe8\xbd\xac\xe6\x88\x90\xe5\xad\x97\xe5\x85\xb8\xe6\x95\xb0\xe7\xbb\x84\xe3\x80\x91\n\n```objc\n// New model array\nUser *user1 = [[User alloc] init];\nuser1.name = @"Jack";\nuser1.icon = @"lufy.png";\n\nUser *user2 = [[User alloc] init];\nuser2.name = @"Rose";\nuser2.icon = @"nami.png";\n\nNSArray *userArray = @[user1, user2];\n\n// Model array -> JSON array\nNSArray *dictArray = [User mj_keyValuesArrayWithObjectArray:userArray];\nNSLog(@"%@", dictArray);\n/*\n (\n {\n icon = "lufy.png";\n name = Jack;\n },\n {\n icon = "nami.png";\n name = Rose;\n }\n )\n */\n```\n\n### <a id="Core_Data"></a> Core Data\n\n```objc\nNSDictionary *dict = @{\n                         @"name" : @"Jack",\n                         @"icon" : @"lufy.png",\n                         @"age" : @20,\n                         @"height" : @1.55,\n                         @"money" : @"100.9",\n                         @"sex" : @(SexFemale),\n                         @"gay" : @"true"\n                     };\n\n// This demo just provide simple steps\nNSManagedObjectContext *context = nil;\nUser *user = [User mj_objectWithKeyValues:dict context:context];\n\n[context save:nil];\n```\n\n### <a id="Coding"></a> Coding\n\n```objc\n#import "MJExtension.h"\n\n@implementation Bag\n// NSCoding Implementation\nMJExtensionCodingImplementation\n@end\n\n/***********************************************/\n\n// what properties not to be coded\n[Bag mj_setupIgnoredCodingPropertyNames:^NSArray *{\n    return @[@"name"];\n}];\n// Equals: Bag.m implements +mj_ignoredCodingPropertyNames method.\n\n// Create model\nBag *bag = [[Bag alloc] init];\nbag.name = @"Red bag";\nbag.price = 200.8;\n\nNSString *file = [NSHomeDirectory() stringByAppendingPathComponent:@"Desktop/bag.data"];\n// Encoding\n[NSKeyedArchiver archiveRootObject:bag toFile:file];\n\n// Decoding\nBag *decodedBag = [NSKeyedUnarchiver unarchiveObjectWithFile:file];\nNSLog(@"name=%@, price=%f", decodedBag.name, decodedBag.price);\n// name=(null), price=200.800000\n```\n\n### <a id="Camel_underline"></a> Camel -> underline\xe3\x80\x90\xe7\xbb\x9f\xe4\xb8\x80\xe8\xbd\xac\xe6\x8d\xa2\xe5\xb1\x9e\xe6\x80\xa7\xe5\x90\x8d\xef\xbc\x88\xe6\xaf\x94\xe5\xa6\x82\xe9\xa9\xbc\xe5\xb3\xb0\xe8\xbd\xac\xe4\xb8\x8b\xe5\x88\x92\xe7\xba\xbf\xef\xbc\x89\xe3\x80\x91\n```objc\n// Dog\n#import "MJExtension.h"\n\n@implementation Dog\n+ (NSString *)mj_replacedKeyFromPropertyName121:(NSString *)propertyName\n{\n    // nickName -> nick_name\n    return [propertyName mj_underlineFromCamel];\n}\n@end\n\n// NSDictionary\nNSDictionary *dict = @{\n                       @"nick_name" : @"\xe6\x97\xba\xe8\xb4\xa2",\n                       @"sale_price" : @"10.5",\n                       @"run_speed" : @"100.9"\n                       };\n// NSDictionary -> Dog\nDog *dog = [Dog mj_objectWithKeyValues:dict];\n\n// printing\nNSLog(@"nickName=%@, scalePrice=%f runSpeed=%f", dog.nickName, dog.salePrice, dog.runSpeed);\n```\n\n### <a id="NSString_NSDate"></a> NSString -> NSDate, nil -> @""\xe3\x80\x90\xe8\xbf\x87\xe6\xbb\xa4\xe5\xad\x97\xe5\x85\xb8\xe7\x9a\x84\xe5\x80\xbc\xef\xbc\x88\xe6\xaf\x94\xe5\xa6\x82\xe5\xad\x97\xe7\xac\xa6\xe4\xb8\xb2\xe6\x97\xa5\xe6\x9c\x9f\xe5\xa4\x84\xe7\x90\x86\xe4\xb8\xbaNSDate\xe3\x80\x81\xe5\xad\x97\xe7\xac\xa6\xe4\xb8\xb2nil\xe5\xa4\x84\xe7\x90\x86\xe4\xb8\xba@""\xef\xbc\x89\xe3\x80\x91\n```objc\n// Book\n#import "MJExtension.h"\n\n@implementation Book\n- (id)mj_newValueFromOldValue:(id)oldValue property:(MJProperty *)property\n{\n    if ([property.name isEqualToString:@"publisher"]) {\n        if (oldValue == nil) return @"";\n    } else if (property.type.typeClass == [NSDate class]) {\n        NSDateFormatter *fmt = [[NSDateFormatter alloc] init];\n        fmt.dateFormat = @"yyyy-MM-dd";\n        return [fmt dateFromString:oldValue];\n    }\n\n    return oldValue;\n}\n@end\n\n// NSDictionary\nNSDictionary *dict = @{\n                       @"name" : @"5\xe5\x88\x86\xe9\x92\x9f\xe7\xaa\x81\xe7\xa0\xb4iOS\xe5\xbc\x80\xe5\x8f\x91",\n                       @"publishedTime" : @"2011-09-10"\n                       };\n// NSDictionary -> Book\nBook *book = [Book mj_objectWithKeyValues:dict];\n\n// printing\nNSLog(@"name=%@, publisher=%@, publishedTime=%@", book.name, book.publisher, book.publishedTime);\n```\n\n### <a id="More_use_cases"></a> More use cases\xe3\x80\x90\xe6\x9b\xb4\xe5\xa4\x9a\xe7\x94\xa8\xe6\xb3\x95\xe3\x80\x91\n- Please reference to `NSObject+MJKeyValue.h` and `NSObject+MJCoding.h`\n\n\n## \xe6\x9c\x9f\xe5\xbe\x85\n* \xe5\xa6\x82\xe6\x9e\x9c\xe5\x9c\xa8\xe4\xbd\xbf\xe7\x94\xa8\xe8\xbf\x87\xe7\xa8\x8b\xe4\xb8\xad\xe9\x81\x87\xe5\x88\xb0BUG\xef\xbc\x8c\xe5\xb8\x8c\xe6\x9c\x9b\xe4\xbd\xa0\xe8\x83\xbdIssues\xe6\x88\x91\xef\xbc\x8c\xe8\xb0\xa2\xe8\xb0\xa2\xef\xbc\x88\xe6\x88\x96\xe8\x80\x85\xe5\xb0\x9d\xe8\xaf\x95\xe4\xb8\x8b\xe8\xbd\xbd\xe6\x9c\x80\xe6\x96\xb0\xe7\x9a\x84\xe6\xa1\x86\xe6\x9e\xb6\xe4\xbb\xa3\xe7\xa0\x81\xe7\x9c\x8b\xe7\x9c\x8bBUG\xe4\xbf\xae\xe5\xa4\x8d\xe6\xb2\xa1\xe6\x9c\x89\xef\xbc\x89\n* \xe5\xa6\x82\xe6\x9e\x9c\xe5\x9c\xa8\xe4\xbd\xbf\xe7\x94\xa8\xe8\xbf\x87\xe7\xa8\x8b\xe4\xb8\xad\xe5\x8f\x91\xe7\x8e\xb0\xe5\x8a\x9f\xe8\x83\xbd\xe4\xb8\x8d\xe5\xa4\x9f\xe7\x94\xa8\xef\xbc\x8c\xe5\xb8\x8c\xe6\x9c\x9b\xe4\xbd\xa0\xe8\x83\xbdIssues\xe6\x88\x91\xef\xbc\x8c\xe6\x88\x91\xe9\x9d\x9e\xe5\xb8\xb8\xe6\x83\xb3\xe4\xb8\xba\xe8\xbf\x99\xe4\xb8\xaa\xe6\xa1\x86\xe6\x9e\xb6\xe5\xa2\x9e\xe5\x8a\xa0\xe6\x9b\xb4\xe5\xa4\x9a\xe5\xa5\xbd\xe7\x94\xa8\xe7\x9a\x84\xe5\x8a\x9f\xe8\x83\xbd\xef\xbc\x8c\xe8\xb0\xa2\xe8\xb0\xa2\n* \xe5\xa6\x82\xe6\x9e\x9c\xe4\xbd\xa0\xe6\x83\xb3\xe4\xb8\xbaMJExtension\xe8\xbe\x93\xe5\x87\xba\xe4\xbb\xa3\xe7\xa0\x81\xef\xbc\x8c\xe8\xaf\xb7\xe6\x8b\xbc\xe5\x91\xbdPull Requests\xe6\x88\x91\n\n'