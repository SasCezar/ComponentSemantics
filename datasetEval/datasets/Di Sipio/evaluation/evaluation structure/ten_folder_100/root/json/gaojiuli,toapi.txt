b'# Toapi\n\n[![Build](https://travis-ci.org/gaojiuli/toapi.svg?branch=master)](https://travis-ci.org/gaojiuli/toapi)\n[![Coverage](https://codecov.io/gh/gaojiuli/toapi/branch/master/graph/badge.svg)](https://codecov.io/gh/gaojiuli/toapi)\n[![Python](https://img.shields.io/pypi/pyversions/toapi.svg)](https://pypi.python.org/pypi/toapi/)\n[![Version](https://img.shields.io/pypi/v/toapi.svg)](https://pypi.python.org/pypi/toapi/)\n[![License](https://img.shields.io/pypi/l/toapi.svg)](https://pypi.python.org/pypi/toapi/)\n\n\n![Toapi](logo.png)\n\n## Overview\n\nToapi give you the ability to make every web site provides APIs.\n\nVersion v2.0.0, Completely rewrote. \n\nMore elegant. More pythonic\n\n- v1.0.0 Documentation: [http://www.toapi.org](http://www.toapi.org)\n- Awesome: [https://github.com/toapi/awesome-toapi](https://github.com/toapi/awesome-toapi)\n- Organization: [https://github.com/toapi](https://github.com/toapi)\n\n## Features\n\n- Automatic converting HTML web site to API service.\n- Automatic caching every page of source site.\n- Automatic caching every request.\n- Support merging multiple web sites into one API service. \n\n## Get Started\n\n### Installation\n\n```text\n$ pip install toapi\n$ toapi -v\ntoapi, version 2.0.0\n```\n\n### Usage\n\ncreate `app.py` and copy the code:\n\n```python\nfrom flask import request\nfrom htmlparsing import Attr, Text\nfrom toapi import Api, Item\n\napi = Api()\n\n\n@api.site(\'https://news.ycombinator.com\')\n@api.list(\'.athing\')\n@api.route(\'/posts?page={page}\', \'/news?p={page}\')\n@api.route(\'/posts\', \'/news?p=1\')\nclass Post(Item):\n    url = Attr(\'.storylink\', \'href\')\n    title = Text(\'.storylink\')\n\n\n@api.site(\'https://news.ycombinator.com\')\n@api.route(\'/posts?page={page}\', \'/news?p={page}\')\n@api.route(\'/posts\', \'/news?p=1\')\nclass Page(Item):\n    next_page = Attr(\'.morelink\', \'href\')\n\n    def clean_next_page(self, value):\n        return api.convert_string(\'/\' + value, \'/news?p={page}\', request.host_url.strip(\'/\') + \'/posts?page={page}\')\n\n\napi.run(debug=True, host=\'0.0.0.0\', port=5000)\n```\n\nrun `python app.py`\n\nthen open your browser and visit `http://127.0.0.1:5000/posts?page=1` \n\nyou will get the result like:\n\n```json\n{\n  "Page": {\n    "next_page": "http://127.0.0.1:5000/posts?page=2"\n  }, \n  "Post": [\n    {\n      "title": "Mathematicians Crack the Cursed Curve", \n      "url": "https://www.quantamagazine.org/mathematicians-crack-the-cursed-curve-20171207/"\n    }, \n    {\n      "title": "Stuffing a Tesla Drivetrain into a 1981 Honda Accord", \n      "url": "https://jalopnik.com/this-glorious-madman-stuffed-a-p85-tesla-drivetrain-int-1823461909"\n    }\n  ]\n}\n```\n\n## Todo\n\n1. Visualization. Create toapi project in a web page by drag and drop.\n\n## Contributing\n\nWrite code and test code and pull request.\n\n\n\n'