b'<p align="center">\n  <a href="https://codefund.io/properties/521/visit-sponsor">\n    <img src="https://codefund.io/properties/521/sponsor" />\n  </a>\n</p>\n\n<div align="center">\n\n  <a href="https://tboox.io">\n    <img width="200" heigth="200" src="https://tboox.io/assets/img/logo_text.png">\n  </a>  \n\n  <div>\n    <a href="https://travis-ci.org/tboox/tbox">\n      <img src="https://img.shields.io/travis/tboox/tbox/master.svg?style=flat-square" alt="travis-ci" />\n    </a>\n    <a href="https://ci.appveyor.com/project/waruqi/tbox/branch/master">\n      <img src="https://img.shields.io/appveyor/ci/waruqi/tbox/master.svg?style=flat-square" alt="appveyor-ci" />\n    </a>\n    <a href="https://github.com/tboox/tbox/releases">\n      <img src="https://img.shields.io/github/release/tboox/tbox.svg?style=flat-square" alt="Github All Releases" />\n    </a>\n  </div>\n  <div>\n    <a href="https://github.com/tboox/tbox/blob/master/LICENSE.md">\n      <img src="https://img.shields.io/github/license/tboox/tbox.svg?colorB=f48041&style=flat-square" alt="license" />\n    </a>\n    <a href="https://www.reddit.com/r/tboox/">\n      <img src="https://img.shields.io/badge/chat-on%20reddit-ff3f34.svg?style=flat-square" alt="Reddit" />\n    </a>\n    <a href="https://gitter.im/tboox/tboox?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge">\n      <img src="https://img.shields.io/gitter/room/tboox/tboox.svg?style=flat-square&colorB=96c312" alt="Gitter" />\n    </a>\n    <a href="https://t.me/tbooxorg">\n      <img src="https://img.shields.io/badge/chat-on%20telegram-blue.svg?style=flat-square" alt="Telegram" />\n    </a>\n    <a href="https://jq.qq.com/?_wv=1027&k=5hpwWFv">\n      <img src="https://img.shields.io/badge/chat-on%20QQ-ff69b4.svg?style=flat-square" alt="QQ" />\n    </a>\n    <a href="https://tboox.org/donation/">\n      <img src="https://img.shields.io/badge/donate-us-orange.svg?style=flat-square" alt="Donate" />\n    </a>\n  </div>\n\n  <p>A glib-like cross-platform C library</p>\n</div>\n\n## Introduction ([\xe4\xb8\xad\xe6\x96\x87](/README_zh.md))\n\nTBOX is a glib-like cross-platform C library that is simple to use yet powerful in nature.\n\nThe project focuses on making C development easier and provides many modules (.e.g stream, coroutine, regex, container, algorithm ...), \nso that any developer can quickly pick it up and enjoy the productivity boost when developing in C language.\n\nIt supports the following platforms:\n\n- Windows\n- Macosx\n- Linux\n- Android\n- iOS\n\nAnd it provides many compiling options using [xmake](https://github.com/xmake-io/xmake):\n\n* Release: Disable debug information, assertion, memory checking and enable optimization.\n* Debug: Enable debug information, assertion, memory checking and disable optimization.\n* Small: Disable all extensional modules and enable space optimization.\n* Micro: compiling micro library (~64K) for the embed system.\n\nIf you want to know more, please refer to:\n\n* [HomePage](https://tboox.org)\n* [Documents](https://tboox.io/#/getting_started)\n* [Github](https://github.com/tboox/tbox)\n* [Gitee](https://gitee.com/tboox/tbox)\n\n## Features\n\n#### The stream library\n\n- Supports file, data, http and socket source\n- Supports the stream filter for gzip, charset and...\n- Implements stream transfer\n- Implements the static buffer stream for parsing data\n- Supports coroutine and implements asynchronous operation\n\n#### The coroutine library \n\n- Provides high-performance coroutine switch(refer to [reports](https://tboox.org/2016/10/28/benchbox-coroutine/))\n- Supports arm, arm64, x86, x86_64 ..\n- Provides channel interfaces\n- Provides semaphore and lock interfaces\n- Supports io socket and stream operation in coroutine\n- Provides some io servers (http ..) using coroutine\n- Provides stackfull and stackless coroutines\n- Support epoll, kqueue, poll, select and IOCP\n\n#### The database library\n\n- Supports mysql and sqlite3 database and enumerates data using the iterator mode\n\n#### The xml parser library\n\n- Supports DOM and SAX mode and Supports xpath\n\n#### The serialization and deserialization library\n\n- Supports xml, json, bplist, xplist, binary formats\n\n#### The memory library\n\n- Implements some memory pools for optimizing memory\n- Supports fast memory error detecting. it can detect the following types of bugs for the debug mode:\n  - out-of-bounds accesses to heap and globals\n  - use-after-free\n  - double-free, invalid free\n  - memory leaks\n\n#### The container library\n\n- Implements hash table, single list, double list, vector, stack, queue\n  and min/max heap. Supports iterator mode for algorithm\n\n#### The algorithm library\n\n- Uses the iterator mode\n- Implements find, binary find and reverse find algorithm\n- Implements sort, bubble sort, quick sort, heap sort and insert sort algorithm\n- Implements count, walk items, reverse walk items, for_all and rfor_all\n\n#### The network library\n\n- Implements dns(cached)\n- Implements ssl(openssl, polarssl, mbedtls)\n- Implements http\n- Implements cookies\n- Supports ipv4, ipv6\n- Supports coroutine\n\n#### The platform library\n\n- Implements timer, fast and low precision timer\n- Implements atomic and atomic64 operation\n- Implements spinlock, mutex, event, semaphore, thread and thread pool \n- Implements file, socket operation\n- Implements poller using epoll, poll, select, kqueue ...\n- Implements switch context interfaces for coroutine\n\n#### The charset library\n\n- Supports utf8, utf16, gbk, gb2312, uc2 and uc4\n- Supports big endian and little endian mode\n\n#### The zip library\n\n- Supports gzip, zlibraw, zlib formats using the zlib library if exists\n- Implements lzsw, lz77 and rlc algorithm\n\n#### The utils library\n\n- Implements base32, base64 encoder and decoder\n- Implements assert and trace output for the debug mode\n- Implements bits operation for parsing u8, u16, u32, u64 data\n\n#### The math library\n\n- Implements random generator\n- Implements fast fixed-point calculation, Supports 6-bits, 16-bits, 30-bits fixed-point number\n\n#### The libc library\n\n- Implements lightweight libc library interfaces, the interface name contains `tb_xxx` prefix for avoiding conflict\n- Implements strixxx strrxxx wcsixxx wcsrxxx interface extension\n- Optimizes some frequently-used interface, .e.g. memset, memcpy, strcpy ... \n- Implements `memset_u16`, `memset_u32`, `memset_u64` extension interfaces\n\n#### The libm library\n\n- Implements lightweight libm library interfaces, the interface name contains `tb_xxx` prefix for avoiding conflict\n- Supports float and double type\n\n#### The regex library\n\n- Supports match and replace\n- Supports global/multiline/caseless mode\n- Uses pcre, pcre2 and posix regex modules\n\n#### The hash library\n\n- Implements crc32, adler32, md5 and sha1 hash algorithm\n- Implements some string hash algorithms (.e.g bkdr, fnv32, fnv64, sdbm, djb2, rshash, aphash ...)\n- Implements uuid generator\n\n## Projects\n\nSome projects using tbox:\n\n* [gbox](https://github.com/tboox/gbox)\n* [vm86](https://github.com/tboox/vm86)\n* [xmake](http://www.xmake.io)\n* [itrace](https://github.com/tboox/itrace)\n* [more](https://github.com/tboox/tbox/wiki/tbox-projects)\n\n## Build\n\nPlease install xmake first: [xmake](https://github.com/xmake-io/xmake)\n\n```console\n# build for the host platform\n$ cd ./tbox\n$ xmake\n\n# build for the mingw platform\n$ cd ./tbox\n$ xmake f -p mingw --sdk=/home/mingwsdk \n$ xmake\n\n# build for the iphoneos platform\n$ cd ./tbox\n$ xmake f -p iphoneos \n$ xmake\n\n# build for the android platform\n$ cd ./tbox\n$ xmake f -p android --ndk=xxxxx\n$ xmake\n\n# build for the linux cross-platform\n$ cd ./tbox\n$ xmake f -p linux --sdk=/home/sdk # --bin=/home/sdk/bin\n$ xmake\n```\n    \n## Example\n\n```c\n#include "tbox/tbox.h"\n\nint main(int argc, char** argv)\n{\n    // init tbox\n    if (!tb_init(tb_null, tb_null)) return 0;\n\n    // trace\n    tb_trace_i("hello tbox");\n\n    // init vector\n    tb_vector_ref_t vector = tb_vector_init(0, tb_element_cstr(tb_true));\n    if (vector)\n    {\n        // insert item\n        tb_vector_insert_tail(vector, "hello");\n        tb_vector_insert_tail(vector, "tbox");\n\n        // dump all items\n        tb_for_all (tb_char_t const*, cstr, vector)\n        {\n            // trace\n            tb_trace_i("%s", cstr);\n        }\n\n        // exit vector\n        tb_vector_exit(vector);\n    }\n\n    // init stream\n    tb_stream_ref_t stream = tb_stream_init_from_url("http://www.xxx.com/file.txt");\n    if (stream)\n    {\n        // open stream\n        if (tb_stream_open(stream))\n        {\n            // read line\n            tb_long_t size = 0;\n            tb_char_t line[TB_STREAM_BLOCK_MAXN];\n            while ((size = tb_stream_bread_line(stream, line, sizeof(line))) >= 0)\n            {\n                // trace\n                tb_trace_i("line: %s", line);\n            }\n        }\n\n        // exit stream\n        tb_stream_exit(stream);\n    }\n\n    // wait \n    tb_getchar();\n\n    // exit tbox\n    tb_exit();\n    return 0;\n}\n```\n\n## Contacts\n\n* Email\xef\xbc\x9a[waruqi@gmail.com](mailto:waruqi@gmail.com)\n* Homepage\xef\xbc\x9a[tboox.org](https://tboox.org)\n* Community\xef\xbc\x9a[/r/tboox on reddit](https://www.reddit.com/r/tboox/)\n* QQ Group: 343118190(full), 662147501\n* Wechat Public: tboox-os\n\n'