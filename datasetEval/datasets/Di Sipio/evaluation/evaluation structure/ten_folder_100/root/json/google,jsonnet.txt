b'# Jsonnet - The data templating language\n\n[![Build Status](https://travis-ci.org/google/jsonnet.svg?branch=master)](https://travis-ci.org/google/jsonnet)\n\nFor an introduction to Jsonnet and documentation,\n[visit our website](http://jsonnet.org).\n\nVisit our [discussion forum](https://groups.google.com/forum/#!forum/jsonnet).\n\n## Quick Start\n\n**Using Homebrew**  \n\n```\nbrew install jsonnet\n```\n\n\n## Building Jsonnet\n\nYou can use either GCC or Clang to build Jsonnet. Note that on recent versions\nof macOS, `/usr/bin/gcc` and `/usr/bin/g++` are actually Clang, so there is no\ndifference.\n\n### Makefile\n\nTo build Jsonnet with GCC, run:\n\n```\nmake\n```\n\nTo build Jsonnet with Clang, run:\n\n```\nmake CC=clang CXX=clang++\n```\n\nTo run the output binary, run:\n\n```\n./jsonnet\n```\n\nTo run the reformatter, run:\n\n```\n./jsonnetfmt\n```\n\n### Bazel\n\nBazel builds are also supported.\nInstall [Bazel](https://www.bazel.io/versions/master/docs/install.html) if it is\nnot installed already. Then, run the following command to build with GCC:\n\n```\nbazel build -c opt //cmd:all\n```\n\nTo build with Clang, use one of these two options:\n\n```\nenv CC=clang CXX=clang++ bazel build -c opt //cmd:all\n\n# OR\n\nbazel build -c opt --action_env=CC=clang --action_env=CXX=clang++ //cmd:all\n```\n\nThis builds the `jsonnet` and `jsonnetfmt` targets defined in [`cmd/BUILD`](./cmd/BUILD). To launch\nthe output binaries, run:\n\n```\nbazel-bin/cmd/jsonnet\nbazel-bin/cmd/jsonnetfmt\n```\n\n\n### Cmake\n\n\n```\ncmake . -Bbuild\n```\n\n```\ncmake --build build --target run_tests\n```\n\n## Contributing\n\nSee the [contributing page](http://jsonnet.org/contributing.html) on our website.\n\n\n## Developing Jsonnet\n\n### Running tests\n\nTo run the comprehensive suite:\n\n```\nmake test\n```\n\n\n### Locally serving the website\n\nFirst, you need to build the JavaScript version of Jsonnet (which requires\n[_emscripten_](https://emscripten.org/)):\n\n```\nmake doc/js/libjsonnet.js\n```\n\nThen, from the root of the repository you can generate and serve the website using\n[Jekyll](https://jekyllrb.com/):\n\n```\ntools/scripts/serve_docs.sh\n```\n\nThis should the website on localhost:8080, automatically rebuild when you change any underlying\nfiles, and automatically refresh your browser when that happens.\n'