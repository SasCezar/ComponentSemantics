b"Mimesis - Fake Data Generator\n-----------------------------\n\n|\n\n.. image:: https://raw.githubusercontent.com/lk-geimfari/mimesis/master/media/readme-logo.png\n     :target: https://github.com/lk-geimfari/mimesis\n\n|\n\nDescription\n-----------\n\n.. image:: https://travis-ci.org/lk-geimfari/mimesis.svg?branch=master\n     :target: https://travis-ci.org/lk-geimfari/mimesis\n     :alt: Travis CI\n\n.. image:: https://readthedocs.org/projects/mimesis/badge/?version=latest\n     :target: https://mimesis.name/\n     :alt: Documentation Status\n\n.. image:: https://codecov.io/gh/lk-geimfari/mimesis/branch/master/graph/badge.svg\n     :target: https://codecov.io/gh/lk-geimfari/mimesis\n     :alt: Code Coverage\n\n.. image:: https://badge.fury.io/py/mimesis.svg\n     :target: https://badge.fury.io/py/mimesis\n     :alt: Package version\n\n.. image:: https://img.shields.io/badge/python-3.6%20%7C%203.7%20%7C%203.8-brightgreen.svg\n     :target: https://badge.fury.io/py/mimesis\n     :alt: Python version\n\n\n\nMimesis is a package for Python, which helps generate big volumes of fake data for a variety of purposes in a variety of languages. The fake data could be used to populate a testing database, create beautiful JSON and XML files, anonymize data taken from production and etc.\n\n\nInstallation\n------------\n\nTo install mimesis, simply use pip:\n\n.. code:: text\n\n    [env] ~ \xe2\x9f\xa9 pip install mimesis\n\nGetting started\n---------------\n\nThis library is really easy to use and everything you need is just import an object which\nrepresents a type of data you need (we call such object *Provider*).\n\nIn example below we import provider `Person <https://mimesis.name/api.html#person>`_,\nwhich represents data related to personal information, such as name, surname, email and etc:\n\n.. code:: python\n\n    >>> from mimesis import Person\n    >>> person = Person('en')\n\n    >>> person.full_name()\n    'Antonetta Garrison'\n\n    >>> person.occupation()\n    'Backend Developer'\n    \n    >>> person.telephone()\n    '1-408-855-5063'\n\n\nMore about the other providers you can read in our `documentation`_.\n\n.. _documentation: https://mimesis.name/getting_started.html#providers\n\n\nLocales\n-------\n\nMimesis currently includes support for 33 different `locales`_. You can\nspecify a locale when creating providers and they will return data that\nis appropriate for the language or country associated with that locale.\n\nLet's take a look how it works:\n\n.. code:: python\n\n    >>> from mimesis import Person\n    >>> from mimesis.enums import Gender\n\n    >>> de = Person('de')\n    >>> en = Person('en')\n\n    >>> de.full_name(gender=Gender.FEMALE)\n    'Sabrina Gutermuth'\n\n    >>> en.full_name(gender=Gender.MALE)\n    'Layne Gallagher'\n\n.. _locales: https://mimesis.name/getting_started.html#locales\n\nProviders\n---------\n\nMimesis support over twenty different data providers available,\nwhich can produce data related to people, food, computer hardware,\ntransportation, addresses, and more.\n\nSee `API Reference <https://mimesis.name/api.html>`_ for more info.\n\n\nGenerating structured data\n--------------------------\n\nYou can generate dictionaries which can be easily converted to any\nformat you want (JSON/XML/YAML etc.)  with any structure you want.\n\nJust use object ``Field()`` as shown below:\n\n.. code:: python\n\n    >>> from mimesis.schema import Field, Schema\n    >>> from mimesis.enums import Gender\n    >>> _ = Field('en')\n    >>> description = (\n    ...     lambda: {\n    ...         'id': _('uuid'),\n    ...         'name': _('text.word'),\n    ...         'version': _('version', pre_release=True),\n    ...         'timestamp': _('timestamp', posix=False),\n    ...         'owner': {\n    ...             'email': _('person.email', key=str.lower),\n    ...             'token': _('token_hex'),\n    ...             'creator': _('full_name', gender=Gender.FEMALE),\n    ...         },\n    ...     }\n    ... )\n    >>> schema = Schema(schema=description)\n    >>> schema.create(iterations=1)\n\nOutput:\n\n.. code:: text\n\n    [\n      {\n        'id': '7a41f446-57a8-ec17-b9ad-367742251679',\n        'name': 'desert',\n        'version': '7.3.7-alpha.6',\n        'timestamp': '2026-06-06T14:00:52Z',\n        'owner': {\n          'email': 'damaged1829@gmail.com',\n          'token': 'acfd799af9b46e5560a51dabace593033171ec81e997905acfc602c93a741735',\n          'creator': 'Keena Hendricks'\n        }\n      }\n    ]\n\n\nSee `Schema and Fields <https://mimesis.name/getting_started.html#schema-and-fields>`_ for more info.\n\n\n\nDocumentation\n-------------\n\nYou can find the complete documentation on the `Read the Docs`_.\n\nIt is divided into several sections:\n\n-  `Foreword`_\n-  `Getting Started`_\n-  `Tips and Tricks`_\n-  `API Reference`_\n-  `Contributing`_\n-  `Changelog`_\n\nYou can improve it by sending pull requests to this repository.\n\n.. _Read the Docs: https://mimesis.name\n.. _Foreword: https://mimesis.name/foreword.html\n.. _Getting Started: https://mimesis.name/getting_started.html\n.. _Tips and Tricks: https://mimesis.name/tips.html\n.. _API Reference: https://mimesis.name/api.html\n.. _Contributing: https://mimesis.name/contributing.html\n.. _Changelog: https://mimesis.name/changelog.html\n\n\nHow to Contribute\n-----------------\n\n1. Take a look at `contributing guidelines`_.\n2. Check for open issues or open a fresh issue to start a discussion\n   around a feature idea or a bug.\n3. Fork the repository on GitHub to start making your changes to the\n   *your_branch* branch.\n4. Add yourself to the list of `contributors`_.\n5. Send a pull request and bug the maintainer until it gets merged and\n   published.\n\n.. _contributing guidelines: https://github.com/lk-geimfari/mimesis/blob/master/CONTRIBUTING.rst\n.. _contributors: https://github.com/lk-geimfari/mimesis/blob/master/CONTRIBUTORS.rst\n\n\nLicense\n-------\n\nMimesis is licensed under the MIT License. See `LICENSE`_ for more\ninformation.\n\n.. _LICENSE: https://github.com/lk-geimfari/mimesis/blob/master/LICENSE\n"