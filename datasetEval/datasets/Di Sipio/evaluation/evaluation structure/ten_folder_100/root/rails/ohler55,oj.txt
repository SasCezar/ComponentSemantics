b'# [![{}j](http://www.ohler.com/dev/images/oj_comet_64.svg)](http://www.ohler.com/oj) gem\n\n[![Build Status](https://img.shields.io/travis/ohler55/oj/master.svg?logo=travis)](http://travis-ci.org/ohler55/oj?branch=master) [![AppVeyor](https://img.shields.io/appveyor/ci/ohler55/oj/master.svg?logo=appveyor)](https://ci.appveyor.com/project/ohler55/oj) ![Gem](https://img.shields.io/gem/v/oj.svg) ![Gem](https://img.shields.io/gem/dt/oj.svg) [![SemVer compatibility](https://api.dependabot.com/badges/compatibility_score?dependency-name=oj&package-manager=bundler&version-scheme=semver)](https://dependabot.com/compatibility-score.html?dependency-name=oj&package-manager=bundler&version-scheme=semver) [![TideLift](https://tidelift.com/badges/github/ohler55/oj)](https://tidelift.com/subscription/pkg/rubygems-oj?utm_source=rubygems-oj&utm_medium=referral&utm_campaign=readme)\n\nA *fast* JSON parser and Object marshaller as a Ruby gem.\n\nVersion 3.0 is out! 3.0 provides better json gem and Rails compatibility. It\nalso provides additional optimization options.\n\n## Using\n\n```ruby\nrequire \'oj\'\n\nh = { \'one\' => 1, \'array\' => [ true, false ] }\njson = Oj.dump(h)\n\n# json =\n# {\n#   "one":1,\n#   "array":[\n#     true,\n#     false\n#   ]\n# }\n\nh2 = Oj.load(json)\nputs "Same? #{h == h2}"\n# true\n```\n\n## Installation\n```\ngem install oj\n```\n\nor in Bundler:\n\n```\ngem \'oj\'\n```\n\n## Support\n\n[Get supported Oj with a Tidelift Subscription.](https://tidelift.com/subscription/pkg/rubygems-oj?utm_source=rubygems-oj&utm_medium=referral&utm_campaign=readme) Security updates are [supported](https://tidelift.com/security).\n\n## Further Reading\n\nFor more details on options, modes, advanced features, and more follow these\nlinks.\n\n - [{file:Options.md}](pages/Options.md) for parse and dump options.\n - [{file:Modes.md}](pages/Modes.md) for details on modes for strict JSON compliance, mimicing the JSON gem, and mimicing Rails and ActiveSupport behavior.\n - [{file:JsonGem.md}](pages/JsonGem.md) includes more details on json gem compatibility and use.\n - [{file:Rails.md}](pages/Rails.md) includes more details on Rails and ActiveSupport compatibility and use.\n - [{file:Custom.md}](pages/Custom.md) includes more details on Custom mode.\n - [{file:Encoding.md}](pages/Encoding.md) describes the :object encoding format.\n - [{file:Compatibility.md}](pages/Compatibility.md) lists current compatibility with Rubys and Rails.\n - [{file:Advanced.md}](pages/Advanced.md) for fast parser and marshalling features.\n - [{file:Security.md}](pages/Security.md) for security considerations.\n\n## Releases\n\nSee [{file:CHANGELOG.md}](CHANGELOG.md)\n\n## Links\n\n- *Documentation*: http://www.ohler.com/oj/doc, http://rubydoc.info/gems/oj\n\n- *GitHub* *repo*: https://github.com/ohler55/oj\n\n- *RubyGems* *repo*: https://rubygems.org/gems/oj\n\nFollow [@peterohler on Twitter](http://twitter.com/peterohler) for announcements and news about the Oj gem.\n\n#### Performance Comparisons\n\n - [Oj Strict Mode Performance](http://www.ohler.com/dev/oj_misc/performance_strict.html) compares Oj strict mode parser performance to other JSON parsers.\n\n - [Oj Compat Mode Performance](http://www.ohler.com/dev/oj_misc/performance_compat.html) compares Oj compat mode parser performance to other JSON parsers.\n\n - [Oj Object Mode Performance](http://www.ohler.com/dev/oj_misc/performance_object.html) compares Oj object mode parser performance to other marshallers.\n\n - [Oj Callback Performance](http://www.ohler.com/dev/oj_misc/performance_callback.html) compares Oj callback parser performance to other JSON parsers.\n\n#### Links of Interest\n\n - *Fast XML parser and marshaller on RubyGems*: https://rubygems.org/gems/ox\n\n - *Fast XML parser and marshaller on GitHub*: https://github.com/ohler55/ox\n\n - [Need for Speed](http://www.ohler.com/dev/need_for_speed/need_for_speed.html) for an overview of how Oj::Doc was designed.\n\n - *OjC, a C JSON parser*: https://www.ohler.com/ojc also at https://github.com/ohler55/ojc\n\n - *Agoo, a high performance Ruby web server supporting GraphQL on GitHub*: https://github.com/ohler55/agoo\n\n - *Agoo-C, a high performance C web server supporting GraphQL on GitHub*: https://github.com/ohler55/agoo-c\n\n#### Contributing\n\n+ Provide a Pull Request off the `develop` branch.\n+ Report a bug\n+ Suggest an idea\n'