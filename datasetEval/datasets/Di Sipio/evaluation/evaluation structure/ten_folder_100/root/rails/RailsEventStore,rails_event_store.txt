b'# Rails Event Store\n\n[Rails Event Store (RES)](https://railseventstore.org/) is a library for publishing, consuming, storing and retrieving events. It\'s your best companion for going with an event-driven architecture for your Rails application.\n\nYou can use it:\n\n<ul>\n<li>as your <a href="https://railseventstore.org/docs/pubsub/">Publish-Subscribe bus</a></li>\n<li>to decouple core business logic from external concerns in Hexagonal style architectures</li>\n<li>as <a href="https://blog.arkency.com/2016/05/domain-events-over-active-record-callbacks/">an alternative to ActiveRecord callbacks and Observers</a></li>\n<li>as a communication layer between loosely coupled components</li>\n<li>to react to published events synchronously or asynchronously</li>\n<li>to extract side-effects (notifications, metrics etc) from your controllers and services into event handlers</li>\n<li>to build an audit-log</li>\n<li>to create read-models</li>\n<li>to implement event-sourcing</li>\n</ul>\n\n## Documentation\n\nDocumentation, tutorials and code samples are available at [https://railseventstore.org](https://railseventstore.org).\n\n## Code status\n\n[![CircleCI](https://circleci.com/gh/RailsEventStore/rails_event_store.svg?style=shield)](https://circleci.com/gh/RailsEventStore/rails_event_store)\n[![Gem Version](https://badge.fury.io/rb/rails_event_store.svg)](https://badge.fury.io/rb/rails_event_store)\n[![Downloads](https://badgen.net/rubygems/dt/ruby_event_store)](https://rubygems.org/gems/ruby_event_store)\n[![Maintainability](https://badgen.net/codeclimate/maintainability/RailsEventStore/rails_event_store)](https://codeclimate.com/github/RailsEventStore/rails_event_store/maintainability)\n[![Documentation](https://inch-ci.org/github/RailsEventStore/rails_event_store.svg?branch=master)](https://inch-ci.org/github/RailsEventStore/rails_event_store)\n\nWe\'re aiming for 100% mutation coverage in this project. This is why:\n\n* [Why I want to introduce mutation testing to the rails_event_store gem](https://blog.arkency.com/2015/04/why-i-want-to-introduce-mutation-testing-to-the-rails-event-store-gem/)\n* [Mutation testing and continuous integration](https://blog.arkency.com/2015/05/mutation-testing-and-continuous-integration/)\n\nWhenever you fix a bug or add a new feature, we require that the coverage doesn\'t go down.\n\n## Contributing\n\nThis single repository hosts several gems and website with documentation. Check the contribution [guide](https://railseventstore.org/community/).\n\n## About\n\n<img src="https://arkency.com/images/arkency.png" alt="Arkency" width="60px" align="left" />\n\nThis repository is funded and maintained by [Arkency](https://arkency.com). Check out our other [open-source projects](https://github.com/arkency) and what else we have at [RES](https://github.com/RailsEventStore).\n\nConsider [hiring us](https://arkency.com/hire-us) and make sure to check out [our blog](https://blog.arkency.com).\n\n### Learn more about DDD & Event Sourcing\n\nCheck our [Rails + Domain Driven Design Workshop](https://blog.arkency.com/ddd-training/).\nWhy You should attend? Robert has explained this in a [blogpost](https://blog.arkency.com/2016/12/why-would-you-even-want-to-listen-about-ddd/).\n\n### Read about Domain Driven Rails\n\nYou may also consider buying the [Domain-Driven Rails book](https://blog.arkency.com/domain-driven-rails/).\n'