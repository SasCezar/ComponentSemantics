b'== Annotate (aka AnnotateModels)\n\n{<img src="https://badge.fury.io/rb/annotate.svg" alt="Gem Version" />}[http://badge.fury.io/rb/annotate]\n{<img src="https://img.shields.io/gem/dt/annotate.svg?style=flat" />}[https://rubygems.org/gems/annotate]\n{<img src="https://travis-ci.org/ctran/annotate_models.svg?branch=develop" />}[https://travis-ci.org/ctran/annotate_models]\n{<img src="https://github.com/ctran/annotate_models/workflows/CI/badge.svg" />}[https://github.com/ctran/annotate_models/actions?workflow=CI]\n{<img src="https://coveralls.io/repos/ctran/annotate_models/badge.svg?branch=develop" />}[https://coveralls.io/r/ctran/annotate_models?branch=develop]\n{<img src="https://codeclimate.com/github/ctran/annotate_models/badges/gpa.svg" />}[https://codeclimate.com/github/ctran/annotate_models]\n{<img src="http://inch-ci.org/github/ctran/annotate_models.svg?branch=develop" alt="Inline docs" />}[http://inch-ci.org/github/ctran/annotate_models]\n\nAdd a comment summarizing the current schema to the top or bottom of each of\nyour...\n\n- ActiveRecord models\n- Fixture files\n- Tests and Specs\n- Object Daddy exemplars\n- Machinist blueprints\n- Fabrication fabricators\n- Thoughtbot\'s factory_bot factories, i.e. the (spec|test)/factories/<model>_factory.rb files\n- routes.rb file (for Rails projects)\n\nThe schema comment looks like this:\n\n   # == Schema Info\n   #\n   # Table name: line_items\n   #\n   #  id                  :integer(11)    not null, primary key\n   #  quantity            :integer(11)    not null\n   #  product_id          :integer(11)    not null\n   #  unit_price          :float\n   #  order_id            :integer(11)\n   #\n\n    class LineItem < ActiveRecord::Base\n      belongs_to :product\n     . . .\n\nIt also annotates geometrical columns, geom type and srid, when using\n+SpatialAdapter+, +PostgisAdapter+ or +PostGISAdapter+:\n\n   # == Schema Info\n   #\n   # Table name: trips\n   #\n   #  local           :geometry        point, 4326\n   #  path            :geometry        line_string, 4326\n\nAlso, if you pass the -r option, it\'ll annotate routes.rb with the output of\n<code>rake routes</code>.\n\n\n== Install\n\nInto Gemfile from rubygems.org:\n\n    group :development do\n      gem \'annotate\'\n    end\n\nInto Gemfile from Github:\n\n    group :development do\n      gem \'annotate\', git: \'https://github.com/ctran/annotate_models.git\'\n    end\n\nInto environment gems from rubygems.org:\n\n    gem install annotate\n\nInto environment gems from Github checkout:\n\n    git clone https://github.com/ctran/annotate_models.git annotate_models\n    cd annotate_models\n    rake build\n    gem install pkg/annotate-*.gem\n\n\n== Usage\n\n(If you used the Gemfile install, prefix the below commands with <code>bundle exec</code>.)\n\n=== Usage in Rails\n\nTo annotate all your models, tests, fixtures, and factories:\n\n    cd /path/to/app\n    annotate\n\nTo annotate just your models, tests, and factories:\n\n    annotate --models --exclude fixtures\n\nTo annotate just your models:\n\n    annotate --models\n\nTo annotate routes.rb:\n\n    annotate --routes\n\nTo remove model/test/fixture/factory/serializer annotations:\n\n    annotate --delete\n\nTo remove routes.rb annotations:\n\n    annotate --routes --delete\n\nTo automatically annotate every time you run <code>db:migrate</code>, either run <code>rails g annotate:install</code> or add +Annotate.load_tasks+ to your `Rakefile`. See the {configuration in Rails}[link:README.rdoc#configuration-in-rails] section for more info.\n\n=== Usage Outside of Rails\n\nEverything above applies, except that +--routes+ is not meaningful, and you will\nprobably need to explicitly set one or more +--require+ option(s), and/or one\nor more +--model-dir+ options to inform annotate about the structure of your\nproject and help it bootstrap and load the relevant code.\n\n\n== Configuration\n\nIf you want to always skip annotations on a particular model, add this string\nanywhere in the file:\n\n    # -*- SkipSchemaAnnotations\n\n=== Configuration in Rails\n\nTo generate a configuration file (in the form of a +.rake+ file), to set\ndefault options:\n\n    rails g annotate:install\n\nEdit this file to control things like output format, where annotations are\nadded (top or bottom of file), and in which artifacts.\n\nThe generated rakefile +lib/tasks/auto_annotate_models.rake+ also contains\n`Annotate.load_tasks`. This adds a few rake tasks which duplicate command-line\nfunctionality:\n\n    rake annotate_models                          # Add schema information (as comments) to model and fixture files\n    rake annotate_routes                          # Adds the route map to routes.rb\n    rake remove_annotation                        # Remove schema information from model and fixture files\n\nBy default, once you\'ve generated a configuration file, annotate will be\nexecuted whenever you run <code>rake db:migrate</code> (but only in development mode).\nIf you want to disable this behavior permanently, edit the +.rake+ file and\nchange:\n\n    \'skip_on_db_migrate\'   => \'false\',\n\nTo:\n\n    \'skip_on_db_migrate\'   => \'true\',\n\nIf you want to run <code>rake db:migrate</code> as a one-off without running annotate,\nyou can do so with a simple environment variable, instead of editing the\n+.rake+ file:\n\n    ANNOTATE_SKIP_ON_DB_MIGRATE=1 rake db:migrate\n\n\n== Options\n\n    Usage: annotate [options] [model_file]*\n            --additional_file_patterns   Additional file paths or globs to annotate, separated by commas (e.g. `/foo/bar/%model_name%/*.rb,/baz/%model_name%.rb`)\n        -d, --delete                     Remove annotations from all model files or the routes.rb file\n        -p [before|top|after|bottom],    Place the annotations at the top (before) or the bottom (after) of the model/test/fixture/factory/route/serializer file(s)\n            --position\n            --pc, --position-in-class [before|top|after|bottom]\n                                         Place the annotations at the top (before) or the bottom (after) of the model file\n            --pf, --position-in-factory [before|top|after|bottom]\n                                         Place the annotations at the top (before) or the bottom (after) of any factory files\n            --px, --position-in-fixture [before|top|after|bottom]\n                                         Place the annotations at the top (before) or the bottom (after) of any fixture files\n            --pt, --position-in-test [before|top|after|bottom]\n                                         Place the annotations at the top (before) or the bottom (after) of any test files\n            --pr, --position-in-routes [before|top|after|bottom]\n                                         Place the annotations at the top (before) or the bottom (after) of the routes.rb file\n            --ps, --position-in-serializer [before|top|after|bottom]\n                                         Place the annotations at the top (before) or the bottom (after) of the serializer files\n            --w, --wrapper STR           Wrap annotation with the text passed as parameter.\n                                         If --w option is used, the same text will be used as opening and closing\n            --wo, --wrapper-open STR     Annotation wrapper opening.\n            --wc, --wrapper-close STR    Annotation wrapper closing\n        -r, --routes                     Annotate routes.rb with the output of \'rake routes\'\n            --models                     Annotate ActiveRecord models\n        -a, --active-admin               Annotate active_admin models\n        -v, --version                    Show the current version of this gem\n        -m, --show-migration             Include the migration version number in the annotation\n        -k, --show-foreign-keys          List the table\'s foreign key constraints in the annotation\n            --ck, --complete-foreign-keys\n                                         Complete foreign key names in the annotation\n        -i, --show-indexes               List the table\'s database indexes in the annotation\n        -s, --simple-indexes             Concat the column\'s related indexes in the annotation\n            --model-dir dir              Annotate model files stored in dir rather than app/models, separate multiple dirs with commas\n            --root-dir dir               Annotate files stored within root dir projects, separate multiple dirs with commas\n            --ignore-model-subdirects    Ignore subdirectories of the models directory\n            --sort                       Sort columns alphabetically, rather than in creation order\n            --classified-sort            Sort columns alphabetically, but first goes id, then the rest columns, then the timestamp columns and then the association columns\n        -R, --require path               Additional file to require before loading models, may be used multiple times\n        -e [tests,fixtures,factories,serializers],\n            --exclude                    Do not annotate fixtures, test files, factories, and/or serializers\n        -f [bare|rdoc|markdown],         Render Schema Infomation as plain/RDoc/Markdown\n            --format\n            --force                      Force new annotations even if there are no changes.\n            --frozen                     Do not allow to change annotations. Exits non-zero if there are going to be changes to files.\n            --timestamp                  Include timestamp in (routes) annotation\n            --trace                      If unable to annotate a file, print the full stack trace, not just the exception message.\n        -I, --ignore-columns REGEX       don\'t annotate columns that match a given REGEX (e.g. `annotate -I \'^(id|updated_at|created_at)\'`)\n            --ignore-routes REGEX        don\'t annotate routes that match a given REGEX (e.g. `annotate -I \'(mobile|resque|pghero)\'`)_\n            --hide-limit-column-types VALUES\n                                         don\'t show limit for given column types, separated by commas (e.g. `integer,boolean,text`)\n            --hide-default-column-types VALUES\n                                         don\'t show default for given column types, separated by commas (e.g. `json,jsonb,hstore`)\n            --ignore-unknown-models      don\'t display warnings for bad model files\n            --with-comment               include database comments in model annotations\n\n=== Option: +additional_file_patterns+\n\nCLI: +--additional_file_patterns+<br>\nRuby: +:additional_file_patterns+\n\nProvide additional paths for the gem to annotate.  These paths can include globs.\nIt is recommended to use absolute paths.  Here are some examples:\n\n\n- <code>/app/lib/decorates/%MODEL_NAME%/&ast;.rb</code>\n- <code>/app/lib/forms/%PLURALIZED_MODEL_NAME%/&ast;&ast;/&ast;.rb</code>\n- <code>/app/lib/forms/%TABLE_NAME%/&ast;.rb</code>\n\nThe appropriate model will be inferred using the <code>%*%</code> syntax, annotating any matching files.\nIt works with existing filename resolutions (options for which can be found in the +resolve_filename+ method of\n+annotate_models.rb+).\n\nWhen using in a Rails config, you can use the following:\n\n<code>File.join(Rails.application.root, \'app/lib/forms/%PLURALIZED_MODEL_NAME%/**/*.rb\')</code>\n\n== Sorting\n\nBy default, columns will be sorted in database order (i.e. the order in which\nmigrations were run).\n\nIf you prefer to sort alphabetically so that the results of\nannotation are consistent regardless of what order migrations are executed in,\nuse +--sort+.\n\n\n== Markdown\n\nThe format produced is actually MultiMarkdown, making use of the syntax\nextension for tables.  It\'s recommended you use +kramdown+ as your parser if\nyou want to use this format.  If you\'re using +yard+ to generate documentation,\nspecify a format of markdown with +kramdown+ as the provider by adding this to\nyour +.yardopts+ file:\n\n    --markup markdown\n    --markup-provider kramdown\n\nBe sure to add this to your +Gemfile+ as well:\n\n    gem \'kramdown\', :groups => [:development], :require => false\n\n\n== WARNING\n\n<b>Don\'t add text after an automatically-created comment block.</b> This tool\nwill blow away the initial/final comment block in your models if it looks like\nit was previously added by this gem.\n\nBe sure to check the changes that this tool makes! If you are using Git,\nyou may simply check your project\'s status after running +annotate+:\n\n    $ git status\n\nIf you are not using a VCS (like Git, Subversion or similar), please tread\nextra carefully, and consider using one.\n\n== Links\n\n- Factory Bot: http://github.com/thoughtbot/factory_bot\n- Object Daddy: http://github.com/flogic/object_daddy\n- Machinist: http://github.com/notahat/machinist\n- Fabrication: http://github.com/paulelliott/fabrication\n- SpatialAdapter: http://github.com/pdeffendol/spatial_adapter\n- PostgisAdapter: http://github.com/nofxx/postgis_adapter\n- PostGISAdapter: https://github.com/dazuma/activerecord-postgis-adapter\n\n\n== License\n\nReleased under the same license as Ruby. No Support. No Warranty.\n\n== Authors\n\n{See AUTHORS.rdoc}[link:AUTHORS.rdoc].\n'