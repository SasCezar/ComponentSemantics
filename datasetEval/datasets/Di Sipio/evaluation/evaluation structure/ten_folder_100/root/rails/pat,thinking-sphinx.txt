b'h1. Thinking Sphinx\n\nThinking Sphinx is a library for connecting ActiveRecord to the Sphinx full-text search tool, and integrates closely with Rails (but also works with other Ruby web frameworks). The current release is v4.4.1.\n\nh2. Upgrading\n\nPlease refer to "the changelog":https://github.com/pat/thinking-sphinx/blob/develop/CHANGELOG.markdown and "release notes":https://github.com/pat/thinking-sphinx/releases for any changes you need to make when upgrading. The release notes in particular are quite good at covering breaking changes and more details for new features.\n\nThe documentation also has more details on what\'s involved for upgrading from "v3 to v4":https://freelancing-gods.com/thinking-sphinx/v4/upgrading.html, and "v1/v2 to v3":https://freelancing-gods.com/thinking-sphinx/v3/upgrading.html.\n\nh2. Installation\n\nIt\'s a gem, so install it like you would any other gem. You will also need to specify the mysql2 gem if you\'re using MRI, or jdbc-mysql if you\'re using JRuby:\n\n<pre><code>gem \'mysql2\',          \'~> 0.3\',    :platform => :ruby\ngem \'jdbc-mysql\',      \'~> 5.1.35\', :platform => :jruby\ngem \'thinking-sphinx\', \'~> 4.4\'</code></pre>\n\nThe MySQL gems mentioned are required for connecting to Sphinx, so please include it even when you\'re using PostgreSQL for your database. If you\'re using JRuby with a version of Sphinx prior to 2.2.11, there is "currently an issue with Sphinx and jdbc-mysql 5.1.36 or newer":http://sphinxsearch.com/forum/view.html?id=13939, so you\'ll need to stick to nothing more recent than 5.1.35, or upgrade Sphinx.\n\nYou\'ll also need to install Sphinx - this is covered in "the extended documentation":https://freelancing-gods.com/thinking-sphinx/installing_sphinx.html.\n\nh2. Usage\n\nBegin by reading the "quick-start guide":https://freelancing-gods.com/thinking-sphinx/quickstart.html, and beyond that, "the documentation":https://freelancing-gods.com/thinking-sphinx/ should serve you pretty well.\n\nh2. Requirements\n\nThe current release of Thinking Sphinx works with the following versions of its dependencies:\n\n|_. Library |_. Minimum |_. Tested Against |\n| Ruby | v2.3 | v2.3.8, v2.4.5, v2.5.3, v2.6.1 |\n| Sphinx | v2.1.2 | v2.1.9, v2.2.11, v3.0.3, v3.1.1 |\n| Manticore | v2.6.3 | v2.6.4, v2.7.5, v2.8.1 |\n| ActiveRecord | v3.2 | v3.2..v6.0 |\n\nIt _might_ work with older versions of Ruby, but it\'s highly recommended to update to a supported release.\n\nIt should also work with JRuby, but the test environment on Travis CI has been timing out, hence that\'s not actively tested against at the moment.\n\nh3. Sphinx or Manticore\n\nThinking Sphinx v3 is currently built for Sphinx 2.1.2 or newer, or Manticore v2.6+.\n\nh3. Rails and ActiveRecord\n\nCurrently Thinking Sphinx 3 is built to support Rails/ActiveRecord 3.2 or newer. If you\'re using Sinatra and ActiveRecord instead of Rails, that\'s fine - just make sure you add the @:require => \'thinking_sphinx/sinatra\'@ option when listing @thinking-sphinx@ in your Gemfile.\n\nPlease note that if you\'re referring to polymorphic associations in your index definitions, you\'ll want to be using Rails/ActiveRecord 4.0 or newer. Supporting polymorphic associations and Rails/ActiveRecord 3.2 is problematic, and likely will not be addressed in the future.\n\nIf you want ActiveRecord 3.1 support, then refer to the 3.0.x releases of Thinking Sphinx. Anything older than that, then you\'re stuck with Thinking Sphinx v2.x (for Rails/ActiveRecord 3.0) or v1.x (Rails 2.3). Please note that these older versions are no longer actively supported.\n\nh3. Ruby\n\nYou\'ll need either the standard Ruby (v2.3 or newer) or JRuby (9.1 or newer).\n\nh3. Database Versions\n\nMySQL 5.x and Postgres 8.4 or better are supported.\n\nh2. Contributing\n\nPlease note that this project has a "Contributor Code of Conduct":http://contributor-covenant.org/version/1/0/0/. By participating in this project you agree to abide by its terms.\n\nTo contribute, clone this repository and have a good look through the specs - you\'ll notice the distinction between acceptance tests that actually use Sphinx and go through the full stack, and unit tests (everything else) which use liberal test doubles to ensure they\'re only testing the behaviour of the class in question. I\'ve found this leads to far better code design.\n\nAll development is done on the @develop@ branch; please base any pull requests off of that branch. Please write the tests and then the code to get them passing, and send through a pull request.\n\nIn order to run the tests, you\'ll need to create a database named @thinking_sphinx@:\n\n<pre><code># Either fire up a MySQL console:\nmysql -u root\n# OR a PostgreSQL console:\npsql\n# In that console, create the database:\nCREATE DATABASE thinking_sphinx;</code></pre>\n\nYou can then run the unit tests with @rake spec:unit@, the acceptance tests with @rake spec:acceptance@, or all of the tests with just @rake@. To run these with PostgreSQL, you\'ll need to set the @DATABASE@ environment variable accordingly:\n\n<pre><code>DATABASE=postgresql rake</code></pre>\n\nh2. Licence\n\nCopyright (c) 2007-2019, Thinking Sphinx is developed and maintained by Pat Allan, and is released under the open MIT Licence. Many thanks to "all who have contributed patches":https://github.com/pat/thinking-sphinx/contributors.\n'