b'= Serve - Delicious ERB, Haml, and Sass\n\nhttp://raw.github.com/jlong/serve/master/artwork/logo-hifi-3.png\n\nServe is a small Rack-based web server that makes it easy to serve HTML, ERB,\nHaml, or a variety of template languages from any directory.\n\nServe is meant to be a lightweight version of the Views part of the Rails MVC.\nThis makes Serve an ideal framework for prototyping Rails applications or\ncreating simple websites. Serve has full support for Rails-style partials\nand layouts.\n\nServe is made with Rack & Tilt.\n\n\n== Installation\n\nServe is distributed as a Ruby gem and can be installed from the command\nprompt. Just type:\n\n  gem install serve -v 1.5.2\n\nSome systems, like the Mac, may require that you type:\n\n  sudo gem install serve -v 1.5.2\n\nIf you are new to the command prompt and are a Mac user see:\n\nhttp://wiseheartdesign.com/articles/2010/11/12/the-designers-guide-to-the-osx-command-prompt/\n\nSearch Google for "command prompt windows" if you are on a PC to find a simple\ntutorial.\n\n\n== Basic Usage\n\nOnce the gem is installed the `serve` command will be available from the\ncommand prompt. To launch Serve, just type the command and press enter:\n\n  serve\n\nThis will launch a simple web server which you can access from any web browser\nat the following address:\n\n  http://localhost:4000\n\nOnce the server is going it will output a running log of its activity. To\nstop the server at any time, type CTRL+C at the command prompt.\n\nLearn more: http://get-serve.com/documentation/usage\n\n\n== Creating a Structured Serve Project\n\nFor simple projects, you don\'t need to structure your files in a specific\nway. All ERB, Haml, and Sass files will be processed wherever they are found\nin the project root. But for more complex projects you may want add a bit of structure.\n\nTo create a structured Serve project in the "project" directory, type the\nfollowing on the command line:\n\n  serve create project   # create a new project in the project directory\n\nLearn more: http://get-serve.com/documentation/create\n\n\n== Layouts & Partials\n\nServe has full support for Rails-style layouts and partials.\n\nServe layouts are stored in "_layout.erb" or "_layout.haml" files in the same directory as the page they are rendering.\n\nLearn more: http://get-serve.com/documentation/layouts\n\nServe partials (much like PHP includes) are rendered using the familiar render syntax:\n\n  <%= render "footer" %>\n\nLearn more: http://get-serve.com/documentation/partials\n\n\n== View Helpers\n\nIf you drop a file called "view_helpers.rb" in your views directory, you can\ndefine custom helpers for your Haml and ERB views. Just create a ViewHelpers\nmodule and define your custom helper methods there:\n\n  module ViewHelpers\n    \n    # Calculate the years for a copyright\n    def copyright_years(start_year)\n      end_year = Date.today.year\n      if start_year == end_year\n        start_year\n      else\n        start_year.to_s + "&#8211;" + end_year.to_s\n      end\n    end\n    \n  end\n\nYou can then use your custom helper methods inside a view or layout:\n\n  <%= copyright_years(2010) %>\n\nServe also provides a number of stock helpers methods that are very similar to their Rails counter parts.\n\nLearn more: http://get-serve.com/documentation/view-helpers\n\n\n== Exporting\n\nTo export your project, use the new "export" command:\n\n  serve export project output\n\nWhere "project" is the path to the project and "output" is the path to the\ndirectory where you would like your HTML and CSS generated.\n\nLearn more: http://get-serve.com/documentation/export\n\n== "Design First" Prototyping\n\nIf you use a "Design First" methodology, you may find Serve especially useful\nfor prototyping your applications. Create a separate "prototype" project for\nyour application (using Serve) and copy views over into actual application\nwhen they are ready to go. This workflow allows the designer to focus on\npresentation and flow, while the developer can focuses on implementation. One\nbenefit to this approach is that the designer can identify and fix a large\nnumber of design-related problems before a feature is ever touched by the\ndeveloper. Once a feature has been completed in the prototype project it can\nalso be estimated with a high degree of accuracy.\n\n\n== Website & Documentation\n\nDetailed documentation is available on the Serve website: http://get-serve.com\nBuild status: {<img src="https://secure.travis-ci.org/jlong/serve.png?branch=master" />}[http://travis-ci.org/jlong/serve]\n\n\n== Mailing List\n\nHave questions? Please don\'t be ashamed to ask. Post them on the mailing list:\n\nhttp://groups.google.com/group/serve-users\n\n== Coming up\n\n- We are working on a new website for serve, with a new minimal design, estimated to be released in late Augest 2015.\n\n== License\n\nServe is released under a MIT-style license and is copyright (c) 2007-2011\nJohn W. Long and Adam I. Williams. Portions have been contributed by Robert\nEvans and others. A copy of the license can be found in the LICENSE file.\n'