b'# will_paginate\n\nwill_paginate is a pagination library that integrates with Ruby on Rails, Sinatra, Hanami::View, Merb, DataMapper and Sequel.\n\nInstallation:\n\n``` ruby\n## Gemfile for Rails 3+, Sinatra, and Merb\ngem \'will_paginate\', \'~> 3.1.0\'\n```\n\nSee [installation instructions][install] on the wiki for more info.\n\n\n## Basic will_paginate use\n\n``` ruby\n## perform a paginated query:\n@posts = Post.paginate(page: params[:page])\n\n# or, use an explicit "per page" limit:\nPost.paginate(page: params[:page], per_page: 30)\n\n## render page links in the view:\n<%= will_paginate @posts %>\n```\n\nAnd that\'s it! You\'re done. You just need to add some CSS styles to [make those pagination links prettier][css].\n\nYou can customize the default "per_page" value:\n\n``` ruby\n# for the Post model\nclass Post\n  self.per_page = 10\nend\n\n# set per_page globally\nWillPaginate.per_page = 10\n```\n\nNew in Active Record 3:\n\n``` ruby\n# paginate in Active Record now returns a Relation\nPost.where(:published => true).paginate(:page => params[:page]).order(\'id DESC\')\n\n# the new, shorter page() method\nPost.page(params[:page]).order(\'created_at DESC\')\n```\n\nSee [the wiki][wiki] for more documentation. [Report bugs][issues] on GitHub.\n\nHappy paginating.\n\n\n[wiki]: https://github.com/mislav/will_paginate/wiki\n[install]: https://github.com/mislav/will_paginate/wiki/Installation "will_paginate installation"\n[issues]: https://github.com/mislav/will_paginate/issues\n[css]: http://mislav.github.io/will_paginate/\n'