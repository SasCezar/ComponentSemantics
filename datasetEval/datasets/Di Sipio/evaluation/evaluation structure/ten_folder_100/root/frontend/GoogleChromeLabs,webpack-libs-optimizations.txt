b'# Optimize your libraries with webpack\n\nUsing a library in your webpack project? Use these tips to make your bundle smaller!\n\nWant to add a tip? See [the contribution guide](/CONTRIBUTING.md) and make a pull request!\n\n<img src="https://i.imgur.com/tjFWoUj.png" width="600" />\n\nContents:\n\n* [`async`](#async)\n* [`async-es`](#async-es)\n* [`babel-polyfill`](#babel-polyfill)\n* [`core-js`](#core-js)\n* [`date-fns`](#date-fns)\n* [`lodash`](#lodash)\n* [`lodash-es`](#lodash-es)\n* [`moment`](#moment)\n* [`react`](#react)\n* [`reactstrap`](#reactstrap)\n* [`react-bootstrap`](#react-bootstrap)\n* [`react-router`](#react-router)\n* [`styled-components`](#styled-components)\n* [`whatwg-fetch`](#whatwg-fetch)\n* [Solutions that work with multiple libraries](#solutions-that-work-with-multiple-libraries)\n\n## async\n\n`async` is a collection of utilities for working with async functions. [npm package](https://www.npmjs.com/package/async)\n\nGenerally, you should use [the `async-es` package \xe2\xa4\xb5](#async-es) instead. It ships with ES modules and is more optimized for bundling with webpack.\n\nStill, even if prefer to use `async`, for the list of optimizations, see [the `async-es` section \xe2\xa4\xb5](#async-es).\n\n## async-es\n\n`async-es` is a collection of utilities for working with async functions. It\xe2\x80\x99s the same package as [`async` \xe2\xa4\xb4](#async), but it\xe2\x80\x99s more optimized for bundling with webpack. [npm package](https://www.npmjs.com/package/async-es)\n\n### Remove unused methods with `babel-plugin-lodash`\n\n> \xe2\x9c\x85 Safe to use by default / How to enable is \xe2\x86\x93 / Added by [@iamakulov](https://twitter.com/iamakulov)\n\nIf you use `async-es` as a single import, you\xe2\x80\x99re bundling the whole library into the application \xe2\x80\x93 even if you only use a couple of its methods:\n\n```js\n// You only use `async.map`, but the whole library gets bundled\nimport async from \'async-es\';\n\nasync.map([\'file1\', \'file2\', \'file3\'], fs.stat, function(err, results) {\n  console.log(results);\n});\n```\n\nUse [`babel-plugin-lodash`](https://github.com/lodash/babel-plugin-lodash) to pick only those `async-es` methods you need:\n\n```js\n// Before Babel is applied\nimport async from \'async-es\';\n\nasync.map([\'file1\', \'file2\', \'file3\'], fs.stat, function(err, results) {\n  console.log(results);\n});\n\n\xe2\x86\x93\n\n// After Babel is applied\nimport _map from \'async-es/map\';\n\n_map([\'file1\', \'file2\', \'file3\'], fs.stat, function(err, results) {\n  console.log(results);\n});\n```\n\nEnable this plugin as follows:\n\n```json\n// .babelrc\n{\n  "plugins": [["lodash", { "id": ["async-es"] }]],\n}\n```\n\n## babel-polyfill\n\n`babel-polyfill` is a Babel\xe2\x80\x99s package that loads `core-js` and a custom regenerator runtime. [Babel docs](https://babeljs.io/docs/usage/polyfill/) \xc2\xb7 [npm package](https://www.npmjs.com/package/babel-polyfill)\n\nFor the list of optimizations, see [the `core-js` section \xe2\xa4\xb5](#core-js).\n\n## core-js\n\n`core-js` is a set of polyfills for ES5 and ES2015+. [npm package](https://www.npmjs.com/package/core-js)\n\n### Remove unnecessary polyfills with `babel-preset-env`\n\n> \xe2\x9c\x85 Safe to use by default / [How to enable](https://babeljs.io/docs/plugins/preset-env/#usebuiltins) / Added by [@iamakulov](https://twitter.com/iamakulov)\n\nIf you compile your code with Babel and `babel-preset-env`, add [the `useBuiltIns: true` option](https://babeljs.io/docs/plugins/preset-env/#usebuiltins). This option configures Babel to only include polyfills that are necessary for target browsers. I.e., if you target your app to support Internet Explorer 11:\n\n```json\n// .babelrc\n{\n  "presets": [\n    [\n      "env",\n      {\n        "targets": {\n          "browsers": ["last 2 versions", "ie >= 11"]\n        }\n      }\n    ]\n  ]\n}\n```\n\nenabling `useBuiltIns: true` will remove polyfills for all features that Internet Explorer 11 already supports (such as `Object.create`, `Object.keys` and so on).\n\n### Ship non-transpiled code to modern browsers\n\n> \xe2\x9c\x85 Safe to use by default / [How to enable](https://philipwalton.com/articles/deploying-es2015-code-in-production-today/) / Added by [@iamakulov](https://twitter.com/iamakulov)\n\nAll browsers that support `<script type="module">` also support modern JS features like `async`/`await`, arrow functions and classes. Use this feature to build two versions of the bundle and make modern browsers load only the modern code. For the guide, see [the Philip Walton\xe2\x80\x99s article](https://philipwalton.com/articles/deploying-es2015-code-in-production-today/).\n\n## date-fns\n\ndate-fns is a date utility library. [npm package](https://www.npmjs.com/package/date-fns)\n\n### Enable `babel-plugin-date-fns`\n\n> \xe2\x9c\x85 Safe to use by default / [How to enable](https://github.com/date-fns/babel-plugin-date-fns) / Added by [@chentsulin](https://twitter.com/chentsulin)\n\n[`babel-plugin-date-fns`](https://github.com/date-fns/babel-plugin-date-fns) replaces full imports of date-fns with imports of specific date-fns functions:\n\n```js\nimport { format } from \'date-fns\';\nformat(new Date(2014, 1, 11), \'MM/DD/YYYY\');\n```\n\n\xe2\x86\x93\n\n```js\nimport _format from \'date-fns/format\';\n_format(new Date(2014, 1, 11), \'MM/DD/YYYY\');\n```\n\n## lodash\n\nLodash is an utility library. [npm package](https://www.npmjs.com/package/lodash)\n\n### Enable `babel-plugin-lodash`\n\n> \xe2\x9c\x85 Safe to use by default / [How to enable](https://github.com/lodash/babel-plugin-lodash) / Added by [@iamakulov](https://twitter.com/iamakulov)\n\n[`babel-plugin-lodash`](https://github.com/lodash/babel-plugin-lodash) replaces full imports of Lodash with imports of specific Lodash functions:\n\n```js\nimport _ from \'lodash\';\n_.map([1, 2, 3], i => i + 1);\n```\n\n\xe2\x86\x93\n\n```js\nimport _map from \'lodash/map\';\n_map([1, 2, 3], i => i + 1);\n```\n\nNote: the plugin doesn\xe2\x80\x99t work with chain sequences \xe2\x80\x93 i.e. code like\n\n```js\n_([1, 2, 3]).map(i => i + 1).value();\n```\n\nwon\xe2\x80\x99t be optimized.\n\n### Alias `lodash-es` to `lodash`\n\n> \xe2\x9c\x85 Safe to use by default / How to enable is \xe2\x86\x93 / Added by [@7rulnik](https://twitter.com/7rulnik)\n\nSome of your dependencies might use [the `lodash-es` package](https://www.npmjs.com/package/lodash-es) instead of `lodash`. If that\xe2\x80\x99s the case, Lodash will be bundled twice.\n\nTo avoid this, alias the `lodash-es` package to `lodash`:\n\n```js\n// webpack.config.js\nmodule.exports = {\n  resolve: {\n    alias: {\n      \'lodash-es\': \'lodash\',\n    },\n  },\n};\n```\n\n### Enable `lodash-webpack-plugin`\n\n> \xe2\x9a\xa0 Use with caution / [How to enable](https://github.com/lodash/lodash-webpack-plugin) / Added by [@iamakulov](https://twitter.com/iamakulov)\n\n[`lodash-webpack-plugin`](https://github.com/lodash/lodash-webpack-plugin) strips parts of Lodash functionality that you don\xe2\x80\x99t need. For example, if you use `_.get()` but don\xe2\x80\x99t need deep path support, this plugin can remove it. Add it to your webpack config to make the bundle smaller.\n\n**Use the plugin with caution.** The default settings remove a lot of features, and your app might use some of them.\n\n## lodash-es\n\n`lodash-es` is Lodash with ES imports and exports. [npm package](https://www.npmjs.com/package/lodash-es)\n\nFor the list of optimizations, see [the `lodash` section \xe2\xa4\xb4](#lodash).\n\n## moment\n\nMoment.js is a library for working with dates. [npm package](https://www.npmjs.com/package/moment)\n\n### Remove unused locales with `moment-locales-webpack-plugin`\n\n> \xe2\x9a\xa0 Use with caution / [How to enable](https://github.com/iamakulov/moment-locales-webpack-plugin) / Added by [@iamakulov](https://twitter.com/iamakulov)\n\nBy default, Moment.js ships with 160+ minified KBs of localization files. If you app is only available in a few languages, you won\xe2\x80\x99t need all these files. Use [`moment-locales-webpack-plugin`](https://github.com/iamakulov/moment-locales-webpack-plugin) to remove the unused ones.\n\n**Use the plugin with caution.** The default settings remove all locales; this might break your app if you use some of them.\n\n## react\n\nReact is a library for building user interfaces. [npm package](https://www.npmjs.com/package/react)\n\n### Remove `propTypes` declarations in production\n\n> \xe2\x9c\x85 Safe to use by default / [How to enable](https://www.npmjs.com/package/babel-plugin-transform-react-remove-prop-types) / Added by [@iamakulov](https://twitter.com/iamakulov)\n\nReact doesn\xe2\x80\x99t perform `propTypes` checks in production, but the `propTypes` declarations still occupy a part of the bundle. Use [`babel-plugin-transform-react-remove-prop-types`](https://www.npmjs.com/package/babel-plugin-transform-react-remove-prop-types) to remove them from during building.\n\n### Migrate to an alternative React-like Library\n\n> \xe2\x9a\xa0 Use with caution / Added by [@iamakulov](https://twitter.com/iamakulov) & [@kurtextrem](https://twitter.com/kurtextrem)\n\nThere are alternatives to React with a similar API that have a smaller size or a higher performance, but lack some features (e.g., fragments, portals, or synthetic events).\n\n- [Preact](https://github.com/developit/preact) | The smallest React alternative (`preact@8.3.1` + `preact-compat@3.18.3` is 7.6 kB gzipped; `react@16.4.0` + `react-dom@16.4.0` is 31.4 kB gzipped) | No synthetic events | IE8 supported with polyfills\n\n- [Nerv](https://github.com/NervJS/nerv) | Smaller than React, larger than Preact (`nervjs@1.3.3` is 9.8 kB gzipped, compat is not neede; `react@16.4.0` + `react-dom@16.4.0` is 31.4 kB gzipped) | The goal of Nerv is to have 100% the same API (without Fiber and Suspense), see [NervJS/nerv#10](https://github.com/NervJS/nerv/issues/10#issuecomment-356913486) for details | IE8 supported\n\n- [Inferno](https://github.com/infernojs/inferno) | Smaller than React, larger than Preact and Nerv (`inferno@5.4.2` + `inferno-compat@5.4.2` is 11.3 kB gzipped; `react@16.4.0` + `react-dom@16.4.0` is 31.4 kB gzipped) | Higher runtime performance than React, the highest performance among all React alternatives, [manual optimization possibilities offered](https://infernojs.org/docs/guides/optimizations) | Partial synthetic events | IE8 unsupported natively\n\n**Migrate to alternatives with caution.** Some of the alternatives don\xe2\x80\x99t have synthetic events or are lacking some React 16 features ([Preact issue](https://github.com/developit/preact-compat/issues/432), [Inferno issue](https://github.com/infernojs/inferno/issues/501), [Nerv issue](https://github.com/NervJS/nerv/issues/5)). However, many projects still can be migrated without any codebase changes. See the migration guides: [Preact](https://preactjs.com/guide/switching-to-preact), [Inferno](https://infernojs.org/docs/guides/switching-to-inferno), [Nerv](https://github.com/NervJS/nerv#switching-to-nerv-from-react).\n\n## reactstrap\n\nReactstrap is a Bootstrap 4 library for React. [npm package](https://www.npmjs.com/package/reactstrap)\n\n### Remove unused modules with `babel-plugin-transform-imports`\n\n> \xe2\x9c\x85 Safe to use by default / How to enable is \xe2\x86\x93 / Added by [@kurtextrem](https://twitter.com/kurtextrem)\n\nWhen you import a module from Reactstrap:\n\n```js\nimport { Alert } from \'reactstrap\';\n```\n\nother Reactstrap modules also get bundled into the app and make it larger.\n\nUse [`babel-plugin-transform-imports`](https://www.npmjs.com/package/babel-plugin-transform-imports) to strip unused modules:\n\n```json\n// .babelrc\n{\n  "plugins": [\n    ["transform-imports", {\n      "reactstrap": {\n        "transform": "reactstrap/lib/${member}",\n        "preventFullImport": true\n      }\n    }]\n  ]\n}\n```\n\nTo see how it works, check [the `babel-plugin-transform-imports` section \xe2\xa4\xb5\xef\xb8\x8f](#babel-plugin-transform-imports).\n\n## react-bootstrap\n\n`react-bootstrap` is a Bootstrap 3 library for React. [npm package](https://www.npmjs.com/package/react-bootstrap)\n\n### Remove unused modules with `babel-plugin-transform-imports`\n\n> \xe2\x9c\x85 Safe to use by default / How to enable is \xe2\x86\x93 / Added by [@kurtextrem](https://twitter.com/kurtextrem)\n\nWhen you import a module from `react-bootstrap`:\n\n```js\nimport { Alert } from \'react-bootstrap\';\n```\n\nother `react-bootstrap` modules also get bundled into the app and make it larger.\n\nUse [`babel-plugin-transform-imports`](https://www.npmjs.com/package/babel-plugin-transform-imports) to strip unused modules:\n\n```json\n// .babelrc\n{\n  "plugins": [\n    ["transform-imports", {\n      "react-bootstrap": {\n        "transform": "react-bootstrap/es/${member}",\n        "preventFullImport": true\n      }\n    }]\n  ]\n}\n```\n\nTo see how it works, check [the `babel-plugin-transform-imports` section \xe2\xa4\xb5\xef\xb8\x8f](#babel-plugin-transform-imports).\n\n## react-router\n\nReact Router is a popular router solution for React. [npm package](https://www.npmjs.com/package/react-router)\n\n### Remove unused modules with `babel-plugin-transform-imports`\n\n> \xe2\x9c\x85 Safe to use by default / How to enable is \xe2\x86\x93 / Added by [@kurtextrem](https://twitter.com/kurtextrem)\n\nWhen you import a module from React Router:\n\n```js\nimport { withRouter } from \'react-router\';\n```\n\nother React Router modules also get bundled into the app and make it larger.\n\nUse [`babel-plugin-transform-imports`](https://www.npmjs.com/package/babel-plugin-transform-imports) to strip unused modules:\n\n```json\n// .babelrc\n{\n  "plugins": [\n    ["transform-imports", {\n      "react-router": {\n        "transform": "react-router/${member}",\n        "preventFullImport": true\n      }\n    }]\n  ]\n}\n```\n\n(This was tested with React Router v4.)\n\nTo see how it works, check [the `babel-plugin-transform-imports` section \xe2\xa4\xb5\xef\xb8\x8f](#babel-plugin-transform-imports).\n\n## styled-components\n\n`styled-components` is a CSS-in-JS library. [npm package](https://www.npmjs.com/package/styled-components)\n\n### Minify the code with `babel-plugin-styled-components`\n\n> \xe2\x9c\x85 Safe to use by default / [How to enable](https://github.com/styled-components/babel-plugin-styled-components) / Added by [@iamakulov](https://twitter.com/iamakulov)\n\nThere\xe2\x80\x99s [`babel-plugin-styled-components`](https://github.com/styled-components/babel-plugin-styled-components) that minifies the CSS code you write with `styled-components`. See [the minification docs](https://www.styled-components.com/docs/tooling#minification).\n\n## whatwg-fetch\n\n`whatwg-fetch` is a complete `window.fetch()` polyfill. [npm package](https://www.npmjs.com/package/whatwg-fetch)\n\n### Replace with `unfetch`\n\n> \xe2\x9a\xa0 Use with caution / How to migrate is \xe2\x86\x93 / Added by [@iamakulov](https://twitter.com/iamakulov)\n\n[`unfetch`](https://github.com/developit/unfetch) is a 500 bytes polyfill for `window.fetch()`. Unlike `whatwg-fetch`, it doesn\xe2\x80\x99t support the full `window.fetch()` API, but instead focuses on polyfilling the most used parts.\n\n**Migrate to `unfetch` with caution.** While it supports the most popular API parts, your app might break if it relies on something less common.\n\n## Solutions that work with multiple libraries\n\nOf course, there are also optimization tips for other libraries too. You can use them with common sense to get smaller or more performant bundles.\n\n### `babel-plugin-transform-imports`\n\n> \xe2\x9c\x85 Safe to use by default / [How to enable](https://www.npmjs.com/package/babel-plugin-transform-imports) / Added by [@kurtextrem](https://twitter.com/kurtextrem) / More Insight about this on [Twitter](https://twitter.com/iamakulov/status/962991382213398529)\n\nThis handy babel plugin will transform your imports to only import specific components, which ensures not the whole library gets included (if tree-shaking is ineffective for the specific library).\n```js\n// Before\nimport { Grid, Row, Col } from \'react-bootstrap\';\n// After\nimport Grid from \'react-bootstrap/lib/Grid\';\nimport Row from \'react-bootstrap/lib/Row\';\nimport Col from \'react-bootstrap/lib/Col\';\n```\n\n# License\n\nCopyright 2018 Google Inc. All Rights Reserved. Licensed under [the Apache License, Version 2.0](/LICENSE).\n'