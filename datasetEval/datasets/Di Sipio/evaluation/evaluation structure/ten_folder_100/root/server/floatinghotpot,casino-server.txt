b'# casino-server #\n\n[![npm version](https://badge.fury.io/js/casino-server.svg)](http://badge.fury.io/js/casino-server)\n\n[![Build Status](https://travis-ci.org/floatinghotpot/casino-server.svg)](https://travis-ci.org/floatinghotpot/casino-server)\n\n[![NPM](https://nodei.co/npm-dl/casino-server.png?height=3)](https://nodei.co/npm/casino-server/)\n\nAn online poker game server powered by redis, node.js and socket.io\n\n![A](https://github.com/floatinghotpot/casino-server/raw/master/wwwsrc/img/4_14.png) ![A](https://github.com/floatinghotpot/casino-server/raw/master/wwwsrc/img/3_14.png)\n![A](https://github.com/floatinghotpot/casino-server/raw/master/wwwsrc/img/2_14.png)\n  \nGame rules supported:\n- [x] Chat Room (\xe8\x81\x8a\xe5\xa4\xa9\xe5\xae\xa4)\n- [x] Jinhua (\xe8\xaf\x88\xe9\x87\x91\xe8\x8a\xb1/\xe4\xb8\x89\xe5\xbc\xa0\xe7\x89\x8c)\n- [x] Texas Holdem (\xe5\xbe\xb7\xe5\xb7\x9e\xe6\x89\x91\xe5\x85\x8b)\n- [ ] Fight Landlord (\xe6\x96\x97\xe5\x9c\xb0\xe4\xb8\xbb)\n- [ ] Blackjack (21\xe7\x82\xb9)\n\nFeatures: \n- [x] Cross-platform: powered by node.js, easy to deploy on various platforms.\n- [x] Scalable: using Redis as message bus and data storage.\n- [x] Open architecture: with Redis as the message bus, easy to interact and extend.\n- [x] Cluster: using PM2, sticky session, and socket.io-redis.\n- [x] WebSocket protocol: come with javascript client API and web-based demo. \n- [x] Event logger for server events and user actions.\n\nTODO List:\n- [ ] Client API for Unity3D (C#, support mono/.NET2.0)\n- [ ] Payment gateway callback URL.\n- [ ] Admin Portal.\n- [ ] Load balancing: using NginX, or auto handled if deployed to Amazon Cloud.\n\n# Architecture #\n\n![Architecture](https://github.com/floatinghotpot/casino-server/raw/master/docs/architecture.png)\n\n## Required ##\n\n* Redis\n\nRedis is an open source, BSD licensed, advanced key-value cache and store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets, sorted sets, bitmaps and hyperloglogs.\n\n[Download](http://redis.io/download)\n\n* node.js / npm\n\nNode.js is a platform built on Chrome\'s JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.\n\n[Download](http://nodejs.org/download)\n\n* PM2 (production & cluster)\n\nPM2 is a production process manager for Node.js applications with a built-in load balancer. It allows you to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks.\n\n[Read More](https://github.com/Unitech/pm2)\n\n# Installation #\n\n* Installing globally and run as service with PM2: \n\n```bash\n[sudo] npm install pm2 -g\n[sudo] npm install casino-server -g\n\n# run redis-server first\nredis-server &\n\n# run as service and cluster mode\npm2 start `which casino-server` -i 0\n```\n\n* Installing as a node app, and run in current folder:\n\n```bash\ngit clone https://github.com/floatinghotpot/casino-server.git casino\ncd casino\nnpm install\n# sudo npm install -g gulp\n# gulp build\nnode bin/casino-server [options]\n```\n\nNow you can visit http://localhost:7000, it\'s a web-based game client for testing and demo purpose.\n\n```bash\n# open a browser to access the test web page\nopen http://localhost:7000/\n```\n\n# Available Options: #\n\n-p Port to use (defaults to 7000)\n\n-h Host address to use (defaults to 0.0.0.0)\n\n-r Address of Redis server (defaults to 127.0.0.1:6379)\n\n# Tools #\n\nWith Redis as the message bus, it\'s very easy for tools to work with the open architecture.\n\n## Event Logger ##\n\nStart the event logger to monitor the events:\n\n```bash\nbin/logger.js\n```\n\nOr, log the events into log file:\n\n```bash\nbin/logger.js -o ./tmp/casino.log\n```\n# See Also\n\n* [socket.io for Unity3D](https://github.com/floatinghotpot/socket.io-unity), is a socket.io client library for Unity3D. You can develop casino games with Unity3D, and using this library to connect to this casino server.\n\n# Credits #\n\nThis poker game server is created by Raymond Xie, published under MIT license.\n\nIt can be used for FREE, but be aware that:\n\n* It is provided as it is. (Not a mature commercial product, may be incomplete, or even lots of bugs)\n* We will mainly focus on our own needs. \n* You can propose wish for new features, but don\'t rely on us to implement them. Instead of waiting for new features, welcome join us to implement them.\n* You need take your own risk, including that you need find answers from reading code instead of easily asking only. :P\n\nIf you are interested in this project, you can contribute in any of following aspects:\n\n* Simply "Star" it.\n* Use it or test it, report bugs or even send pull request of patches.\n* Add better HTML5 demo client.\n* Add new poker game rules.\n* Add client APIs in other languages (like C# for Unity, Java, Objective-C, C/C++, etc.)\n* Help us write documentation, if your English is good.\n\n'