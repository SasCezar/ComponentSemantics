b'<h1 align="center"><img src="./docs/images/banner_hydra.png" alt="ORY Hydra - Open Source OAuth 2 and OpenID Connect server"></h1>\n\n<h4 align="center">\n    <a href="https://discord.gg/PAMQWkr">Chat</a> |\n    <a href="https://community.ory.am/">Forums</a> |\n    <a href="http://eepurl.com/di390P">Newsletter</a><br/><br/>\n    <a href="https://www.ory.sh/docs/next/hydra/">Guide</a> |\n    <a href="https://www.ory.sh/docs/next/hydra/sdk/api">API Docs</a> |\n    <a href="https://godoc.org/github.com/ory/hydra">Code Docs</a><br/><br/>\n    <a href="https://opencollective.com/ory">Support this project!</a>\n</h4>\n\n---\n\n<p align="left">\n    <a href="https://circleci.com/gh/ory/hydra/tree/master"><img src="https://circleci.com/gh/ory/hydra/tree/master.svg?style=shield" alt="Build Status"></a>\n    <a href="https://coveralls.io/github/ory/hydra?branch=master"> <img src="https://coveralls.io/repos/ory/hydra/badge.svg?branch=master&service=github" alt="Coverage Status"></a>\n    <a href="https://goreportcard.com/report/github.com/ory/hydra"><img src="https://goreportcard.com/badge/github.com/ory/hydra" alt="Go Report Card"></a>\n    <a href="https://bestpractices.coreinfrastructure.org/projects/364"><img src="https://bestpractices.coreinfrastructure.org/projects/364/badge" alt="CII Best Practices"></a>\n    <a href="#backers" alt="sponsors on Open Collective"><img src="https://opencollective.com/ory/backers/badge.svg" /></a> <a href="#sponsors" alt="Sponsors on Open Collective"><img src="https://opencollective.com/ory/sponsors/badge.svg" /></a>\n</p>\n\nORY Hydra is a hardened, **OpenID Certified OAuth 2.0 Server and OpenID Connect Provider** optimized for low-latency, high throughput,\nand low resource consumption. ORY Hydra *is not* an identity provider (user sign up, user login, password reset flow),\nbut connects to your existing identity provider through a [login and consent app](https://www.ory.sh/docs/next/hydra/oauth2#authenticating-users-and-requesting-consent).\nImplementing the login and consent app in a different language is easy, and exemplary consent apps\n([Go](https://github.com/ory/hydra-consent-app-go), [Node](https://github.com/ory/hydra-consent-app-express)) and\n[SDKs](https://www.ory.sh/docs/next/hydra/sdk/) are provided.\n\nIf you\'re looking to jump straight into it, go ahead:\n\n- **[Run your own OAuth 2.0 Server - step by step guide](https://www.ory.sh/run-oauth2-server-open-source-api-security/)**: A in-depth look at setting up ORY Hydra and performing a variety of OAuth 2.0 Flows.\n- [ORY Hydra 5 Minute Tutorial](https://www.ory.sh/docs/hydra/5min-tutorial): Set up and use ORY Hydra using Docker Compose in under 5 Minutes. Good for quickly hacking a Proof of Concept.\n- [Install and Set Up ORY Hydra](https://www.ory.sh/docs/hydra/configure-deploy): An advanced look at installation options and interaction with ORY Hydra.\n- [Integrating your Login and Consent UI with ORY Hydra](https://www.ory.sh/docs/hydra/oauth2): The go-to place if you wish to adopt ORY Hydra in your new or existing stack.\n\nBesides mitigating various attack vectors, such as database compromisation and OAuth 2.0 weaknesses, ORY Hydra is also\nable to securely manage JSON Web Keys.\n[Click here](https://www.ory.sh/docs/next/hydra/security-architecture) to read more about security.\n\n---\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON\'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**\n\n- [What is ORY Hydra?](#what-is-ory-hydra)\n  - [Who\'s using it?](#whos-using-it)\n  - [OAuth2 and OpenID Connect: Open Standards!](#oauth2-and-openid-connect-open-standards)\n  - [OpenID Connect Certified](#openid-connect-certified)\n- [Quickstart](#quickstart)\n  - [5 minutes tutorial: Run your very own OAuth2 environment](#5-minutes-tutorial-run-your-very-own-oauth2-environment)\n  - [Installation](#installation)\n- [Ecosystem](#ecosystem)\n  - [ORY Security Console: Administrative User Interface](#ory-security-console-administrative-user-interface)\n  - [ORY Oathkeeper: Identity & Access Proxy](#ory-oathkeeper-identity--access-proxy)\n  - [ORY Keto: Access Control Policies as a Server](#ory-keto-access-control-policies-as-a-server)\n  - [Examples](#examples)\n- [Security](#security)\n  - [Disclosing vulnerabilities](#disclosing-vulnerabilities)\n- [Benchmarks](#benchmarks)\n- [Telemetry](#telemetry)\n- [Documentation](#documentation)\n  - [Guide](#guide)\n  - [HTTP API documentation](#http-api-documentation)\n  - [Upgrading and Changelog](#upgrading-and-changelog)\n  - [Command line documentation](#command-line-documentation)\n  - [Develop](#develop)\n- [Libraries and third-party projects](#libraries-and-third-party-projects)\n- [Blog posts & articles](#blog-posts--articles)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## What is ORY Hydra?\n\nORY Hydra is a server implementation of the OAuth 2.0 authorization framework and the OpenID Connect Core 1.0. Existing OAuth2\nimplementations usually ship as libraries or SDKs such as [node-oauth2-server](https://github.com/oauthjs/node-oauth2-server)\nor [fosite](https://github.com/ory/fosite/issues), or as fully featured identity solutions with user\nmanagement and user interfaces, such as [Dex](https://github.com/coreos/dex).\n\nImplementing and using OAuth2 without understanding the whole specification is challenging and prone to errors, even when\nSDKs are being used. The primary goal of ORY Hydra is to make OAuth 2.0 and OpenID Connect 1.0 better accessible.\n\nORY Hydra implements the flows described in OAuth2 and OpenID Connect 1.0 without forcing you to use a "Hydra User Management"\nor some template engine or a predefined front-end. Instead it relies on HTTP redirection and cryptographic methods\nto verify user consent allowing you to use ORY Hydra with any authentication endpoint, be it [authboss](https://github.com/go-authboss/authboss), [User Frosting](https://www.userfrosting.com/) or your proprietary Java authentication.\n\n### Who\'s using it?\n\n<!--BEGIN ADOPTERS-->\nThe ORY community stands on the shoulders of individuals, companies, and maintainers. We thank everyone involved - from\nsubmitting bug reports and feature requests to contributing patches to sponsoring our work. Our community is\n1000+ strong and growing rapidly. The ORY stack protects 1.200.000.000+ API requests every month with over\n15.000+ active service nodes. Our small but expert team would have never been able to achieve this without each and\nevery one of you.\n\nThe following list represents companies that have accompanied us along the way and that have made outstanding contributions\nto our ecosystem. *If you think that your company deserves a spot here, reach out to <a href="mailto:hi@ory.sh">hi@ory.sh</a> now*!\n\n**Please consider giving back by becoming a sponsor of our open source work on <a href="https://www.patreon.com/_ory">Patreon</a> or \n<a href="https://opencollective.com/ory">Open Collective</a>.**\n\n<table>\n    <thead>\n        <tr>\n            <th>Type</th>\n            <th>Name</th>\n            <th>Logo</th>\n            <th>Website</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Sponsor</td>\n            <td>Raspberry PI Foundation</td>\n            <td align="center"><img height="32px" src="./docs/adopters/raspi.svg" alt="Raspberry PI Foundation"></td>\n            <td><a href="https://www.raspberrypi.org/">raspberrypi.org</a></td>\n        </tr>\n        <tr>\n            <td>Contributor</td>\n            <td>Kyma Project</a>\n            <td align="center"><img height="32px" src="./docs/adopters/kyma.svg" alt="Kyma Project"></td>\n            <td><a href="https://kyma-project.io">kyma-project.io</a></td>\n        </tr>\n        <tr>\n            <td>Sponsor</td>\n            <td>ThoughtWorks</td>\n            <td align="center"><img height="32px" src="./docs/adopters/tw.svg" alt="ThoughtWorks"></td>\n            <td><a href="https://www.thoughtworks.com/">thoughtworks.com</a></td>\n        </tr>\n        <tr>\n            <td>Sponsor</td>\n            <td>Tulip</td>\n            <td align="center"><img height="32px" src="./docs/adopters/tulip.svg" alt="Tulip Retail"></td>\n            <td><a href="https://tulip.com/">tulip.com</a></td>\n        </tr>\n        <tr>\n            <td>Sponsor</td>\n            <td>Cashdeck / All My Funds</td>\n            <td align="center"><img height="32px" src="./docs/adopters/allmyfunds.svg" alt="All My Funds"></td>\n            <td><a href="https://cashdeck.com.au/">cashdeck.com.au</a></td>\n        </tr>\n        <tr>\n            <td>Sponsor</td>\n            <td>3 Rein</td>\n            <td align="center"><img height="32px" src="./docs/adopters/3R-horiz.svg" alt="3REIN"></td>\n            <td><a href="https://3rein.com/">3rein.com</a> <em>(avaiable soon)</em></td>\n        </tr>\n        <tr>\n            <td>Contributor</td>\n            <td>Hootsuite</td>\n            <td align="center"><img height="32px" src="./docs/adopters/hootsuite.svg" alt="Hootsuite"></td>\n            <td><a href="https://hootsuite.com/">hootsuite.com</a></td>\n        </tr>\n        <tr>\n            <td>Adopter *</td>\n            <td>Segment</td>\n            <td align="center"><img height="32px" src="./docs/adopters/segment.svg" alt="Segment"></td>\n            <td><a href="https://segment.com/">segment.com</a></td>\n        </tr>\n        <tr>\n            <td>Adopter *</td>\n            <td>Arduino</td>\n            <td align="center"><img height="32px" src="./docs/adopters/arduino.svg" alt="Arduino"></td>\n            <td><a href="https://www.arduino.cc/">arduino.cc</a></td>\n        </tr>\n    </tdbody>\n</table>\n\nWe also want to thank all individual contributors\n\n<img src="https://opencollective.com/ory/contributors.svg?width=890&button=false" /></a>\n\nas well as all of our backers\n\n<a href="https://opencollective.com/ory#backers" target="_blank"><img src="https://opencollective.com/ory/backers.svg?width=890"></a>\n\nand past & current supporters (in alphabetical order) on [Patreon](https://www.patreon.com/_ory): Alexander Alimovs,\nBilly, Chancy Kennedy, Drozzy, Edwin Trejos, Howard Edidin, Ken Adler Oz Haven, Stefan Hans, TheCrealm.\n\n<em>* Uses one of ORY\'s major projects in production.</em>\n\n<!--END ADOPTERS-->\n\n\n\n### OAuth2 and OpenID Connect: Open Standards!\n\nORY Hydra implements Open Standards set by the IETF:\n\n* [The OAuth 2.0 Authorization Framework](https://tools.ietf.org/html/rfc6749)\n* [OAuth 2.0 Threat Model and Security Considerations](https://tools.ietf.org/html/rfc6819)\n* [OAuth 2.0 Token Revocation](https://tools.ietf.org/html/rfc7009)\n* [OAuth 2.0 Token Introspection](https://tools.ietf.org/html/rfc7662)\n* [OAuth 2.0 for Native Apps](https://tools.ietf.org/html/draft-ietf-oauth-native-apps-10)\n* [Proof Key for Code Exchange by OAuth Public Clients](https://tools.ietf.org/html/rfc7636)\n\nand the OpenID Foundation:\n\n* [OpenID Connect Core 1.0](http://openid.net/specs/openid-connect-core-1_0.html)\n* [OpenID Connect Discovery 1.0](https://openid.net/specs/openid-connect-discovery-1_0.html)\n* [OpenID Connect Dynamic Client Registration 1.0](https://openid.net/specs/openid-connect-registration-1_0.html)\n* [OpenID Connect Front-Channel Logout 1.0](https://openid.net/specs/openid-connect-frontchannel-1_0.html)\n* [OpenID Connect Back-Channel Logout 1.0](https://openid.net/specs/openid-connect-backchannel-1_0.html)\n\n### OpenID Connect Certified\n\nORY Hydra is an OpenID Foundation [certified OpenID Provider (OP)](http://openid.net/certification/#OPs).\n\n<p align="center">\n    <img src="./docs/images/oidc-cert.png" alt="ORY Hydra is a certified OpenID Providier" width="256px">\n</p>\n\nThe following OpenID profiles are certified:\n\n* [Basic OpenID Provider](http://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth) (response types `code`)\n* [Implicit OpenID Provider](http://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth) (response types `id_token`, `id_token+token`)\n* [Hybrid OpenID Provider](http://openid.net/specs/openid-connect-core-1_0.html#HybridFlowAuth) (response types `code+id_token`, `code+id_token+token`, `code+token`)\n* [OpenID Provider Publishing Configuration Information](https://openid.net/specs/openid-connect-discovery-1_0.html)\n* [Dynamic OpenID Provider](https://openid.net/specs/openid-connect-registration-1_0.html)\n\nTo obtain certification, we deployed the [reference user login and consent app](https://github.com/ory/hydra-login-consent-node)\n(unmodified) and ORY Hydra v1.0.0.\n\n## Quickstart\n\nThis section is a quickstart guide to working with ORY Hydra. In-depth docs are available as well:\n\n* The documentation is available [here](https://www.ory.sh/docs/next/hydra).\n* The REST API documentation is available [here](https://www.ory.sh/docs/next/hydra/sdk/api).\n\n### 5 minutes tutorial: Run your very own OAuth2 environment\n\nThe **[tutorial](https://www.ory.sh/docs/next/hydra/5min-tutorial)** teaches you to set up ORY Hydra,\na Postgres instance and an exemplary identity provider written in React using docker-compose.\nIt will take you about 5 minutes to complete the **[tutorial](https://www.ory.sh/docs/next/hydra/5min-tutorial)**.\n\n<img src="docs/images/oauth2-flow.gif" alt="OAuth2 Flow">\n\n<br clear="all">\n\n### Installation\n\nHead over to the [ORY Developer Documentation](https://www.ory.sh/docs/next/hydra/configure-deploy#installing-ory-hydra) to learn how to install ORY Hydra on Linux, macOS, Windows, and Docker and how to build ORY Hydra from source.\n\n## Ecosystem\n\n<a href="https://console.ory.sh/">\n    <img align="right" width="30%" src="docs/images/sec-console.png" alt="ORY Security Console">\n</a>\n\n### ORY Security Console: Administrative User Interface\n\nThe [ORY Security Console](https://console.ory.sh/) is a visual admin interface for managing ORY Hydra,\nORY Oathkeeper, and ORY Keto.\n\n### ORY Oathkeeper: Identity & Access Proxy\n\n[ORY Oathkeeper](https://github.com/ory/oathkeeper) is a BeyondCorp/Zero Trust Identity & Access Proxy (IAP) built\non top of OAuth2 and ORY Hydra.\n\n### ORY Keto: Access Control Policies as a Server\n\n[ORY Keto](https://github.com/ory/keto) is a policy decision point. It uses a set of access control policies, similar\nto AWS IAM Policies, in order to determine whether a subject (user, application, service, car, ...) is authorized to\nperform a certain action on a resource.\n\n### Examples\n\nThe [ory/examples](https://github.com/ory/examples) repository contains numerous examples of setting up this project\nindividually and together with other services from the ORY Ecosystem.\n\n## Security\n\n*Why should I use ORY Hydra? It\'s not that hard to implement two OAuth2 endpoints and there are numerous SDKs out there!*\n\nOAuth2 and OAuth2 related specifications are over 400 written pages. Implementing OAuth2 is easy, getting it right is hard.\nORY Hydra is trusted by companies all around the world, has a vibrant community and faces millions of requests in production\neach day. Of course, we also compiled a security guide with more details on cryptography and security concepts.\nRead [the security guide now](https://www.ory.sh/docs/next/hydra/security-architecture).\n\n### Disclosing vulnerabilities\n\nIf you think you found a security vulnerability, please refrain from posting it publicly on the forums, the chat, or GitHub\nand send us an email to [hi@ory.am](mailto:hi@ory.sh) instead.\n\n## Benchmarks\n\nOur continuous integration runs a collection of benchmarks against ORY Hydra. You can find the results [here](https://www.ory.sh/docs/next/performance/hydra).\n\n## Telemetry\n\nOur services collect summarized, anonymized data that can optionally be turned off. Click\n[here](https://www.ory.sh/docs/next/ecosystem/sqa) to learn more.\n\n## Documentation\n\n### Guide\n\nThe Guide is available [here](https://www.ory.sh/docs/next/hydra).\n\n### HTTP API documentation\n\nThe HTTP API is documented [here](https://www.ory.sh/docs/next/hydra/sdk/api).\n\n### Upgrading and Changelog\n\nNew releases might introduce breaking changes. To help you identify and incorporate those changes, we document these\nchanges in [UPGRADE.md](./UPGRADE.md) and [CHANGELOG.md](./CHANGELOG.md).\n\n### Command line documentation\n\nRun `hydra -h` or `hydra help`.\n\n### Develop\n\nDeveloping with ORY Hydra is as easy as:\n\n```\ngo get -d -u github.com/ory/hydra\ncd $GOPATH/src/github.com/ory/hydra\nmake init\nexport GO111MODULE=on\n## With database\nmake test\n## Without database\nmake quicktest\n```\n\nThen run it with in-memory database:\n\n```\nDSN=memory go run main.go serve all\n```\n\n**Notes**\n\n* We changed organization name from `ory-am` to `ory`. In order to keep backward compatibility, we did not rename Go packages.\n* You can ignore warnings similar to `package github.com/ory/hydra/cmd/server: case-insensitive import collision: "github.com/sirupsen/logrus" and "github.com/sirupsen/logrus"`.\n\n## Libraries and third-party projects\n\nOfficial:\n* [User Login & Consent Example](https://github.com/ory/hydra-login-consent-node)\n\nCommunity:\n* [Kubernetes helm chart](https://github.com/kubernetes/charts/pull/1022)\n* [Werther - an Identity Provider over LDAP](https://github.com/i-core/werther)\n\n:warning: Outdated Community Projects:\nThe following projects are outdated and won\'t work anymore in most cases. Having said that they still might help you to better understand how to integrate HYDRA and solve specific cases.\n* [ORY Hydra middleware for Gin](https://github.com/janekolszak/gin-hydra)\n* [Consent App SDK for Go](https://github.com/janekolszak/idp)\n\n## Blog posts & articles\n\n* [Creating an oauth2 custom lamda authorizer for use with Amazons (AWS) API Gateway using Hydra](https://blogs.edwardwilde.com/2017/01/12/creating-an-oauth2-custom-lamda-authorizer-for-use-with-amazons-aws-api-gateway-using-hydra/)\n* Warning, ORY Hydra has changed almost everything since writing this\narticle: [Hydra: Run your own Identity and Access Management service in <5 Minutes](https://blog.gopheracademy.com/advent-2015/hydra-auth/)\n'