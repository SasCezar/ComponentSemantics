b'[![Build Status](https://travis-ci.org/shazow/ssh-chat.svg?branch=master)](https://travis-ci.org/shazow/ssh-chat)\n[![GoDoc](https://godoc.org/github.com/shazow/ssh-chat?status.svg)](https://godoc.org/github.com/shazow/ssh-chat)\n[![Downloads](https://img.shields.io/github/downloads/shazow/ssh-chat/total.svg?color=orange)](https://github.com/shazow/ssh-chat/releases)\n[![Bountysource](https://www.bountysource.com/badge/team?team_id=52292&style=bounties_received)](https://www.bountysource.com/teams/ssh-chat/issues?utm_source=ssh-chat&utm_medium=shield&utm_campaign=bounties_received)\n\n\n# ssh-chat\n\nCustom SSH server written in Go. Instead of a shell, you get a chat prompt.\n\n## Demo\n\nJoin the party:\n\n```\n$ ssh ssh.chat\n```\n\nThe server\'s RSA key fingerprint is `MD5:e5:d5:d1:75:90:38:42:f6:c7:03:d7:d0:56:7d:6a:db` or `SHA256:HQDLlZsXL3t0lV5CHM0OXeZ5O6PcfHuzkS8cRbbTLBI`. If you see something different, you might be [MITM](https://en.wikipedia.org/wiki/Man-in-the-middle_attack)\'d.\n\n(Apologies if the server is down, try again shortly.)\n\n\n## Downloading a release\n\nRecent releases include builds for MacOS (darwin/amd64) and Linux (386,\namd64, and ARM6 for your RaspberryPi).\n\n**[Grab the latest binary release here](https://github.com/shazow/ssh-chat/releases/)**.\n\nPlay around with it. Additional [deploy examples are here](https://github.com/shazow/ssh-chat/wiki/Deployment).\n\n\n## Compiling / Developing\n\nMost people just want the [latest binary release](https://github.com/shazow/ssh-chat/releases/). If you\'re sure you want to compile it from source, read on:\n\nYou can compile ssh-chat by using `make build`. The resulting binary is portable and\ncan be run on any system with a similar OS and CPU arch. Go 1.8 or higher is required to compile.\n\nIf you\'re developing on this repo, there is a handy Makefile that should set\nthings up with `make run`.\n\nAdditionally, `make debug` runs the server with an http `pprof` server. This allows you to open\n[http://localhost:6060/debug/pprof/]() and view profiling data. See\n[net/http/pprof](http://golang.org/pkg/net/http/pprof/) for more information about `pprof`.\n\n\n## Quick Start\n\n```\nUsage:\n  ssh-chat [OPTIONS]\n\nApplication Options:\n  -v, --verbose    Show verbose logging.\n      --version    Print version and exit.\n  -i, --identity=  Private key to identify server with. (default: ~/.ssh/id_rsa)\n      --bind=      Host and port to listen on. (default: 0.0.0.0:2022)\n      --admin=     File of public keys who are admins.\n      --whitelist= Optional file of public keys who are allowed to connect.\n      --motd=      Optional Message of the Day file.\n      --log=       Write chat log to this file.\n      --pprof=     Enable pprof http server for profiling.\n\nHelp Options:\n  -h, --help       Show this help message\n```\n\nAfter doing `go get github.com/shazow/ssh-chat/...` on this repo, you should be able\nto run a command like:\n\n```\n$ ssh-chat --verbose --bind ":22" --identity ~/.ssh/id_dsa\n```\n\nTo bind on port 22, you\'ll need to make sure it\'s free (move any other ssh\ndaemons to another port) and run ssh-chat as root (or with sudo).\n\n## Frequently Asked Questions\n\nThe FAQs can be found on the project\'s [Wiki page](https://github.com/shazow/ssh-chat/wiki/FAQ).\nFeel free to submit more questions to be answered and added to the page.\n\n## License\n\nThis project is licensed under the MIT open source license.\n'