b'# Reflection\n\n[![Swift][swift-badge]][swift-url]\n[![License][mit-badge]][mit-url]\n[![Slack][slack-badge]][slack-url]\n[![Travis][travis-badge]][travis-url]\n[![Codecov][codecov-badge]][codecov-url]\n[![Codebeat][codebeat-badge]][codebeat-url]\n\n**Reflection** provides an API for advanced reflection at runtime including dynamic construction of types.\n\n## Usage\n\n```swift\nimport Reflection\n\nstruct Person {\n  var firstName: String\n  var lastName: String\n  var age: Int\n}\n\n// Reflects the instance properties of type `Person`\nlet props = try properties(Person.self)\n\nvar person = Person(firstName: "John", lastName: "Smith", age: 35)\n\n// Retrieves the value of `person.firstName`\nlet firstName: String = try get("firstName", from: person)\n\n// Sets the value of `person.age`\ntry set(36, key: "age", for: &person)\n\n// Creates a `Person` from a dictionary\nlet friend: Person = try construct(dictionary: ["firstName" : "Sarah",\n                                                "lastName" : "Gates",\n                                                "age" : 28])\n\n\n```\n\n## Installation\n\n```swift\nimport PackageDescription\n\nlet package = Package(\n    dependencies: [\n        .Package(url: "https://github.com/Zewo/Reflection.git", majorVersion: 0, minor: 15),\n    ]\n)\n```\n\n## Advanced Usage\n\n```swift\n// `Reflection` can be extended for higher-level packages to do mapping and serializing.\n// Here is a simple `Mappable` protocol that allows deserializing of arbitrary nested structures.\n\nimport Reflection\n\ntypealias MappableDictionary = [String : Any]\n\nenum Error : ErrorProtocol {\n    case missingRequiredValue(key: String)\n}\n\nprotocol Mappable {\n    init(dictionary: MappableDictionary) throws\n}\n\nextension Mappable {\n\n    init(dictionary: MappableDictionary) throws {\n        self = try construct { property in\n            if let value = dictionary[property.key] {\n                if let type = property.type as? Mappable.Type, let value = value as? MappableDictionary {\n                    return try type.init(dictionary: value)\n                } else {\n                    return value\n                }\n            } else {\n                throw Error.missingRequiredValue(key: property.key)\n            }\n        }\n    }\n\n}\n\nstruct Person : Mappable {\n    var firstName: String\n    var lastName: String\n    var age: Int\n    var phoneNumber: PhoneNumber\n}\n\nstruct PhoneNumber : Mappable {\n    var number: String\n    var type: String\n}\n\nlet dictionary = [\n    "firstName" : "Jane",\n    "lastName" : "Miller",\n    "age" : 54,\n    "phoneNumber" : [\n        "number" : "924-555-0294",\n        "type" : "work"\n    ] as MappableDictionary\n] as MappableDictionary\n\nlet person = try Person(dictionary: dictionary)\n\n```\n\n## Support\n\nIf you need any help you can join our [Slack](http://slack.zewo.io) and go to the **#help** channel. Or you can create a Github [issue](https://github.com/Zewo/Zewo/issues/new) in our main repository. When stating your issue be sure to add enough details, specify what module is causing the problem and reproduction steps.\n\n## Community\n\n[![Slack][slack-image]][slack-url]\n\nThe entire Zewo code base is licensed under MIT. By contributing to Zewo you are contributing to an open and engaged community of brilliant Swift programmers. Join us on [Slack](http://slack.zewo.io) to get to know us!\n\n## License\n\nThis project is released under the MIT license. See [LICENSE](LICENSE) for details.\n\n[swift-badge]: https://img.shields.io/badge/Swift-4.2-orange.svg?style=flat\n[swift-url]: https://swift.org\n[mit-badge]: https://img.shields.io/badge/License-MIT-blue.svg?style=flat\n[mit-url]: https://tldrlegal.com/license/mit-license\n[slack-image]: http://s13.postimg.org/ybwy92ktf/Slack.png\n[slack-badge]: https://zewo-slackin.herokuapp.com/badge.svg\n[slack-url]: http://slack.zewo.io\n[travis-badge]: https://travis-ci.org/Zewo/Reflection.svg?branch=master\n[travis-url]: https://travis-ci.org/Zewo/Reflection\n[codecov-badge]: https://codecov.io/gh/Zewo/Reflection/branch/master/graph/badge.svg\n[codecov-url]: https://codecov.io/gh/Zewo/Reflection\n[codebeat-badge]: https://codebeat.co/badges/85f3c10b-6574-4956-8c58-bb6ad3ea1268\n[codebeat-url]: https://codebeat.co/projects/github-com-zewo-reflection\n'