b'[![view on npm](https://img.shields.io/npm/v/local-web-server.svg)](https://www.npmjs.org/package/local-web-server)\n[![npm module downloads](https://img.shields.io/npm/dt/local-web-server.svg)](https://www.npmjs.org/package/local-web-server)\n[![Build Status](https://travis-ci.org/lwsjs/local-web-server.svg?branch=master)](https://travis-ci.org/lwsjs/local-web-server)\n[![Coverage Status](https://coveralls.io/repos/github/lwsjs/local-web-server/badge.svg?branch=master)](https://coveralls.io/github/lwsjs/local-web-server?branch=master)\n[![Dependency Status](https://badgen.net/david/dep/lwsjs/local-web-server)](https://david-dm.org/lwsjs/local-web-server)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](https://github.com/feross/standard)\n\n*Requires node v8 or above. Upgraders, please read the [release notes](https://github.com/lwsjs/local-web-server/releases)*.\n\n# local-web-server\n\nA lean, modular web server for rapid full-stack development.\n\n* Supports HTTP, HTTPS and HTTP2.\n* Small and 100% personalisable. Load and use only the behaviour required by your project.\n* Attach a custom view to personalise how activity is visualised.\n* Programmatic and command-line interfaces.\n\nUse this tool to:\n\n* Build any type of front-end web application (static, dynamic, Single Page App, Progessive Web App, React etc).\n* Prototype a back-end service (REST API, microservice, websocket, Server Sent Events service etc).\n* Monitor activity, analyse performance, experiment with caching strategy etc.\n\nLocal-web-server is a distribution of [lws](https://github.com/lwsjs/lws) bundled with a "starter pack" of useful middleware.\n\n## Synopsis\n\nThis package installs the `ws` command-line tool (take a look at the [usage guide](https://github.com/lwsjs/local-web-server/wiki/CLI-usage)).\n\n### Static web site\n\nRunning `ws` without any arguments will host the current directory as a static web site. Navigating to the server will render a directory listing or your `index.html`, if that file exists.\n\n```sh\n$ ws\nListening on http://mbp.local:8000, http://127.0.0.1:8000, http://192.168.0.100:8000\n```\n\n[Static files tutorial](https://github.com/lwsjs/local-web-server/wiki/How-to-serve-static-files).\n\nThis clip demonstrates static hosting plus a couple of log output formats - `dev` and `stats`.\n\n<img src="https://imgur.com/download/NJC3POY" width="618px" title="Static static log output">\n\n\n### Single Page Application\n\nServing a Single Page Application (an app with client-side routing, e.g. a React or Angular app) is as trivial as specifying the name of your single page:\n\n```sh\n$ ws --spa index.html\n```\n\nWith a static site, requests for typical SPA paths (e.g. `/user/1`, `/login`) would return `404 Not Found` as a file at that location does not exist. However, by marking `index.html` as the SPA you create this rule:\n\n*If a static file is requested (e.g. `/css/style.css`) then serve it, if not (e.g. `/login`) then serve the specified SPA and handle the route client-side.*\n\n[SPA tutorial](https://github.com/lwsjs/local-web-server/wiki/How-to-serve-a-Single-Page-Application-(SPA)).\n\n<img src="https://imgur.com/download/IQVmi8v" title="SPA">\n\n### URL rewriting and proxied requests\n\nAnother common use case is to forward certain requests to a remote server.\n\nThe following command proxies blog post requests from any path beginning with `/posts/` to `https://jsonplaceholder.typicode.com/posts/`. For example, a request for `/posts/1` would be proxied to `https://jsonplaceholder.typicode.com/posts/1`.\n\n```sh\n$ ws --rewrite \'/posts/(.*) -> https://jsonplaceholder.typicode.com/posts/$1\'\n```\n\n[Rewrite tutorial](https://github.com/lwsjs/local-web-server/wiki/How-to-rewrite-URLs-to-local-or-remote-destinations).\n\nThis clip demonstrates the above plus use of `--static.extensions` to specify a default file extension and `--verbose` to monitor activity.\n\n<img src="https://imgur.com/download/3flcbJn" width="618px" title="Proxy json requests to remote resource">\n\n### HTTPS and HTTP2\n\nFor HTTPS or HTTP2, pass the `--https` or `--http2` flags respectively. [See the wiki](https://github.com/lwsjs/local-web-server/wiki) for further configuration options and a guide on how to get the "green padlock" in your browser.\n\n```\n$ lws --http2\nListening at https://mba4.local:8000, https://127.0.0.1:8000, https://192.168.0.200:8000\n```\n\n## Built-in middleware stack\n\nIf you do *not* supply a custom middleware stack via the `--stack` option the following default stack will be used. It\'s designed to cover most typical web development scenarios.\n\n| Name               | Description |\n| ------------------ | ---- |\n| \xe2\x86\x93 [Basic Auth](https://github.com/lwsjs/basic-auth) | Password-protect a server using Basic Authentication |\n| \xe2\x86\x93 [Body Parser](https://github.com/lwsjs/body-parser) | Parses the request body, making `ctx.request.body` available to downstream middleware.|\n| \xe2\x86\x93 [Request Monitor](https://github.com/lwsjs/request-monitor) | Feeds traffic information to the `--verbose` output.|\n| \xe2\x86\x93 [Log](https://github.com/lwsjs/log) | Outputs an access log or stats view to the console.|\n| \xe2\x86\x93 [Cors](https://github.com/lwsjs/cors) | Support for setting Cross-Origin Resource Sharing (CORS) headers |\n| \xe2\x86\x93 [Json](https://github.com/lwsjs/json) | Pretty-prints JSON responses. |\n| \xe2\x86\x93 [Rewrite](https://github.com/lwsjs/rewrite) | URL Rewriting. Use to re-route requests to local or remote destinations.|\n| \xe2\x86\x93 [Blacklist](https://github.com/lwsjs/blacklist) | Forbid access to sensitive or private resources|\n| \xe2\x86\x93 [Conditional Get](https://github.com/lwsjs/conditional-get) | Support for HTTP Conditional requests.|\n| \xe2\x86\x93 [Mime](https://github.com/lwsjs/mime) | Customise the mime-type returned with any static resource.|\n| \xe2\x86\x93 [Compress](https://github.com/lwsjs/compress) | Compress responses using gzip.|\n| \xe2\x86\x93 [SPA](https://github.com/lwsjs/spa) | Support for Single Page Applications.|\n| \xe2\x86\x93 [Static](https://github.com/lwsjs/static) | Serves static files.|\n| \xe2\x86\x93 [Index](https://github.com/lwsjs/index) | Serves directory listings.|\n\n## Further Documentation\n\n[See the wiki for plenty more documentation and tutorials](https://github.com/lwsjs/local-web-server/wiki).\n\n## Install\n\n**Requires node v8 or above**.\n\n```sh\n$ npm install -g local-web-server\n```\n\n* * *\n\n&copy; 2013-19 Lloyd Brookes \\<75pound@gmail.com\\>. Documented by [jsdoc-to-markdown](https://github.com/jsdoc2md/jsdoc-to-markdown).\n'