b'\nTextBlob: Simplified Text Processing\n====================================\n\n.. image:: https://badgen.net/pypi/v/TextBlob\n    :target: https://pypi.org/project/textblob/\n    :alt: Latest version\n\n.. image:: https://badgen.net/travis/sloria/TextBlob/dev\n    :target: https://travis-ci.org/sloria/TextBlob\n    :alt: Travis-CI\n\nHomepage: `https://textblob.readthedocs.io/ <https://textblob.readthedocs.io/>`_\n\n`TextBlob` is a Python (2 and 3) library for processing textual data. It provides a simple API for diving into common natural language processing (NLP) tasks such as part-of-speech tagging, noun phrase extraction, sentiment analysis, classification, translation, and more.\n\n\n.. code-block:: python\n\n    from textblob import TextBlob\n\n    text = \'\'\'\n    The titular threat of The Blob has always struck me as the ultimate movie\n    monster: an insatiably hungry, amoeba-like mass able to penetrate\n    virtually any safeguard, capable of--as a doomed doctor chillingly\n    describes it--"assimilating flesh on contact.\n    Snide comparisons to gelatin be damned, it\'s a concept with the most\n    devastating of potential consequences, not unlike the grey goo scenario\n    proposed by technological theorists fearful of\n    artificial intelligence run rampant.\n    \'\'\'\n\n    blob = TextBlob(text)\n    blob.tags           # [(\'The\', \'DT\'), (\'titular\', \'JJ\'),\n                        #  (\'threat\', \'NN\'), (\'of\', \'IN\'), ...]\n\n    blob.noun_phrases   # WordList([\'titular threat\', \'blob\',\n                        #            \'ultimate movie monster\',\n                        #            \'amoeba-like mass\', ...])\n\n    for sentence in blob.sentences:\n        print(sentence.sentiment.polarity)\n    # 0.060\n    # -0.341\n\n    blob.translate(to="es")  # \'La amenaza titular de The Blob...\'\n\nTextBlob stands on the giant shoulders of `NLTK`_ and `pattern`_, and plays nicely with both.\n\nFeatures\n--------\n\n- Noun phrase extraction\n- Part-of-speech tagging\n- Sentiment analysis\n- Classification (Naive Bayes, Decision Tree)\n- Language translation and detection powered by Google Translate\n- Tokenization (splitting text into words and sentences)\n- Word and phrase frequencies\n- Parsing\n- `n`-grams\n- Word inflection (pluralization and singularization) and lemmatization\n- Spelling correction\n- Add new models or languages through extensions\n- WordNet integration\n\nGet it now\n----------\n::\n\n    $ pip install -U textblob\n    $ python -m textblob.download_corpora\n\nExamples\n--------\n\nSee more examples at the `Quickstart guide`_.\n\n.. _`Quickstart guide`: https://textblob.readthedocs.io/en/latest/quickstart.html#quickstart\n\n\nDocumentation\n-------------\n\nFull documentation is available at https://textblob.readthedocs.io/.\n\nRequirements\n------------\n\n- Python >= 2.7 or >= 3.4\n\nProject Links\n-------------\n\n- Docs: https://textblob.readthedocs.io/\n- Changelog: https://textblob.readthedocs.io/en/latest/changelog.html\n- PyPI: https://pypi.python.org/pypi/TextBlob\n- Issues: https://github.com/sloria/TextBlob/issues\n\nLicense\n-------\n\nMIT licensed. See the bundled `LICENSE <https://github.com/sloria/TextBlob/blob/master/LICENSE>`_ file for more details.\n\n.. _pattern: http://www.clips.ua.ac.be/pattern\n.. _NLTK: http://nltk.org/\n'