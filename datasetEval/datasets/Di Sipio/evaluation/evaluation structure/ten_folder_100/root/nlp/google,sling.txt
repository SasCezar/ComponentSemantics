b'# SLING - A natural language frame semantics parser\n\n[![Build Status](https://travis-ci.org/google/sling.svg?branch=master)](https://travis-ci.org/google/sling)\n\nThe aim of the SLING project is to learn to read and understand Wikipedia\narticles in many languages for the purpose of knowledge base completion, e.g.\nadding facts mentioned in Wikipedia (and other sources) to the\n[Wikidata](https://www.wikidata.org) knowledge base.\nWe use [frame semantics](doc/guide/frames.md) as a common representation for \nboth knowledge representation and document annotation. The SLING parser can \nbe trained to produce frame semantic representations of text directly without \nany explicit intervening linguistic representation.\n\nThe SLING project is still work in progress. We do not yet have a full system\nthat can extract facts from arbitrary text, but we have built a number of the\nsubsystems needed for such a system.\nThe SLING frame store is our basic framework for building and manipulating frame\nsemantic graph structures.\nThe [Wiki flow pipeline](doc/guide/wikiflow.md) can take a raw dump of Wikidata\nand [convert](doc/guide/wikiflow.md#wikidata-import) this into one big frame\ngraph.\nThis can be loaded into memory so we can do fast graph traversal for inference\nand reasoning over the knowledge base.\nThe Wiki flow pipeline can also take raw Wikipedia dumps and\n[convert](doc/guide/wikiflow.md#wikipedia-import-and-parsing) these into a set\nof documents with structured annotations extracted from the Wiki markup. This\nalso produces [phrase tables](doc/guide/wikiflow.md#name-and-phrase-tables) that\nare used for mapping names to entities.\nThere is a [SLING Python API](doc/guide/pyapi.md) for accessing all this\ninformation and we also have a [bot](python/wikibot) for uploading extracted\nfacts to Wikidata.\n\n## The SLING Parser\n\nThe SLING parser is used for annotating text with frame semantic annotations.\nIt is a general transition-based frame semantic parser using bi-directional\nLSTMs for input encoding and a Transition Based Recurrent Unit (TBRU) for output\ndecoding.\nIt is a jointly trained model using only the text tokens as input and the\ntransition system has been designed to output frame graphs directly without any\nintervening symbolic representation.\n\n![SLING neural network architecture.](./doc/report/network.svg)\n\nThe SLING framework includes an efficient and scalable\n[frame store](doc/guide/frames.md) implementation as well as a\n[neural network JIT compiler](doc/guide/myelin.md) for fast training and \nparsing.\n\nA more detailed description of the SLING parser can be found in this paper:\n\n* Michael Ringgaard, Rahul Gupta, and Fernando C. N. Pereira. 2017.\n  *SLING: A framework for frame semantic parsing*. http://arxiv.org/abs/1710.07032.\n\n</span>\n\n## More information ...\n\n  * [Installation and building](doc/guide/install.md)\n  * [CASPAR frame semantics parser](doc/guide/caspar.md)\n  * [Semantic frames](doc/guide/frames.md)\n  * [SLING Python API](doc/guide/pyapi.md)\n  * [Myelin neural network JIT compiler](doc/guide/myelin.md)\n  * [Wikipedia and Wikidata processing](doc/guide/wikiflow.md)\n\n## Credits\n\nOriginal authors of the code in this package include:\n\n*   Michael Ringgaard\n*   Rahul Gupta\n*   Anders Sandholm\n'