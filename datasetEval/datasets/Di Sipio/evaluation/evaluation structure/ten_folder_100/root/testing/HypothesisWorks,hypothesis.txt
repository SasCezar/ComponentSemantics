b'==========\nHypothesis\n==========\n\nHypothesis is a family of testing libraries which let you write tests parametrized\nby a source of examples. A Hypothesis implementation then generates simple and\ncomprehensible examples that make your tests fail.\nThis simplifies writing your tests and makes them more powerful at the same time,\nby letting software automate the boring bits and do them to a higher standard than a human would,\nfreeing you to focus on the higher level test logic.\n\nThis sort of testing is often called "property-based testing",\nand the most widely known implementation of the concept is the Haskell\nlibrary `QuickCheck <https://hackage.haskell.org/package/QuickCheck>`_,\nbut Hypothesis differs significantly from QuickCheck and is designed to fit\nidiomatically and easily into existing styles of testing that you are used to,\nwith absolutely no familiarity with Haskell or functional programming needed.\n\n`Hypothesis for Python <hypothesis-python>`_ is the original implementation,\nand the only one that is currently fully production ready and actively maintained.\n\n------------------------------\nHypothesis for Other Languages\n------------------------------\n\nThe core ideas of Hypothesis are language agnostic and in principle it is\nsuitable for any language. We are interested in developing and supporting\nimplementations for a wide variety of languages, but currently lack the\nresources to do so, so our porting efforts are mostly prototypes.\n\nThe two prototype implementations of Hypothesis for other languages are:\n\n* `Hypothesis for Ruby <hypothesis-ruby>`_\n  is a reasonable start on a port of Hypothesis to Ruby. It worked pretty well,\n  but uses a core Rust implementation that is unfortunately not compatible with\n  recent versions of Rust, due to its dependency on Helix (which now seems to\n  be mostly unmaintained) and as a result is currently unsupported pending a\n  rewrite of the bridging code between Rust and Ruby. We don\'t at present have\n  the time or funding for this project, but it is likely not a massive undertaking\n  if anyone would like to provide either of these.\n* `Hypothesis for Java <https://github.com/HypothesisWorks/hypothesis-java>`_\n  is a prototype written some time ago. It\'s far from feature complete and is\n  not under active development, but was intended to prove the viability of the\n  concept.\n\nAdditionally there is a port of the core engine of Hypothesis, Conjecture, to\nRust. It is not feature complete but in the long run we are hoping to move\nmuch of the existing functionality to Rust and rebuild Hypothesis for Python\non top of it, greatly lowering the porting effort to other languages.\n\nAny or all of these could be turned into full fledged implementations with relatively\nlittle effort (no more than a few months of full time work), but as well as the\ninitial work this would require someone prepared to provide or fund ongoing\nmaintenance efforts for them in order to be viable.\n'