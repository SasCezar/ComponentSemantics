b'## List of Free Software Testing Resources\n\n[![Build Status](https://travis-ci.org/ligurio/awesome-software-quality.svg?branch=master)](https://travis-ci.org/ligurio/awesome-software-quality)\n[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\n**Join chat [t.me/sqaunderhood](https://t.me/sqaunderhood) and [subscribe](https://github.com/ligurio/awesome-software-quality/subscription) to receive notificatons with updates.**\n\n### Introduction\n\nThis page collects resources for anyone considering the use of software testing and formal methods. \n\nThere are many axes along which one can organize such a list, such as the level of expertise of the intended audience (from experts to the public at large) or disciplinary orientation (computer science, mathematics, mathematical logic, etc.). Here I have chosen to classify the material by type of subject matter.\n    \nIf you would like add something, just send the text as you would like it to appear to estetus@gmail.com, preferrably already formatted in markdown.\n\n## Index\n\n* [Books](#books)\n* [Courses](#courses)\n* [Podcasts](#podcasts)\n* [Conferences](#conferences)\n* [Workshops and interactive learning tools](#workshops-and-interactive-learning-tools)\n* [Learned lessons](#bugs-and-learned-lessons)\n* [Awesome lists](#awesome-lists)\n\n\n# Books\n\n## In English\n\n#### Software Testing Theory\n\n* [Perspectives on Agile Software Testing](https://info.thoughtworks.com/ebook-agile-software-testing)\n* [A Practical Guide to Testing in DevOps](https://leanpub.com/testingindevops)\n* [Programs and Proofs. Mechanizing Mathematics with Dependent Types.](http://ilyasergey.net/pnp/) - Ilya Sergey @ilyasergey\n* [Measure Software Quality using Application Security](https://github.com/DinisCruz/Book_Software_Quality/tree/master/content) (WIP) - Dinis Cruz\n* [The "A" Word](https://leanpub.com/TheAWord) - Alan Page\n* [Professional Software Development](http://mixmastamyk.bitbucket.org/pro_soft_dev/) (Chapter: "5. Software Quality") - Mike G. Miller\n* [Acceptance Test Engineering Guide, Vol. I - RC1](https://testingguidance.codeplex.com/)\n* [A Software Testing Primer](http://www.betoryuu.com/images/tour/items/file/testingPrimer.pdf) (PDF)\n* [Classic Testing Mistakes](http://www.exampler.com/testing-com/writings/classic/mistakes.pdf) (PDF) - Brian Marick\n* [Code Coverage Analysis](http://www.bullseye.com/coverage.html) - Steve Cornett\n* [Practical Software Testing](http://www.softwaretestinghelp.com/practical-software-testing-new-free-ebook-download/) - STH in association with Chindam Damodar\n* [A Tutorial in Exploratory Testing](http://www.kaner.com/pdfs/QAIExploring.pdf) (PDF)\n* [Essential Acceptance Testing](https://leanpub.com/essential_acceptance_testing/c/HgPDBsxyYT6q)\n* [Embedded Software Testing Methods](https://www.theseus.fi/bitstream/handle/10024/46873/Lepisto_Juho.pdf?sequence=1) Juho Lepist\xc3\xb6\n* [Foundations of Software Testing: Fundamental Algorithms and Techniques](http://my.safaribooksonline.com/book/software-engineering-and-development/software-testing/9788131707951) Aditya P. Mathur\n* [Introduction to software testing](http://ebooks.allfree-stuff.com/eBooks_down/Software%20Testing/Introduction%20to%20Software%20Testing.pdf) (PDF)\n* [Manual Testing Help](http://www.softwaretestinghelp.com/manual-testing-help-ebook-free-download/)\n* [Mobile Testing: Ready Reckoner](http://enjoytesting.files.wordpress.com/2013/10/mobile_testing_ready_reckoner.pdf) (PDF) - Ajay Balamurugadas, Sundaresan Krishnaswami\n* [Performance Testing Guidance](https://perftestingguide.codeplex.com/)\n* [Random testing book](https://github.com/regehr/random-testing-book) DRAFT\n* [Software Testing: A Comprehensive Approach](https://github.com/laboon/ebook) - Bill Laboon\n* [Software Testing Tutorial](http://www.tutorialspoint.com/software_testing/index.htm)\n* [Software Testing Dictionary](http://www.tutorialspoint.com/software_testing_dictionary/index.htm)\n* [The Way of Testivus](http://www.agitar.com/downloads/TheWayOfTestivus.pdf)\n* [The Essential Guide to Mobile App Testing](http://core.ecu.edu/STRG/materials/uTest_eBook_Mobile_Testing.pdf) (PDF)\n* [UI and UX Testing: Ready Reckoner](http://enjoytesting.files.wordpress.com/2013/10/ui_and_ux_testing_ready_reckoner.pdf) (PDF) - Ajay Balamurugadas\n* [What If: A collection of tips from a software tester](http://enjoytesting.files.wordpress.com/2013/10/whatif.pdf) (PDF) - Ajay Balamurugadas\n* [What If: 50+ tips to win testing contests](http://enjoytesting.files.wordpress.com/2013/10/50tipstowintestingcontests.pdf) (PDF) - Ajay Balamurugadas\n* [What If: 50+ tips to boost your productivity](http://enjoytesting.files.wordpress.com/2013/10/50-tips-to-boost-your-productivity.pdf) (PDF) - Ajay Balamurugadas\n* [What If: 50+ tips to improve tester-programmer relationship](http://enjoytesting.files.wordpress.com/2013/10/50-tips-to-improve-tester-programmer-relationship.pdf) (PDF) - Ajay Balamurugadas\n* [Handbook of Software Reliability Engineering](http://www.cse.cuhk.edu.hk/~lyu/book/reliability/)\n* [Mutation Testing: Better Code by Making Bugs](https://leanpub.com/mutationtesting) - Filip van Laenen\n* [The Tao of Testing. A Field Manual for Software Engineers.](https://jasonpolites.github.io/tao-of-testing/index-1.1.html) - Jason Polites\n* [Observing and Reasoning About Errors](https://huddle.eurostarsoftwaretesting.com/wp-content/uploads/2017/09/Jerry-Weinberg-eBook-final-compressed-contents-page.pdf)\n* [The Little Black Book On Test Design](http://thetesteye.com/papers/TheLittleBlackBookOnTestDesign.pdf) -- Rikard Endgren\n* [Generating Software Tests. Breaking Software for Fun and Profit.](https://www.fuzzingbook.org/) -- by Andreas Zeller, Rahul Gopinath, Marcel B\xc3\xb6hme, Gordon Fraser, and Christian Holler\n* [Software Testing and Analysis: Process, Principles, and Techniques](http://ix.cs.uoregon.edu/~michal/book/Samples/book.pdf) -- Mauro Pezze, Michal Young ([slides](http://ix.cs.uoregon.edu/~michal/book/))\n* [Software Testing Glossary](https://testitquickly.com/2016/12/14/software-testing-glossary/)\n* [Quality Assistance](https://www.atlassian.com/inside-atlassian/quality-assurance-vs-quality-assistance) and [here](https://amaysim.engineering/from-quality-assurance-to-quality-assistance-32ffc990d27b) and for [youtube](https://youtu.be/9giJYYag6wQ)\n\n#### Standards In software Testing\n\n* [Testing Standards Working Party](http://www.testingstandards.co.uk/)\n* [The International Software Testing Standard](http://softwaretestingstandard.org/)\n* [Standard for Software Component Testing](http://www.testingstandards.co.uk/Component%20Testing.pdf) (PDF)\n* [Everything You Need to Know About Software Test Formats](https://dou.ua/lenta/articles/software-test-formats/) (in Russian)\n* [Software Testing Standards in NASA](http://www.system-safety.org/Documents/NASA-GB-8719.13.pdf)\n* [ECSS-Q-ST-80C Rev.1 \xe2\x80\x93 Software product assurance](http://ecss.nl/standard/ecss-q-st-80c-rev-1-software-product-assurance-15-february-2017/)\n* [\xd0\xa1\xd0\x98\xd0\xa1\xd0\xa2\xd0\x95\xd0\x9c\xd0\x9d\xd0\x90\xd0\xaf \xd0\x98 \xd0\x9f\xd0\xa0\xd0\x9e\xd0\x93\xd0\xa0\xd0\x90\xd0\x9c\xd0\x9c\xd0\x9d\xd0\x90\xd0\xaf \xd0\x98\xd0\x9d\xd0\x96\xd0\x95\xd0\x9d\xd0\x95\xd0\xa0\xd0\x98\xd0\xaf: \xd0\x93\xd0\x9e\xd0\xa1\xd0\xa2 \xd0\xa0 56922\xe2\x80\x942016/ISO/IEC/IEEE 29119- 3:2013](https://pdf.standartgost.ru/catalog/Data2/1/4293754/4293754866.pdf)\n* DO-278\n* [DO-178B](https://en.wikipedia.org/wiki/DO-178B)\n\n#### Testing of Free and OpenSource Software\n\n* [Quality Improvement in Volunteer Free and Open Source Software Project](http://www.cyrius.com/publications/michlmayr-phd.pdf) (PDF)\n\n#### Testing by different programming languages\n\n* [PHPUnit PHP Test-Driven Development - Automated Tools to Improve Your PHP Code Quality](http://refcardz.dzone.com/refcardz/phpunit-php-test-driven)\n* [Practical PHP testing](http://www.giorgiosironi.com/2009/12/practical-php-testing-is-here.html)\n* [Testing Erlang](https://github.com/zkessin/testing-erlang-book)\n* [Testing in Scala](https://github.com/dhinojosa/testing-in-scala-book)\n* [Test-Driven Development - Extensive Tutorial](https://github.com/grzesiek-galezowski/tdd-ebook) - Grzegorz Ga\xc5\x82\xc4\x99zowski\n* [Testing and Debugging JavaScript](https://github.com/roblevintennis/Testing-and-Debugging-JavaScript)\n* [Web Application Testing in Ruby](https://leanpub.com/watirbook/read) \xc5\xbdeljko Filipin\n\n#### Testing Tools\n\n* [The Evolving Art of Fuzzing](http://www.vdalabs.com/tools/The_Evolving_Art_of_Fuzzing.pdf) (PDF) - Jared DeMott\n* [AccelTest](http://www.lausd.net/istem/2know_files/Software_Manual.pdf) (PDF)\n* [A Step-by-Step Guide to Functional Testing with TestComplete](http://www2.smartbear.com/download-mqi-inbound-testcomplete-functional-testing-top-5-ebook-blog.html)\n* [HP Quality Center Tutorial](http://www.tutorialspoint.com/qc/index.htm)\n* [HP QuickTest Professional Tutorial](http://www.tutorialspoint.com/qtp/index.htm)\n* [.NET Performance Testing and Optimization - The Complete Guide](http://download.red-gate.com/ebooks/DotNet/Perf_Test_and_opt_eBook.zip) (zip) -  RedGate, By Paul Glavich and Chris Farrell\n* [Record-Playback Test Automation: Sahi & Selenium IDE](https://leanpub.com/manualToAutomatedWithSeleniumIDEAndSahi)\n* [Selenium 2.0 Using the WebDriver API to Create Robust User Acceptance Tests](http://refcardz.dzone.com/refcardz/getting-started-selenium-20#refcard-download-social-buttons-display)\n* [SoapUI 101: Beginner\'s Guide to Functional Testing](http://www2.smartbear.com/download-mqi-nbound-soapui-top-5-blast-ebook-blog.html)\n* [TestNG Tutorial](http://www.tutorialspoint.com/testng/index.htm)\n* [JUnit Tutorial](http://www.tutorialspoint.com/junit/index.htm)\n* [PropEr Testing](http://propertesting.com/) - Fred Hebert\n* [Better Unit Testing with Microsoft Fakes](https://social.technet.microsoft.com/wiki/contents/articles/11608.e-book-gallery-for-microsoft-technologies-en.aspx#Better_Unit_Testing_with_Microsoft_Fakes)\n* [Testing for Continuous Delivery with Visual Studio 2012](https://social.technet.microsoft.com/wiki/contents/articles/11608.e-book-gallery-for-microsoft-technologies-en.aspx#Testing_for_Continuous_Delivery)\n* [Testing mypy stubs, plugins, and types](https://sobolevn.me/2019/08/testing-mypy-types) - Nikita Sobolev\n\n#### Formal methods\n\n* [Learn TLA+](https://learntla.com) - Hillel Wayne @hwayne\n* [Specifying Systems](http://lamport.azurewebsites.net/tla/book.html) - Leslie Lamport\n* [The TLA+ Hyperbook](http://lamport.azurewebsites.net/tla/hyperbook.html) - Leslie Lamport\n* [Books and papers about TLA+ and formal verification by Leslie Lamport](https://www.microsoft.com/en-us/research/people/lamport/#)\n* [Alloy Documentation](http://alloy.mit.edu/alloy/documentation.html) - Daniel Jackson\n* [Introduction to Spin](http://spinroot.com/spin/Man/) - Multiple Authors\n* Software Foundations: [4.0](https://www.cis.upenn.edu/~bcpierce/sf/sf-4.0/), [current](https://www.cis.upenn.edu/~bcpierce/sf/current/index.html), [draft](https://softwarefoundations.cis.upenn.edu/draft/)\n, [epub](https://github.com/carliros/software-foundations-book) - Benjamin C. Pierce & Co\n* [Verified Functional Algorithms](http://www.cs.princeton.edu/~appel/vfa/) - Andrew W. Appel\n* [Foundations of Computer Science](https://www.cl.cam.ac.uk/teaching/1998/FoundsCS/) - Dr Larry Paulson\n* [Principles of Model Checking](https://pdfs.semanticscholar.org/f126/9591359fddc20f95da10c7bd4c054080b447.pdf) - Christel Baier, Joost-Pieter Katoen\n* [Certified Programming with Dependent Types](http://adam.chlipala.net/cpdt/) - Adam Chlipala @achlipala\n* [Formal Reasoning About Programs](http://adam.chlipala.net/frap/) - Adam Chlipala @achlipala\n* [Concrete Semantics](http://concrete-semantics.org/) - Tobias Nipkow and Gerwin Klein @lsf37\n* [ML for the Working Programmer, 2nd Edition](https://www.cl.cam.ac.uk/~lp15/MLbook/pub-details.html) - Lawrence C. Paulson\n* [Proofs and Types](http://www.paultaylor.eu/stable/Proofs+Types.html) - Jean-Yves Girard, Yves Lafont and Paul Taylor\n* [Proof assistants: History, ideas and future](http://www.ias.ac.in/article/fulltext/sadh/034/01/0003-0025) - H. Geuvers\n* [Introduction to Logic](http://logic.stanford.edu/intrologic/secondary/index.html) - Michael Genesereth, Eric Kao (Stanford University)\n* [An Introduction to Formal Logic](https://www.fecundity.com/codex/forallx.pdf) - P.D. Magnus (University at Albany)\n* [A Problem Course in Mathematical Logic](http://euclid.trentu.ca/math/sb/pcml/pcml-16.pdf) - Stefan Bilaniuk (Trent University)\n* [Language, Proof, and Logic](http://homepages.uc.edu/~martinj/Symbolic_Logic/341%20Syllabus,%20Textbook,%20Handouts,%20Notes/LPL%20textbook.pdf) - Jon Barwise, John Etchemendy\n* [Mathematical Logic](http://www.mathematik.uni-muenchen.de/~schwicht/lectures/logic/ws03/ml.pdf) - Helmut Schwichtenberg\n* [Mathematical Logic](http://www.personal.psu.edu/t20/notes/logic.pdf) - Stephen G. Simpson (Pennsylvania State University)\n* [Formal Logic](http://maude.sip.ucm.es/~miguelpt/papers/flogic.pdf) - Miguel Palomino\n* [Is Parallel Programming Hard, And, If So, What Can You Do About It?](https://github.com/paulmckrcu/perfbook/) (chapters "Validation" and "Formal verification") - Paul E. McKenney @paulmckrcu\n* [More books...](http://www.freetechbooks.com/index.php/formal-methods-f28.html)\n* [Formal Methods of Software Design](https://www.cs.utoronto.ca/~hehner/FMSD/)\n\n## In Russian\n\n#### \xd0\xa3\xd0\xbf\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb5\xd0\xba\xd1\x82\xd0\xb0\xd0\xbc\xd0\xb8\n\n* [\xd0\xa7\xd0\xb5\xd1\x80\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xba\xd0\xbd\xd0\xb8\xd0\xb3\xd0\xb0 \xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb4\xd0\xb6\xd0\xb5\xd1\x80\xd0\xb0](http://www.stratoplan.ru/free/mbb/) ([pdf](http://labs.stratoplan.ru/wmbook-03-01/black_book.pdf), [epub](http://labs.stratoplan.ru/wmbook-03-01/black_book.epub), [mobi](http://labs.stratoplan.ru/wmbook-03-01/black_book.mobi)) \xd0\xa1\xd0\xbb\xd0\xb0\xd0\xb2\xd0\xb0 \xd0\x9f\xd0\xb0\xd0\xbd\xd0\xba\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2\n* [\xd0\x91\xd0\xb5\xd0\xbb\xd0\xb0\xd1\x8f \xd0\xba\xd0\xbd\xd0\xb8\xd0\xb6\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xbe\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb4\xd0\xb6\xd0\xb5\xd1\x80\xd0\xb0](http://labs.stratoplan.ru/wmbook-03-01/) ([epub](http://labs.stratoplan.ru/wmbook-03-01/wmbook.epub), [mobi](http://labs.stratoplan.ru/wmbook-03-01/wmbook.mobi), [zip](http://labs.stratoplan.ru/wmbook-03-01/wmbook.zip))\n* \xd0\x9a\xd0\xb0\xd0\xba \xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd1\x8c \xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb4\xd0\xb6\xd0\xb5\xd1\x80\xd0\xbe\xd0\xbc ([pdf](http://labs.stratoplan.ru/wmbook-03-01/it_manager.pdf), [epub](http://labs.stratoplan.ru/wmbook-03-01/it_manager.epub), [mobi](http://labs.stratoplan.ru/wmbook-03-01/it_manager.mobi)) - \xd0\xa1\xd0\xbb\xd0\xb0\xd0\xb2\xd0\xb0 \xd0\x9f\xd0\xb0\xd0\xbd\xd0\xba\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2, \xd0\x90\xd0\xbb\xd0\xb5\xd0\xba\xd1\x81\xd0\xb0\xd0\xbd\xd0\xb4\xd1\x80 \xd0\x9e\xd1\x80\xd0\xbb\xd0\xbe\xd0\xb2\n* [It starts with a great product](https://www.intercom.com/books/product-management)\n\n#### \xd0\xa2\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\x9f\xd0\x9e\n\n* [Test-Driven Development in Practice](https://github.com/risik/tdd-book) - \xd0\xa1\xd0\xb5\xd1\x80\xd0\xb3\xd0\xb5\xd0\xb9 \xd0\x91\xd0\xbe\xd1\x80\xd0\xb8\xd1\x81\xd0\xbe\xd0\xb2\n* [\xd0\xa2\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbe\xd0\xb1\xd0\xb5\xd1\x81\xd0\xbf\xd0\xb5\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f. \xd0\x91\xd0\xb0\xd0\xb7\xd0\xbe\xd0\xb2\xd1\x8b\xd0\xb9 \xd0\xba\xd1\x83\xd1\x80\xd1\x81.](http://svyatoslav.biz/software_testing_book/) - \xd0\xa1\xd0\xb2\xd1\x8f\xd1\x82\xd0\xbe\xd1\x81\xd0\xbb\xd0\xb0\xd0\xb2 \xd0\x9a\xd1\x83\xd0\xbb\xd0\xb8\xd0\xba\xd0\xbe\xd0\xb2\n* [\xd0\x92\xd1\x81\xd1\x91, \xd1\x87\xd1\x82\xd0\xbe \xd0\xb2\xd0\xb0\xd0\xbc \xd0\xbd\xd1\x83\xd0\xb6\xd0\xbd\xd0\xbe \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x82\xd1\x8c \xd0\xbe \xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd1\x82\xd0\xb0\xd1\x85 \xd0\xbe\xd1\x82\xd1\x87\xd1\x91\xd1\x82\xd0\xbe\xd0\xb2 \xd0\xb2 \xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb8 \xd0\x9f\xd0\x9e](https://gist.github.com/ligurio/6efa8576e175fa0fb5d04cfe5c85a2a5) - \xd0\xa1\xd0\xb5\xd1\x80\xd0\xb3\xd0\xb5\xd0\xb9 \xd0\x91\xd1\x80\xd0\xbe\xd0\xbd\xd0\xbd\xd0\xb8\xd0\xba\xd0\xbe\xd0\xb2\n* [\xd0\xa0\xd1\x83\xd0\xba\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xb4\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe \xd0\xbf\xd0\xbe \xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8e \xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbe\xd0\xbf\xd1\x8b\xd1\x82\xd0\xb0 \xd0\xb4\xd0\xbb\xd1\x8f \xd1\x81\xd0\xb0\xd0\xb9\xd1\x82\xd0\xbe\xd0\xb2, \xd0\xbc\xd0\xbe\xd0\xb1\xd0\xb8\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbf\xd1\x80\xd0\xb8\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \xd0\xb8 \xd0\xbf\xd1\x80\xd0\xbe\xd1\x82\xd0\xbe\xd1\x82\xd0\xb8\xd0\xbf\xd0\xbe\xd0\xb2](https://uxcrowd.ru/file/guide.pdf)\n* [\xd0\x90\xd0\xb2\xd1\x82\xd0\xbe\xd0\xbc\xd0\xb0\xd1\x82\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbe\xd1\x82 \xc2\xab\xd0\x90\xc2\xbb \xd0\xb4\xd0\xbe \xc2\xab\xd0\xab\xc2\xbb](https://alpaev.com/testautomation/) - Gennadiy Alpaev\n* [\xd0\xa3\xd1\x87\xd0\xb5\xd0\xb1\xd0\xbd\xd0\xb8\xd0\xba \xd0\xbf\xd0\xbe SilkTest](https://alpaev.com/silktest/) - Gennadiy Alpaev\n* [\xd0\xa3\xd1\x87\xd0\xb5\xd0\xb1\xd0\xbd\xd0\xb8\xd0\xba \xd0\xbf\xd0\xbe TestComplete](https://alpaev.com/testcomplete/) - Gennadiy Alpaev\n\n#### \xd0\xa4\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd1\x8b\n\n* [\xd0\x92\xd0\xb5\xd1\x80\xd0\xb8\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd0\xbe\xd0\xbc Model Checking](http://intsys.msu.ru/staff/mironov/modelchk.pdf) - \xd0\x90.\xd0\x9c.\xd0\x9c\xd0\xb8\xd1\x80\xd0\xbe\xd0\xbd\xd0\xbe\xd0\xb2\n* [\xd0\x9f\xd1\x80\xd0\xb0\xd0\xba\xd1\x82\xd0\xb8\xd0\xba\xd1\x83\xd0\xbc \xd0\xbf\xd0\xbe \xd0\xbc\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbc\xd0\xb0\xd1\x82\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xbe\xd0\xb9 \xd0\xbb\xd0\xbe\xd0\xb3\xd0\xb8\xd0\xba\xd0\xb5. Coq.](http://www.mi.ras.ru/~sk/lehre/coq/coq_pract.pdf)\n\n# Courses\n\n## In English\n\n* [Software Engineering: Introduction](https://www.edx.org/course/software-engineering-introduction-ubcx-softeng1x)\n* [Software Debugging](https://www.udacity.com/course/software-debugging--cs259)\n* [Software Analysis & Testing](https://www.udacity.com/course/software-analysis-testing--ud333)\n* [Fundamentals of TDD](https://thoughtbot.com/upcase/fundamentals-of-tdd)\n* [Critical Reasoning for Beginners](http://podcasts.ox.ac.uk/series/critical-reasoning-beginners)\n* [Reasoning Across the Disciplines](https://ru.coursera.org/learn/critical-reasoning)\n* [Discrete Mathematics and Probability Theory](https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iDze6fOp3qofgyjJVUioedA)\n* [Mathematical Logic](https://www.youtube.com/playlist?list=PL2EB5662A0D455A81&feature=plcp)\n* [Engineering Ethics](https://ocw.mit.edu/courses/engineering-systems-division/esd-932-engineering-ethics-spring-2006/audio-lectures/)\n* [Engineering Ethics](https://itunes.apple.com/us/course/engineering-ethics/id1039496124?ign-mpt=uo%3D8)\n* Software Development Process: [Part 1](https://www.youtube.com/playlist?list=PLAwxTw4SYaPkNAtqsKcFkUGpf4j67NBaz), [Part 2](https://www.youtube.com/playlist?list=PLAwxTw4SYaPm8PAGH7ov2Bj-nG4sXgCtJ), [Part 3](https://www.youtube.com/playlist?list=PLAwxTw4SYaPkoQFThzsc9e7Fe3QV_KJCs)\n* [Test Automation Universities](https://testautomationu.applitools.com/) (free)\n    - [Java Web UI Path](https://testautomationu.applitools.com/learningpaths.html?id=web-ui-java-path)\n    - [Java API Path](https://testautomationu.applitools.com/learningpaths.html?id=api-java-path)\n    - [Java Mobile Path](https://testautomationu.applitools.com/learningpaths.html?id=mobile-java-path)\n    - [JavaScript Web UI Path](https://testautomationu.applitools.com/learningpaths.html?id=web-ui-javascript-path)\n    - [JavaScript API Path](https://testautomationu.applitools.com/learningpaths.html?id=api-javascript-path)\n    - [JavaScript Mobile Path](https://testautomationu.applitools.com/learningpaths.html?id=mobile-javascript-path)\n    - [Python Web UI Path](https://testautomationu.applitools.com/learningpaths.html?id=web-ui-python-path)\n    - [Python Mobile Path](https://testautomationu.applitools.com/learningpaths.html?id=mobile-python-path)\n    - [C# Web UI Path](https://testautomationu.applitools.com/learningpaths.html?id=web-ui-csharp-path)\n    - [Ruby Web UI Path](https://testautomationu.applitools.com/learningpaths.html?id=web-ui-ruby-path)\n    - [Swift Mobile Path](https://testautomationu.applitools.com/learningpaths.html?id=mobile-swift-path)\n    - [Codeless Path](https://testautomationu.applitools.com/learningpaths.html?id=codeless-path)\n\n#### Software Testing\n\n* [Black Box Software Testing course](http://www.testingeducation.org/BBST/) - Cem Kaner, J.D. Ph.D.\n* [Software Testing](http://nptel.ac.in/courses/106105150/)\n* [Embedded Software Testing](http://nptel.ac.in/courses/117106112/)\n* [Software Testing Fundamentals](https://www.edx.org/course/software-testing-fundamentals-usmx-university-maryland-university-stv1-1x)\n* [Software Testing Methods](https://www.udacity.com/course/software-testing--cs258)\n* [QA Academy](https://github.com/TelerikAcademy/QA-Academy)\n* [QA and Automation course](https://github.com/HackBulgaria/QA-and-Automation-101)\n* [Software Testing and Verification](https://www.edx.org/micromasters/software-testing-verification)\n* [Introduction to Software Testing](https://alison.com/course/introduction-to-software-testing)\n* [Software Testing - Black-box Strategies and White-box Testing](https://alison.com/course/software-testing-black-box-strategies-and-white-box-testing)\n* [Diploma in Software Testing](https://alison.com/course/diploma-in-software-testing)\n* [Software Testing - Testing Levels and Object-Oriented Program Testing](https://alison.com/course/software-testing-testing-levels-and-object-oriented-program-testing)\n* [Software Testing - Condition Coverage and Mutation Testing Strategies](https://alison.com/course/software-testing-condition-coverage-and-mutation-testing-strategies)\n* [Software Testing Training](https://www.youtube.com/playlist?list=PLDC2A0C8D2EC934C7)\n* [Quality Center Training](https://www.youtube.com/playlist?list=PL2CA3A709452D4E27)\n* [QTP Training](https://www.youtube.com/playlist?list=PLF20D996D82993E79)\n* [Selenium Tutorials](https://www.guru99.com/selenium-tutorial.html)\n* [Selenium WebDriver Course](https://thefriendlytester.co.uk/selenium/course/)\n* [Software Testing](https://www.youtube.com/playlist?list=PL-_cKNuVAYAWZGuyAFu8TC9I41aJ3nHIf) - Mauro Pezz\n\n#### Fuzz testing\n\n* [Intro: Unknown vulnerability management and discovery using fuzzing](https://vimeo.com/88662183)\n* [Part 1: What are unknown vulnerabilities and why should I care](https://vimeo.com/88676857)\n* [Part 2: What is fuzz testing, and where does it fit in the world of software?](https://vimeo.com/89234167)\n* [Part 3: How and why fuzz testing, and managing your unknown vulnerabilities saves money](https://vimeo.com/89974203)\n* [Part 4: Fuzz testing techniques: unfuzzing the fuzzing](https://vimeo.com/90074270)\n\n#### Software Testing Management\n\n* [Software Testing Management](https://www.edx.org/course/software-testing-management-usmx-university-maryland-university-stv1-2x)\n\n#### User Testing\n\n* [Introduction to User Testing](https://ru.coursera.org/learn/ui-testing/lecture/aal6p/introduction-to-user-testing)\n\n#### Security Testing\n\n* [Software security](https://ru.coursera.org/learn/software-security)\n\n#### Performance Testing\n\n* [Performance Engineering of Software Systems](https://www.youtube.com/playlist?list=PLD2AE32F507F10481&feature=plcp)\n* [LoadRunner Tutorials](https://www.youtube.com/playlist?list=PLFB7DB42D42A7C31C)\n* [Computer Systems Analysis](http://www.cs.wustl.edu/~jain/cse567-06/index.html)\n\n#### Formal Software Verification\n\n* [Formal Specification](http://www.macs.hw.ac.uk/~gabbay/F28FS/)\n* [Formal Software Verification](https://www.edx.org/course/formal-software-verification-usmx-umuc-stv1-3x) and [Formal Software Verification (previous page of the course)](https://www.edx.org/course/formal-software-verification-usmx-university-maryland-university-stv1-3x)\n* [Logic, Languages, Compilation, and Verification](https://www.cs.uoregon.edu/research/summerschool/summer12/curriculum.html) ([Youtube](https://www.youtube.com/user/nrolland/playlists))\n* [A survey of automated theorem proving](http://compsciclub.ru/en/courses/theoremproving/2013-autumn/)\n* [Tutorials and advanced lectures](http://www.cse.chalmers.se/research/group/logic/Types/tutorials.html)\n* [Types Project](http://www.cse.chalmers.se/research/group/logic/Types/index.html)\n* [Introduction to Formal Systems and Computation](https://itunes.apple.com/us/itunes-u/csci-e-207-introduction-to/id429428100?ign-mpt=uo%3D8)\n* [CSE 814 Formal Methods in Software Engineering ](https://cse.msu.edu/~cse814/) ```Slides```\n* [A survey of automated theorem proving](https://www.youtube.com/playlist?list=PL-_cKNuVAYAW9pBFvmGr37foLBDIRGxMi) - John Harrison\n\n##### Coq\n\n* [Coq in a Hurry](https://cel.archives-ouvertes.fr/file/index/docid/72365/filename/coq-hurry.pdf)\n* [Introduction to the Coq Proof Assistant](https://video.ias.edu/univalent/appel)\n* [Coq Intensive](https://www.youtube.com/playlist?list=PLovJjGVqXXf3RgVdCXH96pPwSjFLDhSri) - DeepSpec Summer School\n* [Interactive Computer Theorem Proving](http://adam.chlipala.net/itp/)\n* [Coq tutorials](https://www.youtube.com/playlist?list=PLDD40A96C2ED54E99)\n* [Type Theory and Coq](http://www.cs.ru.nl/~freek/courses/tt-2011/)\n* [Logical Verification](http://www.cs.vu.nl//~jbe248/lv2017/)\n* [Modelling and verifying algorithms in Coq: an introduction](https://www.di.ens.fr/~zappa/teaching/coq/ecole10/)\n* [Formal Reasoning About Programs](https://frap.csail.mit.edu/main)\n* [Software foundations in Coq 0.1](https://www.youtube.com/watch?v=KKrD4JcfW90&list=PLGCr8P_YncjUT7gXUVJWSoefQ40gTOz89) - Benjamin Pierce\n* [Compiler Certification](https://www.youtube.com/watch?v=-UdPqZTqExM&list=PLGCr8P_YncjUX7yHchN7KSS83KXMHmC6e) \xe2\x80\x94 Xavier Leroy\n\n##### Isabelle/HOL\n\n* [Advanced Topics in Software Verification](https://www.cse.unsw.edu.au/~cs4161/16s2/)\n* [Theorem Proving - Principles, Techniques, Applications](https://www.cse.unsw.edu.au/~kleing/teaching/thprv-04/index.html)\n\n##### Agda\n\n* [Programming Language Foundations in Agda](https://plfa.github.io/) ```Book```\n\n##### Model Checking\n\n* SPIN/Promela [Model Checking Concurrent Programs](http://cnx.org/content/col10294/1.3)\n* [Software Verification](https://www.youtube.com/playlist?list=PL-_cKNuVAYAUsh0QIh_zd58V4Ekmer23D) - Natasha Sharygina\n* [Alloy Courses](http://alloytools.org/citations/courses.html)\n* [The TLA+ Video Course](http://lamport.azurewebsites.net/video/videos.html)\n* [Dr. TLA+ Series](https://github.com/tlaplus/DrTLAPlus)\n* [Theorem Proving and Model Checking in PVS](https://www.cs.cmu.edu/~emc/15-820A/) - Edmund M. Clarke\n* mCRL2 [System Validation: Automata and behavioural equivalences](https://www.coursera.org/learn/automata-system-validation)\n* mCRL2 [System Validation (2): Model process behaviour](https://www.coursera.org/learn/system-validation-behavior)\n* mCRL2 [System Validation (3): Requirements by modal formulas](https://www.coursera.org/learn/system-validation-modal-formulas)\n* mCRL2 [System Validation (4): Modelling Software, Protocols, and other behaviour](https://www.coursera.org/learn/system-validation-software-protocols)\n\n## In Russian\n\n* [\xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd1\x8b \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb8\xd0\xbd\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb5\xd1\x80\xd0\xb8\xd0\xb8](https://compscicenter.ru/courses/seintro/2012-spring/), [Youtube](https://www.youtube.com/playlist?list=PL-_cKNuVAYAWPPoDKwsZJcyOWmNiVPT4D) - \xd0\x92\xd0\xbb\xd0\xb0\xd0\xb4\xd0\xb8\xd0\xbc\xd0\xb8\xd1\x80 \xd0\x98\xd1\x86\xd1\x8b\xd0\xba\xd1\x81\xd0\xbe\xd0\xbd\n- [\xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd1\x8b \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb8\xd0\xbd\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb5\xd1\x80\xd0\xb8\xd0\xb8 (SWEBOK 2004 \xd0\xbd\xd0\xb0 \xd1\x80\xd1\x83\xd1\x81\xd1\x81\xd0\xba\xd0\xbe\xd0\xbc) \xd0\xb2 EPUB \xd0\xb8 HTML](https://github.com/ligurio/swebok-ru)\n* [\xd0\x92\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb2 \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd0\xbd\xd1\x83\xd1\x8e \xd0\xb8\xd0\xbd\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb5\xd1\x80\xd0\xb8\xd1\x8e](http://www.intuit.ru/studies/courses/497/353/info)\n* [\xd0\x92\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb2 \xd1\x82\xd0\xb5\xd1\x85\xd0\xbd\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb3\xd0\xb8\xd1\x8e \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f](http://www.intuit.ru/studies/courses/2262/160/info)\n* [\xd0\xae\xd0\xbd\xd0\xb8\xd1\x82-\xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb8 \xd0\xbc\xd0\xb5\xd1\x82\xd1\x80\xd0\xb8\xd0\xba\xd0\xb8 \xd0\xbf\xd0\xbe\xd0\xba\xd1\x80\xd1\x8b\xd1\x82\xd0\xb8\xd1\x8f \xd0\xba\xd0\xbe\xd0\xb4\xd0\xb0 \xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb0\xd0\xbc\xd0\xb8](https://www.lektorium.tv/lecture/13635)\n* [\xd0\x9c\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd1\x8b \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0 \xd0\xb8 \xd0\xbe\xd0\xb1\xd0\xb5\xd1\x81\xd0\xbf\xd0\xb5\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xba\xd0\xb0\xd1\x87\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0 \xd0\x9f\xd0\x9e](http://kspt.icc.spbstu.ru/course/QA)\n\n#### \xd0\xa2\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\x9f\xd0\x9e\n\n* [\xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd1\x8b \xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbe\xd0\xb1\xd0\xb5\xd1\x81\xd0\xbf\xd0\xb5\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f](http://universarium.org/course/526)\n* [\xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd1\x8b \xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\x9f\xd0\x9e](https://itvdn.com/ru/video/testing-process)\n* [\xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd1\x8b \xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbe\xd0\xb1\xd0\xb5\xd1\x81\xd0\xbf\xd0\xb5\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f](http://www.intuit.ru/studies/courses/48/48/info)\n* [\xd0\xa8\xd0\xba\xd0\xbe\xd0\xbb\xd0\xb0 \xd0\xb0\xd0\xb2\xd1\x82\xd0\xbe\xd0\xbc\xd0\xb0\xd1\x82\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8 \xd0\xbf\xd1\x80\xd0\xbe\xd1\x86\xd0\xb5\xd1\x81\xd1\x81\xd0\xbe\xd0\xb2 \xd1\x80\xd0\xb0\xd0\xb7\xd1\x80\xd0\xb0\xd0\xb1\xd0\xbe\xd1\x82\xd0\xba\xd0\xb8](https://academy.yandex.ru/events/testing/spb-2014/)\n* [\xd0\xa8\xd0\xba\xd0\xbe\xd0\xbb\xd0\xb0 \xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb1\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xb5\xd1\x80\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x81\xd0\xb8\xd1\x81\xd1\x82\xd0\xb5\xd0\xbc\xd1\x8b](https://academy.yandex.ru/events/testing/msk-2014/)\n* [Software Testing](http://compsciclub.ru/courses/softwaretesting/2008-spring/)\n* Software Testing 101 ([\xd0\xbd\xd0\xb0 \xd0\xb0\xd0\xbd\xd0\xb3\xd0\xbb\xd0\xb8\xd0\xb9\xd1\x81\xd0\xba\xd0\xbe\xd0\xbc](http://kspt.ftk.spbstu.ru/media/files/people/akhin/lectures/Software-Testing-101.pdf), [\xd0\xbd\xd0\xb0 \xd1\x80\xd1\x83\xd1\x81\xd1\x81\xd0\xba\xd0\xbe\xd0\xbc](http://kspt.icc.spbstu.ru/media/files/people/akhin/lectures/Software-Testing-101-ru.pdf))\n* [Software Testing 102](http://kspt.icc.spbstu.ru/media/files/people/akhin/lectures/Software-Testing-102v2.pdf)\n* [Software Testing 103](http://kspt.icc.spbstu.ru/media/files/people/akhin/lectures/Software-Testing-102v3.pdf)\n* [\xd0\xa2\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\x9f\xd0\x9e](http://kspt.icc.spbstu.ru/2014/course/software-testing)\n* \xd0\xa8\xd0\xba\xd0\xbe\xd0\xbb\xd0\xb0 \xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f: [\xd0\xa0\xd1\x83\xd1\x87\xd0\xbd\xd0\xbe\xd0\xb5 \xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb8 \xd0\x90\xd0\xb2\xd1\x82\xd0\xbe\xd0\xbc\xd0\xb0\xd1\x82\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f](https://academy.yandex.ru/events/testing/spb-2016/) ([Youtube](https://www.youtube.com/playlist?list=PLJMRN_6MT0JYItlUeor7YRa0r6-lI8MMR))\n* [\xd0\xa2\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb5 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9](https://www.lektorium.tv/course/22774) ([\xd1\x81\xd0\xbb\xd0\xb0\xd0\xb9\xd0\xb4\xd1\x8b](http://compsciclub.ru/media/slides/modelbasedtesting_2010_spring/2010_04_25_modelbasedtesting_2010_spring_m98ClS2.pdf)), [Youtube](https://www.youtube.com/playlist?list=PL-_cKNuVAYAU1LAGzq5S0ARQjXs3TAY3K) - \xd0\x9a\xd1\x83\xd0\xbb\xd1\x8f\xd0\xbc\xd0\xb8\xd0\xbd \xd0\x92\xd0\xb8\xd0\xba\xd1\x82\xd0\xbe\xd1\x80\n* [\xd0\xa1\xd0\xb5\xd1\x80\xd0\xb8\xd1\x8f \xd1\x81\xd0\xb5\xd0\xbc\xd0\xb8\xd0\xbd\xd0\xb0\xd1\x80\xd0\xbe\xd0\xb2 \xd0\xbf\xd0\xbe \xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8e (\xd0\xb0\xd0\xb2\xd1\x82\xd0\xbe\xd0\xbc\xd0\xb0\xd1\x82\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f)](https://www.youtube.com/playlist?list=PL-_cKNuVAYAV4VSQQK5AWMBImQ8kf6cnr) - \xd0\xa1\xd0\xb5\xd1\x80\xd0\xb3\xd0\xb5\xd0\xb9 \xd0\x90\xd0\xbd\xd0\xb4\xd1\x80\xd0\xb5\xd0\xb5\xd0\xb2\n* [\xd0\xa2\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\x9f\xd0\x9e: \xd0\x91\xd0\xb0\xd0\xb7\xd0\xbe\xd0\xb2\xd1\x8b\xd0\xb9 \xd1\x83\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb5\xd0\xbd\xd1\x8c](https://stepik.org/course/16478) - \xd0\xba\xd1\x83\xd1\x80\xd1\x81 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd0\xb5 \xd0\xbe\xd0\xb1\xd1\x83\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f "\xd0\xa1\xd0\xb5\xd1\x80\xd1\x82\xd0\xb8\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb9 \xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd1\x89\xd0\xb8\xd0\xba \xd0\x9f\xd0\x9e \xd0\x91\xd0\xb0\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xb3\xd0\xbe \xd1\x83\xd1\x80\xd0\xbe\xd0\xb2\xd0\xbd\xd1\x8f" ISTQB \xd0\xb8 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd0\xb0\xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb3\xd0\xbe\xd1\x82\xd0\xbe\xd0\xb2\xd0\xba\xd0\xb8 \xd0\xba \xd1\x81\xd0\xb4\xd0\xb0\xd1\x87\xd0\xb5 \xd1\x81\xd0\xb5\xd1\x80\xd1\x82\xd0\xb8\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0\xd1\x86\xd0\xb8\xd0\xbe\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x8d\xd0\xba\xd0\xb7\xd0\xb0\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbe\xd0\xb2\n\n#### \xd0\xa4\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xb2\xd0\xb5\xd1\x80\xd0\xb8\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\x9f\xd0\x9e\n\n* [\xd0\x92\xd0\xb5\xd1\x80\xd0\xb8\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc \xd0\xbd\xd0\xb0 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8f\xd1\x85](https://www.youtube.com/user/ksavenkov/playlists)\n* [\xd0\x92\xd0\xb5\xd1\x80\xd0\xb8\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\xbf\xd0\xb0\xd1\x80\xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb8 \xd1\x80\xd0\xb0\xd1\x81\xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x81\xd0\xb8\xd1\x81\xd1\x82\xd0\xb5\xd0\xbc](https://www.lektorium.tv/course/22862?id=22862) ([Youtube](https://www.youtube.com/playlist?list=PL-_cKNuVAYAUw3pNeradNr8zwOXKQ1IZA) - \xd0\xae\xd1\x80\xd0\xb8\xd0\xb9 \xd0\x9a\xd0\xb0\xd1\x80\xd0\xbf\xd0\xbe\xd0\xb2\n* [\xd0\xa4\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd1\x8b \xd0\xbe\xd0\xb1\xd0\xb5\xd1\x81\xd0\xbf\xd0\xb5\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xba\xd0\xb0\xd1\x87\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0 \xd0\x9f\xd0\x9e](http://kspt.icc.spbstu.ru/2010/course/quality)\n* [\xd0\x92\xd0\xb5\xd1\x80\xd0\xb8\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbe\xd0\xb1\xd0\xb5\xd1\x81\xd0\xbf\xd0\xb5\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f](http://www.intuit.ru/studies/courses/1040/209/info)\n* [Software Verification](http://compsciclub.ru/courses/softwareverification/2008-spring/)\n* [\xd0\x92\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb2 \xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd1\x8b \xd0\xb2\xd0\xb5\xd1\x80\xd0\xb8\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8 \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc](http://sp.cs.msu.ru/courses/vmp/kamkin_mc2018.pdf) -- \xd0\x90.\xd0\xa1. \xd0\x9a\xd0\xb0\xd0\xbc\xd0\xba\xd0\xb8\xd0\xbd\n* [\xd0\x9c\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd1\x8b \xd0\xb2\xd0\xb5\xd1\x80\xd0\xb8\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8 \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbe\xd0\xb1\xd0\xb5\xd1\x81\xd0\xbf\xd0\xb5\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f](https://www.ispras.ru/publications/2008/methods_of_software_verification/) -- \xd0\x92.\xd0\x92. \xd0\x9a\xd1\x83\xd0\xbb\xd1\x8f\xd0\xbc\xd0\xb8\xd0\xbd\n* [\xd0\xa4\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x81\xd0\xbf\xd0\xb5\xd1\x86\xd0\xb8\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\xb8 \xd0\xb2\xd0\xb5\xd1\x80\xd0\xb8\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc](https://www.youtube.com/playlist?list=PLk5aZ4JAk_ZO32dammZRXxnSGhUSjOJzZ) ([\xd0\xbf\xd1\x80\xd0\xb0\xd0\xba\xd1\x82\xd0\xb8\xd0\xba\xd1\x83\xd0\xbc](http://mfsp.cmc.msu.ru/w/wp-content/uploads/2015/07/Deductive-Verification-Practicum.pdf))\n* [\xd0\x92\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb2 \xd1\x8f\xd0\xb7\xd1\x8b\xd0\xba \xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb2\xd0\xb5\xd1\x80\xd0\xb8\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8 Coq](https://compsciclub.ru/courses/intro-to-coq/2019-autumn/about/) - \xd0\x90\xd0\xbd\xd1\x82\xd0\xbe\xd0\xbd \xd0\xa2\xd1\x80\xd1\x83\xd0\xbd\xd0\xbe\xd0\xb2\n* [\xd0\x92\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb2 \xd0\xb2\xd0\xb5\xd1\x80\xd0\xb8\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8e \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc](https://www.youtube.com/playlist?list=PLQ-XJe6nVU5BwX1gV80aDhwW0Jt3tipIY) - \xd0\x90\xd0\xbd\xd1\x82\xd0\xbe\xd0\xbd \xd0\xa2\xd1\x80\xd1\x83\xd0\xbd\xd0\xbe\xd0\xb2 (\xd1\x81\xd0\xbf\xd0\xb5\xd1\x86\xd0\xba\xd1\x83\xd1\x80\xd1\x81 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\x9c\xd0\xa4\xd0\xa2\xd0\x98)\n\n# Workshops and interactive learning tools\n\n- Anki:\n    - [Software Testing](https://github.com/datateknik-lth/datateknik-lth/tree/master/ETS200-softwaretesting)\n    - [Foundations of Software Testing - Glossary](https://ankiweb.net/shared/info/834818027)\n    - [ISTQB Glossary of Terms in Software testing](https://ankiweb.net/shared/info/837841315)\n    - [Coding and Design](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards)\n    - [Design Patterns](https://ankiweb.net/shared/info/701549605)\n    - [Object Oriented Design Patterns](https://ankiweb.net/shared/info/1202033519)\n    - [Regular Expressions](https://ankiweb.net/shared/info/1355137499)\n    - [106 Linux Commands](https://ankiweb.net/shared/info/142660396)\n    - [Bash Command Line For Linux](https://ankiweb.net/shared/info/1950743421)\n    - [LPIC 101 and 102](https://ankiweb.net/shared/info/1818363239)\n    - [SQL basics](https://ankiweb.net/shared/info/40406665)\n    - [Distributed Computing](https://ankiweb.net/shared/info/1688786699)\n    - [Learn how to design large-scale systems](https://github.com/donnemartin/system-design-primer)\n- [Testing Mnemonics Game](http://mnemonics.brainforit.com/)\n- [The Deadlock Empire: Slay dragons, learn concurrency!](https://deadlockempire.github.io)\n- [Learn TLA](https://learntla.com/introduction/)\n- [tla_workshop](https://github.com/parlarjb/tla_workshop)\n- [test-anything](https://github.com/finnp/test-anything)\n- https://math-comp.github.io/mcb/\n- [LibFuzzer Wokshop](https://github.com/Dor1s/libfuzzer-workshop)\n- [LibFuzzer Tutorial](https://github.com/google/fuzzer-test-suite/blob/master/tutorial/libFuzzerTutorial.md)\n- [Interactive Z3 Guide](https://rise4fun.com/z3/tutorial/guide)\n- [Code-defenders game (mutation testing)](http://code-defenders.org/)\n- [RoboBUG: A Debugging Game](http://www.sqrlab.ca/software/robobug/)\n- [Robot ON! A Program Understanding Game](http://www.sqrlab.ca/software/roboton/)\n- [FireFinder](http://www.sqrlab.ca/software/firefinder/)\n- [Threaded Paws: A Concurrency Game](http://www.sqrlab.ca/software/threadedpaws/)\n- [Verigames](http://verigames.com/)\n- [Edukera](https://www.edukera.com/)\n\n# Conferences\n\n* [Software Testing Conferences](http://testingconferences.org/)\n\n# Podcasts\n\nsee [podcasts](podcasts.md)\n\n# Bugs and Learned Lessons\n\n* [NASA Public Lessons Learned System](https://llis.nasa.gov/)\n* [Flight Software Engineering Lessons](http://aisel.aisnet.org/cgi/viewcontent.cgi?article=1671&context=amcis2009)\n* [Forum on Risks to the Public in Computers and Related Systems](http://catless.ncl.ac.uk/Risks/)\n* [CPU Bugs](https://wiki.osdev.org/CPU_Bugs)\n* [Illustrative Risks to the Public in the Use of Computer Systems and Related Technology](http://www.csl.sri.com/users/neumann/illustrative.html)\n* [Wikipedia: List of software bugs](https://en.wikipedia.org/wiki/List_of_software_bugs)\n* [Postmortems](https://github.com/danluu/post-mortems)\n\n# Awesome Lists\n\n- [Resources for Teaching with Formal Methods](https://avigad.github.io/formal_methods_in_education/)\n- Fuzzing testing by [secfigo](https://github.com/secfigo/Awesome-Fuzzing) and by [cpuu](https://github.com/cpuu/awesome-fuzzing)\n- [Mutation testing](https://github.com/theofidry/mutation-testing)\n- [Chaos Engineering](https://github.com/dastergon/awesome-chaos-engineering)\n- [Static analysis](https://github.com/mre/awesome-static-analysis)\n- [TAP (Test Anything Protocol)](https://github.com/sindresorhus/awesome-tap)\n- [Awesome Testing](https://github.com/TheJambo/awesome-testing)\n- [Symbolic execution](https://github.com/ksluckow/awesome-symbolic-execution)\n- [History of symbolic execution](https://github.com/enzet/symbolic-execution)\n- [awesome-provable](https://github.com/awesomo4000/awesome-provable)\n- [Visual regression testing](https://github.com/mojoaxel/awesome-regression-testing)\n- [UI Automation Tools](https://github.com/pywinauto/pywinauto/wiki/UI-Automation-tools-ratings)\n- [List of verification and synthesis tools](https://github.com/johnyf/tool_lists/blob/master/verification_synthesis.md)\n- [Testing of distributed systems](https://github.com/asatarin/testing-distributed-systems)\n- [SecLists](https://github.com/danielmiessler/SecLists) - collection of multiple types of lists used during security assessments, collected in one place.\n- [Awesome Falsehood](https://github.com/kdeldycke/awesome-falsehood)\n- [Awesome Appium](https://github.com/SrinivasanTarget/awesome-appium#readme)\n- [Awesome AutoIt](https://github.com/J2TEAM/awesome-AutoIt)\n- [Awesome Coq](https://github.com/uhub/awesome-coq)\n- [Awesome Selenium](https://github.com/christian-bromann/awesome-selenium)\n- [Awesome Tsung](https://github.com/aliesbelik/awesome-tsung)\n- [Awesome JMeter](https://github.com/aliesbelik/awesome-jmeter)\n\n### License\n\n[![CC0 Public Domain](http://i.creativecommons.org/p/zero/1.0/88x31.png)](http://creativecommons.org/publicdomain/zero/1.0/)\n\nTo the extent possible under law, [Sergey Bronnikov](https://bronevichok.ru) has\nwaived all copyright and related or neighboring rights to this work.\n'