b'<a href="https://badssl.com/">\n  <img src="./badssl.png" alt="" width="472" height="68">\n</a>\n\nVisit [`badssl.com`](https://badssl.com/) for a list of test subdomains, including:\n\n- [`self-signed.badssl.com`](https://self-signed.badssl.com)\n- [`expired.badssl.com`](https://expired.badssl.com)\n- [`mixed.badssl.com`](https://mixed.badssl.com)\n- [`rc4.badssl.com`](https://rc4.badssl.com)\n- [`hsts.badssl.com`](https://hsts.badssl.com)\n\n## Server Setup\n\nStock Ubuntu VM, DNS A records for `badssl.com.` and `*.badssl.com.` pointing to the VM.\n\n### Testing and development\n\n1. Follow the instructions to [install Docker.](https://www.docker.com/get-docker)\n2. Clone into the badssl repo by running `git clone https://github.com/chromium/badssl.com && cd badssl.com`.\n3. In order to access the various badssl subdomains locally you will need to add them to your [system hosts file](https://bencane.com/2013/10/29/managing-dns-locally-with-etchosts/). Run `make list-hosts` and copy and paste the output into `/etc/hosts`.\n4. Start Docker by running `make serve`.\n5. You can now navigate to `badssl.test` in your browser, and you should see a certificate error.\n6. The badssl root certificate is at `certs/sets/test/gen/crt/ca-root.crt`. In order to get the rest of the badssl subdomains working, you will need to add this to your machine\'s list of trusted certificates.\n    - On `macOS`, drag `certs/sets/test/gen/crt/ca-root.crt` into the login section of the program Keychain Access. A BadSSL Root Certificate Authority entry should appear in the list. Double-click on this entry and select "Always Trust" from the drop-down menu next to "Secure Sockets Layer (SSL)." Close the window to save your changes.\n\n      If you are already familiar with this process, you can instead run this command:\n\n      ```sh\n      security add-trusted-cert -r trustRoot -p ssl \\\n        -k "$HOME/Library/Keychains/login.keychain" certs/sets/test/gen/crt/ca-root.crt\n      ```\n\n7. In order to preserve the client and root certificates even after running `make clean`, run:\n\n```sh\ncd certs/sets/test\nmkdir -p pregen/crt pregen/key\ncp gen/crt/ca-root.crt pregen/crt/ca-root.crt\ncp gen/crt/client.crt pregen/crt/client.crt\ncp gen/crt/client-ca-root.crt pregen/crt/client-ca-root.crt\ncp gen/key/ca-root.key pregen/key/ca-root.key\ncp gen/key/client.key pregen/key/client.key\ncp gen/key/client-ca-root.key pregen/key/client-ca-root.key\n```\n\n## Acknowledgments\n\nbadssl.com is hosted on Google Cloud infrastructure and co-maintained by:\n\n- [April King](https://github.com/april), Mozilla Firefox\n- [Lucas Garron](https://github.com/lgarron), formerly Google Chrome\n- [Chris Thompson](https://github.com/christhompson), Google Chrome\n\nSeveral public badssl.com certificates required special issuance processes. Most certificates were graciously issued for free, thanks to help from:\n\n- [Vincent Lynch](https://twitter.com/vtlynch), [The SSL Store](https://www.thesslstore.com/) (`sha1-2016`, `sha1-2017`)\n- [Richard Barnes](https://twitter.com/rlbarnes), Mozilla (`1000-sans`, `10000-sans`)\n- [Clint Wilson](https://twitter.com/clintw_), [DigiCert](https://www.digicert.com/) (most wildcards)\n- [Andrew Ayer](https://github.com/agwa), [SSLMate](https://sslmate.com/) (`invalid-expected-sct`)\n- [Rob Stradling](https://github.com/robstradling), [Comodo](https://www.comodo.com/) (`1000-sans`, `10000-sans`, `no-subject`, `no-common-name`, `sha1-intermediate`, `\xd1\x95\xd1\x80\xd0\xbe\xd0\xbe\xd2\x93`)\n\nVarious subdomains and test pages are also implemented by [external contributors](https://github.com/chromium/badssl.com/graphs/contributors).\n\n## Disclaimer\n\n`badssl.com` is meant for *manual* testing of security UI in web clients.\n\nMost subdomains are likely to have stable functionality, but anything *could* change without notice. If you would like a documented guarantee for a particular use case, please file an issue. (Alternatively, you could make a fork and host your own copy.)\n\nbadssl.com is not an official Google product. It is offered "AS-IS" and without any warranties.\n'