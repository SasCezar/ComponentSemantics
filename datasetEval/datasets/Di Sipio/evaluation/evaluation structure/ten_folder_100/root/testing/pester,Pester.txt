b'# Pester\n\n> \xf0\x9f\x93\xa6\xf0\x9f\x94\x90 Pester is now signed. `-SkipPublisherCheck` should no longer be used to install from PowerShell Gallery on Windows 10.\n\n> \xf0\x9f\x91\xa9\xf0\x9f\x91\xa8 We are looking for contributors! All issues labeled [help wanted](https://github.com/pester/Pester/labels/help%20wanted) are up for grabs. They further split up into [good first issue](https://github.com/pester/Pester/labels/good%20first%20issue) that are issues I hope are easy to solve. [Bad first issue](https://github.com/pester/Pester/labels/bad%20first%20issue) where I expect the implementation to be problematic or needs to be proposed and discussed beforehand. And the rest which is somewhere in the middle. If you decide to pick up an issue please comment in the issue thread so others don\'t waste their time working on the same issue as you.\n> There is also [contributor\'s guide](https://github.com/pester/Pester/wiki/Contributing-to-Pester) that will hopefully help you.\n\nPester is the ubiquitous test and mock framework for PowerShell.\n\n```powershell\n# your function\nfunction Get-Planet ([string]$Name=\'*\')\n{\n  $planets = @(\n    @{ Name = \'Mercury\' }\n    @{ Name = \'Venus\'   }\n    @{ Name = \'Earth\'   }\n    @{ Name = \'Mars\'    }\n    @{ Name = \'Jupiter\' }\n    @{ Name = \'Saturn\'  }\n    @{ Name = \'Uranus\'  }\n    @{ Name = \'Neptune\' }\n  ) | foreach { [PSCustomObject]$_ }\n\n  $planets | where { $_.Name -like $Name }\n}\n\n# Pester tests\nDescribe \'Get-Planet\' {\n  It "Given no parameters, it lists all 8 planets" {\n    $allPlanets = Get-Planet\n    $allPlanets.Count | Should -Be 8\n  }\n\n  Context "Filtering by Name" {\n    It "Given valid -Name \'<Filter>\', it returns \'<Expected>\'" -TestCases @(\n      @{ Filter = \'Earth\'; Expected = \'Earth\' }\n      @{ Filter = \'ne*\'  ; Expected = \'Neptune\' }\n      @{ Filter = \'ur*\'  ; Expected = \'Uranus\' }\n      @{ Filter = \'m*\'   ; Expected = \'Mercury\', \'Mars\' }\n    ) {\n      param ($Filter, $Expected)\n\n      $planets = Get-Planet -Name $Filter\n      $planets.Name | Should -Be $Expected\n    }\n\n    It "Given invalid parameter -Name \'Alpha Centauri\', it returns `$null" {\n      $planets = Get-Planet -Name \'Alpha Centauri\'\n      $planets | Should -Be $null\n    }\n  }\n}\n```\n\nThis code example lies a tiny bit, [find it annotated and production ready here](Examples/Planets).\n\nLearn more about the [usage and syntax](https://github.com/Pester/Pester/wiki) on our wiki.\n\n## Installation\n\nPester is compatible with Windows PowerShell 2.x - 5.x on Windows 10, 8, 7, Vista and even 2003.\nSince version 4.0.9 Pester is compatible also with PowerShell Core 6.x on Windows, Linux, macOS but with some [limitations](https://github.com/pester/Pester/wiki/Pester-on-PSCore-limitations).\n\nPester comes pre-installed with Windows 10, but we recommend updating, by running this PowerShell command _as administrator_:\n\n```powershell\nInstall-Module -Name Pester -Force\n```\n\nNot running Windows 10 or facing problems? See the [full installation and update guide](https://github.com/pester/Pester/wiki/Installation-and-Update).\n\n## Features\n\n### Test runner\n\nPester runs your tests and prints a nicely formatted output to the screen.\n\n![test run output](images/readme/output.PNG)\n\nCommand line output is not the only output option, Pester also integrates with Visual Studio Code, Visual Studio, and any tool that can consume nUnit XML output.\n\n### Assertions\n\nPester comes with a suite of assertions that cover a lot of common use cases. Pester assertions range from very versatile, like `Should -Be`, to specialized like `Should -Exists`. Here is how you ensure that a file exists:\n\n```powershell\nDescribe \'Notepad\' {\n    It \'Exists in Windows folder\' {\n        \'C:\\Windows\\notepad.exe\' | Should -Exist\n    }\n}\n```\n\nLearn more about assertion on [our wiki](https://github.com/pester/Pester/wiki/Should).\n\n### Mocking\n\nPester has mocking built-in. Using mocks you can easily replace functions with empty implementation to avoid changing the real environment.\n\n```powershell\nfunction Remove-Cache {\n    Remove-Item "$env:TEMP\\cache.txt"\n}\n\nDescribe \'Remove-Cache\' {\n    It \'Removes cached results from temp\\cache.text\' {\n        Mock -CommandName Remove-Item -MockWith {}\n\n        Remove-Cache\n\n        Assert-MockCalled -CommandName Remove-Item -Times 1 -Exactly\n    }\n}\n```\n\nLearn more [about Mocking here](https://github.com/pester/Pester/wiki/Mock).\n\n### Code coverage\n\nPester can measure how much of your code is covered by tests and export it to JaCoCo format that is easily understood by build servers.\n\n![JaCoCo code coverage report](images/readme/jacoco.PNG)\n\nLearn more about [code coverage here](https://github.com/pester/Pester/wiki/Code-Coverage).\n\n### Build server integration\n\nPester integrates nicely with TFS, AppVeyor, TeamCity, Jenkins and other CI servers.\n\nTesting your scripts, and all pull requests on AppVeyor is extremely simple. Just commit this `appveyor.yml` file to your repository, and select your repository on the AppVeyor website:\n\n```yml\nversion: 1.0.{build}\nimage:\n  - Visual Studio 2017\n  - Ubuntu\ninstall:\n  - ps: Install-Module Pester -Force -Scope CurrentUser\nbuild: off\ntest_script:\n  - ps: Invoke-Pester -EnableExit\n```\n\nSee it [in action here!](https://ci.appveyor.com/project/nohwnd/planets)\nIf you do not need to test your scripts against PowerShell Core, just simply remove the entire line mentioning Ubuntu.\n\nPester itself is built on the community build server and Travis CI, and distributed mainly via PowerShell gallery.\n\n[![PowerShell 2 & 3](https://nohwnd.visualstudio.com/Pester/_apis/build/status/PowerShell%202%20&%203?branchName=master)](https://nohwnd.visualstudio.com/Pester/_build/latest?definitionId=6?branchName=master) [![PowerShell 4, 5 & Core on Windows build](https://ci.appveyor.com/api/projects/status/dr0w3hwb2wncfov3?svg=true)](https://ci.appveyor.com/project/nohwnd/pester) [![Linux & MacOS build](https://img.shields.io/travis/pester/Pester/master.svg?label=linux/macos+build)](https://travis-ci.org/pester/Pester) [![latest version](https://img.shields.io/powershellgallery/v/Pester.svg?label=latest+version)](https://www.powershellgallery.com/packages/Pester) [![downloads](https://img.shields.io/powershellgallery/dt/Pester.svg?label=downloads)](https://www.powershellgallery.com/packages/Pester)\n\n## Further reading\n\nDo you like what you see? Learn how to use Pester with our [wiki guide](https://github.com/Pester/Pester/wiki), and continue with some of the other [resources](https://github.com/pester/Pester/wiki/Articles-and-other-resources).\n\n## Got questions?\n\nGot questions or you just want to get in touch? Use our issues page or one of these channels:\n\n[![Pester Twitter](images/readme/twitter-64.PNG)](https://twitter.com/PSPester) [![Pester on StackOverflow](images/readme/stack-overflow-64.PNG)](https://stackoverflow.com/questions/tagged/pester) [![Testing channel on Powershell Slack](images/readme/slack-64.PNG)](https://powershell.slack.com/messages/C03QKTUCS) [![Pester Gitter](images/readme/gitter-64.PNG)](https://gitter.im/pester/Pester?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![Pester on PowerShell.org](images/readme/pshorg-85x64.PNG)](https://powershell.org/forums/forum/pester/)\n\n## Sponsored by\n\nPester is sponsored by all the great folks on [OpenCollective](https://opencollective.com/pester),  [GitHub](https://github.com/users/nohwnd/sponsorship#sponsors) and by the\n\n[![The DevOps Collective](images/devopscollective.png)](https://devopscollective.org/)\n\n## Contributors\n\n### Code Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href="https://github.com/pester/Pester/graphs/contributors"><img src="https://opencollective.com/Pester/contributors.svg?width=890&button=false" /></a>\n\n### Financial Contributors\n\nBecome a financial contributor and help us sustain our community. [[Contribute](https://opencollective.com/Pester/contribute)]\n\n#### Individuals\n\n<a href="https://opencollective.com/Pester"><img src="https://opencollective.com/Pester/individuals.svg?width=890"></a>\n\n#### Organizations\n\nSupport this project with your organization. Your logo will show up here with a link to your website. [[Contribute](https://opencollective.com/Pester/contribute)]\n\n<a href="https://opencollective.com/Pester/organization/0/website"><img src="https://opencollective.com/Pester/organization/0/avatar.svg"></a>\n<a href="https://opencollective.com/Pester/organization/1/website"><img src="https://opencollective.com/Pester/organization/1/avatar.svg"></a>\n<a href="https://opencollective.com/Pester/organization/2/website"><img src="https://opencollective.com/Pester/organization/2/avatar.svg"></a>\n<a href="https://opencollective.com/Pester/organization/3/website"><img src="https://opencollective.com/Pester/organization/3/avatar.svg"></a>\n<a href="https://opencollective.com/Pester/organization/4/website"><img src="https://opencollective.com/Pester/organization/4/avatar.svg"></a>\n<a href="https://opencollective.com/Pester/organization/5/website"><img src="https://opencollective.com/Pester/organization/5/avatar.svg"></a>\n<a href="https://opencollective.com/Pester/organization/6/website"><img src="https://opencollective.com/Pester/organization/6/avatar.svg"></a>\n<a href="https://opencollective.com/Pester/organization/7/website"><img src="https://opencollective.com/Pester/organization/7/avatar.svg"></a>\n<a href="https://opencollective.com/Pester/organization/8/website"><img src="https://opencollective.com/Pester/organization/8/avatar.svg"></a>\n<a href="https://opencollective.com/Pester/organization/9/website"><img src="https://opencollective.com/Pester/organization/9/avatar.svg"></a>\n'