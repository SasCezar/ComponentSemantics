b'![](http://f.cl.ly/items/0r1E192C1R0b2g2Q3h2w/QuickLogo_Color.png)\n\n[![Build Status](https://travis-ci.org/Quick/Quick.svg?branch=master)](https://travis-ci.org/Quick/Quick)\n[![CocoaPods](https://img.shields.io/cocoapods/v/Quick.svg)](https://cocoapods.org/pods/Quick)\n[![Carthage Compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)\n[![Accio supported](https://img.shields.io/badge/Accio-supported-0A7CF5.svg?style=flat)](https://github.com/JamitLabs/Accio)\n[![Platforms](https://img.shields.io/cocoapods/p/Quick.svg)](https://cocoapods.org/pods/Quick)\n[![Reviewed by Hound](https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg)](https://houndci.com)\n\nQuick is a behavior-driven development framework for Swift and Objective-C.\nInspired by [RSpec](https://github.com/rspec/rspec), [Specta](https://github.com/specta/specta), and [Ginkgo](https://github.com/onsi/ginkgo).\n\n![](https://raw.githubusercontent.com/Quick/Assets/master/Screenshots/QuickSpec%20screenshot.png)\n\n```swift\n// Swift\n\nimport Quick\nimport Nimble\n\nclass TableOfContentsSpec: QuickSpec {\n  override func spec() {\n    describe("the \'Documentation\' directory") {\n      it("has everything you need to get started") {\n        let sections = Directory("Documentation").sections\n        expect(sections).to(contain("Organized Tests with Quick Examples and Example Groups"))\n        expect(sections).to(contain("Installing Quick"))\n      }\n\n      context("if it doesn\'t have what you\'re looking for") {\n        it("needs to be updated") {\n          let you = You(awesome: true)\n          expect{you.submittedAnIssue}.toEventually(beTruthy())\n        }\n      }\n    }\n  }\n}\n```\n#### Nimble\nQuick comes together with [Nimble](https://github.com/Quick/Nimble) \xe2\x80\x94 a matcher framework for your tests. You can learn why `XCTAssert()` statements make your expectations unclear and how to fix that using Nimble assertions [here](./Documentation/en-us/NimbleAssertions.md).\n\n## Swift Version\n\nCertain versions of Quick and Nimble only support certain versions of Swift. Depending on which version of Swift your project uses, you should use specific versions of Quick and Nimble. Use the table below to determine which versions of Quick and Nimble are compatible with your project.\n\n|Swift version        |Quick version   |Nimble version |\n|:--------------------|:---------------|:--------------|\n|Swift 4.2            |v1.3.2 or later |v7.3.2 or later|\n|Swift 3 / Swift 4    |v1.0.0 or later |v5.0.0 or later|\n|Swift 2.2 / Swift 2.3|v0.9.3          |v4.1.0         |\n\n## Documentation\n\nAll documentation can be found in the [Documentation folder](./Documentation), including [detailed installation instructions](./Documentation/en-us/InstallingQuick.md) for CocoaPods, Carthage, Git submodules, and more. For example, you can install Quick and [Nimble](https://github.com/Quick/Nimble) using CocoaPods by adding the following to your Podfile:\n\n```rb\n# Podfile\n\nuse_frameworks!\n\ntarget "MyApp" do\n  # Normal libraries\n\n  abstract_target \'Tests\' do\n    inherit! :search_paths\n    target "MyAppTests"\n    target "MyAppUITests"\n\n    pod \'Quick\'\n    pod \'Nimble\'\n  end\nend\n```\n\n## Projects using Quick\n\nOver ten-thousand apps use either Quick and Nimble however, as they are not included in the app binary, neither appear in \xe2\x80\x9cTop Used Libraries\xe2\x80\x9d blog posts. Therefore, it would be greatly appreciated to remind contributors that their efforts are valued by compiling a list of organizations and projects that use them. \n\nDoes your organization or project use Quick and Nimble? If yes, [please add your project to the list](https://github.com/Quick/Quick/wiki/Projects-using-Quick).\n\n## Who uses Quick\n\nSimilar to projects using Quick, it would be nice to hear why people use Quick and Nimble. Are there features you love? Are there features that are just okay? Are there some features we have that no one uses?\n\nHave something positive to say about Quick (or Nimble)? If yes, [provide a testimonial here](https://github.com/Quick/Quick/wiki/Who-uses-Quick).\n\n\n## License\n\nApache 2.0 license. See the [`LICENSE`](LICENSE) file for details.\n'