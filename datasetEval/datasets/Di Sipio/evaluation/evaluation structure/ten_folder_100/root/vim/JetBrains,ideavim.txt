b'<img src="resources/META-INF/pluginIcon.svg" width="80" height="80" alt="icon"  align="left"/>\n\nIdeaVim\n===\n\n<div>\n  <a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub">\n    <img src="https://jb.gg/badges/official.svg" alt="official JetBrains project"/>\n  </a>\n  <a href="https://teamcity.jetbrains.com/viewType.html?buildTypeId=IdeaVim_TestsForIntelliJ20191&guest=1">\n    <img src="https://teamcity.jetbrains.com/app/rest/builds/buildType:(id:IdeaVim_TestsForIntelliJ20191)/statusIcon.svg?guest=1"/>\n  </a>\n</div>\n\nIdeaVim is a Vim emulation plugin for IDEs based on the IntelliJ Platform.\nIdeaVim can be used with IntelliJ IDEA, PyCharm, CLion, PhpStorm, WebStorm,\nRubyMine, AppCode, DataGrip, GoLand, Rider, Cursive, and Android Studio.\n\nResources:\n\n* [Plugin homepage](https://plugins.jetbrains.com/plugin/164-ideavim)\n* [Changelog](CHANGES.md)\n* [Bug tracker](https://youtrack.jetbrains.com/issues/VIM)\n* [Continuous integration builds](https://teamcity.jetbrains.com/project.html?projectId=IdeaVim&guest=1)\n* [@IdeaVim](https://twitter.com/ideavim) in Twitter\n\n\nInstallation\n------------\n\nUse the IDE\'s plugin manager to install the latest version of the plugin.\nStart the IDE normally and enable the Vim emulation using "Tools | Vim\nEmulator" menu item. At this point you must use Vim keystrokes in all editors.\n\nIf you wish to disable the plugin, select the "Tools | Vim Emulator" menu so\nit is unchecked. At this point your IDE will work with its regular keyboard\nshortcuts.\n\nKeyboard shortcut conflicts between the Vim emulation and the IDE can be\nresolved via "File | Settings | Editor | Vim Emulation", "File | Settings |\nKeymap" on Linux & Windows, and via "Preferences | Editor | Vim Emulation",\n"Preferences | Keymap" on macOS. They can also be resolved by key-mapping\ncommands in your ~/.ideavimrc file.\n\n\nGet Early Access\n-------------------\n\nWould you like to try new features and fixes? Join the Early Access Program and\nreceive EAP builds as updates!  \n\n1. Click the IdeaVim icon in the status bar | `EAP` | `Get Early Access...`\n\nOr subscribe to EAP updates manually:\n\n1. Open `Settings | Plugins`\n2. Click the gear icon :gear:, select `Manage Plugin Repositories`, and add the following url:\n `https://plugins.jetbrains.com/plugins/eap/ideavim`\n\nSee [the changelog](CHANGES.md) for the list of hot unreleased features.\n\nIt is important to distinguish EAP builds from traditional pre-release software.\nPlease note that the quality of EAP versions may at times be way below even\nusual beta standards.\n\nYou can always leave your feedback with:\n* [@IdeaVim](https://twitter.com/ideavim) in Twitter\n* [Bug tracker](https://youtrack.jetbrains.com/issues/VIM)\n\n\nSummary of Supported Vim Features\n---------------------------------\n\nSupported:\n\n* Motion keys\n* Deletion/changing\n* Insert mode commands\n* Marks\n* Registers\n* Undo/redo\n* Visual mode commands\n* Some Ex commands\n* Some [:set options](doc/set-commands.md)\n* Full Vim regexps for search and search/replace\n* Key mappings\n* Macros\n* Digraphs\n* Command line and search history\n* Window commands\n* Vim web help\n* Select mode\n\nEmulated Vim plugins:\n\n* vim-surround\n* vim-multiple-cursors\n* vim-commentary\n\nNot supported (yet):\n\n* Jump lists\n* Various less-used commands\n\nSee also:\n\n* [The list of all supported commands](src/com/maddyhome/idea/vim/package-info.java)\n* [Top features and bugs](https://youtrack.jetbrains.com/issues/VIM?q=%23Unresolved+sort+by%3A+votes)\n\n\nFiles\n-----\n\n* ~/.ideavimrc\n    * Your IdeaVim-specific Vim initialization commands\n\nYou can read your ~/.vimrc file from ~/.ideavimrc with this command:\n\n    source ~/.vimrc\n\nNote, that IdeaVim currently parses ~/.ideavimrc file via simple pattern matching.\nSee [VIM-669](https://youtrack.jetbrains.com/issue/VIM-669) for proper parsing\nof VimL files.\n\nAlso note that if you have overridden the `user.home` JVM option, this\nwill affect where IdeaVim looks for your .ideavimrc file. For example, if you\nhave `-Duser.home=/my/alternate/home` then IdeaVim will source\n`/my/alternate/home/.ideavimrc` instead of `~/.ideavimrc`.\n\nAlternatively, you can set up initialization commands using [XDG](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html) standard.\nPut your settings to `$XDG_CONFIG_HOME$/ideavim/ideavimrc` file.     [To Be Released]\n\n\nEmulated Vim Plugins\n--------------------\n\nIdeaVim extensions emulate some plugins of the original Vim. In order to use\nIdeaVim extensions, you have to enable them via this command in your `~/.ideavimrc`:\n\n    set <extension-name>\n\nAvailable extensions:\n\n* easymotion\n    * Setup:  \n        * Install [IdeaVim-EasyMotion](https://plugins.jetbrains.com/plugin/13360-ideavim-easymotion/)\n        and [AceJump](https://plugins.jetbrains.com/plugin/7086-acejump/) plugins.\n        * `set easymotion`\n    * Emulates [vim-easymotion](https://github.com/easymotion/vim-easymotion)\n    * Commands: All commands with the mappings are supported. See the [full list of supported commands](https://github.com/AlexPl292/IdeaVim-EasyMotion#supported-commands).\n\n* surround\n    * Setup: `set surround`\n    * Emulates [vim-surround](https://github.com/tpope/vim-surround)\n    * Commands: `ys`, `cs`, `ds`, `S`\n\n* multiple-cursors\n    * Setup: `set multiple-cursors`\n    * Emulates [vim-multiple-cursors](https://github.com/terryma/vim-multiple-cursors)\n    * Commands: `<A-n>`, `<A-x>`, `<A-p>`, `g<A-n>`\n\n* commentary\n    * Setup: `set commentary`\n    * Emulates [commentary.vim](https://github.com/tpope/vim-commentary)\n    * Commands: `gcc`, `gc + motion`, `v_gc`\n\n\nChanges to the IDE\n------------------\n\n### Undo/Redo\n\nThe IdeaVim plugin uses the undo/redo functionality of the IntelliJ Platform,\nso the behavior of the `u` and `<C-R>` commands may differ from the original\nVim. Vim compatibility of undo/redo may be improved in future releases.\n\nSee also [unresolved undo issues](https://youtrack.jetbrains.com/issues/VIM?q=%23Unresolved+Help+topic%3A+u).\n\n### Escape\n\nUsing `<Esc>` in dialog windows remains problematic. For most dialog windows,\nthe Vim emulator is put into insert mode with `<Esc>` not working. You\nshould use `<C-c>` or `<C-[>` instead. In some dialog windows, the normal mode is\nswitched by default. The usage of the Vim emulator in dialog windows is an area for\nimprovement.\n\nSee also [unresolved escape issues](https://youtrack.jetbrains.com/issues/VIM?q=%23Unresolved+Help+topic%3A+i_Esc).\n\n### Executing IDE Actions\n\nIdeaVim adds two commands for listing and executing arbitrary IDE actions as\nEx commands or via `:map` command mappings:\n\n* `:actionlist [pattern]`\n    * Find IDE actions by name or keymap pattern (E.g. `:actionlist extract`, `:actionlist <C-D`)\n* `:action {name}`\n    * Execute an action named `NAME`\n\nFor example, here `\\r` is mapped to the Reformat Code action:\n\n    :map \\r :action ReformatCode<CR>\n\n\nContributing\n------------\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\nAuthors\n-------\n\nSee [AUTHORS.md](AUTHORS.md)\nfor a list of authors and contributors.\n\n\nLicense\n-------\n\nIdeaVim is licensed under the terms of the GNU Public License version 2\nor any later version.\n'