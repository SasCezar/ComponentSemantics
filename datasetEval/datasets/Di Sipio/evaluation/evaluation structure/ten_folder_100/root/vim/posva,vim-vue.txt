b'# vim-vue [![CircleCI](https://img.shields.io/circleci/project/github/posva/vim-vue.svg)](https://circleci.com/gh/posva/vim-vue)\n\nVim syntax highlighting for [Vue\ncomponents](https://vuejs.org/v2/guide/single-file-components.html).\n\nThis was initially forked from\n[darthmall/vim-vue](https://github.com/darthmall/vim-vue). I already have an\nimplementation for this but found his code much cleaner. That\'s why I created a\nnew version instead of a PR.\n\n## Installation\n\n### Install with [Vundle](https://github.com/VundleVim/Vundle.vim)\n\n```viml\nPlugin \'posva/vim-vue\'\n```\n\n### Install with [Pathogen](https://github.com/tpope/vim-pathogen)\n\n```bash\ncd ~/.vim/bundle && \\\ngit clone https://github.com/posva/vim-vue.git\n```\n\n### Install without a plugin manager (Vim 8)\n\n```bash\ngit clone https://github.com/posva/vim-vue.git ~/.vim/pack/plugins/start/vim-vue\n```\n\n### Integration with [Syntastic](https://github.com/scrooloose/syntastic) or [ALE](https://github.com/w0rp/ale)\n\nCurrently only `eslint` is available. Please make sure\n[eslint](http://eslint.org/) and\n[eslint-plugin-vue](https://github.com/vuejs/eslint-plugin-vue) are installed\nand properly [configured](https://github.com/vuejs/eslint-plugin-vue#rocket-usage):\n\n```bash\nnpm i -g eslint eslint-plugin-vue\n```\n\n## Contributing\n\nIf your language is not getting highlighted open an issue or a PR with the fix.\nYou only need to add a line to the `syntax/vue.vim` file.\n\nDon\'t forget to write [Vader](https://github.com/junegunn/vader.vim) tests for\nthe code you write. You can run the tests by executing `make test` in the\nterminal.\n\n## FAQ\n\n### Where is Jade?\n\n[Jade has been renamed to pug](https://github.com/pugjs/jade/issues/2184).\nTherefore you have to replace all your `jade` occurrences with `pug`. The new\nplugin for `pug` can be found on [the same repository](https://github.com/digitaltoad/vim-pug)\n(the name has already been updated).\n\n### How to use commenting functionality with multiple languages in Vue files?\n\n#### [tcomment](https://github.com/tomtom/tcomment_vim)\n\ntcomment has some support for Vue files with multiple languages, without any extra configuration.\n\n#### [caw.vim](https://github.com/tyru/caw.vim)\n\ncaw.vim features built-in support for file context through [context_filetype.vim](https://github.com/Shougo/context_filetype.vim). Just install both plugins and context-aware commenting will work in most files. The fenced code is detected by predefined regular expressions.\n\n#### [NERDCommenter](https://github.com/scrooloose/nerdcommenter)\n\n<details>\n<summary>\nTo use NERDCommenter with Vue files, you can use its "hooks" feature to\ntemporarily change the filetype. <em>Click for an example.</em>\n</summary>\n\n```vim\nlet g:ft = \'\'\nfunction! NERDCommenter_before()\n  if &ft == \'vue\'\n    let g:ft = \'vue\'\n    let stack = synstack(line(\'.\'), col(\'.\'))\n    if len(stack) > 0\n      let syn = synIDattr((stack)[0], \'name\')\n      if len(syn) > 0\n        exe \'setf \' . substitute(tolower(syn), \'^vue_\', \'\', \'\')\n      endif\n    endif\n  endif\nendfunction\nfunction! NERDCommenter_after()\n  if g:ft == \'vue\'\n    setf vue\n    let g:ft = \'\'\n  endif\nendfunction\n```\n\n</details>\n\n### _Vim slows down when using this plugin_ How can I fix that?\nWhen checking for pre-processor languages, multiple syntax highlighting checks are done, which can slow down vim. You can trim down which pre-processors to use by setting `g:vue_pre_processors` to a whitelist of languages to support:\n\n```vim\nlet g:vue_pre_processors = [\'pug\', \'scss\']\n```\n\nTo disable pre-processor languages altogether (only highlight HTML, JavaScript, and CSS):\n\n```vim\nlet g:vue_pre_processors = []\n```\n\nAvailable pre-processors are: coffee, haml, handlebars, less, pug, sass, scss, slm, stylus, typescript\n\nWhen `g:vue_pre_processors` is set to \'detect_on_enter\' instead of a list, vim-vue will detect the pre-processors used when a file is opened, and load only their syntax files.\n\n```vim\nlet g:vue_pre_processors = \'detect_on_enter\'\n```\n'