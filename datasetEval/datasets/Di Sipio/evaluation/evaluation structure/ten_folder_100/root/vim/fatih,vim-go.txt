b'# vim-go [![Build Status](http://img.shields.io/travis/fatih/vim-go.svg?style=flat-square)](https://travis-ci.org/fatih/vim-go)\n\n<p align="center">\n  <img style="float: right;" src="assets/vim-go.png" alt="Vim-go logo"/>\n</p>\n\n## Features\n\nThis plugin adds Go language support for Vim, with the following main features:\n\n* Compile your package with `:GoBuild`, install it with `:GoInstall` or test it\n  with `:GoTest`. Run a single test with `:GoTestFunc`).\n* Quickly execute your current file(s) with `:GoRun`.\n* Improved syntax highlighting and folding.\n* Debug programs with integrated `delve` support with `:GoDebugStart`.\n* Completion support via `gocode` and `gopls`.\n* `gofmt` or `goimports` on save keeps the cursor position and undo history.\n* Go to symbol/declaration with `:GoDef`.\n* Look up documentation with `:GoDoc` or `:GoDocBrowser`.\n* Easily import packages via `:GoImport`, remove them via `:GoDrop`.\n* Precise type-safe renaming of identifiers with `:GoRename`.\n* See which code is covered by tests with `:GoCoverage`.\n* Add or remove tags on struct fields with `:GoAddTags` and `:GoRemoveTags`.\n* Call `gometalinter` with `:GoMetaLinter` to invoke all possible linters\n  (`golint`, `vet`, `errcheck`, `deadcode`, etc.) and put the result in the\n  quickfix or location list.\n* Lint your code with `:GoLint`, run your code through `:GoVet` to catch static\n  errors, or make sure errors are checked with `:GoErrCheck`.\n* Advanced source analysis tools utilizing `guru`, such as `:GoImplements`,\n  `:GoCallees`, and `:GoReferrers`.\n* ... and many more! Please see [doc/vim-go.txt](doc/vim-go.txt) for more\n  information.\n\n## Install\n\nvim-go requires at least Vim 8.0.1453 or Neovim 0.3.1.\n\nThe [**latest stable release**](https://github.com/fatih/vim-go/releases/latest) is the\nrecommended version to use. If you choose to use the master branch instead,\nplease do so with caution; it is a _development_ branch.\n\n\nvim-go follows the standard runtime path structure. Below are some helper lines\nfor popular package managers:\n\n* [Vim 8 packages](http://vimhelp.appspot.com/repeat.txt.html#packages)\n  * `git clone https://github.com/fatih/vim-go.git ~/.vim/pack/plugins/start/vim-go`\n* [Pathogen](https://github.com/tpope/vim-pathogen)\n  * `git clone https://github.com/fatih/vim-go.git ~/.vim/bundle/vim-go`\n* [vim-plug](https://github.com/junegunn/vim-plug)\n  * `Plug \'fatih/vim-go\', { \'do\': \':GoUpdateBinaries\' }`\n* [Vundle](https://github.com/VundleVim/Vundle.vim)\n  * `Plugin \'fatih/vim-go\'`\n\nYou will also need to install all the necessary binaries. vim-go makes it easy\nto install all of them by providing a command, `:GoInstallBinaries`, which will\n`go get` all the required binaries.\n\nCheck out the Install section in [the documentation](doc/vim-go.txt) for more\ndetailed instructions (`:help go-install`).\n\n## Usage\n\nThe full documentation can be found at [doc/vim-go.txt](doc/vim-go.txt). You can\ndisplay it from within Vim with `:help vim-go`.\n\nDepending on your installation method, you may have to generate the plugin\'s\n[`help tags`](http://vimhelp.appspot.com/helphelp.txt.html#%3Ahelptags)\nmanually (e.g. `:helptags ALL`).\n\nWe also have an [official vim-go tutorial](https://github.com/fatih/vim-go/wiki).\n\n## FAQ and troubleshooting\n\nThe FAQ and troubleshooting tips are in the documentation and can be quickly\naccessed using `:help go-troubleshooting`. If you believe you\'ve found a bug or\nshortcoming in vim-go that is neither addressed by help nor in [existing\nissues](https://github.com/fatih/vim-go/issues), please open an issue with\nclear reproduction steps. `:GoReportGitHubIssue` can be used pre-populate a lot\nof the information needed when creating a new issue.\n\n## License\n\nThe BSD 3-Clause License - see [`LICENSE`](LICENSE) for more details\n\n'