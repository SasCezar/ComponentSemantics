b'# homebridge-weather\n\n**Homebridge plugin for displaying the weather, humidity and min- or max-temperature from openweathermap.org**\n\n[![NPM version](https://badge.fury.io/js/homebridge-weather.svg)](https://npmjs.org/package/homebridge-weather) [![Dependency Status](https://david-dm.org/werthdavid/homebridge-weather.svg)](https://david-dm.org/werthdavid/homebridge-weather) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](http://makeapullrequest.com) [![Downloads](https://img.shields.io/npm/dm/homebridge-weather.svg)](https://npmjs.org/package/homebridge-weather)\n\n\n# Installation\n\n1. Install Homebridge using: `(sudo) npm install -g --unsafe-perm homebridge`\n2. Install this plugin using: `(sudo) npm install -g homebridge-weather`\n3. Get an API-Key from <a href="http://openweathermap.org">openweathermap.org</a>\n4. <a href="https://openweathermap.org/city">Find</a> your city (make sure the query only returns a single result!). Alternatively you can use a different query parameter (see \'Fields\')\n5. Update your Homebridge `config.json` using the sample below (append in the block \'accessories\' not \'platforms\').\n\n# Configuration\n\n## Weather\n\nExample for configuration by City\n\n```json\n"accessories": [\n    {\n      "accessory": "Weather",\n      "apikey": "YOUR_KEY_HERE",\n      "location": "Stuttgart,de",\n      "name": "OpenWeatherMap Temperature"\n    }\n]\n```\n\n#### By ID\n\nreplace `location` with\n\n```json\n"locationById": "2172797",\n```\n\n#### By Coordinates\n\nreplace `location` with\n\n```json\n"locationByCoordinates": "lat=48.70798341&lon=9.17019367",\n```\n\n### Celsius/Fahrenheit (you probably don\'t have to change anything here)\n\n**iOS should take care of the correct unit, HomeApp converts the values internally.**\n\n\nIf you want a different unit than your OS\' settings, you can change the unit explicitly by adding\n `unit` with one of the following values:\n\n```json\n"unit": "metric",\n```\nfor Celsius (default)\n\nor\n\n```json\n"unit": "imperial",\n```\nfor Fahrenheit\n\n## Forecast\n\nTo show daily min/max values, you have to add two additional accessories:\n\n```json\n"accessories": [\n  {\n     "accessory":"Weather",\n     "apikey":"YOUR_KEY_HERE",\n     "locationByCoordinates":"lat=48.70798341&lon=9.17019367",\n     "name":"Today Min",\n     "type":"min"\n  },\n  {\n     "accessory":"Weather",\n     "apikey":"YOUR_KEY_HERE",\n     "locationByCoordinates":"lat=48.70798341&lon=9.17019367",\n     "name":"Today Max",\n     "type":"max"\n  }\n]\n```\n\n## Cloudiness\n\nTo show cloudiness in percent configure as follows:\n\n```json\n"accessories": [\n  {\n     "accessory":"Weather",\n     "apikey":"YOUR_KEY_HERE",\n     "locationByCoordinates":"lat=48.70798341&lon=9.17019367",\n     "name":"Cloudiness",\n     "type":"clouds"\n  }\n]\n```\n\n## Wind-speed\n\nTo show wind-speed in `meter/sec` configure as follows:\n\n```json\n"accessories": [\n  {\n     "accessory":"Weather",\n     "apikey":"YOUR_KEY_HERE",\n     "locationByCoordinates":"lat=48.70798341&lon=9.17019367",\n     "name":"Wind",\n     "type":"windspeed"\n  }\n]\n```\n\nTo display in `miles/hour` additionally configure \n\n```json\n   "unit": "imperial"\n```\n\n## Sunrise/noon/sunset\n\nThis type publishes a value between 0 and 100 that indicates how far through the day we are where 0% is the sunrise (and everything before) and 100% is sunset (and everything after). 50% is noon accordingly.\n\nFor using this value as trigger, you have to define a "pollingInterval" as well, otherwise the value only gets updated while having HomeApp in foreground.\n\n```json\n"accessories": [\n  {\n     "accessory":"Weather",\n     "apikey":"YOUR_KEY_HERE",\n     "locationByCoordinates":"lat=48.70798341&lon=9.17019367",\n     "name":"Sun",\n     "type":"sun",\n     "pollingInterval": 10\n  }\n]\n```\n\n## Hint\n\n**You can add multiple accessories if you want to display additional information like min/max or the temperature of different locations. Just make sure that the field `name` is unique**\n\n\n## Polling\n\nBy default, no polling-interval is specified. That means, the temperature is only updated when the Home-App is opened. \nThere might be scenarios though, where you would want to periodically update the temperature e.g. as source for trigger-rules.\n\nOpenWeatherMap has a generous amount of [free calls](http://openweathermap.org/price#weather) per API-key: you can poll the temperature up to 60 times a minute.\nBeware that **just because you can doesn\'t mean you should**\n\nI\'d also suggest that you add a polling-interval only for the `type` *current*, since *min* and *max* are forecasts and probably won\'t change throughout the day.\n\n## Temperature profile with [Elgato Eve App](https://itunes.apple.com/de/app/elgato-eve/id917695792?mt=8) ([FakeGato](https://github.com/simont77/fakegato-history) support)\n\nWith the `enableHistory` flag, the FakeGato-service is used to log temperature and humidity. This doesn\'t work with the default Home-App, you have to use the Elgato Eve App.\n\n![eve-example](https://user-images.githubusercontent.com/4696067/35668836-601c4a10-0733-11e8-982e-fa2a406a46e7.jpg)\n\nSince FakeGato requires to log an entry at least every 10 minutes, this feature only becomes active if you set `enableHistory` to true AND define an `pollingInterval`!\n\nI suggest the following settings:\n\n```json\n"accessories": [\n    {\n       "accessory": "Weather",\n       "apikey": "YOUR_KEY_HERE",\n       "location": "Stuttgart,de",\n       "name": "OpenWeatherMap Temperature",\n       "pollingInterval": 10,\n       "enableHistory": true\n     }\n]\n```\n\n## Config file\n\n\nTake a look at the <a href="config.example.json">example config.json</a>\n\n\nFields:\n\n* `accessory` must be "Weather" (required).\n* `apikey` API-Key for accessing OpenWeatherMap API (required).\n* `location` city-name query string (resembles to <a href="https://openweathermap.org/current#name">q-parameter</a>) (required).\n* OR `locationById` cityid query string (resembles to <a href="https://openweathermap.org/current#cityid">cityid-parameter</a>) (required).\n* OR `locationByCoordinates` geo query string (resembles to <a href="https://openweathermap.org/current#geo">geo-parameter</a>) (required).\n* OR `locationByZip` zip query string (resembles to <a href="https://openweathermap.org/current#zip">zip-parameter</a>) (required).\n* `name` is the name of the published accessory (required).\n* `showHumidity` weather or not show the humidity (optional, only works for current weather not forecast, defaults to true).\n* `nameHumidity` humidity can have a different name (optional, only works if `showHumidity` is true, defaults to the same as `name`).\n* `showTemperature` weather or not show the temperature (optional, setting to false only makes sense if `showHumidity` os set to true, defaults to true).\n* `type` the type of the displayed value, either `min`, `max`, `current`, `clouds`, `sun` or `windspeed` (optional, defaults to `current`)\n* `pollingInterval` the time (in minutes) for periodically updating the temperature (optional, defaults to 0 which means polling only happens when opening the Home-App)\n* `enableHistory` flag for enabling the FakeGato-service (see above) for temperature and humidity logging (optional, defaults to false, only works when polling is enabled)\n* `unit` change the temperature unit to Celsius or Fahrenheit explicitly (optional, defaults to `metric` (Celsius), for Fahrenheit use `imperial`. Beware that iOS usually does the job correctly)\n\n## Known Issues\n\n* Default Home-App can\'t trigger scenes: try [Hesperus App](https://itunes.apple.com/de/app/hesperus/id969348892?mt=8) instead\n\n## Advanced usage\n\nIf you need more features like a more detailed forecast, take a look at **homebridge-weather-plus** ([here](https://github.com/naofireblade/homebridge-weather-plus)), it now supports OpenWeatherMap as well.\n\n![Current Conditions in Elgato Eve app](https://i.imgur.com/ql9t8w0l.png)\n![History graph in Elgato Eve app](https://i.imgur.com/8opO7hel.png)\n>(c) Screenshots are taken from the Elgato Eve app\n'