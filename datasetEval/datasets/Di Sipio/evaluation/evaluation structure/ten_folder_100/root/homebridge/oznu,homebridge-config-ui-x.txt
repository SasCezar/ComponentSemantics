b'[![npm](https://img.shields.io/npm/v/homebridge-config-ui-x.svg)](https://www.npmjs.com/package/homebridge-config-ui-x) \n[![npm](https://img.shields.io/npm/dt/homebridge-config-ui-x.svg)](https://www.npmjs.com/package/homebridge-config-ui-x)\n[![Donate](https://img.shields.io/badge/donate-paypal-yellowgreen.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=ZEW8TFQCU2MSJ&source=url)\n\nSupported Languages: :gb: :de: :fr: :poland: :czech_republic: :ru: :cn: :hungary: :jp: :es: :netherlands: :tr: :it: :bulgaria: :sweden:\n\n# Homebridge Config UI X\n\nThis is a plugin for [Homebridge](https://github.com/nfarina/homebridge). This is a fork of the work originally done by [mkellsy](https://github.com/mkellsy/homebridge-config-ui).\n\nThis plugin allows you to monitor, backup and configure your Homebridge server from a browser.\n\n[![Status](screenshots/homebridge-config-ui-x-accessories.png)](#accessory-control)\n\n# Installation Instructions\n\n```\nsudo npm install -g --unsafe-perm homebridge-config-ui-x\n```\n\nOnce you have installed and configured the plugin you can access the interface via http://localhost:8080. \n\nThe default username is `admin` and the default password is `admin`.\n\n*Docker users should set the environment variable `HOMEBRIDGE_CONFIG_UI=1` to enable the UI. No further manual installation or configuration is required. [See wiki for details](https://github.com/oznu/homebridge-config-ui-x/wiki/Enabling-UI-with-Docker).*\n\n# Configuration\n\nAdd this to your homebridge `config.json` file\n\n```json\n"platforms": [\n    {\n      "platform": "config",\n      "name": "Config",\n      "port": 8080,\n      "sudo": false\n    }\n]\n```\n\n**Optional Settings**\n\n* `log` - [See below for details](#log-viewer-configuration).\n* `sudo` - [See below for details](#sudo-mode).\n* `restart` - The command to run when a restart request is sent from the browser. If not populated it will just terminate the Homebridge process and let your process manager (like systemd) restart it.\n* `temp` - The path to the file that can display your current CPU temperature in WEB UI. eg. `/sys/class/thermal/thermal_zone0/temp`\n* `theme` - [See wiki for details](https://github.com/oznu/homebridge-config-ui-x/wiki/Themes)\n* `ssl` - [See below for details](#enabling-ssl)\n\nAll config options are [listed here](https://github.com/oznu/homebridge-config-ui-x/wiki/Config-Options).\n\n## Accessory Control\n\nThe plugin allows you to view and control some types of Homebridge accessories from your web browser.\n\nTo [enable accessory control](https://github.com/oznu/homebridge-config-ui-x/wiki/Enabling-Accessory-Control) you must be running Homebridge in insecure mode:\n\n```\nhomebridge -I\n```\n\nNot all accessory types are supported. See [this issue](https://github.com/oznu/homebridge-config-ui-x/issues/47) for a full list of supported accessory types.\n\n**Controlling Multiple Instances**\n\n*Homebridge Config UI X\'s* Accessory Control feature allows you to control the accessories from multiple instances of Homebridge. To make this work all instances you want to control must have the same PIN, be on the same network, and be running in insecure mode. Your other instances are automatically discovered, however you can blacklist instances you don\'t want to control using the plugin settings.\n\n## Log Viewer Configuration\n\n*Homebridge Config UI X* allows you to view the homebridge process logs in the browser. These logs can be loaded from a file or from a command.\n\n### Logs From File\n\nExample loading logs from a file, change `/var/log/homebridge.log` to the actual location of your log file:\n\n```json\n"platforms": [\n    {\n      "platform": "config",\n      "name": "Config",\n      "port": 8080,\n      "log": {\n        "method": "file",\n        "path": "/var/log/homebridge.log"\n      }\n    }\n]\n```\n\n*Make sure the user which is running the Homebridge process has the correct permissions to read the log file. You may need to enable the [sudo option](#sudo-mode) to avoid permission errors if you are not running Homebridge as root.*\n\n### Logs From Systemd\n\nIf you\'re using `systemd` to manage the Homebridge process then you can just set the `method` to `systemd`:\n\n```json\n"platforms": [\n    {\n      "platform": "config",\n      "name": "Config",\n      "port": 8080,\n      "restart": "sudo -n systemctl restart homebridge",\n      "log": {\n        "method": "systemd",\n        "service": "homebridge"\n      }\n    }\n]\n```\n\n*You may need to enable the [sudo option](#sudo-mode) to avoid permission errors if you are not running Homebridge as root.*\n\n### Logs From Custom Command\n\nThe `log` option can alternatively specify a command to spawn that will stream the logs to the client. This command should stream the logs to `stdout`:\n\n```json\n"platforms": [\n    {\n      "platform": "config",\n      "name": "Config",\n      "port": 8080,\n      "log": {\n        "method": "custom",\n        "command": "sudo -n tail -n 100 -f /var/log/homebridge.log"\n      }\n    }\n]\n```\n\n## Sudo Mode\n\nMany operations performed by *Homebridge Config UI X*, such as installing plugins, upgrading Homebridge and viewing the logs can require root permissions. You can run the Homebridge service as root or you can enable the `sudo` option in the config.\n\n```json\n"platforms": [\n    {\n      "platform": "config",\n      "name": "Config",\n      "port": 8080,\n      "sudo": true\n    }\n]\n```\n\nWhen `sudo` mode is enabled *Homebridge Config UI X* will use `sudo` when executing installing, removing or upgrading plugins, viewing the logs using the [Logs From File](#logs-from-file) or [Logs From Systemd](#logs-from-systemd) method, and when upgrading Homebridge. It will not be used for [Logs From Custom Command](#logs-from-custom-command) or custom restart commands.\n\n### Password-less sudo required\n\nFor `sudo` mode to work password-less sudo is required. You can enable password-less sudo by adding this entry to the bottom of your `/etc/sudoers` file (use `visudo` to edit the file!):\n\n```\nhomebridge    ALL=(ALL) NOPASSWD: ALL\n```\n\n*Replace `homebridge` with the actual user you are running Homebridge as.*\n\n## Enabling SSL\n\nYou can run this plugin over an encrypted HTTPS connection by configuring the `ssl` options.\n\n```json\n"platforms": [\n    {\n      "platform": "config",\n      "name": "Config",\n      "port": 8080,\n      "ssl": {\n        "key": "/path/to/privkey.pem",\n        "cert": "/path/to/fullchain.pem"\n      }\n    }\n]\n```\n\nOr if using a **PKCS#12** certificate you can setup SSL like this:\n\n```json\n"platforms": [\n    {\n      "platform": "config",\n      "name": "Config",\n      "port": 8080,\n      "ssl": {\n        "pfx": "/path/to/cert.pfx",\n        "passphrase": "sample"\n      }\n    }\n]\n```\n\n# Usage\n\n### Status Screen\n\nThis shows an overview of your Homebridge system. It displays your pairing QR code, and informs you if there are any updates available for Homebridge or installed plugins.\n\n![Status](screenshots/homebridge-config-ui-x-status.png?2019-08-10)\n\n### Log Screen\n\nThis shows you the Homebridge rolling log. This is helpful for troubleshooting.\n\n![Log](screenshots/homebridge-config-ui-x-logs.png?2019-08-10)\n\n### Plugin Screen\n\nThis shows you the currently installed plugins and allows you to install, remove and upgrade plugins.\n\n![Log](screenshots/homebridge-config-ui-x-darkmode-plugins.png)\n\nYou can configure supported plugins using the graphical settings editor, removing the need to manually edit the `config.json`.\n\n![Log](screenshots/homebridge-config-ui-x-darkmode-alexa-settings.png?2019-08-10)\n\n\n### Configuration Screen\n\nThe configuration screen allows you to modify your Homebridge `config.json`. The built in editor automatically syntax-checks your JSON and makes a backup of your config every time you make a change.\n\n![Config](screenshots/homebridge-config-ui-x-config.png?2019-08-10)\n\n# Supported Browsers\n\nThe following browsers are supported by this plugin:\n\n* Chrome - latest\n* Firefox - latest\n* Safari - 2 most recent major versions\n* Edge - 2 most recent major versions\n* iOS - 2 most recent major versions\n\nMS Internet Explorer (any version) is not supported!\n\n# Supported Node.js and Npm Versions\n\nWhile this plugin should work on Node.js 8+, only the following versions of Node.js are officially supported:\n\n* node v10.15.3 or higher\n* npm v6.4.1 or higher\n\nYou can check your current versions using these commands:\n\n```shell\n# check node version\nnode -v\n\n# check npm version\nnpm -v\n```\n\n# Contributing\n\nPlease see [CONTRIBUTING.md](CONTRIBUTING.md).\n\n# Troubleshooting\n\n#### 1. Errors during installation\n\nMake sure you installed the package with `sudo` and used the  `--unsafe-perm` flag. Most installation errors can be fixed by removing the plugin and reinstalling:\n\n```shell\n# cleanup\nsudo npm uninstall -g homebridge-config-ui-x\n\n# reinstall\nsudo npm install -g --unsafe-perm homebridge-config-ui-x\n```\n\nMake sure you are running [supported versions of node and npm](#supported-nodejs-and-npm-versions).\n\n#### 2. Accessories tab missing\n\nIf the Accessories tab is not show then you are not running Homebridge in insecure mode. See the [Enabling Accessory Control](https://github.com/oznu/homebridge-config-ui-x/wiki/Enabling-Accessory-Control) wiki for details. If you have just enabled insecure mode make sure you have restarted Homebridge and refreshed the page in your browser.\n\n#### 3. Running in Docker\n\nThis plugin supports the [oznu/homebridge](https://github.com/oznu/docker-homebridge) Docker image. You must enable the UI using the method described in [the wiki](https://github.com/oznu/homebridge-config-ui-x/wiki/Enabling-UI-with-Docker).\n\n#### 4. Ask on Slack\n\n[![Slack Status](https://slackin-znyruquwmv.now.sh/badge.svg)](https://slackin-znyruquwmv.now.sh)\n\nJoin the [Homebridge Slack](https://slackin-znyruquwmv.now.sh/) chat and ask in the [#ui](https://homebridgeteam.slack.com/messages/C9NH0CUTY) channel.\n'