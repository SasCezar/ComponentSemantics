b"# PAI - Paradox Alarm Interface\n\n[![Join the chat at https://gitter.im/paradox-alarm-interface/community](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/paradox-alarm-interface/community)\n\n\nMiddleware that aims to connect to a Paradox Alarm panel, exposing the interface for monitoring and control via several technologies.\nWith this interface it is possible to integrate Paradox panels with HomeAssistant, OpenHAB, Homebridge or other domotics system that supports MQTT, as well as several IM methods.\n\nIt supports MG/SP/EVO panels connected through a serial port, which is present in all panels (TTL 5V), or through a USB 307 module. It also supports connections using the IP150 module, both directly (firmware version <4.0), and through the SITE ID (firmware versions >4.0).\n\nSupport for Magellan, Spectra and EVO panels is very stable. If you find a bug, please report it.\n\n\nFor further information and detailed usage refer to the [Wiki](https://github.com/ParadoxAlarmInterface/pai/wiki).\n\nIf you are having issues, or wish to discuss new features, join us at our [Gitter community](https://gitter.im/paradox-alarm-interface)\n\nOn Android, if you install [MQTT Dash](https://play.google.com/store/apps/details?id=net.routix.mqttdash), and [follow the instructions](https://github.com/ParadoxAlarmInterface/pai/wiki#mqtt-dash) you will automatically get a panel like this:\n![mqtt_dash](https://user-images.githubusercontent.com/497717/52603920-d4984d80-2e60-11e9-9772-578b10576b3c.jpg)\n\n## Branch build statuses\n- [master](https://github.com/ParadoxAlarmInterface/pai/tree/master) [![Build Status Master](https://travis-ci.org/ParadoxAlarmInterface/pai.svg?branch=master)](https://travis-ci.org/ParadoxAlarmInterface/pai)\n- [dev](https://github.com/ParadoxAlarmInterface/pai/tree/dev) [![Build Status Dev](https://travis-ci.org/ParadoxAlarmInterface/pai.svg?branch=dev)](https://travis-ci.org/ParadoxAlarmInterface/pai)\n\n## Things you need to have to be able to connect\nWe support two connection options: via Serial and via IP150 Module\n\n#### For all connection methods\n- **PC Password:** 4 digit `[0-9a-f]` password.\nCan be looked up in Babyware (_Right click on a panel \xe2\x87\xbe Properties \xe2\x87\xbe PC Communication (BabyWare) \xe2\x87\xbe PC Communication (BabyWare) \xe2\x87\xbe PC Password_)\n#### In case of IP150 you need additionally:\n- **IP Module password**: Default is `paradox`\n##### For IP150 firmware > 4.0 if you connect via Paradox Cloud (SWAN)\n- **SITE ID**\n- **Email registered in the site**\n\n## How to use\nSee [wiki](https://github.com/ParadoxAlarmInterface/pai/wiki/Installation)\n\n## Tested Environment\n\nTested in the following environment:\n* Python > 3.5.2\n* Mosquitto MQTT Broker >v 1.4.8\n* OrangePi 2G-IOT, NanoPi NEO, and Raspberry Pi 3 through their built in Serial Port (with a level shifter!), or a USB RS232 TTL adapter (CP2102, PL2303, CH340, etc..)\n* Ubuntu Server 16.04.3 LTS\n* Paradox MG5050, SP7000 and EVO panels\n* [Signal Cli](https://github.com/AsamK/signal-cli) through a DBUS interface\n* Pushbullet.py\n* SIM900 module through a serial port\n\n## Authors\n\n* Jo\xc3\xa3o Paulo Barraca - [@jpbarraca](https://github.com/jpbarraca) - Main code and MG/SP devices\n* Ion Darie - [@iondarie](https://github.com/iondarie) - Homebridge integration\n* Jevgeni Kiski - [@yozik04](https://github.com/yozik04) - EVO devices\n\n## Acknowledgments\n\nThis work is inspired or uses parts from the following projects:\n\n* Tertiush at https://github.com/Tertiush/ParadoxIP150v2\n* Spinza at https://github.com/spinza/paradox_mqtt\n\n## Thanks\n* Ivan Markov - [@ivmarkov](https://github.com/ivmarkov) - Multi-platform Docker builds with Travis\n\n## Disclaimer\n\nParadox, MG5050 and IP150 are registered marks of PARADOX. Other brands are owned by their respective owners.\n\nThe code was developed as a way of integrating personally owned Paradox systems, and it cannot be used for other purposes.\nIt is not affiliated with any company and it doesn't have have commercial intent.\n\nThe code is provided AS IS and the developers will not be held responsible for failures in the alarm systems, or any other malfunction.\n"