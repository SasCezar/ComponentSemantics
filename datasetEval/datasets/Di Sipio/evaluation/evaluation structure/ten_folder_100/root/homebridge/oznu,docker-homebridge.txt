b'[![Donate](https://img.shields.io/badge/donate-paypal-yellowgreen.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=ZEW8TFQCU2MSJ&source=url) [![Docker Build Status](https://img.shields.io/travis/oznu/docker-homebridge/master.svg?label=amd64%20build)](https://hub.docker.com/r/oznu/homebridge/) [![Travis](https://img.shields.io/travis/oznu/docker-homebridge/master.svg?label=arm%20build)](https://travis-ci.org/oznu/docker-homebridge) [![Docker Pulls](https://img.shields.io/docker/pulls/oznu/homebridge.svg)](https://hub.docker.com/r/oznu/homebridge/)\n\n# Docker Homebridge\n\nThis Alpine/Debian Linux based Docker image allows you to run [Nfarina\'s](https://github.com/nfarina) [Homebridge](https://github.com/nfarina/homebridge) on your home network which emulates the iOS HomeKit API.\n\n  * [Guides](#guides)\n  * [Compatibility](#compatibility)\n  * [Usage](#usage)\n  * [Parameters](#parameters)\n  * [Homebridge Config](#homebridge-config)\n  * [Installing Plugins](#homebridge-plugins)\n  * [Docker Compose](#docker-compose)\n  * [Troubleshooting](#troubleshooting)\n\n## Guides\n\n- [Running Homebridge on a Raspberry Pi](https://github.com/oznu/docker-homebridge/wiki/Homebridge-on-Raspberry-Pi)\n- [Running Homebridge on a Synology NAS](https://github.com/oznu/docker-homebridge/wiki/Homebridge-on-Synology)\n\n## Compatibility\n\nHomebridge requires full access to your local network to function correctly which can be achieved using the ```--net=host``` flag.\nCurrently this image will not work when using [Docker for Mac](https://docs.docker.com/docker-for-mac/) or [Docker for Windows](https://docs.docker.com/docker-for-windows/) due to [this](https://github.com/docker/for-mac/issues/68) and [this](https://github.com/docker/for-win/issues/543).\n\n\n## Usage\n\n```shell\ndocker run \\\n  --net=host \\\n  --name=homebridge \\\n  -e PUID=<UID> -e PGID=<GID> \\\n  -e TZ=<timezone> \\\n  -v </path/to/config>:/homebridge \\\n  oznu/homebridge\n```\n\n## Raspberry Pi / ARMv6\n\nThis image will also run on a Raspberry Pi or other Docker-enabled ARMv6/7/8 devices by using the using the ```arm32v6``` tag:\n\n```\ndocker run --net=host --name=homebridge oznu/homebridge:arm32v6\n```\n\nThis docker image has been tested on the following Raspberry Pi models:\n\n* Raspberry Pi 1 Model B\n* Raspberry Pi 3 Model B\n* Raspberry Pi Zero W\n\n[See the wiki for a guide on getting Homebridge up and running on a Raspberry Pi](https://github.com/oznu/docker-homebridge/wiki/Homebridge-on-Raspberry-Pi).\n\n## AARCH64 / arm64v8\n\nThis image will also run on AARCH64/arm64v8 devices using the `arm64v8` tag:\n\n```\ndocker run --net=host --name=homebridge oznu/homebridge:arm64v8\n```\n\n## Parameters\n\nThe parameters are split into two halves, separated by a colon, the left hand side representing the host and the right the container side.\n\n* `--net=host` - Shares host networking with container, **required**\n* `-v /homebridge` - The Homebridge config and plugin location\n* `-e TZ` - for [timezone information](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) e.g. `-e TZ=Europe/London`\n* `-e PGID` - for GroupID - see below for explanation\n* `-e PUID` - for UserID - see below for explanation\n\n##### *Optional Settings:*\n\n* `-e PACKAGES` - Additional [packages](https://pkgs.alpinelinux.org/packages) to install (comma separated, no spaces) e.g. `-e PACKAGES=ffmpeg,openssh`\n* `-e TERMINATE_ON_ERROR=1` - If `TERMINATE_ON_ERROR` is set to `1` then the container will exit when the Homebridge process ends, otherwise it will be restarted.\n* `-e HOMEBRIDGE_INSECURE=1` - Start homebridge in insecure mode using the `-I` flag.\n* `-e HOMEBRIDGE_DEBUG=1` - Enable debug level logging using the `-D` flag.\n\n##### *Homebridge UI Options*:\n\nThis is the only supported method of running [homebridge-config-ui-x](https://github.com/oznu/homebridge-config-ui-x) on oznu/homebridge.\n\n* `-e HOMEBRIDGE_CONFIG_UI=1` - Enable and configure [homebridge-config-ui-x](https://github.com/oznu/homebridge-config-ui-x) which allows you to manage and configure Homebridge from your web browser.\n* `-e HOMEBRIDGE_CONFIG_UI_PORT=8080` - The port to run [homebridge-config-ui-x](https://github.com/oznu/homebridge-config-ui-x) on. Defaults to port 8080.\n\n### User / Group Identifiers\n\nSometimes when using data volumes (`-v` flags) permissions issues can arise between the host OS and the container. We avoid this issue by allowing you to specify the user `PUID` and group `PGID`. Ensure the data volume directory on the host is owned by the same user you specify and it will "just work".\n\nIn this instance `PUID=1001` and `PGID=1001`. To find yours use `id user` as below:\n\n```\n  $ id <dockeruser>\n    uid=1001(dockeruser) gid=1001(dockergroup) groups=1001(dockergroup)\n```\n\n## Homebridge Config\n\nThe Homebridge config file is located at ```</path/to/config>/config.json```\nThis file will be created the first time you run the container if it does not already exist.\n\n## Homebridge Plugins\n\nPlugins should be defined in the ```</path/to/config>/package.json``` file in the standard NPM format.\nThis file will be created the first time you run the container if it does not already exist.\n\nAny plugins added to the `package.json` will be installed each time the container is restarted.\nPlugins can be uninstalled by removing the entry from the `package.json` and restarting the container.\n\nYou can also install plugins using `npm` which will automatically update the package.json file as you add and remove modules.\n\n**You must restart the container after installing or removing plugins for the changes to take effect.**\n\n### To add plugins using npm:\n\n```\ndocker exec <container name or id> npm install <module name>\n```\n\nExample:\n\n```\ndocker exec homebridge npm install homebridge-dummy\n```\n\n### To remove plugins using npm:\n\n```\ndocker exec <container name or id> npm remove <module name>\n```\n\nExample:\n\n```\ndocker exec homebridge npm remove homebridge-dummy\n```\n\n### To add plugins using `startup.sh` script:\n\nThe first time you run the container a script named [`startup.sh`](/root/defaults/startup.sh) will be created in your mounted `/homebridge` volume. This script is executed everytime the container is started, before Homebridge loads, and can be used to install plugins if you don\'t want to edit the `package.json` file manually.\n\nTo add plugins using the `startup.sh` script just use the `npm install` command:\n\n```shell\n#!/bin/sh\n\nnpm install homebridge-dummy\n```\n\nThis container does **NOT** require you to install plugins globally (using `npm install -g` or `yarn global add`) and doing so is **NOT** recommended or supported.\n\n## Docker Compose\n\nIf you prefer to use [Docker Compose](https://docs.docker.com/compose/):\n\n```yml\nversion: \'2\'\nservices:\n  homebridge:\n    image: oznu/homebridge:latest  # use "arm32v6" instead of "latest" for arm devices\n    restart: always\n    network_mode: host\n    environment:\n      - TZ=Australia/Sydney\n      - PGID=1000\n      - PUID=1000\n    volumes:\n      - ./volumes/homebridge:/homebridge\n```\n\n## Troubleshooting\n\n#### 1. Verify your config.json and package.json syntax\n\nMany issues appear because of invalid JSON. A good way to verify your config is to use the [jsonlint.com](http://jsonlint.com/) validator.\n\n#### 2. When running on Synology DSM set the `DSM_HOSTNAME` environment variable\n\nYou may need to provide the server name of your Synology NAS using the `DSM_HOSTNAME` environment variable to prevent [hostname conflict errors](https://github.com/oznu/docker-homebridge/issues/35). The value of the `DSM_HOSTNAME` environment should exactly match the server name as shown under `Synology DSM Control Panel` -> `Info Centre` -> `Server name`, it should contain no spaces or special characters.\n\n#### 3. Need ffmpeg?\n\nYou can enable `ffmpeg` by adding this environment variable to your run command or docker-compose.yml:\n\n```\nPACKAGES=ffmpeg\n```\n\n#### 4. Try the debian tag\n\nSome plugins don\'t like Alpine Linux so this project also provides a Debian based version of the image.\n\n```\ndocker run oznu/homebridge:debian\ndocker run oznu/homebridge:debian-arm32v7\n```\n\nSee the wiki for a list of image variants: https://github.com/oznu/docker-homebridge/wiki\n\n#### 5. Logs showing `Service name conflict` or `Host name conflict`\n\nYou may need to use a `no-avahi` version of this image to prevent conflicts with the Avahi service running on the host:\n\n```shell\n# Alpine\ndocker run oznu/homebridge:no-avahi\ndocker run oznu/homebridge:no-avahi-arm32v6\ndocker run oznu/homebridge:no-avahi-arm64v8\n\n# Debian\ndocker run oznu/homebridge:debian-no-avahi\ndocker run oznu/homebridge:debian-no-avahi-arm32v7\n```\n\nSee the wiki for a list of image variants: https://github.com/oznu/docker-homebridge/wiki\n\n#### 6. Ask on Slack\n\n[![Slack Status](https://slackin-znyruquwmv.now.sh/badge.svg)](https://slackin-znyruquwmv.now.sh)\n\nJoin the [Homebridge Slack](https://slackin-znyruquwmv.now.sh/) chat and ask in the [#docker](https://homebridgeteam.slack.com/messages/C961HJHCP) channel.\n\n## License\n\nCopyright (C) 2019 oznu\n\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the [GNU General Public License](./LICENSE) for more details.\n'