b'<h1 align="center">\n  downshift \xf0\x9f\x8f\x8e\n  <br>\n  <img src="https://downshift.netlify.com/logo/downshift.svg" alt="downshift logo" title="downshift logo" width="300">\n  <br>\n</h1>\n<p align="center" style="font-size: 1.2rem;">Primitives to build simple, flexible, WAI-ARIA compliant React\nautocomplete/dropdown/select/combobox components</p>\n\n> See\n> [the intro blog post](https://blog.kentcdodds.com/introducing-downshift-for-react-b1de3fca0817) and\n> [Episode\n> 79 of the Full Stack Radio podcast](https://simplecast.com/s/f2e65eaf)\n\n<hr />\n\n[![Build Status][build-badge]][build]\n[![Code Coverage][coverage-badge]][coverage]\n[![downloads][downloads-badge]][npmcharts] [![version][version-badge]][package]\n[![MIT License][license-badge]][license]\n\n[![All Contributors](https://img.shields.io/badge/all_contributors-113-orange.svg?style=flat-square)](#contributors)\n[![PRs Welcome][prs-badge]][prs] [![Chat][chat-badge]][chat]\n[![Code of Conduct][coc-badge]][coc]\n[![Join the community on Spectrum][spectrum-badge]][spectrum]\n\n[![Supports React and Preact][react-badge]][react]\n[![size][size-badge]][unpkg-dist] [![gzip size][gzip-badge]][unpkg-dist]\n[![module formats: umd, cjs, and es][module-formats-badge]][unpkg-dist]\n\n## The problem\n\nYou need an autocomplete/dropdown/select experience in your application and you\nwant it to be accessible. You also want it to be simple and flexible to account\nfor your use cases.\n\n## This solution\n\nThis is a component that controls user interactions and state for you so you can\ncreate autocomplete, dropdown, select, etc. components. It uses a [render\nprop][use-a-render-prop] which gives you maximum flexibility with a minimal API\nbecause you are responsible for the rendering of everything and you simply apply\nprops to what you\'re rendering.\n\nThis differs from other solutions which render things for their use case and\nthen expose many options to allow for extensibility resulting in a bigger API\nthat is less flexible as well as making the implementation more complicated and\nharder to contribute to.\n\n> NOTE: The original use case of this component is autocomplete, however the API\n> is powerful and flexible enough to build things like dropdowns as well.\n\n## The new React Hooks API\n\nDownshift has proven to be a versatile React component which can be used not only\nfor single selection autocomplete, but also for single selection dropdown and\nthe multiple selection variations of each. In order to customise the behavior, the\ndeveloper needs to add more stateful logic to it, however, as each of the variations\ndiffer in terms of design patterns.\n\nIn the effort to provide out of the box solutions for each variation, a set of React\nHooks are about to be available as part of Downshift. Each hook will handle a specific\ndropdown variation and be named accordingly: `useSelect`, `useAutocomplete`, etc.\n\nYou can check the progress in the [hooks page][hooks-readme] and contribute! If you\nhave a custom `<select>` dropdown and want it to be functional and accessible, jump\ndirectly to the already implemented [useSelect][useselect-readme]. For more examples of\n`useSelect`, check out our [docsite](https://downshift.netlify.com/)!\n\n## Table of Contents\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON\'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [Basic Props](#basic-props)\n  - [children](#children)\n  - [itemToString](#itemtostring)\n  - [onChange](#onchange)\n  - [stateReducer](#statereducer)\n- [Advanced Props](#advanced-props)\n  - [initialSelectedItem](#initialselecteditem)\n  - [initialInputValue](#initialinputvalue)\n  - [initialHighlightedIndex](#initialhighlightedindex)\n  - [initialIsOpen](#initialisopen)\n  - [defaultHighlightedIndex](#defaulthighlightedindex)\n  - [defaultIsOpen](#defaultisopen)\n  - [selectedItemChanged](#selecteditemchanged)\n  - [getA11yStatusMessage](#geta11ystatusmessage)\n  - [onSelect](#onselect)\n  - [onStateChange](#onstatechange)\n  - [onInputValueChange](#oninputvaluechange)\n  - [itemCount](#itemcount)\n  - [highlightedIndex](#highlightedindex)\n  - [inputValue](#inputvalue)\n  - [isOpen](#isopen)\n  - [selectedItem](#selecteditem)\n  - [id](#id)\n  - [inputId](#inputid)\n  - [labelId](#labelid)\n  - [menuId](#menuid)\n  - [getItemId](#getitemid)\n  - [environment](#environment)\n  - [onOuterClick](#onouterclick)\n  - [scrollIntoView](#scrollintoview)\n- [stateChangeTypes](#statechangetypes)\n- [Control Props](#control-props)\n- [Children Function](#children-function)\n  - [prop getters](#prop-getters)\n  - [actions](#actions)\n  - [state](#state)\n  - [props](#props)\n- [Event Handlers](#event-handlers)\n  - [default handlers](#default-handlers)\n  - [customizing handlers](#customizing-handlers)\n- [Utilities](#utilities)\n  - [resetIdCounter](#resetidcounter)\n- [React Native](#react-native)\n  - [Gotchas](#gotchas)\n- [Advanced React Component Patterns course](#advanced-react-component-patterns-course)\n- [Examples](#examples)\n- [FAQ](#faq)\n- [Inspiration](#inspiration)\n- [Other Solutions](#other-solutions)\n- [Bindings for ReasonML](#bindings-for-reasonml)\n- [Contributors](#contributors)\n- [LICENSE](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\nThis module is distributed via [npm][npm] which is bundled with [node][node] and\nshould be installed as one of your project\'s `dependencies`:\n\n```\nnpm install --save downshift\n```\n\n> This package also depends on `react` and `prop-types`. Please make sure you\n> have those installed as well.\n\n> Note also this library supports `preact` out of the box. If you are using\n> `preact` then use the corresponding module in the `preact/dist` folder. You\n> can even `import Downshift from \'downshift/preact\'` \xf0\x9f\x91\x8d\n\n## Usage\n\n> [Try it out in the browser](https://codesandbox.io/s/n9095)\n\n```jsx\nimport React from \'react\'\nimport {render} from \'react-dom\'\nimport Downshift from \'downshift\'\n\nconst items = [\n  {value: \'apple\'},\n  {value: \'pear\'},\n  {value: \'orange\'},\n  {value: \'grape\'},\n  {value: \'banana\'},\n]\n\nrender(\n  <Downshift\n    onChange={selection =>\n      alert(selection ? `You selected ${selection.value}` : \'Selection Cleared\')\n    }\n    itemToString={item => (item ? item.value : \'\')}\n  >\n    {({\n      getInputProps,\n      getItemProps,\n      getLabelProps,\n      getMenuProps,\n      isOpen,\n      inputValue,\n      highlightedIndex,\n      selectedItem,\n    }) => (\n      <div>\n        <label {...getLabelProps()}>Enter a fruit</label>\n        <input {...getInputProps()} />\n        <ul {...getMenuProps()}>\n          {isOpen\n            ? items\n                .filter(item => !inputValue || item.value.includes(inputValue))\n                .map((item, index) => (\n                  <li\n                    {...getItemProps({\n                      key: item.value,\n                      index,\n                      item,\n                      style: {\n                        backgroundColor:\n                          highlightedIndex === index ? \'lightgray\' : \'white\',\n                        fontWeight: selectedItem === item ? \'bold\' : \'normal\',\n                      },\n                    })}\n                  >\n                    {item.value}\n                  </li>\n                ))\n            : null}\n        </ul>\n      </div>\n    )}\n  </Downshift>,\n  document.getElementById(\'root\'),\n)\n```\n\n`<Downshift />` is the only component exposed by this package. It doesn\'t render\nanything itself, it just calls the render function and renders that.\n["Use a render prop!"][use-a-render-prop]!\n`<Downshift>{downshift => <div>/* your JSX here! */</div>}</Downshift>`.\n\n## Basic Props\n\nThis is the list of props that you should probably know about. There are some\n[advanced props](#advanced-props) below as well.\n\n### children\n\n> `function({})` | _required_\n\nThis is called with an object. Read more about the properties of this object in\nthe section "[Children Function](#children-function)".\n\n### itemToString\n\n> `function(item: any)` | defaults to: `i => (i == null ? \'\' : String(i))`\n\nUsed to determine the string value for the selected item (which is used to\ncompute the `inputValue`).\n\n### onChange\n\n> `function(selectedItem: any, stateAndHelpers: object)` | optional, no useful\n> default\n\nCalled when the selected item changes, either by the user selecting an item or the user clearing the selection. Called with the item that was selected or `null` and the new state of `downshift`. (see `onStateChange` for more info on `stateAndHelpers`).\n\n- `selectedItem`: The item that was just selected. `null` if the selection was cleared.\n- `stateAndHelpers`: This is the same thing your `children` function is\n  called with (see [Children Function](#children-function))\n\n### stateReducer\n\n> `function(state: object, changes: object)` | optional\n\n**\xf0\x9f\x9a\xa8 This is a really handy power feature \xf0\x9f\x9a\xa8**\n\nThis function will be called each time `downshift` sets its internal state\n(or calls your `onStateChange` handler for control props). It allows you to\nmodify the state change that will take place which can give you fine grain\ncontrol over how the component interacts with user updates without having to\nuse [Control Props](#control-props). It gives you the current state and the\nstate that will be set, and you return the state that you want to set.\n\n- `state`: The full current state of downshift.\n- `changes`: These are the properties that are about to change. This also has a\n  `type` property which you can learn more about in the\n  [`stateChangeTypes`](#statechangetypes) section.\n\n```jsx\nconst ui = (\n  <Downshift stateReducer={stateReducer}>{/* your callback */}</Downshift>\n)\n\nfunction stateReducer(state, changes) {\n  // this prevents the menu from being closed when the user\n  // selects an item with a keyboard or mouse\n  switch (changes.type) {\n    case Downshift.stateChangeTypes.keyDownEnter:\n    case Downshift.stateChangeTypes.clickItem:\n      return {\n        ...changes,\n        isOpen: state.isOpen,\n        highlightedIndex: state.highlightedIndex,\n      }\n    default:\n      return changes\n  }\n}\n```\n\n> NOTE: This is only called when state actually changes. You should not attempt\n> to use this to handle events. If you wish to handle events, put your event\n> handlers directly on the elements (make sure to use the prop getters though!\n> For example: `<input onBlur={handleBlur} />` should be\n> `<input {...getInputProps({onBlur: handleBlur})} />`). Also, your reducer\n> function should be "pure." This means it should do nothing other than return\n> the state changes you want to have happen.\n\n## Advanced Props\n\n### initialSelectedItem\n\n> `any` | defaults to `null`\n\nPass an item or an array of items that should be selected when downshift is initialized.\n\n### initialInputValue\n\n> `string` | defaults to `\'\'`\n\nThis is the initial input value when downshift is initialized.\n\n### initialHighlightedIndex\n\n> `number`/`null` | defaults to `defaultHighlightedIndex`\n\nThis is the initial value to set the highlighted index to when downshift is initialized.\n\n### initialIsOpen\n\n> `boolean` | defaults to `defaultIsOpen`\n\nThis is the initial `isOpen` value when downshift is initialized.\n\n### defaultHighlightedIndex\n\n> `number`/`null` | defaults to `null`\n\nThis is the value to set the `highlightedIndex` to anytime downshift is reset,\nwhen the the selection is cleared, when an item is selected or when the inputValue is changed.\n\n### defaultIsOpen\n\n> `boolean` | defaults to `false`\n\nThis is the value to set the `isOpen` to anytime downshift is reset, when the\nthe selection is cleared, or when an item is selected.\n\n### selectedItemChanged\n\n> `function(prevItem: any, item: any)` | defaults to: `(prevItem, item) => (prevItem !== item)`\n\nUsed to determine if the new `selectedItem` has changed compared to the previous\n`selectedItem` and properly update Downshift\'s internal state.\n\n### getA11yStatusMessage\n\n> `function({/* see below */})` | default messages provided in English\n\nThis function is passed as props to a `Status` component nested within and\nallows you to create your own assertive ARIA statuses.\n\nA default `getA11yStatusMessage` function is provided that will check\n`resultCount` and return "No results." or if there are results but no item is\nhighlighted, "`resultCount` results are available, use up and down arrow keys to\nnavigate." If an item is highlighted it will run `itemToString(highlightedItem)`\nand display the value of the `highlightedItem`.\n\nThe object you are passed to generate your status message has the following\nproperties:\n\n<!-- This table was generated via http://www.tablesgenerator.com/markdown_tables -->\n\n| property              | type            | description                                                                                  |\n| --------------------- | --------------- | -------------------------------------------------------------------------------------------- |\n| `highlightedIndex`    | `number`/`null` | The currently highlighted index                                                              |\n| `highlightedItem`     | `any`           | The value of the highlighted item                                                            |\n| `inputValue`          | `string`        | The current input value                                                                      |\n| `isOpen`              | `boolean`       | The `isOpen` state                                                                           |\n| `itemToString`        | `function(any)` | The `itemToString` function (see props) for getting the string value from one of the options |\n| `previousResultCount` | `number`        | The total items showing in the dropdown the last time the status was updated                 |\n| `resultCount`         | `number`        | The total items showing in the dropdown                                                      |\n| `selectedItem`        | `any`           | The value of the currently selected item                                                     |\n\n### onSelect\n\n> `function(selectedItem: any, stateAndHelpers: object)` | optional, no useful\n> default\n\nCalled when the user selects an item, regardless of the previous selected item.\nCalled with the item that was selected and the new state of `downshift`. (see\n`onStateChange` for more info on `stateAndHelpers`).\n\n- `selectedItem`: The item that was just selected\n- `stateAndHelpers`: This is the same thing your `children` function is\n  called with (see [Children Function](#children-function))\n\n### onStateChange\n\n> `function(changes: object, stateAndHelpers: object)` | optional, no useful\n> default\n\nThis function is called anytime the internal state changes. This can be useful\nif you\'re using downshift as a "controlled" component, where you manage some or\nall of the state (e.g. isOpen, selectedItem, highlightedIndex, etc) and then\npass it as props, rather than letting downshift control all its state itself.\nThe parameters both take the shape of internal state (`{highlightedIndex: number, inputValue: string, isOpen: boolean, selectedItem: any}`) but differ\nslightly.\n\n- `changes`: These are the properties that actually have changed since the last\n  state change. This also has a `type` property which you can learn more about\n  in the [`stateChangeTypes`](#statechangetypes) section.\n- `stateAndHelpers`: This is the exact same thing your `children` function is\n  called with (see [Children Function](#children-function))\n\n> Tip: This function will be called any time _any_ state is changed. The best\n> way to determine whether any particular state was changed, you can use\n> `changes.hasOwnProperty(\'propName\')`.\n\n> NOTE: This is only called when state actually changes. You should not attempt\n> to use this to handle events. If you wish to handle events, put your event\n> handlers directly on the elements (make sure to use the prop getters though!\n> For example: `<input onBlur={handleBlur} />` should be\n> `<input {...getInputProps({onBlur: handleBlur})} />`).\n\n### onInputValueChange\n\n> `function(inputValue: string, stateAndHelpers: object)` | optional, no useful\n> default\n\nCalled whenever the input value changes. Useful to use instead or in combination\nof `onStateChange` when `inputValue` is a controlled prop to\n[avoid issues with cursor positions](https://github.com/downshift-js/downshift/issues/217).\n\n- `inputValue`: The current value of the input\n- `stateAndHelpers`: This is the same thing your `children` function is\n  called with (see [Children Function](#children-function))\n\n### itemCount\n\n> `number` | optional, defaults the number of times you call getItemProps\n\nThis is useful if you\'re using some kind of virtual listing component for\n"windowing" (like\n[`react-virtualized`](https://github.com/bvaughn/react-virtualized)).\n\n### highlightedIndex\n\n> `number` | **control prop** (read more about this in\n> [the Control Props section](#control-props))\n\nThe index that should be highlighted\n\n### inputValue\n\n> `string` | **control prop** (read more about this in\n> [the Control Props section](#control-props))\n\nThe value the input should have\n\n### isOpen\n\n> `boolean` | **control prop** (read more about this in\n> [the Control Props section](#control-props))\n\nWhether the menu should be considered open or closed. Some aspects of the\ndownshift component respond differently based on this value (for example, if\n`isOpen` is true when the user hits "Enter" on the input field, then the item at\nthe `highlightedIndex` item is selected).\n\n### selectedItem\n\n> `any`/`Array(any)` | **control prop** (read more about this in\n> [the Control Props section](#control-props))\n\nThe currently selected item.\n\n### id\n\n> `string` | defaults to a generated ID\n\nYou should not normally need to set this prop. It\'s only useful if you\'re server\nrendering items (which each have an `id` prop generated based on the `downshift`\n`id`). For more information see the `FAQ` below.\n\n### inputId\n\n> `string` | defaults to a generated ID\n\nUsed for `aria` attributes and the `id` prop of the element (`input`) you use\n[`getInputProps`](#getinputprops) with.\n\n### labelId\n\n> `string` | defaults to a generated ID\n\nUsed for `aria` attributes and the `id` prop of the element (`label`) you use\n[`getLabelProps`](#getlabelprops) with.\n\n### menuId\n\n> `string` | defaults to a generated ID\n\nUsed for `aria` attributes and the `id` prop of the element (`ul`) you use\n[`getMenuProps`](#getmenuprops) with.\n\n### getItemId\n\n> `function(index)` | defaults to a function that generates an ID based on the index\n\nUsed for `aria` attributes and the `id` prop of the element (`li`) you use\n[`getInputProps`](#getinputprops) with.\n\n### environment\n\n> `window` | defaults to `window`\n\nThis prop is only useful if you\'re rendering downshift within a different `window` context from where your JavaScript is running; for example, an iframe or a shadow-root. If the given context is lacking `document` and/or `add|removeEventListener` on its prototype (as is the case for a shadow-root) then you will need to pass in a custom object that is able to provide [access to these properties](https://gist.github.com/Rendez/1dd55882e9b850dd3990feefc9d6e177) for downshift.\n\n### onOuterClick\n\n> `function(stateAndHelpers: object)` | optional\n\nA helper callback to help control internal state of downshift like `isOpen` as\nmentioned in [this issue](https://github.com/downshift-js/downshift/issues/206). The\nsame behavior can be achieved using `onStateChange`, but this prop is provided\nas a helper because it\'s a fairly common use-case if you\'re controlling the\n`isOpen` state:\n\n```jsx\nconst ui = (\n  <Downshift\n    isOpen={this.state.menuIsOpen}\n    onOuterClick={() => this.setState({menuIsOpen: false})}\n  >\n    {/* your callback */}\n  </Downshift>\n)\n```\n\nThis callback will only be called if `isOpen` is `true`.\n\n### scrollIntoView\n\n> `function(node: HTMLElement, menuNode: HTMLElement)` | defaults to internal\n> implementation\n\nThis allows you to customize how the scrolling works when the highlighted index\nchanges. It receives the node to be scrolled to and the root node (the root\nnode you render in downshift). Internally we use\n[`compute-scroll-into-view`](https://www.npmjs.com/package/compute-scroll-into-view)\nso if you use that package then you wont be adding any additional bytes to your\nbundle :)\n\n## stateChangeTypes\n\nThere are a few props that expose changes to state\n([`onStateChange`](#onstatechange) and [`stateReducer`](#statereducer)).\nFor you to make the most of these APIs, it\'s important for you to understand\nwhy state is being changed. To accomplish this, there\'s a `type` property on the\n`changes` object you get. This `type` corresponds to a\n`Downshift.stateChangeTypes` property.\n\nThe list of all possible values this `type` property can take is defined in\n[this file](https://github.com/downshift-js/downshift/blob/master/src/stateChangeTypes.js)\nand is as follows:\n\n- `Downshift.stateChangeTypes.unknown`\n- `Downshift.stateChangeTypes.mouseUp`\n- `Downshift.stateChangeTypes.itemMouseEnter`\n- `Downshift.stateChangeTypes.keyDownArrowUp`\n- `Downshift.stateChangeTypes.keyDownArrowDown`\n- `Downshift.stateChangeTypes.keyDownEscape`\n- `Downshift.stateChangeTypes.keyDownEnter`\n- `Downshift.stateChangeTypes.clickItem`\n- `Downshift.stateChangeTypes.blurInput`\n- `Downshift.stateChangeTypes.changeInput`\n- `Downshift.stateChangeTypes.keyDownSpaceButton`\n- `Downshift.stateChangeTypes.clickButton`\n- `Downshift.stateChangeTypes.blurButton`\n- `Downshift.stateChangeTypes.controlledPropUpdatedSelectedItem`\n- `Downshift.stateChangeTypes.touchEnd`\n\nSee [`stateReducer`](#statereducer) for a concrete example on how to use the\n`type` property.\n\n## Control Props\n\ndownshift manages its own state internally and calls your `onChange` and\n`onStateChange` handlers with any relevant changes. The state that downshift\nmanages includes: `isOpen`, `selectedItem`, `inputValue`, and\n`highlightedIndex`. Your Children function (read more below) can be used to\nmanipulate this state and can likely support many of your use cases.\n\nHowever, if more control is needed, you can pass any of these pieces of state as\na prop (as indicated above) and that state becomes controlled. As soon as\n`this.props[statePropKey] !== undefined`, internally, `downshift` will determine\nits state based on your prop\'s value rather than its own internal state. You\nwill be required to keep the state up to date (this is where `onStateChange`\ncomes in really handy), but you can also control the state from anywhere, be\nthat state from other components, `redux`, `react-router`, or anywhere else.\n\n> Note: This is very similar to how normal controlled components work elsewhere\n> in react (like `<input />`). If you want to learn more about this concept, you\n> can learn about that from this the\n> [Advanced React Component Patterns course](#advanced-react-component-patterns-course)\n\n## Children Function\n\nThis is where you render whatever you want to based on the state of `downshift`.\nYou use it like so:\n\n```javascript\nconst ui = (\n  <Downshift>\n    {downshift => (\n      // use downshift utilities and state here, like downshift.isOpen,\n      // downshift.getInputProps, etc.\n      <div>{/* more jsx here */}</div>\n    )}\n  </Downshift>\n)\n```\n\nThe properties of this `downshift` object can be split into three categories as\nindicated below:\n\n### prop getters\n\n> See\n> [the blog post about prop getters](https://blog.kentcdodds.com/how-to-give-rendering-control-to-users-with-prop-getters-549eaef76acf)\n\n> NOTE: These prop-getters provide important `aria-` attributes which are very\n> important to your component being accessible. It\'s recommended that you\n> utilize these functions and apply the props they give you to your components.\n\nThese functions are used to apply props to the elements that you render. This\ngives you maximum flexibility to render what, when, and wherever you like. You\ncall these on the element in question (for example: `<input {...getInputProps()}`)). It\'s advisable to pass all your props to that function\nrather than applying them on the element yourself to avoid your props being\noverridden (or overriding the props returned). For example:\n`getInputProps({onKeyUp(event) {console.log(event)}})`.\n\n<!-- This table was generated via http://www.tablesgenerator.com/markdown_tables -->\n\n| property               | type              | description                                                                                    |\n| ---------------------- | ----------------- | ---------------------------------------------------------------------------------------------- |\n| `getToggleButtonProps` | `function({})`    | returns the props you should apply to any menu toggle button element you render.               |\n| `getInputProps`        | `function({})`    | returns the props you should apply to the `input` element that you render.                     |\n| `getItemProps`         | `function({})`    | returns the props you should apply to any menu item elements you render.                       |\n| `getLabelProps`        | `function({})`    | returns the props you should apply to the `label` element that you render.                     |\n| `getMenuProps`         | `function({},{})` | returns the props you should apply to the `ul` element (or root of your menu) that you render. |\n| `getRootProps`         | `function({},{})` | returns the props you should apply to the root element that you render. It can be optional.    |\n\n#### `getRootProps`\n\n<details>\n\n<summary>\n  If you cannot render a div as the root element, then read this\n</summary>\n\nMost of the time, you can just render a `div` yourself and `Downshift` will\napply the props it needs to do its job (and you don\'t need to call this\nfunction). However, if you\'re rendering a composite component (custom component)\nas the root element, then you\'ll need to call `getRootProps` and apply that to\nyour root element (downshift will throw an error otherwise).\n\nThere are no required properties for this method.\n\nOptional properties:\n\n- `refKey`: if you\'re rendering a composite component, that component will need\n  to accept a prop which it forwards to the root DOM element. Commonly, folks\n  call this `innerRef`. So you\'d call: `getRootProps({refKey: \'innerRef\'})` and\n  your composite component would forward like: `<div ref={props.innerRef} />`\n\nIf you\'re rendering a composite component, `Downshift` checks that\n`getRootProps` is called and that `refKey` is a prop of the returned composite\ncomponent. This is done to catch common causes of errors but, in some cases, the\ncheck could fail even if the ref is correctly forwarded to the root DOM\ncomponent. In these cases, you can provide the object `{suppressRefError : true}` as the second argument to `getRootProps` to completely bypass the check.\\\n**Please use it with extreme care and only if you are absolutely sure that the ref\nis correctly forwarded otherwise `Downshift` will unexpectedly fail.**\\\nSee [#235](https://github.com/downshift-js/downshift/issues/235) for the discussion that lead to this.\n\n</details>\n\n#### `getInputProps`\n\nThis method should be applied to the `input` you render. It is recommended that\nyou pass all props as an object to this method which will compose together any\nof the event handlers you need to apply to the `input` while preserving the ones\nthat `downshift` needs to apply to make the `input` behave.\n\nThere are no required properties for this method.\n\nOptional properties:\n\n- `disabled`: If this is set to true, then no event handlers will be returned\n  from `getInputProps` and a `disabled` prop will be returned (effectively\n  disabling the input).\n\n#### `getLabelProps`\n\nThis method should be applied to the `label` you render. It is useful for\nensuring that the `for` attribute on the `<label>` (`htmlFor` as a react prop)\nis the same as the `id` that appears on the `input`. If no `htmlFor` is provided\n(the normal case) then an ID will be generated and used for the `input` and the\n`label` `for` attribute.\n\nThere are no required properties for this method.\n\n> Note: For accessibility purposes, calling this method is highly recommended.\n\n#### `getMenuProps`\n\nThis method should be applied to the element which contains your list of items.\nTypically, this will be a `<div>` or a `<ul>` that surrounds a `map` expression.\nThis handles the proper ARIA roles and attributes.\n\nOptional properties:\n\n- `refKey`: if you\'re rendering a composite component, that component will need\n  to accept a prop which it forwards to the root DOM element. Commonly, folks\n  call this `innerRef`. So you\'d call: `getMenuProps({refKey: \'innerRef\'})` and\n  your composite component would forward like: `<ul ref={props.innerRef} />`.\n  However, if you are just rendering a primitive component like `<div>`, there\n  is no need to specify this property.\n\n  Please keep in mind that menus, for accessibility purposes, should always be\n  rendered, regardless of whether you hide it or not. Otherwise, `getMenuProps`\n  may throw error if you unmount and remount the menu.\n\n- `aria-label`: By default the menu will add an `aria-labelledby` that refers\n  to the `<label>` rendered with `getLabelProps`. However, if you provide\n  `aria-label` to give a more specific label that describes the options\n  available, then `aria-labelledby` will not be provided and screen readers\n  can use your `aria-label` instead.\n\nIn some cases, you might want to completely bypass the `refKey` check. Then you\ncan provide the object `{suppressRefError : true}` as the second argument to\n`getMenuProps`.\n**Please use it with extreme care and only if you are absolutely sure that the ref\nis correctly forwarded otherwise `Downshift` will unexpectedly fail.**\n\n```jsx\n<ul {...getMenuProps()}>\n  {!isOpen\n    ? null\n    : items.map((item, index) => (\n        <li {...getItemProps({item, index, key: item.id})}>{item.name}</li>\n      ))}\n</ul>\n```\n\n> Note that for accessibility reasons it\'s best if you always render this\n> element whether or not downshift is in an `isOpen` state.\n\n#### `getItemProps`\n\nThe props returned from calling this function should be applied to any menu\nitems you render.\n\n**This is an impure function**, so it should only be called when you will\nactually be applying the props to an item.\n\n<details>\n\n<summary>What do you mean by impure function?</summary>\n\nBasically just don\'t do this:\n\n```jsx\nitems.map(item => {\n  const props = getItemProps({item}) // we\'re calling it here\n  if (!shouldRenderItem(item)) {\n    return null // but we\'re not using props, and downshift thinks we are...\n  }\n  return <div {...props} />\n})\n```\n\nInstead, you could do this:\n\n```jsx\nitems.filter(shouldRenderItem).map(item => <div {...getItemProps({item})} />)\n```\n\n</details>\n\nRequired properties:\n\n- `item`: this is the item data that will be selected when the user selects a\n  particular item.\n\nOptional properties:\n\n- `index`: This is how `downshift` keeps track of your item when updating the\n  `highlightedIndex` as the user keys around. By default, `downshift` will\n  assume the `index` is the order in which you\'re calling `getItemProps`. This\n  is often good enough, but if you find odd behavior, try setting this\n  explicitly. It\'s probably best to be explicit about `index` when using a\n  windowing library like `react-virtualized`.\n- `disabled`: If this is set to `true`, then all of the downshift item event\n  handlers will be omitted. Items will not be highlighted when hovered,\n  and items will not be selected when clicked.\n\n#### `getToggleButtonProps`\n\nCall this and apply the returned props to a `button`. It allows you to toggle\nthe `Menu` component. You can definitely build something like this yourself (all\nof the available APIs are exposed to you), but this is nice because it will also\napply all of the proper ARIA attributes.\n\nOptional properties:\n\n- `disabled`: If this is set to `true`, then all of the downshift button event\n  handlers will be omitted (it wont toggle the menu when clicked).\n- `aria-label`: The `aria-label` prop is in English. You should probably override\n  this yourself so you can provide translations:\n\n```jsx\nconst myButton = (\n  <button\n    {...getToggleButtonProps({\n      \'aria-label\': translateWithId(isOpen ? \'close.menu\' : \'open.menu\'),\n    })}\n  />\n)\n```\n\n### actions\n\nThese are functions you can call to change the state of the downshift component.\n\n<!-- This table was generated via http://www.tablesgenerator.com/markdown_tables -->\n\n| property                | type                                                             | description                                                                                                                                                                                                                                                            |\n| ----------------------- | ---------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `clearSelection`        | `function(cb: Function)`                                         | clears the selection                                                                                                                                                                                                                                                   |\n| `clearItems`            | `function()`                                                     | Clears downshift\'s record of all the items. Only really useful if you render your items asynchronously within downshift. See [#186](https://github.com/downshift-js/downshift/issues/186)                                                                              |\n| `closeMenu`             | `function(cb: Function)`                                         | closes the menu                                                                                                                                                                                                                                                        |\n| `openMenu`              | `function(cb: Function)`                                         | opens the menu                                                                                                                                                                                                                                                         |\n| `selectHighlightedItem` | `function(otherStateToSet: object, cb: Function)`                | selects the item that is currently highlighted                                                                                                                                                                                                                         |\n| `selectItem`            | `function(item: any, otherStateToSet: object, cb: Function)`     | selects the given item                                                                                                                                                                                                                                                 |\n| `selectItemAtIndex`     | `function(index: number, otherStateToSet: object, cb: Function)` | selects the item at the given index                                                                                                                                                                                                                                    |\n| `setHighlightedIndex`   | `function(index: number, otherStateToSet: object, cb: Function)` | call to set a new highlighted index                                                                                                                                                                                                                                    |\n| `toggleMenu`            | `function(otherStateToSet: object, cb: Function)`                | toggle the menu open state                                                                                                                                                                                                                                             |\n| `reset`                 | `function(otherStateToSet: object, cb: Function)`                | this resets downshift\'s state to a reasonable default                                                                                                                                                                                                                  |\n| `setItemCount`          | `function(count: number)`                                        | this sets the `itemCount`. Handy in situations where you\'re using windowing and the items are loaded asynchronously from within downshift (so you can\'t use the `itemCount` prop.                                                                                      |\n| `unsetItemCount`        | `function()`                                                     | this unsets the `itemCount` which means the item count will be calculated instead by the `itemCount` prop or based on how many times you call `getItemProps`.                                                                                                          |\n| `setState`              | `function(stateToSet: object, cb: Function)`                     | This is a general `setState` function. It uses downshift\'s `internalSetState` function which works with control props and calls your `onSelect`, `onChange`, etc. (Note, you can specify a `type` which you can reference in some other APIs like the `stateReducer`). |\n\n> `otherStateToSet` refers to an object to set other internal state. It is\n> recommended to avoid abusing this, but is available if you need it.\n\n### state\n\nThese are values that represent the current state of the downshift component.\n\n<!-- This table was generated via http://www.tablesgenerator.com/markdown_tables -->\n\n| property           | type              | description                                    |\n| ------------------ | ----------------- | ---------------------------------------------- |\n| `highlightedIndex` | `number` / `null` | the currently highlighted item                 |\n| `inputValue`       | `string` / `null` | the current value of the `getInputProps` input |\n| `isOpen`           | `boolean`         | the menu open state                            |\n| `selectedItem`     | `any`             | the currently selected item input              |\n\n### props\n\nAs a convenience, the `id` and `itemToString` props which you pass to\n`<Downshift />` are available here as well.\n\n## Event Handlers\n\nDownshift has a few events for which it provides implicit handlers. Several of\nthese handlers call `event.preventDefault()`. Their additional functionality is\ndescribed below.\n\n### default handlers\n\n- `ArrowDown`: if menu is closed, opens it and moves the highlighted index to\n  `defaultHighlightedIndex + 1`, if `defaultHighlightedIndex` is provided, or\n  to the top-most item, if not. If menu is open, it moves the highlighted index\n  down by 1. If the shift key is held when this event fires, the highlighted\n  index will jump down 5 indices instead of 1. NOTE: if the current highlighted\n  index is within the bottom 5 indices, the top-most index will be highlighted.)\n\n- `ArrowUp`: if menu is closed, opens it and moves the highlighted index to\n  `defaultHighlightedIndex - 1`, if `defaultHighlightedIndex` is provided, or\n  to the bottom-most item, if not. If menu is open, moves the highlighted index\n  up by 1. If the shift key is held when this event fires, the highlighted\n  index will jump up 5 indices instead of 1. NOTE: if the current highlighted\n  index is within the top 5 indices, the bottom-most index will be highlighted.)\n\n- `Home`: if menu is closed, it will not add any other behavior. If menu is open,\n  the top-most index will get highlighted.\n\n- `End`: if menu is closed, it will not add any other behavior. If menu is open,\n  the bottom-most index will get highlighted.\n\n- `Enter`: if the menu is open, selects the currently highlighted item. If the menu\n  is open, the usual \'Enter\' event is prevented by Downshift\'s default implicit enter\n  handler; so, for example, a form submission event will not work as one might expect\n  (though if the menu is closed the form submission will work normally). See below\n  for customizing the handlers.\n\n- `Escape`: will clear downshift\'s state. This means that `highlightedIndex` will be\n  set to the `defaultHighlightedIndex`, the `inputValue` will be set to empty string,\n  `selectedItem` will be set to `null`, and the `isOpen` state will be set to the `defaultIsOpen`.\n\n### customizing handlers\n\nYou can provide your own event handlers to Downshift which will be called before the default handlers:\n\n```javascript\nconst ui = (\n  <Downshift>\n    {({getInputProps}) => (\n      <input\n        {...getInputProps({\n          onKeyDown: event => {\n            // your handler code\n          },\n        })}\n      />\n    )}\n  </Downshift>\n)\n```\n\nIf you would like to prevent the default handler behavior in some cases, you can set the event\'s `preventDownshiftDefault` property to `true`:\n\n```javascript\nconst ui = (\n  <Downshift>\n    {({getInputProps}) => (\n      <input\n        {...getInputProps({\n          onKeyDown: event => {\n            if (event.key === \'Enter\') {\n              // Prevent Downshift\'s default \'Enter\' behavior.\n              event.nativeEvent.preventDownshiftDefault = true\n\n              // your handler code\n            }\n          },\n        })}\n      />\n    )}\n  </Downshift>\n)\n```\n\nIf you would like to completely override Downshift\'s behavior for a handler, in favor of your own, you can bypass prop getters:\n\n```javascript\nconst ui = (\n  <Downshift>\n    {({getInputProps}) => (\n      <input\n        {...getInputProps()}\n        onKeyDown={event => {\n          // your handler code\n        }}\n      />\n    )}\n  </Downshift>\n)\n```\n\n## Utilities\n\n### resetIdCounter\n\nAllows reseting the internal id counter which is used to generate unique ids for Downshift component.\n\nYou should never need to use this in the browser. Only if you are running an universal React app that is rendered on the server you should call [resetIdCounter](#resetidcounter) before every render so that the ids that get generated on the server match the ids generated in the browser.\n\n```javascript\nimport {resetIdCounter} from \'downshift\';\n\nresetIdCounter()\nReactDOMServer.renderToString(...);\n```\n\n## React Native\n\nSince Downshift renders it\'s UI using render props, Downshift supports rendering on React Native with ease. Use components like `<View>`, `<Text>`, `<TouchableOpacity>` and others inside of your render method to generate awesome autocomplete, dropdown, or selection components.\n\n### Gotchas\n\n- Your root view will need to either pass a ref to `getRootProps` or call `getRootProps` with `{ suppressRefError: true }`. This ref is used to catch a common set of errors around composite components. [Learn more in `getRootProps`](#getrootprops).\n- When using a `<FlatList>` or `<ScrollView>`, be sure to supply the [`keyboardShouldPersistTaps`](https://facebook.github.io/react-native/docs/scrollview.html#keyboardshouldpersisttaps) prop to ensure that your text input stays focus, while allowing for taps on the touchables rendered for your items.\n\n## Advanced React Component Patterns course\n\n[Kent C. Dodds](https://twitter.com/kentcdodds) has created learning material\nbased on the patterns implemented in this component. You can find it on various\nplatforms:\n\n1.  [egghead.io](https://egghead.io/courses/advanced-react-component-patterns)\n2.  [Frontend Masters](https://frontendmasters.com/courses/advanced-react-patterns/)\n3.  YouTube (for free!): [Part 1](https://www.youtube.com/watch?v=SuzutbwjUp8&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf) and [Part 2](https://www.youtube.com/watch?v=ubXtOROjILU&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf)\n\n## Examples\n\n> \xf0\x9f\x9a\xa8 We\'re in the process of moving all examples to the\n> [downshift-examples](https://github.com/kentcdodds/downshift-examples) repo\n> (which you can open, interact with, and contribute back to live on\n> [codesandbox](https://codesandbox.io/s/github/kentcdodds/downshift-examples))\n\n**Ordered Examples:**\n\nIf you\'re just learning downshift, review these in order:\n\n1.  [basic autocomplete](https://codesandbox.io/s/github/kentcdodds/downshift-examples/tree/master/?module=%2Fsrc%2Fordered-examples%2F01-basic-autocomplete.js&moduleview=1) - very bare bones, not styled at all. Good place to start.\n2.  [styled autocomplete](https://codesandbox.io/s/github/kentcdodds/downshift-examples/tree/master/?module=%2Fsrc%2Fordered-examples%2F02-complete-autocomplete.js&moduleview=1) - more complete autocomplete solution using emotion for styling and match-sorter for filtering the items.\n3.  [typeahead](https://codesandbox.io/s/github/kentcdodds/downshift-examples/tree/master/?module=%2Fsrc%2Fordered-examples%2F03-typeahead.js&moduleview=1) - Shows how to control the `selectedItem` so the selected item can be one of your items or whatever the user types.\n4.  [multi-select](https://codesandbox.io/s/github/kentcdodds/downshift-examples/tree/master/?module=%2Fsrc%2Fordered-examples%2F04-multi-select.js&moduleview=1) - Shows how to create a MultiDownshift component that allows for an array of selectedItems for multiple selection using a state reducer\n\n**Other Examples:**\n\nCheck out these examples of more advanced use/edge cases:\n\n- [dropdown with select by key](https://codesandbox.io/s/github/kentcdodds/downshift-examples/tree/master/?module=%2Fsrc%2Fother-examples%2Fdropdown-select-by-key%2FCustomDropdown%2Findex.js) - An example of using the render prop pattern to utilize a reusable component to provide the downshift dropdown component with the functionality of being able to highlight a selection item that starts with the key pressed.\n- [using actions](https://codesandbox.io/s/github/kentcdodds/downshift-examples/tree/master/?module=%2Fsrc%2Fother-examples%2Fusing-actions.js&moduleview=1) - An example of using one of downshift\'s actions as an event handler.\n- [gmail\'s composition recipients field](https://codesandbox.io/s/github/kentcdodds/downshift-examples/tree/master/?module=%2Fsrc%2Fother-examples%2Fgmail%2Findex.js&moduleview=1) - An example of a highly complex autocomplete component featuring asynchronously loading items, multiple selection, and windowing (with react-virtualized)\n- [Downshift HOC and Compound Components](https://codesandbox.io/s/github/kentcdodds/downshift-examples/tree/master/?module=%2Fsrc%2Fother-examples%2Fhoc%2Findex.js&moduleview=1) - An example of how to implementat compound components with `React.createContext` and a downshift higher order component. This is generally not recommended because the render prop API exported by downshift is generally good enough for everyone, but there\'s nothing technically wrong with doing something like this.\n\n**Old Examples exist on [codesandbox.io][examples]:**\n\n_\xf0\x9f\x9a\xa8 This is a great contribution opportunity!_ These are examples that have not yet been migrated to\n[downshift-examples](https://codesandbox.io/s/github/kentcdodds/downshift-examples).\nYou\'re more than welcome to make PRs to the examples repository to move these examples over there.\n[Watch this to learn how to contribute completely in the browser](https://www.youtube.com/watch?v=3PAQbhdkTtI&index=2&t=21s&list=PLV5CVI1eNcJgCrPH_e6d57KRUTiDZgs0u)\n\n- [Integration with Apollo](https://codesandbox.io/s/m5zrvqj85p)\n- [Integration with Redux](https://codesandbox.io/s/3ywmnyr0zq)\n- [Integration with `react-instantsearch`](https://codesandbox.io/s/kvn0lpp83)\n  from Algolia\n- [Material-UI (1.0.0-beta.4) Combobox Using Downshift](https://codesandbox.io/s/QMGq4kAY)\n- [Material-UI (1.0.0-beta.33) Multiple select with autocomplete](https://codesandbox.io/s/7k3674z09q)\n- [Integration with `GenieJS`](https://codesandbox.io/s/jRLKrxwgl)\n  ([learn more about `genie` here](https://github.com/kentcdodds/genie))\n- [Handling and displaying errors](https://codesandbox.io/s/zKE37vorr)\n- [Integration with React Router](https://codesandbox.io/s/ww9lwloy8w)\n- [Windowing with `react-tiny-virtual-list`](https://codesandbox.io/s/v670kq95l)\n- [Section/option group example](https://codesandbox.io/s/zx1kj58npl)\n- [Integration with `fuzzaldrin-plus` (Fuzzy matching)](https://codesandbox.io/s/pyq3v4o3j)\n- [Dropdown/select implementation with Bootstrap](https://codesandbox.io/s/53y8jvpj0k)\n- [Multiple editable tag selection](https://codesandbox.io/s/o4yp9vmm8z)\n- [Downshift implemented as compound components and a Higher Order Component](https://codesandbox.io/s/017n1jqo00)\n  (exposes a `withDownshift` higher order component which you can use to get at\n  the state, actions, prop getters in a rendered downshift tree).\n- [Downshift Spectre.css example](https://codesandbox.io/s/M89KQOBRB)\n- [Integration with `redux-form`](https://codesandbox.io/s/k594964z13)\n- [Integration with `react-final-form`](https://codesandbox.io/s/qzm43nn2mj)\n- [Provider Pattern](https://codesandbox.io/s/mywzk3133p) - how to avoid prop-drilling if you like to break up your render method into more components\n- [React Native example](https://snack.expo.io/SkE0LxXqM)\n- [React VR example](https://github.com/infiniteluke/bassdrop)\n- [Multiple checkbox selection](https://codesandbox.io/s/5z711pmr3l)\n\n## FAQ\n\n<details>\n\n<summary>\n  How do I avoid the checksum error when server rendering (SSR)?\n</summary>\n\nThe checksum error you\'re seeing is most likely due to the automatically\ngenerated `id` and/or `htmlFor` prop you get from `getInputProps` and\n`getLabelProps` (respectively). It could also be from the automatically\ngenerated `id` prop you get from `getItemProps` (though this is not likely as\nyou\'re probably not rendering any items when rendering a downshift component on\nthe server).\n\nTo avoid these problems, simply call [resetIdCounter](#resetidcounter) before\n`ReactDOM.renderToString`.\n\nAlternatively you could provide your own ids via the id props where you render\n`<Downshift />`:\n\n```javascript\nconst ui = (\n  <Downshift\n    id="autocomplete"\n    labelId="autocomplete-label"\n    inputId="autocomplete-input"\n    menuId="autocomplete-menu"\n  >\n    {({getInputProps, getLabelProps}) => <div>{/* your UI */}</div>}\n  </Downshift>\n)\n```\n\n</details>\n\n## Inspiration\n\nI was heavily inspired by [Ryan Florence][ryan]. Watch his (free) lesson about\n["Compound Components"][compound-components-lecture]. Initially downshift was a\ngroup of compound components using context to communicate. But then [Jared\nForsyth][jared] suggested I expose functions (the prop getters) to get props to\napply to the elements rendered. That bit of inspiration made a big impact on the\nflexibility and simplicity of this API.\n\nI also took a few ideas from the code in\n[`react-autocomplete`][react-autocomplete] and [jQuery UI\'s\nAutocomplete][jquery-complete].\n\nYou can watch me build the first iteration of `downshift` on YouTube:\n\n- [Part 1](https://www.youtube.com/watch?v=2kzD1IjDy5s&list=PLV5CVI1eNcJh5CTgArGVwANebCrAh2OUE&index=11)\n- [Part 2](https://www.youtube.com/watch?v=w1Z7Jvj08_s&list=PLV5CVI1eNcJh5CTgArGVwANebCrAh2OUE&index=10)\n\nYou\'ll find more recordings of me working on `downshift` on [my livestream\nYouTube playlist][yt-playlist].\n\n## Other Solutions\n\nYou can implement these other solutions using `downshift`, but if you\'d prefer\nto use these out of the box solutions, then that\'s fine too:\n\n- [`react-select`](https://github.com/JedWatson/react-select)\n- [`react-autocomplete`](https://github.com/reactjs/react-autocomplete)\n\n## Bindings for ReasonML\n\nIf you\'re developing some React in ReasonML, check out the [`Downshift` bindings](https://github.com/reasonml-community/bs-downshift) for that.\n\n## Contributors\n\nThanks goes to these people ([emoji key][emojis]):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore -->\n<table>\n  <tr>\n    <td align="center"><a href="https://kentcdodds.com"><img src="https://avatars.githubusercontent.com/u/1500684?v=3" width="100px;" alt="Kent C. Dodds"/><br /><sub><b>Kent C. Dodds</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=kentcdodds" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=kentcdodds" title="Documentation">\xf0\x9f\x93\x96</a> <a href="#infra-kentcdodds" title="Infrastructure (Hosting, Build-Tools, etc)">\xf0\x9f\x9a\x87</a> <a href="https://github.com/downshift-js/downshift/commits?author=kentcdodds" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a> <a href="#review-kentcdodds" title="Reviewed Pull Requests">\xf0\x9f\x91\x80</a> <a href="#blog-kentcdodds" title="Blogposts">\xf0\x9f\x93\x9d</a> <a href="https://github.com/downshift-js/downshift/issues?q=author%3Akentcdodds" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="#example-kentcdodds" title="Examples">\xf0\x9f\x92\xa1</a> <a href="#ideas-kentcdodds" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a> <a href="#talk-kentcdodds" title="Talks">\xf0\x9f\x93\xa2</a></td>\n    <td align="center"><a href="http://twitter.com/ryanflorence"><img src="https://avatars0.githubusercontent.com/u/100200?v=4" width="100px;" alt="Ryan Florence"/><br /><sub><b>Ryan Florence</b></sub></a><br /><a href="#ideas-ryanflorence" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a></td>\n    <td align="center"><a href="http://jaredforsyth.com"><img src="https://avatars3.githubusercontent.com/u/112170?v=4" width="100px;" alt="Jared Forsyth"/><br /><sub><b>Jared Forsyth</b></sub></a><br /><a href="#ideas-jaredly" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a> <a href="https://github.com/downshift-js/downshift/commits?author=jaredly" title="Documentation">\xf0\x9f\x93\x96</a></td>\n    <td align="center"><a href="https://github.com/jtmthf"><img src="https://avatars1.githubusercontent.com/u/8162598?v=4" width="100px;" alt="Jack Moore"/><br /><sub><b>Jack Moore</b></sub></a><br /><a href="#example-jtmthf" title="Examples">\xf0\x9f\x92\xa1</a></td>\n    <td align="center"><a href="http://travisrayarnold.com"><img src="https://avatars1.githubusercontent.com/u/2762082?v=4" width="100px;" alt="Travis Arnold"/><br /><sub><b>Travis Arnold</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=souporserious" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=souporserious" title="Documentation">\xf0\x9f\x93\x96</a></td>\n    <td align="center"><a href="http://marcysutton.com"><img src="https://avatars0.githubusercontent.com/u/1045233?v=4" width="100px;" alt="Marcy Sutton"/><br /><sub><b>Marcy Sutton</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Amarcysutton" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="#ideas-marcysutton" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a></td>\n    <td align="center"><a href="http://www.jeremygayed.com"><img src="https://avatars2.githubusercontent.com/u/244704?v=4" width="100px;" alt="Jeremy Gayed"/><br /><sub><b>Jeremy Gayed</b></sub></a><br /><a href="#example-tizmagik" title="Examples">\xf0\x9f\x92\xa1</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="https://haroen.me"><img src="https://avatars3.githubusercontent.com/u/6270048?v=4" width="100px;" alt="Haroen Viaene"/><br /><sub><b>Haroen Viaene</b></sub></a><br /><a href="#example-Haroenv" title="Examples">\xf0\x9f\x92\xa1</a></td>\n    <td align="center"><a href="https://github.com/rezof"><img src="https://avatars2.githubusercontent.com/u/15073300?v=4" width="100px;" alt="monssef"/><br /><sub><b>monssef</b></sub></a><br /><a href="#example-rezof" title="Examples">\xf0\x9f\x92\xa1</a></td>\n    <td align="center"><a href="https://fezvrasta.github.io"><img src="https://avatars2.githubusercontent.com/u/5382443?v=4" width="100px;" alt="Federico Zivolo"/><br /><sub><b>Federico Zivolo</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=FezVrasta" title="Documentation">\xf0\x9f\x93\x96</a></td>\n    <td align="center"><a href="https://divyendusingh.com"><img src="https://avatars3.githubusercontent.com/u/746482?v=4" width="100px;" alt="Divyendu Singh"/><br /><sub><b>Divyendu Singh</b></sub></a><br /><a href="#example-divyenduz" title="Examples">\xf0\x9f\x92\xa1</a> <a href="https://github.com/downshift-js/downshift/commits?author=divyenduz" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=divyenduz" title="Documentation">\xf0\x9f\x93\x96</a> <a href="https://github.com/downshift-js/downshift/commits?author=divyenduz" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="https://github.com/salmanmanekia"><img src="https://avatars1.githubusercontent.com/u/841955?v=4" width="100px;" alt="Muhammad Salman"/><br /><sub><b>Muhammad Salman</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=salmanmanekia" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://twitter.com/psicotropidev"><img src="https://avatars3.githubusercontent.com/u/10820159?v=4" width="100px;" alt="Jo\xc3\xa3o Alberto"/><br /><sub><b>Jo\xc3\xa3o Alberto</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=psicotropicos" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/bernard-lin"><img src="https://avatars0.githubusercontent.com/u/16327281?v=4" width="100px;" alt="Bernard Lin"/><br /><sub><b>Bernard Lin</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=bernard-lin" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=bernard-lin" title="Documentation">\xf0\x9f\x93\x96</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="https://geoffdavis.info"><img src="https://avatars1.githubusercontent.com/u/7330124?v=4" width="100px;" alt="Geoff Davis"/><br /><sub><b>Geoff Davis</b></sub></a><br /><a href="#example-geoffdavis92" title="Examples">\xf0\x9f\x92\xa1</a></td>\n    <td align="center"><a href="https://github.com/reznord"><img src="https://avatars0.githubusercontent.com/u/3415488?v=4" width="100px;" alt="Anup"/><br /><sub><b>Anup</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=reznord" title="Documentation">\xf0\x9f\x93\x96</a></td>\n    <td align="center"><a href="http://ferdinandsalis.com"><img src="https://avatars0.githubusercontent.com/u/340520?v=4" width="100px;" alt="Ferdinand Salis"/><br /><sub><b>Ferdinand Salis</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Aferdinandsalis" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=ferdinandsalis" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/tkh44"><img src="https://avatars2.githubusercontent.com/u/662750?v=4" width="100px;" alt="Kye Hohenberger"/><br /><sub><b>Kye Hohenberger</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Atkh44" title="Bug reports">\xf0\x9f\x90\x9b</a></td>\n    <td align="center"><a href="https://github.com/jgoux"><img src="https://avatars0.githubusercontent.com/u/1443499?v=4" width="100px;" alt="Julien Goux"/><br /><sub><b>Julien Goux</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Ajgoux" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=jgoux" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=jgoux" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="https://github.com/jseminck"><img src="https://avatars2.githubusercontent.com/u/9586897?v=4" width="100px;" alt="Joachim Seminck"/><br /><sub><b>Joachim Seminck</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=jseminck" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="http://jesseharlin.net/"><img src="https://avatars3.githubusercontent.com/u/954596?v=4" width="100px;" alt="Jesse Harlin"/><br /><sub><b>Jesse Harlin</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Athe-simian" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="#example-the-simian" title="Examples">\xf0\x9f\x92\xa1</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="https://github.com/pbomb"><img src="https://avatars0.githubusercontent.com/u/1402095?v=4" width="100px;" alt="Matt Parrish"/><br /><sub><b>Matt Parrish</b></sub></a><br /><a href="#tool-pbomb" title="Tools">\xf0\x9f\x94\xa7</a> <a href="#review-pbomb" title="Reviewed Pull Requests">\xf0\x9f\x91\x80</a></td>\n    <td align="center"><a href="http://thom.kr"><img src="https://avatars1.githubusercontent.com/u/11661846?v=4" width="100px;" alt="thom"/><br /><sub><b>thom</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=thomhos" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="http://twitter.com/tranvu"><img src="https://avatars2.githubusercontent.com/u/1088312?v=4" width="100px;" alt="Vu Tran"/><br /><sub><b>Vu Tran</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=vutran" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/codiemullins"><img src="https://avatars1.githubusercontent.com/u/74193?v=4" width="100px;" alt="Codie Mullins"/><br /><sub><b>Codie Mullins</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=codiemullins" title="Code">\xf0\x9f\x92\xbb</a> <a href="#example-codiemullins" title="Examples">\xf0\x9f\x92\xa1</a></td>\n    <td align="center"><a href="https://morajabi.me"><img src="https://avatars3.githubusercontent.com/u/12202757?v=4" width="100px;" alt="Mohammad Rajabifard"/><br /><sub><b>Mohammad Rajabifard</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=morajabi" title="Documentation">\xf0\x9f\x93\x96</a> <a href="#ideas-morajabi" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a></td>\n    <td align="center"><a href="https://github.com/tansongyang"><img src="https://avatars3.githubusercontent.com/u/9488719?v=4" width="100px;" alt="Frank Tan"/><br /><sub><b>Frank Tan</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=tansongyang" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://kierb.com"><img src="https://avatars3.githubusercontent.com/u/5093058?v=4" width="100px;" alt="Kier Borromeo"/><br /><sub><b>Kier Borromeo</b></sub></a><br /><a href="#example-srph" title="Examples">\xf0\x9f\x92\xa1</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="https://github.com/paul-veevers"><img src="https://avatars1.githubusercontent.com/u/8969456?v=4" width="100px;" alt="Paul Veevers"/><br /><sub><b>Paul Veevers</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=paul-veevers" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/Ronolibert"><img src="https://avatars2.githubusercontent.com/u/13622298?v=4" width="100px;" alt="Ron Cruz"/><br /><sub><b>Ron Cruz</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=Ronolibert" title="Documentation">\xf0\x9f\x93\x96</a></td>\n    <td align="center"><a href="http://rickmcgavin.github.io"><img src="https://avatars1.githubusercontent.com/u/13605633?v=4" width="100px;" alt="Rick McGavin"/><br /><sub><b>Rick McGavin</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=rickMcGavin" title="Documentation">\xf0\x9f\x93\x96</a></td>\n    <td align="center"><a href="http://twitter.com/vejersele"><img src="https://avatars0.githubusercontent.com/u/869669?v=4" width="100px;" alt="Jelle Versele"/><br /><sub><b>Jelle Versele</b></sub></a><br /><a href="#example-vejersele" title="Examples">\xf0\x9f\x92\xa1</a></td>\n    <td align="center"><a href="https://github.com/brentertz"><img src="https://avatars1.githubusercontent.com/u/202773?v=4" width="100px;" alt="Brent Ertz"/><br /><sub><b>Brent Ertz</b></sub></a><br /><a href="#ideas-brentertz" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a></td>\n    <td align="center"><a href="https://github.com/Dajust"><img src="https://avatars3.githubusercontent.com/u/8015514?v=4" width="100px;" alt="Justice Mba "/><br /><sub><b>Justice Mba </b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=Dajust" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=Dajust" title="Documentation">\xf0\x9f\x93\x96</a> <a href="#ideas-Dajust" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a></td>\n    <td align="center"><a href="http://mfellis.com"><img src="https://avatars2.githubusercontent.com/u/3925281?v=4" width="100px;" alt="Mark Ellis"/><br /><sub><b>Mark Ellis</b></sub></a><br /><a href="#ideas-ellismarkf" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="http://ronak.io/"><img src="https://avatars1.githubusercontent.com/u/3241922?v=4" width="100px;" alt="us\xcd\xa1an\xcc\xb8df\xcd\x98rien\xcd\x9cds\xcd\xa0"/><br /><sub><b>us\xcd\xa1an\xcc\xb8df\xcd\x98rien\xcd\x9cds\xcd\xa0</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Ausandfriends" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=usandfriends" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=usandfriends" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="https://www.robin-drexler.com/"><img src="https://avatars0.githubusercontent.com/u/474248?v=4" width="100px;" alt="Robin Drexler"/><br /><sub><b>Robin Drexler</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Arobin-drexler" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=robin-drexler" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="http://arturoromero.info/"><img src="https://avatars0.githubusercontent.com/u/7406639?v=4" width="100px;" alt="Arturo Romero"/><br /><sub><b>Arturo Romero</b></sub></a><br /><a href="#example-arturoromeroslc" title="Examples">\xf0\x9f\x92\xa1</a></td>\n    <td align="center"><a href="http://algolab.eu/pirola"><img src="https://avatars1.githubusercontent.com/u/275483?v=4" width="100px;" alt="yp"/><br /><sub><b>yp</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Ayp" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=yp" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=yp" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="http://www.warbyparker.com"><img src="https://avatars0.githubusercontent.com/u/3998604?v=4" width="100px;" alt="Dave Garwacke"/><br /><sub><b>Dave Garwacke</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=ifyoumakeit" title="Documentation">\xf0\x9f\x93\x96</a></td>\n    <td align="center"><a href="http://linkedin.com/in/drapegnik"><img src="https://avatars3.githubusercontent.com/u/11758660?v=4" width="100px;" alt="Ivan Pazhitnykh"/><br /><sub><b>Ivan Pazhitnykh</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=Drapegnik" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=Drapegnik" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="https://github.com/Rendez"><img src="https://avatars0.githubusercontent.com/u/61776?v=4" width="100px;" alt="Luis Merino"/><br /><sub><b>Luis Merino</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=Rendez" title="Documentation">\xf0\x9f\x93\x96</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="http://twitter.com/arahansen"><img src="https://avatars0.githubusercontent.com/u/8746094?v=4" width="100px;" alt="Andrew Hansen"/><br /><sub><b>Andrew Hansen</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=arahansen" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=arahansen" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a> <a href="#ideas-arahansen" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a></td>\n    <td align="center"><a href="http://www.johnwhiles.com"><img src="https://avatars3.githubusercontent.com/u/20307225?v=4" width="100px;" alt="John Whiles"/><br /><sub><b>John Whiles</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=Jwhiles" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/wKovacs64"><img src="https://avatars1.githubusercontent.com/u/1288694?v=4" width="100px;" alt="Justin Hall"/><br /><sub><b>Justin Hall</b></sub></a><br /><a href="#infra-wKovacs64" title="Infrastructure (Hosting, Build-Tools, etc)">\xf0\x9f\x9a\x87</a></td>\n    <td align="center"><a href="https://twitter.com/pete_tnt"><img src="https://avatars2.githubusercontent.com/u/7641760?v=4" width="100px;" alt="Pete Nyk\xc3\xa4nen"/><br /><sub><b>Pete Nyk\xc3\xa4nen</b></sub></a><br /><a href="#review-petetnt" title="Reviewed Pull Requests">\xf0\x9f\x91\x80</a></td>\n    <td align="center"><a href="http://jaredpalmer.com"><img src="https://avatars2.githubusercontent.com/u/4060187?v=4" width="100px;" alt="Jared Palmer"/><br /><sub><b>Jared Palmer</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=jaredpalmer" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="http://www.philipyoungg.com"><img src="https://avatars3.githubusercontent.com/u/11477718?v=4" width="100px;" alt="Philip Young"/><br /><sub><b>Philip Young</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=philipyoungg" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=philipyoungg" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a> <a href="#ideas-philipyoungg" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a></td>\n    <td align="center"><a href="https://alexandernanberg.com"><img src="https://avatars3.githubusercontent.com/u/8997319?v=4" width="100px;" alt="Alexander Nanberg"/><br /><sub><b>Alexander Nanberg</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=alexandernanberg" title="Documentation">\xf0\x9f\x93\x96</a> <a href="https://github.com/downshift-js/downshift/commits?author=alexandernanberg" title="Code">\xf0\x9f\x92\xbb</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="https://httpete.com"><img src="https://avatars2.githubusercontent.com/u/1556430?v=4" width="100px;" alt="Pete Redmond"/><br /><sub><b>Pete Redmond</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Ahttpete-ire" title="Bug reports">\xf0\x9f\x90\x9b</a></td>\n    <td align="center"><a href="https://github.com/Zashy"><img src="https://avatars2.githubusercontent.com/u/1706342?v=4" width="100px;" alt="Nick Lavin"/><br /><sub><b>Nick Lavin</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3AZashy" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=Zashy" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=Zashy" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="http://jlongster.com"><img src="https://avatars2.githubusercontent.com/u/17031?v=4" width="100px;" alt="James Long"/><br /><sub><b>James Long</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Ajlongster" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=jlongster" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="http://michaelball.co"><img src="https://avatars0.githubusercontent.com/u/1505907?v=4" width="100px;" alt="Michael Ball"/><br /><sub><b>Michael Ball</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Acycomachead" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=cycomachead" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=cycomachead" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="https://github.com/Julienng"><img src="https://avatars0.githubusercontent.com/u/8990614?v=4" width="100px;" alt="CAVALEIRO Julien"/><br /><sub><b>CAVALEIRO Julien</b></sub></a><br /><a href="#example-Julienng" title="Examples">\xf0\x9f\x92\xa1</a></td>\n    <td align="center"><a href="http://www.kimgronqvist.se"><img src="https://avatars1.githubusercontent.com/u/3421067?v=4" width="100px;" alt="Kim Gr\xc3\xb6nqvist"/><br /><sub><b>Kim Gr\xc3\xb6nqvist</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=kimgronqvist" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=kimgronqvist" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="http://sijietian.com"><img src="https://avatars2.githubusercontent.com/u/3675602?v=4" width="100px;" alt="Sijie"/><br /><sub><b>Sijie</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Atiansijie" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=tiansijie" title="Code">\xf0\x9f\x92\xbb</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="http://dsds.io"><img src="https://avatars0.githubusercontent.com/u/410792?v=4" width="100px;" alt="Dony Sukardi"/><br /><sub><b>Dony Sukardi</b></sub></a><br /><a href="#example-donysukardi" title="Examples">\xf0\x9f\x92\xa1</a> <a href="#question-donysukardi" title="Answering Questions">\xf0\x9f\x92\xac</a> <a href="https://github.com/downshift-js/downshift/commits?author=donysukardi" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=donysukardi" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="https://dillonmulroy.com"><img src="https://avatars1.githubusercontent.com/u/2755722?v=4" width="100px;" alt="Dillon Mulroy"/><br /><sub><b>Dillon Mulroy</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=dmmulroy" title="Documentation">\xf0\x9f\x93\x96</a></td>\n    <td align="center"><a href="https://twitter.com/curtytate"><img src="https://avatars3.githubusercontent.com/u/12440573?v=4" width="100px;" alt="Curtis Tate Wilkinson"/><br /><sub><b>Curtis Tate Wilkinson</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=curtiswilkinson" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/brikou"><img src="https://avatars3.githubusercontent.com/u/383212?v=4" width="100px;" alt="Brice BERNARD"/><br /><sub><b>Brice BERNARD</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Abrikou" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=brikou" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/xutopia"><img src="https://avatars3.githubusercontent.com/u/14304503?v=4" width="100px;" alt="Tony Xu"/><br /><sub><b>Tony Xu</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=xutopia" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="http://anthonyng.me"><img src="https://avatars1.githubusercontent.com/u/14035529?v=4" width="100px;" alt="Anthony Ng"/><br /><sub><b>Anthony Ng</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=newyork-anthonyng" title="Documentation">\xf0\x9f\x93\x96</a></td>\n    <td align="center"><a href="https://github.com/notruth"><img src="https://avatars2.githubusercontent.com/u/11996139?v=4" width="100px;" alt="S S"/><br /><sub><b>S S</b></sub></a><br /><a href="#question-notruth" title="Answering Questions">\xf0\x9f\x92\xac</a> <a href="https://github.com/downshift-js/downshift/commits?author=notruth" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=notruth" title="Documentation">\xf0\x9f\x93\x96</a> <a href="#ideas-notruth" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a> <a href="https://github.com/downshift-js/downshift/commits?author=notruth" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="http://austintackaberry.co"><img src="https://avatars0.githubusercontent.com/u/29493001?v=4" width="100px;" alt="Austin Tackaberry"/><br /><sub><b>Austin Tackaberry</b></sub></a><br /><a href="#question-austintackaberry" title="Answering Questions">\xf0\x9f\x92\xac</a> <a href="https://github.com/downshift-js/downshift/commits?author=austintackaberry" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=austintackaberry" title="Documentation">\xf0\x9f\x93\x96</a> <a href="https://github.com/downshift-js/downshift/issues?q=author%3Aaustintackaberry" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="#example-austintackaberry" title="Examples">\xf0\x9f\x92\xa1</a> <a href="#ideas-austintackaberry" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a> <a href="#review-austintackaberry" title="Reviewed Pull Requests">\xf0\x9f\x91\x80</a> <a href="https://github.com/downshift-js/downshift/commits?author=austintackaberry" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="https://github.com/jduthon"><img src="https://avatars3.githubusercontent.com/u/4168055?v=4" width="100px;" alt="Jean Duthon"/><br /><sub><b>Jean Duthon</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Ajduthon" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=jduthon" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="http://antontelesh.github.io"><img src="https://avatars3.githubusercontent.com/u/3889580?v=4" width="100px;" alt="Anton Telesh"/><br /><sub><b>Anton Telesh</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3AAntontelesh" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=Antontelesh" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/ericedem"><img src="https://avatars3.githubusercontent.com/u/1060669?v=4" width="100px;" alt="Eric Edem"/><br /><sub><b>Eric Edem</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=ericedem" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=ericedem" title="Documentation">\xf0\x9f\x93\x96</a> <a href="#ideas-ericedem" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a> <a href="https://github.com/downshift-js/downshift/commits?author=ericedem" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="https://github.com/indiesquidge"><img src="https://avatars3.githubusercontent.com/u/3409645?v=4" width="100px;" alt="Austin Wood"/><br /><sub><b>Austin Wood</b></sub></a><br /><a href="#question-indiesquidge" title="Answering Questions">\xf0\x9f\x92\xac</a> <a href="https://github.com/downshift-js/downshift/commits?author=indiesquidge" title="Documentation">\xf0\x9f\x93\x96</a> <a href="#review-indiesquidge" title="Reviewed Pull Requests">\xf0\x9f\x91\x80</a></td>\n    <td align="center"><a href="https://github.com/mmmurray"><img src="https://avatars3.githubusercontent.com/u/14275790?v=4" width="100px;" alt="Mark Murray"/><br /><sub><b>Mark Murray</b></sub></a><br /><a href="#infra-mmmurray" title="Infrastructure (Hosting, Build-Tools, etc)">\xf0\x9f\x9a\x87</a></td>\n    <td align="center"><a href="https://github.com/gsimone"><img src="https://avatars0.githubusercontent.com/u/1862172?v=4" width="100px;" alt="Gianmarco"/><br /><sub><b>Gianmarco</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Agsimone" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=gsimone" title="Code">\xf0\x9f\x92\xbb</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="https://github.com/pastr"><img src="https://avatars2.githubusercontent.com/u/6838136?v=4" width="100px;" alt="Emmanuel Pastor"/><br /><sub><b>Emmanuel Pastor</b></sub></a><br /><a href="#example-pastr" title="Examples">\xf0\x9f\x92\xa1</a></td>\n    <td align="center"><a href="https://github.com/dalehurwitz"><img src="https://avatars2.githubusercontent.com/u/10345034?v=4" width="100px;" alt="dalehurwitz"/><br /><sub><b>dalehurwitz</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=dalehurwitz" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/blobor"><img src="https://avatars1.githubusercontent.com/u/4813007?v=4" width="100px;" alt="Bogdan Lobor"/><br /><sub><b>Bogdan Lobor</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Ablobor" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=blobor" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/infiniteluke"><img src="https://avatars0.githubusercontent.com/u/1127238?v=4" width="100px;" alt="Luke Herrington"/><br /><sub><b>Luke Herrington</b></sub></a><br /><a href="#example-infiniteluke" title="Examples">\xf0\x9f\x92\xa1</a></td>\n    <td align="center"><a href="https://github.com/drobannx"><img src="https://avatars2.githubusercontent.com/u/6361167?v=4" width="100px;" alt="Brandon Clemons"/><br /><sub><b>Brandon Clemons</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=drobannx" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/aMollusk"><img src="https://avatars0.githubusercontent.com/u/10591587?v=4" width="100px;" alt="Kieran"/><br /><sub><b>Kieran</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=aMollusk" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/Brushedoctopus"><img src="https://avatars3.githubusercontent.com/u/11570627?v=4" width="100px;" alt="Brushedoctopus"/><br /><sub><b>Brushedoctopus</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3ABrushedoctopus" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=Brushedoctopus" title="Code">\xf0\x9f\x92\xbb</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="http://cameronpedwards.com"><img src="https://avatars3.githubusercontent.com/u/5456216?v=4" width="100px;" alt="Cameron Edwards"/><br /><sub><b>Cameron Edwards</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=cameronprattedwards" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=cameronprattedwards" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="https://github.com/stereobooster"><img src="https://avatars2.githubusercontent.com/u/179534?v=4" width="100px;" alt="stereobooster"/><br /><sub><b>stereobooster</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=stereobooster" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=stereobooster" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="https://github.com/1Copenut"><img src="https://avatars0.githubusercontent.com/u/934879?v=4" width="100px;" alt="Trevor Pierce"/><br /><sub><b>Trevor Pierce</b></sub></a><br /><a href="#review-1Copenut" title="Reviewed Pull Requests">\xf0\x9f\x91\x80</a></td>\n    <td align="center"><a href="http://xuefei-frank.com"><img src="https://avatars1.githubusercontent.com/u/1334982?v=4" width="100px;" alt="Xuefei Li"/><br /><sub><b>Xuefei Li</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=franklixuefei" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://hyperlab.se"><img src="https://avatars0.githubusercontent.com/u/7252803?v=4" width="100px;" alt="Alfred Ringstad"/><br /><sub><b>Alfred Ringstad</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=alfredringstad" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/dovidweisz"><img src="https://avatars0.githubusercontent.com/u/6895497?v=4" width="100px;" alt="D[oa]vid Weisz"/><br /><sub><b>D[oa]vid Weisz</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=dovidweisz" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/RoystonS"><img src="https://avatars0.githubusercontent.com/u/19773?v=4" width="100px;" alt="Royston Shufflebotham"/><br /><sub><b>Royston Shufflebotham</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3ARoystonS" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=RoystonS" title="Code">\xf0\x9f\x92\xbb</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="http://michaeldeboey.be"><img src="https://avatars3.githubusercontent.com/u/6643991?v=4" width="100px;" alt="Micha\xc3\xabl De Boey"/><br /><sub><b>Micha\xc3\xabl De Boey</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=MichaelDeBoey" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/EricHenry"><img src="https://avatars3.githubusercontent.com/u/4412771?v=4" width="100px;" alt="Henry"/><br /><sub><b>Henry</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=EricHenry" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="http://www.greenarrow.me"><img src="https://avatars3.githubusercontent.com/u/2180127?v=4" width="100px;" alt="Andrew Walton"/><br /><sub><b>Andrew Walton</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Agreen-arrow" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=green-arrow" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=green-arrow" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="https://github.com/arthurdenner"><img src="https://avatars0.githubusercontent.com/u/13774309?v=4" width="100px;" alt="Arthur Denner"/><br /><sub><b>Arthur Denner</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=arthurdenner" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="http://twitter.com/stipsan"><img src="https://avatars2.githubusercontent.com/u/81981?v=4" width="100px;" alt="Cody Olsen"/><br /><sub><b>Cody Olsen</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=stipsan" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/TLadd"><img src="https://avatars0.githubusercontent.com/u/5084492?v=4" width="100px;" alt="Thomas Ladd"/><br /><sub><b>Thomas Ladd</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=TLadd" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/lixualinta"><img src="https://avatars3.githubusercontent.com/u/34634369?v=4" width="100px;" alt="lixualinta"/><br /><sub><b>lixualinta</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=lixualinta" title="Code">\xf0\x9f\x92\xbb</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="https://twitter.com/JCofman"><img src="https://avatars2.githubusercontent.com/u/2118956?v=4" width="100px;" alt="Jacob Cofman"/><br /><sub><b>Jacob Cofman</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=JCofman" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/jf248"><img src="https://avatars3.githubusercontent.com/u/19275184?v=4" width="100px;" alt="Joshua Freedman"/><br /><sub><b>Joshua Freedman</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=jf248" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/AmyScript"><img src="https://avatars1.githubusercontent.com/u/24494020?v=4" width="100px;" alt="Amy"/><br /><sub><b>Amy</b></sub></a><br /><a href="#example-AmyScript" title="Examples">\xf0\x9f\x92\xa1</a></td>\n    <td align="center"><a href="http://twitter.com/roginfarrer"><img src="https://avatars1.githubusercontent.com/u/9063669?v=4" width="100px;" alt="Rogin Farrer"/><br /><sub><b>Rogin Farrer</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=roginfarrer" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/rifler"><img src="https://avatars3.githubusercontent.com/u/871583" width="100px;" alt="Dmitrii Kanatnikov"/><br /><sub><b>Dmitrii Kanatnikov</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=rifler" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/dallonf"><img src="https://avatars2.githubusercontent.com/u/346300?v=4" width="100px;" alt="Dallon Feldner"/><br /><sub><b>Dallon Feldner</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Adallonf" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=dallonf" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://samuelfullerthomas.com"><img src="https://avatars2.githubusercontent.com/u/10165959?v=4" width="100px;" alt="Samuel Fuller Thomas"/><br /><sub><b>Samuel Fuller Thomas</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=samuelfullerthomas" title="Code">\xf0\x9f\x92\xbb</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="http://audiolion.github.io"><img src="https://avatars1.githubusercontent.com/u/2430381?v=4" width="100px;" alt="Ryan Castner"/><br /><sub><b>Ryan Castner</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=audiolion" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/silviuavram"><img src="https://avatars2.githubusercontent.com/u/11275392?v=4" width="100px;" alt="Silviu Alexandru Avram"/><br /><sub><b>Silviu Alexandru Avram</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Asilviuavram" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=silviuavram" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=silviuavram" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="https://github.com/akronb"><img src="https://avatars1.githubusercontent.com/u/15676655?v=4" width="100px;" alt="Anton Volkov"/><br /><sub><b>Anton Volkov</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=akronb" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=akronb" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="http://keegan.st"><img src="https://avatars3.githubusercontent.com/u/513363?v=4" width="100px;" alt="Keegan Street"/><br /><sub><b>Keegan Street</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Akeeganstreet" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=keeganstreet" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="http://manueldugue.de"><img src="https://avatars1.githubusercontent.com/u/894149?v=4" width="100px;" alt="Manuel Dugu\xc3\xa9"/><br /><sub><b>Manuel Dugu\xc3\xa9</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=mdugue" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/mkaradeniz"><img src="https://avatars2.githubusercontent.com/u/12477983?v=4" width="100px;" alt="Max Karadeniz"/><br /><sub><b>Max Karadeniz</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=mkaradeniz" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://medium.com/@gonchub"><img src="https://avatars3.githubusercontent.com/u/857221?v=4" width="100px;" alt="Gonzalo Beviglia"/><br /><sub><b>Gonzalo Beviglia</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3AGonchuB" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=GonchuB" title="Code">\xf0\x9f\x92\xbb</a> <a href="#review-GonchuB" title="Reviewed Pull Requests">\xf0\x9f\x91\x80</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="https://github.com/kilrain"><img src="https://avatars2.githubusercontent.com/u/47700687?v=4" width="100px;" alt="Brian Kilrain"/><br /><sub><b>Brian Kilrain</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Akilrain" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=kilrain" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=kilrain" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a> <a href="https://github.com/downshift-js/downshift/commits?author=kilrain" title="Documentation">\xf0\x9f\x93\x96</a></td>\n    <td align="center"><a href="http://www.gzschaler.de"><img src="https://avatars0.githubusercontent.com/u/321265?v=4" width="100px;" alt="Gerd Zschaler"/><br /><sub><b>Gerd Zschaler</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=rincedd" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/issues?q=author%3Arincedd" title="Bug reports">\xf0\x9f\x90\x9b</a></td>\n    <td align="center"><a href="https://github.com/gaskar"><img src="https://avatars1.githubusercontent.com/u/491166?v=4" width="100px;" alt="Karen Gasparyan"/><br /><sub><b>Karen Gasparyan</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=gaskar" title="Code">\xf0\x9f\x92\xbb</a></td>\n    <td align="center"><a href="https://github.com/kserjey"><img src="https://avatars1.githubusercontent.com/u/19753880?v=4" width="100px;" alt="Sergey Korchinskiy"/><br /><sub><b>Sergey Korchinskiy</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Akserjey" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=kserjey" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=kserjey" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a></td>\n    <td align="center"><a href="https://github.com/edygar"><img src="https://avatars.githubusercontent.com/u/566280?v=3" width="100px;" alt="Edygar Oliveira"/><br /><sub><b>Edygar Oliveira</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=edygar" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/issues?q=author%3Aedygar" title="Bug reports">\xf0\x9f\x90\x9b</a></td>\n    <td align="center"><a href="https://github.com/epeicher"><img src="https://avatars1.githubusercontent.com/u/3519124?v=4" width="100px;" alt="epeicher"/><br /><sub><b>epeicher</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Aepeicher" title="Bug reports">\xf0\x9f\x90\x9b</a></td>\n    <td align="center"><a href="https://francoischalifour.com"><img src="https://avatars3.githubusercontent.com/u/6137112?v=4" width="100px;" alt="Fran\xc3\xa7ois Chalifour"/><br /><sub><b>Fran\xc3\xa7ois Chalifour</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/commits?author=francoischalifour" title="Code">\xf0\x9f\x92\xbb</a> <a href="https://github.com/downshift-js/downshift/commits?author=francoischalifour" title="Tests">\xe2\x9a\xa0\xef\xb8\x8f</a> <a href="#platform-francoischalifour" title="Packaging/porting to new platform">\xf0\x9f\x93\xa6</a></td>\n  </tr>\n  <tr>\n    <td align="center"><a href="https://github.com/maxmalov"><img src="https://avatars2.githubusercontent.com/u/284129?v=4" width="100px;" alt="Maxim Malov"/><br /><sub><b>Maxim Malov</b></sub></a><br /><a href="https://github.com/downshift-js/downshift/issues?q=author%3Amaxmalov" title="Bug reports">\xf0\x9f\x90\x9b</a> <a href="https://github.com/downshift-js/downshift/commits?author=maxmalov" title="Code">\xf0\x9f\x92\xbb</a></td>\n  </tr>\n</table>\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors][all-contributors] specification.\nContributions of any kind welcome!\n\n## LICENSE\n\nMIT\n\n[npm]: https://www.npmjs.com/\n[node]: https://nodejs.org\n[build-badge]: https://img.shields.io/travis/downshift-js/downshift.svg?style=flat-square\n[build]: https://travis-ci.org/downshift-js/downshift\n[coverage-badge]: https://img.shields.io/codecov/c/github/downshift-js/downshift.svg?style=flat-square\n[coverage]: https://codecov.io/github/downshift-js/downshift\n[version-badge]: https://img.shields.io/npm/v/downshift.svg?style=flat-square\n[package]: https://www.npmjs.com/package/downshift\n[downloads-badge]: https://img.shields.io/npm/dm/downshift.svg?style=flat-square\n[npmcharts]: http://npmcharts.com/compare/downshift\n[license-badge]: https://img.shields.io/npm/l/downshift.svg?style=flat-square\n[license]: https://github.com/downshift-js/downshift/blob/master/LICENSE\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[prs]: http://makeapullrequest.com\n[chat]: https://gitter.im/downshift-js/downshift\n[chat-badge]: https://img.shields.io/gitter/room/downshift-js/downshift.svg?style=flat-square\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/downshift-js/downshift/blob/master/CODE_OF_CONDUCT.md\n[react-badge]: https://img.shields.io/badge/%E2%9A%9B%EF%B8%8F-(p)react-00d8ff.svg?style=flat-square\n[react]: https://facebook.github.io/react/\n[gzip-badge]: http://img.badgesize.io/https://unpkg.com/downshift/dist/downshift.umd.min.js?compression=gzip&label=gzip%20size&style=flat-square\n[size-badge]: http://img.badgesize.io/https://unpkg.com/downshift/dist/downshift.umd.min.js?label=size&style=flat-square\n[unpkg-dist]: https://unpkg.com/downshift/dist/\n[module-formats-badge]: https://img.shields.io/badge/module%20formats-umd%2C%20cjs%2C%20es-green.svg?style=flat-square\n[spectrum-badge]: https://withspectrum.github.io/badge/badge.svg\n[spectrum]: https://spectrum.chat/downshift\n[emojis]: https://github.com/kentcdodds/all-contributors#emoji-key\n[all-contributors]: https://github.com/kentcdodds/all-contributors\n[ryan]: https://github.com/ryanflorence\n[compound-components-lecture]: https://courses.reacttraining.com/courses/advanced-react/lectures/3060560\n[react-autocomplete]: https://www.npmjs.com/package/react-autocomplete\n[jquery-complete]: https://jqueryui.com/autocomplete/\n[examples]: https://codesandbox.io/search?refinementList%5Btags%5D%5B0%5D=downshift%3Aexample&page=1\n[yt-playlist]: https://www.youtube.com/playlist?list=PLV5CVI1eNcJh5CTgArGVwANebCrAh2OUE\n[jared]: https://github.com/jaredly\n[controlled-components-lecture]: https://courses.reacttraining.com/courses/advanced-react/lectures/3172720\n[react-training]: https://reacttraining.com/\n[advanced-react]: https://courses.reacttraining.com/courses/enrolled/200086\n[use-a-render-prop]: https://cdb.reacttraining.com/use-a-render-prop-50de598f11ce\n[semver]: http://semver.org/\n[hooks-readme]: https://github.com/downshift-js/downshift/blob/master/src/hooks\n[useselect-readme]: https://github.com/downshift-js/downshift/blob/master/src/hooks/useSelect\n'