b'<div align="center">\n  <a href="https://evergreen.segment.com/">\n    <img src="https://raw.githubusercontent.com/segmentio/evergreen/master/evergreen-github-hero.png" alt="Evergreen, A Design System for the Web. Evergreen is a React UI Framework for building ambitious products on the web. Brought to you by Segment.">\n\t<br>\n  <br>\n  <a href="https://circleci.com/gh/segmentio/evergreen/tree/master">\n    <img src="https://circleci.com/gh/segmentio/evergreen.svg?style=svg" alt="Build Status">\n  </a>\n\t<br>\n  <br>\n</div>\n\n- **Works out of the box.** Evergreen contains a set of polished React components that work out of the box.\n\n- **Flexible & composable.** Evergreen components are built on top of a React UI Primitive for endless composability.\n\n- **Enterprise-grade.** Evergreen features a UI design language for enterprise-grade web applications.\n\n## Documentation & Community\n\n- [Documentation](https://evergreen.segment.com/)\n- [Spectrum Chat](https://spectrum.chat/evergreen)\n\n## Evergreen v3 to v4 Migration guide\n\nEvergreen v3 to v4 [migration guide](https://github.com/segmentio/evergreen/pull/200)\n\n## Install and use components\n\n\xf0\x9f\x8c\xb2 Evergreen is made up of multiple components and tools which you can import one by one. All you need to do is install the `evergreen-ui` package:\n\n```sh\n$ yarn add evergreen-ui\n# or\n$ npm install --save evergreen-ui\n```\n\nA working version, assuming you are using something like [Create React App](https://github.com/facebookincubator/create-react-app), might look like this:\n\n```js\nimport React from \'react\'\nimport ReactDOM from \'react-dom\'\nimport { Button } from \'evergreen-ui\'\n\nReactDOM.render(\n  <Button>I am using \xf0\x9f\x8c\xb2 Evergreen!</Button>,\n  document.getElementById(\'root\')\n)\n```\n\n## Core values of \xf0\x9f\x8c\xb2 Evergreen\n\n- **Evergreen is built on the belief that you can never predict all future requirements,\n  only prepare for it.** Instead of creating fixed configurations that work today, Evergreen promotes building systems that anticipate new and changing design requirements.\n\n- **Evergreen is built on the belief that things should work out of the box with smart defaults, but also offer full control when needed.** For example, Evergreen uses CSS-in-JS and builds on top of the Box component in [ui-box](https://github.com/segmentio/ui-box).\n\n- **Evergreen is built on the belief that using Evergreen and contributing to Evergreen should be a pleasant experience.** We prioritize documentation and all the tools for a solid developer experience. We advocate respect and inclusivity in our writings and interactions.\n\n## FAQ\n\n### Theming support?\n\nEvergreen v4 supports theming partially. It is still complex to theme Evergreen. We have done exploratory work to make theming more powerful and accessible. The progress is available in the `v4-create-theme` branch.\n\n### How does Server Side Rendering (SSR) work?\n\nEvergreen offers easy Server Side Rendering (SSR) and automatic hydration.\n\nEvergreen bundles 2 CSS-in-JS solutions, from glamor and ui-box. To make it super easy to do server side rendering and hydration, Evergreen exposes a `extractStyles()` function that will do SSR for both at once.\n\n- How to use it with Next.js in the [ssr-next example app](examples/ssr-next).\n- [How to use it with GatsbyJS](https://github.com/segmentio/evergreen/issues/154)\n\n## Contributing to Evergreen\n\n### \xe2\x9a\x99 Step 1. Configuring your editor\n\nIf you are using Atom, make sure to install the [`prettier-atom`](https://atom.io/packages/prettier-atom), [`linter`](https://github.com/AtomLinter/linter) and [`linter-xo`](https://github.com/sindresorhus/atom-linter-xo) packages.\n\nAll the configuration for prettier and xo is in the `package.json`.\nYou shouldn\'t have to configure things separately, please file a issue if there\'s a problem.\n\n### \xf0\x9f\x93\x96 Step 2. Get storybook up and running\n\nTo actually start seeing the components you have to run React Storybook:\n\n```\n$ yarn dev\n```\n\n## \xf0\x9f\xa4\x93 Scripts explained\n\nInside the `package.json` there are a bunch of scripts that this repo uses\nto run the project in development and to build the project.\n\nBelow you can read a description of each script.\n\n- `yarn dev`: Starts the development React Storybook.\n\n- `yarn test`: Lints the JavaScript files using XO and then runs the unit tests using AVA.\n\n- `yarn build`: Builds all of the JavaScript files using Babel.\n\n- `yarn clean`: removes all untracked files (`git clean -Xdf`).\n\n- `yarn release`: Releases new version of Evergreen (requires MFA via npm as a collaborator)\n\n- `yarn create-package`: This command scaffolds a package with no specific boilerplate. It\'s useful for creating utilities.\n\nFor the following command:\n\n```\nyarn create-package utils\n```\n\nThe following file tree will be generated:\n\n```\n/src/utils\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /src/\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 index.js\n```\n\n- `yarn create-package:components`: This command scaffolds a package with React component(s) boilerplate.\n\nYou can pass one or more components to this command.\n\nFor the following command:\n\n```\nyarn create-package:components typography Text Heading\n```\n\nThe following file tree will be generated:\n\n```\n/src/typography\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /src/\n|   \xe2\x94\x82\xe2\x94\x80\xe2\x94\x80 Text.js\n|   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 Heading.js\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 /stories/\n\xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 index.stories.js\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 index.js\n```\n\n### \xf0\x9f\x93\x96 Step 3. Run evergreen docs locally\n\nEvergreen docs depends on main lib built.\n\nRun the following commands to run it in your local:\n\n```\n$ yarn build\n$ cd docs\n$ yarn install\n$ yarn dev\n```\n\n## \xf0\x9f\x8e\x89 Contributors\n\nWe will add you to the list if you make any meaningful contribution!\n\n- Jeroen Ransijn\n- Roland Warmerdam\n- Ben McMahon\n- Matt Shwery\n- ... many other on the Segment team and open-source contributors\n\nThis project is maintained by [Segment](https://segment.com/)\n\nPlease take a look at the [contributing guide](.github/CONTRIBUTING.md) to better understand what to work on.\n\n## \xf0\x9f\x91\x8f Respect earns Respect\n\nPlease respect our [Code of Conduct](.github/CODE_OF_CONDUCT.md), in short:\n\n- Using welcoming and inclusive language\n- Being respectful of differing viewpoints and experiences\n- Gracefully accepting constructive criticism\n- Focusing on what is best for the community\n- Showing empathy towards other community members\n\n## License\n\nEvergreen is released under the MIT license.\nThe BlueprintJS icons are licensed under a [custom Apache 2.0 license](https://github.com/palantir/blueprint/blob/develop/LICENSE).\n\nCopyright \xc2\xa9 2017 Segment.io, Inc.\n'