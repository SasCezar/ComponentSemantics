b'<p>\n  <img alt="redux-offline" src="docs/logo.png" width="300"></img>\n</p>\n<p>\n  <a title=\'License\' href="https://raw.githubusercontent.com/redux-offline/redux-offline/master/LICENSE" height="18">\n    <img src=\'https://img.shields.io/badge/license-MIT-blue.svg\' />\n  </a>\n  <a href="https://badge.fury.io/js/%40redux-offline%2Fredux-offline">\n    <img src="https://badge.fury.io/js/%40redux-offline%2Fredux-offline.svg" alt="npm version" height="18">\n  </a>\n  <a href="https://travis-ci.org/redux-offline/redux-offline">\n    <img src="https://travis-ci.org/redux-offline/redux-offline.svg?branch=master" alt="travis" height="18">\n  </a>\n</p>\n\nPersistent Redux store for _Reasonaboutable_:tm: Offline-First applications, with first-class support for optimistic UI. Use with React, React Native, or as standalone state container for any web app.\n\n> Redux Offline is now being maintained by a community driven team. The new versions of the library will now be available under the npm organization `@redux-offline`. Big thank you to [@jevakallio](https://github.com/jevakallio) for creating this amazing library in the first place.\n\n## Quick start\n\n##### 1. Install with npm (or [Yarn](https://yarnpkg.com))\n\n##### For React Native 0.60+\n```shell\nnpm install --save @redux-offline/redux-offline@native\n```\n#### For React Native <= 0.59\n```shell\nnpm install --save @redux-offline/redux-offline\n```\n\n##### 2. Add the `offline` [store enhancer](http://redux.js.org/docs/Glossary.html#store-enhancer) with `compose`\n```js\n\nimport { applyMiddleware, createStore, compose } from \'redux\';\nimport { offline } from \'@redux-offline/redux-offline\';\nimport offlineConfig from \'@redux-offline/redux-offline/lib/defaults\';\n\n// ...\n\nconst store = createStore(\n  reducer,\n  preloadedState,\n  compose(\n    applyMiddleware(middleware),\n    offline(offlineConfig)\n  )\n);\n```\n\n##### 3. Decorate actions with offline metadata\n\n```js\nconst followUser = userId => ({\n  type: \'FOLLOW_USER_REQUEST\',\n  payload: { userId },\n  meta: {\n    offline: {\n      // the network action to execute:\n      effect: { url: \'/api/follow\', method: \'POST\', json: { userId } },\n      // action to dispatch when effect succeeds:\n      commit: { type: \'FOLLOW_USER_COMMIT\', meta: { userId } },\n      // action to dispatch if network action fails permanently:\n      rollback: { type: \'FOLLOW_USER_ROLLBACK\', meta: { userId } }\n    }\n  }\n});\n```\n\nIf the effect payload is something other than JSON you can pass the body and headers:\n\n```js\nconst followUser = userId => ({\n  type: \'REGISTER_USER\',\n  payload: { name, email },\n  meta: {\n    offline: {\n      // the network action to execute:\n      effect: { url: \'/api/register\', method: \'POST\', body: `name=${name}&email=${email}`, headers: { \'content-type\': \'application/x-www-form-urlencoded\' } },\n      // action to dispatch when effect succeeds:\n      commit: { type: \'REGISTER_USER_COMMIT\', meta: { name, email } },\n      // action to dispatch if network action fails permanently:\n      rollback: { type: \'REGISTER_USER_ROLLBACK\', meta: { name, email } }\n    }\n  }\n});\n```\n\n##### 4. (React Native Android) Ask permission to read network status\n\nIf writing a native app for Android, you\'ll need to make sure to request the permission to access network state in your `AndroidManifest.xml`:\n\n```xml\n  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />\n```\n* * *\n\nSee [Documentation](docs/README.md) for configuration options, the full API, and common recipes.\n\n## Contributing\n\nImprovements and additions welcome. For large changes, please submit a discussion issue before jumping to coding; we\'d hate you to waste the effort.\n\nIf you are reporting a bug, please include code that reproduces the error. Here is a starting application on [CodeSandbox](https://codesandbox.io/s/8xml9l1r0j).\n\nIn lieu of a formal style guide, follow the included eslint rules, and use Prettier to format your code.\n\n## Miscellanea\n\n### Usage with Redux Persist v5\n\nIn case you want to use a custom [redux-persist](https://github.com/rt2zz/redux-persist) version, there is an\n[example](https://gist.github.com/jarvisluong/f14872b9c7ed00bc2afc89c4622e3b55) configuration.\n\n### Prior art\n\nRedux Offline is a distillation of patterns discovered while building apps using previously existing libraries:\n\n* Forbes Lindesay\'s [redux-optimist](https://github.com/ForbesLindesay/redux-optimist)\n* Zack Story\'s [redux-persist](https://github.com/rt2zz/redux-persist/tree/v4)\n\nWithout their work, Redux Offline wouldn\'t exist. If you like the ideas behind Redux Offline, but want to build your own stack from lower-level components, these are good places to start.\n\n### License\n\nMIT\n'