b'docker-symfony\n==============\n\n[![Build Status](https://secure.travis-ci.org/eko/docker-symfony.png?branch=master)](http://travis-ci.org/eko/docker-symfony)\n\n\nThis is a complete stack for running Symfony 4 (latest version: Flex) into Docker containers using docker-compose tool.\n\n# Installation\n\nFirst, clone this repository:\n\n```bash\n$ git clone https://github.com/eko/docker-symfony.git\n```\n\nNext, put your Symfony application into `symfony` folder and do not forget to add `symfony.localhost` in your `/etc/hosts` file.\n\nMake sure you adjust `database_host` in `parameters.yml` to the database container alias "db"\n\nThen, run:\n\n```bash\n$ docker-compose up\n```\n\nYou are done, you can visit your Symfony application on the following URL: `http://symfony.localhost` (and access Kibana on `http://symfony.localhost:81`)\n\n_Note :_ you can rebuild all Docker images by running:\n\n```bash\n$ docker-compose build\n```\n\n# How it works?\n\nHere are the `docker-compose` built images:\n\n* `db`: This is the MySQL database container (can be changed to postgresql or whatever in `docker-compose.yml` file),\n* `php`: This is the PHP-FPM container including the application volume mounted on,\n* `nginx`: This is the Nginx webserver container in which php volumes are mounted too,\n* `elk`: This is a ELK stack container which uses Logstash to collect logs, send them into Elasticsearch and visualize them with Kibana.\n\nThis results in the following running containers:\n\n```bash\n> $ docker-compose ps\n        Name                       Command               State              Ports\n--------------------------------------------------------------------------------------------\ndockersymfony_db_1      docker-entrypoint.sh mysqld      Up      0.0.0.0:3306->3306/tcp\ndockersymfony_elk_1     /usr/bin/supervisord -n -c ...   Up      0.0.0.0:81->80/tcp\ndockersymfony_nginx_1   nginx                            Up      443/tcp, 0.0.0.0:80->80/tcp\ndockersymfony_php_1     php-fpm7 -F                      Up      0.0.0.0:9000->9000/tcp\n```\n\n# Read logs\n\nYou can access Nginx and Symfony application logs in the following directories on your host machine:\n\n* `logs/nginx`\n* `logs/symfony`\n\n# Use Kibana!\n\nYou can also use Kibana to visualize Nginx & Symfony logs by visiting `http://symfony.localhost:81`.\n\n# Use xdebug!\n\nConfigure your IDE to use port 5902 for XDebug.\nDocker versions below 18.03.1 don\'t support the Docker variable `host.docker.internal`.  \nIn that case you\'d have to swap out `host.docker.internal` with your machine IP address in php-fpm/xdebug.ini.\n\n# Code license\n\nYou are free to use the code in this repository under the terms of the 0-clause BSD license. LICENSE contains a copy of this license.\n'