b'KnpSnappyBundle\n===============\n\n[![Build Status](https://travis-ci.org/KnpLabs/KnpSnappyBundle.svg?branch=master)](https://travis-ci.org/KnpLabs/KnpSnappyBundle)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/KnpLabs/KnpSnappyBundle/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/KnpLabs/KnpSnappyBundle/?branch=master)\n[![StyleCI](https://styleci.io/repos/743218/shield?branch=master)](https://styleci.io/repos/743218)\n[![knpbundles.com](http://knpbundles.com/KnpLabs/KnpSnappyBundle/badge-short)](http://knpbundles.com/KnpLabs/KnpSnappyBundle)\n\n[Snappy][snappy] is a PHP (5.6+) wrapper for the [wkhtmltopdf][wkhtmltopdf] conversion utility.\nIt allows you to generate either pdf or image files from your html documents, using the webkit engine.\n\nThe KnpSnappyBundle provides a simple integration for your Symfony project.\n\nInstallation\n------------\n\nWith [composer](https://getcomposer.org), require:\n\n`composer require knplabs/knp-snappy-bundle`\n\nThen enable it in your kernel (optional if you are using the Flex recipe with Symfony4) :\n\n```php\n// app/AppKernel.php\npublic function registerBundles()\n{\n    $bundles = array(\n        //...\n        new Knp\\Bundle\\SnappyBundle\\KnpSnappyBundle(),\n        //...\n```\nConfiguration\n-------------\n\nIf you need to change the binaries, change the instance options or even disable one or both services, you can do it through the configuration.\n\n```yaml\n# app/config/config.yml (or config/packages/knp_snappy.yaml if using Symfony4 and the Flex recipe)\nknp_snappy:\n    pdf:\n        enabled:    true\n        binary:     /usr/local/bin/wkhtmltopdf #"\\"C:\\\\Program Files\\\\wkhtmltopdf\\\\bin\\\\wkhtmltopdf.exe\\"" for Windows users\n        options:    []\n    image:\n        enabled:    true\n        binary:     /usr/local/bin/wkhtmltoimage #"\\"C:\\\\Program Files\\\\wkhtmltopdf\\\\bin\\\\wkhtmltoimage.exe\\"" for Windows users\n        options:    []\n```\n\nIf you want to change temporary folder which is ```sys_get_temp_dir()``` by default, you can use\n\n```yaml\n# app/config/config.yml (or config/packages/knp_snappy.yaml if using Symfony4 and the Flex recipe)\nknp_snappy:\n    temporary_folder: "%kernel.cache_dir%/snappy"\n```\n\nYou can also configure the timeout used by the generators with `process_timeout`:\n\n```yaml\n# app/config/config.yml (or config/packages/knp_snappy.yaml if using Symfony4 and the Flex recipe)\nknp_snappy:\n    process_timeout: 20 # In seconds\n```\n\nUsage\n-----\n\nThe bundle registers two services:\n\n - the `knp_snappy.image` service allows you to generate images;\n - the `knp_snappy.pdf` service allows you to generate pdf files.\n\n### Generate an image from a URL\n\n```php\n$container->get(\'knp_snappy.image\')->generate(\'http://www.google.fr\', \'/path/to/the/image.jpg\');\n```\n\n### Generate a pdf document from a URL\n\n```php\n$container->get(\'knp_snappy.pdf\')->generate(\'http://www.google.fr\', \'/path/to/the/file.pdf\');\n```\n\n### Generate a pdf document from multiple URLs\n\n```php\n$container->get(\'knp_snappy.pdf\')->generate(array(\'http://www.google.fr\', \'http://www.knplabs.com\', \'http://www.google.com\'), \'/path/to/the/file.pdf\');\n```\n\n### Generate a pdf document from a twig view\n\n```php\n$this->get(\'knp_snappy.pdf\')->generateFromHtml(\n    $this->renderView(\n        \'MyBundle:Foo:bar.html.twig\',\n        array(\n            \'some\'  => $vars\n        )\n    ),\n    \'/path/to/the/file.pdf\'\n);\n```\n\n### Render an image as response from a controller\n\n```php\nuse Knp\\Bundle\\SnappyBundle\\Snappy\\Response\\JpegResponse;\n\nclass SomeController\n{\n    public function imageAction()\n    {\n        $html = $this->renderView(\'MyBundle:Foo:bar.html.twig\', array(\n            \'some\'  => $vars\n        ));\n\n        return new JpegResponse(\n            $this->get(\'knp_snappy.image\')->getOutputFromHtml($html),\n            \'image.jpg\'\n        );\n    }\n}\n```\n\n### Render a pdf document as response from a controller\n\n```php\nuse Knp\\Bundle\\SnappyBundle\\Snappy\\Response\\PdfResponse;\n\nclass SomeController extends Controller\n{\n    public function pdfAction()\n    {\n        $html = $this->renderView(\'MyBundle:Foo:bar.html.twig\', array(\n            \'some\'  => $vars\n        ));\n\n        return new PdfResponse(\n            $this->get(\'knp_snappy.pdf\')->getOutputFromHtml($html),\n            \'file.pdf\'\n        );\n    }\n}\n```\n\n### Render a pdf document with a relative url inside like css files\n\n```php\nuse Knp\\Bundle\\SnappyBundle\\Snappy\\Response\\PdfResponse;\n\nclass SomeController extends Controller\n{\n    public function pdfAction()\n    {\n        $pageUrl = $this->generateUrl(\'homepage\', array(), true); // use absolute path!\n\n        return new PdfResponse(\n            $this->get(\'knp_snappy.pdf\')->getOutput($pageUrl),\n            \'file.pdf\'\n        );\n    }\n}\n```\n\nMaintainers\n-----------\n\nKNPLabs is looking for maintainers ([see why](https://knplabs.com/en/blog/news-for-our-foss-projects-maintenance)).\n\nIf you are interested, feel free to open a PR to ask to be added as a maintainer.\n\nWe\xe2\x80\x99ll be glad to hear from you :)\n\nCredits\n-------\n\nSnappyBundle and [Snappy][snappy] are based on the awesome [wkhtmltopdf][wkhtmltopdf].\nSnappyBundle has been developed by [KnpLabs][KnpLabs].\n\n[snappy]: https://github.com/KnpLabs/snappy\n[wkhtmltopdf]: http://wkhtmltopdf.org\n[KnpLabs]: http://www.knplabs.com\n'