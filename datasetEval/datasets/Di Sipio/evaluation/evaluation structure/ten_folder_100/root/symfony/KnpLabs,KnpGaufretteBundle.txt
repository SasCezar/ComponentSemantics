b'Gaufrette Bundle\n================\n\n[![Build Status](https://travis-ci.org/KnpLabs/KnpGaufretteBundle.svg?branch=master)](https://travis-ci.org/KnpLabs/KnpGaufretteBundle)\n\nProvides a [Gaufrette][gaufrette-homepage] integration for your Symfony projects.\n\nAbout Gaufrette\n===============\n\nGaufrette is a PHP library providing a filesystem abstraction layer.\nThis abstraction layer allows you to develop applications without needing to know where all their media files will be stored or how.\n\nDocumentation is available the [official page of Gaufrette][gaufrette-homepage].\n\nInstallation\n============\n\n## Prerequisites\n\nAs this bundle is an integration for Symfony of the [Gaufrette][gaufrette-homepage] library, it requires you to first install [Gaufrette][gaufrette-homepage] in your project.\n\nNote that, you need to install separately the adapters you want to use. You can find more details about these packages [here](https://github.com/KnpLabs/Gaufrette#metapackages-for-adapters),\nand the full list adapters [on packagist](https://packagist.org/packages/gaufrette/).\n\n## With composer\n\n```bash\ncomposer require knplabs/knp-gaufrette-bundle\n```\n\n## Register the bundle\n\nYou must register the bundle in your kernel:\n\n``` php\n<?php\n\nreturn [\n    // ...\n    Knp\\Bundle\\GaufretteBundle\\KnpGaufretteBundle::class                       => [\'all\' => true],\n];\n```\n\nConfiguration\n=============\n\nThe Gaufrette bundle allows you to declare your filesystems as services without having to reach into the famous "Service Container".\nIndeed, you can do it with the configuration!\n\nThe configuration of the Gaufrette bundle is divided into two parts: the `adapters` and the `filesystems`.\n\n## Configuring the Adapters\n\n``` yaml\n# config/packages/knp_gaufrette.yaml\nknp_gaufrette:\n    adapters:\n        foo:\n            local:\n                directory: /path/to/my/filesystem\n```\n\nThe defined adapters are then used to create the filesystems.\n\nYou can use on of these adapters:\n* [Local Adapter](Resources/docs/adapters/local.md)\n* [Safe Local Adapter](Resources/docs/adapters/safe_local.md)\n* [Service](Resources/docs/adapters/service.md)\n* [In Memory](Resources/docs/adapters/memory.md)\n* [Azure Blob Storage](Resources/docs/adapters/azure.md)\n* [GridFS](Resources/docs/adapters/gridfs.md)\n* [MogileFS](Resources/docs/adapters/mogilefs.md)\n* [Ftp](Resources/docs/adapters/ftp.md)\n* [Sftp](Resources/docs/adapters/sftp.md)\n* [Phpseclib Sftp](Resources/docs/adapters/phpseclib_sftp.md)\n* [Apc](Resources/docs/adapters/apc.md)\n* [AWS S3](Resources/docs/adapters/awss3.md)\n* [Open Cloud](Resources/docs/adapters/opencloud.md)\n* [GoogleCloudStorage](Resources/docs/adapters/googlecloud.md)\n* [Cache](Resources/docs/adapters/cache.md)\n* [Stream Wrapper](Resources/docs/stream.md)\n* [Doctrine DBAL](Resources/docs/adapters/doctrine_dbal.md)\n* [Dropbox](Resources/docs/adapters/dropbox.md)\n\n## Configuring the Filesystems\n\n``` yaml\n# config/packages/knp_gaufrette.yaml\nknp_gaufrette:\n    adapters:\n        # ...\n    filesystems:\n        bar:\n            adapter:    foo\n            alias:      foo_filesystem\n```\n\nEach defined filesystem must have an `adapter` with its value set to an adapter\'s key.\nThe filesystem defined above will result in a service with id `gaufrette.bar_filesystem`.\nThe `alias` parameter allows us to define an alias for it (`foo_filesystem` in this case).\n\nThe filesystem map\n==================\n\nYou can access all declared filesystems through the map service.\nIn the previous exemple, we declared a `bar` filesystem:\n\n``` php\n$container->get(\'knp_gaufrette.filesystem_map\')->get(\'bar\');\n```\n\nReturns the `bar` instance of `Gaufrette\\Filesystem`.\n\nUse cases\n==================\n\n[Check out](https://github.com/KnpLabs/KnpGaufretteBundle/blob/master/Resources/docs/use-case-examples.md) basic examples of the library.\n\n[gaufrette-homepage]: https://github.com/KnpLabs/Gaufrette\n\n## Maintainers\n\n- [@NiR-](https://github.com/NiR-)\n- [@nicolasmure](https://github.com/nicolasmure)\n'