b'# Welcome!\n\n[![Release](https://img.shields.io/github/release/ComplianceAsCode/content.svg)](https://github.com/ComplianceAsCode/content/releases/latest)\n[![Nightly ZIP Status](https://jenkins.complianceascode.io/job/scap-security-guide-nightly-zip/badge/icon?subject=Nightly%20OVAL-5.11%20ZIP&status=Download)](https://jenkins.complianceascode.io/job/scap-security-guide-nightly-zip/lastSuccessfulBuild/artifact/scap-security-guide-nightly.zip)\n[![Nightly 5.10 ZIP Status](https://jenkins.complianceascode.io/job/scap-security-guide-nightly-oval510-zip/badge/icon?subject=Nightly%20OVAL-5.10%20ZIP&status=Download)](https://jenkins.complianceascode.io/job/scap-security-guide-nightly-oval510-zip/lastSuccessfulBuild/artifact/scap-security-guide-nightly-oval-510.zip)\n[![Link-checker Status](https://jenkins.complianceascode.io/job/scap-security-guide-linkcheck/badge/icon?subject=Link%20Checker)](https://jenkins.complianceascode.io/job/scap-security-guide-linkcheck/)\n[![CentOS CI Status](https://ci.centos.org/job/openscap-scap-security-guide/badge/icon?subject=CentOS%20CI%20Build)](https://ci.centos.org/job/openscap-scap-security-guide/)\n[![Travis CI Build Status](https://img.shields.io/travis/OpenSCAP/scap-security-guide/master.svg?label=Travis%20CI%20Build)](https://travis-ci.org/OpenSCAP/scap-security-guide)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/ComplianceAsCode/content/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/ComplianceAsCode/content/?branch=master)\n[![Profile Statistics](https://jenkins.complianceascode.io/job/scap-security-guide-stats/badge/icon?subject=Statistics)](https://jenkins.complianceascode.io/job/scap-security-guide-stats/Statistics/)\n\n<a href="docs/readme_images/report_sample.png"><img align="right" width="250" src="docs/readme_images/report_sample.png" alt="Evaluation report sample"></a>\n\nThe purpose of this project is to create *security policy content* for various\nplatforms -- *Red Hat Enterprise Linux*, *Fedora*, *Ubuntu*, *Debian*, ... --\nas well as products -- *Firefox*, *Chromium*, *JRE*, ...\nOur aim is to make it as easy as possible to write new and maintain existing\nsecurity content in all the commonly used formats.\n\n## We build security content in various formats\n\n![NIST logo](docs/readme_images/nist_logo.svg "NIST logo") &nbsp; &nbsp; ![Ansible logo](docs/readme_images/ansible_logo.svg "Ansible logo") &nbsp; &nbsp; ![Bash logo](docs/readme_images/bash_logo.png "Bash logo")\n\n*"SCAP content"* refers to documents  in the *XCCDF*, *OVAL* and\n*Source DataStream* formats.  These documents can be presented\nin different forms and by different organizations to meet their security\nautomation and technical implementation needs.  For general use we\nrecommend *Source DataStreams* because they contain all the data you\nneed to evaluate and put machines into compliance. The datastreams are\npart of our release ZIP archives.\n\n*"Ansible content"* refers to Ansible playbooks generated from security\nprofiles.  These can be used both in check-mode to evaluate compliance,\nas well as run-mode to put machines into compliance.  We publish these\non *Ansible Galaxy* as well as in release ZIP archives.\n\n*"Bash fix files"* refers to *Bash* scripts generate from security\nprofiles.  These are meant to be run on machines to put them into\ncompliance.  We recommend using other formats but understand that for\nsome deployment scenarios bash is the only option.\n\n### Why?\n\nWe want multiple organizations to be able to efficiently develop security\ncontent. By taking advantage of the powerful build system of this project,\nwe avoid as much redundancy as possible.\n\nThe build system combines the easy-to-edit YAML rule files with OVAL checks,\nAnsible task snippets, Bash fixes and other files. Templating is provided\nat every step to avoid boilerplate. Security identifiers\n(CCE, NIST ID, STIG, ...) appear in all of our output formats but are all\nsourced from the YAML rule files.\n\nWe understand that depending on your organization\'s needs you may need\nto use a specific security content format. We let you choose.\n\n![Build system schema](docs/readme_images/build_schema.svg "Build system schema")\n\n---\nWe use an OpenControl-inspired YAML rule format for input. Write once and\ngenerate security content in XCCDF, Ansible and others.\n\n```YAML\nprodtype: rhel7\n\ntitle: \'Configure The Number of Allowed Simultaneous Requests\'\n\ndescription: |-\n    The <tt>MaxKeepAliveRequests</tt> directive should be set and configured to\n    <sub idref="var_max_keepalive_requests" /> or greater by setting the following\n    in <tt>/etc/httpd/conf/httpd.conf</tt>:\n    <pre>MaxKeepAliveRequests <sub idref="var_max_keepalive_requests" /></pre>\n\nrationale: |-\n    Resource exhaustion can occur when an unlimited number of concurrent requests\n    are allowed on a web site, facilitating a denial of service attack. Mitigating\n    this kind of attack will include limiting the number of concurrent HTTP/HTTPS\n    requests per IP address and may include, where feasible, limiting parameter\n    values associated with keepalive, (i.e., a parameter used to limit the amount of\n    time a connection may be inactive).\n\nseverity: medium\n\nidentifiers:\n    cce: "80551-5"\n```\n\n---\n\n### Scan targets\n\nOur security content can be used to scan bare-metal machines, virtual machines,\nvirtual machine images (qcow2 and others), containers (including Docker) and\ncontainer images.\n\nWe use platform checks to detect whether we should or should not evaluate some\nof the rules. For example: separate partition checks make perfect sense on bare-metal\nmachines but go against recommended practices on containers.\n\n## Installation\n\n### From packages\n\nThe preferred method of installation is via the package manager of your\ndistribution. On *Red Hat Enterprise Linux* and *Fedora* you can use:\n\n```bash\nyum install scap-security-guide\n```\n\nOn Debian (sid), you can use:\n\n```bash\napt install ssg-debian  # for Debian guides\napt install ssg-debderived  # for Debian-based distributions (e.g. Ubuntu) guides\napt install ssg-nondebian  # for other distributions guides (RHEL, Fedora, etc.)\napt install ssg-applications  # for application-oriented guides (Firefox, JBoss, etc.)\n```\n\n### From release ZIP files\n\nDownload pre-built SSG zip archive from\n[the release page](https://github.com/ComplianceAsCode/content/releases/latest).\nEach zip file is an archive with ready-made SCAP source datastreams.\n\n### From COPR\n\nWe maintain a COPR repository that provides unofficial builds of latest versions\nof openscap, scap-security-guide, scap-workbench and openscap-daemon.\nThe packages are suitable for use on Red Hat Enterprise Linux 6 and 7 and CentOS 6 and 7.\n\nSee https://copr.fedorainfracloud.org/coprs/openscapmaint/openscap-latest/ for\ndetailed instructions.\n\n### From source\n\nIf ComplianceAsCode is not packaged in your distribution (it may be present there as `scap-security-guide` package), or if the\nversion that is packaged is too old, you need to build the content yourself\nand install it via `make install`. Please see the [Developer Guide](docs/manual/developer_guide.adoc)\ndocument for more info. We also recommend opening an issue on that distributions\nbug tracker to voice interest.\n\n## Usage\n\nWe assume you have installed ComplianceAsCode system-wide into a\nstandard location from current upstream sources as instructed in the previous section.\n\nThere are several ways to consume ComplianceAsCode content, we will only\ngo through a few of them here.\n\n### `oscap` tool\n\nThe `oscap` tool is a low-level command line interface that comes from\nthe OpenSCAP project. It can be used to scan the local machine.\n\n```bash\noscap xccdf eval --profile xccdf_org.ssgproject.content_profile_rht-ccp --results-arf arf.xml --report report.html --oval-results /usr/share/xml/scap/ssg/content/ssg-rhel7-ds.xml\n```\n\nAfter evaluation, the `arf.xml` file will contain all results in a reusable\n*Result DataStream* format, `report.html` will contain a human readable\nreport that can be opened in a browser.\n\nReplace the profile with other profile of your choice, you can display\nall possible choices using:\n\n```bash\noscap info /usr/share/xml/scap/ssg/content/ssg-rhel7-ds.xml\n```\n\nPlease see the [OpenSCAP User Manual](https://static.open-scap.org/openscap-1.2/oscap_user_manual.html)\nfor more info.\n\n### SCAP Workbench\n\nThe SCAP Workbench is a graphical user interface for SCAP evaluation and\ncustomization. It is suitable for scanning a single machine, either local\nor remote (via SSH). New versions of SCAP Workbench have SSG integration\nand will automatically offer it when the application is started.\n\nPlease see the\n[SCAP Workbench User Manual](https://static.open-scap.org/scap-workbench-1.1/)\nfor more info.\n\n### `oscap-ssh` tool\n\n`oscap-ssh` comes bundled with OpenSCAP 1.2.3 and later. It allows scanning\na remote machine via SSH with an interface resembling the `oscap` tool.\n\nThe following command evaluates machine with IP `192.168.1.123` with content\nstored on local machine. Keep in mind that `oscap` has to be installed on the\nremote machine but the SSG content doesn\'t need to be.\n\n```bash\noscap-ssh root@192.168.1.123 22 xccdf eval --profile xccdf_org.ssgproject.content_profile_usgcb-rhel6-server --results-arf arf.xml --report report.html /usr/share/xml/scap/ssg/content/ssg-rhel6-ds.xml\n```\n\n### Ansible\n\nTo see a list of available Ansible Playbooks, run:\n\n```bash\n# ls /usr/share/scap-security-guide/ansible/\n...\nrhel6-playbook-standard.yml\nrhel6-playbook-stig-rhel6-server-upstream.yml\nrhel6-playbook-usgcb-rhel6-server.yml\nrhel7-playbook-C2S.yml\nrhel7-playbook-cjis-rhel7-server.yml\nrhel7-playbook-common.yml\nrhel7-playbook-docker-host.yml\nrhel7-playbook-cui.yml\n...\n```\n\nThese Ansible Playbooks are generated from *SCAP* profiles available for the products.\n\nTo apply the playbook on your local machine run:\n(*THIS WILL CHANGE CONFIGURATION OF THE MACHINE!*)\n\n```bash\nansible-playbook -i "localhost," -c local /usr/share/scap-security-guide/ansible/rhel7-playbook-rht-ccp.yml\n```\n\nEach of the Ansible Playbooks contain instructions on how to deploy them. Here\nis a snippet of the instructions:\n\n```YAML\n...\n# This file was generated by OpenSCAP 1.2.16 using:\n#   $ oscap xccdf generate fix --profile rht-ccp --template urn:xccdf:fix:script:ansible sds.xml\n#\n# This script is generated from an OpenSCAP profile without preliminary evaluation.\n# It attempts to fix every selected rule, even if the system is already compliant.\n#\n# How to apply this remediation role:\n# $ ansible-playbook -i "192.168.1.155," playbook.yml\n# $ ansible-playbook -i inventory.ini playbook.yml\n...\n```\n\n### Bash\nTo see a list of available Bash scripts, run:\n\n```bash\n# ls /usr/share/scap-security-guide/bash/\n...\nrhel7-script-hipaa.sh\nrhel7-script-ospp.sh\nrhel7-script-pci-dss.sh\n...\n```\n\nThese Bash scripts are generated from *SCAP* profiles available for the products.\nSimilar to Ansible Playbooks, each of the Bash scripts contain instructions on how to deploy them.\n\n## Support\n\nThe SSG mailing list can be found at [https://lists.fedorahosted.org/mailman/listinfo/scap-security-guide](https://lists.fedorahosted.org/mailman/listinfo/scap-security-guide).\n\nIf you encounter issues with OpenSCAP or SCAP Workbench, use [https://www.redhat.com/mailman/listinfo/open-scap-list](https://www.redhat.com/mailman/listinfo/open-scap-list)\n\nYou can also join the `#openscap` IRC channel on `chat.freenode.net`.\n\n## A little bit of history\n\nThis project started in 2011 as a collaboration between government agencies and\ncommercial operating system vendors. The original name was SCAP Security Guide.\nThe original scope was to create SCAP datastreams. Over time, it grew into the\nbiggest open-source beyond-SCAP content project.\n\nThe next few years saw the introduction of not just government-specific security\nprofiles but also commercial, such as PCI-DSS.\n\nLater, the industry starting moving towards different security content formats,\nsuch as Ansible, Puppet and Chef InSpec. The community reacted by evolving the\ntooling and helped transform SSG into a more general-purpose security content\nproject. This change happened over time in 2017 and 2018. In September 2018, we\ndecided to change the name of the project to avoid confusion.\n\nWe envision that the future will be format-agnostic. That\'s why opted for an\nabstraction instead of using XCCDF for the input format.\n\n## Further reading\n\nThe SSG homepage is [https://www.open-scap.org/security-policies/scap-security-guide/](https://www.open-scap.org/security-policies/scap-security-guide/).\n\n* [SSG User Manual](docs/manual/user_guide.adoc)\n* [SSG Developer Guide](docs/manual/developer_guide.adoc)\n'