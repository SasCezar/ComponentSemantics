b'## ANXS - PostgreSQL [![Build Status](https://travis-ci.org/ANXS/postgresql.svg?branch=master)](https://travis-ci.org/ANXS/postgresql)\n\n---\nHelp Wanted! If you are able and willing to help maintain this Ansible role then please open a GitHub issue. A lot of people seem to use this role and we (quite obviously) need assistance!\n\xf0\x9f\x92\x96\n---\n\nAnsible role which installs and configures PostgreSQL, extensions, databases and users.\n\n\n#### Installation\n\nThis has been tested on Ansible 2.4.0 and higher.\n\nTo install:\n\n```\nansible-galaxy install ANXS.postgresql\n```\n\n#### Example Playbook\n\nIncluding an example of how to use your role:\n\n    - hosts: postgresql-server\n      become: yes\n      roles:\n         - { role: anxs.postgresql }\n\n#### Dependencies\n\n- ANXS.monit ([Galaxy](https://galaxy.ansible.com/list#/roles/502)/[GH](https://github.com/ANXS/monit)) if you want monit protection (in that case, you should set `monit_protection: true`)\n\n\n#### Compatibility matrix\n\n| Distribution / PostgreSQL | <= 9.3 | 9.4 | 9.5 | 9.6 | 10 | 11 | 12 |\n| ------------------------- |:---:|:---:|:---:|:---:|:--:|:--:|:--:|\n| Ubuntu 14.04 | :no_entry: | :no_entry:| :no_entry:| :no_entry:| :no_entry:| :no_entry:| :no_entry:|\n| Ubuntu 16.04 | :no_entry: | :white_check_mark:| :white_check_mark:| :white_check_mark:| :white_check_mark:| :white_check_mark:| :white_check_mark:|\n| Debian 8.x | :no_entry: | :white_check_mark:| :white_check_mark:| :white_check_mark:| :white_check_mark:| :white_check_mark:| :white_check_mark:|\n| Debian 9.x | :no_entry: | :white_check_mark:| :white_check_mark:| :white_check_mark:| :white_check_mark:| :white_check_mark:| :white_check_mark:|\n| CentOS 6.x | :no_entry: | :white_check_mark:| :white_check_mark:| :white_check_mark:| :white_check_mark:| :white_check_mark:| :white_check_mark:|\n| CentOS 7.x | :no_entry: | :white_check_mark:| :white_check_mark:| :white_check_mark:| :white_check_mark:| :white_check_mark:| :white_check_mark:|\n| CentOS 8.x | :no_entry: | :grey_question:| :grey_question:| :grey_question:| :grey_question:| :grey_question:| :grey_question:|\n| Fedora latest | :no_entry: | :x:| :x:| :x:| :x:| :x:| :x:|\n\n- :white_check_mark: - tested, works fine\n- :warning: - Not for production use\n- :grey_question: - will work in the future (help out if you can)\n- :interrobang: - maybe works, not tested\n- :no_entry: - Has reached End of Life (EOL)\n\n\n\n#### Variables\n\n```yaml\n# Basic settings\npostgresql_version: 12\npostgresql_encoding: "UTF-8"\npostgresql_locale: "en_US.UTF-8"\npostgresql_ctype: "en_US.UTF-8"\n\npostgresql_admin_user: "postgres"\npostgresql_default_auth_method: "peer"\n\npostgresql_service_enabled: false # should the service be enabled, default is true\n\npostgresql_cluster_name: "main"\npostgresql_cluster_reset: false\n\n# List of databases to be created (optional)\n# Note: for more flexibility with extensions use the postgresql_database_extensions setting.\npostgresql_databases:\n  - name: foobar\n    owner: baz          # optional; specify the owner of the database\n    hstore: yes         # flag to install the hstore extension on this database (yes/no)\n    uuid_ossp: yes      # flag to install the uuid-ossp extension on this database (yes/no)\n    citext: yes         # flag to install the citext extension on this database (yes/no)\n    encoding: "UTF-8"   # override global {{ postgresql_encoding }} variable per database\n    lc_collate: "en_GB.UTF-8"   # override global {{ postgresql_locale }} variable per database\n    lc_ctype: "en_GB.UTF-8"     # override global {{ postgresql_ctype }} variable per database\n\n# List of database extensions to be created (optional)\npostgresql_database_extensions:\n  - db: foobar\n    extensions:\n      - hstore\n      - citext\n\n# List of users to be created (optional)\npostgresql_users:\n  - name: baz\n    pass: pass\n    encrypted: yes  # if password should be encrypted, postgresql >= 10 does only accepts encrypted passwords\n\n# List of schemas to be created (optional)\npostgresql_database_schemas:\n  - database: foobar           # database name\n    schema: acme               # schema name\n    state: present\n\n  - database: foobar           # database name\n    schema: acme_baz           # schema name\n    owner: baz                 # owner name\n    state: present\n\n# List of user privileges to be applied (optional)\npostgresql_user_privileges:\n  - name: baz                   # user name\n    db: foobar                  # database\n    priv: "ALL"                 # privilege string format: example: INSERT,UPDATE/table:SELECT/anothertable:ALL\n    role_attr_flags: "CREATEDB" # role attribute flags\n```\n\nThere\'s a lot more knobs and bolts to set, which you can find in the [defaults/main.yml](./defaults/main.yml)\n\n\n#### Testing\n\nThis project comes with a Vagrantfile, this is a fast and easy way to test changes to the role, fire it up with `vagrant up`\n\nSee [vagrant docs](https://docs.vagrantup.com/v2/) for getting setup with vagrant\n\nOnce your VM is up, you can reprovision it using either `vagrant provision`, or `ansible-playbook tests/playbook.yml -i vagrant-inventory`\n\nIf you want to toy with the test play, see [tests/playbook.yml](./tests/playbook.yml), and change the variables in [tests/vars.yml](./tests/vars.yml)\n\nIf you are contributing, please first test your changes within the vagrant environment, (using the targeted distribution), and if possible, ensure your change is covered in the tests found in [.travis.yml](./.travis.yml)\n\n\n#### License\n\nLicensed under the MIT License. See the [LICENSE](./LICENSE) file for details.\n\n\n#### Thanks\n\nCreator:\n- [Pjan Vandaele](https://github.com/pjan)\n\nMaintainers:\n- [Jonathan Lozada D.](https://github.com/jlozadad)\n- [Jonathan Freedman](https://github.com/otakup0pe)\n- [Sergei Antipov](https://github.com/UnderGreen)\n- [Greg Clough](https://github.com/gclough)\n\nTop Contributors:\n- [David Farrington](https://github.com/farridav)\n- [Jesse Lang](https://github.com/jesselang)\n- [Michael Conrad](https://github.com/MichaelConrad)\n- [S\xc3\xa9bastien Alix](https://github.com/sebalix)\n- [Copperfield](https://github.com/Copperfield)\n\n- [Ralph von der Heyden](https://github.com/ralph)\n\n\n#### Feedback, bug-reports, requests, ...\n\nAre [welcome](https://github.com/ANXS/postgresql/issues)!\n'