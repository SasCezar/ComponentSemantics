b'# ansible-letsencrypt\nAn ansible role to generate TLS certificates and get them signed by Let\'s Encrypt.\n\nCurrently attempts first to use the `webroot` authenticator, then if that fails to create certificates,\nit will use the standalone authenticator. This is handy for generating certs on a fresh machine before\nthe web server has been configured or even installed.\n\n# Supported platforms\n- Debian Jessie\n- Debian Stretch\n- Debian Buster\n- Ubuntu Xenial\n\nOn other platforms this role will try to install letsencrypt using pip, which is not officially supported and may break over upgrades at least.\n\nIf you test it on other platforms please let me know the results (positive or\notherwise) so I can document them here and/or fix the issue.\n\nRequires Ansible >= 2.0\n\n# Usage\nFirst, read Let\'s Encrypt\'s TOS and EULA. Only proceed if you agree to them.\n\nThe following variables are available:\n\n`letsencrypt_webroot_path` is the root path that gets served by your web server. Defaults to `/var/www`.\n\n`letsencrypt_email` needs to be set to your email address. Let\'s Encrypt wants it. Defaults to `webmaster@{{ ansible_fqdn }}`. If you _really_ want to register without providing an email address, define the variabe `letsencrypt_no_email`.\n\n`letsencrypt_rsa_key_size` allows to specify a size for the generated key.\n\n`letsencrypt_cert_domains` is a list of domains you wish to get a certificate for. It defaults to a single item with the value of `{{ ansible_fqdn }}`.\n\n`letsencrypt_install_directory` should probably be left alone, but if you set it, it will change where the letsencrypt program is installed.\n\n`letsencrypt_renewal_command_args` add arguments to the `letsencrypt renewal` command that gets run using cron.  For example, use the renewal hooks to restart a web server.\n\n`letsencrypt_standalone_command_args` adds arguments to the standalone authentication method. This is mostly useful for specifying supported challenges, such as `--standalone-supported-challenges tls-sni-01` to limit the authentication to port 443 if something is already running on 80 or vice versa.\n\n`letsencrypt_server` sets the alternative auth server if needed. For example, during tests it\'s set to `https://acme-staging.api.letsencrypt.org/directory` to use the staging server (far higher rate limits, but certs are not trusted). It is not set by default.\n\n`ssl_certificate` and `ssl_certificate_key` symlinks the certificates to provided path if both are set.\n\nThe [Let\'s Encrypt client](https://github.com/letsencrypt/letsencrypt) will put the certificate and accessories in `/etc/letsencrypt/live/<first listed domain>/`. For more info, see the [Let\'s Encrypt documentation](https://letsencrypt.readthedocs.org/en/latest/using.html#where-are-my-certificates).\n\n# Example Playbook\n```\n---\n - hosts: tls_servers\n   user: root\n   roles:\n     - role: letsencrypt\n       letsencrypt_webroot_path: /var/www/html\n       letsencrypt_email: user@example.net\n       letsencrypt_cert_domains:\n        - www.example.net\n        - example.net\n       letsencrypt_renewal_command_args: \'--renew-hook "systemctl restart nginx"\'\n```\n'