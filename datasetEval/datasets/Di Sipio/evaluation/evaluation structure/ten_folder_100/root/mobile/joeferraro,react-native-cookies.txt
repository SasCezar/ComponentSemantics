b'## react-native-cookies\n\nCookie manager for react native.\n\n[![npm version](https://badge.fury.io/js/react-native-cookies.svg)](https://badge.fury.io/js/react-native-cookies)\n[![npm downloads](https://img.shields.io/npm/dm/react-native-cookies.svg)](https://www.npmjs.com/package/react-native-cookies)\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/joeferraro/react-native-cookies/master/LICENSE.md)\n\n### Looking for Maintainers\n\nI no longer use this library and I\'m looking for maintainer(s) to take full control over the development and release cycle.\n\n### Installation\n\n```\nyarn add react-native-cookies\n```\n\n### Linking\n\n#### Automatic (recommended)\n\n```\nreact-native link react-native-cookies\n```\n\n#### Manual\n\nIf automatic linking does not work, you can manually link this library by following the instructions below:\n\n##### iOS\n\n1. Open your project in Xcode, right click on `Libraries` and click `Add\n   Files to "Your Project Name"` Look under `node_modules/react-native-cookies/ios` and add `RNCookieManagerIOS.xcodeproj`.\n2. Add `libRNCookieManagerIOS.a` to `Build Phases -> Link Binary With Libraries.\n3. Clean and rebuild your project\n\n##### Android\n\nRun `react-native link` to link the react-native-cookies library.\n\nOr if you have trouble, make the following additions to the given files manually:\n\n**android/settings.gradle**\n\n```gradle\ninclude \':react-native-cookies\'\nproject(\':react-native-cookies\').projectDir = new File(rootProject.projectDir, \'../node_modules/react-native-cookies/android\')\n```\n\n**android/app/build.gradle**\n\n```gradle\ndependencies {\n   ...\n   compile project(\':react-native-cookies\')\n}\n```\n\n**MainApplication.java**\n\nOn top, where imports are:\n\n```java\nimport com.psykar.cookiemanager.CookieManagerPackage;\n```\n\nAdd the `CookieManagerPackage` class to your list of exported packages.\n\n```java\n@Override\nprotected List<ReactPackage> getPackages() {\n    return Arrays.asList(\n            new MainReactPackage(),\n            new CookieManagerPackage()\n    );\n}\n```\n\n\n\n### Usage\n\n```javascript\nimport CookieManager from \'react-native-cookies\';\n\n// set a cookie (IOS ONLY)\nCookieManager.set({\n  name: \'myCookie\',\n  value: \'myValue\',\n  domain: \'some domain\',\n  origin: \'some origin\',\n  path: \'/\',\n  version: \'1\',\n  expiration: \'2015-05-30T12:30:00.00-05:00\'\n}).then((res) => {\n  console.log(\'CookieManager.set =>\', res);\n});\n\n// Set cookies from a response header\n// This allows you to put the full string provided by a server\'s Set-Cookie \n// response header directly into the cookie store.\nCookieManager.setFromResponse(\n  \'http://example.com\', \n  \'user_session=abcdefg; path=/; expires=Thu, 1 Jan 2030 00:00:00 -0000; secure; HttpOnly\')\n    .then((res) => {\n      // `res` will be true or false depending on success.\n      console.log(\'CookieManager.setFromResponse =>\', res);\n    });\n\n// Get cookies as a request header string\nCookieManager.get(\'http://example.com\')\n  .then((res) => {\n    console.log(\'CookieManager.get =>\', res); // => \'user_session=abcdefg; path=/;\'\n  });\n\n// list cookies (IOS ONLY)\nCookieManager.getAll()\n  .then((res) => {\n    console.log(\'CookieManager.getAll =>\', res);\n  });\n\n// clear cookies\nCookieManager.clearAll()\n  .then((res) => {\n    console.log(\'CookieManager.clearAll =>\', res);\n  });\n\n// clear a specific cookie by its name (IOS ONLY)\nCookieManager.clearByName(\'cookie_name\')\n  .then((res) => {\n    console.log(\'CookieManager.clearByName =>\', res);\n  });\n\n```\n\n#### WebKit-Support (iOS only)\nReact Native comes with a WebView component, which uses UIWebView on iOS. Introduced in iOS 8 Apple implemented the WebKit-Support with all the performance boost. \n\nTo use this it\'s required to use a special implementation of the WebView component (e.g. [react-native-wkwebview](https://github.com/CRAlpha/react-native-wkwebview)).\n\nThis special implementation of the WebView component stores the cookies __not__ in `NSHTTPCookieStorage` anymore. The new cookie-storage is `WKHTTPCookieStore` and implementes a differnt interface.\n\nTo use this _CookieManager_ with WebKit-Support we extended the interface with the attribute `useWebKit` (a boolean value, default: `FASLE`) for the following methods:\n\n|Method|WebKit-Support|Method-Signature|\n|---|---|---|\n|getAll| Yes | `CookieManager.getAll(useWebKit:boolean)` |\n|clearAll| Yes | `CookieManager.clearAll(useWebKit:boolean)` |\n|get| Yes | `CookieManager.get(url:string, useWebKit:boolean)` |\n|set| Yes | `CookieManager.set(cookie:object, useWebKit:boolean)` |\n\n##### Usage\n```javascript\nimport CookieManager from \'react-native-cookies\';\n\nconst useWebKit = true;\n\n// list cookies (IOS ONLY)\nCookieManager.getAll(useWebKit)\n\t.then((res) => {\n\t\tconsole.log(\'CookieManager.getAll from webkit-view =>\', res);\n\t});\n\n// clear cookies\nCookieManager.clearAll(useWebKit)\n\t.then((res) => {\n\t\tconsole.log(\'CookieManager.clearAll from webkit-view =>\', res);\n\t});\n\n// Get cookies as a request header string\nCookieManager.get(\'http://example.com\', useWebKit)\n\t.then((res) => {\n\t\tconsole.log(\'CookieManager.get from webkit-view =>\', res);\n\t\t// => \'user_session=abcdefg; path=/;\'\n\t});\n\n// set a cookie (IOS ONLY)\nconst newCookie: = {\n\tname: \'myCookie\',\n\tvalue: \'myValue\',\n\tdomain: \'some domain\',\n\torigin: \'some origin\',\n\tpath: \'/\',\n\tversion: \'1\',\n\texpiration: \'2015-05-30T12:30:00.00-05:00\'\n};\n\nCookieManager.set(newCookie, useWebKit)\n\t.then((res) => {\n\t\tconsole.log(\'CookieManager.set from webkit-view =>\', res);\n\t});\n```\n\n### TODO\n\n- Proper `getAll` dictionary by domain\n- Proper error handling\n- Anything else?\n\nPR\'s welcome!\n'