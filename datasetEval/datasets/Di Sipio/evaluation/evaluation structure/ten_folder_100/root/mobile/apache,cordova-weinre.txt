b'<!--\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * "License"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n-->\n# cordova-weinre\n\n## Deprecation Notice\n\nThis project is being deprecated. No more work will be done on this project by the Cordova development community. You can continue to use this project and it should work as-is, but issues will not be fixed by the Cordova community.\n\nweinre was built in an age when there were no remote debuggers available for mobile devices. Since then, some platforms are starting to provide remote debugger capabilities, as part of their platform tool set.\n\n1. Android:\t[Get Started with Remote Debugging Android Devices](https://developers.google.com/web/tools/chrome-devtools/remote-debugging/)\n1. iOS:\t[Safari Developer Tools overview](https://support.apple.com/guide/safari-developer/safari-developer-tools-overview-dev073038698/mac)\n1. Windows:\t[Debug Store apps in Visual Studio](https://msdn.microsoft.com/library/hh441472.aspx)\n\n\xe2\x9a\xa0 **IMPORTANT NOTE**, some of weinre dependencies have security issues. Use on your own risk.\n\n## Introduction\n\nweinre is WEb INspector REmote.\n\nPronounced like the word "winery". Or maybe like the word "weiner".\nWho knows, really.\n\nweinre is a debugger for web pages,\nlike FireBug (for FireFox) and Web Inspector (for WebKit-based browsers),\nexcept it\'s designed to work remotely, and in particular,\nto allow you debug web pages on a mobile device such as a phone.\n\nweinre is part of the\n[Apache Cordova project](http://cordova.io/).\n\nFor descriptive information, and links to downloads, installable things, etc\nsee: [http://people.apache.org/~pmuellr/weinre/](http://people.apache.org/~pmuellr/weinre/)\n\nweinre source\n-------------\n\nThe weinre source is contained in 4 subdirectories:\n\n* `weinre.build` - contains the tools to build weinre, the 3rd party libraries\nthat weinre uses, and holds the output of the build\n\n* `weinre.doc` - source for the HTML manual for weinre\n\n* `weinre.server` - code for the node.js-based weinre server\n\n* `weinre.web` - code for the client and target pieces of weinre\n\n\nbuilding weinre\n---------------\n\nThe weinre build is currently run on a Mac OS X 10.7 laptop.  It also runs on\nApache continuous integration servers running Linux.  The build is not\ntypically run on Windows, so if you have problems with that, please log an\nissue.\n\nThe weinre build pre-req\'s the following tools:\n\n* node.js - [http://nodejs.org/](http://nodejs.org/)\n* ant - [http://ant.apache.org/](http://ant.apache.org/)\n\nTo update the npm-based pre-reqs, you will also need:\n\n* npm - should be shipped with node.js, on Linux may need to be installed as a\nseparate package\n\nBefore doing a weinre build, you will need to create the file\n`weinre.build/personal.properties`.  Use the `sample.personal.properties` as a\ntemplate. The build should fail if this file is not available.\n\nTo update the version label of weinre, edit the file\n`weinre.build/build.properties`.  If the version has a `-pre` suffix, this\ntriggers the build to artifacts with timestamped names.  For an \'official\'\nbuild, do not use the `-pre` suffix.\n\nThere are two ways to build weinre:\n\n* full build\n* development build\n\nThe full build creates all the artifacts needed for an \'official\' build.\n\nThe development build just creates enough artifacts to test the code.\n\n### the first time you run any build: ###\n\nSome semi-transient artifacts are created the first time you run a build.\nThese will be stored in the `weinre.build/cached` directory.\n\n### to perform the full build: ###\n\n* run: `cd weinre.build`\n* run: `ant build-archives`\n\nThis will run the development build (see below), and then create zip archives\nof the build in the `weinre.build/out/archives` directory.\n\n### to perform the development build: ###\n\n* run: `cd weinre.build`\n* run: `ant`\n\nThis will populate a number of resources in the `weinre.server` directory, so\nthat you can run weinre directly from that directory for testing.  It does not\nbuild the archives.\n\n### performing a clean build: ###\n\n* run: `cd weinre.build`\n* run: `ant clean`\n* perform the build as usual\n\n### other ant goodies: ###\n\n* run: `cd weinre.build`\n* run: `ant help`\n\n### to run the output of the development build: ###\n\n* run: `cd weinre.server`\n* run: `./weinre [your flavorite options]`\n\n### other fun development-time hacks ###\n\nIf you have the [wr tool](https://npmjs.org/package/wr) installed, there is\na `.wr` file available to run the development builds when a source file\nchanges.\n\nThe build is growl-enabled, so you can see a quick message when the build\ncompletes, as long as the `USE_GROWL` property is set in the\n`weinre.build/personal.properties` file.\n\nThe command `weinre.server/weinre-hot` makes use of\n[node-supervisor](https://github.com/isaacs/node-supervisor) to re-launch the\nweinre server generated by the development build, whenever a weinre build\ncompletes.\n\nPutting this altogether, you can open two terminal windows, run `wr` in the\nmain directory to have a development build run whenever you change\nthe source, and then run `weinre-hot` in the `weinre.server` directory to have\nthe weinre server restart whenever a build completes, getting a growl\nnotification at that time.\n\nupdating 3rd party libraries\n-----------------------------\n\n> **IMPORTANT** - All 3rd party libraries are stored in the SCM, so that the\nbuild does not require 3rd party packages to be downloaded.  As such, these\nfiles need to be ok to use and store in the SCM, given their licenses.  If\nyou\'re adding or updating a 3rd party library, make sure the license is\nacceptable, and add/update the license in the top-level `LICENSE` file.\n\nAll of the 3rd party dependencies used with weinre are stored in one of two\ndirectories:\n\n* `weinre.build/vendor` - contains libraries used in the client and/or target,\nas well as libraries used by the build itself\n\n* `weinre.server/node_modules` - contains npm packages used by the weinre server\n\nTo update the files in `weinre.build/vendor`:\n\n* edit the file `weinre.build/vendor.properties` as appropriate\n* run: `cd weinre.build`\n* run: `rm -rf vendor`\n* run: `ant -f update.vendor.xml`\n\nTo update the files in `weinre.server/node_modules`:\n\n* edit the file `weinre.build/package.json.template` as appropriate\n* run a build (see above), so that the file `weinre.server/package.json` file is created\nfrom the template you edited above\n* run: `cd weinre.server`\n* run: `rm -rf node_modules`\n* run: `npm install`'