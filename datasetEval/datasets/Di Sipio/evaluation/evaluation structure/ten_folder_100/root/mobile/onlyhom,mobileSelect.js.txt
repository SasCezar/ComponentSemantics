b'<p align="center"><img width="130" src="https://github.com/onlyhom/img-folder/blob/master/png/m_logo_orange.png?raw=true"></p>\n<h1 align="center" >mobileSelect.js</h1>\n<p align="center">\n  <a href="https://github.com/onlyhom/mobileSelect.js/blob/master/LICENSE" title="LICENSE">\n    <img src="https://img.shields.io/npm/l/express.svg" alt="MIT License">\n  </a>\n  <a href="" title="downloads">\n    <img src="https://img.shields.io/badge/downloads-1083-green.svg" alt="downloads">\n  </a>\n  <a href="" title="dependencies">\n    <img src="https://img.shields.io/badge/dependencies-none-orange.svg" alt="dependencies">\n  </a>\n</p>\n\nA multi-function mobile phone scrolling selector, support single to multi-select, support multi-level cascade, provide custom callback function, provide update function redraw, relocation function, compatible pc drag and so on.\n\n[\xe3\x80\x90\xe6\x9f\xa5\xe7\x9c\x8b\xe4\xb8\xad\xe6\x96\x87\xe6\x96\x87\xe6\xa1\xa3\xe3\x80\x91](https://github.com/onlyhom/mobileSelect.js/blob/master/docs/README-CN.md)\n\n## Features\n\n\n- A mobile phone select component with native js, do not rely on any library\n- Can be passed to an ordinary array or json array\n- According to the length of the parameters passed, automatically render the corresponding number of columns, support for individual to multiple options\n- Automatic identification is cascading\n- After successful selection, provide a custom callback function callback ()\n- After each gesture sliding, it also provides a callback function transitionEnd ()\n- Provide update () function, pass the other parameters to render again\n- Provide relocation function\n\n\n\n## Preview\n\n#### Use mobile phone scan code to preview:\n<img src="https://github.com/onlyhom/img-folder/blob/master/png/ms_code_url_480.png_io.png?raw=true" width="230">\n\n#### Gif preview:\n![Image text](https://github.com/onlyhom/img-folder/blob/master/gif/ms_preview_all.gif?raw=true)\n\n\n## Installation\n\n#### Method1 tag import\xef\xbc\x9a\n```html\n<link rel="stylesheet" type="text/css" href="css/mobileSelect.css">\n<script src="js/mobileSelect.js" type="text/javascript"></script>\n```\n\n#### Method2 npm install\xef\xbc\x9a\n\n```\nnpm install mobile-select -D\n```\n\nImport in your js file\xef\xbc\x9a\n```javascript\nimport MobileSelect from \'mobile-select\'\n```\n\n\n## Getting Started\n\n\n\n#### \xe2\x91\xa0Ordinary array format - Non-cascade\n```html\n<div id="day"></div><!--Don\'t forget this trigger in your page-->\n\n<script type="text/javascript">\nvar mobileSelect1 = new MobileSelect({\n    trigger: \'#day\',\n    title: \'\xe5\x8d\x95\xe9\xa1\xb9\xe9\x80\x89\xe6\x8b\xa9\',\n    wheels: [\n                {data:[\'\xe5\x91\xa8\xe6\x97\xa5\',\'\xe5\x91\xa8\xe4\xb8\x80\',\'\xe5\x91\xa8\xe4\xba\x8c\',\'\xe5\x91\xa8\xe4\xb8\x89\',\'\xe5\x91\xa8\xe5\x9b\x9b\',\'\xe5\x91\xa8\xe4\xba\x94\',\'\xe5\x91\xa8\xe5\x85\xad\']}\n            ],\n    position:[2] //Initialize positioning\n});\n</script>\n```\n\n\n\n#### \xe2\x91\xa1Json format - Non-cascade\n```html\n<div id="area"></div>\n\n<script type="text/javascript">\nvar mobileSelect2 = new MobileSelect({\n    trigger: \'#area\',\n    title: \'\xe5\x9c\xb0\xe5\x8c\xba\xe9\x80\x89\xe6\x8b\xa9\',\n    wheels: [\n                {data:[\n                    {id:\'1\',value:\'\xe9\x99\x84\xe8\xbf\x91\'},\n                    {id:\'2\',value:\'\xe4\xb8\x8a\xe5\x9f\x8e\xe5\x8c\xba\'},\n                    {id:\'3\',value:\'\xe4\xb8\x8b\xe5\x9f\x8e\xe5\x8c\xba\'},\n                    {id:\'4\',value:\'\xe6\xb1\x9f\xe5\xb9\xb2\xe5\x8c\xba\'},\n                    {id:\'5\',value:\'\xe6\x8b\xb1\xe5\xa2\x85\xe5\x8c\xba\'},\n                    {id:\'6\',value:\'\xe8\xa5\xbf\xe6\xb9\x96\xe5\x8c\xba\'}\n                ]},\n                {data:[\n                    {id:\'1\',value:\'1000\xe7\xb1\xb3\'},\n                    {id:\'2\',value:\'2000\xe7\xb1\xb3\'},\n                    {id:\'3\',value:\'3000\xe7\xb1\xb3\'},\n                    {id:\'4\',value:\'5000\xe7\xb1\xb3\'},\n                    {id:\'5\',value:\'10000\xe7\xb1\xb3\'}\n                ]}\n            ],\n    callback:function(indexArr, data){\n        console.log(data); //Returns the selected json data\n    }\n});\n</script>\n```\n##### Example\xef\xbc\x9a\n![Image text](https://github.com/onlyhom/img-folder/blob/master/gif/ms_no_cascade.gif?raw=true)\n\n\n#### \xe2\x91\xa2Json format - Cascade\n```html\n<div id="area2"></div>\n\n<script type="text/javascript">\n  var mobileSelect3 = new MobileSelect({\n      trigger: \'#area2\',\n      title: \'\xe5\x9c\xb0\xe5\x8c\xba\xe9\x80\x89\xe6\x8b\xa9-\xe8\x81\x94\xe5\x8a\xa8\',\n      wheels: [\n                  {data:[\n                      {\n                          id:\'1\',\n                          value:\'\xe9\x99\x84\xe8\xbf\x91\',\n                          childs:[\n                              {id:\'1\',value:\'1000\xe7\xb1\xb3\'},\n                              {id:\'2\',value:\'2000\xe7\xb1\xb3\'},\n                              {id:\'3\',value:\'3000\xe7\xb1\xb3\'},\n                              {id:\'4\',value:\'5000\xe7\xb1\xb3\'},\n                              {id:\'5\',value:\'10000\xe7\xb1\xb3\'}\n                          ]\n                      },\n                      {id:\'2\',value:\'\xe4\xb8\x8a\xe5\x9f\x8e\xe5\x8c\xba\'},\n                      {id:\'3\',value:\'\xe4\xb8\x8b\xe5\x9f\x8e\xe5\x8c\xba\'},\n                      {id:\'4\',value:\'\xe6\xb1\x9f\xe5\xb9\xb2\xe5\x8c\xba\'},\n                      {id:\'5\',value:\'\xe6\x8b\xb1\xe5\xa2\x85\xe5\x8c\xba\'},\n                      {id:\'6\',value:\'\xe8\xa5\xbf\xe6\xb9\x96\xe5\x8c\xba\'}\n                  ]}\n              ],\n      position:[0,1],\n      callback:function(indexArr, data){\n          console.log(data); //Returns the selected json data\n      }\n  });\n  </script>\n```\n##### Example\xef\xbc\x9a\n![Image text](https://raw.githubusercontent.com/onlyhom/img-folder/master/gif/%E7%BA%A7%E8%81%94.gif)\n\n\n#### \xe2\x91\xa3ajax asynchronous fill data\n\n```html\n\n<!-- ************ Non-cascade Format ************ -->\n\n<div id="trigger4"></div>\n\n<script type="text/javascript">\n    var mobileSelect4 = new MobileSelect({\n        trigger: \'#trigger4\',\n        title: \'ajax fill data - non-cascade\',\n        wheels: [\n                    {data:[\n                        {id:\'1\',value:\'choose area\'},\n                    ]},\n                    {data:[\n                        {id:\'1\',value:\'choose distance\'},\n                    ]}\n                ],\n        callback:function(indexArr, data){\n            console.log(data);\n        }\n    });\n\n    $.ajax({\n        type: "POST",\n        url: "xxxx",\n        data: {},\n        dataType: "json",\n        success: function(res){\n            //Assume that the obtained res.data.area is\xef\xbc\x9a\n            // [\n            //     {id:\'1\',value:\'area1\'},\n            //     {id:\'2\',value:\'area2\'},\n            //     {id:\'3\',value:\'area3\'},\n            //     {id:\'4\',value:\'area4\'}\n            // ]\n\n            //Assume that the obtained res.data.distance is\xef\xbc\x9a\n            // [\n            //     {id:\'1\',value:\'200 metres\'},\n            //     {id:\'2\',value:\'300 metres\'},\n            //     {id:\'3\',value:\'400 metres\'}\n            // ]\n\n            mobileSelect4.updateWheel(0, res.data.area); //Update the 0th wheel\n            mobileSelect4.updateWheel(1, res.data.distance); //Update the 1th wheel\n        }\n    });\n</script>\n</script>\n\n\n\n\n<!-- ************ Cascade Format ************ -->\n\n<div id="trigger4"></div>\n\n<script type="text/javascript">\n    var mobileSelect4 = new MobileSelect({\n        trigger: \'#trigger4\',\n        title: \'ajax fill data - cascade\',\n        wheels: [\n                    {data:[\n                        {\n                            id:\'1\',\n                            value:\'\',\n                            childs:[\n                                {id:\'A1\',value:\'\'},\n                            ]\n                        }\n                    ]}\n                ],\n        callback:function(indexArr, data){\n            console.log(data);\n        }\n    });\n\n    $.ajax({\n        type: "POST",\n        url: "xxxx",\n        data: {},\n        dataType: "json",\n        success: function(res){\n            //Assume that the obtained res.data is\xef\xbc\x9a\n            // [{\n            //     id:\'1\',\n            //     value:\'after update\',\n            //     childs:[\n            //         {id:\'A1\',value:\'apple\'},\n            //         {id:\'A2\',value:\'banana\'},\n            //         {id:\'A3\',value:\'orange\'}\n            //     ]\n            // }]\n            mobileSelect4.updateWheels(res.data);\n        }\n    });\n</script>\n```\n\n#### \xe2\x91\xa4How to use in vue-cli\n\n```\nnpm install mobile-select -D\n```\n\n```html\n<template>\n    <div>\n        <div id="trigger5">vue-cli-demo</div>\n    </div>\n</template>\n\n<script>\n    import MobileSelect from \'mobile-select\'\n\n    export default {\n        mounted() {\n            var mobileSelect5 = new MobileSelect({\n                trigger: "#trigger5",\n                title: "vue-cli-demo",\n                wheels: [\n                    {data: ["\xe5\x91\xa8\xe6\x97\xa5","\xe5\x91\xa8\xe4\xb8\x80","\xe5\x91\xa8\xe4\xba\x8c","\xe5\x91\xa8\xe4\xb8\x89","\xe5\x91\xa8\xe5\x9b\x9b","\xe5\x91\xa8\xe4\xba\x94","\xe5\x91\xa8\xe5\x85\xad"]}\n                ],\n                callback:function(indexArr, data){\n                    console.log(data);\n                }\n            });\n        }\n    }\n</script>\n```\n\n\n#### \xe2\x91\xa5Json format - Data field mapping\n```html\n<div id="trigger6"></div>\n\n<script type="text/javascript">\n    // If your data field is named id, title, children\n    // does not match the id, value, childs field name of mobileSelect\n    // You can use the keyMap property for field name mapping\n    var mobileSelect6 = new MobileSelect({\n        trigger: \'#trigger6\',\n        title: \'keyMap\',\n        wheels: [\n                    {data:[\n                        {\n                            id:\'1\',\n                            title:\'A\',\n                            children:[\n                                {id:\'A1\',title:\'A-a\'},\n                                {id:\'A2\',title:\'A-b\'},\n                                {id:\'A3\',title:\'A-c\'}\n                            ]\n                        },\n                        {\n                            id:\'1\',\n                            title:\'B\',\n                            children:[\n                                {id:\'B1\',title:\'B-a\'},\n                                {id:\'B2\',title:\'B-b\'},\n                                {id:\'B3\',title:\'B-c\'}\n                            ]\n                        },\n                    ]}\n                ],\n        keyMap: {\n            id:\'id\',\n            value: \'title\',\n            childs :\'children\'\n        },\n        callback:function(indexArr, data){\n            console.log(data);\n        }\n    });\n</script>\n```\n\n\n\n\n\n## Options\n\n\n|Option|Default|Type|Description |\n| ------ |------|-----|-----|\n|trigger|Required parameter. No default value|String| The id/class/tag of the trigger object |\n|wheels|Required parameter. No default value|Array|The data displayed on the wheel|\n|callback|function(indexArr, data){}|function | A callback function after successful selected, return parameter (indexArr, data) |\n|transitionEnd|function(indexArr, data){}|function|A callback function that after each gesture sliding, return parameter (indexArr, data)|\n|cancel|function(indexArr, data){}|function|A callback function after cancel selected, return last successful selected parameter (indexArr, data)|\n|onShow|function(e){}|function | A callback when the window is show, return object itself as parameter |\n|onHide|function(e){}|function | A callback when the window is hidden, return object itself as parameter|\n|title|`\'\'`|String|Component title|\n|position|[0,0,0,\xe2\x80\xa6]|Array|Initialize positioning|\n|connector|`\' \'`|String| When there are multiple wheels, set the connection to connect multiple values, the default value is a space |\n|ensureBtnText|`\'\xe7\xa1\xae\xe8\xae\xa4\'`|String| The text content of comfirm button |\n|cancelBtnText|`\'\xe5\x8f\x96\xe6\xb6\x88\'`|String| The text content of cancel button |\n|ensureBtnColor|`\'#1e83d3\'`|String| The text color of the comfirm button|\n|cancelBtnColor|`\'#666666\'`|String| The text color of the cancel button|\n|titleColor|`\'#000000\'`|String| The text color of the component title |\n|titleBgColor|`\'#ffffff\'`|String| The background color of the component title |\n|textColor|`\'#000000\'`|String| The text color of the wheels |\n|bgColor|`\'#ffffff\'`|String| The Wheels background color |\n|maskOpacity|`0.7`| Number | Mask opacity |\n|keyMap|`{id:\'id\', value:\'value\', childs:\'childs\'`}|Object| Field name mapping, applies to field names that do not match id, value, childs |\n|triggerDisplayData|`true`|Boolean| When the click is confirmed, the trigger\'s innerHtml becomes the selected data.<br>( If there are other elements in the trigger, you can set it to false. If you need to display data elsewhere, you can use the data returned by callback to stitch yourself )|\n\n\n#### Tips: The meaning of the parameters returned in the callback function is as follows\n - **indexArr** is the currently selected index array, such as[0,0,1]\n - **data** is the currently selected json array, such as[{id:\'1\',value:\'hello\'},{id:\'2\',value:\'world\'}]\n\n## Functions\xef\xbc\x9a\n|Function|Arguments| Description|\n| ------ |------| -----|\n|show()| no-argument | show the compontent  |\n|hide()| no-argument | hide the compontent  |\n|setTitle()| string |Set the title of the component|\n|locatePosition()|sliderIndex, posIndex|Pass the position array parameter, relocate the position of the wheel|\n|updateWheel()| sliderIndex, data | Re-render the specified wheel |\n|updateWheels()| data | Re-render the all wheel(Only used in cascading data forma) |\n|getValue()| no-argument | Gets the value selected by the component |\n\n\n#### Tips: The function parameters need to be passed as follows\n - SliderIndex represents the index of the wheel to be modified\n - PosIndex represents the location index\n \n \n### The second time how to reshow the selected position?\nThere is an indexArr parameter in the callback callback function, which is an array that records the currently selected location:     \nAfter converting this array into a string, you can save it in a hidden field or otherwise, and pass it to the background.     \nNext time you open the page,     \nWhen the MobileSelect is instantiated, it reads the string, turns it into an array, passes it to position, and completes the initialization position.     \n\n\n#### Demo of use the function \xef\xbc\x9a\n```html\n<div id="day"></div>\n\nvar mySelect = new MobileSelect({\n    trigger: \'#day\',\n    wheels: [\n                {data:[\'\xe5\x91\xa8\xe6\x97\xa5\',\'\xe5\x91\xa8\xe4\xb8\x80\',\'\xe5\x91\xa8\xe4\xba\x8c\',\'\xe5\x91\xa8\xe4\xb8\x89\',\'\xe5\x91\xa8\xe5\x9b\x9b\',\'\xe5\x91\xa8\xe4\xba\x94\',\'\xe5\x91\xa8\xe5\x85\xad\']},\n                {data:[\'08:00\',\'09:00\',\'10:00\',\'11:00\',\'12:00\',\'13:00\',\'14:00\']}\n            ],\n    position:[1,1] //Initialize the positioning of both wheels are selected in the index 1 option\n});\n\n//----------------------------------------------\n//After the basic instantiated, use the functions\n\nmySelect.setTitle(\'\xe5\x95\xa6\xe5\x95\xa6\xe5\x95\xa6(\xe0\xb9\x91\xe2\x80\xa2\xcc\x80\xe3\x85\x81\xe2\x80\xa2\xcc\x81\xe0\xb8\x85)\');\n// Set the title of the component\n\nmySelect.updateWheel(0,[\'sunday\',\'Monday\',\'Tuesday\',\'Wednesday\',\'Thursday\',\'Friday\',\'Saturday\']);\n// Update the 0th wheel of the data,the data from the Chinese week to the English week\n\nmySelect.locatePosition(1,0);\n// Reposition the position of the first wheel and change the 0th data of the first wheel to the current selection.\n// (The first wheel is the right wheel, the left side of the wheel is the first 0)\n```\nBase example \xe2\x86\x92 Function after operation\n\n![\xe5\x9f\xba\xe7\xa1\x80\xe5\xae\x9e\xe4\xbe\x8b](https://github.com/onlyhom/img-folder/blob/master/QQscreenshot/before20170306234037.png?raw=true)\n![\xe5\x8a\x9f\xe8\x83\xbd\xe5\x87\xbd\xe6\x95\xb0\xe6\x93\x8d\xe4\xbd\x9c\xe5\x90\x8e](https://github.com/onlyhom/img-folder/blob/master/QQscreenshot/after-20170306233954.png?raw=true)\n\n##  Project demo\xef\xbc\x9a\nUse the transitionEnd (), callback (), updateWheel (), locatePosition () functions to do the following:\n\n- choose the date of the day, not more than today has been too.\n- Select the time to take the car, the car must not exceed the time to take the car (including the date and time).\n\n![Image text](https://github.com/onlyhom/img-folder/blob/master/gif/limit%E5%87%BD%E6%95%B0.gif?raw=true)\n\n\n## Logs\n### 2017-04-20[update]\nAs the input tag in the iphone, the cursor will flashing.\nAs well as the input tag open in the iphone6P / iphone7P chrome will appear offset phenomenon.\nSo do not use the input tag, instead by the ordinary div trigger.\nThe value selected will be written in the div trigger\xe2\x80\x98s innerHTML.\nIt is recommended to use the callback (indexArr, data) function to get the selected value.\n\n### 2017-07-27[bug fixed]\nRepair the issues raised by [li362692680]:\nCascade selection can not initially locate the secondary selection box.\nAt the same time repair the init function of the entry array parameter length is less than the number of wheels can not move the problem.\n\n\n### 2017-07-30[bug fixed + update]\nRepair the issues raised by [leohgbs]:\n1. The update does not take into account the problem that the data is json.\n2. After the update, the cached data is not updated, resulting in a callback data source error.\n\nChange the variable name: jsonData \xe2\x86\x92 cascadeJsonData\nChange method name: updateWheels() \xe2\x86\x92 reRenderWheels()\nThe updateWheel() method does not change.\nAdd new API: updateWheels(data) is used to update the entire data source in cascading data format.\n\n\n### 2017-08-15[update]\nRepair in cascade state, single click failed.\nDelete the comment after the brace in the js file(In the php environment there will be js code failure situation).\nFix ios potential bug.\nAdd API: show()\nAdd API: getValue()\nAdd option style options(Modify the connector / button text / button color / background color and so on)\xef\xbc\x9a\nconnector\nensureBtnText\nensureBtnColor\ncancelBtnText\ncancelBtnColor\ntitleColor\ntitleBgColor\nbgColor\ntextColor\nSupports color formats such as #ff0000 rgba(0,255,255,0.5) orange.\n\n\n### 2017-09-07[update]\nAdd keyMap function\nUpdate README\n\n### 2017-10-17[update]\nAdd cancel callback\n\n### 2017-12-12[update]\nRemove cancel callback\nThanks for [ngdly]:\nAdd onshow callback\nAdd onhide callback\nAdd show function\nAdd hide function\n\n### 2018-01-28[update]\nThanks for [aaalog]:\nModify the method for listening to click events.\nTo fix the click event which will triggered twice the transitionEnd funtion:\nRemove addListenerLi(), singleClick() internal methods,\nClick judgment directly in the touchend event.\n\n### 2018-01-29[update]    \nAdd maskOpacity option    \n\n## License\n\n\n[MIT LICENSE](https://github.com/onlyhom/mobileSelect.js/blob/master/LICENSE)\n\nCopyright (c) 2017-present, LIHONG OU(onlyhom)\n\n'