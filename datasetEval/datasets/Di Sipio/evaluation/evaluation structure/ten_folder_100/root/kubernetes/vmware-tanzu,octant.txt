b"![Logo][octant-logo]\n\n[![Build Status](https://cloud.drone.io/api/badges/vmware-tanzu/octant/status.svg)](https://cloud.drone.io/vmware-tanzu/octant)\n![GitHub release](https://img.shields.io/github/release/vmware-tanzu/octant.svg)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\n> A web-based, highly extensible platform for developers to better understand the complexity of Kubernetes clusters.\n\nOctant is a tool for developers to understand how applications run on a Kubernetes cluster. It aims to be part of the developer's toolkit for gaining insight and approaching complexity found in Kubernetes. Octant offers a combination of introspective tooling, cluster navigation, and object management along with a plugin system to further extend its capabilities.\n\n## Features\n\n* **Resource Viewer**\n\n    Graphically visualizate relationships between objects in a Kubernetes cluster. The status of individual objects are represented by color to show workload performance.\n\n* **Summary View**\n\n    Consolidated status and configuration information in a single page aggregated from output typically found using multiple kubectl commands.\n\n* **Port Forward**\n\n    Forward a local port to a running pod with a single button for debugging applications and even port forward multiple pods across namespaces.\n \n* **Log Stream**\n\n    View log streams of pod and container activity for troubleshooting or monitoring without holding multiple terminals open.\n\n* **Label Filter**\n\n    Organize workloads with label filtering for inspecting clusters with a high volume of objects in a namespace.\n\n* **Cluster Navigation**\n\n   Easily change between namespaces or contexts across different clusters. Multiple kubeconfig files are also supported.\n\n * **Plugin System**\n\n   Highly extensible plugin system for users to provide additional functionality through gRPC. Plugin authors can add components on top of existing views.\n\n## Usage\n\n![Octant demo](site/docs/master/octant-demo.gif)\n\n## Installation\n\n### Package (Linux only)\n\n1. Download the `.deb` or `.rpm` from the [releases page](https://github.com/vmware-tanzu/octant/releases).\n\n2. Install with either `dpkg -i` or `rpm -i` respectively.\n\n###  Windows\n\n#### Chocolatey\n\n1. Install using chocolatey with the following one-liner:\n\n   ```sh\n   choco install octant --confirm\n   ```\n\n#### Scoop\n\n1. Add the [extras](https://github.com/lukesampson/scoop-extras) bucket.\n\n   ```sh\n   scoop bucket add extras\n   ```\n\n 2. Install using scoop.\n\n   ```sh\n   scoop install octant\n   ```\n\n### macOS\n\n#### Homebrew\n\n1. Install using Homebrew with the following one-liner:\n\n   ```sh\n   brew install octant\n   ```\n\n### Download a Pre-built Binary (Linux, macOS, Windows)\n\n1. Open the [releases page](https://github.com/vmware-tanzu/octant/releases) from a browser and download the latest tarball or zip file.\n\n2. Extract the tarball or zip where `X.Y` is the release version:\n\n    ```sh\n    $ tar -xzvf ~/Downloads/octant_0.X.Y_Linux-64bit.tar.gz\n    octant_0.X.Y_Linux-64bit/README.md\n    octant_0.X.Y_Linux-64bit/octant\n    ```\n\n3. Verify it runs:\n\n    ```sh\n    $ ./octant_0.X.Y_Linux-64bit/octant version\n    ```\n\n## Nightly Builds\n\nNightly builds of Octant are available for download.\n\nPlease note that nightly builds maybe less stable than our tagged releases and are intended to allow early access to\npreview upcoming features and for plugin authors who want access to the latest plugin APIs.\n\n[Browse nightly builds](https://console.cloud.google.com/storage/browser/octant-nightlies)\n\n## Getting Started\n\nBefore starting Octant, make sure you have access to a healthy cluster. If kubectl is installed, test using `kubectl cluster-info`.\n\nStart running Octant:\n\n`$ octant`\n\nOctant should immediately launch your default web browser on `127.0.0.1:7777`.\n\nOr to run it on a specific host and fixed port:\n`$ OCTANT_LISTENER_ADDR=0.0.0.0:8900 octant`\n\nFor configuring Octant, setting up a development environment, or running tests, refer to the [documentation](https://octant.dev/docs/master).\n\n## Plugins\n\nPlugins are a core part of Octant in the Kubernetes ecosystem. A plugin can read objects and allows users to add components to Octant's views.\n\nAn example plugin can be found in [`cmd/octant-sample-plugin`](cmd/octant-sample-plugin) and installed to the default plugin path with `go run build.go install-test-plugin`.\n\nDocumentation for plugin components can be found in the [Plugins section](https://octant.dev/docs/master/plugins/) of the documentation.\n\n## Discussion\n\nFeature requests, bug reports, and enhancements are welcome. Contributors, maintainers, and users are encouraged to collaborate through these communication channels:\n\n - [Kubernetes Slack](http://slack.k8s.io/) in the [#octant](https://kubernetes.slack.com/app_redirect?channel=CM37M9FCG) channel\n - [Twitter](https://twitter.com/projectoctant)\n - [Google group](https://groups.google.com/forum/#!forum/project-octant/)\n - [GitHub issues](https://github.com/vmware-tanzu/octant/issues)\n\n## Contributing\n\nNew contributors will need to sign a CLA (contributor license agreement). We also ask that a changelog entry is included with your pull request. Details are described in our [contributing](CONTRIBUTING.md) documentation.\n\nSee our [hacking](HACKING.md) guide for getting your development environment setup.\n\nSee our [roadmap](ROADMAP.md) for tentative features in a 1.0 release.\n\n## License\n\nOctant is available under the [Apache License, Version 2.0](LICENSE)\n\n[octant-logo]: /site/docs/master/octant-logo.png\n"