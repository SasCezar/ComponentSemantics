b'# JX \n\nJX is a command line tool for installing and using [Jenkins X](https://jenkins-x.io/).\n\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/3237/badge)](https://bestpractices.coreinfrastructure.org/projects/3237)\n[![GoDoc](https://godoc.org/github.com/jenkins-x/jx?status.svg)](https://godoc.org/github.com/jenkins-x/jx)\n[![Docs](https://readthedocs.org/projects/docs/badge/?version=latest)](https://jenkins-x.io/documentation/)\n[![Docker Pulls](https://img.shields.io/docker/pulls/jenkinsxio/jx.svg)](https://hub.docker.com/r/jenkinsxio/jx/tags)\n[![Downloads](https://img.shields.io/github/downloads/jenkins-x/jx/total.svg)](https://github.com/jenkins-x/jx/releases)\n[![GoReport](https://goreportcard.com/badge/github.com/jenkins-x/jx)](https://goreportcard.com/report/github.com/jenkins-x/jx)\n[![Apache](https://img.shields.io/badge/license-Apache-blue.svg)](https://github.com/jenkins-x/jx/blob/master/LICENSE)\n[![Reviewed by Hound](https://img.shields.io/badge/reviewed_by-Hound-8E64B0.svg)](https://houndci.com)\n![Build Status](https://img.shields.io/endpoint?url=https%3A%2F%2Fstatusbadge-jx.jenkins-x.live%2Fjx)\n\n## Installing\n\nCheck out [how to install jx](https://jenkins-x.io/docs/getting-started/setup/install/).\n\n## Getting Help\n\nTo find out the available commands type:\n\n    jx\n\nOr to get help on a specific command, say, `create` then type:\n\n    jx help create\n\nYou can also browse the [jx command reference documentation](https://jenkins-x.io/commands/jx/).\n\n## Getting Started\n\nPlease check out the [Getting Started Guide](https://jenkins-x.io/docs/getting-started/) on how to:\n\n* [create new Kubernetes clusters with Jenkins X](https://jenkins-x.io/docs/getting-started/setup/create-cluster/)\n* [install Jenkins X on existing Kubernetes clusters](https://jenkins-x.io/docs/managing-jx/old/install-on-cluster/)\n\nThen [what to do next when you have Jenkins X installed](https://jenkins-x.io/getting-started/next/).\n    \n## Reference\n\n* [Command Line Reference](https://jenkins-x.io/commands/jx/#jx)\n  \n  \n## Opening Consoles\n\nTo open the Jenkins console try:\n\n    jx console\n    \nOr to open other consoles:\n\n    jx open foo\n    \nIf you do not know the name:\n\n    jx open\n    \n\n## Tail logs\n\nTo tail the logs of anything running on Kubernetes (jenkins or your own applications) type.\n\n    jx logs\n    \nWhich prompts you for the deployment to log then tails the logs of the newest pod for an app.\n\nYou can filter the list of deployments via:\n\n    jx logs -f cheese\n\nThen if there\'s only one deployment with a name that contains `cheese` then it\'ll tail the logs of the latest pod or will prompt you to choose the exact deployment to use.\n\n## Remote shells\n\nYou can open a remote shell inside any pods container via the `rsh` command:\n\n    jx rsh\n    \nOr to open a shell inside a pod named foo:\n\n    jx rsh foo\n\nPass `-c` to specify the container name. e.g. to open a shell in a maven build pod:\n\n    jx rsh -c maven maven\n\n## Importing or Creating apps\n\nTo import an application from the current directory:\n\n    jx import\n    \nOr to create a new Spring Boot application from scratch:\n\n    jx create spring\n    \ne.g. to create a new WebMVC and Spring Boot Actuator microservice try this:\n\n    jx create spring -d web -d actuator\n        \nIf you have a Maven Archetype you would like to create then use:\n\n    jx create archetype\n    \n## Starting builds\n\nTo start a pipeline using a specific name try:\n\n    jx start pipeline myorg/myrepo\n\nOr to pick the pipeline to start:\n\n    jx start pipeline\n\nIf you know part of the name of the pipeline to run you can filter the list via:\n\n    jx start pipeline -f thingy\n\nYou can start and tail the build log via:\n\t\t\n    jx start pipeline -t\n\n## Viewing Apps and Environments\n\nTo view environments for a team:\n\n    jx get env\n    \nTo view the application versions across environments:\n\n    jx get version\n            \n## Manual promotions\n\nTypically we setup Environments to use _automatic_ promotion so that the CI / CD pipelines will automatically promote versions through the available Environments using the CI / CD Pipeline.\n\nHowever if you wish to manually promote a version to an environment you can use the following command:\n\n    jx promote myapp -e prod \n    \nOr if you wish to use a custom namespace:   \n\n    jx promote myapp -n my-dummy-namespace\n \n## Switching Environments\n\nThe `jx` CLI tool uses the same Kubernetes cluster and namespace context as `kubectl`. \n\nYou can switch Environments via:\n\n    jx env\n    \nOr change it via:\n\n    jx env staging\n    jx env prod\n    \nTo display the current environment without trying to change it:\n\n    jx env -b\n\nTo view all the environments type:\n\n    jx get env\n    \nYou can create or edit environments too:\n\n    jx create env\n    \n    jx edit env staging\n    \nYou can switch namespaces in the same way via:\n\n    jx ns\n\nor\n\n    jx ns awesome-staging    \n\n## Switching Clusters\n\nIf you have multiple Kubernetes clusters (e.g. you are using GKE and Minikube together) then you can switch between them via:\n\n    jx ctx\n    \nIn the same way. Or via\n\n    jx ctx minikube\n            \n**Note** that changing the namespace ,environment or cluster changes the current context for **ALL** shells!\n\n### Sub shells\n\nSo if you want to work temporarily with, say, the production cluster we highly recommend you use a sub shell for that.\n\n    jx shell my-prod-context\n    \nOr to pick the context to use for the sub shell:\n\n    jx shell \n\nThen your bash prompt will be updated to reflect that you are in a different context and/or namespace. Any changes to the namespace, environment or context will be local to the current shell only!    \n\n### Setting your prompt\n\nYou can use the `jx prompt` to configure your CLI prompt to display the current team and environment you are working within:          \n                                            \n\t\t# Enable the prompt for bash\n\t\tPS1="[\\u@\\h \\W \\$(jx prompt)]\\$ "\n\n\t\t# Enable the prompt for zsh\n\t\tPROMPT=\'$(jx prompt)\'$PROMPT\n\n**Note** that the prompt is updated automatically for you via the `jx shell` command too.\n\n### Bash completion\n\nOn a Mac to enable bash completion try:\n\n    jx completion bash > ~/.jx/bash\n    source ~/.jx/bash   \n    \nOr try:\n\n    source <(jx completion bash)\n\nFor more help try:\n\n    jx help completion bash\n           \n## Addons\n\nWe are adding a number of addon capabilities to Jenkins X. To add or remove addons use the `jx create addon` or `jx delete addon` commands.\n\nFor example to add the [Gitea Git server](https://gitea.io/en-US/) to your Jenkins X installation try:\n\n    jx create addon gitea\n\nThis will: \n\n* install the Gitea Helm chart.\n* add Gitea as a Git server (via the `jx create git server gitea` command).\n* create a new user in Gitea (via the `jx create git user -n gitea` command).\n* create a new Git API token in Gitea (via the `jx create git token -n gitea -p password username` command).\n     \n## Troubleshooting\n\nWe have tried to collate common issues here with work arounds. If your issue isn\'t listed here please [let us know](https://github.com/jenkins-x/jx/issues/new).\n \n### Cannot create cluster Minikube\nIf you are using a Mac then `hyperkit` is the best VM driver to use - but does require you to install a recent [Docker for Mac](https://docs.docker.com/docker-for-mac/install/) first. Maybe try that then retry `jx create cluster minikube`?\n\nIf your Minikube is failing to startup then you could try:\n \n    minikube delete\n    rm -rf ~/.minikube\n\nIf the `rm` fails you may need to do:\n\n    sudo rm -rf ~/.minikube\n\nNow try `jx create cluster minikube` again - did that help? Sometimes there are stale certs or files hanging around from old installations of minikube that can break things.\n\nSometimes a reboot can help in cases where virtualisation goes wrong ;)\n\nOtherwise you could try follow the Minikube instructions:\n\n* [install Minikube](https://github.com/kubernetes/minikube#installation)\n* [run Minikube start](https://github.com/kubernetes/minikube#quickstart) \n\n### Minikube and hyperkit: Could not find an IP address\n\nIf you are using Minikube on a mac with hyperkit and find Minikube fails to start with a log like:\n\n```\nTemporary Error: Could not find an IP address for 46:0:41:86:41:6e\nTemporary Error: Could not find an IP address for 46:0:41:86:41:6e\nTemporary Error: Could not find an IP address for 46:0:41:86:41:6e\nTemporary Error: Could not find an IP address for 46:0:41:86:41:6e\n```\n\nIt could be you have hit [this issue in Minikube and hyperkit](https://github.com/kubernetes/minikube/issues/1926#issuecomment-356378525).\n\nThe work around is to try the following:\n\n```\nrm ~/.minikube/machines/minikube/hyperkit.pid\n``` \n\nThen try again. Hopefully this time it will work!\n\n### Cannot access services on Minikube\n\nWhen running Minikube locally `jx` defaults to using [nip.io](http://nip.io/) as a way of using nice-isn DNS names for services and working around the fact that most laptops can\'t do wildcard DNS. However sometimes [nip.io](http://nip.io/) has issues and does not work.\n\nTo avoid using [nip.io](http://nip.io/) you can do the following:\n\nEdit the file `~/.jx/cloud-environments/env-minikube/myvalues.yaml` and add the following content:\n\n```yaml\nexpose:\n  Args:\n    - --exposer\n    - NodePort\n    - --http\n    - "true"\n```\n\nThen re-run `jx install` and this will switch the services to be exposed on `node ports` instead of using ingress and DNS.\n\nSo if you type:\n\n```\njx open\n```\n\nYou\'ll see all the URLs of the form `http://$(minikube ip):somePortNumber` which then avoids going through [nip.io](http://nip.io/) - it just means the URLs are a little more cryptic using magic port numbers rather than simple host names.\n\n\n \n### Other issues\n\nPlease [let us know](https://github.com/jenkins-x/jx/issues/new) and see if we can help? Good luck! \n\t\n## Contributing\n\nIf you\'re looking to build from source or get started hacking on jx, please see the\n[hacking guide][hacking] for more information.\n\n\n[![](https://codescene.io/projects/4772/status.svg) Get more details at **codescene.io**.](https://codescene.io/projects/4772/jobs/latest-successful/results)\n\n\n\n[hacking]: docs/contributing/hacking.md\n'