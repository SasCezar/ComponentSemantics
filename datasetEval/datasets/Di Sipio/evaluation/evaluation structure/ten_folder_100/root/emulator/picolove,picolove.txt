b'PICOLOVE\n--------\n\nRun PICO-8 games and computer programs with free and open-source software.\n\nOn github at: https://github.com/picolove/picolove\n\nRequires L\xc3\x96VE 0.10.2\n\nWhat it is:\n\n * An implementation of PICO-8\'s API in L\xc3\x96VE\n\nWhat is PICO-8:\n\n * See http://www.lexaloffle.com/pico-8.php\n\nWhat is L\xc3\x96VE:\n\n * See https://love2d.org/\n\nWhy:\n\n * For a fun challenge!\n * Allow standalone publishing of PICO-8 games on other platforms\n  * Should work on mobile devices [*](#android-packaging)\n * Configurable controls\n * Extendable\n * No arbitrary cpu or memory limitations\n * No arbitrary code size limitations\n * Better debugging tools available\n * Free and open-source software\n\nWhat it isn\'t:\n\n * A replacement for PICO-8\n * A perfect replica\n * No dev tools, no image editor, map editor, sfx editor, music editor\n * No modifying or saving carts\n * Not memory compatible with PICO-8\n\nNot Yet Implemented:\n\n * Memory modification/reading\n * PICO-8 cartridge versions > 8\n\nDifferences:\n\n * Uses floating point numbers not fixed point\n * sqrt doesn\'t freeze\n * Uses LuaJIT not lua 5.2\n\nExtra features:\n\n * `ipairs()` standard lua function\n * `log(...)` function prints to console for debugging\n * `error(message)` bluescreens with an error message\n * `warning(message)` prints warning and stacktrace to console\n * `setfps(fps)` changes the consoles framerate\n * `_keyup`, `_keydown`, `_textinput` allow using direct keyboard input\n * `_getcursorx()`, `_getcursory()` allow access to the cursor position\n\nAndroid Packaging:\n\nReplace the default cartridge (nocart.p8) with your game. Text (P8) or PNG (P8.PNG) is supported.  \nFollow the [Android Game Packaging](https://bitbucket.org/MartinFelis/love-android-sdl2/wiki/Game_Packaging) steps.  \nOptionally, for orientation rotation support (Portrait and Landscape), remove ```android:screenOrientation="landscape"``` in the AndroidManifest.xml\n'