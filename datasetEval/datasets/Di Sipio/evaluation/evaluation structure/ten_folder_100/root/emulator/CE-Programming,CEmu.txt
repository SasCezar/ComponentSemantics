b'# CEmu [![Build Status](https://api.travis-ci.org/CE-Programming/CEmu.svg?branch=master)](https://travis-ci.org/CE-Programming/CEmu) [![Build Status](https://ci.appveyor.com/api/projects/status/github/CE-Programming/CEmu?branch=master&svg=true)](https://ci.appveyor.com/project/alberthdev/cemu-q0nl8) [![Build Status](https://scan.coverity.com/projects/7576/badge.svg)](https://scan.coverity.com/projects/ce-programming-cemu) [![IRC badge](https://img.shields.io/badge/IRC%20channel-%23cemu--dev%20on%20EFNet-blue.svg)](http://chat.efnet.org/irc.cgi?adv=1&nick=cemu-user&chan=%23cemu-dev)\n\nCEmu is a third-party TI-84 Plus CE / TI-83 Premium CE calculator emulator, focused on developer features.  \nCEmu works natively on Windows, macOS, and Linux. For performance and portability, the core is programmed in C and its customizable GUI in C++ with Qt.\n\n<a href="https://i.imgur.com/7QsJd5L.png"><img src="https://i.imgur.com/mTC6yXp.png" /></a>\n\n_Note: CEmu is not a TI product nor is it TI-endorsed/affiliated. If you need an official TI CE emulator, TI-SmartView\xe2\x84\xa2 CE is for you._\n\n## Downloads\nDevelopment builds are available here: https://ce-programming.github.io/CEmu/download\n\nOfficial stable releases are available here: https://github.com/CE-Programming/CEmu/releases\n\n_Note that Release builds have an update checking feature, which is disabled in development builds._\n\n## Features\n### _Standard features_\n* Built-in ROM dump wizard. CEmu does _not_ rely on downloading an OS from TI\'s website nor does it have a custom boot/loader: a ROM from your own calculator is required. CEmu makes it very easy to get it.\n* Accurate and fast emulation (you can also customize the speed and even toggle throttling)\n* Resizable calculator screen\n* "Always-on-top" window option\n* Screen capture, copy, and drag\'n\'drop (PNG)\n* Screen recording (animated PNG)\n* File sending/receiving (not for Apps/OS yet)\n* Customizable keybindings with multiple presets\n* Keypress recording and history\n* Full screen modes (F11 key)\n* Emulation states for efficient saving / restoring\n* CE skins (colors like the real devices)\n* Available in English, French, Spanish, and Dutch\n\n### _Developer features_\n* Main options available via CLI arguments\n* IPC features when launching several CEmu processes\n* Import/Export RAM, ROM, images...\n* Custom display refresh rate, FPS indicator\n* Custom emulation speed/throttling\n* Rich text console for easier logging/debugging\n* Code stepping, jumping...\n* R/W/X breakpoints, watchpoints\n* eZ80 disassembler (with equates support)\n* Port monitor/editor\n* General Timer monitor/editor\n* Memory viewer/editor\n* CPU state/registers viewer/editor\n* LCD state/parameters viewer/editor\n* Memory visualizer (as fully customizable virtual LCDs)\n* Stack viewer\n* OP1-7 viewer\n* FP and OP stacks viewer/editor\n* Variable Allocation Table (VAT) viewer\n* Variable list with preview and program launcher\n* TI-Basic program viewer with syntax-highlight and reformatting\n* Recent files list with ability to quickly resend\n* Cycle counter for benchmarking/profiling\n* Emulation of DMA and SPI (for optimal accuracy)\n* Misc. emulation (backlight, battery...)\n* Pre-I HW Rev. emulation toggle (IM 2 compatibility)\n* "Autotester" (automated unit testing, light scripting)\n\n## How to build\nYou can find information for building CEmu yourself from the source on [this](https://github.com/CE-Programming/CEmu/wiki/Building-CEmu) wiki page. If you encounter any problems, feel free to open an [issue](https://github.com/CE-Programming/CEmu/issues)!\n\n## Contributing\n\nYou\'re welcome to [report any bugs](https://github.com/CE-Programming/CEmu/issues) you may encounter, in addition to any [feature requests](https://github.com/CE-Programming/CEmu/issues) you may have. If you want to help, [tell us](http://chat.efnet.org/irc.cgi?adv=1&nick=cemu-user&chan=%23cemu-dev), or send patches / pull requests!\n\nIf you\'d like to contribute code, please consider using [Artistic Style](http://astyle.sourceforge.net/) with the settings specified in the `.astylerc` file to format your code. Qt Creator can [format code with Artistic Style](http://doc.qt.io/qtcreator/creator-beautifier.html) with minimal setup.  \nWe also welcome more translations. Qt Linguist is a great tool for that (here\'s [a tutorial](https://doc.qt.io/qt-5/linguist-manager.html)).\n\n## License\nCEmu is licensed under the [GPLv3](LICENSE).  \n_Acknowledgements_: Some CEmu parts are, directly, modified, or inspired, from [z80e](https://github.com/KnightOS/z80e), [Firebird](https://github.com/nspire-emus/firebird), [libtifiles](https://github.com/debrouxl/tilibs), [tivars_lib_cpp](https://github.com/adriweb/tivars_lib_cpp), [KDMacTouchBar](https://github.com/KDAB/KDMacTouchBar), and FatCow\'s ["Farm-Fresh Web Icons"](http://www.fatcow.com/free-icons).  \nThe complete licensing information is available in the [LICENSE](LICENSE) file.\n'