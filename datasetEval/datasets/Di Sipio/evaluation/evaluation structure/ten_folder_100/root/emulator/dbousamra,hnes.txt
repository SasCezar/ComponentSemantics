b'# hnes\n\n[![Build Status](https://travis-ci.org/dbousamra/hnes.svg?branch=master)](https://travis-ci.org/dbousamra/hnes)\n\nWelcome to hnes. hnes is a NES emulator written in Haskell.\n\n## Screenshots\n\n<p float="left">\n  <img src="screenshots/nestest-4.png" width="200" />\n  <img src="screenshots/mario-1.png" width="200" />\n  <img src="screenshots/mario-2.png" width="200" />\n  <img src="screenshots/megaman-3.png" width="200" />\n  <img src="screenshots/contra-1.png" width="200" />\n  <img src="screenshots/contra-2.png" width="200" />\n  <img src="screenshots/marble-madness-2.png" width="200" />\n  <img src="screenshots/paperboy2-2.png" width="200" />\n</p>\n\n## Mapper support\n\nThe following mappers are supported:\n\n- NROM (0)\n- UNROM (2)\n- AOROM (7)\n\nLots of games run, but more don\'t. You can see which roms are compatible here: http://tuxnes.sourceforge.net/nesmapper.txt The best games seem to be MMC3, so that is a priority.\n\nMappers are basically custom memory modules that exist on the cartridges themselves, that allow referencing more memory than the NES originally shipped with. Sometimes they even do computation. A very clever idea, but a nightmare to emulate, since each mapper has to be emulated as well\n\n## Controls\n\n| Nintendo              | Emulator    |\n| --------------------- | ----------- |\n| Up, Down, Left, Right | Arrow Keys  |\n| Start                 | Enter       |\n| Select                | Space       |\n| A                     | Z           |\n| B                     | X           |\n\n## Building\n\n[Get Stack](https://haskell-lang.org/get-started) for building Haskell\nprojects.\n\nWindows instructions:\n\n    $ stack exec -- pacman -Sy mingw-w64-x86_64-pkg-config mingw-w64-x86_64-SDL2\n    $ stack build\n\nOS X instructions:\n\n    $ brew install sdl2\n    $ stack build\n\nUbuntu Linux instructions:\n\n    $ sudo apt-get install libsdl2-dev\n    $ stack build\n\nFreeBSD instructions:\n\n    $ pkg install sdl2\n    $ stack build\n\n## Running\n\nTo run:\n\n`stack exec -- hnes roms/tests/cpu/nestest/nestest.nes`\n\n## Task list\n\n- [x] Basic structure\n- [ ] Mappers\n  - [x] Loading roms\n  - [x] Mappers\n    - [x] UNROM\n    - [x] NROM\n    - [x] AOROM\n    - [ ] CNROM\n    - [ ] MMC1\n    - [ ] MMC3\n- [ ] CPU\n  - [x] All official opcodes\n  - [ ] All illegal opcodes\n  - [x] Nestest passing\n  - [x] Blarggs CPU test roms passing\n- [ ] PPU\n  - [x] SDL integration\n  - [x] Background rendering\n  - [x] Scrolling\n  - [x] Sprite rendering\n  - [ ] VBlank timing for Battletoads edge case\n- [ ] APU\n- [x] Controller input handled\n- [x] Performance tuning\n- [ ] Command line interface\n  - [ ] Parse args\n  - [ ] Use optparse-applicative\n  - [ ] Some debug params?\n\n## Tests\n\nThere\'s a small test suite that is used to check for CPU and PPU accuracy. They use test roms rather than hand coding tests.\n\nJust run `stack test`:\n\n<img src="screenshots/tests.png" width="200" />\n\n## Known issues.\n\nThere are so many, where do I even begin.\n\n- Performance is pretty average still. I get around 80 fps on my 2015 i5 MacBook.\n- VBlank timing is off. I don\'t know the exact reasons, but it causes scrolling issues.\n'