b'<p align="center">\n  <img src="src/app/img/logo.png" />\n</p>\n\nyasp is a fully functional web-based assembler development environment, including a real assembler, emulator and debugger.\nThe assembler dialect is a custom which is held very simple so as to keep the learning curve as shallow as possible.\nIt also features some hardware-elements (LED, Potentiometer, Button, etc.). The main purpose of this project\nis to create an environment in which students can learn the assembly language so that they understand computers better.\nFurthermore it allows them to experiment without the fear of breaking something.\n\nThe original project team of yasp consists of Robert Fischer and Michael "luto" Lutonsky. For more information take\na look at the about-section in the IDEs menu.\n\n## Online-Demo\nA hosted version of yasp can be found on http://demo.yasp.me/.\n\n## License\nyasp is licensed under the GPLv3-License, for details see [`LICENSE.txt`](LICENSE.txt).\n\n## Development\n\n### Setup\nTo develop on yasp you\'ll need nodejs.\n```\n$ npm install -g grunt-cli bower   # install grunt and bower (if needed)\n$ git clone https://github.com/yasp/yasp.git\n$ cd yasp\n$ npm install      # download grunt-dependencies\n$ bower install    # download web-dependecies\n$ grunt commandsjs # build help and instructions\n$ grunt http       # start development http-server\n```\n\n### Setup on Windows\n1. get nodejs http://nodejs.org/\n2. get msysgit http://code.google.com/p/msysgit/downloads/list?q=full+installer+official+git\n4. open CMD and and follow the linux-setup\n\n### Grunt-Tasks\n* `deps` download all client dependencies\n* `commands` build help and commands.js, see [instructions.md](/doc/instructions.md)\n* `watchcommands` watch-task for `commands`\n* `http` start a development http-server\n* `doc` builds jsdoc to `/doc/jsdoc/`\n* `watchdoc` watch-task for `doc`\n\n### Documentation\nThe documentation lives in the [/doc/](/doc/)-directory. Additional documentation in the German language can be found on the [project homepage](http://yasp.me).\n\n**If you think that something is lacking documentation please [create an issue](https://github.com/yasp/yasp/issues/new).**\n\n### Hacking\n* [`/src/app/`](/src/app/), IDE\n* [`/src/app/instructions`](/src/app/instructions), all instruction files, see [instructions.md](/doc/instructions.md)\n* [`/src/app/js/editor/breadboard/`](/src/app/js/editor/breadboard/), breadboards, see [breadboards.md](/doc/breadboards.md)\n* [`/src/app/langs/`](/src/app/langs/), languages for l10n, see [l10n.md](/doc/l10n.md)\n* [`/src/app/js/assembler`](/src/app/js/assembler), home of the assembler\n* [`/src/app/js/emulator`](/src/app/js/emulator), home of the emulator, see [emulator.md](/doc/emulator/emulator.md)\n* [`/src/app/js/hardware`](/src/app/js/hardware), home of the hardware, see [hardware.md](/doc/hardware.md)\n* [`/src/test/index.html`](/src/test/index.html), unit-tests\n* [`/src/test/hardware.html`](/src/test/hardware.html), hardware-demo\n* [`/src/test/repl.html`](/src/test/repl.html), interactive assembler/emulator-interface\n'