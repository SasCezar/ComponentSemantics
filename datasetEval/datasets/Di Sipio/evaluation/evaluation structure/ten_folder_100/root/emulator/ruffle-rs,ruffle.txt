b'<p align="center">\n <a href="https://ruffle.rs"><img src="https://ruffle.rs/assets/logo.png" alt="Ruffle"></a>\n</p>\n<p align="center">\n <a href="https://circleci.com/gh/ruffle-rs/ruffle">\n  <img src="https://img.shields.io/circleci/build/github/ruffle-rs/ruffle" alt="Travis Build Status">\n </a>\n  <a href="https://discord.gg/J8hgCQN">\n      <img src="https://img.shields.io/discord/610531541889581066" alt="Ruffle Discord">\n  </a>\n  <br>\n  <strong><a href="https://ruffle.rs">website</a> | <a href="http://ruffle-rs.s3-website-us-west-1.amazonaws.com/builds/web-demo/index.html?file=synj1.swf">demo</a> | <a href="http://ruffle-rs.s3-website-us-west-1.amazonaws.com/">nightly builds</a> | <a href="https://github.com/ruffle-rs/ruffle/wiki">wiki</a></strong>\n</p>\n\n# Ruffle\n\nRuffle is an Adobe Flash Player emulator written in the Rust programming language. Ruffle targets both the desktop and the web using WebAssembly.\n\n## Project status\n\nRuffle is in the proof-of-concept stage and can currently run early Flash animations. ActionScript support is still forthcoming; for more info, read the [project roadmap](https://github.com/ruffle-rs/ruffle/wiki/Roadmap).\n\n## Building from source\n \n[Follow the official guide](https://www.rust-lang.org/tools/install) to install Rust for your platform.\n\n### Desktop\n\n* `cargo run --package=ruffle_desktop -- test.swf`\n\n### Web\n\n* Install [Node.js](https://nodejs.org/en/)\n* Install [wasm-pack](https://rustwasm.github.io/wasm-pack/installer/)\n\n#### Running the web demo\n\n* `cd web/demo`\n* `npm install`\n* `npm run serve`\n* Load indicated page in browser (usually http://localhost:8080)\n\n#### Building the NPM package\n\n* `cd web`\n* `wasm-pack build`\n\n### Scanner\n\nIf you have a collection of "real world" SWFs to test against, the scanner may be used to benchmark\nruffle\'s parsing capabilities. Provided with a folder and an output filename, it will attempt to read\nall of the flash files and report on the success of such a task.\n\n* `cargo run --package=ruffle_scanner -- folder/with/swfs/ results.csv`\n\n## Structure\n\n- `core` contains the core emulator and common code\n- `desktop` contains the desktop client (uses `glium`)\n- `web` contains the web client (uses `wasm-bindgen`)\n- `scanner` contains a utility to bulk parse swf files\n\n## License\n\nLicensed under either of\n * Apache License, Version 2.0 ([LICENSE_APACHE](LICENSE_APACHE) or http://www.apache.org/licenses/LICENSE-2.0)\n * MIT license ([LICENSE_MIT](LICENSE_MIT) or http://opensource.org/licenses/MIT)\nat your option.\n\n### Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in the work by you shall be dual licensed as above, without any\nadditional terms or conditions.\n'