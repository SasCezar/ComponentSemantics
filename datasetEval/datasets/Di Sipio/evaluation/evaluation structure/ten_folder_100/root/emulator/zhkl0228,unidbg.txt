b'# unidbg\n\nAllows you to emulate an Android ARM32 and/or ARM64 native library, and an experimental  iOS ARM32 emulation.<br>\n\nThis is an educational project to learn more about the ELF file format and ARM assembly.\n\n## License\n- unidbg uses software libraries from [Apache Software Foundation](http://apache.org). \n- unidbg developers Idea enterprise licenses are supported by [Jetbrains](https://www.jetbrains.com?from=unidbg).\n- [IntelliJ IDEA](https://www.jetbrains.com/idea?from=unidbg) can be used to edit unidbg sources.\n- ![](assets/idea_logo.svg)\n\n## Usage\n\nVM options: -Djava.library.path=prebuilt/os -Djna.library.path=prebuilt/os  \nWhere os may: linux64, win32, win64, osx64\n\nSimple tests under src/test directory\n- [src/test/java/com/bytedance/frameworks/core/encrypt/TTEncrypt.java](https://github.com/zhkl0228/unidbg/blob/master/src/test/java/com/bytedance/frameworks/core/encrypt/TTEncrypt.java)  \n\n![](assets/TTEncrypt.gif)\n***\n- [src/test/java/com/sun/jna/JniDispatch32.java](https://github.com/zhkl0228/unidbg/blob/master/src/test/java/com/sun/jna/JniDispatch32.java)  \n![](assets/JniDispatch32.gif)\n***\n- [src/test/java/com/sun/jna/JniDispatch64.java](https://github.com/zhkl0228/unidbg/blob/master/src/test/java/com/sun/jna/JniDispatch64.java)  \n![](assets/JniDispatch64.gif)\n***\n- [src/test/java/org/telegram/messenger/Utilities32.java](https://github.com/zhkl0228/unidbg/blob/master/src/test/java/org/telegram/messenger/Utilities32.java)  \n![](assets/Utilities32.gif)\n***\n- [src/test/java/org/telegram/messenger/Utilities64.java](https://github.com/zhkl0228/unidbg/blob/master/src/test/java/org/telegram/messenger/Utilities64.java)  \n![](assets/Utilities64.gif)\n\n## More tests\n- [src/test/java/cn/banny/emulator/QDReaderJni.java](https://github.com/zhkl0228/unidbg/blob/master/src/test/java/cn/banny/emulator/QDReaderJni.java)\n\n## Features\n- Emulation of the JNI Invocation API so JNI_OnLoad can be called.\n- Support JavaVM, JNIEnv.\n- Emulation of syscalls instruction.\n- Support ARM32 and ARM64 bit ELF.\n- Inline hook, thanks to HookZz.\n- Import hook, thanks to xHook.\n- Support simple debugger, gdb stub, instruction trace, memory read/write trace.\n\n## TODO\n- ~~Working iOS emulation.~~\n- ~~Working iOS objc.~~\n\n## Thanks\n- [unicorn](https://github.com/unicorn-engine/unicorn)\n- [HookZz](https://github.com/jmpews/HookZz)\n- [xHook](https://github.com/iqiyi/xHook)\n- [AndroidNativeEmu](https://github.com/AeonLucid/AndroidNativeEmu)\n- [usercorn](https://github.com/lunixbochs/usercorn)\n- [keystone](https://github.com/keystone-engine/keystone)\n- [capstone](https://github.com/aquynh/capstone)\n- [idaemu](https://github.com/36hours/idaemu)\n- [jelf](https://github.com/fornwall/jelf)\n- [whale](https://github.com/asLody/whale)\n- [kaitai_struct](https://github.com/kaitai-io/kaitai_struct)\n- [fishhook](https://github.com/facebook/fishhook)\n'