b'# Rustual Boy\n\n[![Build Status](https://travis-ci.org/emu-rs/rustual-boy.svg?branch=master)](https://travis-ci.org/emu-rs/rustual-boy) [![Build status](https://ci.appveyor.com/api/projects/status/ec29vne6uuh7tjtu/branch/master?svg=true)](https://ci.appveyor.com/project/yupferris/rustual-boy/branch/master) [![rustualboy.com](https://img.shields.io/badge/www-rustualboy.com-red.svg)](https://rustualboy.com/) [![Compabitility](https://img.shields.io/badge/compatibility-100%25-green.svg)](https://github.com/emu-rs/rustual-boy/blob/master/README.md#known-game-compatibility) [![Chat on discord](https://img.shields.io/badge/chat-on%20discord-7289DA.svg)](https://discord.gg/65j9YMA) [![License](https://img.shields.io/badge/license-MIT%2FApache--2.0-blue.svg)](https://github.com/emu-rs/rustual-boy/blob/master/README.md#license)\n\n![Rustual Boy](media/logo.png)\n\n## Description\n\nRustual Boy is a [Virtual Boy](https://en.wikipedia.org/wiki/Virtual_Boy) emulator. It can be used to play existing Virtual Boy games, as well as be a helpful development/debugging tool for homebrew for this platform.\n\nThe name "Rustual Boy" is a [portmanteau](https://en.wikipedia.org/wiki/Portmanteau) of the words "Rust" and "Virtual Boy". Ok, the "Virtual Boy" part was obvious, but why "Rust"? In fact, Rustual Boy is written in the [Rust programming language](https://www.rust-lang.org/en-US/) - a "systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety." Rust is a wonderful language with a thriving community, and as such provides a fantastic platform for an emulation project!\n\n## Status\n\nRustual Boy is currently able to emulate [all commercial Virtual Boy titles](https://github.com/emu-rs/rustual-boy/blob/master/README.md#known-game-compatibility), as well as many homebrew ones. It supports basic video/audio output and keyboard input, and also a simple CLI debugger. It runs on Windows, MacOS, Linux, and likely some other platforms Rust supports.\n\nWhile Rustual Boy\'s core emulation is complete [compatibility-wise](https://github.com/emu-rs/rustual-boy/blob/master/README.md#known-game-compatibility), and in some respects is already one of the more accurate VB emulators available, the project is still young, and needs some time to mature. Particularly, its user interface is lacking (read: virtually non-existent), and there are some known (and probably unknown) stability/compatibility issues. Also, performance isn\'t fantastic yet, but the emulator should be playable at least.\n\nThat said, these things are bound to improve with time, and everyone is encouraged to [grab a build](https://github.com/emu-rs/rustual-boy/releases) or [build the emulator](https://github.com/emu-rs/rustual-boy/blob/master/README.md#building-and-running), give it a shot, and [report any bugs/feature requests](CONTRIBUTING.md)!\n\n## Screenshots\n\n![screenie](media/screenshot.png)\n![screenie](media/screenshot2.png)\n![screenie](media/screenshot3.png)\n![screenie](media/screenshot4.png)\n\n## Known game compatibility\n\nKey:\n - \xf0\x9f\x92\x96: Fully compatible. The game is fully playable with no known bugs (to our knowledge).\n - \xf0\x9f\x92\x94: Playable. The game can be played, but has some minor known glitches (described in the notes field).\n - \xf0\x9f\x9a\xab: Incompatible. The reason is described in the notes field.\n - `N/A`: Game does not exist for this region.\n\nGames marked \xf0\x9f\x92\x96 and \xf0\x9f\x92\x94 are all included in the compatibility metric.\n\n| Game | USA | JP | Notes |\n| --- | --- | --- | --- |\n| 3-D Tetris | \xf0\x9f\x92\x96 | N/A | |\n| Bound High! | \xf0\x9f\x92\x96 | N/A | ROM is both USA+JP |\n| Galactic Pinball | \xf0\x9f\x92\x94 | \xf0\x9f\x92\x94 | Vocal samples throughout the game play at the wrong rate, likely related to CPU clock cycle inaccuracy |\n| Golf | \xf0\x9f\x92\x94 | \xf0\x9f\x92\x94 | Game transitions to demo mode WAY too fast, sometimes softlocks when transitioning to/from demo mode |\n| Insmouse No Yakata | N/A | \xf0\x9f\x92\x96 | |\n| Jack Bros. | \xf0\x9f\x92\x96 | \xf0\x9f\x92\x96 | |\n| Mario Clash | \xf0\x9f\x92\x96 | \xf0\x9f\x92\x96 | |\n| Mario\'s Tennis | \xf0\x9f\x92\x96 | \xf0\x9f\x92\x96 | |\n| Nester\'s Funky Bowling | \xf0\x9f\x92\x96 | N/A | |\n| Panic Bomber | \xf0\x9f\x92\x96 | \xf0\x9f\x92\x96 | |\n| Red Alarm | \xf0\x9f\x92\x96 | \xf0\x9f\x92\x96 | |\n| SD Gundam Dimension War | N/A | \xf0\x9f\x92\x96 | |\n| Space Invaders Virtual Collection | N/A | \xf0\x9f\x92\x96 | |\n| Space Squash | N/A | \xf0\x9f\x92\x96 | |\n| Teleroboxer | \xf0\x9f\x92\x94 | \xf0\x9f\x92\x94 | Small audio glitches during screen transitions after demo mode wins games |\n| V-Tetris | N/A | \xf0\x9f\x92\x96 | |\n| Vertical Force | \xf0\x9f\x92\x96 | \xf0\x9f\x92\x96 | |\n| Virtual Bowling | N/A | \xf0\x9f\x92\x94 | Samples play at the wrong rate |\n| Virtual Boy Wario Land | \xf0\x9f\x92\x94 | \xf0\x9f\x92\x94 | Game is fully playable, but some parts of the intro cutscene are too dark, due to inaccurate emulation of the physical LED periods used in the display |\n| Virtual Fishing | N/A | \xf0\x9f\x92\x96 | |\n| Virtual Lab | N/A | \xf0\x9f\x92\x96 | |\n| Virtual League Baseball | \xf0\x9f\x92\x96 | \xf0\x9f\x92\x96 | |\n| Waterworld | \xf0\x9f\x92\x96 | N/A | |\n\n## Building and running\n\nCurrently, the only dependency for building is Rust itself, which can be downloaded [here](https://www.rust-lang.org/downloads.html). Once that\'s installed, you can clone the repo, and simply `cargo build`/`cargo run` your way to victory! It\'s recommended to use the `--release` flag as well, as emulation can require a lot of CPU power, so we\'ll want all the compiler help we can get.\n\n> Note: If you\'re new to using Cargo (Rust\'s build system), it\'s recommended to give the [Cargo Guide](http://doc.crates.io/guide.html) a quick skim.\n\nRustual Boy has a very simple CLI interface:\n\n```\n$ rustual-boy-cli --help\nRustual Boy 0.2.0\nferris <yupferris@gmail.com>, The Rustual Boy contributors\nA CLI frontend to the Rustual Boy emulator\n\nUSAGE:\n    rustual-boy-cli.exe [FLAGS] <ROM>\n\nFLAGS:\n    -s, --sram       Path to an SRAM\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n\nARGS:\n    <ROM>    The name of the ROM to load\n```\n\nThe easiest way to run a game is to supply a single file argument:\n\n```\nrustual-boy-cli bound-high.vb\n```\n\n## Input keymap\n\nThe Virtual Boy game pad consists of two d-pads, 4 buttons, and two shoulder buttons. These are mapped to the following keyboard keys:\n\n| Button | Key |\n| --- | --- |\n| Left D-Pad Up | <kbd>W</kbd> |\n| Left D-Pad Down | <kbd>S</kbd> |\n| Left D-Pad Left | <kbd>A</kbd> |\n| Left D-Pad Right | <kbd>D</kbd> |\n| Right D-Pad Up | <kbd>I</kbd> |\n| Right D-Pad Down | <kbd>K</kbd> |\n| Right D-Pad Left | <kbd>J</kbd> |\n| Right D-Pad Right | <kbd>L</kbd> |\n| Select | <kbd>space</kbd> |\n| Start | <kbd>enter/return</kbd> |\n| A | <kbd>F</kbd> |\n| B | <kbd>H</kbd> |\n| Left bumper | <kbd>E</kbd> |\n| Right bumper | <kbd>U</kbd> |\n\nFor game pad layout reference, refer to [this image](https://en.wikipedia.org/wiki/Virtual_Boy#/media/File:Virtual-Boy-Set.jpg). This key map is currently non-configurable.\n\n## Contributing\n\nRustual Boy aims to be an open project where anyone can contribute. If you\'re interested, check [CONTRIBUTING.md](CONTRIBUTING.md)!\n\n## License\n\nLicensed under either of\n\n * Apache License, Version 2.0, ([LICENSE-APACHE](LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0)\n * MIT license ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT)\n\nat your option.\n'