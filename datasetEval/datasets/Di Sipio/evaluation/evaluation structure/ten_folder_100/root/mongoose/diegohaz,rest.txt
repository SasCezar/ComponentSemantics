b'# rest [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coverage percentage][coveralls-image]][coveralls-url]\n> RESTful API generator using NodeJS, Express and Mongoose\n\n\xf0\x9f\x93\xb9 [Watch this video](https://www.youtube.com/watch?v=6x-ijyG-ack) for an overview on how to use **generator-rest** and deploy your project to [Heroku](https://heroku.com).\n\n<br>\n<hr>\n<p align="center">\nIf you find this useful, please don\'t forget to star \xe2\xad\x90\xef\xb8\x8f the repo, as this will help to promote the project.<br>\nFollow me on <a href="https://twitter.com/diegohaz">Twitter</a> and <a href="https://github.com/diegohaz">GitHub</a> to keep updated about this project and <a href="https://github.com/diegohaz?tab=repositories">others</a>.\n</p>\n<hr>\n<br>\n\n## Features\n\n - **Highly customizable** - You can choose what to install\n - **Really RESTful** - It follows the best practices\n - **ES6!** - Using [babel](https://babeljs.io/)\n - **User registration API** - Using [passport](http://passportjs.org/) (optional)\n - **Social login API** - Facebook, Google and GitHub (optional)\n - **Password reset API** - Sending emails with [SendGrid API](https://sendgrid.com/docs/API_Reference/index.html) (optional)\n - **Listing query strings** - `q`, `page`, `limit`, `fields` etc. already provided by [querymen](https://github.com/diegohaz/querymen)\n - **Query string validator** - Using [querymen](https://github.com/diegohaz/querymen)\n - **Request body validator** - Using [bodymen](https://github.com/diegohaz/bodymen)\n - **Standard error responses** - Using [querymen](https://github.com/diegohaz/querymen) and [bodymen](https://github.com/diegohaz/bodymen) error handlers\n - **Unit and integration tests** - Using [Jest](https://github.com/facebook/jest)\n - **Continuous integration support** - Using [Travis CI](https://travis-ci.org/)\n - **API docs generator** - Using [apidoc](http://apidocjs.com/)\n - **Love \xe2\x99\xa5** - Using [me](https://github.com/diegohaz)\n\n## Installation\n\nFirst, install [Yeoman](http://yeoman.io) and generator-rest using [npm](https://www.npmjs.com/) (we assume you have pre-installed [node.js](https://nodejs.org/)).\n\n```bash\nnpm install -g yo\nnpm install -g generator-rest\n```\n\n## Generators\n\nThen, you can use `yo` to generate your project.\n\n```bash\nyo rest # generate a new project\nyo rest:api # generate a new api endpoint inside your project\n```\n\n## Commands\n\nAfter you generate your project, these commands are available in `package.json`.\n\n```bash\nnpm test # test using Jest\nnpm run coverage # test and open the coverage report in the browser\nnpm run lint # lint using ESLint\nnpm run dev # run the API in development mode\nnpm run prod # run the API in production mode\nnpm run docs # generate API docs\n```\n\n## Playing locally\n\nFirst, you will need to install and run [MongoDB](https://www.mongodb.com/) in another terminal instance.\n\n```bash\n$ mongod\n```\n\nThen, run the server in development mode.\n\n```bash\n$ npm run dev\nExpress server listening on http://0.0.0.0:9000, in development mode\n```\n\nIf you choose to generate the authentication API, you can start to play with it.\n> Note that creating and authenticating users needs a master key (which is defined in the `.env` file)\n\nCreate a user (sign up):\n```bash\ncurl -X POST http://0.0.0.0:9000/users -i -d "email=test@example.com&password=123456&access_token=MASTER_KEY_HERE"\n```\n\nIt will return something like:\n```bash\nHTTP/1.1 201 Created\n...\n{\n  "id": "57d8160eabfa186c7887a8d3",\n  "name": "test",\n  "picture":"https://gravatar.com/avatar/55502f40dc8b7c769880b10874abc9d0?d=identicon",\n  "email": "test@example.com",\n  "createdAt": "2016-09-13T15:06:54.633Z"\n}\n```\n\nAuthenticate the user (sign in):\n```bash\ncurl -X POST http://0.0.0.0:9000/auth -i -u test@example.com:123456 -d "access_token=MASTER_KEY_HERE"\n```\n\nIt will return something like:\n```bash\nHTTP/1.1 201 Created\n...\n{\n  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",\n  "user": {\n    "id": "57d8160eabfa186c7887a8d3",\n    "name": "test",\n    "picture": "https://gravatar.com/avatar/55502f40dc8b7c769880b10874abc9d0?d=identicon",\n    "email": "test@example.com",\n    "createdAt":"2016-09-13T15:06:54.633Z"\n  }\n}\n```\n\nNow you can use the `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9` token (it\'s usually greater than this) to call user protected APIs. For example, you can create a new `article` API using `yo rest:api` and make the `POST /articles` endpoint only accessible to authenticated users. Then, to create a new article you must pass the `access_token` parameter.\n```bash\ncurl -X POST http://0.0.0.0:9000/articles -i -d "title=Awesome Article&content=Yeah Baby&access_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"\n```\n\nIt will return something like:\n```bash\nHTTP/1.1 201 Created\n...\n{\n  "id": "57d819bfabfa186c7887a8d6",\n  "title": "Awesome Article",\n  "content": "Yeah Baby",\n  "createdAt": "2016-09-13T15:22:39.846Z",\n  "updatedAt":"2016-09-13T15:22:39.846Z"\n}\n```\n\n> Some endpoints are only accessible by admin users. To create an admin user, just pass the `role=admin` along to other data when calling `POST /users`.\n\n## Deploy\n\nHere is an example on how to deploy to [Heroku](https://heroku.com) using [Heroku CLI](https://devcenter.heroku.com/articles/heroku-command-line):\n```bash\n# start a new local git repository\ngit init\n\n# create a new heroku app\nheroku apps:create my-new-app\n\n# add heroku remote reference to the local repository\nheroku git:remote --app my-new-app\n\n# add the MongoLab addon to the heroku app\nheroku addons:create mongolab\n\n# set the environment variables to the heroku app (see the .env file in root directory)\nheroku config:set MASTER_KEY=masterKey JWT_SECRET=jwtSecret\n\n# commit and push the files\ngit add -A\ngit commit -m "Initial commit"\ngit push heroku master\n\n# open the deployed app in the browser\nheroku open\n```\n\nThe second time you deploy, you just need to:\n\n```bash\ngit add -A\ngit commit -m "Update code"\ngit push heroku master\n```\n\n## Directory structure\n\n### Overview\n\nYou can customize the `src` and `api` directories.\n\n```\nsrc/\n\xe2\x94\x9c\xe2\x94\x80 api/\n\xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80 user/\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80 controller.js\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80 index.js\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80 index.test.js\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80 model.js\n\xe2\x94\x82  \xe2\x94\x82  \xe2\x94\x94\xe2\x94\x80 model.test.js\n\xe2\x94\x82  \xe2\x94\x94\xe2\x94\x80 index.js\n\xe2\x94\x9c\xe2\x94\x80 services/\n\xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80 express/\n\xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80 facebook/\n\xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80 mongoose/\n\xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80 passport/\n\xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80 sendgrid/\n\xe2\x94\x82  \xe2\x94\x94\xe2\x94\x80 your-service/\n\xe2\x94\x9c\xe2\x94\x80 app.js\n\xe2\x94\x9c\xe2\x94\x80 config.js\n\xe2\x94\x94\xe2\x94\x80 index.js\n```\n\n### src/api/\n\nHere is where the API endpoints are defined. Each API has its own folder.\n\n#### src/api/some-endpoint/model.js\n\nIt defines the Mongoose schema and model for the API endpoint. Any changes to the data model should be done here.\n\n#### src/api/some-endpoint/controller.js\n\nThis is the API controller file. It defines the main router middlewares which use the API model.\n\n#### src/api/some-endpoint/index.js\n\nThis is the entry file of the API. It defines the routes using, along other middlewares (like session, validation etc.), the middlewares defined in the `some-endpoint.controller.js` file.\n\n### services/\n\nHere you can put `helpers`, `libraries` and other types of modules which you want to use in your APIs.\n\n## TODO\n\n- Support optional phone authentication\n- Support optional email confirmation process\n- Support Twitter and other social login methods\n- Socket.io support\n\nPRs are welcome.\n\n## Credits\n\n[@QzSG](https://github.com/QzSG) and all [contributors](https://github.com/diegohaz/generator-rest/graphs/contributors)\n\n## License\n\nMIT \xc2\xa9 [Diego Haz](https://github.com/diegohaz)\n\n\n[npm-image]: https://badge.fury.io/js/generator-rest.svg\n[npm-url]: https://npmjs.org/package/generator-rest\n[travis-image]: https://travis-ci.org/diegohaz/rest.svg?branch=master\n[travis-url]: https://travis-ci.org/diegohaz/rest\n[coveralls-image]: https://coveralls.io/repos/diegohaz/rest/badge.svg\n[coveralls-url]: https://coveralls.io/r/diegohaz/rest\n'