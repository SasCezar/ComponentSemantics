b"# API design in Node.js with Express, v3\n> Scott Moss & Frontend Masters\n\n- [Resources](#resources)\n- [Course](#course)\n- [Exercises](#excercises)\n  - [Hello world Express](#hello-world-express)\n  - [Routing](#routing)\n  - [Create Schemas](#create-schemas)\n  - [Controllers](#controllers)\n  - [Authentication](#authentication)\n  - [Testing](#testing)\n\n## Resources\n* [Slides](https://slides.com/scotups/api-design-in-node-with-express-v3/)\n* [Nodejs](https://nodejs.org/en/)\n* [Express](https://expressjs.com/)\n* [MongoDB](https://www.mongodb.com/)\n\n## Course\nThis course has two parts, slides and excercises. The slides describe the excerices in detail. Each excercise has a starting branch and solution branch. Example `lesson-1` and `lesson-1-solution`.\n## Exercises\n### Hello world Express\n* branch - `lesson-1`\n\nIn this lesson you'll be creating a simple Express based API in node, just to get your feet wet.\n- [ ] install dependencies with yarn (prefered for version locking) or npm\n- [ ] create a route that sends back some json\n- [ ] create a route that accepts json and logs it\n- [ ] start the server\n\n### Routing\n* branch - `lesson-2`\n* test command - `yarn test-routes` or `npm run test-routes`\n\nThis exercise will have you creating routes and sub routers for our soon the be DB resources using Express routing and routers\n- [ ] create a router for the Item resource\n- [ ] create full crud routes and create placeholder controllers\n- [ ] mount router on the root server\n- [ ] ensure all tests pass by running test command\n\n### Create Schemas\n* branch - `lesson-3`\n* test command - `yarn test-models` or `npm run test-models`\n\nIn this exercise, you'll be taking what you learned about Mongoose and MongoDb to create a schema and model for the Item resource.\n\n- [ ] create a schema for the item resource\n- [ ] add the correct fields (look at test)\n- [ ] add the correct validations (look at test)\n- [ ] *extra* add compund index to ensure all tasks in a list have unique names\n- [ ] ensure all tests pass by running test command\n\n### Controllers\n* branch - `lesson-4`\n* test command - `yarn test-controllers` or `npm run test-controllers`\n\nSo far we have routes and models. Now we need to hook our routes up to our models so we can perfom CRUD on the models based on the routes + verbs. That's exactly what controllers do.\n\n- [ ] create CRUD resolvers in `utils/crud.js`\n- [ ] create controllers for the Item resources using the base crud resolvers\n- [ ] ensure all tests pass by running test command\n\n### Authentication\n* branch - `lesson-5`\n* test command - `yarn test-auth` or `npm run test-auth`\n\nIn this exercise you'll be locking down our API using JWT's.\n\n- [ ] create a signup controller\n- [ ] create a signin controller\n- [ ] create a protect middlware to lock down API routes\n- [ ] ensure all tests pass by running test command\n\n### Testing\nTHe other resources don't have any test, go ahead and write some!\n"