b'[libuhttpd]: https://github.com/zhaojh329/libuhttpd\n[libuwsc]: https://github.com/zhaojh329/libuwsc\n[libumqttc]: https://github.com/zhaojh329/libumqttc\n\n# DEPRECATED.  Replaced by [libuhttpd], [libuwsc], [libumqttc] \n\n# Evmongoose([\xe4\xb8\xad\xe6\x96\x87](https://github.com/zhaojh329/evmongoose/blob/master/README_ZH.md))([github](https://github.com/zhaojh329/evmongoose))\n\n![](https://img.shields.io/badge/license-GPLV3-brightgreen.svg?style=plastic "License")\n\n![](https://github.com/zhaojh329/image/blob/master/evmongoose.png)\n\nEvmongoose is an asynchronous, event(libev) based multi-protocol embedded networking library \nwith functions including TCP, HTTP, WebSocket, MQTT and much more. It is based on [mongoose](https://github.com/cesanta/mongoose)\nand [libev](https://github.com/kindy/libev) implementation and it\'s support Lua API.\n\nEvmongoose supports highly customized to extend your application. Before I started this project, I had never found a HTTP server\nlibrary that was satisfied with the event based framework, and those HTTP server libraries could only loop it\'sown objects and \ncould not add my own objects. For example, I want to monitor a signal or a file through the event.\n\n# Features\n* New from evmongoose\n    - Using libev programming \n\t- Highly customized to extend your application based on libev\n\t- Lua API(except wrapper for evmongoose and additional include frequently-used posix C API)\n\n* Inherited from mongoose\n\t- plain TCP, plain UDP, SSL/TLS (over TCP, one-way or two-way)\n\t- Alternative openssl and mbedtls\n\t- HTTP client, HTTP server\n\t- HTTP File Upload\n\t- Proxy\n\t- WebSocket client, WebSocket server\n\t- MQTT client, MQTT broker\n\t- CoAP client, CoAP server\n\t- DNS client, DNS server, async DNS resolver\n\t- Url Rewrite\n\n# [Example](https://github.com/zhaojh329/evmongoose/blob/master/example)\n* [simplest web](https://github.com/zhaojh329/evmongoose/blob/master/example/simplest_web.c)\n* [simplest web on ssl](https://github.com/zhaojh329/evmongoose/blob/master/example/simplest_web_ssl.c)\n* [http client](https://github.com/zhaojh329/evmongoose/blob/master/example/http_client.c)\n* [async DNS resolver](https://github.com/zhaojh329/evmongoose/blob/master/example/async_dns_resolver.c)\n* [Lua](https://github.com/zhaojh329/evmongoose/blob/master/example/lua)\n\n# How To Compile\n## For Ubuntu\n### Install dependency Libraries\n* libev-dev libssl-dev lua5.1 liblua5.1-0-dev lua-zlib\n\n\t\tsudo apt install libev-dev libssl-dev lua5.1 liblua5.1-0-dev lua-zlib\n\n* lua-ev\n\n\t\tgit clone https://github.com/brimworks/lua-ev.git\n\t\tcd lua-ev\n\t\tcmake . -DINSTALL_CMOD=$(lua -e "for k in string.gmatch(package.cpath .. \\";\\", \\"([^;]+)/..so;\\") do if k:sub(1,1) == \\"/\\" then print(k) break end end")\n\t\tmake && sudo make install\n    \n### Install Evmongoose(HTTPS Support Default)\n    git clone https://github.com/zhaojh329/evmongoose.git\n    cd evmongoose\n    mkdir build\n    cd build\n    cmake ../\n    make && sudo make install\n\n### Install Evmongoose(Disable HTTPS Support)\n    git clone https://github.com/zhaojh329/evmongoose.git\n    cd evmongoose\n    mkdir build\n    cd build\n    cmake ../ -DHTTPS_SUPPORT=OFF\n    make && sudo make install\n\n## For OpenWRT/LEDE\n\tgit clone https://github.com/zhaojh329/lua-ev-openwrt.git\n\tcp -r lua-ev-openwrt openwrt_dir/package/lua-ev\n\t\n\tgit clone https://github.com/zhaojh329/evmongoose.git\n\tcp -r evmongoose/openwrt openwrt_dir/package/evmongoose\n\t\n\tcd openwrt_dir\n\t./scripts/feeds update -a\n\t./scripts/feeds install -a\n\t\n\tmake menuconfig\n\tLibraries  --->\n\t    Networking  --->\n\t        <*> evmongoose\n\t            Configuration  --->\n\t                SSl (mbedtls)  --->\n\t\n\tmake package/evmongoose/compile V=s\n\n## For General embedded environment\n### [First, cross compile Lua](https://github.com/zhaojh329/lua-5.1.5-mod)\n\n### Cross compile lib-ev\n\tgit clone https://github.com/kindy/libev.git\n\tcd libev/src\n\tsh ./autogen.sh\n\texport PATH=/home/zjh/lede/staging_dir/toolchain-mipsel_24kc_gcc-5.4.0_musl/bin:$PATH\n\t./configure --host=mipsel-openwrt-linux --prefix=`pwd`/obj\n\tmake && make install\n\t\n### Cross compile Lua-ev\n\tgit clone https://github.com/brimworks/lua-ev.git\n\tcd lua-ev\n\texport PATH=/home/zjh/lede/staging_dir/toolchain-mipsel_24kc_gcc-5.4.0_musl/bin:$PATH\n\t\n\t# xxxxx is your cross compiler with directories\n\tcmake . -DCMAKE_C_COMPILER=mipsel-openwrt-linux-gcc -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=BOTH -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY -DCMAKE_FIND_ROOT_PATH=xxxxx\n\tmake\n\t\n### Cross compile evmongoose\n\tgit clone https://github.com/zhaojh329/evmongoose.git\n    cd evmongoose\n\texport PATH=/home/zjh/lede/staging_dir/toolchain-mipsel_24kc_gcc-5.4.0_musl/bin:$PATH\n\t\n\t# xxxxx is your cross compiler with directories\n\tcmake . -DCMAKE_C_COMPILER=mipsel-openwrt-linux-gcc -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=BOTH -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY -DCMAKE_FIND_ROOT_PATH=xxxxx\n\tmake\n\t\n# C API reference manual\nEvmongoose dose not change the usage of API in mongoose and libev, \nso please refer to the API Manual of [mongoose](https://docs.cesanta.com/mongoose/master) and libev.\nOnly one thing to notice is that mg_mgr_poll is no longer invoked when using evmongoose.\n\nIn addition, evmongoose added a new API: mg_mgr_set_loop, which is used to set libev\'s loop for Mgr.\nIf the function is not called, the Mgr will use the default loop:EV_DEFAULT.\n\n# [Lua API reference manual](https://github.com/zhaojh329/evmongoose/wiki/Lua-API-reference-manual)\n\n# How To Contribute\nFeel free to create issues or pull-requests if you have any problems.\n\n**Please read [contributing.md](https://github.com/zhaojh329/evmongoose/blob/master/contributing.md)\nbefore pushing any changes.**\n\n# Thanks for the following project\n* [mongoose](https://github.com/cesanta/mongoose)\n* [libev](https://github.com/kindy/libev)\n* [lua-ev](https://github.com/brimworks/lua-ev)\n* [lua-mongoose](https://github.com/shuax/lua-mongoose)\n\n# If the project is helpful to you, please do not hesitate to star. Thank you!\n'