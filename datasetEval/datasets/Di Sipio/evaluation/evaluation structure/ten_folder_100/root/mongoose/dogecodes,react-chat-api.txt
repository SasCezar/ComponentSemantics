b'<p align="center">\n    <img src="https://user-images.githubusercontent.com/3459374/36045604-e2de52b6-0dde-11e8-9b44-50bebc7fa82e.png" alt="DogeCodes">\n</p>\n\n# Chat API\n\n> API for chat application for DogeCodes React course.\n\nThis is a simple API server that implements a logic required to correct work of DogeCodes React Chat application.\n\n## Requirements\n\nTo run this server localy you need to have these requirements:\n\n- [Node.js](https://nodejs.org)\n- [MongoDB](https://www.mongodb.com/download-center#community)\n\n## Installations\n\nUse following commands to run this API-server localy:\n\n```zsh\ngit clone https://github.com/dogecodes/react-chat-api.git\ncd react-chat-api\nnpm install\nnpm run start:dev # or `npm start` for production\n```\n\n**Note:** Don\'t forget to start `mongod` for connection to database.\n\n## API\n\nCurrent version of API is `v1`, so you need to specify the version of API before every route. For example:\n\n```\nhttp://localhost:8000/v1/users/me\nhttp://localhost:8000/v1/chats\n```\n\n### HTTP\n\nHere\'s the map of API\'s HTTP routes:\n\n- `/` \xe2\x80\x94 routes related to authentication.\n  - `/signup` **POST** \xe2\x80\x94 create new user with `username` and `password`.\n  - `/login` **POST** \xe2\x80\x94 log user in with `username` and `password`.\n  - `/logout` **GET** \xe2\x80\x94 log out active user.\n- `/users` \xe2\x80\x94 routes related to users.\n  - `/users` **GET** \xe2\x80\x94 retrieve data about all users.\n  - `/users/me` **GET** \xe2\x80\x94 retrieve my user\'s data.\n  - `/users/me` **POST** \xe2\x80\x94 update my user\'s information (`username`, `firstName`, `lastName` and `city`).\n  - `/users/:id` **GET** \xe2\x80\x94 retrieve information about user with specific `:id`.\n- `/chats` \xe2\x80\x94 routes related to chats.\n  - `/chats` **GET** \xe2\x80\x94 retrieve information about all chats.\n  - `/chats` **POST** \xe2\x80\x94 create new chat with specified `title`.\n  - `/chats/my` **GET** \xe2\x80\x94 get list of all user\'s chats.\n  - `/chats/:id` **GET** \xe2\x80\x94 get chat\'s information with messages by specific chat\'s `:id`.\n  - `/chats/:id` **POST** \xe2\x80\x94 send new message to chat with specific `:id`.\n  - `/chast/:id` **DELETE** \xe2\x80\x94 delete chat with specific `:id`. Only creator of the chat can delete it.\n  - `/chats/:id/join` **GET** \xe2\x80\x94 join chat with specific `:id`.\n  - `/chats/:id/leave` **GET** \xe2\x80\x94 leave chat with specific `:id`.\n\nIf you\'re using [Insomnia](https://insomnia.rest/) for debugging APIs, you can download a workspace backup:\n\n[**Download .zip**](https://github.com/dogecodes/react-chat-api/files/1713340/backup.zip)\n\n### Sockets\n\nThis API also emmits and listens some [socket.io](https://socket.io/) events.\n\nSockets connection requires authentication with access-token. Here\'s an example of establishing sockets connection:\n\n```js\nimport SocketIOClient from \'socket.io-client\';\n\nsocket = SocketIOClient(\'path/to/api\', {\n  query: {\n    token: \'...your access-token here...\',\n  },\n});\n```\n\nHere\'s the list of events:\n\n#### Emmiting\n\n- `new-message` \xe2\x80\x94 emmited when someone sends new message to specific chat.\n- `new-chat` \xe2\x80\x94 emmited when someone creates new chat.\n- `deleted-chat` \xe2\x80\x94 emmited when someone deletes a chat.\n\n#### Listening\n\n- `connection` \xe2\x80\x94 connection of socket.io client.\n- `mount-chat` \xe2\x80\x94 mount a client to listen for messages in chat with specific `:chatId`.\n- `unmount-chat` \xe2\x80\x94 unmout a client from listening for messages in chat with specific `:chatId`.\n- `send-message` \xe2\x80\x94 send message with `content` to chat with\n\n## License\n\nMIT \xc2\xa9 [Denys Dovhan](https://denysdovhan.com)\n'