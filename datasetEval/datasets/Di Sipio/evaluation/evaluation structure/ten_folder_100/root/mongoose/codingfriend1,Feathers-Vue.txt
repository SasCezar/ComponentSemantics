b"# Feathers-Vue\n\n> A Vue 2 and FeathersJS 2 fullstack app with authentication, email verification, and email support.&#34;\n\n## About\n\nThis project uses [Feathers](http://feathersjs.com). An open source web framework for building modern real-time applications and Vue 2 with Server Side Rendering.\n\nThis project is not finished but if you are can be ready to use if you are content with what it offers.\n\nFeatures\n  - SASS\n  - Stylus\n  - Pug\n  - ES6, ES7, and ES8\n  - Webpack\n  - Vue Stash - For Redux Store\n  - Bootstrap\n  - Lodash\n  - jQuery\n  - FontAwesome\n  - Validate client side data with mongoose schemas\n\n## Getting Started\n\nGetting up and running is as easy as 1, 2, 3, 4.\n\nThere are multiple ways to start/develop the app.\n\n### Develop with docker\nDon't install node_modules locally\n\n1. Create a `environment-dev.env` and `environment.env` file to hold your environment variables. These files are ignored by git. You'll want a DATABASE_URL and you gmail info for email verification\n\n  ```\n  DATABASE_URL=mongodb://db/feathersvuedevelopment\n  COMPLAINT_EMAIL=your_email@gmail.com\n  GMAIL=your_email@gmail.com\n  GMAIL_PASSWORD=your_pass_password\n  ```\n\n  _See [How to set an app password](https://support.google.com/accounts/answer/185833)_\n\n2. Run npm start\n\n  ```\n  npm start\n  ```\n2. To see production build locally\n  \n  ```\n  npm run build-qa\n  npm run qa\n  ```\n\n3. To switch back to development use \n\n  ```\n  npm run build-dev\n  npm start\n  ```\n\nSwitching contexts between production and development requires a full docker build with no cache.\n\n\n### Develop without docker\n\n1. Make sure you have [NodeJS](https://nodejs.org/) and [npm](https://www.npmjs.com/) installed.\n2. Install your dependencies\n\n    ```\n    cd path/to/Feathers-Vue; npm install\n    ```\n3. Start your app locally\n\n    ```\n    mongod\n    ```\n\n    ```\n    npm run dev\n    ```\n\n4. In production run\n\n    ```\n    npm run build\n    npm run production\n    ```\n    \n\nIf you want emails to work using gmail add the following environment variables\n  ```\n  export GMAIL=yourgmailaccount@gmail.com\n  export GMAIL_PASS=yourpassword or app-password\n  ```\n_See [How to set an app password](https://support.google.com/accounts/answer/185833)_\n\n## Testing\n\nSimply run `npm test` and all your tests in the `test/` directory to run server side unit test or run  `npm run integration` to run client side side tests.\n\n## Scaffolding\n\nFeathers has a powerful command line interface. Here are a few things it can do:\n\n```\n$ npm install -g feathers-cli             # Install Feathers CLI\n\n$ feathers generate service               # Generate a new Service\n$ feathers generate hook                  # Generate a new Hook\n$ feathers generate model                 # Generate a new Model\n$ feathers help                           # Show all commands\n```\n\n## Help\n\nFor more information on all the things you can do with Feathers visit [docs.feathersjs.com](http://docs.feathersjs.com).\n\n## Looking for mobile?\nI'm working on a cordova starter with feathers 2, Vue 2, and Framework 7. Visit the `cordova` branch of this repo.\n\n[Cordova Branch](https://github.com/codingfriend1/Feathers-Vue/tree/cordova)\n\n## Gitlab Auto Deployment\n1. Create a digitalocean instance from using the one-click docker instance.\n2. ssh into the instance and run\n  ```\n    sudo apt-get update\n    sudo apt-get upgrade\n    sudo apt-get -y install python-pip\n    sudo pip install docker-compose\n  ```\n3. Edit `sshd_config`\n\n  ```\n    nano /etc/ssh/sshd_config\n  ```\n\n4. At the bottom of the file change `PasswordAuthentication` \n\n  ```\n    PasswordAuthentication yes\n  ```\n5. Run `reload ssh`\n6. Set the secret environment variables in gitlab\n  \n  ```\n    DATABASE_URL=mongodb://db/feathersvue\n    DEPLOYMENT_SERVER_IP=your_ip_address\n    DEPLOYMENT_SERVER_PASS=your_user_password\n    DEPLOYMENT_SERVER_USER=your_server_user\n  ```\n7. Update `docker-compose.autodeploy.yml` web image to point to your hosted image.\n8. Update `gitlab-ci.yml` in the `only` sections to only run on the branches you want to deploy from.\n9. Push changes in git to gitlab.\n\n## Breaking Changes\n\n  - Removed mongoose validation from client side and replaced with Yup.\n  - Reconstructed server-side rendering to use updated instructions in vuejs.\n  - Moved server-entry file into app.\n\n## License\n\nCopyright (c) 2016\n\nLicensed under the [MIT license](LICENSE).\n"