b'### MERN + Passport.js\n> example MERN stack application that uses authentication\n\n* Mongo, Express, React, Node (MERN) + Passport.js for managing authentication\n* This project was bootstrapped with [Create React App](https://github.com/facebookincubator/create-react-app).\n\n## Demo\n![demo gif](./_screenshots/mern_passport_demo.gif)\n\nView the live version of this app here:\n[https://mern-passport.herokuapp.com/](https://mern-passport.herokuapp.com/)\n\n## Project Structure\n```\n|-- server/\n|  |-- server.js                            // The entry point for running the backend server locally, and main server for production\n|  |-- passport/                             // Configuration files used to connect to different machines or set settings\n|     |-- index.js                     // Overloads the passport object and defines serialize and deserialize\n|     |-- localStrategy.js            // Defines a local strategy\n|     |-- googleStrategy.js           // Defines google OAuth stratgey\n|     ....\n|  |-- db/                             \n|     |-- index.js                  // Configures the connection to the database\n|     |-- models/                   // represents data from our database, and defines schemas for each collection\n|        |-- user.js                // Schema for the User collection\n| -- src/                           // Entry for the React client side application\n```\n\n## Note\n* In order to set the google authentication up, you must register your app @ [https://console.developers.google.com](https://console.developers.google.com) & set `GOOGLE_CLIENT_ID` & `GOOGLE_CLIENT_SECRET` as environmental variables\n* In development mode (i.e. `npm run dev`), OAuth google callback is not being proxied to the google servers. Therefore in order to test the google OAuth on your local machine do the following:\n1) `npm run build`\n2) `npm run prod`\n'