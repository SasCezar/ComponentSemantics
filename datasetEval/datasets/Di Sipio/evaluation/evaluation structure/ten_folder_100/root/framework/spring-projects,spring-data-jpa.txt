b'image:https://spring.io/badges/spring-data-jpa/ga.svg[Spring Data JPA,link=https://projects.spring.io/spring-data-jpa/#quick-start]\nimage:https://spring.io/badges/spring-data-jpa/snapshot.svg[Spring Data JPA,link=https://projects.spring.io/spring-data-jpa/#quick-start]\n\n= Spring Data JPA image:https://jenkins.spring.io/buildStatus/icon?job=spring-data-jpa%2Fmaster&subject=Build[link=https://jenkins.spring.io/view/SpringData/job/spring-data-jpa/] https://gitter.im/spring-projects/spring-data[image:https://badges.gitter.im/spring-projects/spring-data.svg[Gitter]]\n\nSpring Data JPA, part of the larger https://projects.spring.io/spring-data[Spring Data] family, makes it easy to easily implement JPA based repositories.\nThis module deals with enhanced support for JPA based data access layers.\nIt makes it easier to build Spring-powered applications that use data access technologies.\n\nImplementing a data access layer of an application has been cumbersome for quite a while.\nToo much boilerplate code has to be written to execute simple queries as well as perform pagination, and auditing.\nSpring Data JPA aims to significantly improve the implementation of data access layers by reducing the effort to the amount that\xe2\x80\x99s actually needed.\nAs a developer you write your repository interfaces, including custom finder methods, and Spring will provide the implementation automatically.\n\n== Features\n\n* Implementation of CRUD methods for JPA Entities\n* Dynamic query generation from query method names\n* Transparent triggering of JPA NamedQueries by query methods\n* Implementation domain base classes providing basic properties\n* Support for transparent auditing (created, last changed)\n* Possibility to integrate custom repository code\n* Easy Spring integration with custom namespace\n\n== Code of Conduct\n\nThis project is governed by the link:CODE_OF_CONDUCT.adoc[Spring Code of Conduct]. By participating, you are expected to uphold this code of conduct. Please report unacceptable behavior to spring-code-of-conduct@pivotal.io.\n\n== Getting Started\n\nHere is a quick teaser of an application using Spring Data Repositories in Java:\n\n[source,java]\n----\npublic interface PersonRepository extends CrudRepository<Person, Long> {\n\n  List<Person> findByLastname(String lastname);\n\n  List<Person> findByFirstnameLike(String firstname);\n}\n\n@Service\npublic class MyService {\n\n  private final PersonRepository repository;\n\n  public MyService(PersonRepository repository) {\n    this.repository = repository;\n  }\n\n  public void doWork() {\n\n    repository.deleteAll();\n\n    Person person = new Person();\n    person.setFirstname("Oliver");\n    person.setLastname("Gierke");\n    repository.save(person);\n\n    List<Person> lastNameResults = repository.findByLastname("Gierke");\n    List<Person> firstNameResults = repository.findByFirstnameLike("Oli*");\n }\n}\n\n@Configuration\n@EnableJpaRepositories("com.acme.repositories")\nclass AppConfig {\n\n  @Bean\n  public DataSource dataSource() {\n    return new EmbeddedDatabaseBuilder().setType(EmbeddedDatabaseType.H2).build();\n  }\n\n  @Bean\n  public JpaTransactionManager transactionManager(EntityManagerFactory emf) {\n    return new JpaTransactionManager(emf);\n  }\n\n  @Bean\n  public JpaVendorAdapter jpaVendorAdapter() {\n    HibernateJpaVendorAdapter jpaVendorAdapter = new HibernateJpaVendorAdapter();\n    jpaVendorAdapter.setDatabase(Database.H2);\n    jpaVendorAdapter.setGenerateDdl(true);\n    return jpaVendorAdapter;\n  }\n\n  @Bean\n  public LocalContainerEntityManagerFactoryBean entityManagerFactory() {\n    LocalContainerEntityManagerFactoryBean lemfb = new LocalContainerEntityManagerFactoryBean();\n    lemfb.setDataSource(dataSource());\n    lemfb.setJpaVendorAdapter(jpaVendorAdapter());\n    lemfb.setPackagesToScan("com.acme");\n    return lemfb;\n  }\n}\n----\n\n=== Maven configuration\n\nAdd the Maven dependency:\n\n[source,xml]\n----\n<dependency>\n  <groupId>org.springframework.data</groupId>\n  <artifactId>spring-data-jpa</artifactId>\n  <version>${version}.RELEASE</version>\n</dependency>\n----\n\nIf you\'d rather like the latest snapshots of the upcoming major version, use our Maven snapshot repository and declare the appropriate dependency version.\n\n[source,xml]\n----\n<dependency>\n  <groupId>org.springframework.data</groupId>\n  <artifactId>spring-data-jpa</artifactId>\n  <version>${version}.BUILD-SNAPSHOT</version>\n</dependency>\n\n<repository>\n  <id>spring-libs-snapshot</id>\n  <name>Spring Snapshot Repository</name>\n  <url>https://repo.spring.io/libs-snapshot</url>\n</repository>\n----\n\n== Getting Help\n\nHaving trouble with Spring Data? We\xe2\x80\x99d love to help!\n\n* Check the\nhttps://docs.spring.io/spring-data/jpa/docs/current/reference/html/[reference documentation], and https://docs.spring.io/spring-data/jpa/docs/current/api/[Javadocs].\n* Learn the Spring basics \xe2\x80\x93 Spring Data builds on Spring Framework, check the https://spring.io[spring.io] web-site for a wealth of reference documentation.\nIf you are just starting out with Spring, try one of the https://spring.io/guides[guides].\n* If you are upgrading, check out the https://docs.spring.io/spring-data/jpa/docs/current/changelog.txt[changelog] for "`new and noteworthy`" features.\n* Ask a question - we monitor https://stackoverflow.com[stackoverflow.com] for questions tagged with https://stackoverflow.com/tags/spring-data[`spring-data-jpa`].\nYou can also chat with the community on https://gitter.im/spring-projects/spring-data[Gitter].\n* Report bugs with Spring Data JPA at https://jira.spring.io/browse/DATAJPA[jira.spring.io/browse/DATAJPA].\n\n== Reporting Issues\n\nSpring Data uses JIRA as issue tracking system to record bugs and feature requests. If you want to raise an issue, please follow the recommendations below:\n\n* Before you log a bug, please search the\nhttps://jira.spring.io/browse/DATAJPA[issue tracker] to see if someone has already reported the problem.\n* If the issue doesn\xe2\x80\x99t already exist, https://jira.spring.io/browse/DATAJPA[create a new issue].\n* Please provide as much information as possible with the issue report, we like to know the version of Spring Data that you are using and JVM version.\n* If you need to paste code, or include a stack trace use JIRA `{code}\xe2\x80\xa6{code}` escapes before and after your text.\n* If possible try to create a test-case or project that replicates the issue. Attach a link to your code or a compressed file containing your code.\n\n== Building from Source\n\nYou don\xe2\x80\x99t need to build from source to use Spring Data (binaries in https://repo.spring.io[repo.spring.io]), but if you want to try out the latest and greatest, Spring Data can be easily built with the https://github.com/takari/maven-wrapper[maven wrapper].\nYou also need JDK 1.8.\n\n[source,bash]\n----\n $ ./mvnw clean install\n----\n\nIf you want to build with the regular `mvn` command, you will need https://maven.apache.org/run-maven/index.html[Maven v3.5.0 or above].\n\n_Also see link:CONTRIBUTING.adoc[CONTRIBUTING.adoc] if you wish to submit pull requests, and in particular please sign the https://cla.pivotal.io/sign/spring[Contributor\xe2\x80\x99s Agreement] before your first non-trivial change._\n\n=== Building reference documentation\n\nBuilding the documentation builds also the project without running tests.\n\n[source,bash]\n----\n $ ./mvnw clean install -Pdistribute\n----\n\nThe generated documentation is available from `target/site/reference/html/index.html`.\n\n== Guides\n\nThe https://spring.io/[spring.io] site contains several guides that show how to use Spring Data step-by-step:\n\n* https://spring.io/guides/gs/accessing-data-jpa/[Accessing Data with JPA]: Learn how to work with JPA data persistence using Spring Data JPA.\n* https://spring.io/guides/gs/accessing-jpa-data-rest/[Accessing JPA Data with REST] is a guide to creating a REST web service exposing data stored with JPA through repositories.\n\n== Examples\n\n* https://github.com/spring-projects/spring-data-examples/[Spring Data Examples] contains example projects that explain specific features in more detail.\n\n== License\n\nSpring Data JPA is Open Source software released under the https://www.apache.org/licenses/LICENSE-2.0.html[Apache 2.0 license].\n'