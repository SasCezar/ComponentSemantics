b'<p align="center"><a href="https://www.wallaroolabs.com/"><img src="wallaroo-logo.png" alt="WallarooLabs logo" width="400"/></a></p>\n<h2 align="center">Build and scale real-time applications as easily as writing a script</h2>\n\n---\n[![CircleCI](https://circleci.com/gh/WallarooLabs/wallaroo.svg?style=shield)](https://circleci.com/gh/WallarooLabs/wallaroo)\n[![GitHub license](https://img.shields.io/badge/license-apache%202-blue.svg)][wallaroo-license-readme]\n[![GitHub version](https://badge.fury.io/gh/WallarooLabs%2Fwallaroo.svg)](http://badge.fury.io/gh/WallarooLabs%2Fwallaroo)\n[![IRC][irc-badge]][irc-link]\n[![Groups.io][group-badge]][group-link]\n\nA fast, stream-processing framework. Wallaroo makes it easy to react to data in real-time. By eliminating infrastructure complexity, going from prototype to production has never been simpler.\n\n## What is Wallaroo?\n\nWhen we set out to build Wallaroo, we had several high-level goals in mind:\n\n- Create a dependable and resilient distributed computing framework\n- Take care of the complexities of distributed computing "plumbing," allowing developers to focus on their business logic\n- Provide high-performance & low-latency data processing\n- Be portable and deploy easily (i.e., run on-prem or any cloud)\n- Manage in-memory state for the application\n- Allow applications to scale as needed, even when they are live and up-and-running\n\nYou can learn more about [Wallaroo][home-page] from our ["Hello Wallaroo!" blog post][hello-wallaroo-post] and the [Wallaroo overview video][overview-video].\n\n### What makes Wallaroo unique\n\nWallaroo is a little different than most stream processing tools. While most require the JVM, Wallaroo can be deployed as a separate binary. This means no more jar files. Wallaroo also isn\'t locked to just using [Kafka](kafka-link) as a source, use any source you like. Application logic can be written in Python 2, Python 3, or Pony.\n\n## Getting Started\n\nWallaroo can either be installed via [Docker, Vagrant][docker-link] or (on Linux) via our handy [Wallaroo Up command][wally-up].\n\nAs easy as:\n\n```sh\ndocker pull wallaroo-labs-docker-wallaroolabs.bintray.io/release/wallaroo:latest\n```\n\nCheck out our [installation options][installation-options] page to learn more.\n\n## Usage\n\nOnce you\'ve installed Wallaroo, Take a look at some of our examples. A great place to start are our [word_count][word_count] or [market spread][market-spread] examples in [Python](python-examples).\n\n```python\n"""\nThis is a complete example application that receives lines of text and counts each word.\n"""\nimport string\nimport struct\nimport wallaroo\n\ndef application_setup(args):\n    in_name, in_host, in_port = wallaroo.tcp_parse_input_addrs(args)[0]\n    out_host, out_port = wallaroo.tcp_parse_output_addrs(args)[0]\n\n    lines = wallaroo.source("Split and Count",\n                        wallaroo.TCPSourceConfig(in_name, in_host, in_port,\n                            decode_line))\n    pipeline = (lines\n        .to(split)\n        .key_by(extract_word)\n        .to(count_word)\n        .to_sink(wallaroo.TCPSinkConfig(out_host, out_port, \n            encode_word_count)))\n\n    return wallaroo.build_application("Word Count Application", pipeline)\n\n@wallaroo.computation_multi(name="split into words")\ndef split(data):\n    punctuation = " !\\"#$%&\\\'()*+,-./:;<=>?@[\\\\]^_`{|}~"\n\n    words = []\n\n    for line in data.split("\\n"):\n        clean_line = line.lower().strip(punctuation)\n        for word in clean_line.split(" "):\n            clean_word = word.strip(punctuation)\n            words.append(clean_word)\n\n    return words\n\nclass WordTotal(object):\n    count = 0\n\n@wallaroo.state_computation(name="count word", state=WordTotal)\ndef count_word(word, word_total):\n    word_total.count = word_total.count + 1\n    return WordCount(word, word_total.count)\n\nclass WordCount(object):\n    def __init__(self, word, count):\n        self.word = word\n        self.count = count\n\n@wallaroo.key_extractor\ndef extract_word(word):\n    return word\n\n@wallaroo.decoder(header_length=4, length_fmt=">I")\ndef decode_line(bs):\n    return bs.decode("utf-8")\n\n@wallaroo.encoder\ndef encode_word_count(word_count):\n    output = word_count.word + " => " + str(word_count.count) + "\\n"\n    return output.encode("utf-8")\n```\n\n## Documentation\n\nAre you the sort who just wants to get going? Dive right into our [documentation][documentation] then! It will get you up and running with Wallaroo.\n\nMore information is also on our [blog][blog-link]. There you can find more insight into what we are working on and industry use-cases.\n\n> Wallaroo currently exists as a mono-repo. All the source that is Wallaroo is located in this repo. See [application structure][application-structure-link] for more information.\n\n## Need Help?\n\nTrying to figure out how to get started?\n\n - Check out the [FAQ][faq]\n\n - Drop us a line:\n    - [IRC][irc-link]\n    - [Mailing List][group-link]\n    - [Commercial Support][commercial-support-email]\n\n## Contributing\n\nWe welcome contributions. Please see our [Contribution Guide][contribution-guide]\n\n> For your pull request to be accepted you will need to accept our [Contributor License Agreement][cla]\n\n## License\n\nWallaroo is licensed under the [Apache version 2][apache-2-license] license.\n\n[apache-2-license]: https://www.apache.org/licenses/LICENSE-2.0\n[application-structure-link]: MONOREPO.md\n[blog-link]: https://blog.wallaroolabs.com/\n[cla]: https://gist.github.com/WallarooLabsTeam/e06d4fed709e0e7035fdaa7249bf88fb\n[commercial-support-email]: mailto:sales@wallaroolabs.com\n[contribution-guide]: CONTRIBUTING.md\n[docker-link]: https://docs.wallaroolabs.com/python-installation/\n[documentation]: https://docs.wallaroolabs.com/\n[group-badge]: https://img.shields.io/badge/mailing%20list-join%20%E2%86%92-%23551A8B.svg\n[group-link]: https://groups.io/g/wallaroo\n[hello-wallaroo-post]: https://blog.wallaroolabs.com/2017/03/hello-wallaroo/\n[home-page]: https://www.wallaroolabs.com/\n[installation-options]: https://docs.wallaroolabs.com/python-installation/\n[irc-badge]: https://img.shields.io/badge/IRC-join%20chat%20%E2%86%92-blue.svg\n[irc-link]: https://webchat.freenode.net/?channels=#wallaroo\n[kafka-link]: https://kafka.apache.org/\n[word_count]: examples/python/word_count/\n[market-spread]: examples/python/market_spread/\n[overview-video]: https://vimeo.com/234753585\n[python-examples]: examples/python/\n[reverse]: examples/python/reverse/\n[survey-link]: https://wallaroolabs.typeform.com/to/HS6azY?source=wallaroo_readme\n[wallaroo-license-readme]: #license\n[wally-up]: https://docs.wallaroolabs.com/python-installation/python-wallaroo-up-installation-guide/\n[faq]: https://www.wallaroolabs.com/faq\n'