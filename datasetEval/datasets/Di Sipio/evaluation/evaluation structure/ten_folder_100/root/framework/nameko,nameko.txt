b'Nameko\n======\n\n.. image:: https://secure.travis-ci.org/nameko/nameko.svg?branch=master\n   :target: http://travis-ci.org/nameko/nameko\n\n*[nah-meh-koh]*\n\n.. pull-quote ::\n\n    A microservices framework for Python that lets service developers concentrate on application logic and encourages testability.\n\n\nA nameko service is just a class:\n\n.. code-block:: python\n\n    # helloworld.py\n\n    from nameko.rpc import rpc\n\n    class GreetingService:\n        name = "greeting_service"\n\n        @rpc\n        def hello(self, name):\n            return "Hello, {}!".format(name)\n\n\nYou can run it in a shell:\n\n.. code-block:: shell\n\n    $ nameko run helloworld\n    starting services: greeting_service\n    ...\n\nAnd play with it from another:\n\n.. code-block:: pycon\n\n    $ nameko shell\n    >>> n.rpc.greeting_service.hello(name="\xe3\x83\x8a\xe3\x83\xa1\xe3\x82\xb3")\n    \'Hello, \xe3\x83\x8a\xe3\x83\xa1\xe3\x82\xb3!\'\n\n\nFeatures\n--------\n\n* AMQP RPC and Events (pub-sub)\n* HTTP GET, POST & websockets\n* CLI for easy and rapid development\n* Utilities for unit and integration testing\n\n\nGetting Started\n---------------\n\n* Check out the `documentation <http://nameko.readthedocs.io>`_.\n\n\nSupport\n-------\n\nFor help, comments or questions, please go to <https://discourse.nameko.io/>.\n\n\nSecurity contact information\n----------------------------\n\nTo report a security vulnerability, please use the `Tidelift security contact <https://tidelift.com/security>`_. Tidelift will coordinate the fix and disclosure.\n\n\nContribute\n----------\n\n* Fork the repository\n* Raise an issue or make a feature request\n\n\nLicense\n-------\n\nApache 2.0. See LICENSE for details.\n'