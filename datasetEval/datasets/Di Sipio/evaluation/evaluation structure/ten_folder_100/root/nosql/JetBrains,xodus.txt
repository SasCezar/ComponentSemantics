b'# <a href="https://github.com/JetBrains/xodus/wiki"><img src="https://raw.githubusercontent.com/wiki/jetbrains/xodus/xodus.png" width=160></a>\n\n[![official JetBrains project](http://jb.gg/badges/official.svg)](https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub)\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.jetbrains.xodus/xodus-openAPI/badge.svg)](http://search.maven.org/#search%7Cga%7C1%7Corg.jetbrains.xodus%20-dnq%20-time)\n[![Last Release](https://img.shields.io/github/release-date/jetbrains/xodus.svg?logo=github)](https://github.com/jetbrains/xodus/releases/latest)\n[![TeamCity (build status)](https://img.shields.io/teamcity/http/teamcity.jetbrains.com/s/Xodus_Build.svg)](https://teamcity.jetbrains.com/viewType.html?buildTypeId=Xodus_Build&branch_Xodus=<default>&guest=1)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](http://www.apache.org/licenses/LICENSE-2.0.html)\n![Pure Java + Kotlin](https://img.shields.io/badge/100%25-java%2bkotlin-orange.svg)\n[![Stack Overflow](http://img.shields.io/:stack%20overflow-xodus-brightgreen.svg)](http://stackoverflow.com/questions/tagged/xodus)\n\nJetBrains Xodus is a transactional schema-less embedded database that is written in Java and [Kotlin](https://kotlinlang.org).\nIt was initially developed for [JetBrains YouTrack](http://jetbrains.com/youtrack), an issue tracking and project\nmanagement tool. Xodus is also used in [JetBrains Hub](https://jetbrains.com/hub), the user management platform\nfor JetBrains\' team tools, and in some internal JetBrains projects.\n\n- Xodus is transactional and fully ACID-compliant.\n- Xodus is highly concurrent. Reads are completely non-blocking due to [MVCC](https://en.wikipedia.org/wiki/Multiversion_concurrency_control) and\ntrue [snapshot isolation](https://en.wikipedia.org/wiki/Snapshot_isolation).\n- Xodus is schema-less and agile. It does not require schema migrations or refactorings.\n- Xodus is embedded. It does not require installation or administration.\n- Xodus is written in pure Java and [Kotlin](https://kotlinlang.org).\n- Xodus is free and licensed under [Apache 2.0](http://www.apache.org/licenses/LICENSE-2.0.html).\n\n## Hello Worlds!\n\nTo start using Xodus, define dependencies:\n```xml\n<!-- in Maven project -->\n<dependency>\n    <groupId>org.jetbrains.xodus</groupId>\n    <artifactId>xodus-openAPI</artifactId>\n    <version>1.3.124</version>\n</dependency>\n```\n```groovy\n// in Gradle project\ndependencies {\n    compile \'org.jetbrains.xodus:xodus-openAPI:1.3.124\'\n}\n```\nRead more about [managing dependencies](https://github.com/JetBrains/xodus/wiki/Managing-Dependencies).\n\nThere are three different ways to deal with data, which results in three different API layers: [Environments](https://github.com/JetBrains/xodus/wiki/Environments), [Entity Stores](https://github.com/JetBrains/xodus/wiki/Entity-Stores) and [Virtual File Systems](https://github.com/JetBrains/xodus/wiki/Virtual-File-Systems).\n \n### Environments\n\nAdd dependency on `org.jetbrains.xodus:xodus-environment:1.3.124`.\n\n```java\ntry (Environment env = Environments.newInstance("/home/me/.myAppData")) {\n    env.executeInTransaction(txn -> {\n        final Store store = env.openStore("Messages", StoreConfig.WITHOUT_DUPLICATES, txn);\n        store.put(txn, StringBinding.stringToEntry("Hello"), StringBinding.stringToEntry("World!"));\n    });\n}\n```\n### Entity Stores\n\nAdd dependency on `org.jetbrains.xodus:xodus-entity-store:1.3.124`.\n\n```java\ntry (PersistentEntityStore entityStore = PersistentEntityStores.newInstance("/home/me/.myAppData")) {\n    entityStore.executeInTransaction(txn -> {\n        final Entity message = txn.newEntity("Message");\n        message.setProperty("hello", "World!");\n    });\n}\n```\n### Virtual File Systems\n\nAdd dependency on `org.jetbrains.xodus:xodus-vfs:1.3.124`.\n\n```java\ntry (Environment env = Environments.newInstance("/home/me/.myAppData")) {\n    final VirtualFileSystem vfs = new VirtualFileSystem(env);\n    env.executeInTransaction(txn -> {\n        final File file = vfs.createFile(txn, "Messages");\n        try (DataOutputStream output = new DataOutputStream(vfs.writeFile(txn, file))) {\n            output.writeUTF("Hello ");\n            output.writeUTF("World!");\n        } catch (IOException e) {\n            throw new ExodusException(e);\n        }\n    });\n    vfs.shutdown();\n}\n```\n\n## Building from Source\n[Gradle](http://www.gradle.org) is used to build, test, and publish. JDK 1.8 is required. To build the project, run:\n\n    ./gradlew build\n\nTo assemble JARs and skip running tests, run:\n\n    ./gradlew assemble\n\n## Find out More\n- [Xodus wiki](https://github.com/JetBrains/xodus/wiki)\n- [Report an issue](https://youtrack.jetbrains.com/issues/XD)\n- [Stack Overflow](http://stackoverflow.com/questions/tagged/xodus)\n- [Xodus-DNQ: data definition and queries Kotlin DSL over Xodus](https://github.com/JetBrains/xodus-dnq)\n- [EntityStore browser](https://github.com/JetBrains/xodus-entity-browser)\n- [Check out the latest builds](https://teamcity.jetbrains.com/viewType.html?buildTypeId=Xodus_Build)\n'