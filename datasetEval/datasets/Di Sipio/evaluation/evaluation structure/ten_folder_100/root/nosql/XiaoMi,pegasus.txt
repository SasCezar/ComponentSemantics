b'[github-release]: https://github.com/XiaoMi/pegasus/releases\n[PacificA]: https://www.microsoft.com/en-us/research/publication/pacifica-replication-in-log-based-distributed-storage-systems/\n[pegasus-rocksdb]: https://github.com/xiaomi/pegasus-rocksdb\n[facebook-rocksdb]: https://github.com/facebook/rocksdb\n[hbase]: https://hbase.apache.org/\n[website]: https://pegasus-kv.github.io\n\n![pegasus-logo](docs/media-img/pegasus-logo.png)\n\n[![Build Status](https://travis-ci.org/XiaoMi/pegasus.svg?branch=master)](https://travis-ci.org/XiaoMi/pegasus)\n[![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg)](https://www.apache.org/licenses/LICENSE-2.0.html)\n[![Releases](https://img.shields.io/github/release/xiaomi/pegasus.svg)][github-release]\n\n**Note**: The `master` branch may be in an *unstable or even broken state* during development.\nPlease use [releases][github-release] instead of the `master` branch in order to get stable binaries.\n\nPegasus is a distributed key-value storage system which is designed to be:\n\n- **horizontally scalable** distributed using hash-based partitioning\n- **strongly consistent**: ensured by [PacificA][PacificA] consensus protocol\n- **high-performance**: using [RocksDB][pegasus-rocksdb] as underlying storage engine\n- **simple**: well-defined, easy-to-use APIs\n\nPegasus has been widely-used in XiaoMi and serves millions of requests per second.\nIt is a mature, active project. We hope to build a diverse developer and user\ncommunity and attract contributions from more people.\n\n## Background\n\nHBase was recognized as the only large-scale KV store solution in XiaoMi\nuntil Pegasus came out in 2015 to solve the problem of high latency\nof HBase because of its Java GC and RPC overhead of the underlying distributed filesystem.\n\nPegasus targets to fill the gap between Redis and HBase. As the former\nis in-memory, low latency, but does not provide a strong-consistency guarantee.\nAnd unlike the latter, Pegasus is entirely written in C++ and its write-path\nrelies merely on the local filesystem.\n\nApart from the performance requirements, we also need a storage system\nto ensure multiple-level data safety and support fast data migration\nbetween data centers, automatic load balancing, and online partition split.\n\nAfter investigating the existing storage systems in the open source world,\nwe could hardly find a suitable solution to satisfy all the requirements.\nSo the journey of Pegasus begins.\n\n## To start using Pegasus\n\nSee our documentation on [Pegasus Website][website].\n\n## Related Projects\n\nSubmodules:\n\n- [rDSN](https://github.com/xiaomi/rdsn)\n- [RocksDB](https://github.com/xiaomi/pegasus-rocksdb)\n\nClient libs:\n\n- [Java client](https://github.com/xiaomi/pegasus-java-client)\n- [Python Client](https://github.com/xiaomi/pegasus-python-client)\n- [Go Client](https://github.com/xiaomi/pegasus-go-client)\n- [Node.js Client](https://github.com/xiaomi/pegasus-nodejs-client)\n- [Scala Client](https://github.com/xiaomi/pegasus-scala-client)\n\nTest tools:\n\n- [Java YCSB](https://github.com/xiaomi/pegasus-YCSB)\n- [Go YCSB](https://github.com/xiaomi/pegasus-YCSB-go)\n\nData import/export tools:\n\n- [DataX](https://github.com/xiaomi/pegasus-datax)\n\n## Contact\n\n- Gitter: <https://gitter.im/XiaoMi/Pegasus>\n- Issues: <https://github.com/XiaoMi/pegasus/issues>\n\n## License\n\nCopyright 2015-now Xiaomi, Inc. Licensed under the Apache License, Version 2.0:\n<http://www.apache.org/licenses/LICENSE-2.0>\n'