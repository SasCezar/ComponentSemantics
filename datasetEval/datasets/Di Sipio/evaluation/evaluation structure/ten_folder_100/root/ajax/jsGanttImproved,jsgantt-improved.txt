b'[![Build Status](https://travis-ci.com/jsGanttImproved/jsgantt-improved.svg?branch=master)](https://travis-ci.com/jsGanttImproved/jsgantt-improved)\n\n\nA fully featured gantt chart component built entirely in Javascript, CSS and AJAX. It is lightweight and there is no need of external libraries or additional images. \n\n\n![Demo Image](/docs/demo.gif)\n\n\nStart using with including the files `jsgantt.js` and `jsgantt.css` that are inside `docs/` folder.\n\nOr install and use in JS \n\n`npm install jsgantt-improved`\n\nImport in your JS `import {JSGantt} from \'jsgantt-improved\';`\n\nSee the [FULL DOCUMENTATION](./Documentation.md) for more details in all features.\n\nFor **Angular** use the component [ng-gantt](https://github.com/jsGanttImproved/ng-gantt) \n\nFor **React** use the component [react-jsgantt](https://github.com/jsGanttImproved/react-jsgantt) \n\n\nFor **Vue** , see this example: https://stackblitz.com/edit/vue-jsgantt\n\n\nFor **.NET** , see this example: [.NET Documentation](./docs/DotNet.md)\n\n\n## Example\n\n\nYou can view a Solo live example at:\n\n* https://jsganttimproved.github.io/jsgantt-improved/docs/demo.html\n\nOr use a live coding example at Codenpen:\n\n* https://codepen.io/mariomol/pen/mQzBPV\n\n\n## Easy to Use\n\n```html\n<link href="jsgantt.css" rel="stylesheet" type="text/css"/>\n<script src="jsgantt.js" type="text/javascript"></script>\n\n<div style="position:relative" class="gantt" id="GanttChartDIV"></div>\n\n<script>\n\nvar g = new JSGantt.GanttChart(document.getElementById(\'GanttChartDIV\'), \'day\');\n\ng.setOptions({\n  vCaptionType: \'Complete\',  // Set to Show Caption : None,Caption,Resource,Duration,Complete,     \n  vQuarterColWidth: 36,\n  vDateTaskDisplayFormat: \'day dd month yyyy\', // Shown in tool tip box\n  vDayMajorDateDisplayFormat: \'mon yyyy - Week ww\',// Set format to dates in the "Major" header of the "Day" view\n  vWeekMinorDateDisplayFormat: \'dd mon\', // Set format to display dates in the "Minor" header of the "Week" view\n  vLang: \'en\',\n  vShowTaskInfoLink: 1, // Show link in tool tip (0/1)\n  vShowEndWeekDate: 0,  // Show/Hide the date for the last day of the week in header for daily\n  vAdditionalHeaders: { // Add data columns to your table\n      category: {\n        title: \'Category\'\n      },\n      sector: {\n        title: \'Sector\'\n      }\n    },\n  vUseSingleCell: 10000, // Set the threshold cell per table row (Helps performance for large data.\n  vFormatArr: [\'Day\', \'Week\', \'Month\', \'Quarter\'], // Even with setUseSingleCell using Hour format on such a large chart can cause issues in some browsers,\n  \n});\n\n// Load from a Json url\nJSGantt.parseJSON(\'./fixes/data.json\', g);\n\n// Or Adding  Manually\ng.AddTaskItemObject({\n  pID: 1,\n  pName: "Define Chart <strong>API</strong>",\n  pStart: "2017-02-25",\n  pEnd: "2017-03-17",\n  pPlanStart: "2017-04-01",\n  pPlanEnd: "2017-04-15 12:00",\n  pClass: "ggroupblack",\n  pLink: "",\n  pMile: 0,\n  pRes: "Brian",\n  pComp: 0,\n  pGroup: 0,\n  pParent: 0,\n  pOpen: 1,\n  pDepend: "",\n  pCaption: "",\n  pCost: 1000,\n  pNotes: "Some Notes text",\n  category: "My Category",\n  sector: "Finance"\n});\n\ng.Draw();\n\n</script>\n```\n\n## Features\n\n  * Tasks & Collapsible Task Groups\n  * Dependencies and Highlight when hover a task\n  * Edit data in gantt table with list of responsible\n  * Task Completion\n  * Table with Additional Columns\n  * Task Styling or as HTML tags\n  * Milestones\n  * Resources\n  * Costs\n  * Plan Start and End Dates\n  * Gantt with Planned vs Executed\n  * Dynamic Loading of Tasks\n  * Dynamic change of format: Hour, Day, Week, Month, Quarter\n  * Load Gantt from JSON and XML\n    * From external files (including experimental support for MS Project XML files)\n    * From JavaScript Strings\n  * Support for Internationalization \n\n## Documentation\n\nSee the [Documentation](./Documentation.md) wiki page or the included ``docs/index.html`` file for instructions on use.\n\nProject based on https://code.google.com/p/jsgantt/.\n\n\n## Want to Collaborate?\n\nIts easy to get it set:\n\n* Clone this repo\n* Install lib dependencies: `npm i` \n* Install global dependencies: `npm i -g browserify nodemon onchange` \n* Run the demo, This will start a `localhost:8080` with a live  example:  `npm start`. \n* Use `npm run watch` or do your change in `src` and restart this command refresh the changes.\n\nFor testing use `npm run test` with e2e tests.\n\nOr help us donating...\n\n[![](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=S7B43P63C5QEN)\n\n\n'