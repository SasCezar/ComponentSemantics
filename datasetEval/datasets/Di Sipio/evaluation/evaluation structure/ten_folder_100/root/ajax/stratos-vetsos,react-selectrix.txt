b'# React Selectrix\r\nA beautiful, materialized, easy to use and flexible **React Select** replacement\r\n### Demo\r\n[Check out the demo and use examples here](https://stratos-vetsos.github.io/react-selectrix/)!\r\n\r\n### Installing\r\n```\r\nnpm i --save-dev react-selectrix\r\n```\r\n\r\n### Documentation\r\nhttps://github.com/stratos-vetsos/react-selectrix/\r\n\r\n### Import to your project\r\n```\r\nimport Selectrix from "react-selectrix";\r\n```\r\n\r\n### Basic Example\r\n\r\n```javascript\r\n<Selectrix\r\n\tmultiple={true}\r\n\tmaterialize={true}\r\n\toptions={[\r\n\t\t{\r\n\t\t\tkey: "javascript",\r\n\t\t\tlabel: "Javascript"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: "go",\r\n\t\t\tlabel: "Go"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: "ruby",\r\n\t\t\tlabel: "Ruby On Rails"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: "php",\r\n\t\t\tlabel: "PHP"\r\n\t\t}\r\n\t]}\r\n\tonChange={ value => console.log( value ) }\r\n/>\r\n```\r\n\r\n## Props\r\n\r\nName  | Type | Default Value | Description\r\n--- | --- | --- | ---\r\noptions | array | [] | An array of the available options ( Objects with "key", "label" pairs and optionally "disabled" property ).\r\nmultiple | boolean | false | Whether the Select supports multiple values.\r\nsearchable | boolean | true | Whether the Select is **searchable**.\r\nmaterialize | boolean | true | Whether the style of the Select should be **Materialized** or default.\r\ndefaultValue | boolean / array / string | false | If you have preselected values use this property. Use an array of option keys for multiple selections, or key as a string for single selection.\r\ncheckBoxes | boolean | false | Set this to true if you want to render **Checkboxes** instead of list items.\r\nheight | number | 190 | The height of the dropdown.\r\nplaceHolderInside  | boolean | false | If the placeholder should be an option.\r\nplaceholder | string | Please Select | The placeholder of the Select.\r\nisOpen | boolean | false | If the Select should be rendered open.\r\narrow | boolean | true | Whether to show an arrow on Select\'s header.\r\ndisabled | boolean | false | Whether the Select should be disabled.\r\ncustomScrollbar | boolean | false | A custom scrollbar ( only for Chrome )\r\nstayOpen | boolean | false | If the Select should stay open or not.\r\ncommaSeperated | boolean | false | If you want the selected values to be a comma seperated string, turn this to "true".  ( Available only with multiple prop set to "true". )\r\nsingleLine | boolean | false | Where the selected values ( Select\'s Header ) should be contained to one line.\r\nlifo | boolean | false | **Last In First Out Mode**. The user\'s last selection, goes first. ( Available only with multiple prop set to "true". )\r\nsearchIndex | boolean | true | Enable search by both Index and Value fields\r\nselectAllButton | boolean | false | Whether a "select all button" should be visible on Select\'s header.\r\nisDropDown | boolean | true | Set this to true if you want to use the Select as a **Dropdown**. When you select an option, the Select collapses and the header continue to have the placeholder as a value.\r\ntags | boolean | false | Whether to support custom tags.\r\ncustomKeys | object / boolean | false | Pass an object to change the default option keys ( key, label ). Example Syntax: ``{ key: "url", label: "title" }`` , to change the key to "url" and the label to "title".\r\najax | boolean / object | false | Whether to enable ajax. The library supports asynchronous calls through fetch API. Available default properties of ajax object: ``{ url: \'\', headers: {}, debounce: 200, fetchOnSearch: false, q: "", nestedKey: false, searchPrompt: true, minLength: 1  }.`` You can find details for all the ajax object properties, in the next section and in our demo page.\r\nonRenderOption | function / boolean | false | Use this function to render custom option items\r\nonRenderSelection | function / boolean | false | Use this function to render custom selected items\r\nonChange | function | undefined | Use this callback to catch Select\'s change trigger.\r\nonOpen | function | undefined | Use this callback to catch Select\'s open trigger.\r\nonClose | function | undefined | Use this callback to catch Select\'s close trigger.\r\n\r\n## Ajax prop - breakdown\r\n\r\nName  | Type | Default Value | Description\r\n--- | --- | --- | ---\r\nurl | string | \'\' | The url which the Select going to fetch the available options.\r\nheaders | object | {} | Pass any headers you want to fetch api.\r\ndebounce | number | 200 | The debounce of the ajax calls in milliseconds.\r\nfetchOnSearch | boolean | false | Whether you don\'t want to have the options prepopulated, when the Select opens, but you want to query them based on user\'s search value.\r\nq | string | \'\' | This property goes alongside with fetchOnSearch property, setted to "true". Depending the REST API providing you with options, you have to change this value accordingly. e.g. "&search={q}". Wherever you use the pseudo variable {q}, the user\'s search query will injected in the final request.\r\nnestedKey | string / boolean | false | If your REST API returns the actual data in a deeper level, inside a nested key, let\'s say "articles", set nestedKey to "articles".\r\nsearchPrompt | boolean | true | This property goes alongside with fetchOnSearch property and indicates the user how many more characters should type, before the ajax search will happen.\r\nminLength | number | 1 | This property goes alongside with fetchOnSearch property and searchPrompt setted to "true". It is the min length of characters the user should type, before the ajax call search takes place.\r\n\r\n## Callbacks - breakdown\r\n\r\nName | Arguments | Description\r\n--- | --- | ---\r\nonChange | value | The selected object if the Select is single and an array of objects if the Select is multiple.\r\nonRenderOption | option, index | The option which is going to be rendered and it\'s corresponding index.\r\nonRenderSelection | selected, settings, deselect | The selected object, the Select\'s settings and a callback function to use for deselection.\r\nonOpen | N/A |\r\nonClose | N/A |\r\n\r\n### Ajax Example\r\nMany thanks to [newsapi.org](https://newsapi.org/) for their great api.\r\n[Check this example in action, in our demo page.](https://stratos-vetsos.github.io/react-selectrix/)\r\n\r\n```javascript\r\n<Selectrix\r\n\tcustomKeys={{\r\n\t\tkey: "url",\r\n\t\tlabel: "title"\r\n\t}}\r\n\tajax={{\r\n\t\turl: "https://newsapi.org/v2/everything?q=bitcoin&sortBy=publishedAt&apiKey=9342a9a707ca49c4b2da34e9ea238ea6",\r\n\t\tnestedKey: "articles"\r\n\t}}\r\n/>\r\n```\r\n\r\n### Ajax Example with fetchOnSearch\r\n[Check this example in action, in our demo page.](https://stratos-vetsos.github.io/react-selectrix/)\r\n\r\n```javascript\r\n<Selectrix\r\n\tmultiple={true}\r\n\tstayOpen={true}\r\n\tmaterialize={true}\r\n\tcustomKeys={{\r\n\t\tkey: "url",\r\n\t\tlabel: "title"\r\n\t}}\r\n\tajax={{\r\n\t\turl: "https://newsapi.org/v2/top-headlines?apiKey=9342a9a707ca49c4b2da34e9ea238ea6",\r\n\t\tfetchOnSearch: true,\r\n\t\tq: "&q={q}",\r\n\t\tnestedKey: "articles",\r\n\t\tminLength: 3,\r\n\t\tdebounce: 300\r\n\t}}\r\n/>\r\n```\r\n\r\n### Tags Example\r\n[Check this example in action, in our demo page.](https://stratos-vetsos.github.io/react-selectrix/)\r\n\r\n```javascript\r\n<Selectrix\r\n\tmultiple={true}\r\n\tmaterialize={true}\r\n\ttags={true}\r\n\toptions={[\r\n\t\t{\r\n\t\t\tkey: "hotdog",\r\n\t\t\tlabel: "Hot Dog"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: "pizza",\r\n\t\t\tlabel: "Pizza"\r\n\t\t}\r\n\t]}\r\n\tonChange={ value => console.log( value ) }\r\n/>\r\n```\r\n\r\n### Custom Render Example\r\n[Check this example in action, in our demo page.](https://stratos-vetsos.github.io/react-selectrix/)\r\n\r\n```javascript\r\n<Selectrix\r\n\tmultiple={true}\r\n\tmaterialize={true}\r\n\toptions={[\r\n\t\t{\r\n\t\t\tkey: "javascript",\r\n\t\t\tlabel: "Javascript"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: "go",\r\n\t\t\tlabel: "Go"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: "ruby",\r\n\t\t\tlabel: "Ruby On Rails"\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: "php",\r\n\t\t\tlabel: "PHP"\r\n\t\t}\r\n\t]}\r\n\tonRenderOption={onRenderOption}\r\n\tonRenderSelection={onRenderSelection}\r\n\tonChange={ value => console.log( value ) }\r\n/>\r\n\r\nconst onRenderOption = ( option, index ) => (\r\n\t<span><i className="fa fa-laptop"></i>{ option.label }</span>\r\n)\r\n\r\nconst onRenderSelection = ( selected, settings, deselect ) => (\r\n\t<span style={{ marginRight: 10, border: "1px solid #eee", padding: 5 }}>\r\n\t\t{ selected.label }\r\n\t\t<i style={{ paddingLeft: 5, cursor: "pointer" }} onClick={ deselect } className="fa fa-window-close"></i>\r\n\t</span>\r\n)\r\n```\r\n\r\n# License\r\nMIT Licensed. Stratos Vetsos.\r\n\r\n# Contributions\r\nContributions are more than welcome. Run npm install && npm start on master and you are good to go!\r\nThe CONTRIBUTING.md is going to be published soon.\r\n'