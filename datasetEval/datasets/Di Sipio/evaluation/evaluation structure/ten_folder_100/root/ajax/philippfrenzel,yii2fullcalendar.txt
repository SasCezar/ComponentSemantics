b'yii2fullcalendar\n================\nJQuery Fullcalendar Yii2 Extension\nJQuery from: http://arshaw.com/fullcalendar/\nVersion 4.0.2\nLicense MIT\n\nJQuery Documentation:\nhttp://arshaw.com/fullcalendar/docs/\nYii2 Extension by <philipp@frenzel.net>\n\nA tiny sample can be found here:\nhttp://yii2fullcalendar.beeye.org\n\n[![Latest Stable Version](https://poser.pugx.org/philippfrenzel/yii2fullcalendar/v/stable.svg)](https://packagist.org/packages/philippfrenzel/yii2fullcalendar)\n[![Build Status](https://travis-ci.org/philippfrenzel/yii2fullcalendar.svg?branch=master)](https://travis-ci.org/philippfrenzel/yii2fullcalendar)\n[![Code Climate](https://codeclimate.com/github/philippfrenzel/yii2fullcalendar.png)](https://codeclimate.com/github/philippfrenzel/yii2fullcalendar)\n[![License](https://poser.pugx.org/philippfrenzel/yii2fullcalendar/license.svg)](https://packagist.org/packages/philippfrenzel/yii2fullcalendar)\n\nInstallation\n============\nPackage is although registered at packagist.org - so you can just add one line of code, to let it run!\n\nadd the following line to your composer.json require section:\n```json\n  "philippfrenzel/yii2fullcalendar":"*",\n```\n\nor run:\n```\n$ php composer.phar require philippfrenzel/yii2fullcalendar "*"\n```\n\nAnd ensure, that you have the following plugin installed global:\n\n> php composer.phar global require "fxp/composer-asset-plugin:~1.0"\n\nChangelog\n---------\n\n17-04-2019 Updated to latest 4.0.2 Stable Version of the library\n19-01-2017 Updated to include non-standard fields\n29-11-2014 Updated to latest 2.2.3 Version of the library\n\nUsage\n=====\n\nQuickstart Looks like this:\n\n```php\n\n  $events = array();\n  //Testing\n  $Event = new \\yii2fullcalendar\\models\\Event();\n  $Event->id = 1;\n  $Event->title = \'Testing\';\n  $Event->start = date(\'Y-m-d\\TH:i:s\\Z\');\n  $Event->nonstandard = [\n    \'field1\' => \'Something I want to be included in object #1\',\n    \'field2\' => \'Something I want to be included in object #2\',\n  ];\n  $events[] = $Event;\n\n  $Event = new \\yii2fullcalendar\\models\\Event();\n  $Event->id = 2;\n  $Event->title = \'Testing\';\n  $Event->start = date(\'Y-m-d\\TH:i:s\\Z\',strtotime(\'tomorrow 6am\'));\n  $events[] = $Event;\n\n  ?>\n\n  <?= \\yii2fullcalendar\\yii2fullcalendar::widget(array(\n      \'events\'=> $events,\n  ));\n```\n\nNote, that this will only view the events without any detailed view or option to add a new event.. etc.\n\nNon-Standard fields\n===================\n\nYou can add non-standard fields via the non-standard fields array, for which you can pass any key/value pair, as described in the [Event Fields](https://fullcalendar.io/docs/event_data/Event_Object/) documentation.\n\nSo, using the Quick Start example above, you can read `field1` and `fields2` in your JavaScript using notation similar to `event.nonstandard.field1` and `event.nonstandard.field2`.\n\nAJAX Usage\n==========\nIf you wanna use ajax loader, this could look like this:\n\n# 20171023 ajaxEvents are replaced by events - pls. check fullcalendar io documentation for details\n\n```php\n<?= yii2fullcalendar\\yii2fullcalendar::widget([\n      \'options\' => [\n        \'lang\' => \'de\',\n        //... more options to be defined here!\n      ],\n      \'events\' => Url::to([\'/timetrack/default/jsoncalendar\'])\n    ]);\n?>\n```\n\nand inside your referenced controller, the action should look like this:\n\n```php\npublic function actionJsoncalendar($start=NULL,$end=NULL,$_=NULL){\n\n    \\Yii::$app->response->format = \\yii\\web\\Response::FORMAT_JSON;\n\n    $times = \\app\\modules\\timetrack\\models\\Timetable::find()->where(array(\'category\'=>\\app\\modules\\timetrack\\models\\Timetable::CAT_TIMETRACK))->all();\n\n    $events = array();\n\n    foreach ($times AS $time){\n      //Testing\n      $Event = new \\yii2fullcalendar\\models\\Event();\n      $Event->id = $time->id;\n      $Event->title = $time->categoryAsString;\n      $Event->start = date(\'Y-m-d\\TH:i:s\\Z\',strtotime($time->date_start.\' \'.$time->time_start));\n      $Event->end = date(\'Y-m-d\\TH:i:s\\Z\',strtotime($time->date_end.\' \'.$time->time_end));\n      $events[] = $Event;\n    }\n\n    return $events;\n  }\n```\n'