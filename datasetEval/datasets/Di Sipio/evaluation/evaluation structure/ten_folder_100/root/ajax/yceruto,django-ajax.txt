b'===========\ndjango-ajax\n===========\n\nFast and easy AJAX libraries for django applications.\n\n.. image:: https://travis-ci.org/yceruto/django-ajax.svg?branch=master\n    :alt: Master Build Status\n    :target: https://travis-ci.org/yceruto/django-ajax\n    \n.. image:: https://img.shields.io/pypi/v/djangoajax.svg\n    :alt: PYPI Package\n    :target: https://pypi.python.org/pypi/djangoajax\n    \n.. image:: https://img.shields.io/pypi/status/django-ajax.svg\n    :alt: PYPI Status\n    :target: https://pypi.python.org/pypi/djangoajax\n    \n.. image:: https://img.shields.io/pypi/l/djangoajax.svg\n    :alt: PYPI License\n    :target: https://pypi.python.org/pypi/djangoajax\n\nRequirements\n------------\n\n``3.x``\n\n* `python`_ >=3.5\n* `django`_ >=2.0\n\n``2.x``\n\n* `python`_ >=2.7\n* `django`_ >=1.7,<2.0\n\n.. _`python`: http://www.python.org/\n.. _`django`: https://djangoproject.com\n.. _`jQuery`: http://jquery.com\n\nInstallation\n------------\n\nInstall django-ajax in your python environment\n\n1- Download and install package:\n\n.. code:: sh\n\n    $ pip install djangoajax\n\nThrough Github:\n\n.. code:: sh\n\n    pip install -e git://github.com/yceruto/django-ajax#egg=djangoajax\n\nor simply with:\n\n.. code:: sh\n\n    $ python setup.py install\n\n2- Add ``\'django_ajax\'`` into the ``INSTALLED_APPS`` list.\n\n3- Read usage section and enjoy this feature!\n\n\nUsage\n-----\n\n@ajax Decorator\n~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from django_ajax.decorators import ajax\n\n    @ajax\n    def my_view(request):\n        do_something()\n        \nWhen the view does not return anything, you will receive this response (JSON format):\n\n.. code:: javascript\n\n    {"status": 200, "statusText": "OK", "content ": null}\n\n\n**Sending content**\n\n.. code:: python\n\n    @ajax\n    def my_view(request):\n        c = 2 + 3\n        return {\'result\': c}\n        \nThe whole result is converted into a JSON format as part of the `content\' element:\n\n.. code:: javascript\n\n    {"status": 200, "statusText": "OK", "content": {"result": 5}}\n\n\n**Combining with others decorators**\n\n.. code:: python\n\n    from django.contrib.auth.decorators import login_required\n    from django_ajax.decorators import ajax\n\n    @ajax\n    @login_required\n    def my_view(request):\n        # if the request.user is anonymous then this view not proceed \n        return {\'user_id\': request.user.id}\n        \nThe location or path of the redirection response will be given in the `content` item, \nalso the `status` and `statusText` will reflect what is going on:\n\n.. code:: javascript\n\n    {"status": 302, "statusText": "FOUND", "content": "/login"}\n\n\n**Template response**\n\n.. code:: python\n\n    from django.shortcuts import render\n    from django_ajax.decorators import ajax\n\n    @ajax\n    def my_view(request):\n        return render(request, \'home.html\')\n\nThe JSON response:\n\n.. code:: javascript\n\n    {"status": 200, "statusText": "OK", "content": "<html>...</html>"}\n\n\n**Catch exceptions**\n\n.. code:: python\n\n    @ajax\n    def my_view(request):\n        a = 23 / 0  # this line throws an exception\n        return a\n\nThe JSON response:\n\n.. code:: javascript\n\n    {"status": 500, "statusText": "INTERNAL SERVER ERROR", "content": "integer division or modulo by zero"}\n\n\nAJAXMiddleware\n~~~~~~~~~~~~~~\n\nIf you are using AJAX at all times in your project, we suggest you activate the AJAXMiddleware described below.\n\nAdd ``django_ajax.middleware.AJAXMiddleware`` to the ``MIDDLEWARE_CLASSES`` list in ``settings.py`` and all your responses will be converted to JSON whereas the request was made via AJAX, otherwise it will return a normal HttpResponse.\n\n.. caution:: If this middleware is activated you cannot use the ``@ajax`` decorator. That will cause double JSON conversion.\n\n\nAJAXMixin for class-based views\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``AJAXMixin`` is an object that call to AJAX decorator.\n\n.. code:: python\n\n    from django.views.generic import TemplateView\n    from django_ajax.mixin import AJAXMixin\n\n    class SimpleView(AJAXMixin, TemplateView):\n        template_name = \'home.html\'\n\nThe JSON response:\n\n.. code:: javascript\n\n    {"status": 200, "statusText": "OK", "content": "<html>...</html>"}\n\nEnjoy!\n'