b'# gatsby-plugin-ipfs\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Dependency status][david-dm-image]][david-dm-url] [![Dev Dependency status][david-dm-dev-image]][david-dm-dev-url]\n\n[npm-url]:https://npmjs.org/package/gatsby-plugin-ipfs\n[npm-image]:https://img.shields.io/npm/v/gatsby-plugin-ipfs.svg\n[downloads-image]:https://img.shields.io/npm/dm/gatsby-plugin-ipfs.svg\n[david-dm-url]:https://david-dm.org/moxystudio/gatsby-plugin-ipfs\n[david-dm-image]:https://img.shields.io/david/moxystudio/gatsby-plugin-ipfs.svg\n[david-dm-dev-url]:https://david-dm.org/moxystudio/gatsby-plugin-ipfs?type=dev\n[david-dm-dev-image]:https://img.shields.io/david/dev/moxystudio/gatsby-plugin-ipfs.svg\n\nAdds support for deploying [Gatsby](https://www.gatsbyjs.org/) websites to [IPFS](https://ipfs.io/) by ensuring that assets are relative.\n\n\n## Installation\n\n```sh\n$ npm install --save gatsby-plugin-ipfs\n```\n\n\n## Usage\n\nSet `prefixPath` to `__GATSBY_IPFS_PATH_PREFIX__` and include the plugin in your `gatsby-config.js` file:\n\n```js\nmodule.exports = {\n    pathPrefix: \'__GATSBY_IPFS_PATH_PREFIX__\',\n    plugins: [\n        \'gatsby-plugin-ipfs\',\n    ],\n};\n```\n\nAnd now, simply build the project with `npm run build -- --prefix-paths`. Better yet, set it by default in your `package.json`:\n\n```json\n"scripts": {\n  "build": "gatsby build --prefix-paths"\n},\n```\n\n\n## But how?\n\nIt turns out the Gatsby doesn\'t support relative paths. But I didn\'t gave up and came up with smart and ugly hacks to do so:\n\n- Adds a post-build step that iterates over files and transforms every `__GATSBY_IPFS_PATH_PREFIX__` occurrence\n- Adds a very small code snippet to every HTML page that defines the `__GATSBY_IPFS_PATH_PREFIX__` global based on the browser location\n\n\n## License\n\n[MIT License](http://opensource.org/licenses/MIT)\n'