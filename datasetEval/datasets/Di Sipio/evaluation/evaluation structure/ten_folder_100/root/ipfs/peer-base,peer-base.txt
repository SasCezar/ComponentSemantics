b"# peer-base\n\nBuild real-time collaborative DApps on top of IPFS\n\n[![Build Status](https://travis-ci.org/peer-base/peer-base.svg?branch=master)](https://travis-ci.org/peer-base/peer-base) [![Greenkeeper badge](https://badges.greenkeeper.io/peer-base/peer-base.svg)](https://greenkeeper.io/) [![made by Protocol Labs](https://img.shields.io/badge/made%20by-Protocol%20Labs-blue.svg?style=flat-square)](https://protocol.ai)\n\n\n* [Example app](examples/react-app)\n* [How to run the example app](#run-example-app)\n\n# Documentation\n\n* [Code structure](https://github.com/peer-base/peer-base/blob/master/docs/CODE-STRUCTURE.md)\n* [Protocol](https://github.com/peer-base/peer-base/blob/master/docs/PROTOCOL.md)\n* [Performance tests](https://github.com/peer-base/peer-base/blob/master/docs/PERFORMANCE-TESTS.md)\n* [Membership Simulator](https://github.com/peer-base/peer-base/blob/master/docs/MEMBERSHIP-SIM.md)\n\n## Install\n\n```bash\n$ npm install peer-base\n```\n\n## Import\n\n```js\nconst PeerBase = require('peer-base')\n```\n\n# API\n\n[API docs](docs/API.md)\n\n# Run example app\n\nClone this repo.\n\n```bash\n$ cd peer-base\n$ cd examples/react-app\n$ npm install\n```\n\nIn a different window, on the same dir, start the rendezvous server:\n\n```bash\n$ npm run start:rv\n```\n\nIn a different window, on the same dir, run the app server:\n\n```bash\n$ npm start\n```\n\nOpen [http://localhost:3000](http://localhost:3000) and test the app.\n\n# Tests\n\nClone this repo and run:\n\n```\n$ npm install\n$ npm test\n```\n\n## Testing a deployed pinner\n\nIf you want to make sure your deployed pinner is working correctly, there is a\nutility-test that you can run with `npm run test:post-deploy` that will ensure\nyour deployed pinner works correctly.\n\nFirst you need to export environment variables to ensure the assertion values\nare correct for your environment, then you can run the test. Example:\n\n```\nexport PEER_BASE_APP_NAME=peer-pad/2\nexport PEER_BASE_SWARM_ADDRESS=/dns4/localhost/tcp/9090/ws/p2p-websocket-star\nexport PEER_BASE_PINNER_ID=Qmb9WDZUnUzEmZwkbMMGi4cV65F1sqcQa49dfZy9baRBJo\nnpm run test:post-deploy\n```\n\n# Infrastructure\n\nThe infrastructure for peer-base and related applications is managed via\nhttps://github.com/peer-base/peer-base/\n\n# Debug\n\nYou can activate the debugging logs by manipulating the `DEBUG` environment variable. Example:\n\n```bash\n$ DEBUG=peer-star:* npm test\n```\n\nFor file-specific `DEBUG` values, see the source code and look for usages of the `debug` package.\n\n## Lead Maintainer\n\n[Jim Pick](https://github.com/jimpick)\n\n# Contribute\n\nPeer-base and the IPFS implementation in JavaScript is a work in progress. As such, there's a few things you can do right now to help out:\n\n  * Check out [existing issues](https://github.com/peer-base/peer-base/issues). This would be especially useful for modules in active development. Some knowledge of IPFS may be required, as well as the infrastructure behind it - for instance, you may need to read up on p2p and more complex operations like muxing to be able to help technically.\n  * **Perform code reviews**. More eyes will help (a) speed the project along, (b) ensure quality, and (c) reduce possible future bugs.\n  * **Add tests**. There can never be enough tests.\n\n## Want to hack on peer-base?\n\n[![](https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif)](https://github.com/ipfs/community/blob/master/CONTRIBUTING.md)\n\n# License\n\nMIT\n"