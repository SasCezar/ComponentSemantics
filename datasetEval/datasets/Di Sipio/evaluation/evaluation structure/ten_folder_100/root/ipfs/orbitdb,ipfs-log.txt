b'# ipfs-log\n\n[![npm](https://img.shields.io/npm/v/ipfs-log.svg)](https://www.npmjs.com/package/ipfs-log)\n[![CircleCI Status](https://circleci.com/gh/orbitdb/ipfs-log.svg?style=shield)](https://circleci.com/gh/orbitdb/ipfs-log)\n[![Gitter](https://img.shields.io/gitter/room/nwjs/nw.js.svg)](https://gitter.im/orbitdb/Lobby) [![Matrix](https://img.shields.io/badge/matrix-%23orbitdb%3Apermaweb.io-blue.svg)](https://riot.permaweb.io/#/room/#orbitdb:permaweb.io) [![Discord](https://img.shields.io/discord/475789330380488707?color=blueviolet&label=discord)](https://discord.gg/cscuf5T)\n\n\n> An append-only log on IPFS.\n\n`ipfs-log` is an immutable, operation-based conflict-free replicated data structure ([CRDT](https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type)) for distributed systems. It\'s an append-only log that can be used to model a mutable, shared state between peers in p2p applications.\n\nEvery entry in the log is saved in IPFS and each points to a hash of previous entry(ies) forming a graph. Logs can be forked and joined back together.\n\nThe module works in **Node.js** and **Browsers**.\n\n```\n           Log A                Log B\n             |                    |\n     logA.append("one")   logB.append("hello")\n             |                    |\n             v                    v\n          +-----+             +-------+\n          |"one"|             |"hello"|\n          +-----+             +-------+\n             |                    |\n     logA.append("two")   logB.append("world")\n             |                    |\n             v                    v\n       +-----------+       +---------------+\n       |"one","two"|       |"hello","world"|\n       +-----------+       +---------------+\n             |                    |\n             |                    |\n       logA.join(logB) <----------+\n             |\n             v\n+---------------------------+\n|"one","hello","two","world"|\n+---------------------------+\n```\n\n\n## Table of Contents\n\n- [Background](#background)\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n- [Tests](#tests)\n- [Benchmarking](#benchmarking)\n- [Build](#build)\n- [Contribute](#contribute)\n- [License](#license)\n\n## Background\n\nIPFS Log has a few use cases:\n\n- CRDTs\n- Database operations log\n- Feed of data\n- Track a version of a file\n- Messaging\n\nIt was originally created for, and currently used in, [orbit-db](https://github.com/orbitdb/orbit-db) - a distributed peer-to-peer database on [IPFS](https://github.com/ipfs/ipfs).\n\n## Requirements\n\n- Node.js v8.6.0 or newer (uses `...` spread syntax)\n- Preferably you should use an LTS version of node.js (even numbered 8, 10, etc)\n\n## Install\n\nThis project uses [npm](http://npmjs.com/) and [nodejs](https://nodejs.org/).\n\n```\nnpm install ipfs-log\n```\n\n## Usage\n\nSee the [API documentation](#api) and [examples](https://github.com/orbitdb/ipfs-log/tree/master/examples) for more details.\n\n### Quick Start\n\nInstall dependencies:\n\n```\nnpm install ipfs-log ipfs\n```\n\nRun a simple program:\n\n```javascript\nconst IPFS = require(\'ipfs\')\nconst Log  = require(\'ipfs-log\')\nconst IdentityProvider = require(\'orbit-db-identity-provider\')\n\nconst identity = await IdentityProvider.createIdentity({ id: \'peerid\' })\nconst ipfs = new IPFS()\nconst log  = new Log(ipfs, identity)\n\nipfs.on(\'ready\' , async () => {\n  await log.append({ some: \'data\' })\n  await log.append(\'text\'))\n  console.log(log.values.map(e => e.payload))\n})\n\n// [ { some: \'data\' }, \'text\' ]\n```\n\n### Node.js\n\nSee [examples](https://github.com/orbitdb/ipfs-log/tree/master/examples) for details.\n\n*If your platforms requires ES5-compatible JavaScript, there\'s a build in `lib/es5/`.*\n\n### Browser\n\nSee [examples/browser](https://github.com/orbitdb/ipfs-log/tree/master/examples/browser) for details.\n\n*The distribution package for browsers is located in [dist/ipfslog.min.js](https://github.com/orbitdb/ipfs-log/tree/master/dist)*\n\n*If your platforms requires ES5-compatible JavaScript, there\'s a build in `lib/es5/`.*\n\n## API\n\nSee [API Documentation](https://github.com/orbitdb/ipfs-log/tree/master/API.md) for full details.\n\n- [Log](https://github.com/orbitdb/ipfs-log/tree/master/API.md#log)\n  - [Constructor](https://github.com/orbitdb/ipfs-log/tree/master/API.md##constructor)\n    - [new Log(ipfs, identity, [{ logId, access, entries, heads, clock, sortFn }])](https://github.com/orbitdb/ipfs-log/tree/master/API.md##new-log-ipfs-id)\n  - [Properties](https://github.com/orbitdb/ipfs-log/tree/master/API.md##properties)\n    - [id](https://github.com/orbitdb/ipfs-log/tree/master/API.md##id)\n    - [values](https://github.com/orbitdb/ipfs-log/tree/master/API.md##values)\n    - [length](https://github.com/orbitdb/ipfs-log/tree/master/API.md##length)\n    - [clock](https://github.com/orbitdb/ipfs-log/tree/master/API.md##length)\n    - [heads](https://github.com/orbitdb/ipfs-log/tree/master/API.md##heads)\n    - [tails](https://github.com/orbitdb/ipfs-log/tree/master/API.md##tails)\n  - [Methods](https://github.com/orbitdb/ipfs-log/tree/master/API.md##methods)\n    - [append(data)](https://github.com/orbitdb/ipfs-log/tree/master/API.md##appenddata)\n    - [join(log)](https://github.com/orbitdb/ipfs-log/tree/master/API.md##joinlog)\n    - [toMultihash()](https://github.com/orbitdb/ipfs-log/tree/master/API.md##tomultihash)\n    - [toBuffer()](https://github.com/orbitdb/ipfs-log/tree/master/API.md##tobuffer)\n    - [toString()](https://github.com/orbitdb/ipfs-log/tree/master/API.md##toString)\n  - [Static Methods](https://github.com/orbitdb/ipfs-log/tree/master/API.md##static-methods)\n    - [Log.fromEntry()]()\n    - [Log.fromEntryCid()]()\n    - [Log.fromCID()]()\n    - [Log.fromMultihash()]()\n\n## Tests\n\nRun all tests:\n```\nnpm test\n```\n\nRun tests with js-ipfs only (default):\n```\nmocha\n```\n\nRun tests with go-ipfs only:\n```\nTEST=go mocha\n```\n\n## Benchmarking\n\nTo use the benchmark runner:\n\n```JavaScript\nnode --expose-gc benchmarks/runner/index.js -r --grep append-stress --stress-limit Infinity\n```\n\nThis will run the `append-stress` benchmarks until it is canceled. For more information, see the [Benchmarking README](./benchmarks/README.md).\n\n## Build\n\nRun the following command before you commit.\n\n```\nmake rebuild\n```\n\nThis will ensure that dependencies and built files are all based on the current code base.\n\n## Benchmarks\n\nThere\'s a benchmark suite in [benchmarks/](https://github.com/orbitdb/ipfs-log/blob/master/benchmarks) that can be run with:\n\n```\nnode benchmarks/benchmark-append.js\nnode benchmarks/benchmark-join.js\nnode benchmarks/benchmark-expand.js\n```\n\nThere\'s `append` and `join` benchmarks for browsers in [benchmarks/browser/](https://github.com/orbitdb/ipfs-log/blob/master/benchmarks/browser) which you can run by opening the `.html` files in your browser.\n\n## Contribute\n\nIf you find a bug or something is broken, let us know! PRs and [issues](https://github.com/orbitdb/ipfs-log/issues) are gladly accepted too. Take a look at the open issues, too, to see if there is anything that you could do or someone else has already done. Here are some things I know I need:\n\n### TODO\n\n- Support for payload encryption\n\n## License\n\n[MIT](LICENSE) \xc2\xa9 2016-2018 Protocol Labs Inc.,\n2016-2019 Haja Networks Oy\n'