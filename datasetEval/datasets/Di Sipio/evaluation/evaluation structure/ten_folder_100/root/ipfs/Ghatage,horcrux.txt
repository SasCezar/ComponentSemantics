b"![header](https://user-images.githubusercontent.com/3139649/31358032-a42ab7fc-ad09-11e7-973d-d0b5b0981763.png)\n\n'The Dropbox for IPFS' //  'Hide in plain sight'\n\n##### Why do I need **horcrux**?\nhorcrux is a client which can hopefully resolve some of the drawbacks IPFS has.\n\n* Data on IPFS is permanent! So you better be careful of what you put on there\n* Your data is on someone else's computer, how do you secure it?\n* IPFS can get slow and if you're uploading a huge file, it might take a while\n* A teeny tiny change to a huge file? You'll have to upload the entire file again!\n\n##### What does horcrux do?\n* horcrux uses `deduplication` to find similar patterns in a file and breaks down the file into those chunks.\n* It then encrypts those chunks and pushes them to IPFS \n* It keeps track of which encrypted chunk belongs to which file. \n* It can then recreate the file based on this info.\n\nIn this way: \n* Only chunks with updates will be pushed to IPFS, saving time and bandwidth\n* Everything that's pushed is encrypted\n\nVisual representation\n![working](https://user-images.githubusercontent.com/3139649/31358031-a428b81c-ad09-11e7-8f4c-4cd973b02391.png)\n\n\n##### This project is currently under development!\nTODO:\n- Find a more elegant way to generate and download blk and enc files without changing pyrabin\n- Refactor code to be more elegant, refactor variable names to be consistent\n- Introduce a config file which can have the encryption password and other details\n- Reintroduce UI and hook it up with the horcrux via Flask\n- Come up with unit tests\n\n\n##### Dependencies and credits\nhorcrux is written in such a way that all the dependencies it uses can be swapped out easily. However the prototype was made with the help of these fine repos:\n\n- python3\n- ipfsapi (https://ipfs.io/docs/getting-started/)\n- simple-crypt (https://github.com/andrewcooke/simple-crypt/)\n- pyrabin (https://github.com/aitjcize/pyrabin)\n- DragAndDrop UI (https://github.com/pcote/DragDropProject)\n"