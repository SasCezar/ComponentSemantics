b'# orbit-core\n\n[![npm version](https://badge.fury.io/js/orbit_.svg)](https://badge.fury.io/js/orbit_)\n[![CircleCI Status](https://circleci.com/gh/orbitdb/orbit-core.svg?style=shield)](https://circleci.com/gh/orbitdb/orbit-core)\n[![Gitter](https://img.shields.io/gitter/room/nwjs/nw.js.svg)](https://gitter.im/orbitdb/Lobby) [![Matrix](https://img.shields.io/badge/matrix-%23orbitdb%3Apermaweb.io-blue.svg)](https://riot.permaweb.io/#/room/#orbitdb:permaweb.io) [![Discord](https://img.shields.io/discord/475789330380488707?color=blueviolet&label=discord)](https://discord.gg/cscuf5T)\n\n> Communication protocol on IPFS\n\nOrbit is a serverless, distributed, p2p communication library and protocol that enables feed-based information sharing, such as real-time chat, in the [IPFS](https://ipfs.io) peer-to-peer network.\n\nThis repository is the core library of Orbit. This library is intended to be used in your Node.js or Browser applications.\n\nUsed in the various Orbit projects:\n\n- [orbit-web](https://github.com/orbitdb/orbit-web) - Orbit browser app\n- [orbit-electron](https://github.com/orbitdb/orbit-electron) - Orbit desktop app\n- [orbit-textui](https://github.com/orbitdb/orbit-textui) - Orbit terminal client\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n- [Development](#development)\n  - [Install Dependencies](#install-dependencies)\n  - [Run Tests](#run-tests)\n  - [Build Library and Distributables](#build-library-and-distributables)\n- [License](#license)\n\n## Install\n\nThis module uses [npm](https://www.npmjs.com/) and [node](https://nodejs.org/en/).\n\n```sh\nnpm install orbit_\n```\n\n## Usage\n\nSee [examples/browser/index.html](examples/browser/index.html) for a more detailed example.\n\n```javascript\n\'use strict\'\n\nconst Orbit = require(\'orbit_\')\n\nconst ipfs = new Ipfs()\n\nipfs.on(\'ready\', () => {\n  const orbit = new Orbit(ipfs)\n\n  const username = \'Example Bot\'\n  const channel = \'HelloWorld\'\n\n  orbit.events.on(\'connected\', () => {\n    console.log(`-!- Orbit connected`)\n    orbit.join(channel)\n  })\n\n  orbit.events.on(\'joined\', channelName => {\n    orbit.send(channelName, \'/me is now caching this channel\')\n    console.log(`-!- Joined #${channelName}`)\n  })\n\n  // Listen for new messages\n  orbit.events.on(\'entry\', (entry, channelName) => {\n    const post = entry.payload.value\n    console.log(`[${post.meta.ts}] &lt;${post.meta.from.name}&gt; ${post.content}`)\n  })\n\n  // Connect to Orbit network\n  orbit.connect(username).catch(e => console.error(e))\n})\n```\n\n## API\n\nSee [API documentation](https://github.com/orbitdb/orbit-core/blob/master/API.md) for full details.\n\n- [Getting Started](https://github.com/orbitdb/orbit-core/blob/master/API.md#getting-started)\n- [Constructor](https://github.com/orbitdb/orbit-core/blob/master/API.md#constructor)\n- [Properties](https://github.com/orbitdb/orbit-core/blob/master/API.md#properties)\n  - [user](https://github.com/orbitdb/orbit-core/blob/master/API.md#user)\n  - [network](https://github.com/orbitdb/orbit-core/blob/master/API.md#network)\n  - [channels](https://github.com/orbitdb/orbit-core/blob/master/API.md#channels)\n  - [peers](https://github.com/orbitdb/orbit-core/blob/master/API.md#peers)\n- [Methods](https://github.com/orbitdb/orbit-core/blob/master/API.md#methods)\n  - [connect(username)](https://github.com/orbitdb/orbit-core/blob/master/API.md#connectusername)\n  - [disconnect()](https://github.com/orbitdb/orbit-core/blob/master/API.md#disconnect)\n  - [join(channel)](https://github.com/orbitdb/orbit-core/blob/master/API.md#joinchannel)\n  - [leave(channel)](https://github.com/orbitdb/orbit-core/blob/master/API.md#leavechannel)\n  - [send(channel, message)](https://github.com/orbitdb/orbit-core/blob/master/API.md#sendchannel-message)\n  - [addFile(channel, source)](https://github.com/orbitdb/orbit-core/blob/master/API.md#addfilechannel-source)\n  - [getFile(hash)](https://github.com/orbitdb/orbit-core/blob/master/API.md#getfilehash)\n  - [getDirectory(hash)](https://github.com/orbitdb/orbit-core/blob/master/API.md#getdirectoryhash)\n\n## Development\n\n### Install Dependencies\n\n```sh\ngit clone https://github.com/orbitdb/orbit-core.git\ncd orbit-core/\nnpm install\n```\n\n### Run example development environment\n\n```sh\nnpm run dev\n```\n\n### Run Tests\n\n```sh\nnpm test\n```\n\n### Build Library and Distributables\n\n```sh\nnpm run build\n```\n\nDistributable (ES5 minified for browsers) will be located in `dist/`.\n\n## Contribute\n\nWe would be happy to accept PRs! If you want to work on something, it\'d be good to talk beforehand to make sure nobody else is working on it. You can reach us [on Gitter](https://gitter.im/orbitdb/Lobby), or in the [issues section](https://github.com/orbitdb/orbit-core/issues).\n\nWe also have **regular community calls**, which we announce in the issues in [the @orbitdb welcome repository](https://github.com/orbitdb/welcome/issues). Join us!\n\nIf you want to code but don\'t know where to start, check out the issues labelled ["help wanted"](https://github.com/orbitdb/orbit-core/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22+sort%3Areactions-%2B1-desc).\n\nFor specific guidelines for contributing to this repository, check out the [Contributing guide](CONTRIBUTING.md). For more on contributing to OrbitDB in general, take a look at the [@OrbitDB welcome repository](https://github.com/orbitdb/welcome). Please note that all interactions in [@OrbitDB](https://github.com/orbitdb) fall under our [Code of Conduct](CODE_OF_CONDUCT.md).\n\n## License\n\n[MIT](LICENSE) \xc2\xa9 2016-2019 Protocol Labs Inc., Haja Networks Oy\n'