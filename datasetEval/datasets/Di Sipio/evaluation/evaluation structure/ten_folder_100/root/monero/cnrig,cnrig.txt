b'# CNRig\n\n[![GitHub release](https://img.shields.io/github/release/cnrig/cnrig/all.svg)](https://github.com/cnrig/cnrig/releases)\n[![GitHub Release Date](https://img.shields.io/github/release-date-pre/cnrig/cnrig.svg)](https://github.com/cnrig/cnrig/releases)\n[![GitHub license](https://img.shields.io/github/license/cnrig/cnrig.svg)](https://github.com/cnrig/cnrig/blob/master/LICENSE)\n\nCNRig is a high performance CryptoNight CPU miner for Linux.\nBased on the formidable [XMRig](https://github.com/xmrig/xmrig), its distinguishing features are automatic updates and compatibility with old distributions.\n\n<img src="https://i.imgur.com/2avaSmL.png" width="586" >\n\n#### Table of contents\n* [Features](#features)\n* [Download](#download)\n* [Usage](#usage)\n* [Algorithm variations](#algorithm-variations)\n* [Compatibility](#compatibility)\n* [Common Issues](#common-issues)\n* [Other information](#other-information)\n* [Release checksums](#release-checksums)\n* [Contacts](#contacts)\n\n## Features\n* Automatic updates.\n* Binary compatible with many Linux distributions.\n* High performance.\n* Support for backup (failover) mining server.\n* CryptoNight-Lite support for AEON.\n* CryptoNight-Heavy support for SUMO.\n* Smart automatic [CPU configuration](https://github.com/xmrig/xmrig/wiki/Threads).\n* Nicehash support\n* It\'s open source software.\n\n## Download\n* Binary releases: https://github.com/cnrig/cnrig/releases\n* Git tree: https://github.com/cnrig/cnrig.git\n  * Clone with `git clone https://github.com/cnrig/cnrig.git`\n\n```\nwget -O cnrig https://github.com/cnrig/cnrig/releases/download/v0.1.5-release/cnrig-0.1.5-linux-x86_64\nchmod +x cnrig\n./cnrig\n```\n\n## Usage\nUse [config.xmrig.com](https://config.xmrig.com/xmrig) to generate, edit or share configurations.\n\n### Options\n```\n  -a, --algo=ALGO          cryptonight (default), cryptonight-lite or cryptonight-heavy\n  -o, --url=URL            URL of mining server\n  -O, --userpass=U:P       username:password pair for mining server\n  -u, --user=USERNAME      username for mining server\n  -p, --pass=PASSWORD      password for mining server\n  -t, --threads=N          number of miner threads\n  -v, --av=N               algorithm variation, 0 auto select\n  -k, --keepalive          send keepalived for prevent timeout (need pool support)\n  -r, --retries=N          number of times to retry before switch to backup server (default: 5)\n  -R, --retry-pause=N      time to pause between retries (default: 5)\n      --cpu-affinity       set process affinity to CPU core(s), mask 0x3 for cores 0 and 1\n      --cpu-priority       set process priority (0 idle, 2 normal to 5 highest)\n      --no-huge-pages      disable huge pages support\n      --no-color           disable colored output\n      --no-auto-update     disable automatic updates\n      --variant            algorithm PoW variant\n      --donate-level=N     donate level, default 5% (5 minutes in 100 minutes)\n      --user-agent         set custom user-agent string for pool\n  -B, --background         run the miner in the background\n  -c, --config=FILE        load a JSON-format configuration file\n  -l, --log-file=FILE      log all output to a file\n  -S, --syslog             use system log for output messages\n      --max-cpu-usage=N    maximum CPU usage for automatic threads mode (default 75)\n      --safe               safe adjust threads and av settings for current CPU\n      --nicehash           enable nicehash/xmrig-proxy support\n      --print-time=N       print hashrate report every N seconds\n      --api-port=N         port for the miner API\n      --api-access-token=T access token for API\n      --api-worker-id=ID   custom worker-id for API\n  -h, --help               display this help and exit\n  -V, --version            output version information and exit\n```\n\nAlso you can use configuration via config file, default **config.json**. You can load multiple config files and combine it with command line options.\n\n## Algorithm variations\n* `--av=1` For CPUs with hardware AES.\n* `--av=2` Lower power mode (double hash) of `1`.\n* `--av=3` Software AES implementation.\n* `--av=4` Lower power mode (double hash) of `3`.\n\n## Compatibility\nCNRig is compiled 100% statically and should work on a wide variety of Linux distributions, It has been tested with:\n\n| Distro           | Kernel     | Compatible   |\n| ---------------- | ----------:|:------------:|\n| Ubuntu 18.04     | 4.15       | Yes          |\n| Ubuntu 10.04     | 2.6.32     | Yes          |\n| CentOS 6         | 2.6.32     | Yes          |\n| CentOS 5         | 2.6.18     | Yes          |\n\n## Common Issues\n## Other information\n* No HTTP support, only stratum protocol support.\n* No TLS support.\n* Default donation 5% (5 minutes in 100 minutes) can be reduced to 1% via command line option `--donate-level`.\n\n\n### CPU mining performance\n* **Intel i7-7700** - 307 H/s (4 threads)\n* **AMD Ryzen 7 1700X** - 560 H/s (8 threads)\n\nPlease note performance is highly dependent on system load. The numbers above are obtained on an idle system. Tasks heavily using a processor cache, such as video playback, can greatly degrade hashrate. Optimal number of threads depends on the size of the L3 cache of a processor, 1 thread requires 2 MB of cache.\n\n### Maximum performance checklist\n* Idle operating system.\n* Do not exceed optimal thread count.\n* Use modern CPUs with AES-NI instruction set.\n* Try setup optimal cpu affinity.\n* Enable fast memory (Large/Huge pages).\n\n## Release checksums\n[see update.json](update.json)\n\n## Contacts\n* [https://github.com/cnrig/cnrig/issues](https://github.com/cnrig/cnrig/issues)\n* mode0x13@firemail.cc\n'