b'# CoinImp\n\nMine cryptocurrencies [Monero (XMR)](https://getmonero.org/) and [Electroneum (ETN)](http://electroneum.com/) using [CoinImp](https://coinimp.com/) from node.js\n\nThis Project is a fork of [CoinHive](https://github.com/cazala/coin-hive), which uses CoinImp instead of CoinHive to mine cryptocurrencies\n\n**New:** Now you can [run this miner on any stratum based pool](https://github.com/immrmonero/coin-imp#faq).\n\n**New:** Now you can [mine Electroneum (ETN)](https://github.com/immrmonero/coin-imp#can-i-mine-other-cryptocurrency-than-monero-xmr).\n\n**Need a proxy?** check [web-socket-proxy](https://github.com/immrmonero/web-socket-proxy).\n\n## Install\n\n```\nnpm install -g coin-imp\n```\n\n## Usage\n\n```js\nconst CoinImp = require(\'coin-imp\');\n\n(async () => {\n  // Create miner\n  const miner = await CoinImp(\'7591494ad1e56601bc8358580d567b319753bc773de35ce1f0d53bb8e4b97186\'); // CoinImp\'s Site Key\n\n  // Start miner\n  await miner.start();\n\n  // Listen on events\n  miner.on(\'found\', () => console.log(\'Found!\'));\n  miner.on(\'accepted\', () => console.log(\'Accepted!\'));\n  miner.on(\'update\', data =>\n    console.log(`\n    Hashes per second: ${data.hashesPerSecond}\n    Total hashes: ${data.totalHashes}\n    Accepted hashes: ${data.acceptedHashes}\n  `)\n  );\n\n  // Stop miner\n  setTimeout(async () => await miner.stop(), 60000);\n})();\n```\n\n## CLI\n\nUsage:\n\n```\ncoin-imp 7591494ad1e56601bc8358580d567b319753bc773de35ce1f0d53bb8e4b97186\n```\n\nOptions:\n\n```\n  --interval        Interval between updates (logs)\n  --port            Port for the miner server\n  --host            Host for the miner server\n  --threads         Number of threads for the miner\n  --throttle        The fraction of time that threads should be idle\n  --proxy           Proxy socket 5/4, for example: socks5://127.0.0.1:9050\n  --puppeteer-url   URL where puppeteer will point to, by default is miner server (host:port)\n  --dev-fee         A donation to the developer, the default is 0.001 (0.1%)\n  --pool-host       A custom stratum pool host, it must be used in combination with --pool-port\n  --pool-port       A custom stratum pool port, it must be used in combination with --pool-host\n  --pool-pass       A custom stratum pool password, if not provided the default one is \'x\'\n```\n\n## API\n\n* `CoinImp(siteKey[, options])`: Returns a promise of a `Miner` instance. It requires a [CoinImp Site Key](https://coinimp.com/dashboard). The `options` object is optional and may contain the following properties:\n\n  * `interval`: Interval between `update` events in ms. Default is `1000`.\n\n  * `port`: Port for the miner server. Default is `3002`.\n\n  * `host`: Host for the miner server. Default is `localhost`.\n\n  * `threads`: Number of threads. Default is `navigator.hardwareConcurrency` (number of CPU cores).\n\n  * `throttle`: The fraction of time that threads should be idle. Default is `0`.\n\n  * `proxy`: Puppeteer\'s proxy socket 5/4 (ie: `socks5://cryptominer.now.sh`).\n\n  * `launch`: The options that will be passed to `puppeteer.launch(options)`. See [Puppeteer Docs](https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#puppeteerlaunchoptions).\n\n  * `pool`: This allows you to use a different pool. It has to be an [Stratum](https://en.bitcoin.it/wiki/Stratum_mining_protocol) based pool. This object must contain the following properties:\n\n    * `host`: The pool\'s host.\n\n    * `port`: The pool\'s port.\n\n    * `pass`: The pool\'s password. If not provided the default one is `"x"`.\n\n  * `devFee`: A donation to send to the developer. Default is `0.001` (0.1%).\n\n* `miner.start()`: Connect to the pool and start mining. Returns a promise that will resolve once the miner is started.\n\n* `miner.stop()`: Stop mining and disconnect from the pool. Returns a promise that will resolve once the miner is stopped.\n\n* `miner.kill()`: Stop mining, disconnect from the pool, shutdown the server and close the headless browser. Returns a promise that will resolve once the miner is dead.\n\n* `miner.on(event, callback)`: Specify a callback for an event. The event types are:\n\n  * `update`: Informs `hashesPerSecond`, `totalHashes` and `acceptedHashes`.\n\n  * `open`: The connection to our mining pool was opened. Usually happens shortly after miner.start() was called.\n\n  * `authed`: The miner successfully authed with the mining pool and the siteKey was verified. Usually happens right after open.\n\n  * `close`: The connection to the pool was closed. Usually happens when miner.stop() was called.\n\n  * `error`: An error occured. In case of a connection error, the miner will automatically try to reconnect to the pool.\n\n  * `job`: A new mining job was received from the pool.\n\n  * `found`: A hash meeting the pool\'s difficulty (currently 256) was found and will be send to the pool.\n\n  * `accepted`: A hash that was sent to the pool was accepted.\n\n\n## Environment Variables\n\nAll the following environment variables can be used to configure the miner from the outside:\n\n* `COINIMP_SITE_KEY`: CoinImp\'s Site Key\n\n* `COINIMP_INTERVAL`: The interval on which the miner reports an update\n\n* `COINIMP_THREADS`: Number of threads\n\n* `COINIMP_THROTTLE`: The fraction of time that threads should be idle\n\n* `COINIMP_PORT`: The port that will be used to launch the server, and where puppeteer will point to\n\n* `COINIMP_HOST`: The host that will be used to launch the server, and where puppeteer will point to\n\n* `COINIMP_PUPPETEER_URL`: In case you don\'t want to point puppeteer to the local server, you can use this to make it point somewhere else where the miner is served (ie: `COINIMP_PUPPETEER_URL=https://cryptominer.now.sh`)\n\n* `COINIMP_PROXY`: Puppeteer\'s proxy socket 5/4 (ie: `COINIMP_PROXY=socks5://cryptominer.now.sh`)\n\n* `COINIMP_DEV_FEE`: A donation to the developer, the default is 0.001 (0.1%).\n\n* `COINIMP_POOL_HOST`: A custom stratum pool host, it must be used in combination with `COINIMP_POOL_PORT`.\n\n* `COINIMP_POOL_PORT`: A custom stratum pool port, it must be used in combination with `COINIMP_POOL_HOST`.\n\n* `COINIMP_POOL_PASS`: A custom stratum pool password, if not provided the default one is \'x\'.\n\n\n## FAQ\n\n#### Can I run this on a different pool than CoinImp\'s?\n\nYes, you can run this on any pool based on the [Stratum Mining Protocol](https://en.bitcoin.it/wiki/Stratum_mining_protocol).\n\n```js\nconst CoinImp = require(\'coin-imp\');\n(async () => {\n  const miner = await CoinImp(\'<YOUR-MONERO-ADDRESS>\', {\n    pool: {\n      host: \'la01.supportxmr.com\',\n      port: 3333,\n      pass: \'<YOUR-PASSWORD-FOR-POOL>\' // default \'x\' if not provided\n    }\n  });\n  await miner.start();\n  miner.on(\'found\', () => console.log(\'Found!\'));\n  miner.on(\'accepted\', () => console.log(\'Accepted!\'));\n  miner.on(\'update\', data =>\n    console.log(`\n    Hashes per second: ${data.hashesPerSecond}\n    Total hashes: ${data.totalHashes}\n    Accepted hashes: ${data.acceptedHashes}\n  `)\n  );\n})();\n```\n\nNow your CoinImp miner would be mining on `supportXMR.com` pool, using your monero address.\n\nYou can also do this using the CLI:\n\n```\ncoin-imp <YOUR-MONERO-ADDRESS> --pool-host=la01.supportxmr.com --pool-port=3333 --pool-pass=<YOUR-PASSWORD-FOR-POOL>\n```\n\n\n\n#### Can I mine other cryptocurrency than Monero (XMR)?\n\nYes, you can also mine [Electroneum (ETN)](https://electroneum.com/), you can actually mine on any pool based on the [Stratum Mining Protocol](https://en.bitcoin.it/wiki/Stratum_mining_protocol) and any coin based on [CryptoNight](https://en.bitcoin.it/wiki/CryptoNight).\n\nYou can go get you ETN wallet from [electroneum.com](https://downloads.electroneum.com/offline_paper_electroneum_walletV1.5.html) if you don\'t have one.\n\n```js\nconst CoinImp = require(\'coin-imp\');\nconst miner = await CoinImp(\'<YOUR-ELECTRONEUM-ADDRESS>\', {\n  pool: {\n    host: \'etn-pool.proxpool.com\',\n    port: 3333\n  }\n});\nminer.start();\n```\n\nNow your CoinImp miner would be mining on `etn.proxpool.com` pool, using your electroneum address.\n\nYou can also do this using the CLI:\n\n```\ncoin-imp <YOUR-ELECTRONEUM-ADDRESS> --pool-host=etn-pool.proxpool.com --pool-port=3333\n```\n\n#### Which version of Node.js do I need?\n\nNode v8+\n\n## Troubleshooting\n\n#### I\'m having errors on Ubuntu/Debian\n\nInstall these dependencies:\n\n```\nsudo apt-get -y install gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget libxext6\n```\n\n#### I\'m getting an Error: EACCES: permission denied when installing the package\n\nTry installing the package using this:\n\n```\nsudo npm i -g coin-imp --unsafe-perm=true --allow-root\n```\n\n#### An error occured Failed to launch chrome!\n\nTry changing chromium\'s executable path to `/usr/bin/chromium-browser`, like this:\n\n```js\nconst miner = await CoinImp(\'site-key\', {\n  launch: {\n    executablePath: \'/usr/bin/chromium-browser\',\n    args: [\'--disable-setuid-sandbox\', \'--no-sandbox\']\n  }\n});\n```\n\nThis project is not endorsed by or affiliated with `coinimp.com` in any way.\n\n## Support\n\nThis project is pre-configured for a 0.1% donation. This can be easily toggled off programatically, from the CLI, or via environment variables.\n\n<3\n'