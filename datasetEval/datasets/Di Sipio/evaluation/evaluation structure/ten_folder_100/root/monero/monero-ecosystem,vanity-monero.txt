b"= vanity-monero\nEquim <https://github.com/Equim-chan[@Equim-chan]>\n\nimage:https://img.shields.io/circleci/project/github/Equim-chan/vanity-monero.svg[CircleCI, link=https://circleci.com/gh/Equim-chan/vanity-monero]\nimage:https://img.shields.io/github/release/Equim-chan/vanity-monero.svg[Release, link=https://github.com/Equim-chan/vanity-monero/releases/latest]\nimage:https://img.shields.io/badge/godoc-reference-5272B4.svg[Godoc, link=https://godoc.org/ekyu.moe/vanity-monero]\nimage:https://goreportcard.com/badge/github.com/Equim-chan/vanity-monero[Go Report Card, link=https://goreportcard.com/report/github.com/Equim-chan/vanity-monero]\nimage:https://img.shields.io/github/license/Equim-chan/vanity-monero.svg[License, link=https://github.com/Equim-chan/vanity-monero/blob/master/LICENSE]\n\nvanity-monero is a tiny CLI tool that generates vanity address for CryptoNote currencies. Currently only Monero main net and test net are supported.\n\n== Features\n* Prefix matching from 1st or 3rd index of address string.\n* Regex matching at any position.\n* Multi-language mnemonic seeds generation.\n* Faster generation when there is only spend key that is needed in a specific pattern.\n* Support https://en.bitcoin.it/wiki/Split-key_vanity_address[split-key vanity address] generation, which makes scaled vanity mining potential.\n\n== Build\n=== Requirements\n* git 2.17.1 or above\n* Go 1.11 or above\n* dep v0.4.1 or above (optional)\n\n[source,shell]\n----\n$ go get -u ekyu.moe/vanity-monero/cmd/vanity-monero\n$ $GOPATH/bin/vanity-monero\n----\n\n=== Pre-built Binary\nAlthough you can view the https://github.com/Equim-chan/vanity-monero/releases[release] page for handy pre-built binaries, it's highly recommended to build it on your own! Go is really easy to build.\n\n== Guides\n=== Best Practice Regarding to Security\nSince this tool support split-key mode, it's better to generate partial private keys in https://tails.boum.org/[Tails] and lock them in the persistent volume at first, then copy their corresponding partial public keys to a seperate machine, such as VPS, or just your routine Windows. It doesn't matter if that seperate machine is trusted or not. After that, set your patterns and keep it running until the result comes out. Finally, copy the generated partial private keys to Tails and join them altogether to compose the final private keys.\n\nIt is cryptographically guranteed that the final address will match your pattern, and the final private keys will not be disclosed to the untrusted compute party.\n\n== Donation\nIf you love this idea, maybe you can consider buying me a cup of coffee at\n\nXMR:: `4777777jHFbZB4gyqrB1JHDtrGFusyj4b3M2nScYDPKEM133ng2QDrK9ycqizXS2XofADw5do5rU19LQmpTGCfeQTerm1Ti`\nDOGE:: `DEqqqq8wENdASvWr3QYbpx9RNxhbX4zYHr`\nBTC:: `1Eqqqq9xR78wJyRXXgvR73HEfKdEwq68BT`\n\nThanks!\n\n=== Proof\nMessage:: https://github.com/Equim-chan/vanity-monero/raw/master/msg.txt[msg.txt]\n\nSignature:: `SigV1hcoEk7kbnjS6rd1y5nCE797e4wqPSTpcTVgCCM2pUg6cRm9fR5Ae5p9Ur2TWeZ6gBbPPhdZQ2n9FC7QwbhU4vovq`\n\n== External Links\n* https://www.reddit.com/r/Monero/comments/8o8wdz/i_just_wrote_a_vanity_address_generator_for_monero/[Discussion on Reddit]\n\n== License\nhttps://github.com/Equim-chan/vanity-monero/blob/master/LICENSE[MIT]\n"