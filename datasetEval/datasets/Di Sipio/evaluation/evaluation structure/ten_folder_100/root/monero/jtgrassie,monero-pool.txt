b"# monero-pool\n\nA Monero mining pool server written in C.\n\nDesign decisions are focused on performance and efficiency, hence the use of\nlibevent and LMDB.  Currently it uses only two threads (one for the stratum\nclients and one for the web UI clients). It gets away with this thanks to the\nefficiency of libevent (for the stratum clients) and some sensible\nproxying/caching being placed in front of the [web UI](#web-ui).\n\nThe single payout mechanism is PPLNS, which favors loyal pool miners.\n\nI have no plans to add any other payout mechanisms or other coins. Work should\nstay focussed on performance, efficiency and stability.\n\nThe pool also now supports a new, experimental and optional, method of mining\nfor the pool miners, whereby miners can select their *own* block template to\nmine on. Further information can be found in [stratum-ss.md](./stratum-ss.md).\n\n## Project status\n\nI have tested this quite a bit on the Monero testnet (if you plan\nto do the same, ensure to use `--testnet` flag when starting your wallet and\ndaemon) and mainnet, but there is always room for improvement. Please see the\n[TODO](./TODO) file for the current list of things that could do with looking\nat.\n\nThere is also a reference mainnet pool setup and running at\n[http://monerop.com](http://monerop.com).\n\nIf you want to help with testing or help setting up your own pool, give me a\nshout on IRC: jtgrassie on Freenode.\n\n## Compiling from source\n\n### Dependencies\n\nThe build system now requires the Monero source tree to be cloned and compiled.\nFollow the\n[instructions](https://github.com/monero-project/monero#compiling-monero-from-source)\nfor compiling Monero, then export the following variable:\n\n```bash\nexport MONERO_ROOT=/path/to/cloned/monero\n```\n\nReplacing the path appropriately.\n\nBeyond the Monero dependencies, the following extra libraries are also required\nto build the pool:\n\n- liblmdb\n- libevent\n- json-c\n- libmicrohttpd\n- uuid\n\nAs an example, on Ubuntu, these dependencies can be installed with the following\ncommand:\n\n```\nsudo apt-get install liblmdb-dev libevent-dev libjson-c-dev libmicrohttpd-dev uuid-dev\n```\n### Compile\n\nFirst install all the dependencies as described above.\n\nThen to compile the pool as a release build, run:\n\n```\nmake release\n```\n\nThe application will be built in `build/release/`.\n\nOptionally you can compile a debug build by simply running:\n\n```\nmake\n```\n\nDebug builds are output in `build/debug/`.\n\n## Configuration\n\nCopy and edit the `pool.conf` file to either the same directory as the compiled\nbinary `monero-pool`, or place it in your home directory or launch `monero-pool`\nwith the flag `--config-file path/to/pool.conf` to use a custom location. The\nconfiguration options should be self explanatory.\n\n#### Block notification\n\nThere is one configuration option that deserves a special mention.\n\nYou can optionally start the pool with the flag `--block-notified` (or set in\nthe config file: `block-notified = 1`). This will prevent the pool from\n*polling* for new blocks using a timer, and instead, fetch a new block template\nwhen it receives a *signal* (specifically, *SIGUSR1*). Now whenever you start\n`monerod`, you'll make use of its `--block-notify` option.\n\nE.g.\n\n<pre>\nmonerod ... <b>--block-notify '/usr/bin/pkill -USR1 monero-pool'</b>\n</pre>\n\nThis instructs `monerod` to send the required signal, *SIGUSR1*, to your pool\nwhenever a new block is added to the chain.\n\nUsing this mechanism has a significant benefit - your pool *immediatley* knows\nwhen to fetch a new block template to send to your miners. You're essentially\ngiving your miners a head-start over miners in pools which use polling (which\nis what all the other pool implementations do).\n\n## Running\n\nEnsure you have your Monero daemon (`monerod`) and wallet RPC\n(`monero-wallet-rpc`) up and running with the correct host and port settings as\ndefined in the pool config file.\n\nIt is highly recommended to run these on the same host as the pool server to\navoid network latency when their RPC methods are called.\n\nThen simply `cd build/debug|release` and run `./monero-pool`.\n\n## Web UI\n\nThere is a minimal web UI that gets served on the port specified in the config\nfile. It's advisable to use either Apache or Nginx as a proxy in front of this\nwith some appropriate caching.\n\n## Supporting the project\n\nThis mining pool has **no built-in developer donation** (like *other* mining\npool software has), so if you use it and want to donate, XMR donations to:\n\n```\n451ytzQg1vUVkuAW73VsQ72G96FUjASi4WNQse3v8ALfjiR5vLzGQ2hMUdYhG38Fi15eJ5FJ1ZL4EV1SFVi228muGX4f3SV\n```\n\n![QR code](./qr-small.png)\n\nwould be very much appreciated.\n\n## License\n\nPlease see the [LICENSE](./LICENSE) file.\n\n[//]: # ( vim: set tw=80: )\n"