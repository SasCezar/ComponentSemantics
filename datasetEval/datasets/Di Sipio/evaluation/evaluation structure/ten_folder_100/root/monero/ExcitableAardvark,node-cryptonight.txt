b"# node-cryptonight\n> node bindings for cryptonight hashing\n\n### Requirements\n\nnode-cryptonight requires [Boost](http://www.boost.org) and [Sodium](http://libsodium.org)\n\n##### Ubuntu\n\n    sudo apt-get install libboost-all-dev libsodium-dev\n\n##### Mac\n\n    brew install boost\n    brew install libsodium\n\n### Installation\n\n    npm install --save node-cryptonight\n   \n### Testing\n\nCode is linted with [standard](https://github.com/standard/standard) and tested with [Jest](https://github.com/facebook/jest). Run `npm test` to lint and run tests.\n\n### Usage Examples\n\n##### Synchronous Hashing\n\n```js\nconst cryptonight = require('node-cryptonight').hash\nconst hash = cryptonight(Buffer.from('This is a test'))\nconsole.log(hash) // <Buffer a0 84 f0 1d 14 37 ..>\n```\n\n##### Synchronous Hashing with variant 1\n\n```js\nconst cryptonight = require('node-cryptonight').hash\nconst hash = cryptonight(Buffer.from('This is a test'), 1)\nconsole.log(hash) // <Buffer a0 84 f0 1d 14 37 ..>\n```\n\n##### Synchronous Hashing with variant 4 and height 123\n\n```js\nconst cryptonight = require('node-cryptonight').hash\nconst hash = cryptonight(Buffer.from('This is a test'), 1, 123)\nconsole.log(hash) // <Buffer a0 84 f0 1d 14 37 ..>\n```\n\n##### Asynchronous Hashing\n\n```js\nconst cryptonight = require('node-cryptonight').asyncHash\ncryptonight(Buffer.from('This is a test'), hash => {\n  console.log(hash) // <Buffer a0 84 f0 1d 14 37 ..>\n})\n```\n##### Asynchronous Hashing with variant 1\n\n```js\nconst cryptonight = require('node-cryptonight').asyncHash\ncryptonight(Buffer.from('This is a test'), 1, hash => {\n  console.log(hash) // <Buffer a0 84 f0 1d 14 37 ..>\n})\n```\n##### Asynchronous Hashing with variant 4 and height 123\n\n```js\nconst cryptonight = require('node-cryptonight').asyncHash\ncryptonight(Buffer.from('This is a test'), 4, 123, hash => {\n  console.log(hash) // <Buffer a0 84 f0 1d 14 37 ..>\n})\n```\n\n##### Promise Wrapper Example\n\n```js\nfunction cryptonight(data) {\n  return new Promise((resolve, reject) => {\n    require('node-cryptonight').asyncHash(data, hash => {\n      resolve(hash)\n    })\n  })\n}\n\ncryptonight(Buffer.from('This is a test'))\n  .then(console.log) // <Buffer a0 84 f0 1d 14 37 ..>\n```\n\n### See Also\n\n* [node-cryptonight-lite](https://github.com/ExcitableAardvark/node-cryptonight-lite)\n\n### License\n\nReleased under the 3-Clause BSD License. Contains code from the Monero project. See `LICENSE` for more information.\n"