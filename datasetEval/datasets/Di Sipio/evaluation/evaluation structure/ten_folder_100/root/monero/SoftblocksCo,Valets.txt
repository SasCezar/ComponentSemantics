b'# Valets - simple cryptocurrency wallets generator\nWritten in Python 3. Allow you to generate thousands of wallets in 12 different crypto currencies and save all the credentials into the usual CSV file. Can be really useful for running an ICO, building an exchange or even accepting crypto payments instead of PayPal or something.\n\n# Details\nTo use this software you should install and synchronize all the necessary clients. For example, if you want to generate Bitcoin addresses - install `bitcoind` and so on. All the instructions are listed bellow. More than that - by generating wallets with your own node, you\'ll have the abality to query balances for generating addresses, view ttransactions list, etc.\n\n![General scheme](https://image.ibb.co/ipr6pv/Payments_3.png)\n\n# Supported currencies\n| Name (Coinmarketcap link)                | Status    | Volume (24h)    | Website                            | For developers                           |\n| ---------------------------------------- | --------- | --------------- | ---------------------------------- | ---------------------------------------- |\n| Bitcoin ([link](https://coinmarketcap.com/currencies/bitcoin/)) | **Ready** | 1.000.000.000 $ | https://bitcoin.org/               | [Bitcoin-cli](https://en.bitcoin.it/wiki/Original_Bitcoin_client/API_calls_list) |\n| Bitcoin cash ([link](https://coinmarketcap.com/currencies/bitcoin-cash/)) | **Ready** | 360.000.000 $   | https://www.bitcoincash.org/       | [Bitcoin-cli](https://en.bitcoin.it/wiki/Original_Bitcoin_client/API_calls_list) |\n| Ethereum ([link](https://coinmarketcap.com/currencies/ethereum/)) | **Ready** | 785.000.000 $   | https://www.ethereum.org/          | [Geth](https://github.com/ethereum/go-ethereum/wiki/Managing-your-accounts) |\n| Ethereum classic ([link](https://coinmarketcap.com/currencies/ethereum-classic/)) | **Ready** | 87.000.000 $    | https://ethereumclassic.github.io/ | [Geth-classic](https://github.com/ethereumproject/go-ethereum/releases) |\n| Litecoin ([link](https://coinmarketcap.com/currencies/litecoin/)) | **Ready** | 119.000.000 $   | https://litecoin.com/              | [Litecoin-cli](https://litecoin.info/Litecoin_API) |\n| Dash ([link](https://coinmarketcap.com/currencies/dash/)) | **Ready** | 23.000.000 $    | https://www.dash.org/              | [Dash-cli](https://dashpay.atlassian.net/wiki/display/COMMUNITY/Dash+Command-line+arguments) |\n| Zcash ([link](https://coinmarketcap.com/currencies/zcash/)) | **Ready** | 27.000.000 $    | https://z.cash/                    | [Zcash-cli](https://z.cash/download.html) |\n| Reddcoin ([link](https://coinmarketcap.com/currencies/reddcoin/)) | **Ready** | 970.000 $       | http://www.reddcoin.com/           | [Reddcoin-cli](https://www.reddcoin.com/#Wallets) |\n| Navcoin ([link](https://coinmarketcap.com/currencies/nav-coin/)) | **Ready** | 145.000 $       | https://navcoin.org/               | [Navcoin-cli](https://navcoin.org/downloads/) |\n| Vertcoin ([link](https://coinmarketcap.com/currencies/vertcoin/)) | **Ready** | 550.000 $       | https://vertcoin.org/           | [Vertcoind](https://github.com/vertcoin/vertcoin/releases) |\n| Dogecoin ([link](https://coinmarketcap.com/currencies/dogecoin/)) | **Ready** | 5.000.000 $     | http://dogecoin.com/               | [Dogecoin-cli](https://github.com/dogecoin/dogecoin/releases) |\n| Emercoin ([link](https://coinmarketcap.com/currencies/emercoin/)) | **Ready** | 200.000 $       | http://emercoin.com/               | [Emercoin-cli](https://emercoin.com/EMERCOIND) |\n\n# Install currencies clients\n\n## Bitcoin\n\n- Installation guide - ["Running A Full Node"](https://bitcoin.org/en/full-node)\n- Block explorer - [link](https://blockchain.info/)\n\n**Install**\n\n```bash\nsudo apt-get install software-properties-common\nsudo add-apt-repository ppa:bitcoin/bitcoin\nsudo apt-get update\nsudo apt-get install bitcoind\n```\n\n**Configure**\n\n```bash\nbitcoind # Press CTRL+C right after launch\n# All you need right now - is to init datadir\n\necho \'rpcuser=USERNAME\' > ~/.bitcoin/bitcoin.conf\necho \'rpcpassword=PASSWORD\' >> ~/.bitcoin/bitcoin.conf\necho \'rpcbind=127.0.0.1\' >> ~/.bitcoin/bitcoin.conf\necho \'rpcport=8332\' >> ~/.bitcoin/bitcoin.conf\necho \'server=1\' >> ~/.bitcoin/bitcoin.conf\necho \'maxconnections=10\' >> ~/.bitcoin/bitcoin.conf  \n```\n\n**Run & check RPC**\n\n```bash\nbitcoind -daemon\n\ncurl --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getinfo", "params": [] }\' -H \'content-type: text/plain;\' http://USERNAME:PASSWORD@127.0.0.1:8332/ | python -mjson.tool\n```\n\n**Stop**\n\n```bash\nbitcoin-cli stop\n```\n\n## Bitcoin cash\n\n- Bitcoin classic used as command line tool, official website is [here](https://bitcoinclassic.com/).\n- Block explorer - [link](https://bitinfocharts.com/bitcoin%20cash/explorer/)\n\n**Install**\n\n```bash\nwget https://github.com/bitcoinclassic/bitcoinclassic/releases/download/v1.3.3uahf/bitcoin-1.3.3-linux64.tar.gz\ntar xfz bitcoin-1.3.3-linux64.tar.gz\nmv bitcoin-1.3.3 Bitcoinclassic\nrm bitcoin-1.3.3-linux64.tar.gz\ncd Bitcoinclassic/bin\nrename \'s/bitcoin/bitcoinclassic/\' *\nsudo cp * /usr/bin\n```\n\n**Configure**\n\n```bash\nmkdir .bitcoinclassic # Run only once, before first launch\n\necho \'rpcuser=USERNAME\' > ~/.bitcoinclassic/bitcoin.conf\necho \'rpcpassword=PASSWORD\' >> ~/.bitcoinclassic/bitcoin.conf\necho \'rpcbind=127.0.0.1\' >> ~/.bitcoinclassic/bitcoin.conf\necho \'rpcport=8432\' >> ~/.bitcoinclassic/bitcoin.conf\necho \'server=1\' >> ~/.bitcoinclassic/bitcoin.conf\necho \'bind=0.0.0.0:9222\' >> ~/.bitcoinclassic/bitcoin.conf\necho \'maxconnections=10\' >> ~/.bitcoinclassic/bitcoin.conf  \n```\n\n**Run & check**\n\n```bash\nbitcoinclassicd -daemon -datadir=.bitcoinclassic/\n\ncurl --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getinfo", "params": [] }\' -H \'content-type: text/plain;\' http://USERNAME:PASSWORD@127.0.0.1:8432/ | python -mjson.tool\n```\n\n**Stop**\n\n```bash\nbitcoinabc-cli stop\n```\n\n## Ethereum\n\nOffical guide, by [ethereum.org](https://ethereum.org) - [link](https://www.ethereum.org/cli#geth)\n\n**Install**\n\n```bash\nsudo apt-get install software-properties-common\nsudo add-apt-repository -y ppa:ethereum/ethereum\nsudo apt-get update\nsudo apt-get install ethereum\n```\n\n**Configure**\n\n```bash\n# No need to config anything\n```\n\n**Run**\n\n```bash\ngeth --rpc --rpcaddr "127.0.0.1" --rpcport 8532 --rpcapi "admin,debug,miner,shh,txpool,personal,eth,net,web3" console\n```\n\n**Stop**\n\n```bash\n# Just type \'exit\' in the Geth console\n```\n\n## Ethereum classic\n\n**Install**\n\n```bash\nwget https://github.com/ethereumproject/go-ethereum/releases/download/v3.5.86/geth-classic-linux-v3.5.0.86-db60074.tar.gz\ntar xzf geth-classic-linux-v3.5.0.86-db60074.tar.gz\nrm geth-classic-linux-v3.5.0.86-db60074.tar.gz\nmv geth geth-classic\nsudo cp geth-classic /usr/bin # Make geth-classic systemwide available\n```\n\n**Configure**\n\n```bash\n# No need to config anything\n```\n\n**Run**\n\n```bash\ngeth-classic --rpc --rpcaddr "127.0.0.1" --rpcapi "admin,debug,miner,shh,txpool,personal,eth,net,web3" --rpcport 8632 --port 30304 console # Running on non-typical ports (30304 and 8632) for the purpose of collision avoidane with geth\n```\n\n**Stop**\n\n```bash\n# Just type \'exit\' in the Geth-classic console\n```\n\n## Litecoin\n\n**Install**\n\n```bash\nwget https://download.litecoin.org/litecoin-0.14.2/linux/litecoin-0.14.2-x86_64-linux-gnu.tar.gz\ntar xzf litecoin-0.14.2-x86_64-linux-gnu.tar.gz\nrm litecoin-0.14.2-x86_64-linux-gnu.tar.gz\nmv litecoin-0.14.2/ Litecoin\ncd Litecoin/bin/\nsudo cp * /usr/bin # Make binaries systemwide available\n```\n\n**Configure**\n\n```bash\nlitecoind # Press CTRL+C right after launch\n# All you need right now - is to init datadir\n\necho \'rpcuser=USERNAME\' > ~/.litecoin/litecoin.conf\necho \'rpcpassword=PASSWORD\' >> ~/.litecoin/litecoin.conf\necho \'rpcbind=127.0.0.1\' >> ~/.litecoin/litecoin.conf\necho \'rpcport=8732\' >> ~/.litecoin/litecoin.conf\necho \'server=1\' >> ~/.litecoin/litecoin.conf\necho \'maxconnections=10\' >> ~/.litecoin/litecoin.conf  \n```\n\n**Run & check**\n\n```bash\nlitecoind -daemon\n\ncurl --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getinfo", "params": [] }\' -H \'content-type: text/plain;\' http://USERNAME:PASSWORD@127.0.0.1:8732/ | python -mjson.tool\n```\n\n**Stop**\n\n```bash\nlitecoin-cli stop\n```\n\n## Dogecoin\n\n**Install**\n\n```bash\nwget https://github.com/dogecoin/dogecoin/releases/download/v1.10.0/dogecoin-1.10.0-linux64.tar.gz\ntar xzf dogecoin-1.10.0-linux64.tar.gz\nrm dogecoin-1.10.0-linux64.tar.gz\nmv dogecoin-1.10.0/ Dogecoin\ncd Dogecoin/bin/\nsudo cp * /usr/bin\n```\n\n**Configure**\n\n```bash\ndogecoind # Press CTRL+C right after launch\n# All you need right now - is to init datadir\n\necho \'rpcuser=USERNAME\' > ~/.dogecoin/dogecoin.conf\necho \'rpcpassword=PASSWORD\' >> ~/.dogecoin/dogecoin.conf\necho \'rpcbind=127.0.0.1\' >> ~/.dogecoin/dogecoin.conf\necho \'rpcport=8832\' >> ~/.dogecoin/dogecoin.conf\necho \'server=1\' >> ~/.dogecoin/dogecoin.conf\necho \'maxconnections=10\' >> ~/.dogecoin/dogecoin.conf  \n```\n\n**Run & check**\n\n```bash\ndogecoind -daemon\n\ncurl --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getinfo", "params": [] }\' -H \'content-type: text/plain;\' http://USERNAME:PASSWORD@127.0.0.1:8832/ | python -mjson.tool\n```\n\n**Stop**\n\n```bash\ndogecoin-cli stop\n```\n\n## Dash\n\n**Install**\n\n```bash\nwget https://www.dash.org/binaries/dashcore-0.12.1.5-linux64.tar.gz # https://www.dash.org/wallets/#linux\ntar xfz dashcore-0.12.1.5-linux64.tar.gz\nrm dashcore-0.12.1.5-linux64.tar.gz\nmv dashcore-0.12.1/ Dash\ncd Dash/bin/\nsudo cp * /usr/bin # Make binaries systemwide available\n```\n\n**Configure**\n\n```bash\necho \'rpcuser=USERNAME\' > ~/.dashcore/dash.conf\necho \'rpcpassword=PASSWORD\' >> ~/.dashcore/dash.conf\necho \'rpcbind=127.0.0.1\' >> ~/.dashcore/dash.conf\necho \'rpcport=8932\' >> ~/.dashcore/dash.conf\necho \'server=1\' >> ~/.dashcore/dash.conf\necho \'maxconnections=10\' >> ~/.dashcore/dash.conf  \n```\n\n**Run & check**\n\n```bash\ndashd -daemon\n\ncurl --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getinfo", "params": [] }\' -H \'content-type: text/plain;\' http://USERNAME:PASSWORD@127.0.0.1:8932/ | python -mjson.tool\n```\n\n**Stop**\n\n```bash\ndash-cli stop\n```\n\n## Zcash\n\n**Install**\n\n```bash\nsudo apt-get install apt-transport-https\nwget -qO - https://apt.z.cash/zcash.asc | sudo apt-key add -\necho "deb [arch=amd64] https://apt.z.cash/ jessie main" | sudo tee /etc/apt/sources.list.d/zcash.list\nsudo apt-get update\nsudo apt-get install zcash\n```\n\n**Configure**\n\n```bash\nzcashd # Press CTRL+C right after launch\n# All you need right now - is to init datadir\n\necho \'rpcuser=USERNAME\' > ~/.zcash/zcash.conf\necho \'rpcpassword=PASSWORD\' >> ~/.zcash/zcash.conf\necho \'rpcbind=127.0.0.1\' >> ~/.zcash/zcash.conf\necho \'rpcport=9032\' >> ~/.zcash/zcash.conf\necho \'server=1\' >> ~/.zcash/zcash.conf\necho \'maxconnections=10\' >> ~/.zcash/zcash.conf  \n```\n\n**Run & check**\n\n```bash\nzcash-fetch-params # Run this code before first launch\nzcashd -rescan -daemon\n\ncurl --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getinfo", "params": [] }\' -H \'content-type: text/plain;\' http://USERNAME:PASSWORD@127.0.0.1:9032/ | python -mjson.tool\n```\n\n**Stop**\n\n```bash\nzcash-cli stop\n```\n\n## Vertcoin\n\n**Install**\n\n```bash\nwget https://github.com/vertcoin/vertcoin/releases/download/v0.11.1.0/vertcoin-v0.11.1.0-linux-64bit.zip\nunzip vertcoin-v0.11.1.0-linux-64bit.zip\nrm vertcoin-v0.11.1.0-linux-64bit.zip\nmkdir Vertcoin\nmv vertcoin* Vertcoin/\ncd Vertcoin/\nsudo cp * /usr/bin\n```\n\n**Configure**\n\n```bash\nvertcoind # Press CTRL+C right after launch\n# All you need right now - is to init datadir\n\necho \'rpcuser=USERNAME\' > ~/.vertcoin/vertcoin.conf\necho \'rpcpassword=PASSWORD\' >> ~/.vertcoin/vertcoin.conf\necho \'rpcbind=127.0.0.1\' >> ~/.vertcoin/vertcoin.conf\necho \'rpcport=9832\' >> ~/.vertcoin/vertcoin.conf\necho \'server=1\' >> ~/.vertcoin/vertcoin.conf\necho \'maxconnections=10\' >> ~/.vertcoin/vertcoin.conf  \n```\n\n**Run & check**\n\n```bash\nvertcoind -daemon\n\ncurl --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getinfo", "params": [] }\' -H \'content-type: text/plain;\' http://USERNAME:PASSWORD@127.0.0.1:9832/ | python -mjson.tool\n```\n\n**Stop**\n\n```bash\nppcoind stop\n```\n\n## Navcoin\n\n**Install**\n\n```bash\nsudo apt-get install curl libcurl3\nwget http://www.navcoin.org/files/navcoin-4.0.4/navcoin-4.0.4-x86_64-linux-gnu.tar.gz\ntar xzf navcoin-4.0.4-x86_64-linux-gnu.tar.gz\nrm navcoin-4.0.4-x86_64-linux-gnu.tar.gz\nmv navcoin-4.0.4 Navcoin\ncd Navcoin/bin/\nsudo cp * /usr/bin\n```\n\n**Configure**\n\n```bash\nnavcoind # Press CTRL+C right after launch\n# All you need right now - is to init datadir\n\necho \'rpcuser=USERNAME\' > ~/.navcoin4/navcoin.conf\necho \'rpcpassword=PASSWORD\' >> ~/.navcoin4/navcoin.conf\necho \'rpcbind=127.0.0.1\' >> ~/.navcoin4/navcoin.conf\necho \'rpcport=9532\' >> ~/.navcoin4/navcoin.conf\necho \'server=1\' >> ~/.navcoin4/navcoin.conf\necho \'maxconnections=10\' >> ~/.navcoin4/navcoin.conf  \n```\n\n**Run & check**\n\n```bash\nnavcoind -daemon\n\ncurl --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getinfo", "params": [] }\' -H \'content-type: text/plain;\' http://USERNAME:PASSWORD@127.0.0.1:9532/ | python -mjson.tool\n```\n\n**Stop**\n\n```bash\nnamecoind stop\n```\n\n## Emercoin\n\n**Install**\n\n```bash\n# Emercoin releases alavilable on Sourgeforge, so you should download it manually :(\n# Link - https://sourceforge.net/projects/emercoin/?source=typ_redirect\nscp emercoin-0.6.2-linux64.tar.gz username@ip:~ # Use scp if necessary, to upload archive\ntar xzf emercoin-0.6.2-linux64.tar.gz\nmv emercoin-0.6.2/ Emercoin\nrm emercoin-0.6.2-linux64.tar.gz\ncd Emercoin/bin/\nsudo cp * /usr/bin\n```\n\n**Configure**\n\n```bash\nemercoind # Press CTRL+C right after launch\n# All you need right now - is to init datadir\n\necho \'rpcuser=USERNAME\' > ~/.emercoin/emercoin.conf\necho \'rpcpassword=PASSWORD\' >> ~/.emercoin/emercoin.conf\necho \'rpcbind=127.0.0.1\' >> ~/.emercoin/emercoin.conf\necho \'rpcport=9332\' >> ~/.emercoin/emercoin.conf\necho \'server=1\' >> ~/.emercoin/emercoin.conf\necho \'maxconnections=10\' >> ~/.emercoin/emercoin.conf  \n```\n\n**Run & check**\n\n```bash\nemercoind -daemon\n\ncurl --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "getinfo", "params": [] }\' -H \'content-type: text/plain;\' http://USERNAME:PASSWORD@127.0.0.1:9332/ | python -mjson.tool\n```\n\n**Stop**\n\n```bash\nemercoin-cli stop\n```\n\n## Reddcoin\n\n**Install**\n\n```bash\nwget https://github.com/reddcoin-project/reddcoin/releases/download/v2.0.0.0/reddcoin-2.0.0.0-linux.tar.gz\ntar xzf reddcoin-2.0.0.0-linux.tar.gz\nrm reddcoin-2.0.0.0-linux.tar.gz\nmv reddcoin-2.0.0.0-linux Reddcoin\ncd Reddcoin/bin/64/\nsudo cp * /usr/bin # Make binaries systemwide available\n```\n\n**Configure**\n\n```bash\nreddcoind # Press CTRL+C right after launch\n# All you need right now - is to init datadir\n\necho \'rpcuser=USERNAME\' > ~/.reddcoin/reddcoin.conf\necho \'rpcpassword=PASSWORD\' >> ~/.reddcoin/reddcoin.conf\necho \'rpcbind=127.0.0.1\' >> ~/.reddcoin/reddcoin.conf\necho \'rpcport=9432\' >> ~/.reddcoin/reddcoin.conf\necho \'server=1\' >> ~/.reddcoin/reddcoin.conf\necho \'maxconnections=10\' >> ~/.reddcoin/reddcoin.conf  \n```\n\n**Run**\n\n```bash\nreddcoind -daemon\n```\n\n**Stop**\n\n```bash\nreddcoin-cli stop\n```\n\n# Install Valets\n\n```bash\nsudo apt-get update\nsudo apt-get install virtualenv git python-dev python3 python3-pip git\n\ngit clone https://github.com/Revain/Valets\ncd Valets/\nvirtualenv --python python3 --no-site-packages venv\nsource venv/bin/activate\npip install -r requirements.txt\n```\n\n# Set up crontab\n```bash\n@reboot bitcoind -daemon\n@reboot bitcoinclassicd -daemon -datadir=.bitcoinclassic/\n@reboot litecoind -daemon\n@reboot dogecoind -daemon\n@reboot dashd -daemon\n@reboot zcashd -daemon\n@reboot reddcoind -daemon\n@reboot emercoind -daemon\n@reboot navcoind -daemon\n@reboot vertcoind -daemon\n\n@reboot\n@reboot\n```\n\n\n# Run Valets\n\n```bash\n$ python Valets/ -c BTC 1000 -c LTC 1000 -c ETH 1000 -c ETC 2000\n# Check every 12 currencies\n$ python Valets/ -c BTC 1 -c LTC 1 -c DASH 1 -c ZEC 1 -c NAV 1 -c PCC 1 -c BCH 1 -c DOGE 1 -c EMC 1 -c RDD 1 -c ETH 1 -c ETC 1\n# Generate 100 wallets per currency\n$ python Valets/ -c BTC 100 -c LTC 100 -c DASH 100 -c ZEC 100 -c NAV 100 -c PCC 100 -c BCH 100 -c DOGE 100 -c EMC 100 -c RDD 100 -c ETH 100 -c ETC 100\n```\n'