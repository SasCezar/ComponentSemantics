b'# gatsby-plugin-intl\n\nInternationalize your Gatsby site.\n\n## Features\n\n- Turn your gatsby site into an internationalization-framework out of the box powered by [react-intl](https://github.com/yahoo/react-intl). \n\n- Support automatic redirection based on the user\'s preferred language in browser provided by [browser-lang](https://github.com/wiziple/browser-lang).\n\n- Support multi-language url routes in a single page component. This means you don\'t have to create separate pages such as `pages/en/index.js` or `pages/ko/index.js`.\n\n## Why?\n\nWhen you build multilingual sites, Google recommends using different URLs for each language version of a page rather than using cookies or browser settings to adjust the content language on the page. [(read more)](https://support.google.com/webmasters/answer/182192?hl=en&ref_topic=2370587)\n\n## Starters\n\nDemo: [http://gatsby-starter-default-intl.netlify.com](http://gatsby-starter-default-intl.netlify.com)\n\nSource: [https://github.com/wiziple/gatsby-plugin-intl/tree/master/examples/gatsby-starter-default-intl](https://github.com/wiziple/gatsby-plugin-intl/tree/master/examples/gatsby-starter-default-intl)\n\n\n## Showcase\n\n- [https://picpick.app](https://picpick.app)\n- [https://www.krashna.nl](https://www.krashna.nl) [(Source)](https://github.com/krashnamusika/krashna-site)\n\n*Feel free to send us PR to add your project.*\n\n## How to use\n\n### Install package\n\n`npm install --save gatsby-plugin-intl`\n\n### Add a plugin to your gatsby-config.js\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-intl`,\n    options: {\n      // language JSON resource path\n      path: `${__dirname}/src/intl`,\n      // supported language\n      languages: [`en`, `ko`, `de`],\n      // language file path\n      defaultLanguage: `ko`,\n      // option to redirect to `/ko` when connecting `/`\n      redirect: true,\n    },\n  },\n]\n```\n\n### You\'ll also need to add language JSON resources to the project.\n\nFor example,\n\n| language resource file | language |\n| --- | --- |\n| [src/intl/en.json](https://github.com/wiziple/gatsby-plugin-intl/blob/master/examples/gatsby-starter-default-intl/src/intl/en.json) | English |\n| [src/intl/ko.json](https://github.com/wiziple/gatsby-plugin-intl/blob/master/examples/gatsby-starter-default-intl/src/intl/ko.json) | Korean |\n| [src/intl/de.json](https://github.com/wiziple/gatsby-plugin-intl/blob/master/examples/gatsby-starter-default-intl/src/intl/de.json) | German |\n\n\n### Change your components\n\nYou can use `injectIntl` HOC on any react components including page components.\n\n```jsx\nimport React from "react"\nimport { injectIntl, Link, FormattedMessage } from "gatsby-plugin-intl"\n\nconst IndexPage = ({ intl }) => {\n  return (\n    <Layout>\n      <SEO\n        title={intl.formatMessage({ id: "title" })}\n      />\n      <Link to="/page-2/">\n        {intl.formatMessage({ id: "go_page2" })}\n        {/* OR <FormattedMessage id="go_page2" /> */}\n      </Link>\n    </Layout>\n  )\n}\nexport default injectIntl(IndexPage)\n```\nOr you can use the new `useIntl` hook.\n```jsx\nimport React from "react"\nimport { useIntl, Link, FormattedMessage } from "gatsby-plugin-intl"\n\nconst IndexPage = () => {\n  const intl = useIntl()\n  return (\n    <Layout>\n      <SEO\n        title={intl.formatMessage({ id: "title" })}\n      />\n      <Link to="/page-2/">\n        {intl.formatMessage({ id: "go_page2" })}\n        {/* OR <FormattedMessage id="go_page2" /> */}\n      </Link>\n    </Layout>\n  )\n}\nexport default IndexPage\n```\n\n\n## How It Works\n\nLet\'s say you have two pages (`index.js` and `page-2.js`) in your `pages` directory. The plugin will create static pages for every language.\n\nfile | English | Korean | German | Default*\n-- | -- | -- | -- | -- \nsrc/pages/index.js | /**en** | /**ko** | /**de** | /\nsrc/pages/page-2.js | /**en**/page-2 | /**ko**/page-2 | /**de**/page-2 | /page-2\n\n**Default Pages and Redirection**\n\nIf redirect option is `true`, `/` or `/page-2` will be redirected to the user\'s preferred language router. e.g) `/ko` or `/ko/page-2`. Otherwise, the pages will render `defaultLangugage` language. You can also specify additional component to be rendered on redirection page by adding `redirectComponent` option.\n\n\n## Plugin Options\n\nOption | Type | Description\n-- | -- | --\npath | string | language JSON resource path\nlanguages | string[] | supported language keys\ndefaultLanguage | string | default language when visiting `/page` instead of `ko/page`\nredirect | boolean | if the value is `true`, `/` or `/page-2` will be redirected to the user\'s preferred language router. e.g) `/ko` or `/ko/page-2`. Otherwise, the pages will render `defaultLangugage` language.\nredirectComponent | string (optional) | additional component file path to be rendered on with a redirection component for SEO.\n\n\n## Components\n\nTo make it easy to handle i18n with multi-language url routes, the plugin provides several components.\n\nTo use it, simply import it from `gatsby-plugin-intl`.\n\nComponent | Type | Description\n-- | -- | --\nLink | component | This is a wrapper around @gatsby\xe2\x80\x99s Link component that adds useful enhancements for multi-language routes. All props are passed through to @gatsby\xe2\x80\x99s Link component.\nnavigate | function | This is a wrapper around @gatsby\xe2\x80\x99s navigate function that adds useful enhancements for multi-language routes. All options are passed through to @gatsby\xe2\x80\x99s navigate function.\nchangeLocale | function | A function that replaces your locale. `changeLocale(locale, to = null)`\nIntlContextConsumer | component | A context component to get plugin configuration on the component level.\ninjectIntl | component | https://github.com/yahoo/react-intl/wiki/API#injection-api\nFormattedMessage | component | https://github.com/yahoo/react-intl/wiki/Components#string-formatting-components\nand more... | | https://github.com/yahoo/react-intl/wiki/Components\n\n\n## License\n\nMIT &copy; [Daewoong Moon](https://github.com/wiziple)\n'