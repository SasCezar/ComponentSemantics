b'\n|                           | Build                                                                                                                                                       | Localization.SqlLocalizer                                                                                                                                   |\n| ------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| .net core                 | [![Build status](https://ci.appveyor.com/api/projects/status/gyychgc7l5g4g5lb?svg=true)](https://ci.appveyor.com/project/damienbod/aspnet5localization)      | [![NuGet Status](http://img.shields.io/nuget/v/Localization.SqlLocalizer.svg?style=flat-square)](https://www.nuget.org/packages/Localization.SqlLocalizer/) |\n\n\n========================\n\nDocumentation: http://localizationsqllocalizer.readthedocs.io/en/latest/\n\n\n<a href="https://www.nuget.org/packages/Localization.SqlLocalizer/">NuGet</a> | <a href="https://github.com/damienbod/AspNetCoreLocalization/issues">Issues</a> | <a href="https://github.com/damienbod/AspNetCoreLocalization/tree/master/src/Localization.SqlLocalizer">Code</a>\n\n\n<strong>Basic Usage ASP.NET Core</strong>\n\nAdd the NuGet package to the project.json file\n\n```\n"dependencies": {\n        "Localization.SqlLocalizer": "2.0.6",\n```\n\nAdd the DbContext and use the AddSqlLocalization extension method to add the SQL Localization package.\n\n```\npublic void ConfigureServices(IServiceCollection services)\n{\n    // init database for localization\n    var sqlConnectionString = Configuration["DbStringLocalizer:ConnectionString"];\n\n    services.AddDbContext<LocalizationModelContext>(options =>\n        options.UseSqlite(\n            sqlConnectionString,\n            b => b.MigrationsAssembly("ImportExportLocalization")\n        ),\n        ServiceLifetime.Singleton,\n        ServiceLifetime.Singleton\n    );\n\n    // Requires that LocalizationModelContext is defined\n    services.AddSqlLocalization(options => options.UseTypeFullNames = true);\n\n```\n\nCreate your database\n\n```\ndotnet ef migrations add Localization --context localizationModelContext\n\ndotnet ef database update Localization --context localizationModelContext\n```\n\n========================\n\n# ASP.NET Core MVC Localization Example\n\n<ul>\n    <li><a href="http://damienbod.com/2015/10/21/asp-net-5-mvc-6-localization/">ASP.NET Core MVC Localization</a></li>\n    <li><a href="http://damienbod.com/2015/10/24/using-dataannotations-and-localization-in-asp-net-5-mvc-6/">Using DataAnnotations and Localization in ASP.NET Core MVC </a></li>\n    <li><a href="http://damienbod.com/2016/01/29/asp-net-core-1-0-using-sql-localization/">ASP.NET Core using SQL Localization</a></li>\n</ul>\n\n\n\n'