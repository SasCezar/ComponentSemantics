b'# dom-i18n\n\n[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Code coverage][coveralls-image]][coveralls-url]\n\n> Provides a very basic HTML multilingual support using JavaScript\n\nhttp://ruyadorno.github.io/dom-i18n\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/ruyadorno-2.svg)](https://saucelabs.com/u/ruyadorno-2)\n\n\n## About\n\nThis is a **lightweight** (less than 1KB minified/gzipped) JavaScript module that offers an alternative for supporting internationalization on HTML static pages that have no better option than to serve many languages at once.\n\nIt\'s a smart way of providing support to multiple languages without having to rely on many HTML files, it will also not require a page reload to change languages. The original requirement for creating this script was to provide multilingual support to a CMS in which I only had control to its template code (in my case it was a [Shopify](http://www.shopify.com/) store) but the script is very flexible and can be used in any HTML page.\n\n**Features:** UMD definition, IE9+ support, examples provided.\n\n## Usage\n\nJust add the script in your HTML file, then invoke the `domI18n` method defining the languages you will support:\n\n```html\n  <script src="../dist/dom-i18n.min.js"></script>\n  <script>\n    domI18n({\n      languages: [\'en\', \'fr\']\n    });\n  </script>\n```\n\nMark what elements should be translatable within your page by adding a `data-translatable` attribute:\n\n```html\n  <h1 data-translatable></h1>\n```\n\n### Two simple ways to specify translations\n\nBoth methods can be used at the same time in an HTML page, just make sure that you don\'t mix them within the same **element**.\n\n#### Using child elements\n\nInside your translatable element, define one child element for each language you support, in the same order as they appear in the `languages` property.\n\n```html\n  <h1 data-translatable>\n    <span>Hello world</span>\n    <span>Bonjour le monde</span>\n  </h1>\n```\n\nThis is the most flexible way of defining translations and it allows for the use of nested child elements! *If you need to support translated links, this is the only possible choice*\n\n#### Using string separators\n\nJust provide both language values separated by ` // ` - *note that this is the standard value and can be changed on the initialization options that we are going to cover in more detail below*.\n\n```html\n  <h1 data-translatable>Hello world // Bonjour le monde</h1>\n```\n\nThis is the most simple way to define translations and is very useful if you\'re limited to a CMS interface.\n\n\n## Options\n\nThe script is highly configurable, many options are available when invoking the `domI18n` method that allows the customization of your multi language support.\n\nHere is the complete list of properties you can set on startup and their default values:\n\n- **rootElement**:[HtmlElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) - Container element used to narrow the lookup for translatable elements, can be used to define more restricted translatable areas on your page, defaults to `window.document`.\n- **selector**:string | array-like object - Defines which objects have multilingual support, can be a [query selector](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector) string or an array like object, such as a [jQuery](https://jquery.com/) selector. Defaults to a `\'[data-translatable]\'` query selector string.\n- **separator**:string - A string that will be used to separate the different languages on your element, defaults to `\' // \'`.\n- **languages**:array - The main source to define what languages the translation should support, please note that the languages should be listed on the same order as they appear here. Defaults to a `[\'en\']` array.\n- **defaultLanguage**:string - Defines a default language to be used in the application. Should be a string reference to one of the languages defined on the `languages` array. Defaults to `\'en\'`.\n- **currentLanguage**:string - Defines the language to be used when starting the transation script, defaults to `\'en\'`.\n- **translatableAttr**:string - Reference to a [dataset](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset) attribute name that points to an element text attribute that should be tranlsated, useful when you want to translate attributes such as `title`, `alt` or similar. Defaults to `\'data-translatable-attr\'`.\n- **enableLog**:boolean - If `true` log messages are enabled (e.g. error if language not found). Defaults to `true`.\n\n### Example:\n\nBelow is an example of initializing `domI18n` with the most common used options:\n\n```html\n  <h1 data-translatable>Hello world // Bonjour le monde</h1>\n  <p data-translatable>The quick brown fox jumps over the lazy dog. // Le rapide renard marron saute par-dessus le chien paresseux.</p>\n  <script src="../dist/dom-i18n.js"></script>\n  <script>\n    domI18n({\n      selector: \'[data-translatable]\',\n      separator: \' // \',\n      languages: [\'en\', \'fr\'],\n      defaultLanguage: \'en\'\n    });\n  </script>\n```\n\n\n## API\n\nThe `domI18n` method also returns an object providing a `changeLanguage` method to change the language on the fly. That can be very useful for setting up a **language selection** interface.\n\n```js\nvar i18n = window.domI18n({\n  selector: \'[data-translatable]\',\n  separator: \' // \',\n  languages: [\'en\', \'fr\'],\n  defaultLanguage: \'en\'\n});\n\ni18n.changeLanguage(\'fr\');\n```\n\n- - -\n\n*DISCLAIMER: Please note that this is a hacky way of integrating internationalization support into your application and its use probably only makes sense when you have big limitations, such as having zero control over the server-side code or no JavaScript framework in use.*\n\n\n## License\n\nMIT \xc2\xa9 [Ruy Adorno](http://ruyadorno.com/)\n\n[npm-url]: https://npmjs.org/package/dom-i18n\n[npm-image]: https://badge.fury.io/js/dom-i18n.svg\n[travis-url]: https://travis-ci.org/ruyadorno/dom-i18n\n[travis-image]: https://travis-ci.org/ruyadorno/dom-i18n.svg?branch=master\n[coveralls-url]: https://coveralls.io/r/ruyadorno/dom-i18n\n[coveralls-image]: https://img.shields.io/coveralls/ruyadorno/dom-i18n/master.svg\n\n'