b'# CSSans Pro - The Colourful, Sassy, CSS Font\n\n<a target="_blank" href="https://cssans.pro">\n    <img alt="Font specimen" src="https://cssans.pro/cssans.pro.jpg" />\n</a>\n\n> **CSSans Pro** is a just-for-fun CSS project by [Andronache Izabela](https://www.instagram.com/izadraws/) and [Codrin Pavel](https://twitter.com/zerospree).\n\n## Table of Contents\n\n* [Overview](#overview) - all characters & CSS classes\n* [Quick Start](#quick-start) - Get **CSSans Pro** up and running in seconds\n* [Quick Start - JavaScript Version](#quick-start---javascript-version) - Let JS do the writing\n* [Options](#options)\n  * [Colors](#colors)\n  * [Letter-Spacing](#letter-spacing)\n  * [Word-Spacing](#word-spacing)\n  * [Line-Height](#line-height)\n  * [Italic (slanted text)](#italic-slanted)\n  * [Alignment: Center](#align-center)\n  * [Alignment: Right](#align-right)\n* [Browser Support](#browser-support) - How to use without CSS variables\n* [Accessibility](#accessibility) - Super, super important\n* [Installation](#installation) - Instructions for running this repo locally\n\n\n## Overview\n\n#### Uppercase\n* A - Z `<b class="cssans:LETTER"></b>`\n\n#### Lowercase\n* a - z `<b class="cssans:letter"></b>`\n\n#### Numbers\n* 0 - 9 `<b class="cssans:NUMBER"></b>`\n\n#### Symbols\n* !~,.*()?@:;\'-+=/&$#_ `<b class="cssans:CHARACTER"></b>`\n\n#### Escaped Symbols\n* \\` `<b class="cssans:%60"></b>`\n* ^ `<b class="cssans:%5E"></b>`\n* % `<b class="cssans:%25"></b>`\n* [ `<b class="cssans:%5B"></b>`\n* ] `<b class="cssans:%5D"></b>`\n* { `<b class="cssans:%7B"></b>`\n* } `<b class="cssans:%7D"></b>`\n* " `<b class="cssans:%22"></b>`\n* < `<b class="cssans:%3C"></b>`\n* \\> `<b class="cssans:%3E"></b>`\n* \\ `<b class="cssans:%5C"></b>`\n* | `<b class="cssans:%7C"></b>`\n\n## Quick Start\n\nGrab the minified CSS file from the repo:\n* [`/dist/cssans.min.css`](https://raw.githubusercontent.com/ZeroSpree/CSSans.Pro/master/dist/cssans.min.css)\n\nAdd in some example `HTML` markup:\n```html\n<div class="cssans cssans--center">\n    <div class="cssans__accessible">CSSans Pro</div>\n\n    <div class="cssans__word">\n        <b class="cssans:C"></b>\n        <b class="cssans:S"></b>\n        <b class="cssans:S"></b>\n        <b class="cssans:a"></b>\n        <b class="cssans:n"></b>\n        <b class="cssans:s"></b>\n    </div>\n\n    <div class="cssans__word">\n        <b class="cssans:P"></b>\n        <b class="cssans:r"></b>\n        <b class="cssans:o"></b>\n    </div>\n</div>\n```\n\n... profit!\n\nHere\'s a quick breakdown:\n* Each character is **a single element** with a class of `cssans:CHAR`\n* Each individual word goes inside a `.cssans__word` container. This will make sure all text is being spaced properly.\n* For improved accessibility, you should add the original text in a `.cssans__accessible` container. [Definitely read this](#accessibility)\n* **CSSans Pro** provides some options and built-in helper classes such as `.cssans--center`. [See more Options](#options)\n\n\n## Quick start - JavaScript version\n\nGrab the minified CSS and JS files from the repo:\n* [`/dist/cssans.min.css`](https://raw.githubusercontent.com/ZeroSpree/CSSans.Pro/master/dist/cssans.min.css)\n* [`/dist/cssans.min.js`](https://raw.githubusercontent.com/ZeroSpree/CSSans.Pro/master/dist/cssans.min.js)\n\nAdd in some example `HTML` markup:\n```html\n<div id="foo">CSSans Pro</div>\n```\n\nCall `CSSans(element, text)` \n```javascript\nvar element = document.getElementById(\'foo\');\nvar text = element.innerText;\nCSSans(element, text);\n```\n\n> You can grab the unminified CSSans() function from \n[`/_src/cssans/js/cssans.js`](https://github.com/ZeroSpree/CSSans.Pro/blob/master/_src/cssans/js/cssans.js) \nto see what\'s going on in there. Nothing much, really, feel free to make your own.\n\n\n## Options\n\n### Colors\n\nThe color pallete is controlled by 5 CSS variables written as `--cssans-**WHICHCOLOR**: **R**, **G**, **B**`. \n\nThis notation uses only the color **values**, without the `rgb()` syntax.\n\n```css\n--cssans-primary: 31, 51, 104;    // blue\n--cssans-secondary: 237, 21, 118; // pink\n--cssans-accent1: 43, 208, 247;   // light blue\n--cssans-accent2: 255, 92, 92;    // orange\n--cssans-accent3: 255, 216, 9;    // yellow\n```\n\n### Letter-spacing\n\n```css\n--cssans-letter-spacing: 0.1em;\n```\n\n### Word-spacing\n\n```css\n--cssans-word-spacing: 1em;\n```\n\n\n### Line-height\n```css\n--cssans-line-height: 1.1em;\n```\n\n### Align: center\n\nUse the `cssans--center` class on the container that holds your font markup.\n\nThis class will make sure all words align properly in the middle of the parent container.\n> Simply setting `text-align:center;` won\'t do quite as well since words are separated by margins.\n\n```html\n<div class="cssans--center">\n    <div class="cssans__word">...</div>\n</div>\n```\n\n### Align: right\n\nUse the `cssans--right` class on the container that holds your font markup.\n\nThis class will help you properly align text to the right side of the parent container.\n\n```html\n<div class="cssans--right">\n    <div class="cssans__word">...</div>\n</div>\n```\n\n### Italic (slanted)\n\nUse the `cssans--slanted` class on the container that holds your font markup to give the font an _italicized_ look.\n\nNote: this class literally adds `transform: skew(-15deg);` to each `.cssans__word`. Feel free to experiment \xf0\x9f\x91\x8d\n\n```html\n<div class="cssans--slanted">\n    <div class="cssans__word">...</div>\n</div>\n```\n\n## Browser support\n\n**CSSans Pro** can work on older browsers that don\'t support CSS Custom Properties. Here\'s a few ways to do that, pick the one that suits best:\n\n* Use the prebuilt IE compatible version of **CSSans Pro** [`/dist/cssans.min.ie.css`](https://github.com/ZeroSpree/CSSans.Pro/blob/master/dist/cssans.min.ie.css) - \nthis file contains no CSS Variables, all the code is precompiled to normal CSS properties. Feel free to find/replace all colors and spacings you\'d like to customize.\n\n* [Install](#installation) the repo locally and build your own version of `cssans.min.ie.css` or...\n\n* Use a polyfil, such as [css-vars-ponyfill](https://github.com/jhildenbiddle/css-vars-ponyfill)\n\n\n## Accessibility\n\n> You don\'t need to read this if you use the `CSSans()` JavaScript function.\n\n**CSSans Pro** is made out of CSS shapes that screen readers and other assistive technologies cannot identify.\n\nIn order to keep your site accessible, **please** use the built-in `.cssans__accessible` class. It\'s really easy, look:\n\n```html\n<div class="cssans__accessible">I can be read by a screen reader, hurray!</div>\n```\n\n\n## Installation\n\n1. You will need a working [`Jekyll`](https://jekyllrb.com/) environment and [`NPM`](https://www.npmjs.com/) installed on your machine. Once you have installed NPM, you will need to install `gulp` into your global root directory if you haven\'t already with `npm install -g gulp`.\nMake sure these are working on your system before proceeding.\n\n2. Clone the repo\n\n3. Install dependencies with `npm install`\n\n4. Run `gulp`\n\nAt this point, BrowserSync should open a new browser tab at `http://localhost:3000` and you\'re good to go!\n\nThe repository contains all the files for **CSSans Pro**, as well as the presentation site.\n\nYou can find the font files under `_src/cssans/sass/`. All the CSS Custom Properties are set in `_common.scss`.\n\nThe `dist` directory should update on-the-fly as you update the files, so you can grab the minified files from the `_dist` folder as soon as you finish editing.\n\nHave fun!\n'