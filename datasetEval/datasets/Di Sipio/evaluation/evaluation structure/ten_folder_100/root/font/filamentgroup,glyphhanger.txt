b'# glyphhanger\n\nYour web font utility belt. It can subset web fonts. It can show you what unicode-ranges are used on a web site (optionally per font-family). It can also subset web fonts automatically using the unicode-ranges it found. It makes julienne fries.\n\n## Installation\n\nAvailable on [npm](https://www.npmjs.com/package/glyphhanger).\n\n```sh\nnpm install -g glyphhanger\n```\n\n### Prerequisite: `pyftsubset`\n\nSee [https://github.com/fonttools/fonttools](https://github.com/fonttools/fonttools).\n\n```sh\npip install fonttools\n```\n\n```sh\n# Additional installation for --flavor=woff2\ngit clone https://github.com/google/brotli\ncd brotli\npython setup.py install\n\n# Additional installation for --flavor=woff --with-zopfli\ngit clone https://github.com/anthrotype/py-zopfli\ncd py-zopfli\ngit submodule update --init --recursive\npython setup.py install\n```\n\n## Usage\n\n### Find the glyphs in a local file or url\n\n```sh\n# local file\nglyphhanger ./test.html\nglyphhanger ./test.txt\n\n# output characters instead of Unicode code points\nglyphhanger ./test.html --string\n\n# remote URL\nglyphhanger http://example.com\n\n# multiple URLs, optionally using HTTPS\nglyphhanger https://google.com https://www.filamentgroup.com\n\n# show results for each font-family on the page\nglyphhanger ./test.html --json\n\n# show results only for one or more font-family names\nglyphhanger ./test.html --family=\'Open Sans, Roboto\'\n\n# Show version\nglyphhanger --version\n\n# See more usage\nglyphhanger --help\n```\n\n### Debug Mode\n\nReplaces `--verbose` in `v3.0.0`.\n\n```sh\n> DEBUG=glyphhanger* glyphhanger http://example.com\n```\n\n### Subset font files automatically\n\nUse `--subset=*.ttf` to select some font files for subsetting. Note that you can also [subset yourself manually with `pyftsubset`](docs/manual-subset.md) (but glyphhanger is easier).\n\n_Note that the `DEBUG` output documented above will log the specific `pyftsubset` command that `glyphhanger` used. Read more [about `pyftsubset` defaults](https://github.com/filamentgroup/glyphhanger/issues/49)._\n\n#### Just make optimized TTF/WOFF/WOFF2 files\n\n```sh\n> glyphhanger --subset=*.ttf\n\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.ttf (was 145.06 KB, now 70.25 KB)\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.zopfli.woff (was 145.06 KB, now 36.51 KB)\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.woff2 (was 145.06 KB, now 28.73 KB)\n```\n\n#### Subset to specific characters only (no URLs)\n\n```sh\n> glyphhanger --whitelist=ABCD --subset=*.ttf\n\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.ttf (was 145.06 KB, now 4.42 KB)\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.zopfli.woff (was 145.06 KB, now 2.84 KB)\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.woff2 (was 145.06 KB, now 2.24 KB)\n```\n\n#### Subset to the glyphs at a URL\n\n```sh\n> glyphhanger ./test.html --subset=*.ttf\n\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.ttf (was 145.06 KB, now 24 KB)\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.zopfli.woff (was 145.06 KB, now 14.34 KB)\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.woff2 (was 145.06 KB, now 11.37 KB)\n```\n\n#### Subset to the glyphs at a URL only using content that matches a specific font-family\n\n```sh\n> glyphhanger ./test.html --subset=*.ttf --family=\'Lato,sans-serif\'\n\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.ttf (was 145.06 KB, now 24 KB)\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.zopfli.woff (was 145.06 KB, now 14.34 KB)\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.woff2 (was 145.06 KB, now 11.37 KB)\n```\n\n#### Specify the formats to output\n\nAvailable formats: `ttf,woff,woff-zopfli,woff2`.\n\n```sh\n> glyphhanger --whitelist=ABCD --formats=woff2,woff --subset=*.ttf\n\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.woff (was 145.06 KB, now 2.88 KB)\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.woff2 (was 145.06 KB, now 2.24 KB)\n```\n\n#### Output a @font-face block with `--css`\n\nBecause we\xe2\x80\x99re not parsing URLs for glyphs, we can optionally use `--family=\'My Family Name\'` to set the name used in the `@font-face` block. Normally `--family` would tell GlyphHanger to only parse text data from nodes using one of the fonts listed in `--family`. Using `--subset` and `--css` together will write a CSS file, too.\n\n```sh\n> glyphhanger --whitelist=ABCD --formats=woff2,woff --subset=*.ttf --css\n\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.woff (was 145.06 KB, now 2.88 KB)\nSubsetting LatoLatin-Regular.ttf to LatoLatin-Regular-subset.woff2 (was 145.06 KB, now 2.24 KB)\nWriting CSS file: LatoLatin-Regular.css\n\n@font-face {\n  font-family: LatoLatin;\n  src: url(sourcesanspro-regular-subset.woff2) format("woff2"), url(sourcesanspro-regular-subset.woff) format("woff");\n  unicode-range: U+41-44;\n}\n```\n\n### Whitelist Characters\n\n```sh\n# Add in a whitelist of specific characters\nglyphhanger https://google.com --whitelist=abcdefgh\n\n# Add in a whitelist as a unicode range\nglyphhanger https://google.com --whitelist=U+26\n\n# shortcut to add in a whitelist of all of US-ASCII (with an optional whitelist)\nglyphhanger https://google.com --US_ASCII --whitelist=\xe2\x84\xa2\n\n# shortcut to add in a whitelist of all Latin characters (with an optional whitelist)\nglyphhanger https://google.com --LATIN --whitelist=\xe2\x84\xa2\n```\n\n#### Manual subsetting\n```sh\nglyphhanger --whitelist=ABCD --subset=*.ttf\n```\n\n#### Converting unicode ranges and back again\n\n```sh\n# Convert a string to a unicode-range\nglyphhanger --whitelist=ABCD\nglyphhanger --US_ASCII\nglyphhanger --US_ASCII --whitelist=ABCD\n\n# Convert a unicode-range to a string\nglyphhanger --whitelist=U+41-44 --string\n```\n\n### Use the spider to gather URLs from links\n\nFinds all the `<a href>` elements on the page with *local* (not external) links and adds those to the glyphhanger URLs. If you specify `--spider-limit`, `--spider` is assumed.\n\n```sh\nglyphhanger ./test.html --spider\nglyphhanger ./test.html --spider-limit\nglyphhanger ./test.html --spider-limit=10\n\n# No limit\nglyphhanger ./test.html --spider-limit=0\n```\n\nDefault `--spider-limit` is 10. Set to `0` for no limit. This will greatly affect how long the task takes.\n\n### Only search your page for visible text\n\nMake your output even smaller by only subsetting characters that are visible on the page.\n\n```sh\nglyphhanger ./test.html --onlyVisible\n```\n\n### Only search your page for text matching a CSS selector\n\nLimit results to text inside of elements that match a CSS selector\n\n```sh\nglyphhanger ./test.html --cssSelector="pre, #header, .popUp". If paired with `--onlyVisible`, it will only return elements that are both visible and match the selector\n```\n\n### Advanced: `jsdom` Mode \xe2\x9a\xa0\xef\xb8\x8f\n\nJSDOM mode can be useful running against static pages that don\xe2\x80\x99t use a lot of JavaScript generated content. While JSDOM mode can handle some JavaScript generated content, Puppeteer mode should be the safest method for most use cases.\n\nJSDOM mode will also be much faster when running against files on a local filesystem rather than URL targets.\n\nRead more about [the difference between JSDOM and a full headless browser](https://github.com/jsdom/jsdom/wiki/jsdom-vs.-PhantomJS) (like the default mode that glyphhanger uses: Puppeteer/headless Chrome).\n\n```sh\n# use faster jsdom mode instead of headless Chrome\nglyphhanger ./test.html --jsdom\n\n# jsdom mode works with standard input too\necho "this is a test" | glyphhanger --jsdom\n```\n\n## Troubleshooting\n\n* `glyphhanger` uses Puppeteer, the headless Chrome browser. Check out the [Puppeteer Troubleshooting documentation](https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md#chrome-headless-doesnt-launch).\n\n## Testing\n\n* Build Status: [![Build Status](https://travis-ci.org/filamentgroup/glyphhanger.svg?branch=master)](https://travis-ci.org/filamentgroup/glyphhanger)\n\n`npm test` will run the tests.\n\nOr, alternatively `npx mocha`.\n\n## Enhancement Queue\n\n* [Top Voted Issues \xf0\x9f\x91\x8d](https://github.com/filamentgroup/glyphhanger/issues?q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc)\n\n## Alternatives to GlyphHanger\n\n* [unicode-ranger from Jeremy Wagner](https://github.com/malchata/unicode-ranger)\n* [subfont from Peter M\xc3\xbcller](https://www.npmjs.com/package/subfont)'