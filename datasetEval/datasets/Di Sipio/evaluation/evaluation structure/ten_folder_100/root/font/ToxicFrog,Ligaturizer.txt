b'# Ligaturizer #\n\n![](images/banner.png)\n\n**Add ligatures to any coding font!**\n\nThis script copies the ligatures (glyphs and rendering information) from [Fira Code](https://github.com/tonsky/FiraCode) into any other TrueType or OpenType font. (Note that the ligatures are scale-corrected, but otherwise copied as is from Fira Code; it doesn\'t create new ligature graphics based on the font you\'re modifying.)\n\nThis repo contains a [Fontforge python script](ligaturize.py) that you can use to add the Fira Code ligatures to any font, as well as submodules for some popular coding fonts and [another script](build.py) for ligaturizing all of them at once.\n\nPre-ligaturized versions are available under [releases](https://github.com/ToxicFrog/Ligaturizer/releases).\n\nHere\'s a couple examples of the fonts generated: SF Mono & Menlo with ligatures (note the `!=` and `->`):\n![](images/sf-mono.png)\n![](images/menlo.png)\n\n## Requirements ##\n**This Repo**: You\'ll need the repo and its submodules, so `git clone` with `--recurse-submodules`.\n\n**Using the Fonts**: See the [FiraCode README](https://github.com/tonsky/FiraCode) for a list of supported editors.\n\n**Script**: This script requires FontForge python bindings. For Debian/Ubuntu they are available in `python-fontforge` package. For OpenSUSE and NixOS, they are included in the `fontforge` package. For macOS, they are available via brew (`brew install fontforge`).\n\n## Using the Script ##\n### Automatic ###\n\nUse automatic mode to easily convert 1 or more font(s).\n\n1.  Put the font(s) you want into `fonts/`.\n1.  Edit `ligatures.py` to disable any ligatures you don\'t want, and/or enable any (non-ligature) characters you want from Fira Code in addition to the ligatures.\n1.  Edit `build.py` to add your new font(s) to the `prefixed_fonts` list. It supports globbing, so if (e.g.) you want to ligaturize all the different weights of FooFont you can add `\'FooFont*\'` to the list.\n1.  Run `make`.\n1.  Retrieve the ligaturized fonts from `fonts/output/`.\n1.  The output fonts will be renamed with the prefix "Liga".\n\n### Manual ###\n\n1.  Move/copy the font you want to ligaturize into `fonts/` (or somewhere else convenient).\n1.  Edit `ligatures.py` to disable any ligatures you don\'t want.\n1.  Run the script:\n\n    ```\n    $ fontforge -lang py -script ligaturize.py path/to/input/font.ttf\n        --output-dir=path/to/output/dir/ \\\n        --output-name=\'Name of Ligaturized Font\'\n    ```\n    e.g.\n\n    ```\n    $ fontforge -lang py -script ligaturize.py fonts/Cousine-Regular.ttf\n        --output-dir=\'fonts/output/\' \\\n        --output-name=\'Ligaturized Cousine\'\n    ```\n\n    Which will produce `fonts/output/LigaturizedCousine-Regular.ttf`.\n\nThe font weight will be inherited from the original file; the font name will be replaced with whatever you specified in `--output-name`. You can also use `--prefix` instead, in which case the original name will be preserved and whatever you put in `--prefix` will be prepended to it.\n\n`ligatures.py` supports some additional command line options to (e.g.) change which font ligatures are copied from or enable copying of individual character glyphs; run `fontforge -lang=py ligaturize.py --help` to list them.\n\n## Misc. ##\n### Credit ###\nThis script was originally written by [IlyaSkriblovsky](https://github.com/IlyaSkriblovsky) for adding ligatures to DejaVuSans Mono ([dv-code-font](https://github.com/IlyaSkriblovsky/dv-code-font)). [Navid Rojiani](https://github.com/rojiani) made a few changes to generalize the script so that it works for any font. [ToxicFrog](https://github.com/ToxicFrog) has made a large number of contributions.\n\n### Contributions ###\nContributions always welcome! Please submit a Pull Request, or create an Issue if you have an idea for a feature/enhancement (or bug).\n\n### Related Projects ###\nFor more awesome programming fonts with ligatures, check out:\n1. [FiraCode](https://github.com/tonsky/FiraCode)\n2. [Hasklig](https://github.com/i-tu/Hasklig)\n'