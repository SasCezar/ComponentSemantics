b'# Typefaces\n\nNPM packages for Open Source typefaces \xe2\x80\x94 making it easier to self-host\nwebfonts.\n\nhttps://www.bricolage.io/typefaces-easiest-way-to-self-host-fonts/\n\n## Why\n\n* Self-hosting is *significantly faster*. Loading a typeface from Google\n  Fonts or other hosted font service adds *an extra (blocking) network\nrequest*. [In my\ntesting](https://github.com/reactiflux/reactiflux.com/pull/21), I\xe2\x80\x99ve\nfound replacing Google Fonts with a self-hosted font can improve a\nsite\xe2\x80\x99s speedindex by ~300 miliseconds on desktop and 1+ seconds on 3g.\nThis is a big deal.\n* Your *fonts load offline*. It\xe2\x80\x99s annoying to start working on a web\n  project on the train or airplane and see your interface screwed up\nbecause you can\xe2\x80\x99t access Google fonts. I remember once being in this\nsituation and doing everything possible to avoid reloading a project as\nI knew I\xe2\x80\x99d lose the fonts and be forced to stop working.\n* *Go beyond Google Fonts*. Some of my favorite typefaces aren\xe2\x80\x99t on\n  Google Fonts like [Clear Sans](https://01.org/clear-SANS), [Cooper\nHewitt](https://www.cooperhewitt.org/open-source-at-cooper-hewitt/cooper-hewitt-the-typeface-by-chester-jenkins/),\nand\n[Aleo](https://www.behance.net/gallery/8018673/ALEO-Free-Font-Family).\n* All web(site|app) dependencies should be managed through NPM whenever\n  possible. Tis the modern way.\n\n## What\n\nEach typeface package ships with all the necessary font files and css to\nself-host an open source typeface.\n\nAll Google Fonts have been added as well as a small but growing list of\nother open source fonts. Open an issue if you want a font added!\n\n## How\n\nCouldn\xe2\x80\x99t be easier. This is how you\xe2\x80\x99d add Open Sans.\n\n```\nnpm install --save typeface-open-sans\n```\n\nThen in your app or site\xe2\x80\x99s entry file.\n\n```javascript\nrequire("typeface-open-sans")\n```\n\nAnd that\xe2\x80\x99s it! You\xe2\x80\x99re now self-hosting Open Sans!\n\nIt should take < 5 minutes to swap out Google Fonts.\n\nTypeface assumes you\xe2\x80\x99re using webpack with loaders setup for loading css\nand font files (you can use Typeface with other setups but webpack makes\nthings really really simple). Assuming your webpack configuration is\nsetup correctly you then just need to require the typeface in the entry\nfile for your project.\n\nMany tools built with webpack such as\n[Gatsby](https://github.com/gatsbyjs/gatsby) and [Create React\nApp](https://github.com/facebookincubator/create-react-app) are already\nsetup to work with Typefaces. Gatsby by default also embeds your CSS in\nyour `<head>` for even faster loading.\n\nIf you\xe2\x80\x99re not using webpack or equivalent tool that allows you to\nrequire css, then you\xe2\x80\x99ll need to manually integrate the index.css and\nfont files from the package into your build system.\n\n### Alternatives without Webpack\n\n- For Ember users, there is an addon https://github.com/jeffjewiss/ember-typeface\n\n## Adding other fonts\n\nThe easiest way to find out if your favorite typeface is supported is by\nsearching on NPM or in the packages directory in this repo.\n\nI\xe2\x80\x99d love to see every open source font on NPM! Open an issue if a\nfavorite typeface of yours is missing. I\xe2\x80\x99ve programmatically published\nall fonts from Google Fonts and am planning on doing the same with fonts\nhosted on FontSquirrel through [their\nAPI](https://www.fontsquirrel.com/blog/2010/12/the-font-squirrel-api).\n\n## Other ideas to explore\n\n* Add subsetted version of every font.\n* Initially I\xe2\x80\x99ve just added support for the Latin version of fonts.\n  Would love to hear ideas for how to support other languages. Perhaps\nadditional css files e.g. `require(\'open-sans/greek.css\')`?\n* Ship fallback css helpers \xe2\x80\x94 figuring out your fallback css isn\xe2\x80\x99t\n  particularly easy. Perhaps there\xe2\x80\x99s a way to automate this. E.g. if\nyou\xe2\x80\x99re using typeface X at fontsize Y with fallback font Z, here\xe2\x80\x99s a\nfunction to generate the fallback css.\n* Explore futher optimizations for loading fonts.\n  https://www.zachleat.com/web/comprehensive-webfonts/ has a long list.\nMost require painful per-project scripting. What if the best strategies\ncould be automated?\n'