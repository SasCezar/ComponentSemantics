b"# About\n\nGoluwa is a game engine, framework, a collection of utilities and experiments written in [LuaJIT](http://luajit.org/) leveraging FFI.\n\n\n![ScreenShot](https://gitlab.com/CapsAdmin/goluwa-assets/raw/master/extras/screenshots/goluwa.png)\n\n# Features\n* [FFI build system](https://github.com/CapsAdmin/ffibuild) to automatically build LuaJIT FFI bindings.\n* [gui](engine/lua/libraries/graphics/gui) with focus on automatic layout and [GWEN](!https://github.com/garrynewman/GWEN) skin support\n* [font effects](framework/lua/libraries/graphics/fonts) to create outlined, shadowed, etc text.\n* [markup language](engine/lua/libraries/graphics/gfx)\n* [l\xc3\xb6ve wrapper](game/lua/libraries/love) that lets you run L\xc3\xb6ve games in Goluwa\n* [glua wrapper](game/lua/libraries/gmod) that lets you run GarrysMod Lua in Goluwa\n* [entity editor](game/lua/autorun/graphics) similar to [PAC3's editor](http://steamcommunity.com/sharedfiles/filedetails/?id=104691717)\n* [filesystem](core/lua/libraries/filesystem) with the ability to mount and treat many archive formats as directories\n* [source engine](engine/lua/libraries/steam) formats are supported\n\n##### Prototyping\n* all resources can be loaded from the internet with urls\n* fonts can be loaded directly from google webfont, dafont and other places\n* many model, image and sound formats are supported\n* most code can be reloaded without the need to restart\n* integration with zerobrane\n\n# Structure\nGoluwa is split into 4 directories. ```core > framework > engine > game```. Going backwards, each directory depends on the previous directory, so if you delete the engine directory the game directory wont load.\n\n##### -1. goluwa|.cmd\nThe shell and powershell script that will only download and launch luajit|.exe with core/lua/boot.lua\n##### 0. core/lua/boot.lua\nResponsible for downloading other binaries, the zerobrane ide, updating goluwa with or without git and launching goluwa. It's mostly lua but some of its helper functions use shell and powershell.\n##### 1. Core\nContains the barebone framework that has no explicit dependencies on any external shared libraries.\n##### 2. Framework\nThe basic framework utilizing sdl, opengl, openal, etc but does not implement anything. It has a renderer which is neither 2d or 3d, game math library, high level socket library, 2d rendering library, etc.\n##### 3. Engine\nThe engine contains a 3d renderer, source engine asset compatibility, steam integration, zerobrane integration, networking, entities, gui, markup language, etc.\n##### 4. Game\nThe game folder contains very high level scripts such as L\xc3\xb6ve2D implemented in goluwa, GarrysMod Lua implemented in goluwa, chatsounds, chatbox, scoreboard, player movement, etc.\n\n# Caveats\n\nWhile I want to support OSX and Windows they become low priority due to lack of windows and osx machines. I try to test goluwa in a VM and ask friends but that's about as much as I can do.\n\nWriting everything in LuaJIT also comes with some challenges. I try to write JIT compilable code, especially in areas that are intensive but this is not always easy without resorting to ugly code which I try to avoid.\n\n# Credits\n* [Garry Newman](https://github.com/garrynewman/) - I learned programming in garrysmod and many of the ideas and libraries in goluwa were developed in garrysmod initially.\n* [Crytek](http://www.crytek.com/) - Playing around with the Crysis Wars SDK was how I started to learn C++. I made [oohh\n](https://github.com/capsadmin/oohh) which was a garrysmod-like mod attempt. The C++ Lua binder I made there included a standard game oriented lua library which eventualy evolved into goluwa.\n* [Ronny](http://steamcommunity.com/id/76561197990112245/) - Helped me making the gui when it was made for [oohh](https://github.com/CapsAdmin/oohh).\n* [Malkia](https://github.com/malkia) - the source inspiration for doing this entirely in luajit was [ufo](https://github.com/malkia/ufo)\n* [Morten Erlandsen](https://github.com/mortenae) - Provided help and code with BSP (especially the displacement bit) and supporting linux early on.\n* [Leandro Fonseca](https://github.com/Shell64) - Started working on the l\xc3\xb6ve wrapper early on and has helped with explaining how l\xc3\xb6ve works.\n* [Somepotato](https://github.com/Someguynamedpie) - Started proper font support using a font atlas.\n* [ZeqMacaw](http://steamcommunity.com/id/zeqmacaw) - The source engine MDL decoding code was based on the [CrowbarTool](http://steamcommunity.com/groups/CrowbarTool)\n"