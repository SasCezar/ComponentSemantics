b'```shell\n     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97   \xe2\x96\x88\xe2\x96\x88\xe2\x95\x97 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97\n    \xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d \xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d \xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97  \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91 \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d \xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d\n    \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97   \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91   \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91 \xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97 \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91    \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97\n    \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91      \xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d   \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91   \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91 \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91\xe2\x95\x9a\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91    \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91    \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91\n    \xe2\x95\x9a\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97 \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91      \xe2\x95\x9a\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x9d \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91 \xe2\x95\x9a\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91    \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91\n     \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d       \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d  \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d  \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d    \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d    \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d\n```\n\n![cfont styles](https://raw.githubusercontent.com/dominikwilkowski/cfonts/master/img/example1.png)\n\n\n<p align="center"><img src="https://raw.githubusercontent.com/dominikwilkowski/cfonts/master/img/example2.png" alt="api example"></p>\n<p align="center"><a href="https://nodei.co/npm/cfonts/"><img src="https://nodei.co/npm/cfonts.png?downloads=true" alt="npm status"></a></p>\n<p align="center"><a href="https://travis-ci.org/dominikwilkowski/cfonts"><img src="https://travis-ci.org/dominikwilkowski/cfonts.svg?branch=master" alt="build status"></a></p>\n\n<p align="center">This is a silly little command line tool for sexy fonts in the console. <strong>Give your cli some love.</strong></p>\n\n## Installing\n\nTo install the CLI app, simply NPM install it globally.\n\n```shell\n$ npm install cfonts -g\n```\n\nTo use it in your shell:\n\n```shell\n$ cfonts "Hello|World\\!"\n```\n\n_Remember to escape the `!` character with `\\` in the shell_\n\nOr use it in your project:\n\n```js\nconst CFonts = require(\'cfonts\');\n\nCFonts.say(\'Hello|world!\', {\n\tfont: \'block\',              // define the font face\n\talign: \'left\',              // define text alignment\n\tcolors: [\'system\'],         // define all colors\n\tbackground: \'transparent\',  // define the background color, you can also use `backgroundColor` here as key\n\tletterSpacing: 1,           // define letter spacing\n\tlineHeight: 1,              // define the line height\n\tspace: true,                // define if the output text should have empty lines on top and on the bottom\n\tmaxLength: \'0\',             // define how many character can be on one line\n});\n```\n\n_All settings are optional and shown here with their default_\n\nYou can use CFonts in your project without the direct output to the console:\n\n```js\nconst CFonts = require(\'cfonts\');\n\nconst prettyFont = CFonts.render(\'Hello|world!\', {/* same settings object as above */});\n\nprettyFont.string  // the ansi string for sexy console font\nprettyFont.array   // returns the array for the output\nprettyFont.lines   // returns the lines used\nprettyFont.options // returns the options used\n```\n\n\n## Usage\n\nUsing the CLI is easy.\n\n```\nUsage: cfonts  "<value>" [option1] <input1> [option2] <input1>,<input2> [option3] etc...\n```\n\nAt any point you can run the *help* command to get a full list of commands and\nhow to use them.\n\n```shell\n$ cfonts --help\n```\n\n\n## Supported Characters\n\n|     |     |     |     |             |\n|-----|-----|-----|-----|-------------|\n| `A` | `O` | `2` | `2` | `=`         |\n| `B` | `P` | `3` | `3` | `@`         |\n| `C` | `Q` | `4` | `4` | `#`         |\n| `D` | `R` | `5` | `5` | `$`         |\n| `E` | `S` | `6` | `6` | `%`         |\n| `F` | `T` | `7` | `7` | `&`         |\n| `G` | `U` | `8` | `8` | `(`         |\n| `H` | `V` | `9` | `9` | `)`         |\n| `I` | `W` | `!` | `!` | `/`         |\n| `J` | `X` | `?` | `?` | `:`         |\n| `K` | `Y` | `.` | `.` | `;`         |\n| `L` | `Z` | `+` | `+` | `,`         |\n| `M` | `0` | `-` | `-` | `\'`         |\n| `N` | `1` | `_` | `_` | ` ` (space) |\n\n\n_The `|` character will be replaced with a line break_\n\n\n## Options\n\n#### -h, --help\nType: `<command>`  \nDefault value: `none`\n\nThis shows a list of all available options.\n\n```shell\n$ cfonts --help\n```\n\n\n#### -V, --version\nType: `<command>`  \nDefault value: `none`\n\nThis shows the installed version.\n\n```shell\n$ cfonts --version\n```\n\n\n#### text\nType: `<string>`  \nDefault value: `""`\n\nThis is the "textinput" to be converted into a nice font\n\n```shell\n$ cfonts "Hello world"\n```\n\n\n#### -f, --font\nType: `<string>`  \nDefault value: `"block"`\n\nThis is the font face you want to use. So far this plugin ships with with following font faces:\n\n```shell\n$ cfonts "text" -f "chrome"\n```\n\n- `block`       [colors: 2] _(default)_\n\t![block font style](https://raw.githubusercontent.com/dominikwilkowski/cfonts/master/img/block.png)\n- `shade`       [colors: 2]\n\t![shade font style](https://raw.githubusercontent.com/dominikwilkowski/cfonts/master/img/shade.png)\n- `chrome`      [colors: 3]\n\t![chrome font style](https://raw.githubusercontent.com/dominikwilkowski/cfonts/master/img/chrome.png)\n- `simple`      [colors: 1]\n\t![simple font style](https://raw.githubusercontent.com/dominikwilkowski/cfonts/master/img/simple.png)\n- `simpleBlock` [colors: 1]\n\t![simple-block font style](https://raw.githubusercontent.com/dominikwilkowski/cfonts/master/img/simple-block.png)\n- `3d`          [colors: 2]\n\t![3d font style](https://raw.githubusercontent.com/dominikwilkowski/cfonts/master/img/3d.png)\n- `simple3d`    [colors: 1]\n\t![simple-3d font style](https://raw.githubusercontent.com/dominikwilkowski/cfonts/master/img/simple-3d.png)\n- `huge`        [colors: 2]\n\t![huge font style](https://raw.githubusercontent.com/dominikwilkowski/cfonts/master/img/huge.png)\n- `console`     [colors: 1]\n\t![console font style](https://raw.githubusercontent.com/dominikwilkowski/cfonts/master/img/console.png)\n\n\n#### -a, --align\nType: `<string>`  \nDefault value: `"left"`\n\nYou can align your text in the terminal with this option. Use the keywords below:\n\n- `left` _(default)_\n- `center`\n- `right`\n\n```shell\n$ cfonts "text" -a "center"\n```\n\n\n#### -c, --colors\nType: `<string list>`  \nDefault value: `[\'system\']`\n\nWith this setting you can set the colors for your font.\nUse the below color strings built in by [chalk](https://github.com/sindresorhus/chalk) or a hex color.  \nProvide colors in a comma-separated string, eg: `red,blue`. _(no spaces)_  \nIf you use a hex color make sure you include the `#` prefix. _(In the terminal wrap the hex in quotes)_  \nThe `system` color falls back to the system color of your terminal.\n\n- `system` _(default)_\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue`\n- `magenta`\n- `cyan`\n- `white`\n- `gray`\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n- `#ff8800` _(any valid hex color)_\n- `#f80` _(short form is supported as well)_\n\n```shell\n$ cfonts "text" --colors white,"#f80"\n```\n\n\n#### -b, --background\nType: `<string>`  \nDefault value: `"transparent"`\n\nWith this setting you can set the background colors for the output. Use the below color strings built in by [chalk](https://github.com/sindresorhus/chalk).\nProvide the background color from the below supported list, eg: \'white\'\n\n- `transparent` _(default)_\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue`\n- `magenta`\n- `cyan`\n- `white`\n- `blackBright`\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n```shell\n$ cfonts "text" --background "Green"\n```\n\n\n#### -l, --letter-spacing\nType: `<integer>`  \nDefault value: `1`\n\nSet this option to widen the space between characters.\n\n```shell\n$ cfonts "text" --letter-spacing 2\n```\n\n\n#### -z, --line-height\nType: `<integer>`  \nDefault value: `1`\n\nSet this option to widen the space between lines.\n\n```shell\n$ cfonts "text" --line-height 2\n```\n\n\n#### -s, --spaceless\nType: `<boolean>`  \nDefault value: `true`\n\nSet this option to false if you don\'t want the plugin to insert two empty lines on top and on the bottom of the output.\n\n```shell\n$ cfonts "text" --spaceless\n```\n\n\n#### -m, --max-length\nType: `<integer>`  \nDefault value: `0`\n\nThis option sets the maximum characters that will be printed on one line. 0 means no max width and the text will break at the edge of the terminal window.\n\n```shell\n$ cfonts "text" --max-length 15\n```\n\n\n## Contributing\nTo build the repo install dependencies via:\n\n```shell\nyarn\n```\n\nand run the watch to continuously transpile the code.\n\n```shell\nnpm run watch\n```\n\nPlease look at the coding style and work with it, not against it ;)\n\n\n## Test\nThe package comes with a bunch of [unit tests](https://github.com/dominikwilkowski/cfonts/tree/master/test/unit) and a\n[test suite](https://github.com/dominikwilkowski/cfonts/blob/master/test/fonttest.js) for font files.\n\nRun the unit tests via:\n\n```shell\nnpm test:unit\n```\n\nRun the font test suite via:\n\n```shell\nnpm test:fonts\n```\n\nThis tool checks:\n- the existence of the font\n- all attributes of a font\n- each character for:\n\t- existence\n\t- consistent width\n\t- consistent lines\n\nOr run all tests via:\n\n```shell\nnpm run test\n```\n\n\n## Release History\n* 2.4.5  -  bumped dependencies, moved to relative links for fonts for webpack support (#22)\n* 2.4.4  -  bumped dependencies\n* 2.4.3  -  bumped dependencies\n* 2.4.2  -  bumped dependencies\n* 2.4.1  -  updated to babel 7, removed runtime from dependencies\n* 2.4.0  -  added font `shade`, added hex color support\n* 2.3.1  -  added tests, fixed options, updated dependencies\n* 2.3.0  -  added apostrophe support in all fonts\n* 2.2.3  -  bumped dependencies\n* 2.2.2  -  bumped dependencies\n* 2.2.1  -  bumped dependencies\n* 2.2.0  -  inside the API you can use line breaks as well as the pipe\n* 2.1.3  -  refactored some loops\n* 2.1.2  -  made WinSize more robust\n* 2.1.1  -  fixed size detection in non-tty environments\n* 2.1.0  -  rebuilt cfonts with pure functions, made colors case-insensitive\n* 2.0.1  -  fixed terminal width detection\n* 2.0.0  -  added tests, split into more pure functions\n* 1.2.0  -  added `transparent` and `system` as default background and color option, added `backgroundColor` as alias for `background`, upgraded deps\n* 1.1.3  -  fixed help text, removing old -t option\n* 1.1.2  -  fixed issue with older commander version #3, updated docs\n* 1.1.1  -  moved from `babel-polyfill` to `babel-plugin-transform-runtime`, added files to package.json, added images to docs, fixed dependencies\n* 1.1.0  -  transpiled code to support node 0.12.15 and up\n* 1.0.2  -  fixed background in `console` font, added comma, added font `huge`, added render method, added candy color\n* 1.0.1  -  added `chrome` font, fonttest\n* 1.0.0  -  refactor, added alignment and line height option, new cli commands, added `simpleBlock`\n* 0.0.13 -  fixed `simple3d`\n* 0.0.12 -  fixed `simple3d` and added to grunt test\n* 0.0.11 -  added `simple3d` font\n* 0.0.10 -  added npmignore, added to docs\n* 0.0.9  -  added `console` font\n* 0.0.8  -  fixed bugs, docs\n* 0.0.7  -  changed to settings object\n* 0.0.6  -  added `3d` font\n* 0.0.5  -  added grunt test\n* 0.0.4  -  fixed `simple` font\n* 0.0.3  -  fixes, added `simple` font\n* 0.0.2  -  fixed paths\n* 0.0.1  -  alpha test\n\n\n## License\nCopyright (c) 2018 Dominik Wilkowski. Licensed under the [GNU GPLv2](https://github.com/dominikwilkowski/cfonts/blob/master/LICENSE).\n'