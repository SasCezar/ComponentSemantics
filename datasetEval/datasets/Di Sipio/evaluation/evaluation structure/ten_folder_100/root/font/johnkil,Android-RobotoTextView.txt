b'Android-RobotoTextView\n======================\n\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Android--RobotoTextView-brightgreen.svg?style=flat)](https://android-arsenal.com/details/1/471)\n\nImplementation of a [TextView][6] and all its direct/indirect subclasses with native support for the [Roboto][5] fonts, includes the brand new [Roboto Slab][3] and [Roboto Mono][4] fonts.\n\nSupported fonts:\n\n* [Roboto][1]\n* [Roboto Condensed][2]\n* [Roboto Slab][3]\n* [Roboto Mono][4]\n\n![image](https://raw.githubusercontent.com/johnkil/Android-RobotoTextView/master/art/RobotoTextView.jpg)\n\n<a href="http://play.google.com/store/apps/details?id=com.devspark.robototextview">\n  <img alt="Get it on Google Play"\n       src="http://www.android.com/images/brand/get_it_on_play_logo_small.png" />\n</a>\n\n\nDeprecated :cry:\n----------\n\nThis project is deprecated in favor of the [native implementation](https://developer.android.com/preview/features/fonts-in-xml.html) introduced in Android O.\n\n\nCompatibility\n-------------\n\nThis library is compatible from API 14 (Android 4.0).\n\n\nDownload\n--------\n\nGradle:\n\n```groovy\ncompile \'com.github.johnkil.android-robototextview:robototextview:4.0.0\'\n```\n\nMaven:\n\n```xml\n<dependency>\n    <groupId>com.github.johnkil.android-robototextview</groupId>\n    <artifactId>robototextview</artifactId>\n    <version>4.0.0</version>\n    <type>aar</type>\n</dependency>\n```\n\n\nUsage\n-----\n\n#### In XML\n\nTo set up a typeface you must specify the parameter `robotoTypeface`:\n\n``` xml\n<com.devspark.robototextview.widget.RobotoTextView\n    xmlns:android="http://schemas.android.com/apk/res/android"\n    xmlns:app="http://schemas.android.com/apk/res-auto"\n    android:layout_width="wrap_content"\n    android:layout_height="wrap_content"\n    app:robotoTypeface="roboto_light_italic"/>\n```\n\nor specify a set of parameters `robotoFontFamily`, `robotoTextWeight` and `robotoTextStyle`:\n``` xml\n<com.devspark.robototextview.widget.RobotoTextView\n    xmlns:android="http://schemas.android.com/apk/res/android"\n    xmlns:app="http://schemas.android.com/apk/res-auto"\n    android:layout_width="wrap_content"\n    android:layout_height="wrap_content"\n    app:robotoFontFamily="roboto"\n    app:robotoTextWeight="light"\n    app:robotoTextStyle="italic"/>\n```\n\nSet up typeface in code:\n\n#### In Code\n\nUsing parameter `typeface`:\n``` java\nRobotoTextView textView = new RobotoTextView(context);\nRobotoTypefaces.setUpTypeface(\n        textView, \n        RobotoTypefaces.TYPEFACE_ROBOTO_LIGHT_ITALIC);\n```\n\nUsing parameters `fontFamily`, `textWeight` and `textStyle`:\n``` java\nRobotoTextView textView = new RobotoTextView(context);\nRobotoTypefaces.setUpTypeface(\n        textView, \n        RobotoTypefaces.FONT_FAMILY_ROBOTO,\n        RobotoTypefaces.TEXT_WEIGHT_LIGHT,\n        RobotoTypefaces.TEXT_STYLE_ITALIC);\n```\n\n#### With Span\n\nUsing parameter `typeface`:\n``` java\nRobotoTypefaceSpan span = new RobotoTypefaceSpan(\n        context, \n        RobotoTypefaces.TYPEFACE_ROBOTO_LIGHT_ITALIC);\nSpannable spannable = new SpannableString("text");\nspannable.setSpan(span, 0, 1, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\n```\n\nUsing parameters `fontFamily`, `textWeight` and `textStyle`:\n``` java\nRobotoTypefaceSpan span = new RobotoTypefaceSpan(\n        context,\n        RobotoTypefaces.FONT_FAMILY_ROBOTO,\n        RobotoTypefaces.TEXT_WEIGHT_LIGHT,\n        RobotoTypefaces.TEXT_STYLE_ITALIC);\nSpannable spannable = new SpannableString("text");\nspannable.setSpan(span, 0, 1, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\n```\n\n#### Roboto Inflater\n\nTo apply roboto typeface for original TextView (like a [Calligraphy][7]) you must attach inflater in your `Activity` class in the `#onCreate()` method.\n```java\n@Override\nprotected void onCreate(@Nullable Bundle savedInstanceState) {\n    RobotoInflater.attach(this);\n    super.onCreate(savedInstanceState);\n}\n```\n\nand specify the typeface in xml:\n``` xml\n<TextView\n    xmlns:android="http://schemas.android.com/apk/res/android"\n    xmlns:app="http://schemas.android.com/apk/res-auto"\n    android:layout_width="wrap_content"\n    android:layout_height="wrap_content"\n    app:robotoTypeface="roboto_light_italic"\n    tools:ignore="MissingPrefix"/>\n```\n\n_Note: Popular IDE\'s (Android Studio, IntelliJ) will likely mark this as an error despite being correct. You may want to add `tools:ignore="MissingPrefix"` to either the View itself or its parent ViewGroup to avoid this. You\'ll need to add the tools namespace to have access to this "ignore" attribute. `xmlns:tools="\nhttp://schemas.android.com/tools"`. See https://code.google.com/p/android/issues/detail?id=65176._\n\n\nGradle\n------\n\nIf you intend to use is not all fonts, the extra fonts can be removed.\n\n```groovy\nandroid.applicationVariants.all{ variant ->\n    variant.mergeAssets.doLast {\n        File fonts = file("$variant.mergeAssets.outputDir/fonts")\n        if (fonts.exists()) {\n            for (File file : fonts.listFiles()) {\n                if (file.getName().contains("RobotoSlab")) {\n                    println("delete " + file.getName() + " font")\n                    file.delete()\n                }\n            }\n        }\n    }\n}\n```\n\n\nLicense\n-------\n\n    Copyright 2014 Evgeny Shishkin\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    \n       http://www.apache.org/licenses/LICENSE-2.0\n    \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n\n[1]: https://www.google.com/fonts/specimen/Roboto\n[2]: https://www.google.com/fonts/specimen/Roboto+Condensed\n[3]: https://www.google.com/fonts/specimen/Roboto+Slab\n[4]: https://www.google.com/fonts/specimen/Roboto+Mono\n[5]: http://www.google.com/design/spec/style/typography.html\n[6]: http://developer.android.com/reference/android/widget/TextView.html\n[7]: https://github.com/chrisjenx/Calligraphy\n\n[0]: https://github.com/google/roboto\n'