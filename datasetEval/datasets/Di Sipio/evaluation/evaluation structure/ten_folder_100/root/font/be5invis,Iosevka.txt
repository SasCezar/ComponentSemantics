b'# Iosevka ![Version](https://img.shields.io/github/release/be5invis/Iosevka.svg) [![Patreon](https://img.shields.io/badge/donate-patreon-red.svg)](https://www.patreon.com/user?u=5787198) [![Donate](https://img.shields.io/badge/donate-alipay-orange.svg)](http://7xpdnl.dl1.z0.glb.clouddn.com/T1v4huXnleXXXXXXXX.png)\n\nCoders\xe2\x80\x99 typeface, built from code.\n\n![](https://raw.githubusercontent.com/be5invis/Iosevka/master/images/preview-all.png)\n\n## Installation\n\nQuit your editor/program. Unzip and open the folder.\n\n* **Instructions for Windows**: Download the fonts from the [Releases](https://github.com/be5invis/Iosevka/releases), select the font files and right click, then hit "Install".\n  * On Windows 10 1809 or newer the default font installation is per-user, and it may cause compatibility issues for some applications, mostly written in Java. To cope with this, right click and select "Install for all users" instead. [Ref.](https://youtrack.jetbrains.com/issue/JRE-1166?p=IDEA-200145)\n* **[Instructions for macOS](http://support.apple.com/kb/HT2509)**\n  * Standard distribution in Homebrew: `brew tap homebrew/cask-fonts && brew cask install font-iosevka && brew cask install font-iosevka-slab`\n  * Customizable install using Homebrew: see [robertgzr/homebrew-tap](https://github.com/robertgzr/homebrew-tap).\n* **Linux** : Copy the TTF files to your fonts directory \xe2\x86\x92 Run `sudo fc-cache`. \n  - Arch Linux users can install the font from the AUR [here](https://aur.archlinux.org/packages/ttf-iosevka) using an AUR wrapper or by doing it manually. [All variants](https://aur.archlinux.org/packages/?O=0&SeB=nd&K=ttf-iosevka&SB=n&SO=a&PP=50&do_Search=Go).\n  - Void Linux users can install the font with `xbps-install font-iosevka`.\n* **FreeBSD**: The font can be installed with `pkg install iosevka`.\n\n## Weights, Variants and OpenType features\n\nThe typeface contains 9 weights (Thin to Heavy) alongside with both italic and oblique versions, with the same metrics as the regular one. \n\n![Weights sample](https://raw.githubusercontent.com/be5invis/Iosevka/master/images/weights.png)\n\nAll versions include the same ranges of characters: Latin letters, Greek letters (including Polytonic), some Cyrillic letters, IPA symbols and common punctuations and some symbols. You can check out the full list [here](http://be5invis.github.io/Iosevka/specimen.html).\n\n![Languages Sample](https://raw.githubusercontent.com/be5invis/Iosevka/master/images/languages.png)\n\nIosevka supports accessing all letter variants using OpenType features.\n\n![Style Sets](https://raw.githubusercontent.com/be5invis/Iosevka/master/images/stylesets.png)\n\n![Character Variants](https://raw.githubusercontent.com/be5invis/Iosevka/master/images/charvars.png)\n\n### Ligations\n\n![Ligations Sample](https://raw.githubusercontent.com/be5invis/Iosevka/master/images/ligations.png)\n\nIosevka\xe2\x80\x99s default ligation set is assigned to `calt` feature, though not all of them are enabled by default.\n\nIosevka supports Language-Specific Ligations, which is the ligation set enabled only under certain languages. These ligation sets are assigned to custom feature tags, like `XHS0`.\n\n## Building from Source\n\nTo build Iosevka you should:\n\n1. Ensure that [`nodejs`](http://nodejs.org) (\xe2\x89\xa5 8.4), [`ttfautohint`](http://www.freetype.org/ttfautohint/), [`otfcc`](https://github.com/caryll/otfcc) (\xe2\x89\xa5 0.9.3).\n2. Install necessary libs by `npm install`. If you\xe2\x80\x99ve installed them, upgrade to the latest.\n3. `npm run build -- contents::iosevka`.\n\n\nYou will find TTFs, as well as WOFF(2) web fonts and one Webfont CSS in the `dist/` directory.\n\n## Build Your Own Style\n\nSince version 2.0, Iosevka would no longer support building via `makefile`. To initialize a custom build, you need:\n\n1. Create `private-build-plans.toml` file.\n\n2. Add a build plan into `private-build-plans.toml`, following this format:\n\n   ```toml\n   [buildPlans.iosevka-custom]            # <iosevka-custom> is your plan name\n   family = "Iosevka Custom"              # Font menu family name\n   design = ["common styles"]             # Common styles\n   upright = ["upright-only", "styles"]   # Upright-only styles\n   italic = ["italic-only", "styles"]     # Italic-only styles\n   oblique = ["oblique-only", "styles"]   # Oblique-only styles\n   hintParams = ["-a", "sss"]             # Optional custom parameters for ttfautohint\n\n   # Override default building weights\n   # When buildPlans.<plan name>.weights is absent\n   # All weights would built and mapped to default shape/CSS\n   [buildPlans.iosevka-custom.weights.regular]\n   shape = 400                            # Weight for glyph shapes\n   menu  = 400                            # Weight for menu name\n   css   = 400                            # Weight for WebFont CSS\n   \n   [buildPlans.iosevka-custom.weights.bold]\n   shape = 700\n   menu  = 700\n   css   = 700\n   \n   # Override default building slant sets\n   # Format: <upright|italic|oblique> = <"normal"|"italic"|"oblique">\n   # When this section is absent, all slants would be built.\n   [buildPlans.iosevka-custom.slants]\n   upright = "normal"\n   italic = "italic"\n   oblique = "oblique"\n   ```\n\n3. Run `npm run build -- contents::<your plan name>` and the built fonts would be avaliable in `dist/`. Aside from `contents::<plan>`, other options are:\n\n   1. `contents::<plan>` : TTF (Hinted and Unhinted), WOFF(2) and Webfont CSS;\n   2. `ttf::<plan>` : TTF;\n   3. `ttf-unhinted::<plan>` : Unhinted TTF only;\n   4. `woff::<plan>` : TTF and WOFF only;\n   5. `woff2::<plan>` : TTF and WOFF2 only;\n      - Note: Since version 2.2.0, we are using two colons (`::`) in the build target names.\n\nThe current available styles for `design`/`upright`/`italic`/`oblique` options are:\n\n* Styles for general shape:\n  * `sans` : Sans serif (default).\n  * `slab` : Slab serif.\n* Styles related to ligations and spacing:\n  - `term` : Disable ligations and exact monospace.\n    - The font built will not contain ligatures.\n    - All glyphs wider than one letter would be deleted.\n    - In case of your OS or editor cannot handle ligatures correctly, you can disable ligations with it.\n  - `termlig` : Similar to `term`, the font is exact monospace to make `fontconfig` happy, while ligations are still present.\n  - `no-ligation` : Disable ligation only.\n  - `no-cv-ss`\xc2\xa0: Prevent generation of `cv##`\xc2\xa0and `ss##` features.\n  - `type` : Make some symbols, like arrows (`\xe2\x86\x92`) full-width.\n* All registered `ss##` and `cv##` feature tags, including:\n  * `ss01`~`ss10` : Predefined stylistic sets based on other Monospace fonts.\n  * `cv01`~`cv53` : Standalone character variants.\n* Styles for ligation sets, include:\n  * `ligset-haskell`: Default ligation set would be assigned to Haskell.\n  * `ligset-idris`: Default ligation set would be assigned to Idris.\n  * `ligset-coq`: Default ligation set would be assigned to Coq.\n  * `ligset-elm`: Default ligation set would be assigned to Elm.\n  * `ligset-ml`: Default ligation set would be assigned to ML.\n  * `ligset-fs`: Default ligation set would be assigned to F#.\n  * `ligset-fstar`: Default ligation set would be assigned to F\\*.\n  * `ligset-swift`: Default ligation set would be assigned to Swift.\n  * `ligset-purescript`: Default ligation set would be assigned to PureScript.\n* Styles for further customizing default (`calt`) ligation sets. When any of these styles present in your configuration, the `ligset-*` styles would be overridden.\n  * `calt-clear`: Clear the `calt` ligation set.\n  * `calt-center-ops`: Vertically align some of the operators (like `*`) to the center position it is before or after a "center" operator (like `+`);\n  * `calt-arrow`: Enable ligation set that forms arrows;\n  * `calt-arrow2`: Enable ligation for more arrows, like `>>=`;\n  * `calt-html-comment`: Enable ligation for `<!--` and `<!---`;\n  * `calt-eqeq`: Enable ligation for `==` and `===`;\n  * `calt-ineq`: Enable ligation for `<=` and `>=`;\n  * `calt-arrowZALE`: Enable ligation for `<=` to form a left double arrow;\n  * `calt-arrowZAGE`: Enable ligation for `>=` to form a right inverse double arrow;\n  * `calt-exeq`: Enable ligation for `!=` and `!==`;\n  * `calt-slasheq`: Enable ligation for `/=` and `/==`;\n  * `calt-plusplus`: Enable ligation for `++` and further plus-chaining;\n  * `calt-llgg`: Enable ligation for `<<`, `>>` and other angle-bracket chaining;\n  * `calt-trig`: Enable ligation for `<|`, `|>` , `<||`, and other bar-and-angle-bracket symbols;\n  * `calt-dotoper`: Treat dot (`.`) as operator and perform chained centering;\n  * `calt-brst`: Center asterisk in `(*` and `*)`;\n  * `calt-logic`: Enable ligation for `/\\` and `\\/`;\n  * `calt-colons`: Enable ligation for `::` and `:::` ;\n* Styles for changing the line space (leading):\n  * `leading-750`, `leading-1000`, `leading-1250`, `leading-1500`, `leading-1750`, `leading-2000`: Change the line space. Default is `leading-1250`.\n  * `win-metric-pad-0`, `win-metric-pad-50`,\xc2\xa0`win-metric-pad-100`,\xc2\xa0`win-metric-pad-150`, `win-metric-pad-200`,\xc2\xa0`win-metric-pad-250`, `win-metric-pad-300`: Add extra space to [OS/2 table\xe2\x80\x99s Win metrics](https://docs.microsoft.com/en-us/typography/opentype/spec/os2#uswinascent) to avoid clipping in certain legacy software.\n* Styles for changing Powerline symbols\' position:\n  * `powerline-scale-y-750`, `powerline-scale-y-875`, `powerline-scale-y-1000`, `powerline-scale-y-1125`, `powerline-scale-y-1250`, `powerline-scale-y-1375`, `powerline-scale-y-1500`: Resize the Powerline symbols vertically, from 75% to 150%.\n  * `powerline-scale-x-750`, `powerline-scale-x-875`, `powerline-scale-x-1000`, `powerline-scale-x-1125`, `powerline-scale-x-1250`, `powerline-scale-x-1375`, `powerline-scale-x-1500`: Resize the Powerline symbols horizontally, from 75% to 150%.\n  * `powerline-shift-y-n500`, `powerline-shift-y-n450`, `powerline-shift-y-n400`, `powerline-shift-y-n350`, `powerline-shift-y-n300`, `powerline-shift-y-n250`, `powerline-shift-y-n200`, `powerline-shift-y-n150`, `powerline-shift-y-n100`, `powerline-shift-y-n50`, `powerline-shift-y-0`, `powerline-shift-y-p50`, `powerline-shift-y-p100`, `powerline-shift-y-p150`, `powerline-shift-y-p200`, `powerline-shift-y-p250`, `powerline-shift-y-p300`, `powerline-shift-y-p350`, `powerline-shift-y-p400`, `powerline-shift-y-p450`, `powerline-shift-y-p500`: Shift the Powerline symbols vertically, from -0.5em to +0.5em.\n  * `powerline-shift-x-n500`, `powerline-shift-x-n450`, `powerline-shift-x-n400`, `powerline-shift-x-n350`, `powerline-shift-x-n300`, `powerline-shift-x-n250`, `powerline-shift-x-n200`, `powerline-shift-x-n150`, `powerline-shift-x-n100`, `powerline-shift-x-n50`, `powerline-shift-x-0`, `powerline-shift-x-p50`, `powerline-shift-x-p100`, `powerline-shift-x-p150`, `powerline-shift-x-p200`, `powerline-shift-x-p250`, `powerline-shift-x-p300`, `powerline-shift-x-p350`, `powerline-shift-x-p400`, `powerline-shift-x-p450`, `powerline-shift-x-p500`: Shift the Powerline symbols horizontally, from -0.5em to +0.5em.\n* Styles for changing the width:\n  * `extended`: Expand the width by 10%;\n  * `menu-subfamily-extended`: Add \xe2\x80\x9cExtended\xe2\x80\x9d to font menu subfamily;\n  * `compressed`: Compress the width by 10%.\n  * `menu-subfamily-condensed`:\xc2\xa0Add \xe2\x80\x9cCondensed\xe2\x80\x9d into font menu subfamily;\n  * NOTE: these styles are highly experimental. Handle with extreme care.\n* Symbol exclusion:\n  * `exclude-check-and-cross-symbol`:\xc2\xa0Exclude `\xe2\x9c\x93\xe2\x9c\x94\xe2\x9c\x95\xe2\x9c\x96\xe2\x9c\x97\xe2\x9c\x98`\xc2\xa0(U+2713 \xe2\x80\x93 U+2718) from the font.\n* Styles for individual characters. They are easy-to-understand names of the `cv##` styles, including:\n  * Styles for letter `l`:\n    * `v-l-hooky` : Hooky `l`.\n    * `v-l-zshaped` : Z-shaped `l`.\n    * `v-l-serifed` : Serifed `l` (default for upright and oblique).\n    * `v-l-italic` : Italic `l` (default for italic).\n    * `v-l-tailed` : `l` with a curved tail.\n    * `v-l-hookybottom` : `l` with a straight tail.\n    * `v-l-line` : `l` like a straight line.\n  * Styles for letter `i`:\n    * `v-i-hooky` : Hooky `i`.\n    * `v-i-zshaped` : Z-shaped `i`.\n    * `v-i-serifed` : Serifed `i` (default for upright and oblique).\n    * `v-i-italic` : Italic `i` (default for italic).\n    * `v-i-line` : `i` like a straight line.\n  * Styles for letter `j`:\n    * `v-j-line`: `j` like a straight line.\n    * `v-j-serifed`: `j` with top serif (default).\n  * Styles for letter `a`:\n    * `v-a-doublestorey` : Double-storey `a` (default for upright and oblique).\n    * `v-a-singlestorey` : Single-storey `a` (default for italic).\n  * Styles for letter `f`:\n    * `v-f-straight`: `f` without bottom hook (default for upright and oblique).\n    * `v-f-tailed`: `f` with a leftward bottom hook (default for italic).\n  * Styles for letter `g`:\n    * `v-g-doublestorey` : Double-storey `g` (default for upright and oblique).\n    * `v-g-singlestorey` : Single-storey `g` (default for italic).\n    * `v-g-opendoublestorey` : Open Double-storey `g`.\n  * Styles for letter `m`:\n    * `v-m-longleg` : `m` with long middle leg (default).\n    * `v-m-shortleg` : `m` with shorter middle leg.\n  * Styles for letter `t`:\n    * `v-t-standard` : Standard `t` shape (default).\n    * `v-t-cross` : Futura-like `t` shape.\n  * Styles for letter `Q`:\n    * `v-q-taily` : `Q` with a curly tail (default).\n    * `v-q-straight` : `Q` with a straight tail in the old versions.\n  * Styles for letter `y`:\n    * `v-y-straight`: More-straight letter `y`.\n    * `v-y-curly`: Curly, cursive-like `y`.\n  * Styles for zero (`0`):\n    * `v-zero-slashed` : Slashed Zero `0` (default).\n    * `v-zero-dotted` : Dotted Zero `0`.\n    * `v-zero-unslashed` : O-like `0`.\n  * Styles for one (`1`)\n    * `v-one-serifed` : `1` with bottom serif (default for Slab).\n    * `v-one-hooky` : `1` without bottom serif (default for Sans).\n  * Styles for three (`3`):\n    * `v-three-flattop` : Flat top `3` (Like Museo Sans / Montserrat).\n    * `v-three-twoarks` : Arched top `3` (default).\n  * Style for seven (`7`):\n    * `v-seven-normal` : Seven `7` without serif (default). Only effective in non-Slab subfamilies.\n    * `v-seven-force-serif` : Force `7` to have serif in non-Slab subfamilies.\n  * Styles for ASCII tilde (`~`), asterisk (`*`), paragraph(`\xc2\xb6`), underscore (`_`) and ASCII Caret (`^`):\n    * `v-tilde-high` : Higher tilde `~`.\n    * `v-tilde-low` : Lower tilde `~` (default).\n    * `v-asterisk-high` : Higher asterisk `*` (default).\n    * `v-asterisk-low` : Lower asterisk `*`.\n    * `v-asterisk-hexhigh` : Higher six-pointed asterisk `*`.\n    * `v-asterisk-hexlow` : Lower six-pointed asterisk `*`.\n    * `v-paragraph-high` : Higher paragraph symbol `\xc2\xb6` (default).\n    * `v-paragraph-low` : Lower paragraph symbol `\xc2\xb6`.\n    * `v-caret-high` : Higher circumflex `^` (default).\n    * `v-caret-low` : Lower circumflex `^`.\n    * `v-underscore-high` : Higher underscore `_` (default).\n    * `v-underscore-low` : Lower underscore `_`.\n  * Styles for Percent (`%`):\n    * `v-percent-dots`: Percent `%`, Per-mille `\xe2\x80\xb0` and basis point `\xe2\x80\xb1` will use rectangular dots.\n    * `v-percent-rings`: Percent `%`, Per-mille `\xe2\x80\xb0` and basis point `\xe2\x80\xb1` will use rings (default).\n  * Styles for At (`@`):\n    * `v-at-long` : The long, three-fold At symbol in Iosevka 1.7.x.\n    * `v-at-fourfold` : The traditional, four-fold At symbol.\n    * `v-at-short` : The shorter, Fira-like At symbol introduced in Iosevka 1.8.\n  * Styles for Eszet (`\xc3\x9f`):\n    * `v-eszet-traditional` : Traditional, Fraktur-like Eszet.\n    * `v-eszet-sulzbacher` : A more modern, beta-like Eszet (default).\n  * Styles for curly brackets (`{}`):\n    * `v-brace-straight` : More straight braces.\n    * `v-brace-curly` : More curly braces (default).\n  * Styles for dollar symbol (`$`):\n    * `v-dollar-open` : Dollar symbol with open contour.\n    * `v-dollar-through` : Dollar symbol with strike-through vertical bar (default).\n    * `v-dollar-opencap` : Dollar symbol with open contour, not exceeding baseline and ascender.\n    * `v-dollar-throughcap` : Dollar symbol with strike-through vertical bar, not exceeding baseline and ascender.\n  * Styles for Number sign (`#`):\n    * `v-numbersign-upright` : Number sign with vertical bars (default).\n    * `v-numbersign-slanted` : Number sign with slanted bars.\n\n## For Chinese and Japanese users...\n\n\xe2\x86\x92 [Sarasa Gothic](https://github.com/be5invis/Sarasa-Gothic).\n\n---\n\n![Family Matrix](https://raw.githubusercontent.com/be5invis/Iosevka/master/images/matrix.png)\n'