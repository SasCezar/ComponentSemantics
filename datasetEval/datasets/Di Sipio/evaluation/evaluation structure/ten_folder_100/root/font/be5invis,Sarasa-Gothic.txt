b'# Sarasa Gothic (\xe6\x9b\xb4\xe7\xba\xb1\xe9\xbb\x91\xe4\xbd\x93 / \xe6\x9b\xb4\xe7\xb4\x97\xe9\xbb\x91\xe9\xab\x94 / \xe6\x9b\xb4\xe7\xb4\x97\xe3\x82\xb4\xe3\x82\xb7\xe3\x83\x83\xe3\x82\xaf / \xec\x82\xac\xeb\x9d\xbc\xec\x82\xac\xea\xb3\xa0\xeb\x94\x95)\n\nThis is SARASA GOTHIC, a CJK programming font based on Iosevka and Source Han Sans.\n\n## To build\n\nYou need [Node.js](https://nodejs.org/en/) 8.5 (or newer), [otfcc](https://github.com/caryll/otfcc), [AFDKO](http://www.adobe.com/devnet/opentype/afdko.html) and [ttfautohint](https://www.freetype.org/ttfautohint) installed, then run:\n\n```bash\nnpm install\n```\n\nafter the NPM packages are installed, run\n\n```bash\nnpm run build ttf\n```\n\nto build the TTF files, it would be in `out/ttf` directory.\n\nTo build TTC, type\n\n```bash\nnpm run build ttc\n```\n\ninstead, the files would be in `out/ttc` directory.\n\nPlease note that you will need *a lot of* memory to create TTCs, due to the huge quantity of subfamily-orthography combinations.\n\n## What are the names?\n\n- Style dimension\n  - Latin/Greek/Cyrillic character set being Noto Sans\n    - Quotes (`\xe2\x80\x9c\xe2\x80\x9d`) are full width \xe2\x80\x94\xe2\x80\x94 Gothic\n    - Quotes (`\xe2\x80\x9c\xe2\x80\x9d`) are narrow \xe2\x80\x94\xe2\x80\x94 UI\n  - Latin/Greek/Cyrillic character set being Iosevka\n    - Have ligature, Em dashes (`\xe2\x80\x94\xe2\x80\x94`) are full width \xe2\x80\x94\xe2\x80\x94 MonoT\n    - Have ligature, Em dashes (`\xe2\x80\x94\xe2\x80\x94`) are half width \xe2\x80\x94\xe2\x80\x94 Mono\n    - No ligature, Em dashes (`\xe2\x80\x94\xe2\x80\x94`) are half width \xe2\x80\x94\xe2\x80\x94 Term\n- Orthography dimension\n  - `CL`: Classical orthography\n  - `SC`, `TC`, `J`, `K`, `HC`: Regional orthography, following [Source Han Sans](https://github.com/adobe-fonts/source-han-sans) notations.\n'