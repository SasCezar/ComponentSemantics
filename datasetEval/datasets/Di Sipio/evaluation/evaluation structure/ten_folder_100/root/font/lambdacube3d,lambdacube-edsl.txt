b'# LambdaCube 3D as Embedded Domain Specific Language in Haskell.\n\nCheck the latest system: http://lambdacube3d.com\n\n# LambdaCube 3D\n  LambdaCube 3D is a domain specific language and library that makes it possible to program GPUs in a purely functional style.  \n  You can find more info in the development blog. http://lambdacube3d.wordpress.com/\n\n## Setup\n\n#### On **Linux** install the following libraries.\n   i.e. on Ubuntu:\n   ```\n   sudo apt install libgl1-mesa-dev libxi-dev libxcursor-dev libxinerama-dev libxrandr-dev zlib1g-dev libpulse-dev\n   ```\n   For other Linux distributions make sure the corresponing packages are installed.\n\n   *These libraries required for OpenGL development.*\n\n\n#### Compile & Run:\n\nTo compile you will need [Haskell Stack](https://docs.haskellstack.org/en/stable/README/).\n\n```\nstack setup\nstack build\n\nstack exec -- lambdacube-hello\nstack exec -- lambdacube-shadowmapping\nstack exec -- lambdacube-cubemap\nstack exec -- lambdacube-convolutionfilter\n```\n\n## lambdacube-edsl\n\n  The *lambdacube-edsl* package contains the graphics EDSL and the OpenGL 3.2 backend.\n\n## LambdaCube Font Engine\n\n  Work-in-progress [project](https://github.com/cobbpg/lafonten) to provide font rendering capabilities for LambdaCube 3D.\n  \n  ![Lafonten demo](https://raw.githubusercontent.com/cobbpg/lafonten/master/lafonten-demo.png)\n\n## Demo Scene: Knot Theory\n\n  ![Knot Theory demo](https://raw.githubusercontent.com/csabahruska/demoscene/master/knot-theory.jpg)\n\n  Also check the [code](https://github.com/csabahruska/demoscene).\n\n\n## Q3Demo\n  Quake III level viewer demo application for lambdacube-core.\n  It requires the *.pk3 data files from original Quake 3 demo or full version of game.\n  Addtionally custom made game levels are available from http://lvlworld.com. \n  During startup the application will find all .pk3 files available in the current directory.\n  The map name can be given as an argument of the q3demo executable.\n\n![Quake III level viewer](https://github.com/csabahruska/lc-dsl/raw/master/lc-q3.png)\n\n## Stunts\n  A revival of the classic racing game Stunts to serve as a non-toy-sized example for LambdaCube.\n  It depends on the Bullet physics engine haskell binding. It is available from git repository only.    \n  *git clone git://github.com/csabahruska/bullet.git*    \n  The bullet installation instructions can be found in *bullet/README*.\n  In order to make the stunts demo work, you need to download the original game as per the instructions given by the program.\n\n![Stunts demo 1](https://github.com/csabahruska/lc-dsl/raw/master/lc-stunts-1.png)\n\n![Stunts demo 2](https://github.com/csabahruska/lc-dsl/raw/master/lc-stunts-2.png)\n'