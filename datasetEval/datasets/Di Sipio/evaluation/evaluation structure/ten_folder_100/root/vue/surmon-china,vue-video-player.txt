b'[![GitHub stars](https://img.shields.io/github/stars/surmon-china/vue-video-player.svg?style=flat-square)](https://github.com/surmon-china/vue-video-player/stargazers)\n[![Build Status](https://travis-ci.org/surmon-china/vue-video-player.svg?branch=master)](https://travis-ci.org/surmon-china/vue-video-player)\n[![GitHub issues](https://img.shields.io/github/issues/surmon-china/vue-video-player.svg?style=flat-square)](https://github.com/surmon-china/vue-video-player/issues)\n[![GitHub forks](https://img.shields.io/github/forks/surmon-china/vue-video-player.svg?style=flat-square)](https://github.com/surmon-china/vue-video-player/network)\n[![GitHub last commit](https://img.shields.io/github/last-commit/google/skia.svg?style=flat-square)](https://github.com/surmon-china/vue-video-player)\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg?style=flat-square)](https://github.com/surmon-china/vue-video-player)\n[![Twitter](https://img.shields.io/twitter/url/https/github.com/surmon-china/vue-video-player.svg?style=flat-square)](https://twitter.com/intent/tweet?url=https://github.com/surmon-china/vue-video-player)\n\n[![NPM](https://nodei.co/npm/vue-video-player.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/vue-video-player/)\n[![NPM](https://nodei.co/npm-dl/vue-video-player.png?months=9&height=3)](https://nodei.co/npm/vue-video-player/)\n\n\n# Vue-Video-Player\n\n[video.js](https://github.com/videojs/video.js) player component for Vue.\n\n\xe9\x80\x82\xe7\x94\xa8\xe4\xba\x8e Vue \xe7\x9a\x84 [video.js](https://github.com/videojs/video.js) \xe6\x92\xad\xe6\x94\xbe\xe5\x99\xa8\xe7\xbb\x84\xe4\xbb\xb6\xe3\x80\x82\n\n\n# Example\n\n[Demo Page](https://surmon-china.github.io/vue-video-player)\n\n[CDN Example](https://jsfiddle.net/u69gnx90/)\n\n[nuxt.js/ssr example code](https://github.com/surmon-china/vue-video-player/blob/master/examples/nuxt-ssr-example)\n\n[More Example Code](https://github.com/surmon-china/vue-video-player/tree/master/examples)\n\n\n# Install\n\n#### CDN\n\n``` html\n<link rel="stylesheet" href="path/to/video.js/dist/video-js.css"/>\n<script type="text/javascript" src="path/to/video.min.js"></script>\n<script type="text/javascript" src="path/to/vue.min.js"></script>\n<script type="text/javascript" src="path/to/dist/vue-video-player.js"></script>\n<script type="text/javascript">\n  Vue.use(window.VueVideoPlayer)\n</script>\n```\n\n#### NPM\n\n``` bash\nnpm install vue-video-player --save\n```\n\n### Mount\n\n#### mount with global\n\n``` javascript\nimport Vue from \'vue\'\nimport VueVideoPlayer from \'vue-video-player\'\n\n// require videojs style\nimport \'video.js/dist/video-js.css\'\n// import \'vue-video-player/src/custom-theme.css\'\n\nVue.use(VueVideoPlayer, /* {\n  options: global default options,\n  events: global videojs events\n} */)\n```\n\n#### mount with component\n\n```javascript\n// require styles\nimport \'video.js/dist/video-js.css\'\n\nimport { videoPlayer } from \'vue-video-player\'\n\nexport default {\n  components: {\n    videoPlayer\n  }\n}\n```\n\n#### mount with ssr\n\n```javascript\n// If used in nuxt.js/ssr, you should keep it only in browser build environment\nif (process.browser) {\n  const VueVideoPlayer = require(\'vue-video-player/dist/ssr\')\n  Vue.use(VueVideoPlayer)\n}\n```\n\n#### videojs extend\n\n```javascript\nimport videojs from \'video.js\'\n\n// videojs plugin\nconst Plugin = videojs.getPlugin(\'plugin\')\nclass ExamplePlugin extends Plugin {\n  // something...\n}\nvideojs.registerPlugin(\'examplePlugin\', ExamplePlugin)\n\n// videojs language\nvideojs.addLanguage(\'es\', {\n  Pause: \'Pausa\',\n  // something...\n})\n\n// more videojs api...\n\n// vue component...\n```\n\n\n### Difference\xef\xbc\x88\xe4\xbd\xbf\xe7\x94\xa8\xe6\x96\xb9\xe6\xb3\x95\xe7\x9a\x84\xe5\xbc\x82\xe5\x90\x8c\xef\xbc\x89\n\n**SSR and the only difference in the use of the SPA:**\n- SPA worked by the `component`, find videojs instance by `ref attribute`.\n- SSR worked by the `directive`, find videojs instance by `directive arg`.\n- Other configurations, events are the same.\n\n\n### SPA\n\n``` vue\n<template>\n  <video-player  class="video-player-box"\n                 ref="videoPlayer"\n                 :options="playerOptions"\n                 :playsinline="true"\n                 customEventName="customstatechangedeventname"\n\n                 @play="onPlayerPlay($event)"\n                 @pause="onPlayerPause($event)"\n                 @ended="onPlayerEnded($event)"\n                 @waiting="onPlayerWaiting($event)"\n                 @playing="onPlayerPlaying($event)"\n                 @loadeddata="onPlayerLoadeddata($event)"\n                 @timeupdate="onPlayerTimeupdate($event)"\n                 @canplay="onPlayerCanplay($event)"\n                 @canplaythrough="onPlayerCanplaythrough($event)"\n\n                 @statechanged="playerStateChanged($event)"\n                 @ready="playerReadied">\n  </video-player>\n</template>\n\n<script>\n  // Similarly, you can also introduce the plugin resource pack you want to use within the component\n  // import \'some-videojs-plugin\'\n  export default {\n    data() {\n      return {\n        playerOptions: {\n          // videojs options\n          muted: true,\n          language: \'en\',\n          playbackRates: [0.7, 1.0, 1.5, 2.0],\n          sources: [{\n            type: "video/mp4",\n            src: "https://cdn.theguardian.tv/webM/2015/07/20/150716YesMen_synd_768k_vp8.webm"\n          }],\n          poster: "/static/images/author.jpg",\n        }\n      }\n    },\n    mounted() {\n      console.log(\'this is current player instance object\', this.player)\n    },\n    computed: {\n      player() {\n        return this.$refs.videoPlayer.player\n      }\n    },\n    methods: {\n      // listen event\n      onPlayerPlay(player) {\n        // console.log(\'player play!\', player)\n      },\n      onPlayerPause(player) {\n        // console.log(\'player pause!\', player)\n      },\n      // ...player event\n\n      // or listen state event\n      playerStateChanged(playerCurrentState) {\n        // console.log(\'player current update state\', playerCurrentState)\n      },\n\n      // player is ready\n      playerReadied(player) {\n        console.log(\'the player is readied\', player)\n        // you can use it to do something...\n        // player.[methods]\n      }\n    }\n  }\n</script>\n```\n\n\n### SSR\n\n``` vue\n<!-- You can custom the "myVideoPlayer" name used to find the videojs instance in current component -->\n<template>\n  <div class="video-player-box" \n       @play="onPlayerPlay($event)"\n       @pause="onPlayerPause($event)"\n       @ready="playerReadied"\n       @statechanged="playerStateChanged($event)"\n       v-video-player:myVideoPlayer="playerOptions">\n  </div>\n</template>\n\n<script>\n  export default {\n    mounted() {\n      console.log(\'this is current videojs instance object\', this.myVideoPlayer)\n    }\n    // Omit the same parts as in the following component sample code\n    // ...\n  }\n</script>\n```\n\n\n# Issues\n\n[videojs-contrib-hls - e is not defined](https://github.com/surmon-china/vue-video-player/issues/90)\n\n\n# API\n- component api:\n  * `events` : `[ Array, default: [] ]` : custom videojs event to component\n  * `playsinline` : `[ Boolean, default: false ]` : set player not full-screen in mobile device\n  * `crossOrigin` : `[ String, default: \'\' ]` : set crossOrigin to video\n  * `customEventName` : `[ String, default: \'statechanged\' ]` : custom the state change event name\n\n- video.js api\n  * [video.js options](http://docs.videojs.com/tutorial-options.html)\n  * [video.js docs](http://docs.videojs.com/)\n\n\n# videojs plugins\n\n- [videojs-resolution-switcher](https://github.com/kmoskwiak/videojs-resolution-switcher)\n- [videojs-contrib-hls](https://github.com/videojs/videojs-contrib-hls)\n- [videojs-youtube](https://github.com/videojs/videojs-youtube)\n- [videojs-vimeo](https://github.com/videojs/videojs-vimeo)\n- [videojs-hotkeys](https://github.com/ctd1500/videojs-hotkeys)\n- [videojs-flash](https://github.com/videojs/videojs-flash)\n- [videojs-contrib-ads](https://github.com/videojs/videojs-contrib-ads)\n- [more plugins...](https://github.com/search?o=desc&q=videojs+plugin&s=stars&type=Repositories&utf8=%E2%9C%93)\n\n\n# Author\n[Surmon](https://surmon.me)\n'