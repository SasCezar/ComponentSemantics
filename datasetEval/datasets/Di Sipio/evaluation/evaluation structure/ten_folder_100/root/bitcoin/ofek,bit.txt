b"Bit: Bitcoin made easy.\n=======================\n\n.. image:: https://img.shields.io/pypi/v/bit.svg?style=flat-square\n    :target: https://pypi.org/project/bit\n\n.. image:: https://img.shields.io/travis/ofek/bit.svg?branch=master&style=flat-square\n    :target: https://travis-ci.org/ofek/bit\n\n.. image:: https://img.shields.io/codecov/c/github/ofek/bit.svg?style=flat-square\n    :target: https://codecov.io/gh/ofek/bit\n\n.. image:: https://img.shields.io/pypi/pyversions/bit.svg?style=flat-square\n    :target: https://pypi.org/project/bit\n\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\n    :target: https://en.wikipedia.org/wiki/MIT_License\n\n-----\n\nBit is Python's `fastest <https://ofek.github.io/bit/guide/intro.html#why-bit>`_\nBitcoin library and was designed from the beginning to feel intuitive, be\neffortless to use, and have readable source code. It is heavily inspired by\n`Requests <https://github.com/requests/requests>`_ and\n`Keras <https://github.com/keras-team/keras>`_.\n\n**Bit is so easy to use, in fact, you can do this:**\n\n.. code-block:: python\n\n    >>> from bit import Key\n    >>>\n    >>> my_key = Key(...)\n    >>> my_key.get_balance('usd')\n    '12.51'\n    >>>\n    >>> # Let's donate!\n    >>> outputs = [\n    >>>     # Wikileaks\n    >>>     ('1HB5XMLmzFVj8ALj6mfBsbifRoD4miY36v', 0.0035, 'btc'),\n    >>>     # Internet Archive\n    >>>     ('1Archive1n2C579dMsAu3iC6tWzuQJz8dN', 190, 'jpy'),\n    >>>     # The Pirate Bay\n    >>>     ('129TQVAroeehD9fZpzK51NdZGQT4TqifbG', 3, 'eur'),\n    >>>     # xkcd\n    >>>     ('14Tr4HaKkKuC1Lmpr2YMAuYVZRWqAdRTcr', 2.5, 'cad')\n    >>> ]\n    >>>\n    >>> my_key.send(outputs)\n    '9f59f5c6757ec46fdc7440acbeb3920e614c8d1d247ac174eb6781b832710c1c'\n\nHere is the transaction `<https://blockchain.info/tx/9f59f5c6757ec46fdc7440acbeb3920e614c8d1d247ac174eb6781b832710c1c>`_.\n\nFeatures\n--------\n\n- Python's fastest available implementation (100x faster than closest library)\n- Seamless integration with existing server setups\n- Supports keys in cold storage\n- Fully supports 25 different currencies\n- First class support for storing data in the blockchain\n- Deterministic signatures via RFC 6979\n- Access to the blockchain (and testnet chain) through multiple APIs for redundancy\n- Exchange rate API, with optional caching\n- Optimal transaction fee API, with optional caching\n- Compressed public keys by default\n- Multiple representations of private keys; WIF, PEM, DER, etc.\n- Legacy P2PKH and Segwit nested-P2WPKH transactions\n- Legacy P2SH and Segwit nested-P2WSH transactions\n\nIf you are intrigued, continue reading. If not, continue all the same!\n\nInstallation\n------------\n\nBit is distributed on `PyPI`_ as a universal wheel and is available on Linux/macOS\nand Windows and supports Python 3.5+ and PyPy3.5-v5.7.1+. ``pip`` >= 8.1.2 is required.\n\n.. code-block:: bash\n\n    $ pip install bit\n\nDocumentation\n-------------\n\nDocs are `hosted by Github Pages`_ and are automatically built and published\nby Travis after every successful commit to Bit's ``master`` branch.\n\nCredits\n-------\n\n- Logo courtesy of `<https://textcraft.net>`_\n- `Gregory Maxwell`_ (Bitcoin core dev) for teaching me a bit of `ECC`_ math\n- `arubi`_ in #bitcoin for helping me understand transaction gotchas\n- `fuzeman`_ for bestowing me the name ``bit`` on the `Python Package Index`_\n\n.. _PyPI: https://pypi.org/project/bit\n.. _hosted by Github Pages: https://ofek.github.io/bit\n.. _Gregory Maxwell: https://github.com/gmaxwell\n.. _ECC: https://en.wikipedia.org/wiki/Elliptic_curve_cryptography\n.. _arubi: https://github.com/fivepiece\n.. _fuzeman: https://github.com/fuzeman\n.. _Python Package Index: https://pypi.org\n"