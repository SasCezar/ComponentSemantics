b'# About Gocoin\r\n\r\n**Gocoin** is a full **Bitcoin** solution written in Go language (golang).\r\n\r\nThe software architecture is focused on maximum performance of the node\r\nand cold storage security of the wallet.\r\n\r\nThe **wallet** is designed to be used offline.\r\nIt is deterministic and password seeded.\r\nAs long as you remember the password, you do not need any backups ever.\r\nWallet can be used without the client, but with the provided **balio** tool instead.\r\n\r\nThe **client** (p2p node) is an application independent from the **wallet**.\r\nIt keeps the entire UTXO set in RAM, providing an instant access to all its records.\r\n\r\nSystem memory and time needed to sync BTC block chain up to the given block number:\r\n\r\n![SyncChart](website/btc_chain_sync_perf_32_598900.png)\r\n*The data above is from Gocoin 1.9.6 running on [Google Cloud Platform](https://cloud.google.com/) VPS with 32 vCPUs and SSD persistent storage.<br/>\r\nFor results from other platforms running Gocoin 1.9.5 see [gocoin.pl](https://gocoin.pl/gocoin_performance.html) website.*\r\n\r\n# Requirements\r\n\r\n## Hardware\r\n\r\n**client**:\r\n\r\n* 64-bit architecture OS and Go compiler.\r\n* File system supporting files larger than 4GB.\r\n* At least 15GB of system RAM.\r\n\r\n\r\n**wallet**:\r\n\r\n* Any platform that you can make your Go (cross)compiler to build for (Raspberry Pi works).\r\n* For security reasons make sure to use encrypted swap file (if there is a swap file).\r\n* If you decide to store your password in a file, have the disk encrypted (in case it gets stolen).\r\n\r\n\r\n## Operating System\r\nHaving hardware requirements met, any target OS supported by your Go compiler will do.\r\nCurrently that can be at least one of the following:\r\n\r\n* Windows\r\n* Linux\r\n* OS X\r\n* Free BSD\r\n\r\n## Build environment\r\nIn order to build Gocoin yourself, you will need the following tools installed in your system:\r\n\r\n* **Go** (version 1.8 or higher) - http://golang.org/doc/install\r\n* **Git** - http://git-scm.com/downloads\r\n\r\nIf the tools mentioned above are all properly installed, you should be able to execute `go` and `git`\r\nfrom your OS\'s command prompt without a need to specify full path to the executables.\r\n\r\n# Getting sources\r\n\r\nUse `go get` to fetch and install the source code files.\r\n\r\n\tgo get github.com/piotrnar/gocoin\r\n\r\nNote that the source files are stored inside your GOPATH folder.\r\nTo find out where the GOPATH folder is, execute:\r\n\r\n\tgo env GOPATH\r\n\r\n# Building\r\n\r\n## Client node\r\nGo to the `client/` folder and execute `go build` there.\r\n\r\n\r\n## Wallet\r\nGo to the `wallet/` folder and execute `go build` there.\r\n\r\n\r\n## Tools\r\nGo to the `tools/` folder and execute:\r\n\r\n\tgo build btcversig.go\r\n\r\nRepeat the `go build` for each source file of the tool you want to build.\r\n\r\n# Binaries\r\n\r\nWindows or Linux (amd64) binaries can be downloaded from\r\n\r\n * https://sourceforge.net/projects/gocoin/files/?source=directory\r\n\r\nPlease note that the binaries are usually not up to date.\r\nI strongly encourage everyone to build the binaries himself.\r\n\r\n# Development\r\nAlthough it is an open source project, I am sorry to inform you that **I will not merge in any pull requests**.\r\nThe reason is that I want to stay an explicit author of this software, to keep a full control over its\r\nlicensing. If you are missing some functionality, just describe me your needs and I will see what I can do\r\nfor you. But if you want your specific code in, please fork and develop your own repo.\r\n\r\n# Support\r\nThe official web page of the project is served at <a href="http://gocoin.pl">gocoin.pl</a>\r\nwhere you can find extended documentation, including **User Manual**.\r\n\r\nPlease do not log github issues when you only have questions concerning this software.\r\nInstead see [Contact](http://gocoin.pl/gocoin_links.html) page at [gocoin.pl](http://gocoin.pl) website\r\nfor possible ways of contacting me.\r\n'