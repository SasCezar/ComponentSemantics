b'[![python](https://img.shields.io/badge/python-2.7%20%26%203-blue.svg)![licence](https://img.shields.io/badge/licence-GPL%20v2-blue.svg)](https://github.com/s4w3d0ff/python-poloniex/blob/master/LICENSE) [![release](https://img.shields.io/github/release/s4w3d0ff/python-poloniex.svg)![release build](https://travis-ci.org/s4w3d0ff/python-poloniex.svg?branch=v0.5.7)](https://github.com/s4w3d0ff/python-poloniex/releases)  \n[![master](https://img.shields.io/badge/branch-master-blue.svg)![master build](https://api.travis-ci.org/s4w3d0ff/python-poloniex.svg?branch=master)](https://github.com/s4w3d0ff/python-poloniex/tree/master) [![dev](https://img.shields.io/badge/branch-dev-blue.svg)![dev build](https://api.travis-ci.org/s4w3d0ff/python-poloniex.svg?branch=dev)](https://github.com/s4w3d0ff/python-poloniex/tree/dev)  \n\nInspired by [this](http://pastebin.com/8fBVpjaj) wrapper written by \'oipminer\'  \n> I (s4w3d0ff) am not affiliated with, nor paid by [Poloniex](https://poloniex.com). If you wish to contribute to the repository please read [CONTRIBUTING.md](https://github.com/s4w3d0ff/python-poloniex/blob/master/CONTRIBUTING.md). All and any help is appreciated.\n#### Features:\n- [x] Python 2.7 and 3.5+\n- [x] Pypi\n- [x] Travis\n- [x] Websocket api support\n- [x] Minimal amount of dependencies\n- [x] Internal checks to reduce external api errors\n- [x] Rate limiter to keep from going over call limits\n- [x] Retries failed api calls during connection issues\n\n### Install:\n```\npip install --upgrade poloniexapi\n```\n\n### Usage:\nSee the [wiki](https://github.com/s4w3d0ff/python-poloniex/wiki) or `help(poloniex)` for more.\n\nAll api calls are done through an instance of `poloniex.Poloniex`. You can use the instance as follows:\n```python\n# import this package\nfrom poloniex import Poloniex\n\n# make an instance of poloniex.Poloniex\npolo = Poloniex()\n\n# show the ticker\nprint(polo(\'returnTicker\'))\n```\nUsing the instances `__call__` method (shown above) you can pass the command string as the first argument to make an api call. The `poloniex.Poloniex` class also has \'helper\' methods for each command that will help \'sanitize\' the commands arguments. For example, `Poloniex.returnChartData(\'USDT_BTC\', period=777)` will raise `PoloniexError("777 invalid candle period")`.\n\n```python\n# using a \'helper\' method\nprint(polo.returnChartData(currencyPair=\'BTC_LTC\', period=900))\n# bypassing \'helper\'\nprint(polo(command=\'returnChartData\', args={\'currencyPair\': \'BTC_LTC\',\n                                            \'period\': 900}))\n```\nAlmost every api command can be called this way. This wrapper also checks that the command you pass to the `command` arg is a valid command to send to poloniex, this helps reduce api errors due to typos.\n\n#### Private Commands:\nTo use the private api commands you first need an api key and secret (supplied by poloniex). When creating the instance of `poloniex.Poloniex` you can pass your api key and secret to the object like so:\n\n```python\nimport poloniex\npolo = poloniex.Poloniex(key=\'your-Api-Key-Here-xxxx\', secret=\'yourSecretKeyHere123456789\')\n\n# or this works\npolo.key = \'your-Api-Key-Here-xxxx\'\npolo.secret = \'yourSecretKeyHere123456789\'\n\n# get your balances\nbalance = polo.returnBalances()\nprint("I have %s ETH!" % balance[\'ETH\'])\n\n# or use \'__call__\'\nbalance = polo(\'returnBalances\')\nprint("I have %s BTC!" % balance[\'BTC\'])\n```\n#### Trade History:\nPoloniex has two api commands with the same name `returnTradeHistory`. To work around this without splitting up the commands or having to specify \'public\' or \'private\' we use the helper method `Poloniex.marketTradeHist` for public trade history and `Poloniex.returnTradeHistory` for private trades. If you try to bypass the helper method using `Poloniex.__call__`, it will call the private command.\n\n**Public** trade history:\n```python\nprint(polo.marketTradeHist(\'BTC_ETH\'))\n```\n**Private** trade history:\n```python\nprint(polo.returnTradeHistory(\'BTC_ETH\'))\n```\n\nYou can also not use the \'helper\' methods at all and use `poloniex.PoloniexBase` which only has `returnMarketHist` and `__call__` to make rest api calls.\n\n#### Websocket Usage:\nTo connect to the websocket api use the `PoloniexSocketed` class like so:\n```python\nimport poloniex\nimport logging\nfrom time import sleep\n\n# helps show what is going on\nlogging.basicConfig()\npoloniex.logger.setLevel(logging.DEBUG)\n\ndef on_volume(data):\n    print(data)\n# make instance\nsock = poloniex.PoloniexSocketed()\n# start the websocket thread and subscribe to \'24hvolume\' setting the callback to \'on_volume\'\nsock.startws(subscribe={\'24hvolume\': on_volume})\n# give the socket some time to init\nsleep(5)\n# use the channel name str or id int to subscribe/unsubscribe\nsock.subscribe(chan=\'ticker\', callback=print)\nsleep(1)\n# unsub from ticker using id (str name can be use as well)\nsock.unsubscribe(1002)\nsleep(4)\n# stop websocket\nsock.stopws()\n\n```\n\n```\nINFO:poloniex:Websocket thread started\nDEBUG:poloniex:Subscribed to 24hvolume\n[1010]\nDEBUG:poloniex:Subscribed to ticker\n[241, \'86.59997298\', \'86.68262835\', \'85.69590501\', \'0.01882321\', \'22205.56419338\', \'258.30264061\', 0, \'87.31843098\', \'82.81638725\']\n...\n...\n[254, \'5.89427014\', \'6.14542299\', \'5.92000026\', \'-0.03420118\', \'9978.11197201\', \'1649.83975863\', 0, \'6.19642428\', \'5.74631502\']\nDEBUG:poloniex:Unsubscribed to ticker\n[1010]\n[1010]\n[1010]\n[\'2019-06-07 04:16\', 2331, {\'BTC\': \'2182.115\', \'ETH\': \'490.635\', \'XMR\': \'368.983\', \'USDT\': \'7751402.061\', \'USDC\': \'5273463.730\'}]\nDEBUG:poloniex:Websocket Closed\nINFO:poloniex:Websocket thread stopped/joined\n```\nYou can also subscribe and start the websocket thread when creating an instance of `PoloniexSocketed` by using the `subscribe` and `start` args:\n```python\n\nsock = poloniex.PoloniexSocketed(subscribe={\'24hvolume\': print}, start=True)\n\n```\n\n\n**More examples of how to use websocket push API can be found [here](https://github.com/s4w3d0ff/python-poloniex/tree/master/examples).**\n'