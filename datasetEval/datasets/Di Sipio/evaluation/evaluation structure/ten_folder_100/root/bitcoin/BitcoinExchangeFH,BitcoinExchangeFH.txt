b'<p align="center">\n  <img src="docs/images/icon.jpg">\n</p>\n\n# BitcoinExchangeFH - Cryptocurrency exchange market data feed handler\n\nBitcoinExchangeFH is a slim application to record the price depth and trades in various exchanges. You can set it up quickly and record the all the exchange data in a few minutes!\n\nUsers can\n\n1. Streaming market data to a target application (via ZeroMQ)\n2. Recording market data for backtesting and analysis.\n3. Recording market data to a in-memory database and other applications can quickly access to it.\n4. Customize the project for trading use.\n\n### MySQL\n\n<p align="center">\n  <img src="docs/images/sample.jpg">\n</p>\n\n### Kdb+\n\n<p align="center">\n  <img src="docs/images/sample2.jpg">\n</p>\n\n## Supported exchanges\n\nAll exchanges supported by [ccxt](https://github.com/ccxt/ccxt). Currently more than 130 exchanges are supported.\n\nWebsocket feeds of the following exchanges are supported by [cryptofeed](https://github.com/bmoscon/cryptofeed)\n\n- Bitfinex\n\n- Coinbase\n\n- Poloniex\n\n- Gemini\n\n- HitBTC\n\n- Bitstamp\n\n- BitMEX\n\n- Kraken\n\n- Binance\n\n- EXX\n\n- Huobi\n\n- OKCoin\n\n- OKEx\n\n\nIf the exchange is not supported with websocket API feed, it will automatically fall into using its REST API feed.\n\n\n## Supported database/channel\n\n- RDMBS (e.g. sqlite, MySQL, PostgreSQL)\n\n- ZeroMQ\n\n- Kdb+ (Coming soon)\n\n## Getting started\n\n```\npip install bitcoinexchangefh\nbitcoinexchangefh --configuration example/configuration.yaml\n```\n\n## Configuration\n\nThe configuration follows [YAML](https://pyyaml.org/wiki/PyYAMLDocumentation) syntax and contains two sections\n\n- subscriptions\n\n- handlers\n\n\n### Subscriptions\n\nSubscription section specifies the exchange and instruments to subscribe. \n\nThe first key is the exchange name and then follows the exchange details, \n    \n- instruments \n\n- number of depth (default is 5 if not specified)\n\n\nFor example, \n\n```\nsubscription:\n    Binance:\n        instruments:\n            - XRP/BTC\n            - BCH/BTC\n        depth\n    Poloniex:\n        instruments:\n            - ETH/BTC\n        depth: 10\n```\n\n### Handlers\n\nAfter receiving the order book or trade update, each handler is updated. For example, for SQL database handler, it is updated with the corresponding SQl statements.\n\nFor example,\n\n```\nhandlers:\n    sql: \n        connection: "sqlite://"\n    \n```\n\n#### SQL handler\n\nThe following settings can be customized\n\n|Parameter|Description|\n|---|---|\n|connection|Database connection string required by [SQLAlchemy](https://docs.sqlalchemy.org/en/latest/core/engines.html)|\n|is_rotate|Boolean indicating whether to rotate to record the table.|\n|rotate_frequency|String in [format](https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior) same as `strftime` and `strptime`|\n\n#### ZeroMQ handler\n\nThe feed handler acts as a [publisher](https://learning-0mq-with-pyzmq.readthedocs.io/en/latest/pyzmq/patterns/pubsub.html) in ZeroMQ. To receive the feed, please follow ZeroMQ instructions to start a [subscriber](tests/zmq/zmq_subscriber.py).\n\nThe following settings can be customized\n\n|Parameter|Description|\n|---|---|\n|connection|Connection [format](http://api.zeromq.org/3-2:zmq-connect) in ZeroMQ. For example, "tcp://127.0.0.1:3456"|\n\n\n## Inquiries\n\nYou can first look up to the page [FAQ](https://github.com/gavincyi/BitcoinExchangeFH/wiki/FAQ). For more inquiries, you can either leave it in issues or drop me an email. I will get you back as soon as possible.\n\n## Compatibility\nThe application is compatible with version higher or equal to python 3.0.\n\n## Contributions\nAlways welcome for any contribution. Please fork the project, make the changes, and submit the merge request. :)\n\nFor any questions and comment, please feel free to contact me through email (gavincyi at gmail)\n\nYour comment will be a huge contribution to the project!\n\n## Continuity\nIf you are not satisified with python performance, you can contact me to discuss migrating the project into other languages, e.g. C++.\n'