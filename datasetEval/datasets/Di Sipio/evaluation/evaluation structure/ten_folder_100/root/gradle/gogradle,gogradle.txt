b'# Gogradle - a Full-featured Build Tool for Golang\n\n<img align="right" src="https://raw.githubusercontent.com/blindpirate/gogradle/master/docs/images/go-mini.png">\n\n\n[\xe4\xb8\xad\xe6\x96\x87\xe6\x96\x87\xe6\xa1\xa3](./README_CN.md)\n\n[![Build Status](https://travis-ci.org/gogradle/gogradle.svg?branch=master)](https://travis-ci.org/gogradle/gogradle)\n[![Build Status](https://ci.appveyor.com/api/projects/status/github/gogradle/gogradle?branch=master&svg=true&passingText=windows%20build%20passing&failingText=windows%20build%20failing)](https://ci.appveyor.com/api/projects/status/github/gogradle/gogradle?branch=master&svg=true&passingText=windows%20build%20passing&failingText=windows%20build%20failing)\n[![Coverage Status](https://coveralls.io/repos/github/blindpirate/gogradle/badge.svg?branch=master)](https://coveralls.io/github/blindpirate/gogradle?branch=master)\n[![Java 8+](https://img.shields.io/badge/java-8+-4c7e9f.svg)](http://java.oracle.com)\n[![Apache License 2](https://img.shields.io/badge/license-APL2-blue.svg)](http://www.apache.org/licenses/LICENSE-2.0.txt)\n\nGogradle is a gradle plugin which provides support for building golang.\n\n> 2017-06-23 Gogradle is awarded **Gradle Plugin of the Year 2017**. See [the talk on Gradle Summit 2017](https://www.youtube.com/watch?v=Mvf3gY1MopE&t=341s).\n>\n> 2017-12-17 Now Gogradle can build 817 of [Github\'s top 1000 Go repositories](https://github.com/search?l=&o=desc&q=stars%3A%3E1+language%3AGo&ref=advsearch&s=stars&type=Repositories&utf8=%E2%9C%93) **WITHOUT** any extra configuration!\n>\n> 2017-03-20 Now Gogradle can generate HTML reports for test and coverage! \n\n## What is Gogradle?\n\nGogradle is a [Gradle](https://gradle.org) plugin which provide modern build support for [Golang](https://golang.org/). Gogradle is deeply inspired by [glide](https://github.com/Masterminds/glide)(I need to pay respect for it). You can simply think Gogradle as `glide`+`make`.\n\n## Why Gogradle?\n\n- `make` has a very steep learning curve, thus many people (like me) aren\'t good at it; Gradle use a DSL with similar syntax to Java to describe a build, which is easier for me.\n- `Makefile` and `Shell` have cross-platform issues, especially on Windows. Thanks to Gradle and JVM, Gogradle provide an excellent cross-platform support and can leverage the whole Java ecosystem\n- There\'re many mature [plugins](https://plugins.gradle.org) in Gradle ecosystem, and it\'s easy for yourself to implement a plugin to reuse your build code\n- Gogradle supports project-scoped `GOPATH`, if you prefer\n- Gogradle supports existence and switch of multi-version of Go\n- There\'s plenty of [package management tools](https://github.com/blindpirate/report-of-go-package-management-tool) in Go community which are not compatible with each other.\n  - Gogradle provides a [migration command](./docs/getting-started-cn.md#Start) which enables you to migrate from other tools.\n  - Gogradle is compatible with `glide/glock/godep/gom/gopm/govendor/gvt/gbvendor/trash/gpm`. When retrieving a dependency package\'s transitive dependencies, it can recognized lock files of these tools.\n- Gogradle has a long-term and active development support\n\nGogradle implements most features of `glide` and adds some extra features:\n\n- Test and coverage reports generation\n- Multi-version management of Go\n- IDE support\n- Declaration and substitution of repositories, which can be used as mirror repositories\n\nIf you puzzled over these issues, or you were a Java developer and familiar with Gradle, Gogradle is your choice!  \n\nGogradle\'s objective is not replacing other tools, it only provides an option for developers.\n\nGogradle is NOT a toy. 52% of its code are tests to assure its quality. We also tested [Github\'s top 1000 Go repositories](https://github.com/search?l=&o=desc&q=stars%3A%3E1+language%3AGo&ref=advsearch&s=stars&type=Repositories&utf8=%E2%9C%93) as real world scenarios.\n\n## Feature\n\n- No need to preinstall anything but `JDK 8+` (including golang itself)\n  - If you\'re using JetBrains IDE, then JDK is not required\n- Supports Go 1.5+ and allow their existence at the same time\n- Perfect cross-platform support (as long as `Java` can be run, all tests have passed on OS X 10.11/Ubuntu 12.04/Windows 7)\n- Project-scope build, needless to set `GOPATH`\n- Full-featured package management\n  - Needless to install dependency packages manually, all you need to do is specifying the version\n  - VCS supported: Git/Mercurial\n  - Transitive dependency management\n  - Resolves package conflict automatically\n  - Supports dependency lock\n  - Supports importing dependencies managed by various external tools such as glide/glock/godep/gom/gopm/govendor/gvt/gbvendor/trash/gpm (Based on [this report](https://github.com/blindpirate/report-of-go-package-management-tool))\n  - Supports [submodule](https://git-scm.com/book/en/v2/Git-Tools-Submodules)\n  - Supports [SemVersion](http://semver.org/)\n  - Supports [vendor](https://docs.google.com/document/d/1Bz5-UB7g2uPBdOx-rw5t9MxJwkfpx90cqG9AFL0JAYo)\n  - Supports flattening dependencies (Inspired by [glide](https://github.com/Masterminds/glide))\n  - Supports renaming local packages\n  - Supports private repository\n  - Support automatic repository url substitution\n  - `build`/`test` dependencies are managed separately\n  - Supports dependency tree visualization\n  - Supports sub packages\n- Supports build/test/single-test/wildcard-test/cross-compile\n- Modern production-grade support for automatic build, simple to define customized tasks\n- Native syntax of gradle\n- Additional features for users in mainland China who are behind the [GFW](https://en.wikipedia.org/wiki/Great_Firewall)\n- Supports shadowsocks proxy \n- IDE support\n- Test and coverage report generation\n- Incremental build \n\n## How Gogradle works\n\nGogradle\'s work is based on [vendor](https://docs.google.com/document/d/1Bz5-UB7g2uPBdOx-rw5t9MxJwkfpx90cqG9AFL0JAYo) mechanism. You declare your build dependencies and build logic with Gradle DSL in `build.gradle`, and Gogradle will resolve all dependencies and potential package conflict, then install them into `vendor` directory and execute a build. In this course, dependency packages will be flattened to avoid [issues](https://github.com/blindpirate/golang-broken-vendor). Later, you can lock your resolved dependencies to ensure a reproducible build. It\'s up to you whether to check in `vendor` directory or not.\n\nSee [here](https://github.com/gogradle/samples) for examples.\n\n\n## Table of Content\n\n- [Getting Started](./docs/getting-started.md)\n- [Dependency Management](./docs/dependency-management.md)\n- [Tasks in Gogradle](./docs/tasks.md)\n- [Repository Management](./docs/repository-management.md)\n- [Set Proxy For Build](./docs/proxy.md)\n- [IDE Integration](./docs/ide.md)\n\n## Snapshot\n\nTest report\n\n![1](https://raw.githubusercontent.com/blindpirate/gogradle/master/docs/images/index.png)\n![1](https://raw.githubusercontent.com/blindpirate/gogradle/master/docs/images/classes.png)\n![1](https://raw.githubusercontent.com/blindpirate/gogradle/master/docs/images/packages.png)\n![1](https://raw.githubusercontent.com/blindpirate/gogradle/master/docs/images/failedtest.png)\n\nCoverage report\n\n![1](https://raw.githubusercontent.com/blindpirate/gogradle/master/docs/images/coverage.png)\n![1](https://raw.githubusercontent.com/blindpirate/gogradle/master/docs/images/coveragepackage.png)\n\n## Contributing\n\nIf you like Gogradle, star it please.\n\nPlease feel free to submit an [issue](https://github.com/blindpirate/gogradle/issues/new).\n\nFork and [PR](https://github.com/blindpirate/gogradle/pulls) are always welcomed.\n\n## Contributor Guide\n\nGogradle is developed in IntelliJ IDEA. You can run `./gradlew idea` and open the generated `.ipr` files in IDEA.\n\nPlease make sure all checks passed via `./gradlew check`.\n'