b'# Gradle Lint Plugin\n\n![Support Status](https://img.shields.io/badge/nebula-supported-brightgreen.svg)\n[![Build Status](https://travis-ci.org/nebula-plugins/gradle-lint-plugin.svg?branch=master)](https://travis-ci.org/nebula-plugins/gradle-lint-plugin)\n[![Coverage Status](https://coveralls.io/repos/github/nebula-plugins/gradle-lint-plugin/badge.svg?branch=master)](https://coveralls.io/github/nebula-plugins/gradle-lint-plugin?branch=master)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/nebula-plugins/gradle-lint-plugin?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n[![Apache 2.0](https://img.shields.io/github/license/nebula-plugins/gradle-lint-plugin.svg)](http://www.apache.org/licenses/LICENSE-2.0)\n\n## Purpose\n\nThe Gradle Lint plugin is a pluggable and configurable linter tool for identifying and reporting on patterns of misuse or deprecations in Gradle scripts and related files.  It is inspired by the excellent ESLint tool for Javascript and by the formatting in NPM\'s [eslint-friendly-formatter](https://www.npmjs.com/package/eslint-friendly-formatter) package.\n\nIt assists a centralized build tools team in gently introducing and maintaining a standard build script style across their organization.\n\n## Getting Started\n\nRead the [full documentation](https://github.com/nebula-plugins/gradle-lint-plugin/wiki).\n\nTo apply this plugin, please get the latest version from the [Gradle plugin portal](https://plugins.gradle.org/plugin/nebula.lint) and add the following to `build.gradle`:\n\n```groovy\nbuildscript { repositories { jcenter() } }\nplugins {\n  id \'nebula.lint\' version \'<latest version from the Gradle plugin portal>\'\n}\n```\n\n*Important:* For now, in a multi-module build you **must** apply lint to the root project, at a minimum.\n\nAlternatively:\n\n```groovy\nbuildscript {\n  repositories { jcenter() }\n  dependencies {\n    classpath \'com.netflix.nebula:gradle-lint-plugin:latest.release\'\n  }\n}\n\n\napply plugin: \'nebula.lint\'\n```\n\nDefine which rules you would like to lint against:\n\n```groovy\ngradleLint.rules = [\'all-dependency\'] // add as many rules here as you\'d like\n```\n\nFor an enterprise build, we recommend defining the lint rules in a `init.gradle` script or in a gradle script that is included via the Gradle `apply from` mechanism.\n\nFor multimodule projects, we recommend applying the plugin in an allprojects block:\n\n```groovy\nallprojects {\n  apply plugin: \'nebula.lint\'\n  gradleLint.rules = [\'all-dependency\'] // add as many rules here as you\'d like\n}\n```\n## api/implementation support\n\n[v15.0.0](https://github.com/nebula-plugins/gradle-lint-plugin/releases/tag/v15.0.0)  introduced api/implementation configuration support.\n\nThis allows to show warnings around api/implementation configurations\n\nSince we need to do some major work to keep track of declared configurations and then replace code with the proper configuration, we decided to just show warnings for now.\n\nThis work includes finding dependency information for non resolvable configurations so we look into the parents\n\nIf [gradle/gradle#11106](https://github.com/gradle/gradle/issues/11106) lands some day, we could definitely enhance this experience.\n\nWhile it is great to have automatic fix, not having it is worse. So for now warning about this with the same detail as before is much better than a broken experience with new gradle configurations\n\n## Warning\nGradle Lint Plugin currently doesn\'t support:\n\n* kotlin build scripts. Please, switch to groovy build script if you want to use linting. [#166](https://github.com/nebula-plugins/gradle-lint-plugin/issues/166)\n\n\n## License\n\nCopyright 2015-2018-2019 Netflix, Inc.\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n<http://www.apache.org/licenses/LICENSE-2.0>\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n'