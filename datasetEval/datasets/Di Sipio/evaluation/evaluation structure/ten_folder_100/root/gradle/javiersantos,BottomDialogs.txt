b'<h1 align="center">BottomDialogs <a href="https://github.com/javiersantos/BottomDialogs#how-to-include"><img src="https://jitpack.io/v/javiersantos/BottomDialogs.svg"></a></h1>\n<h4 align="center">Android Library</h4>\n\n<p align="center">\n  <a target="_blank" href="https://android-arsenal.com/api?level=11"><img src="https://img.shields.io/badge/API-11%2B-orange.svg"></a>\n  <a target="_blank" href="https://travis-ci.org/javiersantos/BottomDialogs"><img src="https://travis-ci.org/javiersantos/BottomDialogs.svg?branch=master"></a>\n  <a target="_blank" href="http://android-arsenal.com/details/1/3735"><img \t\tsrc="https://img.shields.io/badge/Android%20Arsenal-BottomDialogs-blue.svg"></a>\n  <a target="_blank" href="https://www.paypal.me/javiersantos" title="Donate using PayPal"><img src="https://img.shields.io/badge/paypal-donate-yellow.svg" /></a>\n</p>\n\n<p align="center">Android Library that shows a customizable Material-based bottom sheet.</p>\n\n<table align="center">\n    <tr>\n        <td>\n            <img src="https://raw.githubusercontent.com/javiersantos/BottomDialogs/master/Screenshots/gif-1.gif" height="400" />\n        </td>\n        <td>\n            <img src="https://raw.githubusercontent.com/javiersantos/BottomDialogs/master/Screenshots/gif-2.gif" width="500" />\n        </td>\n    </tr>\n</table>\n\n## How to include\nAdd the repository to your project **build.gradle**:\n\n```Gradle\nrepositories {\n    maven {\n        url "https://jitpack.io"\n    }\n}\n```\n\nAnd add the library to your module **build.gradle**:\n\n```Gradle\ndependencies {\n    compile \'com.github.javiersantos:BottomDialogs:1.2.1\'\n}\n```\n\n## Usage\n### Basic Bottom Dialog\nA basic bottom dialog will be shown. You have access to methods such as `setTitle()`, `setContent()`, `setIcon()`, `setCancelable()`, `dismiss()`, etc. Customizations are explained below.\n\n```Java\nnew BottomDialog.Builder(this)\n\t.setTitle("Awesome!")\n\t.setContent("What can we improve? Your feedback is always welcome.")\n\t.show();\n```\n\nor\n\n```Java\nBottomDialog bottomDialog = new BottomDialog.Builder(this)\n\t.setTitle("Awesome!")\n\t.setContent("What can we improve? Your feedback is always welcome.")\n\t.build();\n...\nbottomDialog.show();\n```\n\n### Displaying an icon\nThe bottom dialog icon will be shown to the left of the title.\n\n```Java\nnew BottomDialog.Builder(this)\n\t.setTitle("Awesome!")\n\t.setContent("What can we improve? Your feedback is always welcome.")\n\t.setIcon(R.drawable.ic_launcher)\n\t//.setIcon(ContextCompat.getDrawable(this, R.drawable.ic_launcher))\n\t.show();\n```\n\n### Adding buttons and callbacks\nButtons are showed at the end of the bottom dialog. You can add your own text, colors and actions/callbacks.\n\n```Java\nnew BottomDialog.Builder(this)\n\t.setTitle("Awesome!")\n\t.setContent("What can we improve? Your feedback is always welcome.")\n\t.setPositiveText("OK")\n\t.setPositiveBackgroundColorResource(R.color.colorPrimary)\n\t//.setPositiveBackgroundColor(ContextCompat.getColor(this, R.color.colorPrimary)\n\t.setPositiveTextColorResource(android.R.color.white)\n\t//.setPositiveTextColor(ContextCompat.getColor(this, android.R.color.colorPrimary)\n\t.onPositive(new BottomDialog.ButtonCallback() {\n\t\t@Override\n\t\tpublic void onClick(BottomDialog dialog) {\n\t\t\tLog.d("BottomDialogs", "Do something!");\n\t\t}\n\t}).show();\n```\n\n```Java\nnew BottomDialog.Builder(this)\n\t.setTitle("Awesome!")\n\t.setContent("What can we improve? Your feedback is always welcome.")\n\t.setNegativeText("Exit")\n\t.setNegativeTextColorResource(R.color.colorAccent)\n\t//.setNegativeTextColor(ContextCompat.getColor(this, R.color.colorAccent)\n\t.onNegative(new BottomDialog.ButtonCallback() {\n\t\t@Override\n\t\tpublic void onClick(BottomDialog dialog) {\n\t\t\tLog.d("BottomDialogs", "Do something!");\n\t\t}\n\t}).show();\n```\n\nIf no `onPositive()` or `onNegative()` callbacks are provided, then the bottom dialog will be dismissed when tapping de button.\n\nIf `autoDismiss()` is turned `false`, then you must manually dismiss the dialog in these callbacks. Auto dismiss is `true` by default.\n\n### Dismissing when touching outside\nThe `setCancelable()` method lets you disable dismissing the bottom dialog when you tap outside the dialog window.\n\n```Java\nnew BottomDialog.Builder(this)\n\t.setTitle("Awesome!")\n\t.setContent("What can we improve? Your feedback is always welcome.")\n\t.setCancelable(false)\n\t.show();\n```\n\n### Adding a custom view\nYou can add custom view to your bottom dialog just by adding the layout to the `setCustomView()` method.\n\n```Java\nnew BottomDialog.Builder(this)\n\t.setTitle("Awesome!")\n\t.setContent("What can we improve? Your feedback is always welcome.")\n\t.setCustomView(R.layout.my_custom_view)\n\t.show();\n```\n\nA detailed description is available at: https://github.com/javiersantos/BottomDialogs/wiki/Adding-a-custom-view\n\n### Adding a custom color and font\n\nYou can add custom colors and fonts to bottom dialog by using the view objects: `getIconImageView()`, `getTitleTextView()`, `getContentTextView()`, `getNegativeButton()` and `getPositiveButton()`. For example:\n\n```Java\nBottomDialog bottomDialog = BottomDialog.Builder(this)\n\t...\n\t.build();\n\nbottomDialog.getTitleTextView().setTextColor(Color.parseColor("#8f000000"));\nbottomDialog.getTitleTextView().setTypeface(BaseActivity.getFont(Fonts.SEMI_BOLD));\nbottomDialog.show();\n```\n\n## Third Party Bindings\n\n### React Native\nYou may now use this library with [React Native](https://github.com/facebook/react-native) via the module [here](https://github.com/prscX/react-native-bottom-action-sheet)\n\n\n## License\n\tCopyright 2016-2018 Javier Santos\n\n\tLicensed under the Apache License, Version 2.0 (the "License");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n\t   http://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an "AS IS" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n'