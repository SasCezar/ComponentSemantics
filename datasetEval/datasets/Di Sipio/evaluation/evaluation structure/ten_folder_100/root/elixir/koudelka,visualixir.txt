b'# Visualixir\n\nVisualixir is a toy visualizer for BEAM nodes, written in Elixir + Phoenix + d3, with live message sequence charts.\n\nIt\'s largely intended as a teaching tool, to give newer BEAM programmers a look into the process ecosystem living inside their nodes. However, it may prove of some amusement/use to more experienced folks (it\'s kinda neat to trace `iex` and the io system).\n\nHuge gifs are worth a thousand words:\n\n![Cluster Select](https://raw.githubusercontent.com/koudelka/visualixir/master/doc/cluster_select.gif)\n![Cluster Tour](https://raw.githubusercontent.com/koudelka/visualixir/master/doc/cluster_tour.gif)\n\n![Msg Seq](https://raw.githubusercontent.com/koudelka/visualixir/master/doc/msg_seq.gif)\n![Msg Seq 2](https://raw.githubusercontent.com/koudelka/visualixir/master/doc/msg_seq_2.gif)\n\n## Getting Going\n\n1. Clone this repository.\n2. Compile: `mix deps.get && mix compile && cd assets && npm install && cd -`\n3. Start \'er up: `elixir --sname visualixir -S mix phx.server`\n4. Navigate to [the GUI](http://0.0.0.0:4000)\n\nIf you want to visualize other BEAM nodes, you\'ll need to start them up with the `--sname <unique_name_here>` option.\n\nI suggest you use Chrome for Visualixir, Safari and Firefox\'s SVG performance seems to be lacking. :(\n\nThere are a couple example modules included, [SingleNodePingPong](https://github.com/koudelka/visualixir/blob/master/lib/visualixir/examples/single_node_ping_pong.ex) and [MultiNodePingPong](https://github.com/koudelka/visualixir/blob/master/lib/visualixir/examples/multi_node_ping_pong.ex). Additionally, there\'s a [Cluster](https://github.com/koudelka/visualixir/blob/master/test/support/cluster.ex) module to start up additional `:slave` nodes.\n\n## Usage\n\n#### Selecting Nodes\nOn the upper left of the terrible GUI is a list of nodes that Visualixir curently knows about, including itself. You can click on a node\'s name to visualize it, or you can add a new node by entering it in the text box.\n\n#### Moving Around\nDrag the background to pan around.\n\nMove processes around and pin them down by dragging and dropping. To un-pin, double click.\n\nZoom by scrolling (mousewheel or two-finger swipe).\n\n#### Message Tracing\nOption-dragging (alt-dragging), will open a new "conversation", you can drop a set of pids into the upper left box to start tracing, you should see messages they send/receive in the adjoining box. Its outline will change to red to remind you that you\'re tracing it. You can click the `Stop Msg Tracing` button to halt all message tracing.\n\nThe live message sequence charts have a configurable fade time, but there\'s no GUI for it yet, see [web/static/js/message_sequence.js](https://github.com/koudelka/visualixir/blob/master/web/static/js/message_sequence.js)\n\nThe charting library is [here](https://github.com/koudelka/d3-message-sequence), and it\'d love some pull requests. <3\n\n## Warning\nDo not run Visualixir on production nodes, seriously. I\'ve tried to make it somewhat safe, but I suspect you can get into some bad message-tracing scenarios that\'ll compromise your node.\n\n## Caveats\nThis a prototype, obviously, the code is a steaming pile of garbage. Visualixir is largely intended to be a playground for screwing around with visualization ideas. I\'d love to see what folks come up with, PR\'s are gladly accepted! \xf0\x9f\x92\x95 (the GUI needs a lot of help)\n'