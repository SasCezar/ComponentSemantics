b'# Commanded\n\nUse Commanded to build your own Elixir applications following the [CQRS/ES](http://cqrs.nu/Faq) pattern.\n\nProvides support for:\n\n- Command registration and dispatch.\n- Hosting and delegation to aggregates.\n- Event handling.\n- Long running process managers.\n\nCommanded provides a solid technical foundation for you to build on. It allows you to focus on modelling your domain, the most important part of your app, creating a better application at a faster pace.\n\nYou can use Commanded with one of the following event stores for persistence:\n\n- [EventStore](https://github.com/commanded/eventstore) Elixir library using PostgreSQL for persistence\n- Greg Young\'s [Event Store](https://eventstore.org/).\n- [In-memory event store](https://github.com/commanded/commanded/wiki/In-memory-event-store) included for test use only.\n\nPlease refer to the [CHANGELOG](CHANGELOG.md) for features, bug fixes, and any upgrade advice included for each release.\n\nRequires Erlang/OTP v21.0 and Elixir v1.6 or later.\n\n---\n\n### Supporting Commanded\n\nYou can help support Commanded by helping to fund its ongoing development, new features, and releases.\n\n- [Become a GitHub sponsor](https://github.com/sponsors/slashdotdash).\n- [View sponsors & backers](BACKERS.md)\n\n---\n\n- [Changelog](CHANGELOG.md)\n- [Wiki](https://github.com/commanded/commanded/wiki)\n- [What is CQRS/ES?](https://kalele.io/blog-posts/really-simple-cqrs/)\n- [Frequently asked questions](https://github.com/commanded/commanded/wiki/FAQ)\n- [Getting help](https://github.com/commanded/commanded/wiki/Getting-help)\n- [Latest published Hex package](https://hex.pm/packages/commanded) & [documentation](https://hexdocs.pm/commanded/)\n\nMIT License\n\n[![Build Status](https://travis-ci.com/commanded/commanded.svg?branch=master)](https://travis-ci.com/commanded/commanded) [![Join the chat at https://gitter.im/commanded/Lobby](https://badges.gitter.im/commanded/Lobby.svg)](https://gitter.im/commanded/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n---\n\n> This README and the following guides follow the `master` branch which may not be the currently published version.\n>\n> [Read the documentation for the latest published version of Commanded on Hex](https://hexdocs.pm/commanded/).\n\n### Overview\n\n- [Getting started](guides/Getting%20Started.md)\n- [Choosing an event store](guides/Choosing%20an%20Event%20Store.md)\n  - [PostgreSQL-based EventStore](guides/Choosing%20an%20Event%20Store.md#postgresql-based-elixir-eventstore)\n  - [Greg Young\'s Event Store](guides/Choosing%20an%20Event%20Store.md#greg-youngs-event-store)\n- [Using Commanded](guides/Usage.md)\n  - [Aggregates](guides/Aggregates.md)\n    - [Example aggregate](guides/Aggregates.md#example-aggregate)\n    - [`Commanded.Aggregate.Multi`](guides/Aggregates.md#using-commandedaggregatemulti-to-return-multiple-events)\n    - [Aggregate state snapshots](guides/Aggregates.md#aggregate-state-snapshots)\n  - [Commands](guides/Commands.md)\n    - [Command handlers](guides/Commands.md#command-handlers)\n    - [Command dispatch and routing](guides/Commands.md#command-dispatch-and-routing)\n      - [Define aggregate identity](guides/Commands.md#define-aggregate-identity)\n      - [Multi-command registration](guides/Commands.md#multi-command-registration)\n      - [Dispatch timeouts](guides/Commands.md#timeouts)\n      - [Dispatch consistency guarantee](guides/Commands.md#command-dispatch-consistency-guarantee)\n      - [Dispatch returning execution result](guides/Commands.md#dispatch-returning-execution-result)\n      - [Aggregate lifespan](guides/Commands.md#aggregate-lifespan)\n      - [Composite command routers](guides/Commands.md#composite-command-routers)\n    - [Middleware](guides/Commands.md#middleware)\n      - [Example middleware](guides/Commands.md#example-middleware)\n    - [Composite command routers](guides/Commands.md#composite-command-routers)\n  - [Events](guides/Events.md)\n    - [Domain events](guides/Events.md#domain-events)\n    - [Event handlers](guides/Events.md#event-handlers)\n      - [Consistency guarantee](guides/Events.md#consistency-guarantee)\n    - [Upcasting events](guides/Events.md#upcasting-events)\n  - [Process managers](guides/Process%20Managers.md)\n    - [Example process manager](guides/Process%20Managers.md#example-process-manager)\n  - [Supervision](guides/Supervision.md)\n  - [Serialization](guides/Serialization.md)\n    - [Default JSON serializer](guides/Serialization.md#default-json-serializer)\n    - [Configuring JSON serialization](guides/Serialization.md#configuring-json-serialization)\n    - [Decoding event structs](guides/Serialization.md#decoding-event-structs)\n    - [Using an alternative serialization format](guides/Serialization.md#using-an-alternative-serialization-format)\n    - [Customising serialization](guides/Serialization.md#customising-serialization)\n  - [Read model projections](guides/Read%20Model%20Projections.md)\n- [Deployment](guides/Deployment.md)\n  - [Single node deployment](guides/Deployment.md#single-node-deployment)\n  - [Multi node cluster deployment](guides/Deployment.md#multi-node-cluster-deployment)\n  - [Multi node, but not clustered deployment](guides/Deployment.md#multi-node-but-not-clustered-deployment)\n- [Testing with Commanded](guides/Testing.md)\n- [Used in production?](#used-in-production)\n- [Example application](#example-application)\n- [Learn Commanded in 20 minutes](#learn-commanded-in-20-minutes)\n- [Choosing an event store provider](guides/Choosing%20an%20Event%20Store.md#writing-your-own-event-store-provider)\n- [Tooling](https://github.com/commanded/commanded/wiki/Tooling)\n- [Contributing](#contributing)\n- [Need help?](#need-help)\n\n---\n\n## Used in production?\n\nYes, see the [companies using Commanded](https://github.com/commanded/commanded/wiki/Companies-using-Commanded).\n\n## Example application\n\n[Conduit](https://github.com/slashdotdash/conduit) is an open source, example Phoenix 1.3 web application implementing the CQRS/ES pattern in Elixir. It was built to demonstrate the implementation of Commanded in an Elixir application for the [Building Conduit](https://leanpub.com/buildingconduit) book.\n\n## Learn Commanded in 20 minutes\n\n[Watch Bernardo Amorim introduce CQRS and event sourcing](https://www.youtube.com/watch?v=S3f6sAXa3-c) at Code Beam SF 2018. Including a tutorial on how to implement an Elixir application using these concepts with Commanded.\n\n## Contributing\n\nPull requests to contribute new or improved features, and extend documentation are most welcome.\n\nPlease follow the existing coding conventions, or refer to the [Elixir style guide](https://github.com/niftyn8/elixir_style_guide).\n\nYou should include unit tests to cover any changes. Run `mix test` to execute the test suite.\n\n### Contributors\n\nCommanded exists thanks to the following people who have contributed.\n\n<a href="https://github.com/commanded/commanded/graphs/contributors"><img src="https://opencollective.com/commanded/contributors.svg?width=890&button=false" width="890" /></a>\n\n- [Adil Yarulin](https://github.com/ayarulin)\n- [Andrey Akulov](https://github.com/astery)\n- [Andrzej Sliwa](https://github.com/andrzejsliwa)\n- [Ben Smith](https://github.com/slashdotdash)\n- [Bernardo Amorim](https://github.com/bamorim)\n- [Brenton Annan](https://github.com/brentonannan)\n- [Chris Brodt](https://github.com/uberbrodt)\n- [Chris Martin](https://github.com/trbngr)\n- [David Carlin](https://github.com/davich)\n- [Danni Friedland](https://github.com/BlueHotDog)\n- [Fernando Mendes](https://github.com/justmendes)\n- [Florian Ebeling](https://github.com/febeling)\n- [Henry Hazan](https://github.com/henry-hz)\n- [JC](https://github.com/jccf091)\n- [Joan Zapata](https://github.com/JoanZapata)\n- [Jo\xc3\xa3o Thallis](https://github.com/joaothallis)\n- [Kok J Sam](https://github.com/sammkj)\n- [Leif Gensert](https://github.com/leifg)\n- [Lu\xc3\xads Ferreira](https://github.com/zamith)\n- [Matt Doughty](https://github.com/m-doughty)\n- [Miguel Palhas](https://github.com/naps62)\n- [Nigel Thorne](https://github.com/nigelthorne)\n- [Olafur Arason](https://github.com/olafura)\n- [Paolo Laurenti](https://github.com/PaoloLaurenti)\n- [Patrick Detlefsen](https://github.com/patrickdet)\n- [Phil Chen](https://github.com/fahchen)\n- [Rapha\xc3\xabl Lustin](https://github.com/rlustin)\n- [Tobiasz Ma\xc5\x82ecki](https://github.com/amatalai)\n\n## Need help?\n\nPlease [open an issue](https://github.com/commanded/commanded/issues) if you encounter a problem, or need assistance. You can also seek help in the [Gitter chat room](https://gitter.im/commanded/Lobby) for Commanded.\n\nFor commercial support, and consultancy, please contact [Ben Smith](mailto:ben@10consulting.com).\n'