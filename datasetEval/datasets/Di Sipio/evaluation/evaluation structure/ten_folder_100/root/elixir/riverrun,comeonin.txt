b'# Comeonin\n\n[![Hex.pm Version](http://img.shields.io/hexpm/v/comeonin.svg)](https://hex.pm/packages/comeonin)\n[![Build Status](https://travis-ci.com/riverrun/comeonin.svg?branch=master)](https://travis-ci.com/riverrun/comeonin)\n[![Join the chat at https://gitter.im/comeonin/Lobby](https://badges.gitter.im/comeonin/Lobby.svg)](https://gitter.im/comeonin/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nComeonin is a specification for password hashing libraries.\n\nFor information about hashing passwords in your app, see\n[Password hashing libraries](#password-hashing-libraries).\n\n## Changes in version 5\n\nIn version 5.0 and above, Comeonin now provides two behaviours, Comeonin and\nComeonin.PasswordHash, which password hash libraries then implement.\n\nWith these changes, Comeonin is now a dependency of the password hashing\nlibrary you choose to use, and in most cases, you will not use it\ndirectly.\n\nSee the [UPGRADE_v5 guide](https://github.com/riverrun/comeonin/blob/master/UPGRADE_v5.md)\nfor information about you can upgrade to version 5.\n\n## Password hashing libraries\n\nThe following libraries all implement the Comeonin and Comeonin.PasswordHash\nbehaviours:\n\n* Argon2 - argon2_elixir\n  * [docs](https://hexdocs.pm/argon2_elixir)\n  * [source](https://github.com/riverrun/argon2_elixir)\n* Bcrypt - bcrypt_elixir\n  * [docs](https://hexdocs.pm/bcrypt_elixir)\n  * [source](https://github.com/riverrun/bcrypt_elixir)\n* Pbkdf2 - pbkdf2_elixir\n  * [docs](https://hexdocs.pm/pbkdf2_elixir)\n  * [source](https://github.com/riverrun/pbkdf2_elixir)\n\nArgon2 is currently considered to be the strongest password hashing function,\nand it is the one we recommend.\n\nBcrypt and Pbkdf2 are viable alternatives, but they are less resistant than Argon2,\nto attacks using GPUs or dedicated hardware.\n\n### Windows users\n\nOn Windows, it can be time-consuming and problematic to setup the environment needed\nto compile the C code in Argon2 and Bcrypt. For this reason, it is often easier to install\nPbkdf2, which has no C dependencies.\n\nFor more information, see\n[Choosing a library](https://github.com/riverrun/comeonin/wiki/Choosing-the-password-hashing-library).\n\n## Comeonin wiki\n\nSee the [Comeonin wiki](https://github.com/riverrun/comeonin/wiki) for more\ninformation on the following topics:\n\n* [hashing passwords](https://github.com/riverrun/comeonin/wiki/Hashing-passwords)\n  * a general guide to hashing passwords in your Elixir app\n* [password hashing libraries](https://github.com/riverrun/comeonin/wiki/Choosing-the-password-hashing-library)\n* [requirements](https://github.com/riverrun/comeonin/wiki/Requirements)\n* [deployment](https://github.com/riverrun/comeonin/wiki/Deployment)\n  * including information about using Docker\n* [references](https://github.com/riverrun/comeonin/wiki/References)\n\n## Contributing\n\nThere are many ways you can contribute to the development of Comeonin, including:\n\n* reporting issues\n* improving documentation\n* sharing your experiences with others\n* [making a financial contribution](#donations)\n\n## Donations\n\nFirst of all, I would like to emphasize that this software is offered\nfree of charge. However, if you find it useful, and you would like to\nbuy me a cup of coffee, you can do so at [paypal](https://www.paypal.me/alovedalongthe).\n\n### Documentation\n\nhttps://hexdocs.pm/comeonin\n\n### License\n\nBSD. For full details, please read the LICENSE file.\n'