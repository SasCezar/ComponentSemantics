b'<div align="center">\n  <img src="logo.svg" width="300" />\n  <p>\n    <br /><strong>The first developer-oriented translation tool</strong>\n    <br />True asynchronous flow between translators and your team.\n    <br />\n  </p>\n</div>\n\n[Demo](http://demo.accent.reviews) \xe2\x80\xa2 [Website](https://www.accent.reviews) \xe2\x80\xa2 [GraphiQL](https://www.accent.reviews/documentation)\n\n[![Build Status](https://travis-ci.com/mirego/accent.svg?branch=master)](https://travis-ci.com/mirego/accent)\n[![Coverage Status](https://coveralls.io/repos/github/mirego/accent/badge.svg?branch=master)](https://coveralls.io/github/mirego/accent?branch=master) [![Join the chat at https://gitter.im/mirego/accent](https://badges.gitter.im/mirego/accent.svg)](https://gitter.im/mirego/accent?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nAccent provides a powerful abstraction around the process maintaining translations in a web/native app.\n\n- **History**. Full history control and actions rollback. _Who_ did _what_, _when_.\n- **UI**. Simple yet powerful UI to enable translator and developer to be productive.\n- **CLI**. [Command line tool](https://github.com/mirego/accent/tree/master/cli) to easily add Accent to your developer flow.\n- **Collaboration**. Centralize your discussions around translations.\n- **GraphQL**. The API that powers the UI is open and documented. It\xe2\x80\x99s easy to build a plugin/cli/library around Accent.\n\n## Contents\n\n| Section                                             | Description                                                          |\n| --------------------------------------------------- | -------------------------------------------------------------------- |\n| [\xf0\x9f\x9a\x80 Getting started](#-getting-started)             | Quickly setup a working app                                          |\n| [\xf0\x9f\x9a\xa7 Requirements](#-requirements)                   | Dependencies required to run Accent\xe2\x80\x99 stack                           |\n| [\xf0\x9f\x8e\x9b Mix commands](#-executing-mix-commands)          | How to execute mix task with the Twelve-Factor pattern               |\n| [\xf0\x9f\x8f\x8e Quickstart](#-quickstart)                        | Steps to run the project, from API to webapp, with or without Docker |\n| [\xf0\x9f\x8c\xb3 Environment variables](#-environment-variables) | Required and optional env var used                                   |\n| [\xe2\x9c\x85 Tests](#-tests)                                 | How to run the extensive tests suite                                 |\n| [\xf0\x9f\x9a\x80 Heroku](#-heroku)                               | Easy deployment setup with Heroku                                    |\n| [\xf0\x9f\x8c\x8e Contribute](#-contribute)                       | How to contribute to this repo                                       |\n\n## \xf0\x9f\x9a\x80 Getting started\n\nEasiest way to run an instance of Accent is by using the offical docker image: https://hub.docker.com/r/mirego/accent\n\n1. The only external dependancy is a PostgreSQL database.\n2. Create a `.env` file. Example:\n\n```\nDATABASE_URL=postgresql://postgres@docker.for.mac.host.internal/accent_development\nDUMMY_LOGIN_ENABLED=1\n```\n\n3. Run the image\n\n```shell\n$ docker run --env-file .env -p 4000:4000 mirego/accent\n```\n\nThis will start the webserver on port 4000, migrate the database to have an up and running Accent instance!\n\n## \xf0\x9f\x9a\xa7 Requirements\n\n- `erlang ~> 21.2`\n- `elixir ~> 1.9`\n- `postgres >= 9.4`\n- `node.js >= 8.5.0`\n- `libyaml >= 0.1.7`\n\n## \xf0\x9f\x8e\x9b Executing mix commands\n\nThe app is modeled with the [_Twelve-Factor App_](https://12factor.net/) architecture, all configurations are stored in the environment.\n\nWhen executing `mix` commands, you should always make sure that the required environment variables are present. You can `source`, use [nv](https://github.com/jcouture/nv) or a custom l33t bash script.\n\nEvery following steps assume you have this kind of system.\n\nBut Accent can be run with default environment variables if you have a PostgreSQL user named `postgres` listening on port `5432` on `localhost`.\n\n### Example\n\nWith `nv` you inject the environment keys in the context with:\n\n```shell\n$ nv .env mix <mix command>\n```\n\n## \xf0\x9f\x8f\x8e Quickstart\n\n_This is the full development setup. To simply run the app, see the *Getting started* instructions_\n\n1. If you don\xe2\x80\x99t already have it, install `nodejs` with `brew install nodejs`\n2. If you don\xe2\x80\x99t already have it, install `elixir` with `brew install elixir`\n3. If you don\xe2\x80\x99t already have it, install `libyaml` with `brew install libyaml`\n4. If you don\xe2\x80\x99t already have it, install `postgres` with `brew install postgres` or the Docker setup as described below.\n5. Install dependencies with `make dependencies`\n6. Create and migrate your database with `mix ecto.setup`\n7. Start Phoenix endpoint with `mix phx.server`\n8. Start Ember server with `npm run start --prefix webapp`\n\n_That\xe2\x80\x99s it!_\n\n### Makefile\n\nThe Makefile should be the main entry for common tasks such as tests, linting, Docker, etc. This simplify the developpement process since you don\xe2\x80\x99t have to search for which service provides which command. `mix`, `npm`, `prettier`, `docker`, `stylelint`, etc are all used in the Makefile.\n\n### Docker\n\nFor the production setup, we use Docker to build an OTP release of the app. With docker-compose, you can run the image locally. Here are the steps to have a working app running locally with Docker:\n\n_When running the production env, you need to provide a valid GOOGLE_API_CLIENT_ID in the `docker-compose.yml` file._\n\n1. Run `make build` to build the OTP release with Docker\n2. Run `make dev-start-postgresql` to start an instance of Postgresql. The instance will run on port 5432 with the `postgres` user. You can change those values in the `docker-compose.yml` file.\n3. Run `make dev-start-application` to start the app! The release hook of the release will execute migrations and seeds before starting the webserver on port 4000 (again you can change the settings in `docker-compose.yml`)\n\n_That\xe2\x80\x99s it! You now have a working Accent instance without installing Elixir or Node!_\n\n## \xf0\x9f\x8c\xb3 Environment variables\n\nAccent provides a default value for every required environment variable. This means that with the right PostgreSQL setup, you can just run `mix phx.server`.\n\n| Variable       | Default                                   | Description                                                                                                                                                                |\n| -------------- | ----------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `API_HOST`     | _none_                                    | The API host, if the API is hosted by the same host as the webapp (like in a production setup) it should not be included in env var. It is required for the webapp in dev. |\n| `API_WS_HOST`  | _none_                                    | The API Websocket host, same requirements and defaults as `API_HOST`                                                                                                       |\n| `DATABASE_URL` | `postgres://localhost/accent_development` | A valid database URL                                                                                                                                                       |\n| `PORT`         | `4000`                                    | A port to run the API on                                                                                                                                                   |\n| `WEBAPP_PORT`  | `4200`                                    | A port to run the Webapp on (only used in `dev` environment)                                                                                                               |\n| `WEBAPP_URL`   | `http://localhost:4000`                   | The Web client\xe2\x80\x99s endpoint. Used in the authentication process and in the sent emails.                                                                                      |\n\n### Production setup\n\n| Variable            | Default | Description                                                                                       |\n| ------------------- | ------- | ------------------------------------------------------------------------------------------------- |\n| `RESTRICTED_DOMAIN` | _none_  | If specified, only authenticated users from this domain name will be able to create new projects. |\n| `FORCE_SSL`         | _false_ | If the app should always be served by https (and wss for websocket)                               |\n| `SENTRY_DSN`        | _none_  | The _secret_ Sentry DSN used to collect API runtime errors                                        |\n| `WEBAPP_SENTRY_DSN` | _none_  | The _public_ Sentry DSN used to collect Webapp runtime errors                                     |\n\n### Authentication setup\n\nVarious login providers are included in Accent using Ueberauth to abstract services.\n\n| Variable                   | Default | Description                                                                                                                               |\n| -------------------------- | ------- | ----------------------------------------------------------------------------------------------------------------------------------------- |\n| `DUMMY_LOGIN_ENABLED`      | _none_  | If specified (or no other authentication configs are provided), the password-less authentication (with only the email) will be available. |\n| `GITHUB_CLIENT_ID`         | _none_  |                                                                                                                                           |\n| `GITHUB_CLIENT_SECRET`     | _none_  |                                                                                                                                           |\n| `GOOGLE_API_CLIENT_ID`     | _none_  |                                                                                                                                           |\n| `GOOGLE_API_CLIENT_SECRET` | _none_  |                                                                                                                                           |\n| `SLACK_CLIENT_ID`          | _none_  |                                                                                                                                           |\n| `SLACK_CLIENT_SECRET`      | _none_  |                                                                                                                                           |\n| `SLACK_TEAM_ID`            | _none_  |                                                                                                                                           |\n| `DISCORD_CLIENT_ID`        | _none_  |                                                                                                                                           |\n| `DISCORD_CLIENT_SECRET`    | _none_  |                                                                                                                                           |\n\n### Email setup\n\nIf you want to send emails, you\xe2\x80\x99ll have to configure the following environment variables:\n\n| Variable           | Default | Description                                               |\n| ------------------ | ------- | --------------------------------------------------------- |\n| `MAILER_FROM`      | _none_  | The email address used to send emails.                    |\n| `SENDGRID_API_KEY` | _none_  | Use SendGrid to send emails                               |\n| `MANDRILL_API_KEY` | _none_  | Use Mandrill to send emails                               |\n| `MAILGUN_API_KEY`  | _none_  | Use Mailgun to send emails                                |\n| `SMTP_ADDRESS`     | _none_  | Use an SMTP server to send your emails.                   |\n| `SMTP_API_HEADER`  | _none_  | An optional API header that will be added to sent emails. |\n| `SMTP_PORT`        | _none_  | The port ex: (25, 465, 587).                              |\n| `SMTP_PASSWORD`    | _none_  | The password for authentification.                        |\n| `SMTP_USERNAME`    | _none_  | The username for authentification.                        |\n\n### Kubernetes helm chart setup\n\nYou can setup the project with [a helm chart like this one](https://github.com/andreymaznyak/accent-helm-chart). This project uses [a fork by andreymaznyak](https://github.com/andreymaznyak/accent) and not this canonical repository. The specs and values may need to be updated if you use this repo.\n\n## \xe2\x9c\x85 Tests\n\n### API\n\nAccent provides a default value for every required environment variable. This means that with the right PostgreSQL setup (and a few setup commands), you can just run `mix test`.\n\n```shell\n$ npm --prefix webapp run build\n$ mix run ./priv/repo/seeds.exs\n$ mix test\n```\n\nThe full check that runs in the CI environment can be executed with `./priv/scripts/ci-check.sh`.\n\n## \xf0\x9f\x9a\x80 Deploy on Heroku\n\nAn Heroku-compatible `app.json` makes it easy to deploy the application on Heroku.\n\n<a href="https://heroku.com/deploy">\n  <img src="https://www.herokucdn.com/deploy/button.svg" alt="Deploy on Heroku" />\n</a>\n\n## \xf0\x9f\x8c\x8e Contribute\n\nBefore opening a pull request, please open an issue first.\n\nOnce you\xe2\x80\x99ve made your additions and the test suite passes, go ahead and open a PR!\n\nDon\xe2\x80\x99t forget to run the `./priv/scripts/ci-check.sh` script to make sure that the CI build will pass :)\n\n## License\n\nAccent is \xc2\xa9 2015-2019 [Mirego](https://www.mirego.com) and may be freely distributed under the [New BSD license](http://opensource.org/licenses/BSD-3-Clause). See the [`LICENSE.md`](https://github.com/mirego/accent/blob/master/LICENSE.md) file.\n\n## About Mirego\n\n[Mirego](https://www.mirego.com) is a team of passionate people who believe that work is a place where you can innovate and have fun. We\xe2\x80\x99re a team of [talented people](https://life.mirego.com) who imagine and build beautiful Web and mobile applications. We come together to share ideas and [change the world](http://www.mirego.org).\n\nWe also [love open-source software](https://open.mirego.com) and we try to give back to the community as much as we can.\n'