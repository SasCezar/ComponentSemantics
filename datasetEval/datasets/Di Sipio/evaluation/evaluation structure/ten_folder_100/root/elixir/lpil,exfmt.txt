b'[![Circle CI](https://circleci.com/gh/lpil/exfmt.svg?style=shield)](https://circleci.com/gh/lpil/exfmt)\n[![Hex version](https://img.shields.io/hexpm/v/exfmt.svg "Hex version")](https://hex.pm/packages/exfmt)\n[![API Docs](https://img.shields.io/badge/api-docs-green.svg?style=flat)](https://hexdocs.pm/exfmt/)\n[![Licence](https://img.shields.io/github/license/lpil/exfmt.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n\n# exfmt \xf0\x9f\x8c\xb8\n\n## This tool has been deprecated\n\nWith the new [formatter](https://hexdocs.pm/mix/master/Mix.Tasks.Format.html)\nin Elixir v1.6 there is no need for this formatter any more. Thanks for\nchecking out exfmt, it\'s been fun. :)\n\n## Intro\n\n> `exfmt` is in alpha.  If you run into any problems, please\n> [report them][issues].\n>\n> **The format produced by exfmt will change significantly before the 1.0.0\n> release.**  If this will cause problems for you, please refrain from using\n> exfmt during the alpha- and beta-test periods.\n\n[issues]: https://github.com/lpil/exfmt/issues\n\n`exfmt` is inspired by Aaron VonderHaar\'s [elm-format][elm-format], and aims\nto format [Elixir][elixir] source code largely according to the standards\ndefined in Aleksei Magusev\'s [Elixir Style Guide][style-guide].\n\n\n```elixir\n# exfmt takes any Elixir code...\n\ndefmodule MyApp, do: (\n    use( SomeLib )\n    def run( data ), do: {\n      :ok,\n      data\n   }\n)\n\n# and rewrites it in a clean and idiomatic style:\n\ndefmodule MyApp do\n  use SomeLib\n\n  def run(data) do\n    {:ok, data}\n  end\nend\n```\n\nThe benefits of `exfmt`:\n\n - It makes code **easier to write**, because you never have to worry about\n   minor formatting concerns while powering out new code.\n - It makes code **easier to read**, because there are no longer distracting\n   minor stylistic differences between different code bases. As such, your\n   brain can map more efficiently from source to mental model.\n - It makes code **easier to maintain**, because you can no longer have diffs\n   related only to formatting; every diff necessarily involves a material\n   change.\n - It **saves your team time** debating how to format things, because there is\n   a standard tool that formats everything the same way.\n - It **saves you time** because you don\'t have to nitpick over formatting\n   details of your code.\n\n[elixir]: https://elixir-lang.org/\n[elm-format]: https://github.com/avh4/elm-format\n[style-guide]: https://github.com/lexmag/elixir-style-guide\n\n\n## Contents\n\n- [Usage](#usage)\n- [Installation](#editor-integration)\n- [Editor Integration](#editor-integration)\n  - [Atom](#atom)\n  - [Vim](#vim)\n  - [VS Code](#visual-studio-code)\n- [Development](#development)\n\n\n## Usage\n\n```sh\nmix exfmt path/to/file.ex\n```\n\n### Command line options\n\n* `--check` - Check if file is formatted, sets exit status\n  to 1 if false.\n* `--stdin` - Read from STDIN instead of a file.\n* `--unsafe` - Disable the semantics check that verifies\n  that `exmft` has not altered the semantic meaning of\n  the input file.\n\n\n## Installation\n\n`exfmt` makes use of Elixir compiler features coming in Elixir v1.6.0 and as a\nresult can only be run with Elixir v1.6-dev off the Elixir master branch,\nwhich you will need to download and compile yourself. Use with earlier\nversions may work without crashing, but the output format will be incorrect.\n\nAn easier method of installation will be available when Elixir v1.6.0 is\nreleased. Or sooner, perhaps!\n\n\n## Editor integration\n\n### Atom\n\nAtom users can install Ron Green\'s [exfmt-atom][exfmt-atom] package.\n\n[exfmt-atom]: https://atom.io/packages/exfmt-atom\n\n\n### Vim\n\nVim users can use exfmt with Steve Dignam\'s [Neoformat][neoformat].\n\n[neoformat]: https://github.com/sbdchd/neoformat\n\nOnce installed the following config will enable formatting of the current\nElixir buffer using `:Neoformat`. For further instructions, please reference\nthe Neoformat documentation.\n\n```viml\nlet g:neoformat_elixir_exfmt = {\n  \\ \'exe\': \'mix\',\n  \\ \'args\': [\'exfmt\', \'--stdin\'],\n  \\ \'stdin\': 1\n  \\ }\n\nlet g:neoformat_enabled_elixir = [\'exfmt\']\n```\n\n\n### Visual Studio Code\n\nVSCode users can use exfmt with James Hrisho\'s [vscode-exfmt][vscode-exfmt] package.\n\n[vscode-exfmt]: https://github.com/securingsincity/vscode-exfmt\n'