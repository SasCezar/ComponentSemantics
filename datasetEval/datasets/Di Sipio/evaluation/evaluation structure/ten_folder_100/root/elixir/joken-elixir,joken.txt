b'# Joken\n\n[![Documentation](https://img.shields.io/badge/docs-hexpm-blue.svg)](http://hexdocs.pm/joken/) [![Downloads](https://img.shields.io/hexpm/dt/joken.svg)](https://hex.pm/packages/joken) [![Build](https://travis-ci.org/joken-elixir/joken.svg?branch=master)](https://travis-ci.org/joken-elixir/joken)\n\n[Documentation](http://hexdocs.pm/joken/)\n\nA JSON Web Token (JWT) Library\n\nPlease, see our documentation and guides [here](http://hexdocs.pm/joken/)\n\n## Usage\n\nAdd Joken to your deps:\n\n``` elixir\ndef deps do\n  # .. other deps\n  {:joken, "~> 2.0"},\n  # Recommended JSON library\n  {:jason, "~> 1.1"}\nend\n```\n\nAll set! (don\'t forget to take a look at our guides and documentation!)\n\n## Benchmarking\n\nTo run benchmarks just:\n\n``` shell\n# mix run benchmarks/{some_benchmark_file}.exs\n\n# Example:\nmix run benchmarks/hs_benchmark.exs\n```\n\n## LICENSE\n\nSee the [LICENSE.txt](LICENSE.txt) file.\n\n## DISCLAIMER\n\nThis library would not be possible without the work of @potatosalad (Andrew Bennet). Specifically his library [erlang-jose](https://github.com/potatosalad/erlang-jose/)\n'