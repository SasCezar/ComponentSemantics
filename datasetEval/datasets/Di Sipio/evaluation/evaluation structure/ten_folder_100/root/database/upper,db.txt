b'<p align="center">\n  <img src="https://upper.io/db.v3/images/gopher.svg" width="256" />\n</p>\n\n# upper.io/db.v3 [![Build Status](https://travis-ci.org/upper/db.svg?branch=master)](https://travis-ci.org/upper/db) [![GoDoc](https://godoc.org/upper.io/db.v3?status.svg)](https://godoc.org/upper.io/db.v3)\n\nThe `upper.io/db.v3` package for [Go][2] is a productive data access layer for\nGo that provides a common interface to work with different data sources such as\n[PostgreSQL](https://upper.io/db.v3/postgresql),\n[MySQL](https://upper.io/db.v3/mysql), [SQLite](https://upper.io/db.v3/sqlite),\n[MSSQL](https://upper.io/db.v3/mssql),\n[QL](https://upper.io/db.v3/ql) and [MongoDB](https://upper.io/db.v3/mongo).\n\n```\ngo get upper.io/db.v3\n```\n\n## The tour\n\n![screen shot 2017-05-01 at 19 23 22](https://cloud.githubusercontent.com/assets/385670/25599675/b6fe9fea-2ea3-11e7-9f76-002931dfbbc1.png)\n\nTake the [tour](https://tour.upper.io) to see real live examples in your\nbrowser.\n\n## Live demos\n\nYou can run the following example on our [playground](https://demo.upper.io):\n\n```go\npackage main\n\nimport (\n\t"log"\n\n\t"upper.io/db.v3/postgresql"\n)\n\nvar settings = postgresql.ConnectionURL{\n\tHost:     "demo.upper.io",\n\tDatabase: "booktown",\n\tUser:     "demouser",\n\tPassword: "demop4ss",\n}\n\ntype Book struct {\n\tID        int    `db:"id"`\n\tTitle     string `db:"title"`\n\tAuthorID  int    `db:"author_id"`\n\tSubjectID int    `db:"subject_id"`\n}\n\nfunc main() {\n\tsess, err := postgresql.Open(settings)\n\tif err != nil {\n\t\tlog.Fatalf("db.Open(): %q\\n", err)\n\t}\n\tdefer sess.Close()\n\n\tvar books []Book\n\terr = sess.Collection("books").Find().All(&books)\n\tif err != nil {\n\t\tlog.Fatalf("Find(): %q\\n", err)\n\t}\n\n\tfor i, book := range books {\n\t\tlog.Printf("Book %d: %#v\\n", i, book)\n\t}\n}\n```\n\nOr you can also run it locally from the `_examples` directory:\n\n```\ngo run _examples/booktown-books/main.go\n2016/08/10 08:42:48 "The Shining" (ID: 7808)\n2016/08/10 08:42:48 "Dune" (ID: 4513)\n2016/08/10 08:42:48 "2001: A Space Odyssey" (ID: 4267)\n2016/08/10 08:42:48 "The Cat in the Hat" (ID: 1608)\n2016/08/10 08:42:48 "Bartholomew and the Oobleck" (ID: 1590)\n2016/08/10 08:42:48 "Franklin in the Dark" (ID: 25908)\n2016/08/10 08:42:48 "Goodnight Moon" (ID: 1501)\n2016/08/10 08:42:48 "Little Women" (ID: 190)\n2016/08/10 08:42:48 "The Velveteen Rabbit" (ID: 1234)\n2016/08/10 08:42:48 "Dynamic Anatomy" (ID: 2038)\n2016/08/10 08:42:48 "The Tell-Tale Heart" (ID: 156)\n2016/08/10 08:42:48 "Programming Python" (ID: 41473)\n2016/08/10 08:42:48 "Learning Python" (ID: 41477)\n2016/08/10 08:42:48 "Perl Cookbook" (ID: 41478)\n2016/08/10 08:42:48 "Practical PostgreSQL" (ID: 41472)\n```\n\n## Documentation for users\n\nThis is the source code repository, check out our [release\nnotes](https://github.com/upper/db/releases/tag/v3.0.0) and see examples and\ndocumentation at [upper.io/db.v3][1].\n\n\n## Changelog\n\nSee [CHANGELOG.md](https://github.com/upper/db/blob/master/CHANGELOG.md).\n\n## License\n\nThis project is licensed under the terms of the **MIT License**.\n\n> Copyright (c) 2012-present The upper.io/db authors. All rights reserved.\n>\n> Permission is hereby granted, free of charge, to any person obtaining\n> a copy of this software and associated documentation files (the\n> "Software"), to deal in the Software without restriction, including\n> without limitation the rights to use, copy, modify, merge, publish,\n> distribute, sublicense, and/or sell copies of the Software, and to\n> permit persons to whom the Software is furnished to do so, subject to\n> the following conditions:\n>\n> The above copyright notice and this permission notice shall be\n> included in all copies or substantial portions of the Software.\n>\n> THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\n> EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n> MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n> NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n> LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n> OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n> WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n## Authors and contributors\n\n* Jos\xc3\xa9 Carlos Nieto <<jose.carlos@menteslibres.net>>\n* Peter Kieltyka <<peter@pressly.com>>\n* Maciej Lisiewski <<maciej.lisiewski@gmail.com>>\n* Max Hawkins <<maxhawkins@google.com>>\n* Paul Xue <<paul.xue@pressly.com>>\n* Kevin Darlington <<kdarlington@gmail.com>>\n* Lars Buitinck <<l.buitinck@esciencecenter.nl>>\n* icattlecoder <<icattlecoder@gmail.com>>\n* Aaron <<aaron.l.france@gmail.com>>\n* Hiram J. P\xc3\xa9rez <<worg@linuxmail.org>>\n* Julien Schmidt <<github@julienschmidt.com>>\n* Max Hawkins <<maxhawkins@gmail.com>>\n* Piotr "Orange" Zduniak <<piotr@zduniak.net>>\n* achun <<achun.shx@qq.com>>\n* rjmcguire <<rjmcguire@gmail.com>>\n* wei2912 <<wei2912_support@hotmail.com>>\n\n[1]: https://upper.io/db.v3\n[2]: http://golang.org\n'