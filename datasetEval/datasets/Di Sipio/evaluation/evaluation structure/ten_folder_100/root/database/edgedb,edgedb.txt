b'<p align="center">\n  <a href="https://edgedb.com"><img width="160px" src="logo.svg"></a>\n</p>\n\n[![Build Status](https://travis-ci.com/edgedb/edgedb.svg?token=74UsunYVsEQ4qRAHz4Ny&branch=master)](https://travis-ci.com/edgedb/edgedb) [![Join the community on Spectrum](https://img.shields.io/badge/join%20the%20community-on%20spectrum-blueviolet)](https://spectrum.chat/edgedb)\n\n\nWhat is EdgeDB?\n===============\n\nEdgeDB is an **open-source** object-relational database built on top of\nPostgreSQL.  The goal of EdgeDB is to *empower* its users to build safe\nand efficient software with less effort.\n\nEdgeDB features:\n\n- strict, strongly typed schema;\n- powerful and expressive query language;\n- rich standard library;\n- built-in support for schema migrations;\n- native GraphQL support.\n\nCheck out the [blog](https://edgedb.com/blog/edgedb-a-new-beginning)\n[posts](https://edgedb.com/blog/edgedb-1-0-alpha-1) for more examples and\nthe philosophy behind EdgeDB.\n\n\nModern Type-safe Schema\n-----------------------\n\nThe data schema in EdgeDB is a clean high-level representation of a conceptual\ndata model:\n\n```\ntype User {\n    required property name -> str;\n}\n\ntype Person {\n    required property first_name -> str;\n    required property last_name -> str;\n}\n\ntype Review {\n    required property body -> str;\n    required property rating -> int64 {\n        constraint min_value(0);\n        constraint max_value(5);\n    }\n\n    required link author -> User;\n    required link movie -> Movie;\n\n    required property creation_time -> local_datetime;\n}\n\ntype Movie {\n    required property title -> str;\n    required property year -> int64;\n    required property description -> str;\n\n    multi link directors -> Person;\n    multi link cast -> Person;\n\n    property avg_rating := math::mean(.<movie[IS Review].rating);\n}\n```\n\nEdgeDB has a rich library of datatypes and functions.\n\n\nEdgeQL\n------\n\nEdgeQL is the query language of EdgeDB. It is efficient, intuitive, and easy\nto learn.\n\nEdgeQL supports fetching object hierarchies with arbitrary level of nesting,\nfiltering, sorting and aggregation:\n\n```\nSELECT User {\n    id,\n    name,\n    image,\n    latest_reviews := (\n        WITH UserReviews := User.<author\n        SELECT UserReviews {\n            id,\n            body,\n            rating,\n            movie: {\n                id,\n                title,\n                avg_rating,\n            }\n        }\n        ORDER BY .creation_time DESC\n        LIMIT 10\n    )\n}\nFILTER .id = <uuid>$id\n```\n\n\nStatus\n======\n\nEdgeDB is currently in alpha. See our\n[Issues](https://github.com/edgedb/edgedb/issues) for a list of features\nplanned or in development.\n\n\nGetting Started\n===============\n\nPlease refer to the [Tutorial](https://edgedb.com/docs/tutorial/index) section\nof the documentation on how to install and run EdgeDB.\n\n\nDocumentation\n=============\n\nThe EdgeDB documentation can be found at\n[edgedb.com/docs](https://edgedb.com/docs).\n\n\nBuilding From Source\n====================\n\nPlease follow the instructions outlined\n[in the documentation](https://edgedb.com/docs/internals/dev).\n\n\nLicense\n=======\n\nThe code in this repository is developed and distributed under the\nApache 2.0 license.  See [LICENSE](LICENSE) for details.\n'