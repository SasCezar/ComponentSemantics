b'[![Build Status][ci-img]][ci] [![Coverage Status][cov-img]][cov] [![license](https://img.shields.io/github/license/uber/aresdb.svg)](LICENSE) [![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fuber%2Faresdb.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fuber%2Faresdb?ref=badge_shield)\n\n<br>\n<p align="center"><img src="docs/logo.png" alt="AresDB Logo" width="220" height="209"></p>\n\nAresDB\n==============\nAresDB is a GPU-powered real-time analytics storage and query engine. It features low query latency, high data freshness and highly efficient in-memory and on disk storage management. Please see AresDB\'s features, architecture design described in the [Uber Engineering Blog](https://eng.uber.com/aresdb/).\n\nThis repo contains the source code of AresDB and debug UI.\n\nLegal Note\n----------\nAresDB requires the CUDA Toolkit. Please ensure you read, acknowledge, and accept the [CUDA End User License Agreement](https://docs.nvidia.com/cuda/eula/index.html).\n\nGetting started\n---------------\nTo get AresDB:\n\n```\ngit clone --recursive https://github.com/uber/aresdb.git $GOPATH/src/github.com/uber/aresdb\n```\n\nNVIDIA Driver and CUDA Setup\n----------------------------\nAresDB needs [NVIDIA driver](https://www.nvidia.com/Download/index.aspx) version >= 390.48 and [CUDA](https://developer.nvidia.com/cuda-91-download-archive) version 9.1.\n\nEnvironment Variables\n---------------------\nRun the following to make sure the following environment variables are correctly set:\n```\nexport PATH=/path/to/cuda/bin:${PATH}\nexport LD_LIBRARY_PATH=/path/to/cuda/lib64:/path/to/aresdb/lib:${LD_LIBRARY_PATH}\nexport PKG_CONFIG_PATH=${LD_LIBRARY_PATH}/pkgconfig:${PKG_CONFIG_PATH}\n```\n\n\nLanguage Requirements\n---------------------\nBuilding and running AresDB requires:\n* [golang](https://golang.org/) 1.11+\n* C++ compiler that support c++14\n* [cmake](https://cmake.org/download/) 3.12+\n* [nvcc](https://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html) version 9.1\n\nConfigure\n---------\nRun following commands to generate makefile:\n```\ncmake -DQUERY_MODE=DEVICE .\n```\n\nAlternatively, if you want to run the query in CPU mode, run following commands:\n```\ncmake -DQUERY_MODE=HOST .\n```\n\nLocal Test\n----------\nAresDB is written in C++ (query engine) and Golang (mem store, disk store and other query components). Because of this, we break testing into two parts:\n### Test Golang Code\n#### Ginkgo\nWe use [Ginkgo](https://github.com/onsi/ginkgo) as the test framework for running the Golang unit test and coverage. Install Ginkgo first and run\n```\nmake test-golang\n```\n\n### Test C++ Code\n#### google-test\nWe use [google-test](https://github.com/google/googletest) as the test framework to test C++ code. Install google-test and set the environment variable, GTEST_ROOT, to the installed location.\n\nAfter you have installed properly, run\n```\nmake test-cuda\n```\n\nRun AresDB Server\n-----------------\nThe following command will start an AresDB server locally. You can start to query the server using a curl command or [swagger](https://github.com/uber/aresdb/wiki/Swagger) page.\n```\nmake run_server\n```\n\nRun AresDB Docker\n-----------------\nPlease read the [Docker](docker/README.md) page.\n\nDocumentation\n--------------\n\nInterested in learning more about AresDB? Read the [blog post](https://eng.uber.com/aresdb/)\n\nLicense\n-------\nApache 2.0 License, please see [LICENSE](LICENSE) for details.\n\n[ci-img]: https://travis-ci.com/uber/aresdb.svg?branch=master\n[ci]: https://travis-ci.com/uber/aresdb\n[cov-img]: https://codecov.io/gh/uber/aresdb/branch/master/graph/badge.svg\n[cov]: https://codecov.io/gh/uber/aresdb\n\n'