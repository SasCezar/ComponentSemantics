b"[![GraphQLEditor Editor](assets/logo.gif)](https://graphqleditor.com)\n\n[![npm](https://img.shields.io/npm/v/graphql-editor.svg?style=flat-square)](https://www.npmjs.com/package/graphql-editor) [![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg?style=flat-square)](http://commitizen.github.io/cz-cli/) [![npm downloads](https://img.shields.io/npm/dt/graphql-editor.svg?style=flat-square)](https://www.npmjs.com/package/graphql-editor)\n\nGraphQLEditor makes it easier to understand GrapHQL schemas. Create a schema by joining visual blocks. GraphQLEditor will transform them into code. With GraphQLEditor you can create visual diagrams without writing any code or present your schema in a nice way!\n\n## How it works\n\n### Create GraphQL Schemas\n\n[![GraphQLEditor Editor](assets/create.gif)](https://app.graphqleditor.com/?visibleMenu=code)\n\n### Explore Large GraphQL Schemas\n\n[![GraphQLEditor Editor](assets/explore.gif)](https://app.graphqleditor.com/explore/github-schema-visualised?visibleMenu=code)\n\n### Live demo\n\nHere is a [live demo](https://graphqleditor.com) example of GraphQLEditor.\n\n## Table of contents\n- [How it works](#how-it-works)\n  - [Create GraphQL Schemas](#create-graphql-schemas)\n  - [Explore Large GraphQL Schemas](#explore-large-graphql-schemas)\n  - [Live demo](#live-demo)\n- [Table of contents](#table-of-contents)\n- [Developer Docs](#developer-docs)\n- [License](#license)\n- [How It Works](#how-it-works)\n- [Develop or use standalone](#develop-or-use-standalone)\n  - [Use with schema and make readonly display of graph](#use-with-schema-and-make-readonly-display-of-graph)\n  - [Use with schema and make readonly display of graph with code](#use-with-schema-and-make-readonly-display-of-graph-with-code)\n- [Support](#support)\n- [Contribute](#contribute)\n- [Team](#team)\n- [Underlying Diagram technology](#underlying-diagram-technology)\n- [Underlying Parsing technology](#underlying-parsing-technology)\n- [GraphQL Tutorials](#graphql-tutorials)\n\n## Developer Docs\n\nIf you wish to contribute docs from `typedoc` are availble on [https://graphql-editor.github.io/graphql-editor/](https://graphql-editor.github.io/graphql-editor/)\n\n## License\n\nMIT\n\n## How It Works\n\nCreate GraphQL nodes and connect them to generate a database schema. You can also use builtin text IDE with GraphQL syntax validation\n\n## Develop or use standalone\n\nInstall dependencies\n\n```\nnpm i react react-dom\n```\n\n```\nnpm i graphql-editor\n```\n\n```tsx\nimport * as React from 'react';\nimport { render } from 'react-dom';\nimport { Editor } from '../src/index';\n\nclass App extends React.Component<\n  {},\n  {\n    editorVisible: boolean;\n  }\n> {\n  state = {\n    editorVisible: true\n  };\n  render() {\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'grid',\n          gridTemplateColumns: this.state.editorVisible ? `auto 1fr` : '1fr',\n          gridTemplateRows: '1fr'\n        }}\n      >\n        <Editor editorVisible={this.state.editorVisible} />\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n```\n\n### Use with schema and make readonly display of graph\n```tsx\nimport * as React from 'react';\nimport { render } from 'react-dom';\nimport { Editor } from '../src/index';\n\nconst schema = `\ntype Query{\n  hello: String!\n}\nschema{\n  query: Query\n}\n`\n\nclass App extends React.Component<\n  {},\n  {\n    editorVisible: boolean;\n  }\n> {\n  state = {\n    editorVisible: true\n  };\n  render() {\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'grid',\n          gridTemplateColumns: this.state.editorVisible ? `auto 1fr` : '1fr',\n          gridTemplateRows: '1fr'\n        }}\n      >\n      <Editor editorVisible={false} readonly={true} schema={schema} />\n      </div>\n    );\n  }\n}\n```\n### Use with schema and make readonly display of graph with code\n\nSame as in preceeding example but `editorVisible` is true\n\n```tsx\n<Editor editorVisible={true} readonly={true} schema={schema} />\n```\n## Support \n\n[Join our Slack Channel](https://join.slack.com/t/graphqleditor/shared_invite/enQtNDkwOTgyOTM5OTc1LWI4YjU3N2U5NGVkNzQ2NzY5MGUxMTJiNjFlZDM1Zjc2OWRmNTI0NDM3OWUxYTk4Yjk3MzZlY2QwOWUzZmM2NDI)\n\n## Contribute\n\nFor a complete guide to contributing to GraphQL Editor, see the [Contribution Guide](CONTRIBUTING.md).\n\n1.  Fork this repo\n2.  Create your feature branch: git checkout -b feature-name\n3.  Commit your changes: git commit -am 'Add some feature'\n4.  Push to the branch: git push origin my-new-feature\n5.  Submit a pull request\n\n## Team \n\n[GraphQL Editor Website](https://graphqleditor.com)\n\n## Underlying Diagram technology\n\nWhole graphql-editor is based on underlying [diagram](https://github.com/graphql-editor/diagram) technology. We need much more help there feel free to contribute!\n\n## Underlying Parsing technology\n\nWhole graphql-editor parsing stuff is based on underlying [zeus](https://github.com/graphql-editor/graphql-zeus) technology. We need much more help there feel free to contribute!\n\n## GraphQL Tutorials\n\nBest GraphQL tutorials [here](https://blog.graphqleditor.com/top-graphql-tutorials-reviewed-2019)\n"