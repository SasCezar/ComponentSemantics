b'\n# tweetbotornot <img width="160px" src="man/figures/logo.png" align="right" />\n\n[![lifecycle](https://img.shields.io/badge/lifecycle-experimental-orange.svg)](https://www.tidyverse.org/lifecycle/#experimental)\n[![Travis build\nstatus](https://travis-ci.org/mkearney/tweetbotornot.svg?branch=master)](https://travis-ci.org/mkearney/tweetbotornot)\n[![Coverage\nstatus](https://codecov.io/gh/mkearney/tweetbotornot/branch/master/graph/badge.svg)](https://codecov.io/github/mkearney/tweetbotornot?branch=master)\n\nAn R package for classifying Twitter accounts as `bot or not`.\n\n## Features\n\nUses machine learning to classify Twitter accounts as bots or not bots.\nThe **default model** is 93.53% accurate when classifying bots and\n95.32% accurate when classifying non-bots. The **fast model** is 91.78%\naccurate when classifying bots and 92.61% accurate when classifying\nnon-bots.\n\nOverall, the **default model** is correct 93.8% of the time.\n\nOverall, the **fast model** is correct 91.9% of the time.\n\n## Install\n\nInstall from CRAN:\n\n``` r\n## install from CRAN\ninstall.packages("tweetbotornot")\n```\n\nInstall the development version from Github:\n\n``` r\n## install remotes if not already\nif (!requireNamespace("remotes", quietly = TRUE)) {\n  install.packages("remotes")\n}\n\n## install tweetbotornot from github\ndevtools::install_github("mkearney/tweetbotornot")\n```\n\n## API authorization\n\nUsers must be authorized in order to interact with Twitter\xe2\x80\x99s API. To\nsetup your machine to make authorized requests, you\xe2\x80\x99ll either need to be\nsigned into Twitter and working in an interactive session of R\xe2\x80\x93the\nbrowser will open asking you to authorize the rtweet client\n(rstats2twitter)\xe2\x80\x93or you\xe2\x80\x99ll need to create an app (and have a developer\naccount) and your own API token. The latter has the benefit of (a)\nhaving sufficient permissions for write-acess and DM (direct messages)\nread-access levels and (b) more stability if Twitter decides to shut\ndown \\[@kearneymw\\](<https://twitter.com/kearneymw>)\xe2\x80\x99s access to Twitter\n(I try to be very responsible these days, but Twitter isn\xe2\x80\x99t always\nfriendly to academic use cases). To create an app and your own Twitter\ntoken, [see these instructions provided in the rtweet\npackage](http://rtweet.info/articles/auth.html).\n\n## Usage\n\nThere\xe2\x80\x99s one function `tweetbotornot()` (technically there\xe2\x80\x99s also\n`botornot()`, but it does the same exact thing). Give it a vector of\nscreen names or user IDs and let it go to work.\n\n``` r\n## load package\nlibrary(tweetbotornot)\n\n## select users\nusers <- c("realdonaldtrump", "netflix_bot",\n  "kearneymw", "dataandme", "hadleywickham",\n  "ma_salmon", "juliasilge", "tidyversetweets", \n  "American__Voter", "mothgenerator", "hrbrmstr")\n\n## get botornot estimates\ndata <- tweetbotornot(users)\n\n## arrange by prob ests\ndata[order(data$prob_bot), ]\n#> # A tibble: 11 x 3\n#>    screen_name     user_id            prob_bot\n#>    <chr>           <chr>                 <dbl>\n#>  1 hadleywickham   69133574            0.00754\n#>  2 realDonaldTrump 25073877            0.00995\n#>  3 kearneymw       2973406683          0.0607 \n#>  4 ma_salmon       2865404679          0.150  \n#>  5 juliasilge      13074042            0.162  \n#>  6 dataandme       3230388598          0.227  \n#>  7 hrbrmstr        5685812             0.320  \n#>  8 netflix_bot     1203840834          0.978  \n#>  9 tidyversetweets 935569091678691328  0.997  \n#> 10 mothgenerator   3277928935          0.998  \n#> 11 American__Voter 829792389925597184  1.000  \n```\n\n### Integration with rtweet\n\nThe `botornot()` function also accepts data returned by\n[rtweet](http://rtweet.info) functions.\n\n``` r\n## get most recent 100 tweets from each user\ntmls <- get_timelines(users, n = 100)\n\n## pass the returned data to botornot()\ndata <- botornot(tmls)\n\n## arrange by prob ests\ndata[order(data$prob_bot), ]\n#> # A tibble: 11 x 3\n#>    screen_name     user_id            prob_bot\n#>    <chr>           <chr>                 <dbl>\n#>  1 hadleywickham   69133574            0.00754\n#>  2 realDonaldTrump 25073877            0.00995\n#>  3 kearneymw       2973406683          0.0607 \n#>  4 ma_salmon       2865404679          0.150  \n#>  5 juliasilge      13074042            0.162  \n#>  6 dataandme       3230388598          0.227  \n#>  7 hrbrmstr        5685812             0.320  \n#>  8 netflix_bot     1203840834          0.978  \n#>  9 tidyversetweets 935569091678691328  0.997  \n#> 10 mothgenerator   3277928935          0.998  \n#> 11 American__Voter 829792389925597184  1.000  \n```\n\n### `fast = TRUE`\n\nThe default \\[gradient boosted\\] model uses both users-level (bio,\nlocation, number of followers and friends, etc.) **and** tweets-level\n(number of hashtags, mentions, capital letters, etc. in a user\xe2\x80\x99s most\nrecent 100 tweets) data to estimate the probability that users are bots.\nFor larger data sets, this method can be quite slow. Due to Twitter\xe2\x80\x99s\nREST API rate limits, users are limited to only 180 estimates per every\n15 minutes.\n\nTo maximize the number of estimates per 15 minutes (at the cost of being\nless accurate), use the `fast = TRUE` argument. This method uses\n**only** users-level data, which increases the maximum number of\nestimates per 15 minutes to *90,000*\\! Due to losses in accuracy, this\nmethod should be used with caution\\!\n\n``` r\n## get botornot estimates\ndata <- botornot(users, fast = TRUE)\n\n## arrange by prob ests\ndata[order(data$prob_bot), ]\n#> # A tibble: 11 x 3\n#>    screen_name     user_id            prob_bot\n#>    <chr>           <chr>                 <dbl>\n#>  1 hadleywickham   69133574            0.00185\n#>  2 kearneymw       2973406683          0.0415 \n#>  3 ma_salmon       2865404679          0.0661 \n#>  4 dataandme       3230388598          0.0965 \n#>  5 juliasilge      13074042            0.112  \n#>  6 hrbrmstr        5685812             0.121  \n#>  7 realDonaldTrump 25073877            0.368  \n#>  8 netflix_bot     1203840834          0.978  \n#>  9 tidyversetweets 935569091678691328  0.998  \n#> 10 mothgenerator   3277928935          0.999  \n#> 11 American__Voter 829792389925597184  0.999  \n```\n\n## NOTE\n\nIn order to avoid confusion, the package was renamed from \xe2\x80\x9cbotrnot\xe2\x80\x9d to\n\xe2\x80\x9ctweetbotornot\xe2\x80\x9d in June 2018. This package should not be confused with\nthe [botornot application](http://botornot.co/).\n'