b'<img src="/docs/stocksight.png?raw=true" alt="stocksight" />\n\n# stocksight\nCrowd-sourced stock analyzer and stock predictor using Elasticsearch, Twitter, News headlines and Python natural language processing and sentiment analysis. How much do emotions on Twitter and news headlines affect a stock\'s price? Let\'s find out ...\n\n[![License](https://img.shields.io/github/license/shirosaidev/stocksight.svg?label=License&maxAge=86400)](./LICENSE)\n[![Release](https://img.shields.io/github/release/shirosaidev/stocksight.svg?label=Release&maxAge=60)](https://github.com/shirosaidev/stocksight/releases/latest)\n[![Sponsor Patreon](https://img.shields.io/badge/Sponsor%20%24-Patreon-brightgreen.svg)](https://www.patreon.com/shirosaidev)\n[![Donate PayPal](https://img.shields.io/badge/Donate%20%24-PayPal-brightgreen.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=CLF223XAS4W72)\n\n## About\nstocksight is a crowd-sourced stock analysis open source software that uses Elasticsearch to store Twitter and news headlines data for stocks. stocksight analyzes the emotions of what the author writes and does sentiment analysis on the text to determine how the author "feels" about a stock. stocksight makes an aggregated analysis of all collected data from all sources.\n\nEach user running stocksight has a unique fingerprint: specific stocks they are following, news sites and twitter users they follow to find information for those stocks. This creates a unique sentiment analysis for each user, based on what data sources they are getting stocksight to search. Users can have the same stocks, but their data sources could vary significantly creating different sentiment analysis for the same stock. stocksight website will allow each user to see other sentiment analysis results from other stocksight user app results and a combined aggregated view of all.\n\n## Stocksight website\nhttps://stocksight.diskoverspace.com\nCurrently in BETA. Free signup. Once you are registered and login, you will be given a token which you need to add to your stocksight config file to upload your stocksight results to the website. Edit config.py and add the line\n\n`stocksight_token = "<your auth token>"`\n\n## Slack workspace\nJoin the conversation, get support, etc on [stocksight Slack](https://join.slack.com/t/stocksightworkspace/shared_invite/enQtNzk1ODI0NjA3MTM4LTA3ZDA0YzllOGNiM2I5ZjAzYWM2MjNmMjI0OTRlY2ZjYTk1NmM5YmEwMmMwOTE2OTNiMGZlNzdjZmZkM2RjM2U).\n\n\n## Requirements\n- Python 3. (tested with Python 3.6.5)\n- elasticsearch python module\n- nltk python module\n- requests python module\n- tweepy python module\n- beautifulsoup4 python module\n- textblob python module\n- vaderSentiment python module\n- newspaper3k python module\n\n## Optional installs\n- Elasticsearch 5.  (Elasticsearch is recommended but can be not used with --noelasticsearch)\n- Kibana 5.  (Kibana is recommended for searching/visualizing the Elasticsearch indices)\n\n### Download\n\n```shell\n$ git clone https://github.com/shirosaidev/stocksight.git\n$ cd stocksight\n```\n[Download latest version](https://github.com/shirosaidev/stocksight/releases/latest)\n\n## Screenshot\nStocksight Kibana dashboard\n<img src="https://github.com/shirosaidev/stocksight/blob/master/docs/stocksight-dashboard-kibana.png?raw=true" alt="stocksight kibana dashboard" />\n\nStocksight website\n<img src="https://github.com/shirosaidev/stocksight/blob/master/docs/stocksight_website_screenshot.png?raw=true" alt="stocksight website dashboard" />\n\n## How to use\n\nInstall python requirements using pip\n\n`pip install -r requirements.txt`\n\nInstall python nltk data\n\n`python -c "import nltk; nltk.download(\'punkt\'); nltk.download(\'stopwords\')"`\n\nCreate a new twitter application and generate your consumer key and access token. https://developer.twitter.com/en/docs/basics/developer-portal/guides/apps.html\nhttps://developer.twitter.com/en/docs/basics/authentication/guides/access-tokens.html\n\nCopy config.py.sample to config.py\n\nSet elasticsearch settings in config.py for your env\n\nAdd twitter consumer key/access token and secrets to config.py\n\nEdit config.py and modify NLTK tokens required/ignored and twitter feeds you want to mine. NLTK tokens required are keywords which must be in tweet before adding it to Elasticsearch and uploaded to StockSight website (whitelist). NLTK tokens ignored are keywords which if are found in tweet, it will not be added to Elasticsearch and uploaded to StockSight website (blacklist).\n\nThese settings (tokens, feeds) and optional keywords for tweets, are what creates your unique fingerprint and helps with the crowd-sourcing of the stock symbol data mining and sentiment accuracy on StockSight website. The higher number of unique and valid data sources, the more accurate the sentiment analysis average should be.\n\n### Examples\n\nRun sentiment.py to create \'stocksight\' index in Elasticsearch and start mining and analyzing Tweets using keywords and the stock symbol TSLA\n\n```sh\n$ python sentiment.py -s TSLA -k \'Elon Musk\',Musk,Tesla,SpaceX --debug\n```\n\nStart mining and analyzing Tweets using keywords and upload sentiment results to stocksight website (requires website auth token) using the stock symbol and stocksight website symbol TSLA. The website symbol is the "tag name" for the sentiment data being uploaded\n\n```sh\n$ python sentiment.py -s TSLA -k \'Elon Musk\',Musk,Tesla,SpaceX -U --debug\n```\n\nStart mining and analyzing Tweets using keywords and the stock symbol TSLA and follow any url links in tweets and performing sentiment analysis on the link web page as well as the tweet\n\n```sh\n$ python sentiment.py -s TSLA -k \'Elon Musk\',Musk,Tesla,SpaceX -l -U --debug\n```\n\nStart mining and analyzing Tweets from feeds in config using cached user ids from file (if you change any of the twitter  feeds in the config file, you need to delete this file and recreate it without -f)\n\n```sh\n$ python sentiment.py -s TSLA -f twitteruserids.txt --debug\n```\n\nStart mining and analyzing News headlines and following headline links and scraping relevant text on landing page\n\n```sh\n$ python sentiment.py -s TSLA --followlinks --debug\n```\n\nRun stockprice.py to add stock prices to \'stocksight\' index in Elasticsearch\n\n```sh\n$ python stockprice.py -s TSLA --debug\n```\n\nLoad \'stocksight\' index in Kibana and import export.json file for visuals/dashboard.\n\n### CLI options\n\n```\nusage: sentiment.py [-h] [-i INDEX] [-d] -s SYMBOL [-k KEYWORDS] [-a] [-u URL]\n                    [-f FILE] [-l] [-n] [--frequency FREQUENCY]\n                    [--followlinks] [-U] [-w] [--noelasticsearch]\n                    [--overridetokensreq TOKEN [TOKEN ...]]\n                    [--overridetokensignore TOKEN [TOKEN ...]] [-v] [--debug]\n                    [-q] [-V]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INDEX, --index INDEX\n                        Index name for Elasticsearch (default: stocksight)\n  -d, --delindex        Delete existing Elasticsearch index first\n  -s SYMBOL, --symbol SYMBOL\n                        Stock symbol you are interesed in searching for,\n                        example: TSLA This is used as the symbol tag on\n                        stocksight website. Could also be set to a tag name\n                        like \'elonmusk\' or \'elon\' etc. Cannot contain spaces\n                        and more than 25 characters.\n  -k KEYWORDS, --keywords KEYWORDS\n                        Use keywords to search for in Tweets instead of feeds.\n                        Separated by comma, case insensitive, spaces are ANDs\n                        commas are ORs. Example: TSLA,\'Elon\n                        Musk\',Musk,Tesla,SpaceX\n  -a, --addtokens       Add nltk tokens required from config to keywords\n  -u URL, --url URL     Use twitter users from any links in web page at url\n  -f FILE, --file FILE  Use twitter user ids from file\n  -l, --linksentiment   Follow any link url in tweets and analyze sentiment on\n                        web page\n  -n, --newsheadlines   Get news headlines instead of Twitter using stock\n                        symbol from -s\n  --frequency FREQUENCY\n                        How often in seconds to retrieve news headlines\n                        (default: 120 sec)\n  --followlinks         Follow links on news headlines and scrape relevant\n                        text from landing page\n  -U, --upload          Upload sentiment to stocksight website (BETA)\n  -w, --websentiment    Get sentiment results from text processing website\n  --noelasticsearch     Don\'t connect or add new docs to Elasticsearch\n  --overridetokensreq TOKEN [TOKEN ...]\n                        Override nltk required tokens from config, separate\n                        with space\n  --overridetokensignore TOKEN [TOKEN ...]\n                        Override nltk ignore tokens from config, separate with\n                        space\n  -v, --verbose         Increase output verbosity\n  --debug               Debug message output\n  -q, --quiet           Run quiet with no message output\n  -V, --version         Prints version and exits\n  ```\n  \n  ```\nusage: stockprice.py [-h] [-i INDEX] [-d] [-s SYMBOL] [-f FREQUENCY] [-v]\n                     [--debug] [-q] [-V]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INDEX, --index INDEX\n                        Index name for Elasticsearch (default: stocksight)\n  -d, --delindex        Delete existing Elasticsearch index first\n  -s SYMBOL, --symbol SYMBOL\n                        Stock symbol to use, example: TSLA\n  -f FREQUENCY, --frequency FREQUENCY\n                        How often in seconds to retrieve stock data (default:\n                        120 sec)\n  -v, --verbose         Increase output verbosity\n  --debug               Debug message output\n  -q, --quiet           Run quiet with no message output\n  -V, --version         Prints version and exits\n  ```\n'