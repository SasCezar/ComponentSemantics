b'# kafka-connect-ui\n\n[![release](http://github-release-version.herokuapp.com/github/landoop/kafka-connect-ui/release.svg?style=flat)](https://github.com/landoop/kafka-connect-ui/releases/latest)\n[![docker](https://img.shields.io/docker/pulls/landoop/kafka-connect-ui.svg?style=flat)](https://hub.docker.com/r/landoop/kafka-connect-ui/)\n[![Join the chat at https://gitter.im/Landoop/support](https://img.shields.io/gitter/room/nwjs/nw.js.svg?maxAge=2592000)](https://gitter.im/Landoop/support?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThis is a web tool for Kafka Connect for setting up and managing connectors for multiple connect clusters.\n\n## Live Demo\n[kafka-connect-ui.demo.lenses.io](http://kafka-connect-ui.demo.lenses.io)\n\n## Run standalone with docker\n\n```\ndocker run --rm -it -p 8000:8000 \\\n           -e "CONNECT_URL=http://connect.distributed.url" \\\n           landoop/kafka-connect-ui\n```\n\nThe CONNECT_URL can be a comma separated array of Connect worker endpoints. E.g: CONNECT_URL=http://connect.1.url,http://connect.2.url"\n\nAdditionally you can assign custom names to your Connect clusters by appending a semicolon and the cluster name after the endpoint URL. E.g:\n\n```"CONNECT_URL=http://connect.1.url;dev cluster,http://connect.2.url;production cluster"```\n \nWeb UI will be available at [localhost:8000](http://localhost:8000/)\n\n\n## Build from source\n\n```\ngit clone https://github.com/Landoop/kafka-connect-ui.git\ncd kafka-connect-ui\nnpm install -g bower http-server\nnpm install\nhttp-server -p 8080 .\n```\n\nWeb UI will be available at [localhost:8080](http://localhost:8080/)\n\n### Nginx config\n\nIf you use `nginx` to serve this ui, let angular manage routing with\n```\n    location / {\n        try_files $uri $uri/ /index.html =404;\n        root /folder-with-kafka-connect-ui/;\n    }\n```\n\n### Setup connect clusters\n\nUse multiple Kafka Connect clusters in `env.js` :\n```\nvar clusters = [\n   {\n     NAME:"prod", //unique name is required\n     KAFKA_CONNECT: "http://kafka-connect.prod.url", //required\n     KAFKA_TOPICS_UI: "http://kafka-topics-ui.url", //optional\n     KAFKA_TOPICS_UI_ENABLED: true //optional\n     COLOR: "#141414" //optional\n   },\n   {\n     NAME:"dev",\n     KAFKA_CONNECT: "http://kafka-connect.dev.url",\n     KAFKA_TOPICS_UI_ENABLED: false\n   },\n   {\n     NAME:"local",\n     KAFKA_CONNECT: "http://kafka-connect.local.url",\n   }\n]\n\n```\n* Use `KAFKA_TOPICS_UI` and `KAFKA_TOPICS_UI_ENABLED` to navigate to the relevant topic when you have [kafka-topics-ui](https://github.com/Landoop/kafka-topics-ui) installed.\n* Use `COLOR` to set different header colors for each set up cluster.\n\n### Supported Connectors\nFor our [25+ stream-reactor Kafka Connectors](http://www.landoop.com/kafka/connectors/) we have a template of metadata within the `supported-connectors.js`. In any case you will be shown all the existing connectors in your classpath with all the required fields to set them up.\n\n## Changelog\n[Here](https://github.com/Landoop/kafka-connect-ui/releases)\n\n## License\n\nThe project is licensed under the [BSL](http://www.landoop.com/bsl) license.\n\n## Relevant Projects\n\n* [schema-registry-ui](https://github.com/Landoop/schema-registry-ui), View, create, evolve and manage your Avro Schemas on your Kafka cluster\n* [kafka-topics-ui](https://github.com/Landoop/kafka-topics-ui), UI to browse Kafka data and work with Kafka Topics                   \n* [fast-data-dev](https://github.com/Landoop/fast-data-dev), Docker for Kafka developers (schema-registry,kafka-rest,zoo,brokers,landoop) \n* [Landoop-On-Cloudera](https://github.com/Landoop/Landoop-On-Cloudera), Install and manage your kafka streaming-platform on you Cloudera CDH cluster\n\n\n\n<img src="http://www.landoop.com/images/landoop-dark.svg" width="13"> www.landoop.com\n'