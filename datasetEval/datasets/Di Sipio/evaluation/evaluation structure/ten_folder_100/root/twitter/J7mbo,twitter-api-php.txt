b'twitter-api-php\n===============\n\nSimple PHP Wrapper for Twitter API v1.1 calls\n\n[![Total Downloads](https://img.shields.io/packagist/dt/j7mbo/twitter-api-php.svg)](https://packagist.org/packages/j7mbo/twitter-api-php)\n[![Build Status](https://travis-ci.org/J7mbo/twitter-api-php.svg?branch=master)](https://travis-ci.org/J7mbo/twitter-api-php)\n[![Version](https://badge.fury.io/gh/j7mbo%2Ftwitter-api-php.svg)](https://packagist.org/packages/j7mbo/twitter-api-php)\n\n**[Changelog](https://github.com/J7mbo/twitter-api-php/wiki/Changelog)** ||\n**[Examples](https://github.com/J7mbo/twitter-api-php/wiki/Twitter-API-PHP-Wiki)** ||\n**[Wiki](https://github.com/J7mbo/twitter-api-php/wiki)**\n\n[Instructions in StackOverflow post here](http://stackoverflow.com/questions/12916539/simplest-php-example-retrieving-user-timeline-with-twitter-api-version-1-1/15314662#15314662) with examples. This post shows you how to get your tokens and more. \nIf you found it useful, please upvote / leave a comment! :)\n\nThe aim of this class is simple. You need to:\n\n- Include the class in your PHP code\n- [Create a twitter app on the twitter developer site](https://dev.twitter.com/apps/)\n- Enable read/write access for your twitter app\n- Grab your access tokens from the twitter developer site\n- [Choose a twitter API URL to make the request to](https://dev.twitter.com/docs/api/1.1/)\n- Choose either GET / POST (depending on the request) \n- Choose the fields you want to send with the request (example: `array(\'screen_name\' => \'usernameToBlock\')`)\n\nYou really can\'t get much simpler than that. The above bullet points are an example of how to use the class for a POST request to block a user, and at the bottom is an example of a GET request.\n\nInstallation\n------------\n\n**Normally:** If you *don\'t* use composer, don\'t worry - just include TwitterAPIExchange.php in your application.\n\n```php\nrequire_once(\'TwitterAPIExchange.php\');\n```\n\n**Via Composer:**\n\n```bash\ncomposer require j7mbo/twitter-api-php\n```\n\nHow To Use\n----------\n\n#### Set access tokens ####\n\n```php\n$settings = array(\n    \'oauth_access_token\' => "YOUR_OAUTH_ACCESS_TOKEN",\n    \'oauth_access_token_secret\' => "YOUR_OAUTH_ACCESS_TOKEN_SECRET",\n    \'consumer_key\' => "YOUR_CONSUMER_KEY",\n    \'consumer_secret\' => "YOUR_CONSUMER_SECRET"\n);\n```\n\n#### Choose URL and Request Method ####\n\n```php\n$url = \'https://api.twitter.com/1.1/blocks/create.json\';\n$requestMethod = \'POST\';\n```\n\n#### Choose POST fields (or PUT fields if you\'re using PUT) ####\n\n```php\n$postfields = array(\n    \'screen_name\' => \'usernameToBlock\', \n    \'skip_status\' => \'1\'\n);\n```\n\n#### Perform the request! ####\n\n```php\n$twitter = new TwitterAPIExchange($settings);\necho $twitter->buildOauth($url, $requestMethod)\n    ->setPostfields($postfields)\n    ->performRequest();\n```\n\nGET Request Example\n-------------------\n\nSet the GET field BEFORE calling buildOauth(); and everything else is the same:\n\n```php\n$url = \'https://api.twitter.com/1.1/followers/ids.json\';\n$getfield = \'?screen_name=J7mbo\';\n$requestMethod = \'GET\';\n\n$twitter = new TwitterAPIExchange($settings);\necho $twitter->setGetfield($getfield)\n    ->buildOauth($url, $requestMethod)\n    ->performRequest();\n```\n\nThat is it! Really simple, works great with the 1.1 API. Thanks to @lackovic10 and @rivers on SO!\n'