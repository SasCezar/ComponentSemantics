b'# wagtailenforcer [![PyPI](https://img.shields.io/pypi/v/wagtailenforcer.svg)](https://pypi.python.org/pypi/wagtailenforcer)\n\n> WagtailEnforcer, the strong arm of the law.\n\nIf you need to enforce security protocols on your Wagtail site you\'ve come to the right place.\n\nWagtailenforcer makes use of the following packages to ensure strict password policies and other security protocols are implemented.\n\n* [Password policies](https://github.com/iplweb/django-password-policies-iplweb)\n* [Axes](https://github.com/springload/django-axes)\n\n<img src="./cobra.jpg" width="200">\n\n> -  Lt. Marion "Cobra" Cobretti\n\n*Check out [Awesome Wagtail](https://github.com/springload/awesome-wagtail) for more awesome packages and resources from the Wagtail community.*\n\n## Quickstart\n\n```sh\npip install wagtailenforcer\n```\n\nTime to edit the **settings.py** file. ```INSTALLED_APPS``` should have:\n\n```python\n...\n    \'axes\',\n    \'password_policies\',\n    \'wagtailenforcer\',\n...\n```\n\n.. and ```MIDDLEWARE_CLASSES```:\n\n```python\n    \'wagtailenforcer.middleware.WagtailenforcerMiddleware\'\n```\n\nSome extra settings:\n\n```python\n# Password policy settings\nSESSION_SERIALIZER = \'django.contrib.sessions.serializers.PickleSerializer\'\nPASSWORD_CHECK_ONLY_AT_LOGIN = True\nPASSWORD_MIN_LENGTH = 7\nPASSWORD_MAX_LENGTH = 25\nPASSWORD_HISTORY_COUNT = 6\nPASSWORD_MIN_LETTERS = 1\nPASSWORD_MIN_NUMBERS = 1\nPASSWORD_MIN_SYMBOLS = 1\nPASSWORD_DIFFERENCE_DISTANCE = 3\n\n# Django Axes settings\nAXES_LOGIN_FAILURE_LIMIT = 5\nAXES_LOCK_OUT_AT_FAILURE = True\nAXES_ONLY_USER_FAILURES = True  # Lock out based on username and not IP or UserAgent\nAXES_LOCKOUT_TEMPLATE = \'wagtailenforcer/lockout.html\'\n\n# Antivirus\nCLAMAV_ACTIVE = True\n\n# Allowed document uploads extensions\nALLOWED_DOCUMENT_EXTENSIONS = [\'pdf\']\n```\n\nIn **urls.py**:\n\n```python\nfrom wagtailenforcer import urls as wagtailenforcer_urls\n\nwagtailadmin_urls.urlpatterns = wagtailenforcer_urls + wagtailadmin_urls.urlpatterns\n```\n\nCheck the docs of the apps if you need to do changes to the predefined settings.\n\n## Development\n\n### Releases\n\n- Make a new branch for the release of the new version.\n- Update the [CHANGELOG](https://github.com/springload/wagtailenforcer/CHANGELOG.md).\n- Update the version number in `setup.py`, following semver.\n- Make a PR and squash merge it.\n- Back on master with the PR merged, use `make publish` (confirm, and enter your password).\n- Finally, go to GitHub and create a release and a tag for the new version.\n- Done!\n'