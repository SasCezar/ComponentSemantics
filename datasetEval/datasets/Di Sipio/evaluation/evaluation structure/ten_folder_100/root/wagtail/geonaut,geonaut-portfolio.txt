b'Source Code for Geonaut.co.uk\n=============================\n\nThis is the source code for my [personal portolio site](https://geonaut.co.uk), written in Python. It is relatively simple and lightweight, and makes use of the Django framework and Wagtail CMS for managing content. \n\nThe site also uses:\n\n  * Bootstrap v3\n  * Formspree as a lightweight SMTP relay (contact page)\n  * JavaScript incl. JQuery (blog)\n  * Taggit for tags (blog)\n  * Django Bootstrap Pagination (blog)\n\nQuickstart for Mac\n==================\n\nRequirements: Python 2.7, Pip, Virtualenv\n\n1. Using terminal, create a folder somewhere (eg `mkdir mysite`)\n1. Move into that folder\n1. Create a virtualenv folder (e.g. `virtualenv venv`)\n1. Download / clone this repo to a folder inside `mysite` (e.g. `git clone https://github.com/geonaut/geonaut-portfolio.git geonaut`)\n1. Activate the venv (`source venv/bin/activate`)\n1. Change into the project directory (`cd geonaut`)\n1. Install the requirements (`pip install -r requirements.txt`)\n1. Switch to your IDE. Add the geonaut folder, to see the files.\n1. Copy geonaut/geonaut/settings/local.py.sample to /settings/local.py\n1. Uncomment the `DATABASES = ...` snippet (the SQLite one) in `base.py`\n1. Option 1: To use a pre-populated database\n    -  Copy the quickstart/db.sqlite3 to the folder above /quickstart\n    -  Copy the quickstart/media folder to the folder above /quickstart\n    -  The username is `admin` and password is `password`\n1. Option 2: To create your own empty database\n    -  Create the database with `python manage.py migrate`\n    -  Create a superuser with `python manage.py createsuperuser`\n    -  The site will be empty, except for the static homepage\n1. Run the development server (`python manage.py runserver` from whichever folder manage.py is in)\n1. Access the site at http://127.0.0.1:800 and http://127.0.0.1/admin\n\nIf/when you decide to make your site live, you will need to do various other things, such as:\n\n1. Make your own secret key (change / add random characters)\n1. Move to PostgreSQL\n1. Move to a production webserver (Nginx / Gunicorn)\n1. Delete the default superuser, and create your own\n\n\nTo Do List\n==========\n\n1. Dynamically fetch categories to create filter switches\n1. Find a more reliable way to display PDFs\n1. Sort script blocking on above-fold content\n1. Add a sitemap\n1. Update to Python 3'