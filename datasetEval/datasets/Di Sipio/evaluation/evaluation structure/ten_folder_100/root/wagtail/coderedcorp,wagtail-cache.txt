b"# Wagtail Cache\r\nA simple page cache for Wagtail based on the Django cache middleware.\r\n\r\n[Documentation](https://docs.coderedcorp.com/wagtail-cache/) |\r\n[Source code on GitHub](https://github.com/coderedcorp/wagtail-cache)\r\n\r\n![PyPI - Downloads](https://img.shields.io/pypi/dm/wagtail-cache.svg)\r\n![PyPI](https://img.shields.io/pypi/v/wagtail-cache.svg)\r\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/wagtail-cache.svg)\r\n![PyPI - Django Version](https://img.shields.io/pypi/djversions/wagtail-cache.svg)\r\n![PyPI - Wheel](https://img.shields.io/pypi/wheel/wagtail-cache.svg)\r\n\r\n```\r\npip install wagtail-cache\r\n```\r\n\r\n## Why Wagtail Cache?\r\nDjango has a robust cache middleware that already has the functionality\r\nneeded to cache web pages effectively. But turning the cache middleware\r\non will blindly cache every request and does not work well with a wagtail site.\r\n\r\nWagtail Cache provides a decorator that works well with wagtail pages to\r\nappropriately cache and serve them similar to Django's cache middleware.\r\n\r\nThe end result is ultra-fast page serving that requires zero database hits\r\nto serve cached pages. Other solutions such as template caching still require\r\ndatabase hits for wagtail to serve a page.\r\n\r\n## Notes\r\nThis cache feature was originally part of [coderedcms](https://github.com/coderedcorp/coderedcms)\r\nand has been split out into this separate package. Wagtail Cache is\r\ntried and tested, and is in use successfully on many live production sites.\r\n"