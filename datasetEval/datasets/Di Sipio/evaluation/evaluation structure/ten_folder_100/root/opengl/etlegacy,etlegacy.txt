b'Enemy Territory: Legacy [![Travis Status](https://travis-ci.org/etlegacy/etlegacy.svg?branch=master)](https://travis-ci.org/etlegacy/etlegacy) [![AppVeyor status](https://ci.appveyor.com/api/projects/status/468s0285u3w4vfom/branch/master?svg=true)](https://ci.appveyor.com/project/rmarquis/etlegacy/branch/master) [![Analysis Status](https://scan.coverity.com/projects/1160/badge.svg)](https://scan.coverity.com/projects/1160) [![chat](https://img.shields.io/discord/260750790203932672.svg?logo=discord)](https://discord.gg/UBAZFys)\n==========\n\n*A second breath of life for Wolfenstein: Enemy Territory*\n\n* Website: [https://www.etlegacy.com](https://www.etlegacy.com)\n* Downloads: [https://www.etlegacy.com/download](https://www.etlegacy.com/download)\n* Wiki/FAQ: [https://dev.etlegacy.com/projects/etlegacy/wiki](https://dev.etlegacy.com/projects/etlegacy/wiki)\n* Development (bug reports and feature requests): [https://dev.etlegacy.com](https://dev.etlegacy.com)\n* Repository: [https://github.com/etlegacy/etlegacy](https://github.com/etlegacy/etlegacy)\n* Assets Repository: [https://drive.google.com](https://drive.google.com/drive/folders/0Bw7Yu-pqzcSaLXEtVEVjZF82UEU)\n* Legacy Lua API: [http://legacy-lua-api.readthedocs.io](http://legacy-lua-api.readthedocs.io)\n* Translation: [https://www.transifex.com/projects/p/etlegacy/](https://www.transifex.com/projects/p/etlegacy/)\n* Contact: [\\#etlegacy](http://webchat.freenode.net/?channels=#etlegacy) on irc.freenode.net and [etlegacy/#development](https://discordapp.com/channels/260750790203932672/346956915814957067) on Discord.\n\nINTRODUCTION\n============\n\nEnemy Territory: Legacy is based on the [raedwulf-et](https://bitbucket.org/tcmreastwood/raedwulf-et/)\nproject which in turn is based on the [GPL\'d source code](https://github.com/id-Software/Enemy-Territory) of Wolfenstein: Enemy Territory.\n\nThe main goals of the project are fixing bugs, cleaning up the codebase and adding useful features\nwhile remaining compatible with the ET 2.60b version.\n\nThe Legacy mod is the default mod shipped with ET: Legacy. It aims to add many useful features and\nimprovements, while staying close to the original gameplay, as well as being lightweight and extensible\nthrough Lua scripts.\n\nFor more information consult our [changelog](https://dev.etlegacy.com/projects/etlegacy/wiki/Changelog).\n\nET: Legacy development is a collaborative effort done in an open, transparent and friendly manner.\nAnyone is welcome to join our efforts!\n\n### Get involved\n\nIf you are interested to join us, ensure to read first our contribution guidelines:\n\n* [How to commit your code](https://dev.etlegacy.com/projects/etlegacy/wiki/How_to_commit_Your_Code)\n* [Coding conventions](https://dev.etlegacy.com/projects/etlegacy/wiki/Coding_Conventions)\n\n### Donations\n\nBy request, we set up a PayPal account for donations. So if you like the ET: Legacy project or our game server, don\'t\nhesitate to send us some cash at **Paypal: etlegacy@liebt-dich.info**\n\nYour contribution will be used to pay for our server and domain. To clarify, the project is not dependant\non donations, but we don\'t reject them if you want to honor our work. Thank you!\n\n\nGENERAL NOTES\n=============\n\n### Game data\n\nWolfenstein: Enemy Territory is a free release, and can be downloaded from [Splash Damage](https://www.splashdamage.com/games/wolfenstein-enemy-territory/).\n\nThis source release contains only the engine and mod code but not any game data,\nwhich is still covered by the original EULA and must be obeyed as usual.\n\nIn order to run ET: Legacy you will need to copy the original assets files\n(*pak0.pk3*, *pak1.pk3* and *pak2.pk3*) to the etmain folder.\n\n\n### Compatibility with Enemy Territory 2.60b\n\nET: Legacy remains compatible with the ET 2.60b version as much as possible.\n\nPlease note that ET: Legacy is *not* compatible with PunkBuster enabled servers.\nET: Legacy clients also cannot connect to servers running the ETPro mod.\n\n\n### Linux 64 bit\n\nPlease remember that 64 bit ET: Legacy clients can only connect to servers running\nmods providing a 64 bit version. You will be able to play 32 bit-only mods only if\nyou compile ET: Legacy on a 32 bit system or cross-compile it for 32 bit architecture\non a 64 bit system.\n\nAt the moment, only the Legacy mod is available in 64 bit version, while all other\nexisting mods are available in 32 bit only version.\n\nIn case you are a running a 64 bit system, you probably might want to use the\n**bundled libraries** which are located in a separate *etlegacy-libs* repository and\ncan be automatically downloaded using the `git submodule` command. See the next\nsection for more details.\n\n\nDEPENDENCIES\n============\n\n* **CMake** (compile-time only)\n* **OpenGL**\n* **GLEW**\n* **SDL**\n* **ZLib**\n* **MiniZip**\n* **libjpeg-turbo** or **libjpeg**\n* **libcurl** (optional, enabled by default)\n* **Lua** (optional, enabled by default)\n* **Ogg Vorbis** (optional, enabled by default)\n* **Theora** (optional, enabled by default)\n* **Freetype** (optional, enabled by default)\n* **SQLite** (optional, enabled by default)\n* **OpenAL** (optional, enabled by default)\n* **Jansson** (optional)\n\n\nGrab info about current lib versions from our wiki page [ET: Legacy Libs_Changelog](https://dev.etlegacy.com/projects/etlegacy/wiki/Libs_Changelog)\n\nTo get the latest source code install [git](http://git-scm.com/) and\nclone our repository hosted at [Github.com](https://github.com/etlegacy/etlegacy):\n\n    $ git clone git://github.com/etlegacy/etlegacy.git\n\nIf the required dependencies are not installed on your system run:\n\n    $ git submodule init\n    $ git submodule update\n\nThis downloads the essential dependencies into the `libs/`directory. You can choose\nwhether to use bundled libraries instead of the system ones by changing the\n`BUNDLED_LIBS` variable in the CMakeList.txt configuration file. You can then select\nwhich bundled libraries to use by toggling the respective `BUNDLED_XXX` variable.\n\n\nCOMPILE AND INSTALL\n===================\n\nTo install the binaries system-wide, you need to compile ET: Legacy with hardcoded\nfs_basepath.\n\nThe following variables can be adjusted in CMake:\n\n  * **INSTALL_DEFAULT_BASEDIR**: sets default *fs_basepath*, i.e. where etl and etlded\n    executables look for data files. In most cases it is CMAKE_INSTALL_PREFIX+INSTALL_DEFAULT_MODDIR.\n    Defaults to empty value, because we want *fs_basepath* to be the current working directory\n    when not installing the game system-wide.\n\n  * (optional) **INSTALL_DEFAULT_BINDIR**: Location for executables. Appended to CMAKE_INSTALL_PREFIX.\n    Defaults to "bin".\n\n  * (optional) **INSTALL_DEFAULT_MODDIR**: Location for libraries and paks. Appended to\n    CMAKE_INSTALL_PREFIX. Defaults to "share/etlegacy" and then "legacy" is appended to it.\n\n\n### Linux\n\nInstall required dependencies.\n\n* option A: **easybuild**\n\nIn terminal, run:\n\n    $ ./easybuild.sh\n\nET: Legacy will be installed in `~/etlegacy`.\n\n* option B: **command line**\n\nIn terminal, run:\n\n    $ mkdir build && cd build && cmake ..\n\nTo compile, run:\n\n    $ make\n\nIf you wish to install ET: Legacy system-wide, run:\n\n    # make install\n\nBe sure to set the CMake variables (see above) beforehand.\n\n\n**NOTES:**\n\n  * Even if you have a 64 bit linux distribution which provides 32 bit versions of all\n  the required libraries, you might also need the development libraries (-devel packages)\n  installed on your system.\n\n  * In order to compile the jpeg-turbo library properly you will need the **nasm** assembler.\n\n\n### Crosscompiling on Linux with MinGW-w64\n\nIn terminal, run:\n\n    $ mkdir build && cd build\n    $ cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-cross-mingw-linux.cmake ..\n    $ make\n\nBy default, MinGW name is set to *i686-w64-mingw32*. You may have to change it in\n`cmake/Toolchain-cross-mingw-linux.cmake` depending on how it is called on your system.\n\n\n### Windows\n\nInstall:\n\n  1. [Visual Studio Community](http://www.visualstudio.com/) with the _Desktop Development with C++_ workload\n  2. [CMake](http://www.cmake.org/) and make sure it is added to your system PATH\n\n* option A: **easybuild**\n\n    1. run easybuild.bat\n\nET: Legacy will be installed in `My Documents\\ETLegacy-Build`.\n\n* option B: **Visual Studio**\n\n    1. create a `build` directory inside the directory which contains ET: Legacy sources\n    2. open *Visual Studio Command Prompt* in the Start menu\n    3. change directory with `cd` to the newly created build directory\n\nIn the command prompt, run:\n\n    cmake -G "NMake Makefiles" -DBUNDLED_LIBS=YES .. && nmake\n\nor\n\n    cmake -G "Visual Studio 16" -DBUNDLED_LIBS=YES ..\n\nand open the resulting project in Visual Studio.\n\n\n**NOTES:**\n\n  * If compilation of bundled libraries is aborted for any reason, you will probably need to clean the\n  libs directory and start over. This can be done by executing `git clean -df && git reset --hard HEAD`\n  inside `libs/` directory.\n\n  * If the build fails during libcurl compilation because of missing *sed* utility, download it from\n  [GnuWin](http://gnuwin32.sourceforge.net/packages/sed.htm) and place it into your system path or\n  copy it into `MSVC/VC/bin`. It also comes with Git and can be placed into your system path\n  automatically if you select that option during Git installation.\n\n\n### Mac OS X\n\nInstall:\n\n    1. [Xcode](https://developer.apple.com/xcode/downloads/)\n    2. [Homebrew](http://brew.sh/)\n    3. [Homebrew Cask](http://caskroom.io/)\n\nThen brew the following packages in the terminal app:\n\n    $ brew cask install xquartz\n    $ brew install --universal gnu-sed cmake glew sdl2 minizip jpeg-turbo curl lua libogg libvorbis theora freetype sqlite openal-soft\n\nThe --universal flag ensures both 32bit and 64bit libraries are installed. Although your system curl library supports both architectures, you also need to install its headers.\n\n* option A: **easybuild**\n\nIn Terminal, run:\n\n    $ ./easybuild.sh\n\nThis will put an \'etlegacy\' folder into your user folder.\n\n* option B: **command line**\n\nIn terminal, run:\n\n    $ mkdir build && cd build && cmake ..\n\nTo compile, run:\n\n    $ make\n\nIf you wish to install ET: Legacy system-wide, run:\n\n    # make install\n\nBe sure to set the CMake variables (see above) beforehand.\n\n\n**NOTES**:\n\n  * In the legacy mod folder, the cgame_mac and ui_mac files are redundant since they are in the \n  etl_bin.pk3 and will be extracted at runtime, so you can delete those. The client is named etl.app\n  (and can safely be renamed), while the dedicated server is just a command-line binary named "etlded".\n\n\nLICENSE\n=======\n\n### Enemy Territory: Legacy\n\nWolfenstein: Enemy Territory GPL Source Code\nCopyright (C) 1999-2010 id Software LLC, a ZeniMax Media company.\n\nOpenWolf GPL Source Code\nCopyright (C) 2011 Dusan Jocic\n\nXreaL GPL Source Code (renderer2)\nCopyright (C) 2010-2011 Robert Beckebans\n\nET: Legacy\nCopyright (C) 2012-2019 ET:Legacy Team <mail@etlegacy.com>\n\n  ET: Legacy is free software: you can redistribute it and/or modify it under\n  the terms of the GNU General Public License as published by the Free Software\n  Foundation, either version 3 of the License, or (at your option) any later\n  version.\n\n  ET: Legacy is distributed in the hope that it will be useful, but WITHOUT ANY\n  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n  A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License along with\n  ET: Legacy (see COPYING.txt). If not, see <http://www.gnu.org/licenses/>.\n\n  ADDITIONAL TERMS:  The Wolfenstein: Enemy Territory GPL Source Code is also\n  subject to certain additional terms. You should have received a copy of these\n  additional terms immediately following the terms and conditions of the GNU GPL\n  which accompanied the Wolf ET Source Code.  If not, please request a copy in\n  writing from id Software at id Software LLC, c/o ZeniMax Media Inc., Suite 120,\n  Rockville, Maryland 20850 USA.\n\n  EXCLUDED CODE:  The code described below and contained in the Wolfenstein:\n  Enemy Territory GPL Source Code release is not part of the Program covered by\n  the GPL and is expressly excluded from its terms.  You are solely responsible\n  for obtaining from the copyright holder a license for such code and complying\n  with the applicable license terms.\n\n\n### MD4 Message-Digest Algorithm\n\nCopyright (C) 1991-1992, RSA Data Security, Inc. Created 1991. All rights reserved.\n\n  License to copy and use this software is granted provided that it is identified\n  as the "RSA Data Security, Inc. MD4 Message-Digest Algorithm" in all mater\n  ial mentioning or referencing this software or this function.\n\n  License is also granted to make and use derivative works provided that such work\n  s are identified as "derived from the RSA Data Security, Inc. MD4 Message-Digest\n  Algorithm" in all material mentioning or referencing the derived work.\n\n  RSA Data Security, Inc. makes no representations concerning either the merchanta\n  bility of this software or the suitability of this software for any particular p\n  urpose. It is provided "as is" without express or implied warranty of any\n  kind.\n\n\n### MD5 Message-Digest Algorithm\n\nThe MD5 algorithm was developed by Ron Rivest. The public domain C language\nimplementation used in this program was written by Colin Plumb in 1993, no copyright\nis claimed.\n\n  This software is in the public domain. Permission to use, copy, modify, and\n  distribute this software and its documentation for any purpose and without fee is\n  hereby granted, without any conditions or restrictions. This software is provided\n  "as is" without express or implied warranty.\n'