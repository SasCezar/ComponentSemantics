b'<div align="center">\r\n\r\n[![preview](https://github.com/cprogrammer1994/ModernGL/raw/master/.github/preview.png)](#readme)\r\n\r\n</div>\r\n\r\n# ModernGL\r\n\r\n[![pypi](https://badge.fury.io/py/moderngl.svg)](https://pypi.python.org/pypi/moderngl) <img src="https://raw.githubusercontent.com/moderngl/moderngl/master/.github/python-versions.svg?sanitize=true"> [![rtd](https://readthedocs.org/projects/moderngl/badge/?version=latest)](https://moderngl.readthedocs.io)\r\n\r\n```sh\r\npip install moderngl\r\n```\r\n\r\n- [Documentation](https://moderngl.readthedocs.io/)\r\n- [Examples](https://github.com/moderngl/moderngl/tree/master/examples/#readme)\r\n- [ModernGL on Github](https://github.com/moderngl/moderngl/)\r\n- [ModernGL on PyPI](https://pypi.org/project/ModernGL/)\r\n- [ModernGL Discord Server](https://discord.gg/UEMtW8D)\r\n- [glcontext]\r\n- [moderngl-window] (Window creation, resource loading, ..)\r\n\r\n> **NOTE: From moderngl 5.6 context creation is delegated to the [glcontext] package.\r\n  This makes us able to expand and improve context creation without releasing new\r\n  versions of moderngl. It also makes it possible for users to customize their own\r\n  context creation and the bar for contributing should be lower. New backends\r\n  can be created using ctypes or C++.**\r\n\r\n## Features\r\n\r\n- GPU accelerated high quality graphics\r\n- Rendering modern OpenGL scenes with less headache\r\n- Simpler and faster than PyOpenGL\r\n- Can render without a window\r\n- 100% Pythonic\r\n\r\n## Sample usage\r\n\r\n```py\r\n>>> import moderngl\r\n>>> ctx = moderngl.create_standalone_context()\r\n>>> buf = ctx.buffer(b\'Hello World!\')  # allocated on the GPU\r\n>>> buf.read()\r\nb\'Hello World!\'\r\n```\r\n\r\nFor complete examples please visit the [Examples](https://github.com/cprogrammer1994/ModernGL/tree/master/examples/#readme).\r\n\r\n## Easy to use with Pillow and Numpy\r\n\r\n```py\r\n>>> img = Image.open(\'texture.jpg\')\r\n>>> ctx.texture(img.size, 3, img.tobytes())\r\n<Texture: 1>\r\n```\r\n\r\n```py\r\n>>> ctx.buffer(np.array([0.0, 0.0, 1.0, 1.0], dtype=\'f4\'))\r\n<Buffer: 1>\r\n```\r\n\r\n## Compared to PyOpenGL\r\n\r\nWith PyOpenGL, using the original OpenGL API, you have to write three lines to\r\nachieve a simple task like binding a VBO:\r\n\r\n```py\r\nvbo1 = glGenBuffers(1)\r\nGL.glBindBuffer(GL_ARRAY_BUFFER, vbo1)\r\nGL.glBufferData(GL_ARRAY_BUFFER, b\'Hello World!\', GL_STATIC_DRAW)\r\n\r\nvbo2 = glGenBuffers(1)\r\nGL.glBindBuffer(GL_ARRAY_BUFFER, vbo2)\r\nGL.glBufferData(GL_ARRAY_BUFFER, b\'\\x00\' * 1024, GL_DYNAMIC_DRAW)\r\n```\r\n\r\nWith ModernGL you need just one simple line per VBO to achieve the same\r\nresults:\r\n\r\n```py\r\nvbo1 = ctx.buffer(b\'Hello World!\')\r\nvbo2 = ctx.buffer(reserve=1024, dynamic=True)\r\n```\r\n\r\n## Build\r\n\r\n[![build](https://img.shields.io/travis/moderngl/moderngl/master.svg?label=build)](https://travis-ci.org/moderngl/moderngl)\r\n[![build](https://img.shields.io/appveyor/ci/cprogrammer1994/ModernGL/master.svg?label=build)](https://ci.appveyor.com/project/cprogrammer1994/ModernGL)\r\n\r\n```sh\r\npython setup.py build_ext --inplace\r\n```\r\n\r\n## FAQ\r\n\r\n### Is ModernGL faster than PyOpenGL?\r\n\r\nIn some cases **yes**, the core functions of ModernGL are written in C++,\r\nOpenGL functions are called in quick succession so these calls together\r\ncount as a single python function call.\r\n\r\n### What version of OpenGL is used?\r\n\r\nMost of the calls only require **OpenGL 3.3** but Subroutines and Compute\r\nShaders require **OpenGL 4.0** and **OpenGL 4.3**\r\n\r\n### Is my old PC supported?\r\n\r\nOpenGL 3.3 came out in February 2010. With **up to date drivers** you will\r\nbe able to use the most of the ModernGL functions, even on integrated \r\ngraphics cards. _(No, Compute Shaders won\'t work)_\r\n\r\n### Where can I use ModernGL?\r\n\r\n**Anywhere where OpenGL is supported.** ModernGL is capable of rendering\r\nusing a [standalone_context] as well. Rendering to a window only requires\r\na valid OpenGL context.\r\n\r\n[standalone_context]: https://github.com/cprogrammer1994/ModernGL/tree/master/examples/old-examples/standalone\r\n\r\n### Can ModernGL create a Window?\r\n\r\n**NO**, but we provide a utility library [moderngl-window] making window\r\ncreation and resource loading very simple.\r\n\r\n### Limitations using ModernGL over PyOpenGL?\r\n\r\nAll the necessary calls are (or can be) implemented in ModernGL. However\r\nyou can interact with the ModernGL objects from PyOpenGL. If something is\r\nmissing write an [issue](https://github.com/cprogrammer1994/ModernGL/issues)\r\nor raise a [PR](https://github.com/cprogrammer1994/ModernGL/pulls).\r\n\r\n## Supported platforms\r\n\r\n- [x] Windows\r\n- [x] Linux\r\n- [x] Mac\r\n\r\n## Installing from source\r\n\r\n### Installing on Ubuntu from source\r\n\r\n```sh\r\napt-get install python3-dev libgl1-mesa-dev libx11-dev\r\npython3 setup.py install\r\n```\r\n\r\n### Building the sphinx documentation\r\n\r\n```sh\r\npip install -r docs/requirements.txt\r\npython setup.py build_sphinx\r\n```\r\n\r\n### Running tests\r\n\r\n```sh\r\npip install -r tests/requirements.txt\r\npytest tests\r\n```\r\n\r\n> Some of the tests may be skipped when the supported OpenGL version is below the requirements of the given test.\r\n\r\n### Headless rendering\r\n\r\n```sh\r\napt-get install xvfb\r\nalias xpy=\'xvfb-run -s "-screen 0 1x1x24" python3\'\r\nxpy -m moderngl\r\n```\r\n\r\n## Code quality\r\n\r\nCode is tested with [pep8], [flake8], [prospector] and [pylint]\r\n\r\n[pep8]: https://www.python.org/dev/peps/pep-0008/\r\n[flake8]: http://flake8.pycqa.org/en/latest/\r\n[prospector]: https://prospector.readthedocs.io/en/master/\r\n[pylint]: https://www.pylint.org/\r\n[moderngl-window]: https://github.com/moderngl/moderngl-window\r\n[glcontext]: https://github.com/moderngl/glcontext\r\n\r\n## Community\r\n\r\n- [Code of conduct](https://github.com/cprogrammer1994/ModernGL/blob/master/.github/CODE_OF_CONDUCT.md)\r\n\r\n## Contributors\r\n\r\n- [Szabolcs Dombi](https://github.com/cprogrammer1994)\r\n- [SimLeek](https://github.com/SimLeek)\r\n- [Aljenci](https://github.com/Aljenci)\r\n- [MinchinWeb](https://github.com/MinchinWeb)\r\n- [Silexstudio](https://github.com/Silexstudio)\r\n- [stuaxo](https://github.com/stuaxo)\r\n- [Tomi Aarnio](https://github.com/toaarnio)\r\n- [Joshua Reibert](https://github.com/joshua-r)\r\n- [Einar Forselv](https://github.com/einarf)\r\n- [Jonathan Hartley](https://github.com/tartley)\r\n\r\nand [many others](https://github.com/cprogrammer1994/ModernGL/graphs/contributors)\r\n\r\nThank You!\r\n\r\nContributions are welcome. _(Please add yourself to the list)_\r\n'