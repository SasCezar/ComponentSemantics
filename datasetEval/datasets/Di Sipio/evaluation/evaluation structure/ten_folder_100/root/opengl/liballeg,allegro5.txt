b'Welcome to Allegro!\n===================\n\nAllegro is a cross-platform library mainly aimed at video game and\nmultimedia programming. It handles common, low-level tasks such as\ncreating windows, accepting user input, loading data, drawing images,\nplaying sounds, etc. and generally abstracting away the underlying\nplatform. However, Allegro is not a game engine: you are free to design\nand structure your program as you like.\n\nAllegro 5 has the following additional features:\n\n- Supported on Windows, Linux, Mac OSX, iPhone and Android\n- User-friendly, intuitive C API usable from C++ and many other languages\n- Hardware accelerated bitmap and graphical primitive drawing support (via OpenGL or Direct3D)\n- Audio recording support\n- Font loading and drawing\n- Video playback\n- Abstractions over shaders and low-level polygon drawing\n- And more!\n\nThis readme contains general information which applies to all platforms\nthat Allegro builds on.\n\nREADME_cmake.txt discusses some build options for cmake.\n\nREADME_msvc.txt discusses compilation on Windows with Microsoft Visual C/C++.\n\nREADME_make.txt discusses compilation with GNU make.  This applies to Unix-like\noperating systems such as Linux, MacOS X and MinGW on Windows.\n\nREADME_macosx.txt has a few additional notes for MacOS X.\n\nREADME_iphone.txt discusses iPhone operating systems.\n\n\n\nRequirements\n============\n\nWe assume you have C and C++ compilers installed and functioning.\nWe support gcc, clang and MSVC.\n\nAllegro also requires CMake 2.8.5 or later to build.\nYou may download it from <http://www.cmake.org/>\n\n\n\nLibrary dependencies\n====================\n\nAllegro is divided into a core library and a number of addon libraries.\nThe core library depends on certain libraries to function.  If you don\'t have\nthose, nothing will work.  These are required for the core library:\n\n- DirectX SDK (Windows only)\n\n  You can get this for MSVC from the Microsoft web site (large download).\n\n  Alternatively, smaller downloads for MSVC and MinGW are available\n  here: <http://liballeg.org/download.html#miscellaneous-files>. Some\n  MinGW distributions come with sufficient DirectX SDK to support\n  compiling Allegro.\n\n- X11 development libraries (Linux/Unix only)\n  The libraries will be part of your Linux distribution, but you may have to\n  install them explicitly.\n\n- OpenGL development libraries (optional only on Windows)\n\nThe addons, too, may require additional libraries.  Since the addons are\nstrictly optional, they are not required to build Allegro, but a lot of\nfunctionality may be disabled if they are not present.\n\nWindows users may find some precompiled binaries for the additional libraries\nfrom <http://gnuwin32.sourceforge.net/>.  You need to get the `bin` and `lib`\npackages.  The `bin` packages contain DLLs, and the `lib` packages contain the\nheaders and import libraries.\n\nMac users may find some dependencies in Homebrew, Fink or MacPorts.\n<http://brew.sh/>, <http://www.finkproject.org/> and\n<http://www.macports.org/>\n\nLinux users likely have all the dependencies already, except PhysicsFS\nand DUMB. If your distribution uses separate development packages, they\nwill need to be installed.  The packages are probably named *-dev or *-devel.\n\nThese are the dependencies required for the addons: \n\n- libpng and zlib, for PNG image support (Unix and older MinGW only)\n  Home page: <http://www.libpng.org/pub/png/>\n  Windows binaries: <http://gnuwin32.sourceforge.net/packages/libpng.htm>\n\n  On Windows/Mac OS X/iPhone/Android, PNG image support is available by\n  using the native facilities on the respective operating systems, so\n  libpng is not required.\n\n- libjpeg, for JPEG image support (Unix and older MinGW only)\n  Home page: <http://www.ijg.org/>\n  Windows binaries: <http://gnuwin32.sourceforge.net/packages/jpeg.htm>\n\n  On Windows/Mac OS X/iPhone/Android, JPEG image support is available\n  by using the native facilities on the respective operating systems,\n  so libjpeg is not required.\n\n- libwebp, for WebP image support\n  Home page: <https://developers.google.com/speed/webp/>\n\n  On Android, WebP image support is available by using the native\n  facilities of the operating system, so libwebp is not required.\n\n- FreeType, for TrueType font support.\n  Home page: <http://freetype.sourceforge.net/>\n  Windows binaries: <http://gnuwin32.sourceforge.net/packages/freetype.htm>\n\n- Ogg Vorbis, a free lossy audio format. (libogg, libvorbis, libvorbisfile)\n  Home page: <http://www.vorbis.com/>\n\n- Opus, a free lossy audio codec. (libogg, libopus, libopusfile)\n  Home page: <http://www.opus-codec.org/>\n\n- FLAC, a free lossless audio codec. (libFLAC, libogg)\n  Home page: <http://flac.sourceforge.net/>\n\n- DUMB, an IT, XM, S3M and MOD player library. (libdumb)\n  Home page: <http://dumb.sourceforge.net/>\n\n- OpenAL, a 3D audio API.\n  The audio addon can use OpenAL, although the 3D capabilities aren\'t used.\n  <http://kcat.strangesoft.net/openal.html>\n\n  On Mac OS X, OpenAL is *required* but should come with the OS anyway.\n\n  On Linux and Windows, OpenAL will only be used if you request it, hence there\n  is no reason to install it specifically.\n\n- PhysicsFS, provides access to archives, e.g. .zip files.\n  Home page: <http://icculus.org/physfs/>\n\nOn Windows it may be a pain to place all these libraries such that they can be\nfound.  Please see the README_cmake.txt section on the "deps subdirectory"\nwhen the time comes.\n\n\n\nAPI documentation\n=================\n\nTo build the documentation you will need Pandoc.\nPandoc\'s home page is <http://johnmacfarlane.net/pandoc/>\n\nInstalling Pandoc from source can be challenging, but you can build Allegro\nwithout building the documentation.\n\nOnline documentation is available on the Allegro web site:\n<http://docs.liballeg.org/>\n\n\n\nBuilding with CMake\n===================\n\nBuilding with CMake is a two step process.  During the _configuration_ step,\ncmake will detect your compiler setup and find the libraries which are\ninstalled on your system.  At the same time, you may select options to\ncustomise your build.  If you are unsure of what you are doing, leave all the\noptions at the defaults.\n\nOnce the configuration step is successful, you will invoke another tool to\nbuild Allegro.  The tool depends on your compiler, but is usually either\n`make`, or your IDE.\n\nTo avoid problems, unpack Allegro into a directory *without spaces or other\n"weird" characters in the path*.  This is a known problem.\n\nNow read README_msvc.txt, README_make.txt or README_macosx.txt.\n\n'