b'LASERCRABS\n==========\n\nFeatures\n--------\n\n- [Simple multi-threaded architecture](http://etodd.io/2016/01/12/poor-mans-threading-architecture/) -\nseparate threads for physics, rendering, AI, and game logic\n- Entity/component system\n- Linear math suite somewhat stolen from Ogre\n- Content pipeline supporting .blend, .glsl, .otf, .png\n- Create levels, models, animations, and ragdoll rigs in Blender\n- Deferred rendering, cascaded shadow maps, edge detection, bloom, SSAO, weather effects\n- Geometry-based font rendering and UI system\n- [Online multiplayer](http://etodd.io/2018/02/20/poor-mans-netcode/)\n- Online user profile system via [sqlite](https://sqlite.org/)\n- Authentication via [Steam](http://store.steampowered.com/), [itch.io](https://itch.io), or [GameJolt](https://gamejolt.com)\n- Localization support\n- Simple Windows crash report system\n- Keyboard/mouse/gamepad support via SDL\n- Automatic navmesh generation with realtime mutations via Recast\n- Audio via Wwise\n- Physics via Bullet\n- Almost all dependencies are open source GitHub submodules\n- Builds and runs on Win/Mac/Linux\n\nWindows quickstart\n------------------\n\n1. Clone the repository and pull down the submodules. You will need [Git LFS](https://git-lfs.github.com/).\n2. Install [Visual Studio](https://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx) 2017.\n3. Install the [DirectX SDK](https://www.microsoft.com/en-us/download/confirmation.aspx?id=6812)\n4. Install [CMake](http://www.cmake.org/download/)\n5. Ensure [Blender](http://blender.org) 2.79b is installed and\n   [available on the path](http://www.computerhope.com/issues/ch000549.htm)\n6. Ensure [Wwise](https://www.audiokinetic.com/) 2017.1.0 build 6302 is installed and `WwiseCLI`\nis available on the path\n7. Run `setup-win.bat`\n8. Open `build/lasercrabs.sln` in Visual Studio\n9. Set the `lasercrabs` project to start up by default\n10. Hit F5 to run the game\n\nLinux quickstart\n----------------\n\n1. Clone the repository and pull down the submodules. You will need [Git LFS](https://git-lfs.github.com/).\n2. The Wwise authoring tool doesn\'t run on Linux. Use Wwise on another platform\nto build the Linux soundbanks.\n3. If necessary, copy the generated `Wwise_IDs.h` file into `src/asset`\n4. Copy the soundbanks into `assets/audio/GeneratedSoundBanks/Linux`\n5. If you are on Debian/Ubuntu, run `./setup-debian-deps`. Otherwise you\'ll need to install these dependencies yourself.\n6. Run `./setup-linux`\n7. Run `./lasercrabs` from the `build` folder\n\nMac quickstart\n--------------\n\n1. Clone the repository and pull down the submodules. You will need [Git LFS](https://git-lfs.github.com/).\n2. Install [Homebrew](http://brew.sh/)\n3. Ensure [Blender](http://blender.org) 2.79b is installed and\n   [available on the path](http://www.computerhope.com/issues/ch000549.htm)\n4. Ensure [Wwise](https://www.audiokinetic.com/) 2017.1.0 build 6302 is installed and `WwiseCLI.sh`\nis available on the path\n5. Wwise might have trouble generating soundbanks the first time. You might\nneed to delete any cache files and open the project manually in Wwise first.\n6. Run `./setup-mac`\n7. Run `./lasercrabs` from the `build` folder\n\nCredits\n-------\n\n- Evan Todd - code, design, art\n- Jack Menhorn - sound design\n- Logan Hayes - music\n- Ian Cuslidge - level design for "Plaza"\n- Bobpoblo - level design for "Crossing"\n\nLicense\n-------\n\nEverything excluding the `external` directory is public domain.\n\nWwise SDK\n---------\n\nThis repository includes a copy of the Wwise SDK. Use of the SDK is subject to\nthe [Wwise EULA](external/wwise/LICENSE.txt). Wwise is free for educational and\nnon-commercial purposes. Otherwise, acquire a license key from\n[Audiokinetic](https://www.audiokinetic.com/).\n'