b'<img align="left" src="https://github.com/raysan5/raylib/blob/master/logo/raylib_256x256.png" width=256>\n\n**raylib is a simple and easy-to-use library to enjoy videogames programming.**\n\nraylib is highly inspired by Borland BGI graphics lib and by XNA framework and it\'s specially well suited for prototyping, tooling, graphical applications, embedded systems and education.\n\n*NOTE for ADVENTURERS: raylib is a programming library to enjoy videogames programming; no fancy interface, no visual helpers, no auto-debugging... just coding in the most pure spartan-programmers way.*\n\nReady to learn? Jump to [code examples!](http://www.raylib.com/examples.html)\n\n\n[![Build Status](https://travis-ci.org/raysan5/raylib.svg?branch=master)](https://travis-ci.org/raysan5/raylib)\n[![https://ci.appveyor.com/api/projects/status/github/raysan5/raylib?svg=true](https://ci.appveyor.com/api/projects/status/github/raysan5/raylib?svg=true)](https://ci.appveyor.com/project/raysan5/raylib)\n[![Chat on Discord](https://img.shields.io/discord/426912293134270465.svg?logo=discord)](https://discord.gg/VkzNHUE)\n[![License](https://img.shields.io/badge/license-zlib%2Flibpng-blue.svg)](LICENSE.md)\n[![Twitter URL](https://img.shields.io/twitter/url/http/shields.io.svg?style=social&label=Follow)](https://twitter.com/raysan5)\n\nfeatures\n--------\n  - **NO external dependencies**, all required libraries are bundled into raylib\n  - Multiple platforms supported: **Windows, Linux, MacOS, Android... and many more!**\n  - Written in plain C code (C99) in PascalCase/camelCase notation\n  - Hardware accelerated with OpenGL (**1.1, 2.1, 3.3 or ES 2.0**)\n  - **Unique OpenGL abstraction layer** (usable as standalone module): [rlgl](https://github.com/raysan5/raylib/blob/master/src/rlgl.h)\n  - Multiple **Fonts** formats supported (XNA fonts, AngelCode fonts, TTF)\n  - Outstanding texture formats support, including compressed formats (DXT, ETC, ASTC)\n  - **Full 3D support**, including 3D Shapes, Models, Billboards, Heightmaps and more! \n  - Flexible Materials system, supporting classic maps and **PBR maps**\n  - **Animated 3D models** supported (skeletal bones animation)\n  - Shaders support, including model and postprocessing shaders.\n  - **Powerful math module** for Vector, Matrix and Quaternion operations: [raymath](https://github.com/raysan5/raylib/blob/master/src/raymath.h)\n  - Audio loading and playing with streaming support (WAV, OGG, MP3, FLAC, XM, MOD)\n  - **VR stereo rendering** support with configurable HMD device parameters\n  - Huge examples collection with [+95 code examples](https://www.raylib.com/examples.html)!\n  - Bindings to [+25 programming languages](https://github.com/raysan5/raylib/blob/master/BINDINGS.md)!\n\n\nraylib uses on its [core](https://github.com/raysan5/raylib/blob/master/src/core.c) module the outstanding [GLFW3](http://www.glfw.org/) library, embedded in the form of [rglfw](https://github.com/raysan5/raylib/blob/master/src/rglfw.c) module, to avoid external dependencies.\n\nraylib uses on its [raudio](https://github.com/raysan5/raylib/blob/master/src/raudio.c) module, the amazing [miniaudio](https://github.com/dr-soft/miniaudio) library to support multiple platforms and multiple audio backends.\n\nraylib uses internally multiple single-file header-only libraries to support different fileformats loading and saving, all those libraries are embedded with raylib and available in [src/external](https://github.com/raysan5/raylib/tree/master/src/external) directory. Check [raylib Wiki](https://github.com/raysan5/raylib/wiki/raylib-dependencies) for a detailed list.\n\n*On Android platform, `native_app_glue module` module (provided by Android NDK) and native Android libraries are used to manage window/context, inputs and activity life cycle.*\n\n*On Raspberry Pi platform (native mode), `Videocore API` and `EGL` libraries are used for window/context management. Inputs are processed using `evdev` Linux libraries*\n\nbuild and installation\n----------------------\n\nBinary releases for Windows, Linux and macOS are available at the [Github Releases page](https://github.com/raysan5/raylib/releases). raylib is also available via multiple package managers on multiple OS distributions. Check [raylib Wiki](https://github.com/raysan5/raylib/wiki) for more info.\n\nIf you wish to build raylib yourself, [the raylib Wiki](https://github.com/raysan5/raylib/wiki) also contains detailed instructions on how to approach that.\n\nraylib has been developed using two tools:\n\n   * Notepad++ (text editor) - [http://notepad-plus-plus.org](http://notepad-plus-plus.org/)\n   * MinGW (GCC compiler) - [http://www.mingw.org](http://www.mingw.org/)\n\nThose are the tools recommended to enjoy raylib development.\n\ncontact\n-------\n\n   * Webpage: [http://www.raylib.com](http://www.raylib.com)\n   * Discord: [https://discord.gg/raylib](https://discord.gg/VkzNHUE)\n   * Twitter: [http://www.twitter.com/raysan5](http://www.twitter.com/raysan5)\n   * Twitch: [http://www.twitch.tv/raysan5](http://www.twitch.tv/raysan5)\n   * Reddit: [https://www.reddit.com/r/raylib](https://www.reddit.com/r/raylib)\n   * Patreon: [https://www.patreon.com/raylib](https://www.patreon.com/raylib)\n   * YouTube: [https://www.youtube.com/channel/raylib](https://www.youtube.com/channel/UC8WIBkhYb5sBNqXO1mZ7WSQ)\n\nIf you are using raylib and you enjoy it, please, join our [Discord server](https://discord.gg/VkzNHUE).\n\nlicense\n-------\n\nraylib is licensed under an unmodified zlib/libpng license, which is an OSI-certified, BSD-like license that allows static linking with closed source software. Check [LICENSE](LICENSE.md) for further details.\n'