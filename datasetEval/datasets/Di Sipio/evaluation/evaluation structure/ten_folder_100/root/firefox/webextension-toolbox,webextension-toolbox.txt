b'[<img align="right" src="./assets/icon.svg?sanitize=true">](https://www.npmjs.com/package/webextension-toolbox)\n# WebExtension Toolbox\n\n[![npm package](https://badge.fury.io/js/webextension-toolbox.svg)](https://www.npmjs.com/package/webextension-toolbox)\n[![build status](https://travis-ci.org/webextension-toolbox/webextension-toolbox.svg?branch=master)](https://travis-ci.org/webextension-toolbox/webextension-toolbox) \n[![Build Status](https://dev.azure.com/webextension-toolbox/webextension-toolbox/_apis/build/status/webextension-toolbox.webextension-toolbox)](https://dev.azure.com/webextension-toolbox/webextension-toolbox/_build/latest?definitionId=1)\n[![dependencies](https://david-dm.org/webextension-toolbox/webextension-toolbox/status.svg)](https://david-dm.org/webextension-toolbox/webextension-toolbox)\n[![devDependencies](https://david-dm.org/webextension-toolbox/webextension-toolbox/dev-status.svg)](https://david-dm.org/webextension-toolbox/webextension-toolbox?type=dev)\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n[![license](https://img.shields.io/npm/l/webextension-toolbox.svg)](https://github.com/webextension-toolbox/webextension-toolbox/blob/master/LICENSE)\n\nSmall cli toolbox for creating cross-browser WebExtensions.\n\nIf you want to get started quickly check out the [yeoman generator](https://github.com/webextension-toolbox/generator-web-extension) for this project.\n\n# Browser Support\n* `chrome` (auto [polyfilled](https://github.com/mozilla/webextension-polyfill))\n* `opera` (auto [polyfilled](https://github.com/mozilla/webextension-polyfill))\n* `firefox`\n* `edge`\n# Features\n## react.js\nWorks with react.js out of the box!  \nRun `$ npm i react react-dom` and you are ready to go.\n## packing\nThe `build` task creates bundles for:\n* Firefox (`.xpi`)\n* Chrome (`.zip`)\n* Opera (`.crx`)\n* Edge (`.zip`)\n## manifest validation\nValidates your `manifest.json` while compiling.\n## manifest defaults\nUses default fields (`name`, `version`, `description`) from your `package.json`\n## manifest vendor keys\nAllows you to define vendor specific manifest keys.\n### Example\n\n`manifest.json` \n```\n"name": "my-extension",\n"__chrome__key": "yourchromekey",\n"__chrome|opera__key2": "yourblinkkey"\n```\nIf the vendor is `chrome` it compiles to:\n```\n"name": "my-extension",\n"key": "yourchromekey",\n"key2": "yourblinkkey"\n```\nIf the vendor is `opera` it compiles to:\n```\n"name": "my-extension",\n"key2": "yourblinkkey"\n```\nelse it compiles to:\n\n```\n"name": "my-extension"\n```\n\n## polyfill\n  \nThe [webextension standard](https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions) is currently only supported by firefox and edge. This toolbox adds the necessary polyfills for chrome and opera. \n\nThis way many webextension apis will work in chrome and opera out of the box. \n  \nIn addition to that, this toolbox comes with <a href="https://github.com/babel/babel/tree/master/packages/babel-preset-env">babel-preset-env</a>.\n  \n\n# Usage\n\n## Install\n\n```shell\n$ npm install -g webextension-toolbox\n```\n\n## Development\n\n* Compiles the extension via webpack to `dist/<vendor>`.\n* Watches all extension files and recompiles on demand.\n* Reloads extension or extension page as soon something changed.\n* Sets `process.env.NODE_ENV` to `development`.\n* Sets `process.env.VENDOR` to the current vendor.\n\n### Syntax\n\n```shell\n$ webextension-toolbox dev <vendor> [..options]\n```\n\n### Examples\n\n```shell\n$ webextension-toolbox dev --help\n$ webextension-toolbox dev chrome\n$ webextension-toolbox dev firefox\n$ webextension-toolbox dev opera\n$ webextension-toolbox dev edge\n```\n\nNote: For Microsoft Edge, it is not allowed to connect to localhost with WebSocket.\nYou need to disable "Include all local (intranet) sites not listed in other zones" under "Internet options":\n![GIF Animation showing a cursor turning off Include all local (intranet) sites not listed in other zones option under Internet properties, Security, Local intranet](https://i.imgur.com/puhk4gZ.gif)\n\nor using Registry Editor (regedit):\n```\nWindows Registry Editor Version 5.00\n\n[HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap]\n"IntranetName"=dword:00000000\n```\n\n## Build\n\n* Compile extension via webpack to `dist/<vendor>`.\n* Minifies extension Code.\n* Sets `process.env.NODE_ENV` to `production`.\n* Sets `process.env.VENDOR` to the current vendor.\n* Packs extension to `packages`.\n\n### Syntax\n\n```shell\nUsage: build [options] <vendor>\n\nCompiles extension for production\n\nOptions:\n  -s, --src [src]                       specify source directory (default: "app")\n  -t, --target [target]                 specify target directory (default: "dist/[vendor]")\n  -d, --devtool [devtool]               controls if and how source maps are generated (default: false)\n  -m, --no-minimize                     disables code minification\n  -v, --vendorVersion [vendorVersion]   last supported vendor (default: current)\n  -h, --help                            output usage information\n```\n\n## Browser API\n\nAlways use the [webextension browser api](https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions). Webextension-Toolbox will polyfill it for you in chrome and opera.\n\n## Entry points\n\nAll javascript files located at the root of your `./app` or `./app/scripts` directory will create a seperate bundle.\n\n| app                                 | dist                                  |\n|-------------------------------------|---------------------------------------|\n| `app/background.js`                 | `dist/<vendor>/background.js`         |\n| `app/scripts/background.js`         | `dist/<vendor>/scripts/background.js` |\n| `app/some-dir/some-file.js`         | Will be ignored as entry file.        |\n| `app/scripts/some-dir/some-file.js` | Will be ignored as entry file.        |\n\n## Customizing webpack config\n\nIn order to extend our usage of `webpack`, you can define a function that extends its config via `webextension-toolbox-config.js`.\n\n```js\n// This file is not going through babel transformation.\n// So, we write it in vanilla JS\n// (But you could use ES2015 features supported by your Node.js version)\nconst webpack = require(\'webpack\')\n\nmodule.exports = {\n  webpack: (config, { dev, vendor }) => {\n    // Perform customizations to webpack config\n\n    // Important: return the modified config\n    return config\n  }\n}\n```\n\nAs WebExtension Toolbox uses webpack\xe2\x80\x99s [devtool]( https://webpack.js.org/configuration/devtool/) feature under the hood, you can also customize the desired devtool with the `--devtool` argument.\nFor example, if you have problems with source maps on Firefox, you can try the following command:\n```\nwebextension-toolbox build firefox --devtool=inline-cheap-source-map\n```\nPlease see Issue #58 for more information on this\n\n# CI/CD\n\nFor testing WebExtension Toolbox, we rely mainly on [Azure Pipelines](https://docs.microsoft.com/azure/devops/pipelines/) and [Travis](https://travis-ci.org/).\n\nWe try to target every platform our users use: Linux, macOS or Windows\nRegarding Node.js versions, we try to target what would our users would use:\n* Last version in Maintenance LTS (currentl: v8)\n* Active LTS (currently v10)\n* Current (currently: v11)\n\nCurrently, passing all tests is required to merge a Pull Request\n## Test matrix\n<table>\n  <tr>\n    <th>CI/CD vendor</th>\n    <th>Operating System</th>\n    <th>NodeJS versions</th>\n  </tr>\n  <tr>\n    <td rowspan="3">Azure Pipelines</td>\n    <td>Ubuntu (ubuntu-16.04)</td>\n    <td rowspan="3">\n      <ul>\n        <li>8.x</li>\n        <li>10.x</li> \n        <li>11.x</li>\n      </ul>\n    </td>\n  </tr>\n  <tr>\n    <td>macOS (macOS-10.13)</td>\n  </tr>\n  <tr>\n    <td>Windows (win1803)</td>\n  </tr>\n  <tr>\n    <td>Travis CI</td>\n    <td>Ubuntu Xenial 16.04</td>\n    <td>\n      <ul>\n        <li>lts (10.x)</li>\n        <li>current (11.x)</li>\n      </ul>\n    </td>\n  </tr>\n</table>\nIn other words, every pull request goes through on 11 test environment\n\n\n# FAQ\n\n## What is the difference to [web-ext](https://github.com/mozilla/web-ext)?\n\nIf want to develop browser extensions for Firefox only [web-ext](https://github.com/mozilla/web-ext) might be a better fit for you, since it supports, extension signing, better manifest validation and auto mounting.\n\nNevertheless if you want to develop cross browser extensions using\n\n* the same development experience in every browser\n* a single codebase\n* react\n* and custom webpack configuration\n\nwebextension-toolbox might be your tool of choice. \n\n# License\n\nCopyright 2018 Henrik Wenz\n\nThis project is free software released under the MIT license.\n'