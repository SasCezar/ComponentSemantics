b'# Firefox GNOME Theme\n\n![Screenshot of the theme](screenshot.png)\n![Screenshot of the theme](screenshot2.png)\n\n## Description\n\nThis is a bunch of CSS code to make Firefox 57+ look closer to GNOME\'s default\ntheme. It styles the UI and internal Firefox\' pages like `about:` and\n`view-source:`. Both light and dark variants are supported.\n\nThe `master` branch track current Firefox stable. If you need support\nfor older versions, they are archived under version-specific git tags. Eg. if\nyou\'re using Firefox 57, switch to the `57` tag after cloning the repo:\n\n```sh\ngit checkout 57\n```\n\n## Installation\n\nExtensions can no longer style UI elements, but we can still use good old\n`userChrome.css` and `userContent.css` files. Just drop this repo to your\n`chrome` directory:\n\n1. Go to your Firefox profile\'s directory, if it\'s located in the default\nlocation, this should work:\n\n\t```sh\n\tcd ~/.mozilla/firefox/*.default\n\t```\n\n2. Create a `chrome` directory if it doesn\'t exist.\n\n\t```sh\n\tmkdir -p chrome\n\tcd chrome\n\t```\n\n3. Clone this repo to a subdirectory:\n\n\t```sh\n\tgit clone https://github.com/kurogetsusai/firefox-gnome-theme.git\n\t```\n\n4. Create single-line user CSS files if non-existent or empty (at least one line\nis needed for `sed`):\n\n\t```sh\n\t[[ -s userChrome.css ]] || echo >> userChrome.css\n\t[[ -s userContent.css ]] || echo >> userContent.css\n\t```\n\n5. Import this theme at the beginning of the CSS files (all `@import`s must come\nbefore any existing `@namespace` declarations):\n\n\t```sh\n\tsed -i \'1s/^/@import "firefox-gnome-theme\\/userChrome.css";\\n/\' userChrome.css\n\tsed -i \'1s/^/@import "firefox-gnome-theme\\/userContent.css";\\n/\' userContent.css\n\t```\n\n6. Enable the theme in the `firefox-gnome-theme/userChrome.css` file. Open it\nwith a text editor and follow instructions to enable one of the theme variants.\nYou can also enable extra features here. Keep in mind this file might change in\nfuture versions and your configuration will be lost. You can copy the `@import`s\nyou want to enable to the `userChrome.css` file directly in your `chrome`\ndirectory if you want it to survive updates. Remember all `@import`s must be at\nthe top of the file, before other statements.\n\n\tThe GTK theme variant must match the variant you picked for this Firefox\ntheme, which means you must either enable (for the dark variant) or disable (for\nthe light one) global dark theme in GNOME Tweak Tools, or alternatively, you\ncan run Firefox with a specific variant without changing the global theme by\nsupplying the `GTK_THEME` variable like this:\n\n\t```sh\n\t# for the dark theme\n\tGTK_THEME=Adwaita:dark firefox\n\t# for the light one\n\tGTK_THEME=Adwaita:light firefox\n\t```\n\n7. Optionally you can enable styling of Firefox\' internal pages in the\n`userContent.css` file analogous to the `userChrome.css` file.\n\nYou might want to adjust your default link colors so they are more visible on\ndark background, either drop the code below into your\n`(firefox profile)/user.js` file or change them manually in `about:config`.\n\n```js\nuser_pref("browser.active_color", "#cc1a1a");\nuser_pref("browser.anchor_color", "#0a8dff");\nuser_pref("browser.visited_color", "#0871cc");\nuser_pref("browser.display.background_color", "#2e3436");\nuser_pref("browser.display.foreground_color", "#ccc");\n```\n\nYou can\'t get rid of the title bar for now (except for Fedora, where you can\nenable CSD), but you will be able to do it in Firefox 60, when Firefox adds\nclient-side decoration support. For now you can use a GNOME extension like\n[No Title Bar](https://extensions.gnome.org/extension/1267/no-title-bar/)\nto hide it.\n\n## Broken stuff\n\nIcons might appear black where they should be white on some systems. I have no\nidea why, but you can adjust them in the `ui/theme.css` file, look for\n`filter: invert`.\n\nI haven\'t finished styling the new tab page. I just replaced it with a\nblank page, because I don\'t like all that clutter anyway, but feel free to\nfinish it yourself (my attempts are in the `userContent.css` file, look for\n`about:newtab`).\n\nFeel free to report issues here on GitHub and share your ideas if you know how\nto fix them. Since I can\'t do everything alone, this project relies on\ncontributors, many existing features were added by our contributors, so don\'t\nhesitate to become one of them!\n\n## Development\n\nIf you wanna mess around the styles and change something, you might find these\nthings useful.\n\nTo use the Inspector to debug the UI, open the developer tools (F12) on any\npage, go to options, check both of those:\n\n- Enable browser chrome and add-on debugging toolboxes\n- Enable remote debugging\n\nNow you can close those tools and press Ctrl+Alt+Shift+I to Inspect the browser\nUI.\n\nAlso you can inspect any GTK3 application, for example type this into a terminal\nand it will run Epiphany with the GTK Inspector, so you can check the CSS styles\nof its elements too.\n\n```sh\nGTK_DEBUG=interactive epiphany\n```\n\nFeel free to use any parts of my code to develop your own themes, I don\'t force\nany specific license on your code.\n'