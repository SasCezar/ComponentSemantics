b'## Firefox Application Services\n\n_A platform for building cloud-powered applications that target Firefox users_\n\n### What\'s this all about?\n\nThis repository hosts the code and docs needed to integrate with the products offered by the Firefox\n[Application Services](https://mana.mozilla.org/wiki/display/CLOUDSERVICES/Application+Services+Home)\nteam.\n\nIf you are interested in getting involved in the development of those products\nthen you\'re in the right place! Please review the more detailed guide on\n[how to contribute](docs/contributing.md) to this project as well as\nthe [Community Participation Guidelines](https://www.mozilla.org/en-US/about/governance/policies/participation/).\n\nIf that\'s not why you\'re here, then instead you might enjoy:\n\n* The [Application Services Product\n  Portal](https://mozilla.github.io/application-services/), if you\'re looking to\n  use those products in your application.\n* The [Application Services Team Home](https://mana.mozilla.org/wiki/display/CLOUDSERVICES/Application+Services+Home)\n  on Mana, if you\'re trying to find out more about how we build them.\n\n\n### Overview\n\nThis repository is used to build client-side libraries for integrating with\nFirefox Application services such as Firefox Accounts, Firefox Sync and Push.\nEach of these is called a "component" and is built using a core of shared code\nwritten in Rust, wrapped with native language bindings for different platforms.\n\nThe end result is an application that can be assembled from re-usable components\nthat are largely shared across platforms, like this:\n\n[![component diagram](https://docs.google.com/drawings/d/e/2PACX-1vTPOIIBsqvkWfecYOziEnv-hrkB9QbpZwcHyeyUB-p3-eP1w9L87vwnJMiGt-eO5r-K-XcHPl_YwjvU/pub?w=727&h=546)](https://docs.google.com/drawings/d/1WRv2AaOsutNdL8_E5UDsYg1sC6FKRJ9P0bBSoI7E19s/)\n\nThe code for these components is organized as follows:\n\n* [./libs/](libs) contains infratructure for building some native dependencies,\n  such as NSS.\n* [./components/](components) contains the source for each component, and its\n  FFI bindings.\n  * See [./components/logins/](components/logins) for an example, where you can\n    find:\n    * The shared [rust code](components/logins/src).\n    * The mapping into a [C FFI](components/logins/ffi).\n    * The [Kotlin bindings](components/logins/android) for use by Android\n      applications.\n    * The [Swift bindings](components/logins/ios) for use by iOS applications.\n* [./megazords/](megazords) contains infrastructure for bundling multiple rust\n  components into a single build artifact called a "[megazord library](docs/design/megazords.md)"\n  for easy consumption by applications.\n\nFor more details on how the client libraries are built and published, please see\nthe [Guide to Building a Rust Component](docs/howtos/building-a-rust-component.md).\n\nThis repository also hosts the [website source](website) for the [Application\nServices Product Portal](https://mozilla.github.io/application-services/), which\nprovides consumer-facing documentation on how to integrate with various\nApplication services products.\n\nThe [./docs/](docs) directory holds intenal documentation about working with the\ncode in this repository, and is most likely only of interest to contributors.\n\n### Components\n\nThe currently-available Rust Components in this repo are:\n\n* [fxa-client](components/fxa-client) - for applications that need to sign in\n  with FxA, access encryption keys for sync, and more.\n* [sync15](components/sync15) - shared library for accessing data in Firefox\n  Sync\n* [logins](components/logins) - for storage and syncing of a user\'s saved login\n  credentials\n* [places](components/places) - for storage and syncing of a user\'s saved\n  browsing history\n* [push](components/push) - for applications to receive real-time updates via\n  WebPush\n* [rc_log](components/rc_log) - for connecting component log output to the\n  application\'s log stream\n* [support](components/support) - low-level utility libraries\n  * [support/ffi](components/support/ffi) - utilities for building a component\'s\n    FFI bindings\n  * [support/sql](components/support/sql) - utilities for storing data locally\n    with SQL\n'