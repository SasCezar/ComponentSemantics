b'# ShaderConductor\n\n[![Build Status](https://dev.azure.com/msft-ShaderConductor/public/_apis/build/status/ShaderConductor-CI)](https://dev.azure.com/msft-ShaderConductor/public/_build/latest?definitionId=1)\n[![License](https://img.shields.io/github/license/mashape/apistatus.svg)](LICENSE)\n\n\nShaderConductor is a tool designed for cross-compiling HLSL to other shading languages.\n\n## Features\n\n* Converts HLSL to readable, usable and efficient GLSL\n* Converts HLSL to readable, usable and efficient ESSL\n* Converts HLSL to readable, usable and efficient Metal Shading Language (MSL)\n* Converts HLSL to readable, usable and efficient old shader model HLSL\n* Supports all stages of shaders, vertex, pixel, hull, domain, geometry, and compute.\n\nNote that this project is still in an early stage, and it is under active development.\n\n## Architecture\n\nShaderConductor is not a real compiler. Instead, it glues existing open source components to do the cross-compiling.\n1. [DirectX Shader Compiler](https://github.com/Microsoft/DirectXShaderCompiler) to compile HLSL to [DXIL](https://github.com/Microsoft/DirectXShaderCompiler/blob/master/docs/DXIL.rst) or [SPIR-V](https://www.khronos.org/registry/spir-v/),\n1. [SPIRV-Cross](https://github.com/KhronosGroup/SPIRV-Cross) to convert SPIR-V to target shading languages.\n\n![Architecture](Doc/Arch.svg)\n\n## Prerequisites\n\n* [Git](http://git-scm.com/downloads). Put git into the PATH is recommended.\n* [Visual Studio 2017](https://www.visualstudio.com/downloads). Select the following workloads: Universal Windows Platform Development and Desktop Development with C++.\n* [CMake](https://www.cmake.org/download/). Version 3.9 or up. It\'s highly recommended to choose "Add CMake to the system PATH for all users" during installation.\n* [Python](https://www.python.org/downloads/). Version 2.7 or up. You need not change your PATH variable during installation.\n\n## Building\n\nShaderConductor has been tested on Windows, Linux, and macOS.\n\n### The script way:\n\n```\n  BuildAll.py <BuildSystem> <Compiler> <Architecture> <Configuration>\n```\nwhere,\n* \\<BuildSystem\\> can be ninja or vs2017. Default is vs2017.\n* \\<Compiler\\> can be vc141 on Windows, gcc or clang on Linux, clang on macOS.\n* \\<Architecture\\> must be x64 (for now).\n* \\<Configuration\\> can be Debug, Release, RelWithDebInfo, or MinSizeRel. Default is Release.\n \nThis script automatically grabs external dependencies to External folder, generates project file in Build/\\<BuildSystem\\>-\\<Compiler\\>-\\<Platform\\>-\\<Architecture\\>[-\\<Configuration\\>], and builds it.\n\n### The manual way:\n\n```\n  mkdir Build\n  cd Build\n  cmake -G "Visual Studio 15" -T host=x64 -A x64 ../\n  cmake --build .\n```\n\nAfter building, the output file ShaderConductor.dll can be located in \\<YourCMakeTargetFolder\\>/Bin/\\<Configuration\\>/. It depends on dxcompiler.dll in the same folder.\n\n### Artifacts\n\nYou can download [the prebuilt binaries generated by CI system](https://dev.azure.com/msft-ShaderConductor/public/_build/latest?definitionId=1&view=results). Currently, artifacts for Windows, Linux, macOS are published every commit.\n\n## License\n\nShaderConductor is distributed under the terms of MIT License. See [LICENSE](LICENSE) for details.\n\n## Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n'