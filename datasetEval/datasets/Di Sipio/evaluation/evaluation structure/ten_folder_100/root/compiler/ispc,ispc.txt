b'[![TravisCI build status (Linux)](https://travis-ci.com/ispc/ispc.svg?branch=master)](https://travis-ci.com/ispc/ispc)\n[![Appveyor build status (Windows)](https://ci.appveyor.com/api/projects/status/xfllw9vkp3lj4l0v/branch/master?svg=true)](https://ci.appveyor.com/project/ispc/ispc/branch/master)\n\nIntel(r) SPMD Program Compiler\n==============================\n\n``ispc`` is a compiler for a variant of the C programming language, with\nextensions for\n[single program, multiple data](http://en.wikipedia.org/wiki/SPMD)\nprogramming.  Under the SPMD model,\nthe programmer writes a program that generally appears to be a regular\nserial program, though the execution model is actually that a number of\n*program instances* execute in parallel on the hardware.\n\nOverview\n--------\n\n``ispc`` compiles a C-based SPMD programming language to run on the SIMD\nunits of CPUs; it frequently provides a 3x or more speedup on CPUs with\n4-wide vector SSE units and 5x-6x on CPUs with 8-wide AVX vector units,\nwithout any of the difficulty of writing intrinsics code.  Parallelization\nacross multiple cores is also supported by ``ispc``, making it\npossible to write programs that achieve performance improvement that scales\nby both number of cores and vector unit size.\n\nThere are a few key principles in the design of ``ispc``:\n\n  * To build a small set of extensions to the C language that\n    would deliver excellent performance to performance-oriented\n    programmers who want to run SPMD programs on the CPU.\n\n  * To provide a thin abstraction layer between the programmer\n    and the hardware--in particular, to have an execution and\n    data model where the programmer can cleanly reason about the\n    mapping of their source program to compiled assembly language\n    and the underlying hardware.\n\n  * To make it possible to harness the computational power of SIMD\n    vector units without the extremely low-programmer-productivity\n    activity of directly writing intrinsics.\n\n  * To explore opportunities from close coupling between C/C++\n    application code and SPMD ``ispc`` code running on the\n    same processor--to have lightweight function calls between\n    the two languages and to share data directly via pointers without\n    copying or reformatting.\n\n``ispc`` is an open source compiler with the BSD license.  It uses the\nremarkable [LLVM Compiler Infrastructure](http://llvm.org) for back-end\ncode generation and optimization and is [hosted on\ngithub](http://github.com/ispc/ispc). It supports Windows, Mac, and\nLinux, with both x86 and x86-64 targets.  It currently supports the SSE2,\nSSE4, AVX, AVX2, and AVX512 instruction sets.\n\nFeatures\n--------\n\n``ispc`` provides a number of key features to developers:\n\n  * Familiarity as an extension of the C programming\n    language: ``ispc`` supports familiar C syntax and\n    programming idioms, while adding the ability to write SPMD\n    programs.\n\n  * High-quality SIMD code generation: the performance\n    of code generated by ``ispc`` is often close to that of\n    hand-written intrinsics code.\n\n  * Ease of adoption with existing software\n    systems: functions written in ``ispc`` directly\n    interoperate with application functions written in C/C++ and\n    with application data structures.\n            \n  * Portability across over a decade of CPU\n    generations: ``ispc`` has targets for SSE2, SSE4, AVX, AVX2, and AVX512.\n\n  * Portability across operating systems: Microsoft\n    Windows, macOS, and Linux are all supported\n    by ``ispc``.\n\n  * Debugging with standard tools: ``ispc``\n    programs can be debugged with standard debuggers.\n\nAdditional Resources\n--------------------\n\nPrebuilt ``ispc`` binaries for Windows, macOS and Linux can be downloaded\nfrom the [ispc downloads page](http://ispc.github.com/downloads.html).\nLatest ``ispc`` binaries corresponding to master branch can be downloaded\nfrom Appveyor for [Linux](https://ci.appveyor.com/api/projects/ispc/ispc/artifacts/build%2Fispc-trunk-linux.tar.gz?job=Environment%3A%20APPVEYOR_BUILD_WORKER_IMAGE%3DUbuntu1604%2C%20LLVM_VERSION%3Dlatest) and [Windows](https://ci.appveyor.com/api/projects/ispc/ispc/artifacts/build%2Fispc-trunk-windows.zip?job=Environment%3A%20APPVEYOR_BUILD_WORKER_IMAGE%3DVisual%20Studio%202017%2C%20LLVM_VERSION%3Dlatest)\nSee also additional\n[documentation](http://ispc.github.com/documentation.html) and additional\n[performance information](http://ispc.github.com/perf.html).\n'