b"# [J2CL](http://j2cl.io)  &middot; [![Build Status](https://secure.travis-ci.org/google/j2cl.png?branch=master)](http://travis-ci.org/google/j2cl)\n\nSeamless Java in JavaScript applications that tightly optimizes with\n[Closure Compiler](https://github.com/google/closure-compiler)\n\n---\nJ2CL is a powerful, simple and lightweight transpiler from Java to Closure style\nJavaScript.\n\n* **Get the best out of Java and JavaScript.** You no longer need to choose between\nthe two or lock into a specific framework or a language. Choose the right language\nat the right place and hire the best talent for the job.\n\n* **Get it correct the first time.** The robust run-time type checking based on\nthe strong Java type system combined with the advanced cross language type checks\ncatches your mistakes early on.\n\n* **Provides massive code reuse.** J2CL closely follows the Java language\n[semantics](docs/limitations.md). This reduces surprises, enables reuse across\ndifferent platforms and brings most popular Java libraries into your toolkit\nincluding [Guava](https://github.com/google/guava), [Dagger](https://dagger.dev/)\nand [AutoValue](https://github.com/google/auto/tree/master/value).\n\n* **Modern, fresh and blazing fast.** Powered by [Bazel](https://bazel.build/),\nJ2CL provides a fast and modern development experience that will make you smile\nand keep you productive.\n\n* **Road tested and trusted.** J2CL is the underlying technology of the most\nadvanced GSuite apps developed by Google including GMail, Inbox, Docs, Slides\nand Calendar.\n\n\nGuides\n------\n- [Getting Started](docs/getting-started.md)\n- [JsInterop Cookbook](docs/jsinterop-by-example.md)\n- [J2CL Best Practices](docs/best-practices.md)\n- [Emulation Limitations](docs/limitations.md)\n- [Bazel Tutorial](https://docs.bazel.build/versions/master/tutorial/java.html)\n- [Bazel Best Practices](https://docs.bazel.build/versions/master/best-practices.html)\n\n\nGet Support\n------\n- Please subscribe to [J2CL announce](http://groups.google.com/forum/#!forum/j2cl-announce) for announcements (low traffic).\n- Please report [bugs](https://github.com/google/j2cl/issues/new?template=bug_report.md&labels=bug)\nor file [feature requests](https://github.com/google/j2cl/issues/new?template=feature_request.md&labels=enhancement)\nvia [issue tracker](https://github.com/google/j2cl/issues).\n- For other questions you can also use the [issue tracker](https://github.com/google/j2cl/issues/new?template=question.md&labels=question) for now.\n\n\nCaveat Emptor\n-------------\nJ2CL is production ready and actively used by many of Google's products, but the\nprocess of adapting workflows and tooling for the open-source version is not yet\nfinalized and breaking changes will most likely be introduced.\n\nWe are actively working on adapting more pieces including\n[Junit4](https://junit.org/junit4/) emulation and faster pruning for an even\nbetter development experience.\n\nLast, the workflow is **not** yet supported in Windows. You can contribute to\nmake this a reality. Coordinate and follow the progress of this effort\n[here](https://github.com/google/j2cl/issues/9).\nFor developers that want to use Windows as their platform we recommend\ninstalling under WSL (Windows Subsystem for Linux).\n\nStay tuned!\n\n\nJ2CL vs. GWT?\n---\nIn early 2015, Google GWT team made a difficult but necessary decision to work\non a new alternative product to enable Java for the Web.\n\nIt was mostly due to changing trends in the web ecosystem and our new internal\ncustomers who were looking at Java on the Web not as an isolated ecosystem but\nan integral part of their larger stack. It required a completely new vision\nto create tools from the ground up, that are tightly integrated with the rest of\nthe ecosystem. A modern architecture, that is reliable, fast and provides a\nquick iteration cycle.\n\nThere was no practical way to achieve those goals completely incrementally out\nof GWT. We started from scratch using everything we learned from working on GWT\nover the years. In the meantime, we kept GWT steering committee members in the\nloop and gave contributors very early access so they could decide to build the\nnext version of GWT on J2CL.\n\nThe strategy has now evolved GWT3 to an SDK focused on libraries and enterprise\ntooling which was one of the strongest points of GWT all along.\n\nWe think that such separation of concerns is crucial part of the success of the\nboth projects and will provide the best results for the open source community.\n\n\nContributing\n------------\nRead how to [contribute to J2CL](CONTRIBUTING.md).\n\nLicensing\n---------\nPlease refer to [the license file](LICENSE).\n\nDisclaimers\n-----------\nJ2CL is not an official Google product and is currently in 'alpha' release for developer preview.\n"