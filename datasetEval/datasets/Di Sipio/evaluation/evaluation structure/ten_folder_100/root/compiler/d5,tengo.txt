b'<p align="center">\n  <img src="https://raw.githubusercontent.com/d5/tengolang.com/master/logo_400.png" width="200" height="200">\n</p>\n\n# The Tengo Language\n\n[![GoDoc](https://godoc.org/github.com/d5/tengo?status.svg)](https://godoc.org/github.com/d5/tengo/script)\n[![Go Report Card](https://goreportcard.com/badge/github.com/d5/tengo)](https://goreportcard.com/report/github.com/d5/tengo)\n[![Build Status](https://travis-ci.org/d5/tengo.svg?branch=master)](https://travis-ci.org/d5/tengo)\n[![Sourcegraph](https://sourcegraph.com/github.com/d5/tengo/-/badge.svg)](https://sourcegraph.com/github.com/d5/tengo?badge)\n\n**Tengo is a small, dynamic, fast, secure script language for Go.** \n\nTengo is **[fast](#benchmark)** and secure because it\'s compiled/executed as bytecode on stack-based VM that\'s written in native Go.\n\n```golang\n/* The Tengo Language */\n\nfmt := import("fmt")\n\neach := func(seq, fn) {\n    for x in seq { fn(x) }\n}\n\nsum := func(init, seq) {\n    each(seq, func(x) { init += x })\n    return init\n}\n\nfmt.println(sum(0, [1, 2, 3]))   // "6"\nfmt.println(sum("", [1, 2, 3]))  // "123"\n```\n\n> Run this code in the [Playground](https://tengolang.com/?s=0c8d5d0d88f2795a7093d7f35ae12c3afa17bea3)\n\n## Features\n\n- Simple and highly readable [Syntax](https://github.com/d5/tengo/blob/master/docs/tutorial.md)\n  - Dynamic typing with type coercion\n  - Higher-order functions and closures\n  - Immutable values\n  - Garbage collection\n- [Securely Embeddable](https://github.com/d5/tengo/blob/master/docs/interoperability.md) and [Extensible](https://github.com/d5/tengo/blob/master/docs/objects.md)\n- Compiler/runtime written in native Go _(no external deps or cgo)_\n- Executable as a [standalone](https://github.com/d5/tengo/blob/master/docs/tengo-cli.md) language / REPL\n- Use cases: rules engine, [state machine](https://github.com/d5/go-fsm), [gaming](https://github.com/d5/pbr), data pipeline, [transpiler](https://github.com/d5/tengo2lua)\n\n## Benchmark\n\n| | fib(35) | fibt(35) |  Type  |\n| :--- |    ---: |     ---: |  :---: |\n| Go | `48ms` | `3ms` | Go (native) |\n| [**Tengo**](https://github.com/d5/tengo) | `2,349ms` | `5ms` | VM on Go |\n| Lua | `1,416ms` | `3ms` | Lua (native) |\n| [go-lua](https://github.com/Shopify/go-lua) | `4,402ms` | `5ms` | Lua VM on Go |\n| [GopherLua](https://github.com/yuin/gopher-lua) | `4,023ms` | `5ms` | Lua VM on Go |\n| Python | `2,588ms` | `26ms` | Python (native) |\n| [starlark-go](https://github.com/google/starlark-go) | `11,126ms` | `6ms` | Python-like Interpreter on Go |\n| [gpython](https://github.com/go-python/gpython) | `15,035ms` | `4ms` | Python Interpreter on Go |\n| [goja](https://github.com/dop251/goja) | `5,089ms` | `5ms` | JS VM on Go |\n| [otto](https://github.com/robertkrimen/otto) | `68,377ms` | `11ms` | JS Interpreter on Go |\n| [Anko](https://github.com/mattn/anko) | `92,579ms` | `18ms` | Interpreter on Go |\n\n_* [fib(35)](https://github.com/d5/tengobench/blob/master/code/fib.tengo): Fibonacci(35)_  \n_* [fibt(35)](https://github.com/d5/tengobench/blob/master/code/fibtc.tengo): [tail-call](https://en.wikipedia.org/wiki/Tail_call) version of Fibonacci(35)_  \n_* **Go** does not read the source code from file, while all other cases do_  \n_* See [here](https://github.com/d5/tengobench) for commands/codes used_\n\n## References\n\n- [Language Syntax](https://github.com/d5/tengo/blob/master/docs/tutorial.md)\n- [Object Types](https://github.com/d5/tengo/blob/master/docs/objects.md)\n- [Runtime Types](https://github.com/d5/tengo/blob/master/docs/runtime-types.md) and [Operators](https://github.com/d5/tengo/blob/master/docs/operators.md)\n- [Builtin Functions](https://github.com/d5/tengo/blob/master/docs/builtins.md)\n- [Interoperability](https://github.com/d5/tengo/blob/master/docs/interoperability.md)\n- [Tengo CLI](https://github.com/d5/tengo/blob/master/docs/tengo-cli.md)\n- [Standard Library](https://github.com/d5/tengo/blob/master/docs/stdlib.md)\n'