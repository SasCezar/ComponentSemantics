b'<p align="center">\n  <img src="img/gleam-logo-readme.png" alt="Gleam logo">\n</p>\n\n<h1 align="center">\n  Fast, friendly, functional!\n</h1>\n\n<p align="center">\n  <a href="https://github.com/gleam-lang/gleam/releases"><img src="https://img.shields.io/github/release/gleam-lang/gleam" alt="GitHub release"></a>\n  <a href="https://webchat.freenode.net/#gleam-lang"><img src="https://img.shields.io/badge/freenode%20chat-%23gleam--lang-blue" alt="IRC: #gleam-lang on chat.freenode.net"></a>\n</p>\n\n\n<!-- A spacer -->\n<div>&nbsp;</div>\n\nGleam is a statically typed functional programming language for building\nscalable concurrent systems. It compiles to [Erlang](http://www.erlang.org/)\nand has straightforward interop with other BEAM languages such as Erlang,\nElixir and LFE.\n\nIt looks like this:\n\n```rust\npub enum Tree(value) {\n  Leaf(value)\n  Node(Tree(value), Tree(value))\n}\n\npub fn any(tree: Tree(a), check: fn(a) -> Bool) -> Bool {\n  case tree {\n    Leaf(i) -> check(i)\n    Node(left, right) -> any(left, check) || any(right, check)\n  }\n}\n\npub fn has_even_leaf(tree: Tree(Int)) -> Bool {\n  any(tree, fn(i) {\n    i % 2 == 0\n  })\n}\n```\n\nFor more information see the Gleam website: [https://gleam.run](https://gleam.run).\n'