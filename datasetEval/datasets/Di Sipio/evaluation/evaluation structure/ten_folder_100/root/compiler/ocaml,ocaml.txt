b'|=====\n| Branch `trunk` | Branch `4.10` | Branch `4.09` | Branch  `4.08`  | Branch  `4.07`  | Branch `4.06` | Branch `4.05`\n\n| image:https://travis-ci.org/ocaml/ocaml.svg?branch=trunk["TravisCI Build Status (trunk branch)",\n     link="https://travis-ci.org/ocaml/ocaml"]\n  image:https://ci.appveyor.com/api/projects/status/github/ocaml/ocaml?branch=trunk&svg=true["AppVeyor Build Status (trunk branch)",\n     link="https://ci.appveyor.com/project/avsm/ocaml"]\n| image:https://travis-ci.org/ocaml/ocaml.svg?branch=4.10["TravisCI Build Status (4.10 branch)",\n     link="https://travis-ci.org/ocaml/ocaml"]\n  image:https://ci.appveyor.com/api/projects/status/github/ocaml/ocaml?branch=4.10&svg=true["AppVeyor Build Status (4.10 branch)",\n     link="https://ci.appveyor.com/project/avsm/ocaml"]\n| image:https://travis-ci.org/ocaml/ocaml.svg?branch=4.09["TravisCI Build Status (4.09 branch)",\n     link="https://travis-ci.org/ocaml/ocaml"]\n  image:https://ci.appveyor.com/api/projects/status/github/ocaml/ocaml?branch=4.09&svg=true["AppVeyor Build Status (4.09 branch)",\n     link="https://ci.appveyor.com/project/avsm/ocaml"]\n| image:https://travis-ci.org/ocaml/ocaml.svg?branch=4.08["TravisCI Build Status (4.08 branch)",\n     link="https://travis-ci.org/ocaml/ocaml"]\n  image:https://ci.appveyor.com/api/projects/status/github/ocaml/ocaml?branch=4.08&svg=true["AppVeyor Build Status (4.08 branch)",\n     link="https://ci.appveyor.com/project/avsm/ocaml"]\n| image:https://travis-ci.org/ocaml/ocaml.svg?branch=4.07["TravisCI Build Status (4.07 branch)",\n     link="https://travis-ci.org/ocaml/ocaml"]\n  image:https://ci.appveyor.com/api/projects/status/github/ocaml/ocaml?branch=4.07&svg=true["AppVeyor Build Status (4.07 branch)",\n     link="https://ci.appveyor.com/project/avsm/ocaml"]\n| image:https://travis-ci.org/ocaml/ocaml.svg?branch=4.06["TravisCI Build Status (4.06 branch)",\n     link="https://travis-ci.org/ocaml/ocaml"]\n  image:https://ci.appveyor.com/api/projects/status/github/ocaml/ocaml?branch=4.06&svg=true["AppVeyor Build Status (4.06 branch)",\n     link="https://ci.appveyor.com/project/avsm/ocaml"]\n| image:https://travis-ci.org/ocaml/ocaml.svg?branch=4.05["TravisCI Build Status (4.05 branch)",\n     link="https://travis-ci.org/ocaml/ocaml"]\n  image:https://ci.appveyor.com/api/projects/status/github/ocaml/ocaml?branch=4.05&svg=true["AppVeyor Build Status (4.05 branch)",\n     link="https://ci.appveyor.com/project/avsm/ocaml"]\n|=====\n\n= README =\n\n== Overview\n\nOCaml is an implementation of the ML language, based on the Caml Light\ndialect extended with a complete class-based object system and a powerful\nmodule system in the style of Standard ML.\n\nOCaml comprises two compilers. One generates bytecode which is then\ninterpreted by a C program. This compiler runs quickly, generates compact\ncode with moderate memory requirements, and is portable to essentially any\n32 or 64 bit Unix platform. Performance of generated programs is quite good\nfor a bytecoded implementation.  This compiler can be used either as a\nstandalone, batch-oriented compiler that produces standalone programs, or as\nan interactive, toplevel-based system.\n\nThe other compiler generates high-performance native code for a number of\nprocessors. Compilation takes longer and generates bigger code, but the\ngenerated programs deliver excellent performance, while retaining the\nmoderate memory requirements of the bytecode compiler. The native-code\ncompiler currently runs on the following platforms:\n\n|====\n|                |  Tier 1 (actively maintained)   | Tier 2 (maintained when possible)\n\n| x86 64 bits    | Linux, macOS, Windows, FreeBSD  |  NetBSD, OpenBSD\n| x86 32 bits    | Linux, Windows                  |  FreeBSD, NetBSD, OpenBSD\n| ARM 64 bits    | Linux                           |  FreeBSD\n| ARM 32 bits    | Linux                           |  FreeBSD, NetBSD, OpenBSD\n| Power 64 bits  | Linux                           |\n| Power 32 bits  |                                 |  Linux\n| IBM Z (s390x)  | Linux                           |\n|====\n\nOther operating systems for the processors above have not been tested, but\nthe compiler may work under other operating systems with little work.\n\n\n== Copyright\n\nAll files marked "Copyright INRIA" in this distribution are copyright 1996,\n1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,\n2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019\nInstitut National de Recherche en Informatique et en Automatique (INRIA)\nand distributed under the conditions stated in file LICENSE.\n\n== Installation\n\nSee the file link:INSTALL.adoc[] for installation instructions on\nmachines running Unix, Linux, OS X and Cygwin.  For native Microsoft\nWindows, see link:README.win32.adoc[].\n\n== Documentation\n\nThe OCaml manual is distributed in HTML, PDF, and Emacs\nInfo files.  It is available at\n\nhttp://caml.inria.fr/pub/docs/manual-ocaml/\n\n== Availability\n\nThe complete OCaml distribution can be accessed at\n\nhttp://ocaml.org/docs/install.html\n\n== Keeping in Touch with the Caml Community\n\nThe OCaml mailing list is the longest-running forum for OCaml users.\nYou can email it at\n\nmailto:caml-list@inria.fr[]\n\nYou can subscribe and access list archives via the Web interface at\n\nhttps://sympa.inria.fr/sympa/subscribe/caml-list\n\nYou can also access a newer discussion forum at\n\nhttps://discuss.ocaml.org/\n\nThere also exist other mailing lists, chat channels, and various other forums\naround the internet for getting in touch with the OCaml and ML family language\ncommunity. These can be accessed at\n\nhttp://ocaml.org/community/\n\nIn particular, the IRC channel `#ocaml` on https://freenode.net/[Freenode] has a\nlong history and welcomes questions.\n\n== Bug Reports and User Feedback\n\nPlease report bugs using the issue tracker at\nhttps://github.com/ocaml/ocaml/issues\n\nTo be effective, bug reports should include a complete program (preferably\nsmall) that exhibits the unexpected behavior, and the configuration you are\nusing (machine type, etc).\n\nFor information on contributing to OCaml, see link:HACKING.adoc[] and\nlink:CONTRIBUTING.md[].\n'