b'[![Travis branch](https://img.shields.io/travis/SnowdogApps/magento2-frontools/master.svg)](https://travis-ci.org/SnowdogApps/magento2-frontools) [![Packagist](https://img.shields.io/packagist/v/snowdog/frontools.svg)](https://packagist.org/packages/snowdog/frontools) [![Packagist](https://img.shields.io/packagist/dt/snowdog/frontools.svg)](https://packagist.org/packages/snowdog/frontools) [![Greenkeeper badge](https://badges.greenkeeper.io/SnowdogApps/magento2-frontools.svg)](https://greenkeeper.io/)\n\n# Magento 2 Frontools\nSet of front-end tools for Magento 2, based on Gulp.js\n\n## Questions\nIf you want to know more about this project, let\'s join [Magento Community Engineering Slack](https://tinyurl.com/engcom-slack) and ask questions on #magefront channel.\n\n## Requirements\n* Unix-like OS (please, do not ask about Windows support)\n* Node.js [LTS version](https://nodejs.org/en/about/releases/). We recommend to use [avn](https://github.com/wbyoung/avn) to automate version switching. Required configuration is already added to repository as `.node-version` file.\n* (optional) Gulp CLI installed globally - `yarn global add gulp-cli` or `npm install -g gulp-cli`\n* Magento 2 project with SASS based theme for example [SASS version of "Blank"](https://github.com/SnowdogApps/magento2-theme-blank-sass) or [Alpaca Theme](https://github.com/SnowdogApps/magento2-alpaca-theme)\n\n## Installation\n1. Run `composer require snowdog/frontools`\n2. Go to package directory `cd vendor/snowdog/frontools`\n3. Run `yarn` or `npm install`\n4. Decide where you want to keep your config files.\nYou can store them in Frontools `config` directory or in `dev/tools/frontools/config`.\nThere is a `setup` task to copy all sample config files from the `config` to `dev/tools/frontools/config` and create a convenient symlink `tools` in the project root.\nIf you want to keep config files inside frontools `config` dir, you have to handle this manually.\n5. Define your themes in `themes.json`.\n\n## `themes.json` structure\nCheck `config/themes.json.sample` to get samples.\n- `src` - full path to theme\n- `dest` - full path to `pub/static/[theme_area]/[theme_vendor]/[theme_name]`\n- `locale` - array of available locales\n- `parent` - name of parent theme\n- `stylesDir` - (default `styles`) path to styles directory. For `theme-blank-sass` it\'s `styles`. By default Magento 2 use `web/css`.\n- `disableSuffix` - disable adding `.min` suffix using `--prod` flag.\n- `postcss` - (deafult `["autoprefixer({ overrideBrowserslist: browserslist })"]`) PostCSS plugins config. Have to be an array.\n- `modules` - list of modules witch you want to map inside your theme\n- `ignore` - array of ignore patterns\n\n## `watcher.json` structure\nCheck `config/watcher.json.sample` to get samples.\n- `usePolling` - set this to `true` to successfully watch files over a network (i.e. Docker or Vagrant) or when your watcher dosen\'t work well. Warining, enabling this option may lead to high CPU utilization! [chokidar docs](https://github.com/paulmillr/chokidar#performance)\n\n## Optional configurations for 3rd party plugins\nYou will find sample config files for theses plugins in `vendor/snowdog/frontools/config` directory.\n* Create [browserSync](https://www.browsersync.io/) configuration\n* Create [eslint](https://github.com/adametry/gulp-eslint) configuration\n* Create [sass-lint](https://github.com/sasstools/sass-lint) configuration\n* Create [stylelint](https://github.com/stylelint/stylelint) configuration\n* Create [svg-sprite](https://github.com/jkphl/gulp-svg-sprite) configuration\n\n## Tasks list\nPlase use `yarn [taskName]` or `npm run [taskName]` to avoid necessity of instaling `gulp-cli` globally.\n* `babel` - Run [Babel](https://babeljs.io/), a compiler for writing next generation JavaScript.\n  * `--theme name` - Process single theme.\n  * `--prod` - Production output - minifies and uglyfy code.\n* `clean` - Removes `/pub/static` directory content.\n* `csslint` - Run [stylelint](https://github.com/stylelint/stylelint) based tests.\n  * `--theme name` - Process single theme.\n  * `--ci` - Enable throwing errors. Useful in CI/CD pipelines.\n* `default` - type `gulp` to see this readme in console.\n* `dev` - Runs [browserSync](https://www.browsersync.io/) and `inheritance`, `babel`, `styles`, `watch` tasks.\n  * `--theme name` - Process single theme.\n  * `--disableLinting` - Disable SASS and CSS linting.\n  * `--disableMaps` - Disable inline source maps generation.\n* `emailfix` - Fixes email stylesheet for Magento < 2.3.0. [Related issue](https://github.com/MyIntervals/emogrifier/issues/296)\n  * `--prod` - Production output - minifies styles and add `.min` sufix.\n* `eslint` - Watch and run [eslint](https://github.com/adametry/gulp-eslint) on specified JS file.\n  * `--file fileName` - You have to specify what file you want to lint, fileName without .js.\n* `inheritance` - Create necessary symlinks to resolve theme styles inheritance and make the base for styles processing. You have to run in before styles compilation and after adding new files.\n* `sasslint` - Run [sass-lint](https://github.com/sasstools/sass-lint) based tests.\n  * `--theme name` - Process single theme.\n  * `--ci` - Enable throwing errors. Useful in CI/CD pipelines.\n* `setup` - Creates a convenient symlink from `/tools` to `/vendor/snowdog/frontools` and copies all sample files if no configuration exists.\n  * `--symlink name` - If you don\'t want to use `tools` as the symlink you can specify another name.\n* `styles` - Use this task to manually trigger styles processing pipeline.\n  * `--theme name` - Process single theme.\n  * `--disableMaps` - Disable inline source maps generation.\n  * `--prod` - Production output - minifies styles and add `.min` sufix.\n  * `--ci` - Enable throwing errors. Useful in CI/CD pipelines.\n* `svg` - Run [svg-sprite](https://github.com/jkphl/gulp-svg-sprite) to generate SVG sprite.\n  * `--theme name` - Process single theme.\n* `watch` - Watch for style changes and run processing tasks.\n  * `--theme name` - Process single theme.\n  * `--disableLinting` - Disable SASS and CSS linting.\n  * `--disableMaps` - Disable inline source maps generation.\n'