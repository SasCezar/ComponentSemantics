b'# Gulp Webpack Starter :octopus:\n[![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)](https://github.com/wwwebman/gulp-webpack-starter/blob/master/CONTRIBUTING.md)\n[![GitHub contributors](https://img.shields.io/github/contributors/wwwebman/gulp-webpack-starter.svg)](https://github.com/wwwebman/gulp-webpack-starter/blob/master/CONTRIBUTING.md)\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg)]()\n[![Build Status](https://travis-ci.org/wwwebman/gulp-webpack-starter.svg?branch=master)](https://travis-ci.org/wwwebman/gulp-webpack-starter)\n[![Gitter](https://img.shields.io/gitter/room/tj/git-extras.svg?style=flat-square)](https://gitter.im/gulp-webpack-starter/Lobby)\n\n**Gulp Webpack Starter** - A simple web-development toolkit using Gulp task runner and Webpack bundler. Ideal for building static HTML templates, speeding up [Wordpress](#wordpress) theme development, or any similar template-driven and front-end project.\n\n![Gulp Webpack Starter](http://webman.pro/assets/img/main/gulp-webpack-starter-webman.jpg)\n\n## List of Content\n1. [Features](#gift-features)\n1. [Getting Started?](#getting-started)\n    * [Recommendations](#closed_book-recommendations)\n    * [Static templating](#dart-static-templating)\n    * [Wordpress](#eyes-wordpress)\n1. [Configuration](#configuration)\n1. [Changelog](https://github.com/wwwebman/gulp-webpack-starter/blob/master/CHANGELOG.md)\n1. [Contributing](https://github.com/wwwebman/gulp-webpack-starter/blob/master/CONTRIBUTING.md)\n\n## :gift: Features\n|Features|Description|\n|------------------|-----------|\n|CSS| [SASS](http://sass-lang.com/), [SMACSS](https://smacss.com/), [Autoprefixer](https://github.com/postcss/autoprefixer), [clean-css](https://www.npmjs.com/package/gulp-clean-css)|\n|JS|[Webpack](https://webpack.js.org/), [Babel](http://babeljs.io/)|\n|Testing|[Jest](https://facebook.github.io/jest/)|\n|Live Reload|[BrowserSync](http://www.browsersync.io/), [Webpack Dev Middleware](https://github.com/webpack/webpack-dev-middleware), [Webpack Hot Middleware](https://github.com/glenjamin/webpack-hot-middleware)|\n|HTML| [gulp-file-include](https://www.npmjs.com/package/gulp-file-include)|\n|Images| [gulp-imagemin](https://www.npmjs.com/package/gulp-imagemin)|\n|SVG sprite| [gulp-svg-sprite](https://github.com/jkphl/gulp-svg-sprite)|\n|Deployment| [vinyl-ftp](https://www.npmjs.com/package/vinyl-ftp)|\n\n## Getting started?\n### :closed_book: Recommendations\nMake sure you have the following installed: \n* [Node.js](https://nodejs.org/)\n* [npm](https://www.npmjs.com/) or [yarn](https://yarnpkg.com/en/)\n  \n**Recommended to use node 8.9.* ([last LTS version](https://github.com/nodejs/Release#release-schedule))**\n### :dart: Static templating\n#### Step 1 - clone\n```bash\ngit clone https://github.com/wwwebman/gulp-webpack-starter <my-project-name>\ncd <my-project-name>\n```\n#### Step 2 - run\n```bash\nyarn\nyarn start\n```\nEasy, right?\n\n### :eyes: Wordpress\n#### Step 1 - install Wordpress\nInstall Wordpress on you localhost (MAMP, LAMP)\n#### Step 2  - create theme\n`cd` into your theme directory. E.g.:\n```bash\n  cd project/wp-content/themes/customTheme/\n```\n#### Step 3  - clone starter\n```bash\ngit clone https://github.com/wwwebman/gulp-webpack-starter frontEnd\ncd frontEnd\n```\n#### Step 4  - change config\nCertain defaults will need to be changed in **tasks/config.json*** for WP development.\n1. Change the global assets output, since we want to export assets to the theme root directory:\n```json \n"dist": "../" \n```\n2. Disable the `html` `run` task, since we don\xe2\x80\x99t need to compile HTML in this project:\n```json\n"html": {\n  "run": false\n},\n```\n3. Now, browserSync should use proxy instead of creating a static server:\n  * `target` should refer to the location (`pwd`) of your local WordPress installation\n  * `publicPath` should refer to the folder to which you\xe2\x80\x99re outputting the `bundle.js` file. The Reason - issue [GWS - 3](https://github.com/wwwebman/gulp-webpack-starter/issues/3)\n```json\n "proxy": {\n    "target": "localhost/project",\n    "publicPath" : "http://localhost:3333/project/wp-content/themes/customTheme/dist/assets/js",\n  }\n```\n#### Step 5 - run\n```bash\nyarn\nyarn start\n```\n\n## Commands\n```bash\nyarn <script> //alternative: npm run <script>\nyarn start //Run development mode\nyarn build //Compiles your App for production\nyarn deploy //Push production version on remote server using FTP\n```\n'