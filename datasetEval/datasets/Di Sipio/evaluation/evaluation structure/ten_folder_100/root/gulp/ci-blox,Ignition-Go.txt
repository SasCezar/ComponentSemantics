b'# Ignition Go     |  [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=NV6YA38KWC8U4)\n<small>  &nbsp;Status:</small> <img src="https://travis-ci.org/ci-blox/Ignition-Go.svg?branch=master"/> <img src="https://styleci.io/repos/49680592/shield?style=plastic&branch=master" />\n\nA Modular (HMVC) App Building Framework - complete with front end, REST api, and 2 admin areas (Admin / Secure)\n\n*LATEST NEWS: WE HAVE UPDATED TO BOOTSTRAP 4 (including buildablox) AND USE YARN INSTEAD OF BOWER. (if you want the old Bootstrap 3.3 see the previous releases)*\n\n- create "blox" modules to build enterprise class web applications\n- uses Codeigniter 3.x and Bootstrap 4.x.x\n- can be used as a quickstart project starter/boilerplate\n- *What are blox?* "Blox" are just pluggable modules or applets that are commonly used in web applications. Ignition Go includes a web-based generator (see BuildABlox). Planned example "blox" would be a bulk emailer, report manager, and many more!!!  \n\n### Documentation\nDocumentation is now available: [Ignition-Go Documentation on GitHub] (http://ci-blox.github.io/Ignition-Go/#/concepts/ACL)\nTake a look at the key concepts documents and also see the /docs folder for more.\n\n### Server Requirements (Preferred)\n\n* **PHP 5.6, 7.1, 7.2** you can run in lower (5.6) but the recommended version to use is [PHP 7.1](http://php.net/manual/en/migration70.php) for this your projects.  PHP 7.3 is now supported in the latest code.\n* **Apache 2.2+** with rewrite mod enabled\n* **MySQL 5.5+ or MariaDb**\n\n### Installing \n\n****NOTE: now using [Yarn](https://yarnpkg.com/en/) for packages (so Bower is not needed / optional).\n\n1. GIT clone this repository\n\nExample: git clone https://github.com/ci-blox/Ignition-Go.git myigoapp\n\n2. Either:<br>\n2a) use Yarn and Gulpjs (highly recommended for non-experts) - go to step 3<br>\n-or-<br>\n2b) map your webserver to the \'public\' folder to use pre-installed versions of packages<br>\n(skip to step 8)<br>\n\n3. Install NPM [node.js](http://nodejs.org/): package manager for node modules, and [install Yarn] (https://yarnpkg.com/lang/en/docs/install/) \n\n4. Change directory to new site/web app root<br>\nExample: ```cd myigoapp```\n\n5. Install all the packages and components <br>\nType: ```yarn install``` <br>\n\n6. Create an empty mySql or MariaDb database (default db name is ci_blox) and a user (default is root/no password).  Note that the database.php file in application/config contains these configuration settings.<br>\n\nExample: use a tool like HeidiSQL or phpMyAdmin and create both a database and a user with privileges that new database<br> \n\n7. Run \'gulp\' (note that gulp will run continuously in \'watch\' mode, watching for css and js changes).<br> then<br>\nEITHER type: ```gulp```<br>\nOR..  type: ```gulp serve``` \nOR..  type: ```gulp build``` which just rebuilds the JS and CSS\n\n8. (Optional, required if no gulp or in production) In Apache, map the \'public\' folder to localhost or other url\n\nExample: in your httpd-vhosts.conf file, add new ```<VirtualHost>``` section and restart Apache\n\n9. Go to http://[your-web-root-from-step-7]/install/init in your browser to finish using install wizard<br> \n\neg if you used gulp, goto http://localhost:8080/install/init<br>\nif you had created virtual host igotestlocal.com, then go to http://igotestlocal.com/install/init in your browser\n\n\n### Features\n\nIgnition Go is a jumpstart for your rapid development:\n* Multi-faceted (e.g. Frontend Website, Authorized User Only modules, Admin Panel, and API) website in a single application\n* Modular design using CodeIgniter HMVC extension\n* Custom config files (sites.php, locale.php) for easy configuration of website behavior\n* Frontend with multiple themes (with over 16 free Bootswatch themes)\n* Admin Panel with AdminLTE v2 theme\n* Includes usage of many other 3rd party optional libraries via Composer, NPM or Yarn\n* API Site to handle RESTful endpoints\n* User authentication (optional) for secure area in Frontend Website (Sign Up, Login, Forgot Password, et al)\n* User authentication for Admin Panel (Login, Change Password, et al)\n* Preset layouts and templates\n* Preset asset pipeline (e.g. minify scripts, image optimization) via Gulp (reference from [gulp-starter 2.0 branch](https://github.com/greypants/gulp-starter/tree/2.0))\n* Buildablox blox module/form builder to generate blox and CRUD form views with Bootstrap theme, form validation\n* Breadcrumb and Pagination handling\n* Multilingual support\n* Email config setup\n* CLI utility functions (e.g. cron job, database backup)\n* Guzzle client integrated as library (use instead of Curl)\n* Use gulp serve to instantly see updates to code\n\n\n### Folder Structure\n\nFolder structure (most but not all folders shown). **=not available yet\n\n```\napplication/                    --- Main application (CodeIgniter) source folder\n    config/                     --- Config files\n        production/             --- Override Configuration when ENVIRONMENT is set as "production"\n    controllers/                --- Controllers for Frontend Website; extends from MX_Controller, Base_Controller or Front_Controller\n        Cli.php                 --- Utility function that can only be called from command line\n        Home.php                --- Default controller for Frontend Website        \n    core/                       --- Extending CodeIgniter core classes; can also be used within modules (MY_????.php); Also extendable controllers here\n    helpers/                    --- Contains custom helper functions being used throughout this repo\n    language/                   --- Preset language files\n    lib/                        --- Custom libraries (e.g. Data Importer)\n    models/                     --- Sample model extending from MY_Model\n    toolblox/ **                --- Each blox module can be installed or removed\n    modules/                    --- Each module can be accessed by http://{base_url}/{module_name}/{module_controller}/, etc.\n        admin/                  --- Module for Admin Panel\n            config/             --- Configuration for Admin Panel (overriding application/config/)\n            controllers/        --- Controllers for Admin Panel; also extends from MY_Controller\n            helpers/            --- Helper classes, e.g. to generate AdminLTE widgets\n            lib/                --- Libraries admin \n            models/             --- Models only being used in Admin panel\n            views/              --- Views for Admin Panel; can reuse Frontend views, or override by using same path/filename\n        api/                    --- A module specific for REST API endpoints\n        buildablox/             --- A module to generate and add/remove blox\n        logs/                   --- A module for viewing the daily logs\n        securinator/            --- A module for roles, permissions, security settings\n        translate/              --- A module to edit  (and auto-generate**) translations\n    third_party/\n        MX/                     --- Required for HMVC extension\n    views/                      --- Views for Frontend Website\npublic/                         --- SITE ROOT (point Apache here)\npublic/assets/\n    css/                        --- Custom CSS files append to each site\n    dist/                       --- Minified scripts, stylesheets (and optionally) optimized images via Gulp tasks\n    fonts/                      --- Font files copied via Gulp tasks\n    img/                        --- Source image files before optimization\n    js/                         --- Custom CSS files append to each site\n    uploads/                    --- Default directory of upload files, where permission should set as writable\ngulpfile.js/                    --- Task runner following gulp-starter 2.0 practice\nsql/                            --- MySQL files\nigocore/                         --- Ignition Go core files\nigocore/system/                         --- CodeIgniter core files (clean CI3 installation with modifications only to reference IGO core)\n```\n\n### Asset Customization (e.g. additional js/css files)\n\nA gulp configuration (**gulpfile.js**) is included. It utilizes package and component tools from these sites:\n* NPM [node.js](http://nodejs.org/): package manager for node modules\n* [Yarn](https://yarnpkg.com/): package manager\n* (DEPRECATED) Bower [bower](http://bower.io/): manager for bower components \n* GulpJS [gulp](http://gulpjs.com/): task runner to compile, combine, and minify\n* Guzzle [guzzle](http://guzzlephp.com/): integrated for use as a REST client or for complex curl operations\n\n### Help wanted please: contact us to help enhance this amazing web app builder!  \nPlease contact us to contribute.\n\n### Acknowledgements\nSpecial thanks to the [Bonfire](http://cibonfire.com) project and those who contributed to it - many features and infrastructure concepts were inspired or incorporated outright from that project.  Also thanks to all the projects like GuzzlePHP and countless others that are open source, whose components are incorporated and allow this initiative to exist.  Finally, thanks especially to the CodeIgniter team, with whom CodeIgniter continues to thrive!\n'