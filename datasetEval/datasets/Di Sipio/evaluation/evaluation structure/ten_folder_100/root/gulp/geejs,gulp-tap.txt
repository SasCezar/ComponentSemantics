b'# gulp-tap [![Build Status](https://travis-ci.org/geejs/gulp-tap.svg?branch=master)](https://travis-ci.org/geejs/gulp-tap) [![Coverage Status](https://coveralls.io/repos/github/geejs/gulp-tap/badge.svg?branch=master)](https://coveralls.io/github/geejs/gulp-tap?branch=master) [![Dependencies Status](https://david-dm.org/geejs/gulp-tap.svg)](https://david-dm.org/geejs/gulp-tap)\n\nEasily tap into a pipeline.\n\n## Install\n\n`npm install gulp-tap --save-dev`\n\n## Uses\n\nSome filters like `gulp-coffee` process all files. What if you want to process\nall JS and Coffee files in a single pipeline. Use `tap` to filter out `.coffee`\nfiles and process them through the `coffee` filter and let JavaScript files\npass through.\n\n```js\ngulp.src("src/**/*.{coffee,js}")\n    .pipe(tap(function(file, t) {\n        if (path.extname(file.path) === \'.coffee\') {\n            return t.through(coffee, []);\n        }\n    }))\n    .pipe(gulp.dest(\'build\'));\n```\n\nWhat if you want to change content like add a header? No need for a separate\nfilter, just change the content.\n\n```js\ntap(function(file) {\n    file.contents = Buffer.concat([\n        new Buffer(\'HEADER\'),\n        file.contents\n    ]);\n});\n```\n\nIf you do not return a stream, tap forwards your changes.\n\n## Examples\n\nSee [Wiki](https://github.com/geejs/gulp-tap/wiki) for more examples.\n\n## License\n\nThe MIT License (MIT)\n'