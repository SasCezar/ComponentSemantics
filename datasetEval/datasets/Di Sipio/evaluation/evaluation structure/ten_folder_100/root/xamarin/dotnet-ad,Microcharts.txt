b'# Microcharts\n\n**Microcharts** is an extremely simple charting library for a wide range of platforms (see *Compatibility* section below), with shared code and rendering for all of them!\n\n## Gallery\n \n![gallery](Documentation/images/Gallery.png)\n\n## Install\n\nAvailable on NuGet\n\n**NET Standard 1.4, Xamarin.iOS, Xamarin.Android, UWP**\n\n[![NuGet](https://img.shields.io/nuget/v/Microcharts.svg?label=NuGet)](https://www.nuget.org/packages/Microcharts/)\n\n\n**Xamarin.Forms (.NET Standard 1.4)**\n\n[![NuGet](https://img.shields.io/nuget/v/Microcharts.Forms.svg?label=NuGet)](https://www.nuget.org/packages/Microcharts.Forms/)\n\n## Quickstart\n\n### 1\xc2\xb0) Your chart will need a set of data entries.\n\n```csharp\nvar entries = new[]\n{\n    new Entry(200)\n    {\n        Label = "January",\n        ValueLabel = "200",\n\tFillColor = SKColor.Parse("#266489")\n    },\n    new Entry(400)\n    {\n\tLabel = "February",\n\tValueLabel = "400",\n\tFillColor = SKColor.Parse("#68B9C0")\n    },\n    new Entry(-100)\n    {\n\tLabel = "March",\n\tValueLabel = "-100",\n\tFillColor = SKColor.Parse("#90D585")\n    }\n};\n```\n\n### 2\xc2\xb0) Instanciate a chart from those entries\n\n```csharp\nvar chart = new BarChart() { Entries = entries };\n// or: var chart = new PointChart() { Entries = entries };\n// or: var chart = new LineChart() { Entries = entries };\n// or: var chart = new DonutChart() { Entries = entries };\n// or: var chart = new RadialGaugeChart() { Entries = entries };\n// or: var chart = new RadarChart() { Entries = entries };\n```\n\n### 2\xc2\xb0) Add it to your UI!\n\n**Xamarin.iOS**\n\n![ios-screen](Documentation/images/iOS-Screenshot.png)\n\n```csharp\npublic override void ViewDidLoad()\n{\n    base.ViewDidLoad();\n\n    var entries = // ... see 1\xc2\xb0) above\n    var chart = // ... see 2\xc2\xb0) above\n\n    var chartView = new ChartView\n    {\n        Frame = new CGRect(0, 32, this.View.Bounds.Width, 140),\n        AutoresizingMask = UIViewAutoresizing.FlexibleWidth,\n        Chart = chart\n    };\n\n\tthis.View.AddSubview(chartView);\n}\n```\n\n**Xamarin.Android**\n\n![android-screen](Documentation/images/Android-Screenshot.png)\n\n```xml\n<?xml version="1.0" encoding="utf-8"?>\n<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"\n    android:layout_width="match_parent"\n    android:layout_height="match_parent">\n    <LinearLayout \n        android:orientation="vertical"\n        android:layout_width="match_parent"\n        android:layout_height="wrap_content">\n        <microcharts.droid.ChartView\n            android:id="@+id/chartView"\n            android:layout_width="match_parent"\n            android:layout_height="160dp" />\n    </LinearLayout>\n</ScrollView>\n```\n\n```csharp\nprotected override void OnCreate(Bundle savedInstanceState)\n{\n    base.OnCreate(savedInstanceState);\n\n    SetContentView(Resource.Layout.Main);\n\n    var entries = // ... see 1\xc2\xb0) above\n    var chart = // ... see 2\xc2\xb0) above\n\n    var chartView = FindViewById<ChartView>(Resource.Id.chartView);\n    chartView.Chart = chart;\n}\n```\n\n**UWP (Windows 10)**\n\n![uwp-screen](Documentation/images/UWP-Screenshot.PNG)\n\n```xml\n<Page\n    x:Class="Microcharts.Samples.Uwp.MainPage"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:local="using:Microcharts.Samples.Uwp"\n    xmlns:microcharts="using:Microcharts.Uwp"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    mc:Ignorable="d">\n\n    <microcharts:ChartView x:Name="chartView" />\n\n</Page>\n```\n\n```csharp\npublic MainPage()\n{\n    this.InitializeComponent();\n\n    var entries = // ... see 1\xc2\xb0) above\n    var chart = // ... see 2\xc2\xb0) above\n\n    this.chartView.Chart = chart;\n}\n```\n\n**Xamarin.Forms**\n\n```xml\n<ContentPage \n    xmlns="http://xamarin.com/schemas/2014/forms" \n    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" \n    xmlns:microcharts="clr-namespace:Microcharts.Forms;assembly=Microcharts.Forms" \n    xmlns:local="clr-namespace:Microcharts.Samples.Forms" \n    x:Class="Microcharts.Samples.Forms.MainPage">\n\n    <microcharts:ChartView x:Name="chartView" />\n\n</ContentPage>\n```\n\n```csharp\nprotected override void OnAppearing()\n{\n    base.OnAppearing();\n\n    var entries = // ... see 1\xc2\xb0) above\n    var chart = // ... see 2\xc2\xb0) above\n\n    this.chartView.Chart = chart;\n}\n```\n\n**Xamarin.macOS**\n\n```csharp\npublic override void ViewDidLoad()\n{\n\tbase.ViewDidLoad();\n\n\tvar entries = // ... see 1\xc2\xb0) above\n\tvar chart = // ... see 2\xc2\xb0) above\n\n\tvar chartView = new ChartView\n\t{\n       Frame = this.View.Bounds,\n       AutoresizingMask = NSViewResizingMask.WidthSizable | NSViewResizingMask.HeightSizable,\n\t\tChart = chart,\n\t};\n\n\tthis.View.AddSubview(chartView);\n}\n```\n\n## Tutorials\n\n* [Video: Charts for Xamarin Forms](https://www.youtube.com/watch?v=tmymWdmf1y4) by [@HoussemDellai](https://github.com/HoussemDellai)\n\n## Usage\n\nAvailable charts are `BarChart`, `PointChart`, `LineChart`, `DonutChart`, `RadialGaugeChart`, `RadarChart`. They all have several properties to tweak their rendering.\n\nThose charts have a `Draw` method for platforms that haven\'t built in views.\n\n## Compatibility\n\nBuilt in views are provided for **UWP**, **Xamarin.Forms**, **Xamarin.iOS** and **Xamarin.Android**, **Xamarin.macOS**, but any other **.NET Standard 1.4** [SkiaSharp](https://github.com/mono/SkiaSharp) supported platform is also compatible (see one of the included `ChartView` implementations for more details).\n\n## About\n\nThis project is just simple drawing on top of the awesome [SkiaSharp](https://github.com/mono/SkiaSharp) library. The purpose is not to have an heavily customizable charting library. If you want so, simply fork the code, since all of this is fairly simple. Their is no interaction, nor animation at the moment.\n\n## Contributions\n\nContributions are welcome! If you find a bug please report it and if you want a feature please report it.\n\nIf you want to contribute code please file an issue and create a branch off of the current dev branch and file a pull request.\n\n## License\n\nMIT \xc2\xa9 [Alo\xc3\xafs Deniel](http://aloisdeniel.github.io)\n'