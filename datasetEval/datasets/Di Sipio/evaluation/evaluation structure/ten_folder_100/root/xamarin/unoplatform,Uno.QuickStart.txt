b'# Uno Quick Start\nThis repository is a basic sample for an [Uno](http://platform.uno/) application which cross-targets UWP, iOS, Android and WebAssembly.\n\nUse the Visual Studio\'s UWP tooling on Windows, such as \n[Xaml Edit and Continue](https://blogs.msdn.microsoft.com/visualstudio/2016/04/06/ui-development-made-easier-with-xaml-edit-continue/), C# Edit \nand Continue, then run your app on iOS, Android and Windows.\n\nYou can also [try out the experimental WASM build live](http://platform.uno/Playground/index.html).\n\n## Prerequisites\n* Visual Studio 2017 15.5 or later, with :\n\t* Xamarin component, with the iOS Remote Simulator installed\n\t* A working Mac with Visual Studio for Mac, XCode 8.2 or later installed\n\t* The google Android x86 emulators\n* On Windows\n\t- Running WASM Project using Python\n\t\t- The Linux Subsystem to run the native Python tools\n\t\t- Or the Python tools for windows\n\t- Running WASM Project using Node\n\t\t- Node tools (https://nodejs.org/en/)\n\t\t- http-server package (https://www.npmjs.com/package/http-server)\n\t\t\t- `npm install http-server -g`\n\n## Create an application from the solution template\n\nTo easily create an multi-platform application:\n* Install the [Uno Solution Template Visual Studio Extension](https://marketplace.visualstudio.com/items?itemName=nventivecorp.uno-platform-addin)\n* Create a new C# solution using the **Cross-Platform Library (Uno Platform)** template, from Visual Studio\'s **Start Page** :\n\n![](docs/assets/vsix-new-project.png)\n* Update to the latest nuget package named `Uno.UI`, make sure to check the `pre-release` box.\n* To debug the iOS head, select the `Debug|iPhoneSimulator` configuration\n* To debug the Android head, select the `Debug|AnyCPU` configuration\n* To debug the UWP head, select the `Debug|x86` configuration\n* To run the WASM head, locate the `dist` folder in the debug output.\n\t- Python: run `server.py`. \n\t\t- On Windows, use either:\n\t\t\t- Python tools \n\t\t\t- The Linux Subsystem: \n\t\t\t\t- On the bash prompt, run ``cd `wslpath "C:\\YourWindowsPath"` ``\n\t\t\t\t- Run either `python3 server.py` or `python server.py`.\n\t- Node: run `http-server ./ -p 8000`\n \nAn HTTP server on http://localhost:8000 will open.\n\nNote that the WASM head cannot be debugged at this point, the `mono-wasm` SDK does\nnot provide support for this yet. For more details on the wasm support see \nthe [Uno.Wasm.Bootstrap repository](https://github.com/nventive/Uno.Wasm.Bootstrap)\n'