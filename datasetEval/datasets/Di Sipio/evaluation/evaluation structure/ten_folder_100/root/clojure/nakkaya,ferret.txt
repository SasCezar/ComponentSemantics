b"# Ferret\n\n[![Current Release][badge-ferret-version]][ferret-downloads]\n[![CI Build Status][badge-ferret-build]][ferret-travis]\n![BSD 2 Clause License][badge-ferret-license]\n\nFerret is a free software lisp implementation designed to be used in\nreal time embedded control systems. Ferret lisp compiles down to self\ncontained *C++11*. Generated code is portable between any Operating\nSystem and/or Microcontroller that supports a *C++11* compliant\ncompiler. It has been verified to run on architectures ranging from\nembedded systems with as little as *2KB of RAM* to general purpose\ncomputers running Linux/Mac OS X/Windows.\n\nThis repository contains the Ferret compiler. For more information about Ferret, \nincluding downloads and documentation for the latest release, check \nout [Ferret's website](https://ferret-lang.org)\n\n## General Information\n\n   - Website - https://ferret-lang.org\n   - Source Code - https://github.com/nakkaya/ferret\n   - Mailing List - https://groups.google.com/forum/#!forum/ferret-lang\n   - Issue Tracker - https://github.com/nakkaya/ferret/issues\n\n## Quick Start\n\nDownload latest Ferret release,\n\n```bash\nwget https://ferret-lang.org/builds/ferret.jar\n```\n\nA program that sums the first 5 positive numbers. \n\n```clojure\n;;; lazy-sum.clj\n(defn positive-numbers\n  ([]\n   (positive-numbers 1))\n  ([n]\n   (cons n (lazy-seq (positive-numbers (inc n))))))\n\n(println (->> (positive-numbers)\n              (take 5)\n              (apply +)))\n```\n\nCompile to binary using,\n\n```bash\n$ java -jar ferret.jar -i lazy-sum.clj\n$ g++ -std=c++11 -pthread lazy-sum.cpp\n$ ./a.out\n```\n\n[ferret-travis]: https://travis-ci.org/nakkaya/ferret/builds\n[ferret-downloads]: https://ferret-lang.org\n[badge-ferret-version]: https://badge.fury.io/gh/nakkaya%2Fferret.svg\n[badge-ferret-build]: https://travis-ci.org/nakkaya/ferret.svg?branch=master\n[badge-ferret-license]: https://img.shields.io/badge/License-BSD%202--Clause-orange.svg\n"