b'<img src="https://raw.githubusercontent.com/lacarmen/cryogen/master/cryogen.png"\n hspace="20" align="left" height="200"/>\n\n<!-- Non-breaking space -->\n&nbsp;\n\nThis ReadMe only documents a subset of Cryogen\'s features. For additional documentation please see the [cryogen site](http://cryogenweb.org).\n\n<!-- Non-breaking space -->\n&nbsp;\n\n\n## Features\n\n* Blog posts and pages with Markdown (default) or AsciiDoc\n* Tags\n* Table of contents generation\n* Plain HTML page templates\n* Code syntax highlighting\n* Disqus support\n* Sitemap generation\n* RSS feed generation\n* Sass/SCSS compilation\n* Klipse Integration\n\n## Prerequisites\n\nYou will need [Leiningen][1] 2.5.0 or above installed.\n\n[1]: https://github.com/technomancy/leiningen\n\n## Usage\n\n### Creating a New Site\n\nA new site can be created using the Cryogen template as follows:\n\n```\nlein new cryogen my-blog\n```\n\n### Running the Server\n\nThe web server can be started from the `my-blog` directory using the `lein-ring` plugin:\n\n```\nlein ring server\n```\n\nThe server will watch for changes in the `content` and `themes` folders and recompile the content automatically.\n\nYou can also generate the content without bringing up a server via:\n\n```\nlein run\n```\n\n### Site Configuration\n\nThe site configuration file is found at `content/config.edn`, this file looks as follows:\n\n```clojure\n{:site-title           "My Awesome Blog"\n :author               "Bob Bobbert"\n :description          "This blog is awesome"\n :site-url             "http://blogawesome.com/"\n :post-root            "posts"\n :page-root            "pages"\n :post-root-uri        "posts-output"\n :page-root-uri        "pages-output"\n :tag-root-uri         "tags-output"\n :author-root-uri      "authors-output"\n :public-dest          "public"\n :blog-prefix          "/blog"\n :rss-name             "feed.xml"\n :rss-filters          ["cryogen"]\n :recent-posts         3\n :post-date-format     "yyyy-MM-dd"\n :archive-group-format "yyyy MMMM"\n :sass-src             []\n :sass-path            "sass"\n :compass-path         "compass"\n :theme                "blue"\n :resources            ["img"]\n :keep-files           [".git"]\n :disqus?              false\n :disqus-shortname     ""\n :ignored-files        [#"\\.#.*" #".*\\.swp$"]\n :previews?            false\n :posts-per-page       5\n :blocks-per-preview   2\n :clean-urls           :trailing-slash\n :collapse-subdirs?    false\n :hide-future-posts?   true\n :klipse               {}\n :debug?               false}\n```\n\nFor information about each key please see the ["Configuration"](http://cryogenweb.org/docs/configuration.html) portion of the Cryogen documentation site.\n\n### Switching between Markdown and AsciiDoc\n\nCryogen comes with Markdown support as default. If you want to use AsciiDoc instead, open the `project.clj` in your created blog (e.g. `my-blog`), and change the line in `:dependencies` that says `cryogen-markdown` to `cryogen-asciidoc`.\nInstead of looking for files ending in `.md` in the `content/md` directory, the compiler will now look for files ending in `.asc` in the `content/asc` directory.\n\n### Selecting a Theme\n\nThe Cryogen template comes with three themes in the `themes` folder. To change your blog\'s theme, change the value of the `:theme` key in `config.edn`. Note that the Nucleus theme is obtained from [downloadwebsitetemplates.co.uk](http://www.downloadwebsitetemplates.co.uk/template/nucleus/) that requires you to keep the footer, unless you make a donation on their website.\n\n### Customizing Layouts\n\nCryogen uses [Selmer](https://github.com/yogthos/Selmer) templating engine for layouts. Please refer to its documentation to see the supported tags and filters for the layouts.\n\nThe layouts are contained in the `themes/{theme}/html` folder of the project. By default, the `base.html` layout is used to provide the general layout for the site. This is where you would add static resources such as CSS and JavaScript assets as well as define headers and footers for your site.\n\nEach page layout should have a name that matches the `:layout` key in the page metadata and end with `.html`. Page layouts extend the base layout and should only contain the content relaveant to the page inside the `content` block.\nFor example, the `tag` layout is located in `tag.html` and looks as follows:\n\n```xml\n{% extends "/html/base.html" %}\n{% block content %}\n<div id="posts-by-tag">\n    <h2>Posts tagged {{name}}</h2>\n    <ul>\n    {% for post in posts %}\n        <li>\n            <a href="{{post.uri}}">{{post.title}}</a>\n        </li>\n    {% endfor %}\n    </ul>\n</div>\n{% endblock %}\n```\n\n### Code Syntax Highlighting\n\nCryogen uses [Highlight.js](https://highlightjs.org/) for code syntax highlighting. You can add more languages by replacing `themes/{theme}/js/highlight.pack.js` with a customized package from [here](https://highlightjs.org/download/).\n\nThe ` initHighlightingOnLoad` function is called in `themes/{theme}/html/base.html`.\n\n```xml\n<script>hljs.initHighlightingOnLoad();</script>\n```\n\n## Deploying Your Site\n\nThe generated static content will be found under the `public` folder. Simply copy the content to a static\nfolder for a server such as Nginx or Apache and your site is now ready for service.\n\nA sample Nginx configuration that\'s placed in `/etc/nginx/sites-available/default` can be seen below:\n\n```javascript\nserver {\n  listen 80 default_server;\n  listen [::]:80 default_server ipv6only=on;\n  server_name localhost <yoursite.com> <www.yoursite.com>;\n\n  access_log  /var/log/blog_access.log;\n  error_log   /var/log/blog_error.log;\n\n  location / {\n    alias       /var/blog/;\n    error_page  404 = /404.html;\n  }\n}\n```\n\nSimply set `yoursite.com` to the domain of your site in the above configuration and\nensure the static content is available at `/var/blog/`. Finally, place your custom error page\nin the `/var/blog/404.html` file.\n\nMore information on deployment can be found [here](http://cryogenweb.org/docs/deploying-to-github-pages.html).\n\n## Third Party Libraries\n\n#### https://github.com/greywolve/cryogen-markdown-external\n\nA Clojure library to provide Markdown rendering to the cryogen-core compiler by using an external command/program, such as pandoc.\n\n\n\n## Some Sites Made With Cryogen\n\n* [My personal blog](http://carmen.la/blog/archives)\n* [Cryogen Documentation Site](http://cryogenweb.org)\n* [Yogthos\' blog](http://yogthos.net/)\n* [Chad Stovern\'s blog](http://www.chadstovern.com)\n* [szcz](http://www.szcz.org/)\n* [ISvit blog](https://blog.isvit.info)\n* [Lambda Funk](http://lambdafunk.com)\n* [DDFT.wiki](https://ddft.wiki)\n* [Ampersanda\'s blog](https://ampersanda.dev)\n* [irrelevancy universe](https://irrelevancy.neocities.org)\n\n## License\n\nCopyright \xc2\xa9 2014-2017 Carmen La\n\nDistributed under the Eclipse Public License, the same as Clojure.\n'