b'[![License](http://img.shields.io/:license-mit-blue.svg)](https://github.com/Gonzih/feeds2imap.clj/blob/master/LICENSE.md)\n[![CircleCI](https://circleci.com/gh/Gonzih/cljs-electron.svg?style=svg)](https://circleci.com/gh/Gonzih/cljs-electron)\n\n# Clojurified Electron\n\n![](https://raw.githubusercontent.com/Gonzih/cljs-electron/master/demo.gif)\n\nMy attempt to recreate ClojureScript development workflow while developing desktop apps with [electron](http://electron.atom.io/).\n\n## What is currently included\n\n* ClojureScript (init script and ui code)\n* Figwheel for interactive development\n* Reagent for UI\n* Advanced compilation with externs inference in release compilation targets\n\n## Running it\n\n```shell\nnpm install electron -g # install electron binaries\n\nlein cooper                      # compile cljs and start figwheel\nelectron .                       # start electron from another terminal\n```\n\n## Releasing\n\n```shell\nlein do clean, cljsbuild once frontend-release, cljsbuild once electron-release\nelectron . # start electron to test that everything works\n```\n\nAfter that you can follow [distribution guide for the electron.](https://github.com/atom/electron/blob/master/docs/tutorial/application-distribution.md)\n\nThe easiest way to package an electron app is by using [electron-packager](https://github.com/maxogden/electron-packager):\n\n```shell\nnpm install electron-packager -g                                            # install electron packager\nelectron-packager . HelloWorld --platform=darwin --arch=x64 --electron-version=1.4.8 # package it!\n```\n'