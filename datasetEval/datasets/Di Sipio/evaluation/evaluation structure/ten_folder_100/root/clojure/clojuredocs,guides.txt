b"# CDS: A Clojure Doc Site\n\nAn assorted collection of tutorials, guides, and other documentation\n(by various authors) for the Clojure programming language and its\necosystem. [Read the guides online](http://clojure-doc.org).\n\n\n## Goals\n\nThe goal is to produce quality technical documentation with limited\nduplication between guides, and eventually have these documents hosted\nat doc.clojure.org.\n\n\nWhat's *not* here:\n\n  * Cheatsheets. Those can be found at\n    [clojure.org/cheatsheet](http://clojure.org/cheatsheet), or with\n    tooltips at\n    [jafingerhut.github.com](http://jafingerhut.github.com).  There is also an unofficial [ClojureScript cheatsheet](https://github.com/fogus/clojurescript-cheatsheet) available for download and contribution.\n  * API reference docs. Those can currently be found (with examples)\n    at [Clojuredocs](http://clojuredocs.org/).\n\nClojuredocs needs a lot of work and redesign\n(as in, the way it works) which will take a while. CDS is not concerned with providing the API reference; only tutorials, guides, and\nlinking to other relevant resources.\n\n\n\n## Structure\n\nCDS is structured as a number of guides. They broadly fall into 4 categories:\n\n  * Tutorials\n  * Language guides\n  * Tool guides\n  * Cookbooks\n\n\n### Tutorials\n\nThese guides are for complete newcomers and should include a lot of hand holding. They don't assume any\nprevious familiarity with Clojure, the JVM, the JVM tool ecosystem, functional programming, immutability, and so on.\n\nTarget audience: newcomers to the language.\n\n\n### Language guides\n\nThese guides are more in-depth, focused on various aspects of the language and interoperability.\nExamples of such guides include:\n\n  * Sequences\n  * Interoperability\n  * Reference types\n  * Laziness\n  * Macros and compilation\n\nTarget audience: from developers who already have some familiarity with the language to those who have been using it for\na while.\n\n\n### Tools & Ecosystem guides\n\nThese guides cover key Clojure ecosystem tools such as [Leiningen](http://leiningen.org), [Clojars](http://clojars.org), [REPLy](https://github.com/trptcolin/reply),\nnREPL, Emacs clojure-mode, VimClojure, Counterclockwise, La Clojure, etc. It also covers important ecosystem projects that are not tools: books,\nClojureSphere, ClojureWerkz, Flatland and so on.\n\nTarget audience: all developers using or interested in the language.\n\n\n\n### Cookbooks\n\nConcise Clojure example code, categorized by subject.\n\n\n\n\n## How To Contribute\n\nFirst of all: you **can** contribute to Clojure documentation even if you have 15 minutes to spare a day. To give you an example,\nhere's what 2 people could produce in about 6 months in their spare time:\n\n * [Monger documentation](http://clojuremongodb.info)\n * [Neocons documentation](http://clojureneo4j.info)\n * [Welle documentation](http://clojureriak.info)\n * [Elastisch documentation](http://clojureelasticsearch.info)\n * [Langohr documentation](http://clojurerabbitmq.info)\n * [Quartzite documentation](http://clojurequartz.info)\n\nNo contribution is too small: feel free to suggest grammar improvements, better code examples, submit pull requests with just\none new paragraph or even a couple of spelling corrections. Editing and proof-reading is also a great way to contribute.\n\nIf you found a mistake you'd like to report and do not want to make edits and go through the pull request process,\nplease post your findings on the [Clojure mailing list](https://groups.google.com/group/clojure),\nor else find us on `#clojure-doc` (IRC) at freenode.\n\nThank you!\n\n\n### Toolchain\n\n[README-tools.md](https://github.com/clojuredocs/cds/blob/master/README-tools.md) covers development\nenvironment setup and how to run a local server.\n\n\n### Contributing To Existing Guides\n\nFirst, pick a topic that sounds interesting. Writing documentation takes some effort and\nworking on something that is interesting to you will motivate you. Next, find the article you want\nto contribute to under `./articles/`. It is a Markdown file with inline code snippets.\n\nAt the top of each article you will usually find what it is supposed to cover. Please stick\nto that list.\n\nThen fork the repository, create a [topic branch](http://git-scm.com/book/en/Git-Branching-Branching-Workflows), and\nstart writing.\n\nWhen writing, periodically view results in the browser (see the [Toolchain readme](cds/blob/master/README-tools.md) about running a local server) and make\nsure code examples are rendered correctly and that there are no serious formatting issues. If you are not a Markdown or CSS guru,\nit's OK, but submitting changes that seriously break formatting and force maintainers to work on fixing them is not\nvery productive (or nice).\n\nAfter making the changes you want, run them by a fellow developer, edit them a couple\nof times and *submit a pull request on GitHub*. Please be patient. It may take a while for\nCDS maintainers to get to your pull request, read your changes, and suggest improvements.\n\nDon't get discouraged if asked to make more edits or even completely rewrite some parts from scratch.\nAll good documentation out there is a result of dozens of edits, corrections, and sometimes ground-up\nrewrites. This is normal. We want Clojure documentation to be high quality just like the language and\n`clojure.core`.\n\nFor some guidance on writing great documentation, see <http://jacobian.org/writing/great-documentation/>.\n\n\n\n### Contributing New Guides\n\nIf you feel there may be a guide missing, please run your idea by other CDS contributors on the [Clojure mailing list](https://groups.google.com/group/clojure).\n\n\n### What You Must Not Do\n\nPlease respect copyright of other Clojure-related content out there. **You must not** copy content from clojure.org, books on Clojure, blogs and\nother sources unless you are the primary author of them and understand the implications.\n\n\n\n### Contributors Policy\n\nIf you are the primary author of a substantial document, you are\nencouraged to include your name in a `## Contributors` section near the\nend of it, noting that you are the original author. If you have made\nsubstantial contributions to an existing document, you might add your\nname to the `## Contributors` section.\n\nIf you have at least one non-trivial (e.g. not just typo fixes) pull request merged, you can ask\nto be added to the repository as a collaborator. We still encourage contributors to use pull requests for content\nreview and discussions for new content, but you will be able to push small improvements directly.\n\n[GitHub contributors page](https://github.com/clojuredocs/cds/graphs/contributors) lists key contributors to the project.\n\n\n## License\n\nAll the content is distributed under the\n[CC BY 3.0](http://creativecommons.org/licenses/by/3.0/) license\nand are copyright their respective primary author(s).\n"