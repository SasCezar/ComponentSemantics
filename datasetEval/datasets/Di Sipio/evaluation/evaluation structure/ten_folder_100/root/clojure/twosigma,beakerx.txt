b'<!--\n    Copyright 2017 TWO SIGMA OPEN SOURCE, LLC\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n           http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n-->\n\n<img width="900" alt="banner" src="https://user-images.githubusercontent.com/963093/34594978-31d70312-f1a2-11e7-861c-705a9e932c3c.png">\n\n# BeakerX: Beaker extensions for Jupyter\n\n[![Build Status](http://ec2-54-175-192-115.compute-1.amazonaws.com:8080/buildStatus/icon?job=BeakerX_master)](http://ec2-54-175-192-115.compute-1.amazonaws.com:8080/job/BeakerX_master)\n[![Gitter chat](https://badges.gitter.im/twosigma/beakerx.png)](https://gitter.im/twosigma/beakerx)\n[![Release](https://jitpack.io/v/twosigma/beakerx.svg)](https://jitpack.io/#twosigma/beakerx)\n[![NPM version](https://badge.fury.io/js/beakerx.svg)](http://badge.fury.io/js/beakerx)\n[![PyPI Version](https://badge.fury.io/py/beakerx.svg)](http://badge.fury.io/py/beakerx)\n[![Anaconda-Server Badge](https://anaconda.org/conda-forge/beakerx/badges/version.svg)](https://anaconda.org/conda-forge/beakerx)\n[![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/twosigma/beakerx/1.2.0?filepath=StartHere.ipynb)\n\nBeakerX is a collection of JVM kernels and interactive widgets for\nplotting, tables, autotranslation, and other extensions to Jupyter\nNotebook.\n\nThe [documentation](https://github.com/twosigma/beakerx/blob/master/StartHere.ipynb) consists of tutorial notebooks on GitHub.\nYou can try it in the cloud for free with [Binder](https://mybinder.org/v2/gh/twosigma/beakerx/1.2.0?filepath=StartHere.ipynb).\nAnd here is the [cheatsheet](https://github.com/twosigma/beakerx/blob/master/doc/Cheatsheet.pdf).\n\nBeakerX is the successor to the [Beaker Notebook (source code\narchive)](https://github.com/twosigma/beaker-notebook-archive).  It\ncomes from [Two Sigma Open\nSource](http://opensource.twosigma.com/). Yes we are\n[hiring](https://www.twosigma.com/careers).\n\nThis README is for developers.  Users should see the\n[documentation](http://beakerx.com/documentation) on the homepage for\nhow to install and run BeakerX.\n\n\n\n### Dependencies:\n\n* [conda](https://www.anaconda.com/download/)\n* [yarn](https://yarnpkg.com/lang/en/docs/install/)\n\n### Build and Install (linux and mac)\n\n```\nconda env create -n beakerx -f configuration.yml\nconda activate beakerx # For conda versions prior to 4.6, run: source activate beakerx\n(cd beakerx; pip install -r requirements.txt --verbose)\nbeakerx install\nbeakerx_databrowser install\n```\n\n### Build and Install (win)\n```\nconda env create -n beakerx -f configuration.yml\nactivate beakerx\ncd beakerx\npip install -r requirements.txt --verbose\ncd ..\nbeakerx install\nbeakerx_databrowser install\n```\n\n### Build and Install for Jupyter Lab\n\n```\nconda env create -n labx -f configuration.yml\nconda activate labx # For conda versions prior to 4.6, run: source activate labx\nconda install -y -c conda-forge jupyterlab\n(cd beakerx; pip install -r requirements.txt --verbose)\nbeakerx install\njupyter labextension install @jupyter-widgets/jupyterlab-manager\n(cd js/lab; jupyter labextension install . --no-build)\n(cd js/lab-theme-dark; jupyter labextension install . --no-build)\n(cd js/lab-theme-light; jupyter labextension install . --no-build)\njupyter lab build\n```\n\n### Running with Docker\n\n```\ndocker run -p 8888:8888 beakerx/beakerx\n```\n\n### Update after Java change\n\nThe kernels are installed to run out of the repo, so just a local\nbuild should suffice:\n\n```\n(cd kernel; ./gradlew build)\n```\n\n### Update after JS change\n\nThe notebook extensions are installed to run out of the repo, so just\na local build should suffice:\n\n```\n(cd js/notebook; yarn install)\n```\n\n### Run TypeScript Unit Tests\n\nThe Java and TypeScript unit tests are run with every build. See [test/README.md](test/README.md) for how to run the e2e tests.\n\n### Run Python Unit Tests\n```\n(cd beakerx; python -m unittest)\n(cd beakerx_tabledisplay; python -m unittest)\n```\n\n## Groovy with Interactive Plotting:\n<img width="900" alt="screen shot" src="https://user-images.githubusercontent.com/963093/28300136-585f9f7c-6b4b-11e7-8827-b5807d3fc9a8.png">\n\n## Autotranslation from Python to JavaScript and D3\n\n<img width="900" alt="screen shot" src="https://cloud.githubusercontent.com/assets/963093/21077947/261def64-bf2a-11e6-8518-4845caf75690.png">\n\n## Interactive Tables\n\n<img width="900" alt="screen shot" src="https://user-images.githubusercontent.com/963093/38704584-d1fc16d8-3e74-11e8-95d5-c916bd44d10b.png">\n\n## Table Display from conda package\n### notebook\n```\nconda create --name beakerx_td\nsource activate beakerx_td\nconda install beakerx_tabledisplay\n```\n\n### lab\n```\nconda create --name labx_td\nsource activate labx_td\nconda install -y -c conda-forge jupyterlab\nconda install beakerx_tabledisplay\nbeakerx_tabledisplay install --lab\n```\n\n## Architecture and Code Overview\n\nBeakerX is a collection of kernels and extensions for Jupyter.\nThe code is organized into subdirectories as follows:\n\n* [beakerx](beakerx) The Python packages.  The main beakerx package has:\n\n  * a customized KernelSpec to allow BeakerX to configure the JVMs\n    that run the kernels,\n\n  * a server extension for the javadoc, settings, version, and\n    autotranslation endpoints,\n  \n  * the beakerx command line program, which has the bkr2ipynb\n    converter, the py4j server, utilities, install, and uninstall\n    functions.\n  \n  * the Python API for the runtime (tables, plots, easyform),\n    including automatically installing a displayer for pandas tables,\n    and autotranslation;\n  \n  * the nbextension webpack (compiled JavaScript, TypeScript, CSS,\n    fonts, images); and\n\n  * the compiled Java JARs of each of the kernels, and a directory of\n    shared JARs.\n\n  There is a separate python package (beakerx_magics) for the\n  `%%groovy` magic so it can be loaded *without* loading the regular\n  beakerx package (which would turn on display of pandas tables with\n  our table widget).\n\n  BeakerX [configures ipython](beakerx/beakerx/install.py#L140) to\n  automatically load the magics in the beakerx_magics package,\n  `%load_ext` is not required.\n\n  The [groovy magic](beakerx/beakerx_magics/kernel_magic.py) uses the standard Jupyter API,\n  jupyter_client.manager.KernelManager to start the kernel.\n  It then proxies Comm into the inner kernel.\n  \n  This package also has the py4j support for the `%%python` magic.  In\n  order for the JVM kernels to be able to start Jupyter kernels they\n  need to be able to call into Python.  There is a `beakerx\n  py4j_server` subcommand for this purpose (for internal use, not for\n  the user).  It calls into the groovy magic with its Comm proxy,\n  implemented in Python.\n\n  BeakerX implements autotranslation with a server extension and\n  metaprogramming glue in each language.  The glue makes the `beakerx`\n  object into a proxy for RPC calls to the server extension, using\n  JSON serialization.  For JavaScript, the proxy object uses Comm to\n  reach the kernel, which forwards to the server extension.\n\n  The autotranslation server has a separate thread of control from\n  Jupyter, and it manages its own port, which it protects by accepting\n  only local connections and requiring a secure password (which is\n  passed to the kernels via an environment variable).  The extra\n  thread is necessary to avoid deadlock in tornado.  This might be\n  better done with a\n  [queue](http://www.tornadoweb.org/en/stable/queues.html), as\n  explained in\n  [#5039](https://github.com/twosigma/beakerx/issues/5039).\n\n  See [#7577](https://github.com/twosigma/beakerx/issues/7577) for the\n  plan to improve this architecture with shared memory and Apache\n  Arrow.\n\n* [doc](doc) Documentation consisting of executable tutorial\n  notebooks.  [StartHere.ipynb](StartHere.ipynb) at the top level\n  links to these and is the intended way to navigate them.  There is a\n  subdirectory for each language.\n\n* [docker](docker) configuration files for creating the Docker image.\n  There is a subdirectory [docker/base](docker/base) for an image with\n  BeakerX\'s dependencies (the Ubuntu and conda packages).  The main\n  image is built by compiling BeakerX and installing BeakerX in the\n  base image.\n\n* [js](js) There are two subdirectories of JavaScript and TypeScript,\n  [js/lab](js/lab) and [js/notebook](js/notebook).  New code is being\n  written in TypeScript.\n\n  The lab subdirectory has the extension for Jupyter Lab (distributed\n  by npm).  Notebook has two extensions, one for the widgets (which\n  are included in Lab as well, and are also separately distributed\n  with npm for embedded applications such as nbviewer), and one for\n  the notebook application.  This adds a tab to the tree view with our\n  options panel.\n\n  And for regular notebook pages the extension handles: running\n  initialization cells, publication, autotranslation, the getCodeCells\n  and runByTag APIs, callbacks for table and plot actions, UI\n  customizations such as changing the fonts, allowing wide code cells,\n  and disabling autosave.\n\n* [kernel](kernel) The Java implementation of the kernels is here.\n  The main directory is [kernel/base](kernel/base) which has generic\n  code for all the languages.  The base kernel has classes for\n  Jupyter\'s Comm protocol (a layer over ZMQ), magics, the classpath\n  (including loading from maven), and the kernel parts of the widget\n  APIs.\n\n  There is also a subdirectory for each language which has the\n  evaluator for that language. Scala has wrappers for the widgets\n  so they have native types.\n\n* [test](test) The e2e tests, which are made with\n  [webdriver](http://webdriver.io/) (selenium, chromedriver, jasmine).\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md).\n\n## Releasing\n\nSee [RELEASE.md](RELEASE.md).\n\n## FAQs\n\nSee [FAQ.md](FAQ.md).\n\n## Attribution\n\nBeakerX contains and depends on many projects including:\n\nThe kernel is originally derived from\n[lappsgrid](https://github.com/lappsgrid-incubator/jupyter-groovy-kernel),\nbut has been rewritten in Java and refactored and expanded.\n\nThe Java support uses Adrian Witas\' org.abstractmeta.toolbox.\n\n<a href="http://www.antlr.org/license.html">ANTLR</a> Copyright (c) 2012 Terence Parr and Sam Harwell\n\n<a href="https://github.com/mbostock/d3/blob/master/LICENSE">d3</a> Copyright (c) 2010-2015, Michael Bostock\n\n<a href="https://github.com/ipython/ipython/blob/master/COPYING.rst">IPython</a> Copyright (c) 2008-2014, IPython Development Team\nCopyright (c) 2001-2007, Fernando Perez\nCopyright (c) 2001, Janko Hauser\nCopyright (c) 2001, Nathaniel Gray\n\nThe table of contents and init cells extensions come from:\n<a href="https://github.com/ipython-contrib/jupyter_contrib_nbextensions/blob/master/COPYING.rst">IPython-contrib</a> Copyright (c) 2013-2015, IPython-contrib Developers\n\n<a href="http://www.scala-lang.org/license.html">Scala</a> Copyright (c) 2002-2015 EPFL\n      Copyright (c) 2011-2015 Typesafe, Inc.\n\n[Guava](https://github.com/google/guava)  Copyright (C) 2012 The Guava Authors\n\n[Apache Spark](https://github.com/apache/spark) Copyright (C) 2014 and onwards The Apache Software Foundation.\n\n<a href=" http://www.h2database.com/html/license.html"> H2 database\nengine</a>\nThis software contains unmodified binary redistributions for H2\ndatabase engine (http://www.h2database.com/), which is dual licensed\nand available under the MPL 2.0 (Mozilla Public License) or under the\nEPL 1.0 (Eclipse Public License).  An original copy of the license\nagreement can be found at: http://www.h2database.com/html/license.html\n'