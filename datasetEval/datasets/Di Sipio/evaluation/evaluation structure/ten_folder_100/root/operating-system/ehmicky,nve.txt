b'<img src="https://raw.githubusercontent.com/ehmicky/design/master/nve/nve.svg?sanitize=true" width="400"/>\n\n[![Codecov](https://img.shields.io/codecov/c/github/ehmicky/nve.svg?label=tested&logo=codecov)](https://codecov.io/gh/ehmicky/nve)\n[![Travis](https://img.shields.io/badge/cross-platform-4cc61e.svg?logo=travis)](https://travis-ci.org/ehmicky/nve)\n[![Gitter](https://img.shields.io/gitter/room/ehmicky/nve.svg?logo=gitter)](https://gitter.im/ehmicky/nve)\n[![Twitter](https://img.shields.io/badge/%E2%80%8B-twitter-4cc61e.svg?logo=twitter)](https://twitter.com/intent/follow?screen_name=ehmicky)\n[![Medium](https://img.shields.io/badge/%E2%80%8B-medium-4cc61e.svg?logo=medium)](https://medium.com/@ehmicky)\n\nRun any command on specific Node.js versions.\n\nUnlike [`nvm exec`](https://github.com/nvm-sh/nvm/blob/master/README.md#usage)\nit:\n\n- can run [multiple Node.js versions](#examples-multiple-versions) at once\n- can be run [programmatically](https://github.com/ehmicky/nvexeca)\n- is [10 times faster](#benchmarks)\n- does not need a separate installation step for each Node version\n- can run the major release\'s latest minor/patch version automatically\n- works on Windows. No need to run as Administrator.\n- does not require Bash\n- is installed as a Node module (as opposed to a\n  [Bash installation script](https://github.com/nvm-sh/nvm/blob/master/README.md#installation-and-update)\n  downloaded with `curl`)\n\n`nve` executes a **single file or command**. It does not change the `node` nor\n`npm` global binaries. To run a specific Node.js version for an **entire project\nor shell session**, please use [`nvm`](https://github.com/nvm-sh/nvm),\n[`nvm-windows`](https://github.com/coreybutler/nvm-windows),\n[`n`](https://github.com/tj/n) or [`nvs`](https://github.com/jasongin/nvs)\ninstead.\n\n# Examples\n\n```bash\n# Same as `node` but with Node 12\n$ nve 12 node\nWelcome to Node.js v12.13.0.\nType ".help" for more information.\n> .exit\n\n# Same as `node file.js` but with Node 8\n$ nve 8 node file.js\n\n# Any command can be used\n$ nve 8 npm test\n\n# Execute a local binary\n$ nve 8 ava\n\n# Run a specific version\n$ nve 8.10.0 npm test\n\n# Run the latest Node version\n$ nve "*" npm test\n\n# Use a version range\n$ nve "<8" npm test\n\n# Use a different mirror for the Node binaries\n$ nve --mirror=https://npm.taobao.org/mirrors/node 8 npm test\n\n# Chaining commands\n$ nve 8 npm run build && nve 8 npm test\n\n# Cache Node 8 download\n$ nve 8 node --version\n```\n\n# Examples (multiple versions)\n\n```bash\n# Run multiple versions\n$ nve 12 10 8 npm test\n\n \xe2\xac\xa2  Node 12\n\n  105 tests passed\n  Finished \'test\' after 3.8 s\n\n \xe2\xac\xa2  Node 10\n\n  105 tests passed\n  Finished \'test\' after 4.2 s\n\n \xe2\xac\xa2  Node 8\n\n  105 tests passed\n  Finished \'test\' after 4.5 s\n\n# Do not abort on the first version that fails\n$ nve --continue 12 10 8 npm test\n\n# Run all versions in parallel\n$ nve --parallel 12 10 8 npm test\n\n# Cache multiple Node downloads\n$ nve 12 10 8 node --version\n```\n\n# Examples (list versions)\n\n```bash\n# Prints latest Node.js version. Make sure you use quotes.\n$ nve "*"\n13.1.0\n\n# Prints latest Node.js 8 version\n$ nve 8\n8.16.2\n\n# Prints latest Node.js 12, 10 and 8 versions\n$ nve 12 10 8\n12.13.0\n10.17.0\n8.16.2\n```\n\n# Demo\n\nYou can try this library:\n\n- either directly [in your browser](https://repl.it/@ehmicky/nve).\n- or by executing the [`examples` files](examples/README.md) in a terminal.\n\n# Install\n\n```bash\nnpm install -g nve\n```\n\n`node >=8.12.0` must be globally installed. However the command run by `nve` can\nuse any Node version (providing it is compatible with it).\n\nTo use this programmatically (from Node.js) instead, please check\n[`nvexeca`](https://github.com/ehmicky/nvexeca).\n\n# Usage\n\n```bash\nnve [OPTIONS...] VERSION... [COMMAND] [ARGS...]\n```\n\nThis is exactly the same as:\n\n```bash\nCOMMAND [ARGS...]\n```\n\nBut using specific Node `VERSION`. Several `VERSION` can be specified at once.\n\n`VERSION` can be any [version range](https://github.com/npm/node-semver) such as\n`12`, `12.6.0` or `<12`.\n\n`COMMAND` must be compatible with the specific Node `VERSION`. For example `npm`\nis [only compatible with Node `>=6`](https://github.com/npm/cli#important).\n\nBoth global and local binaries can be executed.\n\n## Options\n\n### --continue\n\n_Alias_: `-c`\\\n_Type_: `boolean`\\\n_Default_: `false`\n\nBy default, when running multiple Node versions and one of those versions fails,\nthe others are aborted. This option disables this.\n\n### --parallel\n\n_Alias_: `-p`\\\n_Type_: `boolean`\\\n_Default_: `false`\n\nWhen running multiple Node versions, run all of them at the same time. This is\nfaster. However this does not work if the command:\n\n- requires some interactive CLI input (for example using a prompt)\n- is not concurrency-safe\n\n### --progress\n\n_Type_: `boolean`\\\n_Default_: `true`\n\nWhether to show a progress bar while the Node binary is downloading.\n\n### --mirror\n\n_Alias_: `-m`\\\n_Type_: `string`\\\n_Default_: `https://nodejs.org/dist`\n\nBase URL to retrieve Node binaries. Can be overridden (for example\n`https://npm.taobao.org/mirrors/node`).\n\nThe following environment variables can also be used: `NODE_MIRROR`,\n`NVM_NODEJS_ORG_MIRROR`, `N_NODE_MIRROR` or `NODIST_NODE_MIRROR`.\n\n## Initial download\n\nThe first time `nve` is run with a new `VERSION`, the Node binary is downloaded\nunder the hood. This initially takes few seconds. However subsequent runs are\n[almost instantaneous](#benchmarks).\n\n`COMMAND` can be omitted in order to cache that initial download without\nexecuting any commands.\n\n## Difference with nvm\n\n`nve` is meant for one-off command execution. Examples include:\n\n- running tests with an older Node.js version\n- checking if an older Node.js version supports a specific syntax or feature\n- benchmarking different Node.js versions\n- [programmatic usage or child processes](https://github.com/ehmicky/nvexeca)\n\nTools like [`nvm`](https://github.com/nvm-sh/nvm),\n[`nvm-windows`](https://github.com/coreybutler/nvm-windows),\n[`n`](https://github.com/tj/n) or [`nvs`](https://github.com/jasongin/nvs) are\nmeant to execute a specific Node.js version for an entire machine, project or\nshell session.\n\n`nve` can (and probably should) be used alongside those tools.\n\n## Native modules\n\nIf your code is using native modules, `nve` works providing:\n\n- they are built with [N-API](https://nodejs.org/api/n-api.html)\n- the target Node.js version is `>=8.12.0` (since N-API was not available or\n  stable before that)\n\nOtherwise the following error message is shown:\n`Error: The module was compiled against a different Node.js version`.\n\n# Benchmarks\n\nThe [following benchmarks](benchmarks/main.yml) compare the average time to run\n`nve`, [`nvm exec`](https://github.com/nvm-sh/nvm) and\n[`npx node`](https://github.com/aredridel/node-bin-gen/blob/master/node-bin-README.md#use-with-npx):\n\n```\nnve:       115ms\nnvm exec: 1010ms\nnpx node: 1547ms\n```\n\n# See also\n\n- [`nvexeca`](https://github.com/ehmicky/nvexeca): Like `nve` but programmatic\n  (from Node.js)\n- [`execa`](https://github.com/sindresorhus/execa): Process execution for humans\n- [`get-node`](https://github.com/ehmicky/get-node): Download Node.js\n- [`normalize-node-version`](https://github.com/ehmicky/normalize-node-version):\n  Normalize and validate Node.js versions\n- [`all-node-versions`](https://github.com/ehmicky/all-node-versions): List all\n  available Node.js versions\n- [`fetch-node-website`](https://github.com/ehmicky/fetch-node-website): Fetch\n  releases on nodejs.org\n- [`global-cache-dir`](https://github.com/ehmicky/global-cache-dir): Get the\n  global cache directory\n\n# Support\n\nIf you found a bug or would like a new feature, _don\'t hesitate_ to\n[submit an issue on GitHub](../../issues).\n\nFor other questions, feel free to\n[chat with us on Gitter](https://gitter.im/ehmicky/nve).\n\nEveryone is welcome regardless of personal background. We enforce a\n[Code of conduct](CODE_OF_CONDUCT.md) in order to promote a positive and\ninclusive environment.\n\n# Contributing\n\nThis project was made with \xe2\x9d\xa4\xef\xb8\x8f. The simplest way to give back is by starring and\nsharing it online.\n\nIf the documentation is unclear or has a typo, please click on the page\'s `Edit`\nbutton (pencil icon) and suggest a correction.\n\nIf you would like to help us fix a bug or add a new feature, please check our\n[guidelines](CONTRIBUTING.md). Pull requests are welcome!\n\nThanks go to our wonderful contributors:\n\n<!-- ALL-CONTRIBUTORS-LIST:START -->\n<!-- prettier-ignore -->\n<table>\n  <tr>\n    <td align="center"><a href="https://twitter.com/ehmicky"><img src="https://avatars2.githubusercontent.com/u/8136211?v=4" width="100px;" alt="ehmicky"/><br /><sub><b>ehmicky</b></sub></a><br /><a href="https://github.com/ehmicky/nve/commits?author=ehmicky" title="Code">\xf0\x9f\x92\xbb</a> <a href="#design-ehmicky" title="Design">\xf0\x9f\x8e\xa8</a> <a href="#ideas-ehmicky" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a> <a href="https://github.com/ehmicky/nve/commits?author=ehmicky" title="Documentation">\xf0\x9f\x93\x96</a></td>\n    <td align="center"><a href="https://scottwarren.dev"><img src="https://avatars2.githubusercontent.com/u/2718494?v=4" width="100px;" alt="Scott Warren"/><br /><sub><b>Scott Warren</b></sub></a><br /><a href="#question-scottwarren" title="Answering Questions">\xf0\x9f\x92\xac</a></td>\n    <td align="center"><a href="https://tunnckoCore.com"><img src="https://avatars3.githubusercontent.com/u/5038030?v=4" width="100px;" alt="Charlike Mike Reagent"/><br /><sub><b>Charlike Mike Reagent</b></sub></a><br /><a href="#question-tunnckoCore" title="Answering Questions">\xf0\x9f\x92\xac</a> <a href="#ideas-tunnckoCore" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a></td>\n    <td align="center"><a href="https://github.com/Hongarc"><img src="https://avatars1.githubusercontent.com/u/19208123?v=4" width="100px;" alt="Hongarc"/><br /><sub><b>Hongarc</b></sub></a><br /><a href="#ideas-Hongarc" title="Ideas, Planning, & Feedback">\xf0\x9f\xa4\x94</a></td>\n  </tr>\n</table>\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n'