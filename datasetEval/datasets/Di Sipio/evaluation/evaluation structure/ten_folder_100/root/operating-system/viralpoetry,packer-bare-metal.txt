b'# Building bare metal images with Packer, VirtualBox and qemu-img  \n\nThis repository should demonstrate that it is possible to provision OS with Packer, then create raw disk image that can be booted directly on bare metal.  \n\nI am using random [Alpine Packer builder](https://github.com/ketzacoatl/packer-alpine/tree/master/00-iso-install) from the GitHub (thanks!) because of Alpine small size.  \n\nFirstly, run `packer build packer_template.json` to create VirtualBox `OVA` archive which contains disk and configuration files.  \n\nThen decompress `OVA` tar archive and convert `VMDK` to `RAW`:  \n```\n$ cd output-virtualbox-iso\n$ tar xvf alpine-clean-3.6.1.ova\n$ qemu-img convert -f vmdk alpine-clean-3.6.1-disk001.vmdk -O raw alpine-clean-3.6.1.raw\n```\n\nCheck that `RAW` file is actual disk file:   \n```\n$ fdisk -l alpine-clean-3.6.1.raw\nDisk alpine-clean-3.6.1.raw: 2 GiB, 2147483648 bytes, 4194304 sectors\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: dos\nDisk identifier: 0x1de52f32\n\nDevice                  Boot   Start     End Sectors  Size Id Type\nalpine-clean-3.6.1.raw1 *       2048  206847  204800  100M 83 Linux\nalpine-clean-3.6.1.raw2       206848 1255423 1048576  512M 82 Linux swap / Solaris\nalpine-clean-3.6.1.raw3      1255424 4194303 2938880  1.4G 83 Linux\n```\n\nPartition offset is `1255424 sectors` * `512 bytes` per sector, so if you want to mount it, you can use `mount` command with the appropriate offset:   \n```\n$ mkdir /tmp/loop\n$ sudo mount -o ro,loop,offset=642777088 alpine-clean-3.6.1.raw /tmp/loop\n$ mount | grep alpine-clean-3.6.1.raw\nalpine-clean-3.6.1.raw on /tmp/loop type ext4 (ro,relatime,data=ordered)\n```\n\nIf you want to create bootable USB, make sure that your USB is not mounted. If mounted, use `umount` command.    \n```\n$ lsblk\nNAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT\n...\nsda      8:0    0   477G  0 disk\n\xe2\x94\x9c\xe2\x94\x80sda1   8:1    0   512M  0 part /boot/efi\n\xe2\x94\x9c\xe2\x94\x80sda2   8:2    0 460.6G  0 part /\n\xe2\x94\x94\xe2\x94\x80sda3   8:3    0  15.9G  0 part\nsdb      8:16   1   7.3G  0 disk /media/user/ABCD-EFGH  <--- our mounted USB stick\n\n$ sudo umount /media/user/ABCD-EFGH  \n```\nFinally, write raw disk to the USB memory stick\n```\n$ sudo dd if=./alpine-clean-3.6.1.raw of=/dev/sdb bs=4k\n\n131072+0 records in\n131072+0 records out\n536870912 bytes (537 MB, 512 MiB) copied, 139.334 s, 3.9 MB/s\n```\n\nTODO:  \n1. Shrink disk image using zerofree / other tools\n2. ?\n3. Profit\n\n\nSources:  \n<https://major.io/2010/12/14/mounting-a-raw-partition-file-made-with-dd-or-dd_rescue-in-linux/>  \n<https://blog.filippo.io/converting-a-partition-image-to-a-bootable-disk-image/>  \n<https://wiki.hackzine.org/sysadmin/kvm-import-ova.html>\n'