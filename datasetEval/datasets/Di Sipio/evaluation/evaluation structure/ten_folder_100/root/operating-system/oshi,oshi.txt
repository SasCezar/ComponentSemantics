b'![OSHI](https://dl.dropboxusercontent.com/s/c82qboyvvudpvdp/oshilogo.png)\n\n[![Maven central](https://maven-badges.herokuapp.com/maven-central/com.github.oshi/oshi-core/badge.svg?)](https://search.maven.org/search?q=com.github.oshi)\n[![Tidelift](https://tidelift.com/badges/package/maven/com.github.oshi:oshi-core)](https://tidelift.com/subscription/pkg/maven-com-github-oshi-oshi-core?utm_source=maven-com-github-oshi-oshi-core&utm_medium=referral&utm_campaign=readme)\n[![Travis Build Status](https://travis-ci.org/oshi/oshi.svg)](https://travis-ci.org/oshi/oshi)\n[![Appveyor Build status](https://ci.appveyor.com/api/projects/status/v489i8xoyfspxx7s?svg=true)](https://ci.appveyor.com/project/dbwiddis/oshi)\n[![Coverage Status](https://coveralls.io/repos/github/oshi/oshi/badge.svg?branch=master)](https://coveralls.io/github/oshi/oshi?branch=master)\n[![codecov.io](https://codecov.io/github/oshi/oshi/coverage.svg?branch=master)](https://codecov.io/github/oshi/oshi?branch=master)\n[![Coverity Scan Build Status](https://img.shields.io/coverity/scan/9332.svg)](https://scan.coverity.com/projects/dblock-oshi)\n[![Codacy Grade](https://api.codacy.com/project/badge/Grade/5370178ae91d4f56b43de2f26f7c5e7a)](https://www.codacy.com/app/widdis/oshi?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=oshi/oshi&amp;utm_campaign=Badge_Grade)\n[![MIT License](http://img.shields.io/badge/license-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n[![SonarQube Bugs](https://sonarcloud.io/api/project_badges/measure?project=com.github.oshi%3Aoshi-parent&metric=bugs)](https://sonarcloud.io/dashboard?id=com.github.oshi%3Aoshi-parent)\n[![SonarQube Vulnerabilities](https://sonarcloud.io/api/project_badges/measure?project=com.github.oshi%3Aoshi-parent&metric=vulnerabilities)](https://sonarcloud.io/dashboard?id=com.github.oshi%3Aoshi-parent)\n[![SonarQube Maintainability](https://sonarcloud.io/api/project_badges/measure?project=com.github.oshi%3Aoshi-parent&metric=sqale_rating)](https://sonarcloud.io/dashboard?id=com.github.oshi%3Aoshi-parent)\n[![SonarQube Reliability](https://sonarcloud.io/api/project_badges/measure?project=com.github.oshi%3Aoshi-parent&metric=reliability_rating)](https://sonarcloud.io/dashboard?id=com.github.oshi%3Aoshi-parent)\n[![SonarQube Security](https://sonarcloud.io/api/project_badges/measure?project=com.github.oshi%3Aoshi-parent&metric=security_rating)](https://sonarcloud.io/dashboard?id=com.github.oshi%3Aoshi-parent)\n[![Code Quality: Java](https://img.shields.io/lgtm/grade/java/g/oshi/oshi.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/oshi/oshi/context:java)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/oshi/oshi/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/oshi/oshi/?branch=master)\n[![Openhub Stats](https://www.openhub.net/p/oshi/widgets/project_thin_badge.gif)](https://www.openhub.net/p/oshi?ref=github)\n[![first-timers-only](https://img.shields.io/badge/first--timers--only-friendly-blue.svg?style=flat-square)](https://www.firsttimersonly.com/)\n[![Join the chat at https://gitter.im/oshi/oshi](https://badges.gitter.im/oshi/oshi.svg)](https://gitter.im/oshi/oshi?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nOSHI is a free [JNA](https://github.com/java-native-access/jna)-based (native) \nOperating System and Hardware Information library for Java.\nIt does not require the installation of any additional native libraries and aims to provide a \ncross-platform implementation to retrieve system information, such as OS version, processes, \nmemory & CPU usage, disks & partitions, devices, sensors, etc.\n\nSupported platforms \n--------------------------- \nWindows \xe2\x80\xa2 Linux \xe2\x80\xa2 Mac OS X \xe2\x80\xa2 Unix (Solaris, FreeBSD) \n\nEssentials\n----------\n* [API](http://oshi.github.io/oshi/apidocs/) \n* [Find OSHI on Maven Central](https://search.maven.org/search?q=com.github.oshi)\n* [FAQ](https://github.com/oshi/oshi/blob/master/FAQ.md)\n* [Upgrading from an earlier version?](https://github.com/oshi/oshi/blob/master/UPGRADING.md) \n\nSupported features \n--------------------------\n* Computer System and firmware, baseboard \n* Operating System and Version/Build\n* Physical (core) and Logical (hyperthreaded) CPUs \n* System and per-processor load % and tick counters\n* CPU uptime, processes, and threads\n* Process uptime, CPU, memory usage\n* Physical and virtual memory used/available\n* Mounted filesystems (type, usable and total space)\n* Disk drives (model, serial, size) and partitions\n* Network interfaces (IPs, bandwidth in/out)\n* Battery state (% capacity, time remaining)\n* Connected displays (with EDID info)\n* USB Devices\n* Sensors (temperature, fan speeds, voltage)\n\nDownloads\n---------\n| Stable Release Version | Current Development Version | Dependencies |\n| ------------- | ------------- | ------------- |\n| [oshi-core-4.2.1](https://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.github.oshi&a=oshi-core&v=4.2.1&e=jar)  | [oshi-core-4.3.0-SNAPSHOT](https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=com.github.oshi&a=oshi-core&v=4.3.0-SNAPSHOT&e=jar) | [JNA](https://github.com/java-native-access/jna) \xe2\x80\xa2 [SLF4J](http://www.slf4j.org/) |\n\nUsage\n-----\nWe strongly recommend you use a dependency manager such as Maven or Gradle. You can [find the appropriate syntax to include OSHI here](https://search.maven.org/artifact/com.github.oshi/oshi-core/4.2.1/jar). This will add the transitive dependencies.  If you experience issues with `NoClassDefFound` errors for JNA artifacts, you might have another dependency to JNA which resolves first. Listing OSHI earlier in your dependency list will usually resolve this, or you may try manually specifying the most recent version of JNA.\n\nCreate a new instance of `SystemInfo` and use the getters to access additional information.\n\nYou can run the [SystemInfoTest](https://github.com/oshi/oshi/blob/master/oshi-core/src/test/java/oshi/SystemInfoTest.java)\nand see the full output for your system by cloning the project and building it with [Maven](http://maven.apache.org/index.html).\n\n```\ngit clone https://github.com/oshi/oshi.git && cd oshi\n\n./mvnw test-compile -pl oshi-core -q exec:java \\\n  -Dexec.mainClass="oshi.SystemInfoTest" \\\n  -Dexec.classpathScope="test"\n```\n\nOSHI for enterprise\n-------------------\nAvailable as part of the Tidelift Subscription\n\nThe maintainers of OSHI and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/maven-com-github-oshi-oshi-core?utm_source=maven-com-github-oshi-oshi-core&utm_medium=referral&utm_campaign=readme)\n\nSecurity contact information\n----------------------------\nTo report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security).\nTidelift will coordinate the fix and disclosure.\n\nOutput\n-------------\nOSHI provides output directly via Java methods for each of its interfaces.  \nBy periodically polling dynamic information (e.g., every second), users can calculate and track changes.\n\nThe `main()` method of [SystemInfoTest](https://github.com/oshi/oshi/blob/master/oshi-core/src/test/java/oshi/SystemInfoTest.java) \nprovides sample code demonstrating the use of `oshi-core` interfaces to retrieve information and calculate additional metrics shown in the examples below.\n\nGeneral information about the operating system and computer system.\n```\nApple macOS 10.14.6 (Mojave) build 18G84\nBooted: 2019-07-28T20:27:49Z\nUptime: 10 days, 08:24:03\nRunning without elevated permissions.\n\nmanufacturer: Apple Inc.\nmodel: MacBook Pro (MacBookPro15,1)\nserialnumber: C03Z53B7LVDR\n```\nProcessor identification.\n```\nIntel(R) Core(TM) i9-9880H CPU @ 2.30GHz\n 1 physical CPU package(s)\n 8 physical CPU core(s)\n 16 logical CPU(s)\nIdentifier: Intel64 Family 6 Model 158 Stepping 13\nProcessorID: BFEBFBFF000906ED\n```\nBy measuring ticks (user, nice, system, idle, iowait, and irq) between time intervals, percent usage can be calculated.\nPer-processor information is also provided.\n```\nCPU, IOWait, and IRQ ticks @ 0 sec:[967282, 15484, 195343, 124216619], 6176, [4054, 2702]\nCPU, IOWait, and IRQ ticks @ 1 sec:[967308, 15484, 195346, 124216790], 6177, [4057, 2705]\nUser: 13.0% Nice: 0.0% System: 1.5% Idle: 85.5%\nCPU load: 8.8%\nCPU load averages: 2.69 2.47 2.38\nCPU load per processor: 23.6% 1.3% 18.2% 0.7% 12.9% 0.7% 12.1% 1.3%\nVendor Frequency: 2.3 GHz\nMax Frequency: 2.3 GHz\nCurrent Frequencies: 2.3 GHz, 2.3 GHz, 2.3 GHz, 2.3 GHz, 2.3 GHz, 2.3 GHz, 2.3 GHz, 2.3 GHz\n```\nProcess information including CPU and memory per process is available.\n```\nProcesses: 401, Threads: 1159\n   PID  %CPU %MEM       VSZ       RSS Name\n 55977  27.9  0.2   6.8 GiB  34.3 MiB java\n 51820  18.7  5.6   6.3 GiB 919.2 MiB eclipse\n 39272  11.2 17.8   7.1 GiB   2.8 GiB prl_vm_app\n 85316   6.5  2.9   5.6 GiB 471.4 MiB thunderbird\n 35301   5.4  0.5   1.7 GiB  89.8 MiB Microsoft Excel\n ```\nMemory and swapfile information is available.\n```\nMemory: 11.6 GiB/32 GiB\nSwap used: 3.6 GiB/5 GiB\n```\nStatistics for the system battery are provided.\n```\nPower Sources: \n Name: InternalBattery-0, Device Name: bq20z451,\n RemainingCapacityPercent: 100.0%, Time Remaining: 5:42, Time Remaining Instant: 5:42,\n Power Usage Rate: -16045.216mW, Voltage: 12.694V, Amperage: -1264.0mA,\n Power OnLine: false, Charging: false, Discharging: true,\n Capacity Units: MAH, Current Capacity: 7213, Max Capacity: 7315, Design Capacity: 7336,\n Cycle Count: 6, Chemistry: LIon, Manufacture Date: 2019-06-11, Manufacturer: SMP,\n SerialNumber: D869243A2U3J65JAB, Temperature: 30.46\xc2\xb0C\n```\n\nThe EDID for each Display is provided. This can be parsed with various utilities for detailed information. OSHI provides a summary of selected data.\n```\nDisplays:\n Display 0:\n  Manuf. ID=SAM, Product ID=2ad, Analog, Serial=HA19, ManufDate=3/2008, EDID v1.3\n  41 x 27 cm (16.1 x 10.6 in)\n  Preferred Timing: Clock 106MHz, Active Pixels 3840x2880 \n  Range Limits: Field Rate 56-75 Hz vertical, 30-81 Hz horizontal, Max clock: 140 MHz\n  Monitor Name: SyncMaster\n  Serial Number: H9FQ345476\n Display 1:\n  Manuf. ID=SAM, Product ID=226, Analog, Serial=HA19, ManufDate=4/2007, EDID v1.3\n  41 x 26 cm (16.1 x 10.2 in)\n  Preferred Timing: Clock 106MHz, Active Pixels 3840x2880 \n  Range Limits: Field Rate 56-75 Hz vertical, 30-81 Hz horizontal, Max clock: 140 MHz\n  Monitor Name: SyncMaster\n  Serial Number: HMCP431880\n```\nDisks and usage (reads, writes, transfer times) are shown, and partitions can be mapped to filesystems.\n```\nDisks:\n disk0: (model: SanDisk Ultra II 960GB - S/N: 161008800550) size: 960.2 GB, reads: 1053132 (23.0 GiB), writes: 243792 (11.1 GiB), xfer: 73424854 ms\n |-- disk0s1: EFI (EFI System Partition) Maj:Min=1:1, size: 209.7 MB\n |-- disk0s2: Macintosh HD (Macintosh SSD) Maj:Min=1:2, size: 959.3 GB @ /\n disk1: (model: Disk Image - S/N: ) size: 960.0 GB, reads: 3678 (60.0 MiB), writes: 281 (8.6 MiB), xfer: 213627 ms\n |-- disk1s1: EFI (EFI System Partition) Maj:Min=1:4, size: 209.7 MB\n |-- disk1s2: Dropbox (disk image) Maj:Min=1:5, size: 959.7 GB @ /Volumes/Dropbox\n\n```\n\nSensor readings are available for some hardware (see notes in the [FAQ](https://github.com/oshi/oshi/blob/master/FAQ.md)).\n```\nSensors:\n CPU Temperature: 69.8\xc2\xb0C\n Fan Speeds:[4685, 4687]\n CPU Voltage: 3.9V\n```\nAttached USB devices can be listed:\n```\nUSB Devices:\n AppleUSBEHCI\n |-- Root Hub Simulation Simulation (Apple Inc.)\n     |-- IOUSBHostDevice\n         |-- IR Receiver (Apple Computer, Inc.)\n         |-- USB Receiver (Logitech)\n AppleUSBEHCI\n |-- Root Hub Simulation Simulation (Apple Inc.)\n     |-- FaceTime HD Camera (Built-in) (Apple Inc.) [s/n: DJHB1V077FDH5HL0]\n     |-- IOUSBHostDevice\n         |-- Apple Internal Keyboard / Trackpad (Apple Inc.)\n         |-- BRCM2070 Hub (Apple Inc.)\n             |-- Bluetooth USB Host Controller (Apple Inc.)\n AppleUSBEHCI\n |-- Root Hub Simulation Simulation (Apple Inc.)\n     |-- IOUSBHostDevice\n         |-- Apple Thunderbolt Display (Apple Inc.) [s/n: 162C0C25]\n         |-- Display Audio (Apple Inc.) [s/n: 162C0C25]\n         |-- FaceTime HD Camera (Display) (Apple Inc.) [s/n: CCGCAN000TDJ7DFX]\n         |-- USB2.0 Hub\n             |-- ANT USBStick2 (Dynastream Innovations) [s/n: 051]\n             |-- Fitbit Base Station (Fitbit Inc.)\n```\n\n\nWhere are we? How can I help?\n-----------------------------\n[OSHI originated](http://code.dblock.org/2010/06/23/introducing-oshi-operating-system-and-hardware-information-java.html) \nas a platform-independent library that did not require additional software and had a license compatible with \nboth open source and commercial products. We have developed a strong core of features on major Operating Systems, \nbut we would love for *you* to help by:\n* Testing!  Our CI testing is limited.  Download and test the program on various operating systems/versions and hardware and help identify gaps that our limited development and testing may have missed.\n* Contributing ports.  Have an OS that\'s not covered? It\'s likely one of the existing ports can be slightly modified. \n* Offering access to an unsupported OS.  An AIX port will be written if access for development/testing can be provided!\n* Contributing code.  See something that\'s not working right or could work better?  Help us fix it!  New contributors welcome.\n* Documenting implementation.  Our Wiki is sparse.  Want to help new users follow in your footsteps?\n* Suggesting new features.  Do you need OSHI to do something it doesn\'t currently do?  Let us know.\n\nAcknowledgements\n-------------------\nMany thanks to the following companies for providing free support of Open Source projects including OSHI:\n* [SonarCloud](https://sonarcloud.io/about) for a range of code quality tools\n* [Travis CI](https://travis-ci.org/) for continuous integration testing\n* The [jProfile Java Profiler](https://www.ej-technologies.com/products/jprofiler/overview.html) used to eliminate cpu bottlenecks\n\nProjects using OSHI\n-------------------\n* [CAS Server](https://apereo.github.io/cas)\n* [JPPF](https://jppf.org/)\n* [Apache Flink](https://flink.apache.org/)\n* [DeepLearning4J](https://deeplearning4j.org/)\n* [PSI Probe](https://github.com/psi-probe/psi-probe)\n* [GigaSpaces XAP](https://xap.github.io/)\n* [openHAB Systeminfo Binding](https://github.com/openhab/openhab2-addons/tree/master/bundles/org.openhab.binding.systeminfo)\n* [Jenkins swarm plugin](https://wiki.jenkins.io/display/JENKINS/Swarm+Plugin)\n* [Java for IBM Watson IoT Platform](https://ibm-watson-iot.github.io/iot-java/)\n* [Semux](https://www.semux.org/)\n* [Arthas](https://alibaba.github.io/arthas/en/)\n* [Hawkular Agent](https://github.com/hawkular/hawkular-agent)\n* [GeoServer](https://docs.geoserver.org/stable/en/user/community/status-monitoring/index.html)\n* [UniversalMediaServer](https://github.com/UniversalMediaServer/UniversalMediaServer)\n* [Dagr](https://github.com/fulcrumgenomics/dagr)\n* [sys-API](https://github.com/Krillsson/sys-API)\n* [NexCapMAT](http://www.nexess-solutions.com/fr/produits/application-nexcap-mat/)\n* [360Suite](https://360suite.io/)\n* [GoMint](https://gomint.io/)\n* [Stefan\'s OS](https://BotCompany.de/)\n* [Eclipse Passage](https://projects.eclipse.org/projects/technology.passage)\n* [Eclipse Orbit](https://projects.eclipse.org/projects/tools.orbit)\n\nLicense\n-------\nThis project is licensed under the [MIT License](https://opensource.org/licenses/MIT).\n'