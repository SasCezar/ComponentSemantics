b"# StateOS\n  [![Build Status](https://travis-ci.org/stateos/StateOS.svg)](https://travis-ci.org/stateos/StateOS)\n  [![Software License](https://img.shields.io/github/license/stateos/StateOS.svg)](https://opensource.org/licenses/MIT)\n  [![Github Release](https://img.shields.io/github/release/stateos/StateOS.svg)](https://github.com/stateos/StateOS/releases)\n  [![Software Download](https://img.shields.io/sourceforge/dt/stateos.svg)](https://sourceforge.net/projects/stateos/files/latest/download)\n\nFree, extremely simple, amazingly tiny and very fast real-time operating system (RTOS) designed for deeply embedded applications.\nTarget: ARM Cortex-M, STM8.\nIt was inspired by the concept of a state machine.\nProcedure executed by the task (task state) doesn't have to be noreturn-type.\nIt will be executed into an infinite loop.\nThere's a dedicated function for immediate change the task state.\n\n### Features\n\n- kernel can operate in preemptive or cooperative mode\n- kernel can operate with 16, 32 or 64-bit timer counter\n- kernel can operate in tick-less mode\n- spin locks\n- once flags\n- events\n- signals with protection mask\n- flags (any, all, protect, ignore)\n- barriers\n- semaphores (binary, limited, counting)\n- mutexes with configurable type, protocol and robustness\n- fast mutexes (error checking)\n- condition variables\n- memory pools\n- stream buffers\n- message buffers\n- mailbox queues\n- event queues\n- job queues\n- timers (one-shot, periodic)\n- cmsis-rtos api\n- cmsis-rtos2 api\n- nasa-osal support\n- c++ wrapper\n- all documentation is contained within the source files\n- examples and templates are in separate repositories on [GitHub](https://github.com/stateos)\n- archival releases on [sourceforge](https://sourceforge.net/projects/stateos)\n\n### Targets\n\nARM CM0(+), CM3, CM4(F), CM7\n\n### License\n\nThis project is licensed under the terms of [the MIT License (MIT)](https://opensource.org/licenses/MIT).\n"