b'# Introduction\n\n[![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/OpenMined/PySyft/master) [![Build Status](https://travis-ci.org/OpenMined/PySyft.svg?branch=torch_1)](https://travis-ci.org/OpenMined/PySyft) [![Chat on Slack](https://img.shields.io/badge/chat-on%20slack-7A5979.svg)](https://openmined.slack.com/messages/team_pysyft) [![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fmatthew-mcateer%2FPySyft.svg?type=small)](https://app.fossa.io/projects/git%2Bgithub.com%2Fmatthew-mcateer%2FPySyft?ref=badge_small)\n\nPySyft is a Python library for secure, private Deep Learning. PySyft decouples private data from model training, using\n[Federated Learning](https://ai.googleblog.com/2017/04/federated-learning-collaborative.html),\n[Differential Privacy](https://en.wikipedia.org/wiki/Differential_privacy),\nand [Multi-Party Computation (MPC)](https://en.wikipedia.org/wiki/Secure_multi-party_computation) within PyTorch. Join the movement on\n[Slack](http://slack.openmined.org/).\n\n## PySyft in Detail\n\nA more detailed explanation of PySyft can be found in the\n[paper on arxiv](https://arxiv.org/abs/1811.04017)\n\nPySyft has also been explained in video form by [Siraj Raval](https://www.youtube.com/watch?v=39hNjnhY7cY&feature=youtu.be&a=)\n\n## Pre-Installation\n\nOptionally, we recommend that you install PySyft within the\n[Conda](https://docs.conda.io/projects/conda/en/latest/user-guide/overview.html)\nvirtual environment, for its simplicity in installation. If you are using\nWindows, we suggest installing [Anaconda and using the Anaconda\nPrompt](https://docs.anaconda.com/anaconda/user-guide/getting-started/) to\nwork from the command line.\n\n```bash\nconda create -n pysyft python=3\nconda activate pysyft # some older version of conda require "source activate pysyft" instead.\nconda install jupyter notebook\n```\n\nAnother alternative is to use python venvs. Those are our preferred\nenvironments for development purposes. We provide a direct install\ninstructions in our makefile.\n\n```bash\nmake venv\n```\n\n## Installation\n\n> PySyft supports Python >= 3.6 and PyTorch 1.1\n\n```bash\npip install syft[udacity]\n```\n\nThis will auto-install the PyTorch and TF Encrypted\ndependencies, which are required for running the tutorials\nfrom Udacity\'s "Secure & Private AI" course (recommended).\n\nYou can install syft without these dependencies with the usual\n`pip install syft`, but you will need to install framework\ndependencies (i.e. PyTorch, TensorFlow, or TF Encrypted)\nyourself. If you feel you\'ve received an unexpected\ninstallation error related to PyTorch or TF Encrypted, please\nopen an issue on Github or reach out to `#team_pysyft` in\nSlack.\n\nIf you have an installation error regarding zstd, run this command and then re-try installing syft.\n\n```bash\npip install --upgrade --force-reinstall zstd\n```\nIf this still doesn\'t work, and you happen to be on OSX, make\nsure you have [OSX command line tools](https://railsapps.github.io/xcode-command-line-tools.html) installed and try again.\n\nIf this still fails, and you are on a Conda environment. It could be\nbecause conda provides its own compiler and linker tools which might\nconflict with your system\'s. In that case we recommend to use a python venv\nand try again.\n\nYou can also install PySyft from source on a variety of operating systems by following this [installation guide](https://github.com/OpenMined/PySyft/blob/dev/INSTALLATION.md).\n\n## Run Local Notebook Server\n\nAll the examples can be played with by running the command\n\n```bash\nmake notebook\n```\n\nThis assumes you want to use a local virtual environment. It installs it\nindependently to the conda environment in case you installed one, or any\nother virtual environment you might have set up.\n\nOnce the jupyter notebook launches on your browser select the pysyft\nkernel.\n\n## Use the Docker image\n\nInstead of installing all the dependencies on your computer,\nyou can run a notebook server (which comes with Pysyft\ninstalled) using [Docker](https://www.docker.com/). All you\nwill have to do is start the container like this:\n\n```bash\n$ docker container run openmined/pysyft-notebook\n```\n\nYou can use the provided link to access the jupyter notebook (the link is only accessible from your local machine).\n\n> **_NOTE:_**\n> If you are using Docker Desktop for Mac, the port needs to be forwarded to localhost. In that case run docker with:\n> ```bash $ docker container run -p 8888:8888 openmined/pysyft-notebook ```\n> to forward port 8888 from the container\'s interface to port 8888 on localhost and then access the notebook via http://127.0.0.1:8888/?token=...\n\n\nYou can also set the directory from which the server will serve notebooks (default is /workspace).\n\n```bash\n$ docker container run -e WORKSPACE_DIR=/root openmined/pysyft-notebook\n```\n\nYou could also build the image on your own and run it locally:\n\n```bash\n$ cd docker-images/pysyft-notebook/\n$ docker image build -t pysyft-notebook .\n$ docker container run pysyft-notebook\n```\n\nMore information about how to use this image can be found [on docker hub](https://hub.docker.com/r/openmined/pysyft-notebook)\n\n## Try out the Tutorials\n\nA comprehensive list of tutorials can be found\n[here](https://github.com/OpenMined/PySyft/tree/master/examples/tutorials)\n\nThese tutorials cover how to perform techniques such as\nfederated learning and differential privacy using PySyft.\n\n## High-level Architecture\n\n![alt text](art/PySyftArch.png "High-level Architecture")\n\n## Start Contributing\n\nThe guide for contributors can be found [here](https://github.com/OpenMined/PySyft/tree/master/CONTRIBUTING.md). It covers all that you need to know to start contributing code to PySyft in an easy way.\n\nAlso join the rapidly growing community of 5000+ on [Slack](http://slack.openmined.org). The slack community is very friendly and great about quickly answering questions about the use and development of PySyft!\n\n## Troubleshooting\n\nWe have written an installation example in [this colab notebook](https://colab.research.google.com/drive/14tNU98OKPsP55Y3IgFtXPfd4frqbkrxK), you can use it as is to start working with PySyft on the colab cloud, or use this setup to fix your installation locally.\n\n## Organizational Contributions\n\nWe are very grateful for contributions to PySyft from the following organizations!\n\n[<img src="https://github.com/udacity/private-ai/blob/master/udacity-logo-vert-white.png?raw=true" alt="Udacity" width="200"/>](https://udacity.com/) | [<img src="https://raw.githubusercontent.com/coMindOrg/federated-averaging-tutorials/master/images/comindorg_logo.png" alt="coMind" width="200" height="130"/>](https://github.com/coMindOrg/federated-averaging-tutorials) | [<img src="https://i.ibb.co/vYwcG9N/arkhn-logo.png" alt="Arkhn" width="200" height="150"/>](http://ark.hn) | [<img src="https://raw.githubusercontent.com/dropoutlabs/files/master/dropout-labs-logo-white-2500.png" alt="Dropout Labs" width="200"/>](https://dropoutlabs.com/)\n--------------------------------------------------------------|--------------------------------------------------------------|---------------------------------------------------------------------------|---------------------------------------------------------------------------\n\n## Disclaimer\n\nDo NOT use this code to protect data (private or otherwise) - at present it is very insecure. Come back in a couple months.\n\n## License\n\n[Apache License 2.0](https://github.com/OpenMined/PySyft/blob/master/LICENSE)\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fmatthew-mcateer%2FPySyft.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fmatthew-mcateer%2FPySyft?ref=badge_large)\n'