b'<p align="center"><img width="90%" src="images/Reinforcement-Learning.png"></p>\n\n--------------------------------------------------------------------------------\n\n> Minimal and clean examples of reinforcement learning algorithms presented by [RLCode](https://rlcode.github.io) team. [[\xed\x95\x9c\xea\xb5\xad\xec\x96\xb4]](https://github.com/rlcode/reinforcement-learning-kr)\n>\n> Maintainers - [Woongwon](https://github.com/dnddnjs), [Youngmoo](https://github.com/zzing0907), [Hyeokreal](https://github.com/Hyeokreal), [Uiryeong](https://github.com/wooridle), [Keon](https://github.com/keon)\n\nFrom the basics to deep reinforcement learning, this repo provides easy-to-read code examples. One file for each algorithm.\nPlease feel free to create a [Pull Request](https://github.com/rlcode/reinforcement-learning/pulls), or open an [issue](https://github.com/rlcode/reinforcement-learning/issues)!\n\n## Dependencies\n1. Python 3.5\n2. Tensorflow 1.0.0\n3. Keras\n4. numpy\n5. pandas\n6. matplot\n7. pillow\n8. Skimage\n9. h5py\n\n### Install Requirements\n```\npip install -r requirements.txt\n```\n\n## Table of Contents\n\n**Grid World** - Mastering the basics of reinforcement learning in the simplified world called "Grid World"\n\n- [Policy Iteration](./1-grid-world/1-policy-iteration)\n- [Value Iteration](./1-grid-world/2-value-iteration)\n- [Monte Carlo](./1-grid-world/3-monte-carlo)\n- [SARSA](./1-grid-world/4-sarsa)\n- [Q-Learning](./1-grid-world/5-q-learning)\n- [Deep SARSA](./1-grid-world/6-deep-sarsa)\n- [REINFORCE](./1-grid-world/7-reinforce)\n\n**CartPole** - Applying deep reinforcement learning on basic Cartpole game.\n\n- [Deep Q Network](./2-cartpole/1-dqn)\n- [Double Deep Q Network](./2-cartpole/2-double-dqn)\n- [Policy Gradient](./2-cartpole/3-reinforce)\n- [Actor Critic (A2C)](./2-cartpole/4-actor-critic)\n- [Asynchronous Advantage Actor Critic (A3C)](./2-cartpole/5-a3c)\n\n**Atari** - Mastering Atari games with Deep Reinforcement Learning\n\n- **Breakout** - [DQN](./3-atari/1-breakout/breakout_dqn.py), [DDQN](./3-atari/1-breakout/breakout_ddqn.py) [Dueling DDQN](./3-atari/1-breakout/breakout_ddqn.py) [A3C](./3-atari/1-breakout/breakout_a3c.py)\n- **Pong** - [Policy Gradient](./3-atari/2-pong/pong_reinforce.py)\n\n**OpenAI GYM** - [WIP]\n\n- Mountain Car - [DQN](./4-gym/1-mountaincar)\n'