b'melonJS\n=======\n[![Build Status](https://travis-ci.org/melonjs/melonJS.svg)](https://travis-ci.org/melonjs/melonJS)\n[![Build Size](https://badgen.net/bundlephobia/min/melonjs)](https://bundlephobia.com/result?p=melonjs)\n[![Dependencies](https://img.shields.io/david/melonjs/melonJS.svg)](https://david-dm.org/melonjs/melonJS)\n[![Inline docs](http://inch-ci.org/github/melonjs/melonJS.svg?branch=master)](http://inch-ci.org/github/melonjs/melonJS)\n[![jsDeliver](https://data.jsdelivr.com/v1/package/npm/melonjs/badge)](https://www.jsdelivr.com/package/npm/melonjs)\n\nA fresh & lightweight HTML5 game engine\n-------------------------------------------------------------------------------\n![melonJS](http://melonjs.org/media/alex4-github.png)\n\nCopyright (C) 2011 - 2019 Olivier Biot\n\n[melonJS](http://melonjs.org/) is licensed under the [MIT License](http://www.opensource.org/licenses/mit-license.php)\n\nAbout melonJS\n-------------------------------------------------------------------------------\n\n[melonJS](http://melonjs.org/) is the result of our enthusiasm & experiments with Javascript,\nand currently features :\n\n- A fresh & lightweight 2D sprite-based engine\n- Standalone library (does not rely on anything else, except a HTML5 capable browser)\n- Compatible with most major browsers (Chrome, Safari, Firefox, Opera, IE) and mobile devices\n- Fast Canvas and WebGL rendering on desktop and mobile devices\n- High DPI resolution & canvas auto scaling\n- Multi-channel HTML5 audio support and Web Audio on supported devices\n- Lightweight physics implementation to ensure low cpu requirements\n- Polygon (SAT) based collision algorithm for accurate detection and response\n- Fast Broad-phase collision detection using spatial partitioning\n- 3rd party tools support for physic body definition (PhysicEditor, Physic Body Editor)\n- Advanced math API for Vector and Matrix\n- Tween Effects\n- Transition effects\n- A basic set of Object Entities (to be extended)\n- Object Pooling\n- Basic Particle System\n- Basic animation management\n- Standard spritesheet, single and multiple Packed Textures (Texture Packer, ShoeBox) support\n- A state manager (to easily manage loading, menu, options, in-game state)\n- Tiled map format version +0.9.x integration for easy level design\n    - Uncompressed Plain, Base64, CSV and JSON encoded XML tilemap loading\n    - Orthogonal, Isometric and Hexagonal maps (both normal and staggered)\n    - Multiple layers (multiple background/foreground, collision and Image layers)\n    - Multiple Tileset support\n    - Tileset Transparency settings\n    - Layers Alpha settings\n    - Rectangle, Ellipse, Polygon and Polyline objects support\n    - Tiled Objects\n    - Flipped & rotated Tiles\n    - Dynamic Layer and Object/Group ordering\n    - Dynamic Entity loading\n    - Shape based Tile collision support\n- System & bitmap fonts\n- Mouse and Touch device support (with mouse emulation)\n- Device motion & accelerometer support\n- Built-in support for [CocoonJS](https://www.ludei.com/cocoonjs/) and [Ejecta](https://github.com/melonjs/melonJS/wiki/How-to-build-your-game-for-tvOS-(or-iOS)-using-Ejecta)\n- Asynchronous messaging support (minPubSub)\n- Basic GUI elements included\n- Customizable loader\n\nUsing melonJS\n-------------------------------------------------------------------------------\n\n* [API Documentation](http://melonjs.github.io/melonJS/docs/) ([offline](https://github.com/melonjs/melonJS/archive/gh-pages.zip) version under the `docs` directory)\n* [Examples](http://melonjs.github.io/melonJS/)\n\nFor your first time using melonJS, follow these tutorials :\n\n- [Platformer](http://melonjs.github.io/tutorial-platformer/) Step by Step Tutorial.\n- [Space Invaders](http://melonjs.github.io/tutorial-space-invaders/) Step by Step Tutorial.\n\nYou may find it useful to skim the overview found at the wiki [Details & Usage](https://github.com/melonjs/melonJS/wiki#details--usage)\n\nWhen starting your own projects, checkout the [boilerplate](https://github.com/melonjs/boilerplate)\n\nDownload melonJS\n-------------------------------------------------------------------------------\n\nThe latest build (plain and minified) with corresponding release note is available for direct download [here](https://github.com/melonjs/melonJS/releases).\n\nAlternatively, the latest version of melonJS can be installed through [NPM](https://www.npmjs.com/package/melonjs) :\n\n    $ npm install melonjs\n\nOr can simply be added to your html, through a content delivery network (CDN) URL, using for example :\n\n```html\n<script src="https://cdn.jsdelivr.net/npm/melonjs@7/dist/melonjs.js"></script>\n```\nor the following for the minified version :\n```html\n<script src="https://cdn.jsdelivr.net/npm/melonjs@7/dist/melonjs.min.js"></script>\n```\nand of course the debug panel :\n```html\n<script src="https://cdn.jsdelivr.net/npm/melonjs@7/plugins/debug/debugPanel.js"></script>\n```\n\n> Note: "official" CDN and NPM install are only available from version 7.0.0 and onwards.\n\nBuilding melonJS\n-------------------------------------------------------------------------------\nFor most users, all you probably want is to use melonJS, and all you need then is just to download the latest built [release](https://github.com/melonjs/melonJS#download-melonjs) to get started. The only time you should need to build melonJS is if you want to contribute to the project and start developing on it.\n\nTo build your own version of melonJS you will need to install :\n\n- The [Node.js](http://nodejs.org/) JavaScript runtime and the [NPM](https://npmjs.org/) package manager\n\nOnce Node.js and NPM have been installed, you need to install build dependencies,\nby executing the following in the folder where you cloned the repository :\n\n    $ [sudo] npm install\n\nThen build the melonJS source by running:\n\n    $ npm run build\n\nThe generated library will be available under the `build` directory.\n\nBuilding the documentation\n-------------------------------------------------------------------------------\nSimilarly, you can build your own copy of the docs locally by running :\n\n    $ npm run doc\n\nThe generated documentation will be available in the `docs` directory\n\nTesting\n-------------------------------------------------------------------------------\n\nTo run melonJS tests in node simply run the following:\n\n    $ npm run test\n\nThis will run the jasmine spec tests with the output displayed on the shell. Do\nnote that the latest Chrome version is required, as the test unit will run the\nBrowser in a headless mode (in case of failed tests, upgrade your browser).\n\nWIP Builds\n-------------------------------------------------------------------------------\nmelonJS uses Travis-CI for automated testing and build uploads. The latest build\nartifacts can be downloaded from the [melonjs-builds](https://melonjs-builds.s3.amazonaws.com/index.html?prefix=artifacts/)\nbucket.\n\nQuestions, need help ?\n-------------------------------------------------------------------------------\nIf you need technical support, you can contact us through the following channels :\n* [melonJS developer forum](http://www.html5gamedevs.com/forum/32-melonjs/)\n* [gitter web chat](https://gitter.im/melonjs/public)\n* [melonJS wikipage](https://github.com/melonjs/melonJS/wiki)\n\nFor any other non technical related questions, feel free to also send us an [email](mailto:contact@melonjs.org).\n'