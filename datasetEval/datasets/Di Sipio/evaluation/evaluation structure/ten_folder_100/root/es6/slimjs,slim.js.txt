b'![hello, slim.js](./docs/slim2.png)\n\n[![Build Status](https://semaphoreci.com/api/v1/eavichay/slim-js/branches/master/badge.svg)](https://semaphoreci.com/eavichay/slim-js)\n\n[Chat on gitter](https://gitter.im/slim-js/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link)\n\n# Hello, slim.js\n\n## Declarative Web Components\n![](https://user-images.githubusercontent.com/1084459/57362057-9de38200-7186-11e9-9421-bed1673ce541.png)\n\n- [Migration instructions to version 4](#version-4-changes-and-migration)\n- [Official website](http://slimjs.com)\n- [Documentation](https://github.com/slimjs/slim.js/wiki)\n\n\n## Slim is an ultra fast, native and elegant library for [Web Components](https://www.webcomponents.org/introduction) development\n\n**Slim.js** is a lightning fast library for development of native Web Components and Custom Elements based on modern standards. No black magic involved, no useless dependencies.\n\nIt uses ES6+DOM native API to boosts up HTML elements with superpowers.\n\nIt is extensible: You can add your own directives (HTML-compilant) for DOM manipulation.\n\nIt is pluggable: You can add plugins that are activated during different hooks in component\'s lifecycle.\n\n### Is this another framework?\nNope. It\'s a very thin code layer (~3k) that adds framework-like power to your custom elements, using only the browser\'s native capabilities &mdash; as defined by W3C standards.\n\nHere\'s what you get:\n- Automatic rendering using templates.\n- One-way data binding, derived from templates. No need to declare which properties are what.\n- It can be extended: anyone can add custom plugins or directives.\n- It feels like a framework (in a good way), but without the limits of a classic framework. It works everywhere, you pick your own framework.\n- It\'s as small as 3.4 KBytes (gzipped) and the built-in directives are OPTIONAL!\n- Single file for core functionality, and you\'re good to go.\n- No dependencies, everything is based on native browsers\' API. Choose your own tools.\n- (_Optional_) Decorators for ES7/Next syntax, via Babel included.\n- Works with mixins from other component libraries, such as Polymer, out of the box.\n\n## Standards-compliant\n- ES6\n- Web Components V1\n- No transpiling or compilation required\n\n## No Setup required. It just works.\n- Add Slim.js to your project and you\'re good to go!\n\n# Documentation\n- [Developer\'s Guide](http://slimjs.com)\n\nThe official website is built with Slim.js (with source maps). Check out the source code, see it for yourself.\n\n# Version 4+ Changes and Migration\n- Package files supports ES6 native modules - i.e. `import` / `exports`.\n- For no-modules approach, every file has a _filename_.nomodule.js\n- Directives are in separate files, to reduce core package size. For using directives:\n\n```js\nimport \'slim-js/directives/repeat.js\'\nimport \'slim-js/directives/if.js\'\nimport \'slim-js/directives/switch-case.js\'\n// Or if you need them all\nimport \'slim-js/directives/all.js\'\n```\n\n- For the no-module approach place in your HTML:\n\n```html\n<script src="slim-js/Slim.nomodule.js"></script>\n<script src="slim-js/directives/all.nomodule.js"></script>\n```\n\nor alternatively use the ES6 native modules in your browser:\n\n```html\n<script type="module" src="slim-js/Slim.js"></script>\n<script type="module" src="slim-js/directives/..."></script>\n```\n\n### Contibutors are welcome.\n\n*USE THE PLATFORM*\n\n## Do you want to be a supporter? Contact **eavichay@gmail.com**.\n\n\n'