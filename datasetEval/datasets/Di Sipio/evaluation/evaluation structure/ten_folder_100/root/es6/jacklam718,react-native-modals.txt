b'[![Build Status](https://travis-ci.org/jacklam718/react-native-modals.svg?branch=master)](https://travis-ci.org/jacklam718/react-native-modals)\n[![npm](https://img.shields.io/npm/dm/react-native-modals.svg)]()\n[![npm](https://img.shields.io/npm/v/react-native-modals.svg)]()\n\n## React Native Modals\nReact Native Modals Library for iOS & Android.\n\n#### How to thank me ?\nJust click on \xe2\xad\x90\xef\xb8\x8f button \xf0\x9f\x98\x98\n\n[Try it with Exponent](https://exp.host/@jacklam718/modals-example)<br>\n\n<br>\n<br>\n<!-- ![Example](https://jacklam718.github.io/react-native-modals/resources/react-native-modals.gif) -->\n<span>\n  <img src="https://raw.githubusercontent.com/jacklam718/react-native-modals/master/.github/swipeable-modal.gif" width="220">&nbsp;&nbsp;\n  <img src="https://raw.githubusercontent.com/jacklam718/react-native-modals/master/.github/bottom-modal.gif" width="220">&nbsp;&nbsp;\n  <img src="https://raw.githubusercontent.com/jacklam718/react-native-modals/master/.github/slide-animation.gif" width="220">\n</span>\n\n## BREAKING CHANGE\nA lot of backward incompatible changes in `v0.19.3`. Please, Read the Docs before upgrading to `v0.19.3`\n\n## Installation\n\n```\nnpm install --save react-native-modals\n# OR\nyarn add react-native-modals\n```\n\n## Exposed Modules\n\n* Modal\n* BottomModal\n* Backdrop\n* ModalButton\n* ModalContent\n* ModalTitle\n* ModalFooter\n* Animation\n* FadeAnimation\n* ScaleAnimation\n* SlideAnimation\n* DragEvent,\n* SwipeDirection,\n* ModalProps\n* ModalFooterProps\n* ModalButtonProps\n* ModalTitleProps\n* ModalContentProps\n* BackdropProps\n\n## Examples\n[Example](https://github.com/jacklam718/react-native-modals/blob/master/modals-example/App.js)\n\n\n## Basic Usage\n```jsx\nimport Modal, { ModalContent } from \'react-native-modals\';\nimport { Button } from \'react-native\'\n\n<View style={styles.container}>\n  <Button\n    title="Show Modal"\n    onPress={() => {\n      this.setState({ visible: true });\n    }}\n  />\n  <Modal\n    visible={this.state.visible}\n    onTouchOutside={() => {\n      this.setState({ visible: false });\n    }}\n  >\n    <ModalContent>\n      {...}\n    </ModalContent>\n  </Modal>\n</View>\n```\n\n## Usage - Animation\n```jsx\nimport Modal, { SlideAnimation, ModalContent } from \'react-native-modals\';\n\n<View style={styles.container}>\n  <Modal\n    visible={this.state.visible}\n    modalAnimation={new SlideAnimation({\n      slideFrom: \'bottom\',\n    })}\n  >\n    <ModalContent>\n      {...}\n    </ModalContent>\n  </Modal>\n</View>\n```\n\n## Usage - Swipe\n```jsx\nimport Modal, { ModalContent } from \'react-native-modals\';\nimport { Button } from \'react-native\'\n\n<View style={styles.container}>\n  <Modal\n    visible={this.state.visible}\n    swipeDirection={[\'up\', \'down\']} // can be string or an array\n    swipeThreshold={200} // default 100\n    onSwipeOut={(event) => {\n      this.setState({ visible: false });\n    }}\n  >\n    <ModalContent>\n      {...}\n    </ModalContent>\n  </Modal>\n</View>\n```\n\n## Usage - Modal Title\n```jsx\nimport Modal, { ModalTitle, ModalContent } from \'react-native-modals\';\n\n<View style={styles.container}>\n  <Modal\n    visible={this.state.visible}\n    modalTitle={<ModalTitle title="Modal Title" />}\n  >\n    <ModalContent>\n      {...}\n    </ModalContent>\n  </Modal>\n</View>\n```\n\n## Usage - Modal Action\n```jsx\nimport Modal, { ModalFooter, ModalButton, ModalContent } from \'react-native-modals\';\n\n<View style={styles.container}>\n  <Modal\n    visible={this.state.visible}\n    footer={\n      <ModalFooter>\n        <ModalButton\n          text="CANCEL"\n          onPress={() => {}}\n        />\n        <ModalButton\n          text="OK"\n          onPress={() => {}}\n        />\n      </ModalFooter>\n    }\n  >\n    <ModalContent>\n      {...}\n    </ModalContent>\n  </Modal>\n</View>\n```\n\n\n## Props\n\n### Modal\n| Prop | Type | Default | Note |\n|---|---|---|---|\n| `visible` | `boolean` | `false` | |\n| `rounded` | `boolean` | `true` | |\n| `useNativeDriver` | `boolean` | `true` | |\n| `children` | `any` | | |\n| `modalTitle?` | `React Element` | | You can pass a `modalTitle` component or pass a `View` for customizing titlebar |\n| `width?` | `Number` | Your device width | The Width of modal, you can use fixed width or use percentage. For example `0.5` it means `50%`\n| `height?` | `Number` | 300 | The Height of modal, you can use fixed height or use percentage. For example `0.5` it means `50%`\n| `modalAnimation?` |  | `FadeAnimation` | animation for modal | |\n| `modalStyle?` | `any` | | | |\n| `containerStyle?` | `any` | `null` | For example: ``` {  zIndex: 10, elevation: 10 } ``` | |\n| `animationDuration?` | `Number` | `200` | | |\n| `overlayPointerEvents?` | `String` | | Available option: `auto`, `none` |\n| `overlayBackgroundColor?` | `String` | `#000` |\n| `overlayOpacity?` | `Number` | `0.5` |\n| `hasOverlay?` | `Boolean` | `true` | | |\n| `onShow?` | `Function` | | You can pass shown function as a callback function, will call the function when modal shown | |\n| `onDismiss?` | `Function` | | You can pass onDismiss function as a callback function, will call the function when modal dismissed | |\n| `onTouchOutside?` | `Function` | `() => {}` | | |\n| `onHardwareBackPress?` | `Function` | `() => true` | [Handle hardware button presses](https://facebook.github.io/react-native/docs/backhandler) | |\n| `onMove?` | `Function` | `() => {}` | | |\n| `onSwiping?` | `Function` | `() => {}` | | |\n| `onSwipeRelease?` | `Function` | `() => {}` | | |\n| `onSwipingOut?` | `Function` | `() => {}` | | |\n| `onSwipeOut?` | `Function` | | | |\n| `swipeDirection?` | `string or Array<string>` | [] | Available option: `up`, `down`, `left`, `right` | |\n| `swipeThreshold?` | `number` | `100` | | |\n| `footer?` | `React Element` | `null` | for example: ```<View><Button text="DISMISS" align="center" onPress={() => {}}/></View>``` | |\n\n### ModalTitle\n| Prop | Type | Default | Note |\n|---|---|---|---|\n| `title` | `String` | | | |\n| `style?` | `any` | `null` | | |\n| `textStyle?` | `any` | `null` | | |\n| `align?` | `String` | `center` | Available option: `left`, `center`, `right` | |\n| `hasTitleBar?` | `Bool` | `true` | | |\n\n\n### ModalContent\n| Prop | Type | Default | Note |\n|---|---|---|---|\n| `children` | `any` | | | |\n| `style?` | `any` | `null` | | |\n\n\n### ModalFooter\n| Prop | Type | Default | Note |\n|---|---|---|---|\n| `children` | `ModalButton` | | | |\n| `bordered?` | `Boolean` | `true` | | |\n| `style?` | `any` | null | | |\n\n\n### ModalButton\n| Prop | Type | Default | Note |\n|---|---|---|---|\n| `text` | `String` | | | |\n| `onPress` | `Function` | | | |\n| `align?` | `String` | `center` | Available option: `left`, `center`, `right` | |\n| `style?` | `any` | `null` | | |\n| `textStyle?` | `any` | `null` | | |\n| `activeOpacity?` | `Number` | `0.6` | | |\n| `disabled?` | `Boolean` | `false` | | |\n| `bordered?` | `Boolean` | `false` | | |\n\n\n### Backdrop\n| Prop | Type | Default | Note |\n|---|---|---|---|\n| `visible` | `Boolean` | | | |\n| `opacity` | `Number` | `0.5` | | |\n| `onPress?` | `Function` | | | |\n| `backgroundColor?` | `string` | `#000` | | |\n| `animationDuration?` | `Number` | `200` | | |\n| `pointerEvents?` | `String` | `null` | Available option: `auto`, `none` | |\n| `useNativeDriver?` | `Boolean` | `true` | | |\n\n\n## Animation\n### Params for (*)Animation\n\n### FadeAnimation\n##### Preview:\n<img src="https://raw.githubusercontent.com/jacklam718/react-native-modals/master/.github/fade-animation.gif" width="200">\n\n##### Example:\n```javascript\nnew FadeAnimation({\n  initialValue: 0, // optional\n  animationDuration: 150, // optional\n  useNativeDriver: true, // optional\n})\n```\n| Param | Type | Default | Note |\n|---|---|---|---|\n| `initialValue` | Number | 0 | |\n| `animationDuration?` | Number | 150 | |\n| `useNativeDriver?` | Boolean | true | |\n\n### ScaleAnimation\n##### Preview:\n<img src="https://raw.githubusercontent.com/jacklam718/react-native-modals/master/.github/scale-animation.gif" width="200">\n\n##### Example:\n```javascript\nnew ScaleAnimation({\n  initialValue: 0, // optional\n  useNativeDriver: true, // optional\n})\n```\n| Param | Type | Default | Note |\n|---|---|---|---|\n| `initialValue` | Number | 0 | |\n| `useNativeDriver` | Boolean | true |  |\n\n### SlideAnimation\n##### Preview:\n<img src="https://raw.githubusercontent.com/jacklam718/react-native-modals/master/.github/slide-animation.gif" width="200">\n\n##### Example:\n```javascript\nnew SlideAnimation({\n  initialValue: 0, // optional\n  slideFrom: \'bottom\', // optional\n  useNativeDriver: true, // optional\n})\n```\n| Param | Type | Default | Note |\n|---|---|---|---|\n| `initialValue` | Number | 0 | |\n| `slideFrom` | String | `bottom` | Available option: `top`, `bottom`, `left`, `right` |\n| `useNativeDriver` | Boolean | true | |\n\n### Create your custom animation\n\n##### Example:\n\n```javascript\nimport { Animated } from \'react-native\';\nimport { Animation } from \'react-native-modals\';\n\nclass CustomAnimation extends Animation {\n  in(onFinished) {\n    Animated.spring(this.animate, {\n      toValue: 1,\n      useNativeDriver: this.useNativeDriver,\n    }).start(onFinished);\n  }\n\n  out(onFinished) {\n    Animated.spring(this.animate, {\n      toValue: 0,\n      useNativeDriver: this.useNativeDriver,\n    }).start(onFinished);\n  }\n\n  getAnimations() {\n    return {\n      transform: [{\n        translateY: this.animate.interpolate({\n          inputRange: [0, 1],\n          outputRange: [800, 1],\n        }),\n      }],\n    };\n  }\n}\n```\n\n## Development\n`yarn`\n\n`yarn run build`\n\n`yarn test`\n'