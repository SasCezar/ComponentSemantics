b'# Direction Reveal\n### A plugin that detects the direction a user enters or leaves an element allowing you to reveal or hide content based on this direction.\n\n### [View demo](http://nigelotoole.github.io/direction-reveal/)\n\n\n\n## Installation\n```javascript\n$ npm install direction-reveal --save-dev\n```\n\n\n## Usage\n\n### Import JS\n\nThe script is an ES6(ES2015) module but the compiled version is included in the build as "src/scripts/direction-reveal-umd.js". You can also copy "src/scripts/direction-reveal.js" into your own site if your build process can accommodate ES6 modules.\n\n```javascript\nimport DirectionReveal from \'direction-reveal\';\n\n// Init with default setup\nconst directionRevealDemo = DirectionReveal();\n\n// Init with all options at default setting\nconst directionRevealDefault = DirectionReveal({\n  selector: \'.direction-reveal\',\n  itemSelector: \'.direction-reveal__card\',\n  animationName: \'swing\',\n  animationPostfixEnter: \'enter\',\n  animationPostfixLeave: \'leave\',\n  enableTouch: true,\n  touchThreshold: 250\n});\n```\n\n### Options\n| Property                | Default                     | Type       | Description                                                                                       |\n| ----------------------- | --------------------------- | ---------- | ------------------------------------------------------------------------------------------------- |\n| `selector`              | \'.direction-reveal\'         | String     | Container element selector.                                                                       |\n| `itemSelector`          | \'.direction-reveal\\_\\_card\' | String     | Item element selector.                                                                            |\n| `animationName`         | \'swing\'                     | String     | Animation class.                                                                                  |\n| `animationPostfixEnter` | \'enter\'                     | String     | Animation CSS class postfix for enter event.                                                      |\n| `animationPostfixLeave` | \'leave\'                     | String     | Animation CSS class postfix for leave event.                                                      |\n| `enableTouch`           | true                        | Boolean    | Adds touch event to show content on first click then follow link on the second click.             |\n| `touchThreshold`        | 250                         | Number(ms) | The touch length in ms to trigger the reveal, this is to prevent triggering if user is scrolling. |\n\n\n### Import SASS\n\n```scss\n@import "node_modules/direction-reveal/src/styles/direction-reveal.scss";\n```\n\n\n### Markup\n\n```html\n<div class="direction-reveal">\n\n  <a href="#" class="direction-reveal__card">\n    <img src="images/image.jpg" alt="Image" class="img-fluid">\n\n    <div class="direction-reveal__overlay direction-reveal__anim--enter">\n      <h3 class="direction-reveal__title">Title</h3>\n      <p class="direction-reveal__text">Description text.</p>\n    </div>\n  </a>\n\n  ...\n</div>\n```\n\n\n### Using other tags\nThe demos use &lt;a&gt; tags for the "direction-reveal__card" but a &lt;div&gt; can be used as below, specifying the tabindex ensures keyboard navigation works as expected. They can all have a value of 0 and will follow the source order of the divs.\n\n```html\n<div class="direction-reveal__card" tabindex="0">\n  ...\n</div>\n```\n\n### Inverted animations\n\nMost of the animations above can be inverted so the overlay is visible by default and animates out on hover. Change the class \'direction-reveal__anim--enter\' to \'direction-reveal__anim--leave\' for this effect.\n\nYou can also add the class \'direction-reveal__anim--enter\' or \'direction-reveal__anim--leave\' to the image to animate it at the same time as overlay. This effect can be seen in the Slide & Push demo.\n\n## Events\n\nA \'directionChange\' event is broadcast once a user enters/leaves an item with information about the action(enter,leave) and direction(top, right, bottom, left).\n\n```javascript\ndocument.querySelector(\'#test\').addEventListener(\'directionChange\', (event) => { \n  console.log(`Action: ${event.detail.action} Direction: ${event.detail.direction}`);\n});\n```\n\n## Compatibility\n\n### Touch support\nThe plugin will detect touch support and reveal the hidden content on first click then follow link on the second click. This can be disabled with the option enableTouch.\n\n\n### Browser support\nSupports all modern browsers(Firefox, Chrome and Edge) released as of January 2018. For older browsers you may need to include polyfills for [Nodelist.forEach](https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach), [Element.classList](https://developer.mozilla.org/en-US/docs/Web/API/Element/classList) and [Passive Event Listeners](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener).\n\n\n\n## Demo site\nClone or download from Github.\n\n```javascript\n$ npm install\n$ gulp serve\n```\n\n### Credits\n\nInspired by a Codepen by [Noel Delgado](https://codepen.io/noeldelgado/pen/pGwFx), this [Stack overflow answer](https://stackoverflow.com/a/3647634), the article [Get an Element\'s position using javascript](https://www.kirupa.com/html5/get_element_position_using_javascript.htm) and [Images from Unsplash.](https://unsplash.com).\n\n\n### License\nMIT \xc2\xa9 Nigel O Toole\n'