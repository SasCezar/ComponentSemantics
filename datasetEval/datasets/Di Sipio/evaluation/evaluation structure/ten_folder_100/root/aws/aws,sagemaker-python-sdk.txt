b".. image:: https://github.com/aws/sagemaker-python-sdk/raw/master/branding/icon/sagemaker-banner.png\n    :height: 100px\n    :alt: SageMaker\n\n====================\nSageMaker Python SDK\n====================\n\n.. image:: https://travis-ci.org/aws/sagemaker-python-sdk.svg?branch=master\n   :target: https://travis-ci.org/aws/sagemaker-python-sdk\n   :alt: Build Status\n\n.. image:: https://codecov.io/gh/aws/sagemaker-python-sdk/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/aws/sagemaker-python-sdk\n   :alt: CodeCov\n\n.. image:: https://img.shields.io/pypi/v/sagemaker.svg\n   :target: https://pypi.python.org/pypi/sagemaker\n   :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/pyversions/sagemaker.svg\n   :target: https://pypi.python.org/pypi/sagemaker\n   :alt: Supported Python Versions\n\n.. image:: https://img.shields.io/badge/code_style-black-000000.svg\n   :target: https://github.com/python/black\n   :alt: Code style: black\n\n.. image:: https://readthedocs.org/projects/sagemaker/badge/?version=stable\n   :target: https://sagemaker.readthedocs.io/en/stable/\n   :alt: Documentation Status\n\nSageMaker Python SDK is an open source library for training and deploying machine learning models on Amazon SageMaker.\n\nWith the SDK, you can train and deploy models using popular deep learning frameworks **Apache MXNet** and **TensorFlow**.\nYou can also train and deploy models with **Amazon algorithms**,\nwhich are scalable implementations of core machine learning algorithms that are optimized for SageMaker and GPU training.\nIf you have **your own algorithms** built into SageMaker compatible Docker containers, you can train and host models using these as well.\n\nFor detailed API reference please go to: `Read the Docs <https://sagemaker.readthedocs.io>`_\n\nTable of Contents\n-----------------\n\n1. `Installing SageMaker Python SDK <#installing-the-sagemaker-python-sdk>`__\n2. `Using the SageMaker Python SDK <https://sagemaker.readthedocs.io/en/stable/overview.html>`__\n3. `MXNet SageMaker Estimators <#mxnet-sagemaker-estimators>`__\n4. `TensorFlow SageMaker Estimators <#tensorflow-sagemaker-estimators>`__\n5. `Chainer SageMaker Estimators <#chainer-sagemaker-estimators>`__\n6. `PyTorch SageMaker Estimators <#pytorch-sagemaker-estimators>`__\n7. `Scikit-learn SageMaker Estimators <#scikit-learn-sagemaker-estimators>`__\n8. `XGBoost SageMaker Estimators <#xgboost-sagemaker-estimators>`__\n9. `SageMaker Reinforcement Learning Estimators <#sagemaker-reinforcement-learning-estimators>`__\n10. `SageMaker SparkML Serving <#sagemaker-sparkml-serving>`__\n11. `AWS SageMaker Estimators <#aws-sagemaker-estimators>`__\n12. `Using SageMaker AlgorithmEstimators <https://sagemaker.readthedocs.io/en/stable/overview.html#using-sagemaker-algorithmestimators>`__\n13. `Consuming SageMaker Model Packages <https://sagemaker.readthedocs.io/en/stable/overview.html#consuming-sagemaker-model-packages>`__\n14. `BYO Docker Containers with SageMaker Estimators <https://sagemaker.readthedocs.io/en/stable/overview.html#byo-docker-containers-with-sagemaker-estimators>`__\n15. `SageMaker Automatic Model Tuning <https://sagemaker.readthedocs.io/en/stable/overview.html#sagemaker-automatic-model-tuning>`__\n16. `SageMaker Batch Transform <https://sagemaker.readthedocs.io/en/stable/overview.html#sagemaker-batch-transform>`__\n17. `Secure Training and Inference with VPC <https://sagemaker.readthedocs.io/en/stable/overview.html#secure-training-and-inference-with-vpc>`__\n18. `BYO Model <https://sagemaker.readthedocs.io/en/stable/overview.html#byo-model>`__\n19. `Inference Pipelines <https://sagemaker.readthedocs.io/en/stable/overview.html#inference-pipelines>`__\n20. `SageMaker Workflow <#sagemaker-workflow>`__\n\n\nInstalling the SageMaker Python SDK\n-----------------------------------\n\nThe SageMaker Python SDK is built to PyPI and can be installed with pip as follows:\n\n::\n\n    pip install sagemaker\n\nYou can install from source by cloning this repository and running a pip install command in the root directory of the repository:\n\n::\n\n    git clone https://github.com/aws/sagemaker-python-sdk.git\n    cd sagemaker-python-sdk\n    pip install .\n\nSupported Operating Systems\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSageMaker Python SDK supports Unix/Linux and Mac.\n\nSupported Python Versions\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSageMaker Python SDK is tested on:\n\n- Python 2.7\n- Python 3.6\n\nAWS Permissions\n~~~~~~~~~~~~~~~\n\nAs a managed service, Amazon SageMaker performs operations on your behalf on the AWS hardware that is managed by Amazon SageMaker.\nAmazon SageMaker can perform only operations that the user permits.\nYou can read more about which permissions are necessary in the `AWS Documentation <https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html>`__.\n\nThe SageMaker Python SDK should not require any additional permissions aside from what is required for using SageMaker.\nHowever, if you are using an IAM role with a path in it, you should grant permission for ``iam:GetRole``.\n\nLicensing\n~~~~~~~~~\nSageMaker Python SDK is licensed under the Apache 2.0 License. It is copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved. The license is available at:\nhttp://aws.amazon.com/apache2.0/\n\nRunning tests\n~~~~~~~~~~~~~\n\nSageMaker Python SDK has unit tests and integration tests.\n\nYou can install the libraries needed to run the tests by running :code:`pip install --upgrade .[test]` or, for Zsh users: :code:`pip install --upgrade .\\[test\\]`\n\n**Unit tests**\n\n\nWe run unit tests with tox, which is a program that lets you run unit tests for multiple Python versions, and also make sure the\ncode fits our style guidelines. We run tox with Python 2.7 and 3.6, so to run unit tests\nwith the same configuration we do, you'll need to have interpreters for Python 2.7 and Python 3.6 installed.\n\nTo run the unit tests with tox, run:\n\n::\n\n    tox tests/unit\n\n**Integrations tests**\n\nTo run the integration tests, the following prerequisites must be met\n\n1. AWS account credentials are available in the environment for the boto3 client to use.\n2. The AWS account has an IAM role named :code:`SageMakerRole`.\n   It should have the AmazonSageMakerFullAccess policy attached as well as a policy with `the necessary permissions to use Elastic Inference <https://docs.aws.amazon.com/sagemaker/latest/dg/ei-setup.html>`__.\n\nWe recommend selectively running just those integration tests you'd like to run. You can filter by individual test function names with:\n\n::\n\n    tox -- -k 'test_i_care_about'\n\n\nYou can also run all of the integration tests by running the following command, which runs them in sequence, which may take a while:\n\n::\n\n    tox -- tests/integ\n\n\nYou can also run them in parallel:\n\n::\n\n    tox -- -n auto tests/integ\n\n\nBuilding Sphinx docs\n~~~~~~~~~~~~~~~~~~~~\n\n``cd`` into the ``doc`` directory and run:\n\n::\n\n    make html\n\nYou can edit the templates for any of the pages in the docs by editing the .rst files in the ``doc`` directory and then running ``make html`` again.\n\nMXNet SageMaker Estimators\n--------------------------\n\nBy using MXNet SageMaker Estimators, you can train and host MXNet models on Amazon SageMaker.\n\nSupported versions of MXNet: ``0.12.1``, ``1.0.0``, ``1.1.0``, ``1.2.1``, ``1.3.0``, ``1.4.0``, ``1.4.1``.\n\nSupported versions of MXNet for Elastic Inference: ``1.3.0``, ``1.4.0``, ``1.4.1``.\n\nWe recommend that you use the latest supported version, because that's where we focus most of our development efforts.\n\nFor more information, see `Using MXNet with the SageMaker Python SDK`_.\n\n.. _Using MXNet with the SageMaker Python SDK: https://sagemaker.readthedocs.io/en/stable/using_mxnet.html\n\n\nTensorFlow SageMaker Estimators\n-------------------------------\n\nBy using TensorFlow SageMaker Estimators, you can train and host TensorFlow models on Amazon SageMaker.\n\nSupported versions of TensorFlow: ``1.4.1``, ``1.5.0``, ``1.6.0``, ``1.7.0``, ``1.8.0``, ``1.9.0``, ``1.10.0``, ``1.11.0``, ``1.12.0``, ``1.13.1``, ``1.14``.\n\nSupported versions of TensorFlow for Elastic Inference: ``1.11.0``, ``1.12.0``, ``1.13.1``, ``1.14``.\n\nWe recommend that you use the latest supported version, because that's where we focus most of our development efforts.\n\nFor more information, see `Using TensorFlow with the SageMaker Python SDK`_.\n\n.. _Using TensorFlow with the SageMaker Python SDK: https://sagemaker.readthedocs.io/en/stable/using_tf.html\n\n\nChainer SageMaker Estimators\n----------------------------\n\nBy using Chainer SageMaker Estimators, you can train and host Chainer models on Amazon SageMaker.\n\nSupported versions of Chainer: ``4.0.0``, ``4.1.0``, ``5.0.0``.\n\nWe recommend that you use the latest supported version, because that's where we focus most of our development efforts.\n\nFor more information about Chainer, see https://github.com/chainer/chainer.\n\nFor more information about Chainer SageMaker Estimators, see `Using Chainer with the SageMaker Python SDK`_.\n\n.. _Using Chainer with the SageMaker Python SDK: https://sagemaker.readthedocs.io/en/stable/using_chainer.html\n\n\nPyTorch SageMaker Estimators\n----------------------------\n\nWith PyTorch SageMaker Estimators, you can train and host PyTorch models on Amazon SageMaker.\n\nSupported versions of PyTorch: ``0.4.0``, ``1.0.0``, ``1.1.0``, ``1.2.0``.\n\nWe recommend that you use the latest supported version, because that's where we focus most of our development efforts.\n\nFor more information about PyTorch, see https://github.com/pytorch/pytorch.\n\nFor more information about PyTorch SageMaker Estimators, see `Using PyTorch with the SageMaker Python SDK`_.\n\n.. _Using PyTorch with the SageMaker Python SDK: https://sagemaker.readthedocs.io/en/stable/using_pytorch.html\n\n\nScikit-learn SageMaker Estimators\n---------------------------------\n\nWith Scikit-learn SageMaker Estimators, you can train and host Scikit-learn models on Amazon SageMaker.\n\nSupported versions of Scikit-learn: ``0.20.0``.\n\nWe recommend that you use the latest supported version, because that's where we focus most of our development efforts.\n\nFor more information about Scikit-learn, see https://scikit-learn.org/stable/\n\nFor more information about Scikit-learn SageMaker Estimators, see `Using Scikit-learn with the SageMaker Python SDK`_.\n\n.. _Using Scikit-learn with the SageMaker Python SDK: https://sagemaker.readthedocs.io/en/stable/using_sklearn.html\n\nXGBoost SageMaker Estimators\n----------------------------\n\nWith XGBoost SageMaker Estimators, you can train and host XGBoost models on Amazon SageMaker.\n\nSupported versions of XGBoost: ``0.90-1``.\n\nWe recommend that you use the latest supported version, because that's where we focus most of our development efforts.\n\nFor more information about XGBoost, see https://xgboost.readthedocs.io/en/latest/\n\nFor more information about XGBoost SageMaker Estimators, see `Using XGBoost with the SageMaker Python SDK`_.\n\n.. _Using XGBoost with the SageMaker Python SDK: https://sagemaker.readthedocs.io/en/stable/using_xgboost.html\n\n\nSageMaker Reinforcement Learning Estimators\n-------------------------------------------\n\nWith Reinforcement Learning (RL) Estimators, you can use reinforcement learning to train models on Amazon SageMaker.\n\nSupported versions of Coach: ``0.10.1``, ``0.11.1`` with TensorFlow, ``0.11.0`` with TensorFlow or MXNet.\nFor more information about Coach, see https://github.com/NervanaSystems/coach\n\nSupported versions of Ray: ``0.5.3``, ``0.6.5`` with TensorFlow.\nFor more information about Ray, see https://github.com/ray-project/ray\n\nFor more information about SageMaker RL Estimators, see `SageMaker Reinforcement Learning Estimators`_.\n\n.. _SageMaker Reinforcement Learning Estimators: src/sagemaker/rl/README.rst\n\n\nSageMaker SparkML Serving\n-------------------------\n\nWith SageMaker SparkML Serving, you can now perform predictions against a SparkML Model in SageMaker.\nIn order to host a SparkML model in SageMaker, it should be serialized with ``MLeap`` library.\n\nFor more information on MLeap, see https://github.com/combust/mleap .\n\nSupported major version of Spark: 2.2 (MLeap version - 0.9.6)\n\nHere is an example on how to create an instance of  ``SparkMLModel`` class and use ``deploy()`` method to create an\nendpoint which can be used to perform prediction against your trained SparkML Model.\n\n.. code:: python\n\n    sparkml_model = SparkMLModel(model_data='s3://path/to/model.tar.gz', env={'SAGEMAKER_SPARKML_SCHEMA': schema})\n    model_name = 'sparkml-model'\n    endpoint_name = 'sparkml-endpoint'\n    predictor = sparkml_model.deploy(initial_instance_count=1, instance_type='ml.c4.xlarge', endpoint_name=endpoint_name)\n\nOnce the model is deployed, we can invoke the endpoint with a ``CSV`` payload like this:\n\n.. code:: python\n\n    payload = 'field_1,field_2,field_3,field_4,field_5'\n    predictor.predict(payload)\n\n\nFor more information about the different ``content-type`` and ``Accept`` formats as well as the structure of the\n``schema`` that SageMaker SparkML Serving recognizes, please see `SageMaker SparkML Serving Container`_.\n\n.. _SageMaker SparkML Serving Container: https://github.com/aws/sagemaker-sparkml-serving-container\n\nAWS SageMaker Estimators\n------------------------\nAmazon SageMaker provides several built-in machine learning algorithms that you can use to solve a variety of problems.\n\nThe full list of algorithms is available at: https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\n\nThe SageMaker Python SDK includes estimator wrappers for the AWS K-means, Principal Components Analysis (PCA), Linear Learner, Factorization Machines,\nLatent Dirichlet Allocation (LDA), Neural Topic Model (NTM), Random Cut Forest, k-nearest neighbors (k-NN), Object2Vec, and IP Insights algorithms.\n\nFor more information, see `AWS SageMaker Estimators and Models`_.\n\n.. _AWS SageMaker Estimators and Models: src/sagemaker/amazon/README.rst\n\nSageMaker Workflow\n------------------\n\nYou can use Apache Airflow to author, schedule and monitor SageMaker workflow.\n\nFor more information, see `SageMaker Workflow in Apache Airflow`_.\n\n.. _SageMaker Workflow in Apache Airflow: https://sagemaker.readthedocs.io/en/stable/using_workflow.html\n"