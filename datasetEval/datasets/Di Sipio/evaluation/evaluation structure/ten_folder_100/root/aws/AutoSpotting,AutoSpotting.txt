b'# AutoSpotting #\n\n<!-- markdownlint-disable MD003 MD026 MD033 -->\n\n<img src="logo.png" width="150" align="right">\n\n[![BuildStatus](https://travis-ci.org/AutoSpotting/AutoSpotting.svg?branch=master)](https://travis-ci.org/AutoSpotting/AutoSpotting)\n[![GoReportCard](https://goreportcard.com/badge/github.com/AutoSpotting/AutoSpotting)](https://goreportcard.com/report/github.com/AutoSpotting/AutoSpotting)\n[![CoverageStatus](https://coveralls.io/repos/github/AutoSpotting/AutoSpotting/badge.svg?branch=master)](https://coveralls.io/github/AutoSpotting/AutoSpotting?branch=master)\n[![CodeClimate](https://codeclimate.com/github/AutoSpotting/AutoSpotting/badges/gpa.svg)](https://codeclimate.com/github/AutoSpotting/AutoSpotting)\n[![IssueCount](https://codeclimate.com/github/AutoSpotting/AutoSpotting/badges/issue_count.svg)](https://codeclimate.com/github/AutoSpotting/AutoSpotting)\n[![ChatOnGitter](https://badges.gitter.im/AutoSpotting/AutoSpotting.svg)](https://gitter.im/cristim/autospotting)\n[![Open Source Helpers](https://www.codetriage.com/AutoSpotting/AutoSpotting/badges/users.svg)](https://www.codetriage.com/AutoSpotting/AutoSpotting)\n[![Patreon](https://img.shields.io/badge/patreon-donate-yellow.svg)](https://www.patreon.com/cristim/overview)\n\nA simple and easy to use tool designed to significantly lower your Amazon AWS\ncosts by automating the use of [spot](https://aws.amazon.com/ec2/spot)\ninstances.\n\n## Why? ##\n\nWe believe that AWS EC2 is often pricier than it should be, and that the pricing\nmodels that can significantly reduce costs are hard to be reliably used by\nhumans and are better handled by automation.\n\nThere are many way to automate the use of spot instances, some offered out of\nthe box by AWS and some from third parties, each with its own characteristics\nand drawbacks.\n\nUnlike all those options, we developed a novel, simple but effective way to make\nit much easier to **convert existing infrastructure within minutes, with minimal\nconfiguration changes, negligible additional infrastructure and runtime costs,\nsafely and securely and without any vendor lock-in**.\n\nNote: it\'s not necessarily the most cost-efficient for a given AutoScaling\ngroup, although it does perform pretty well in practice. The main focus is the\n**ease of adoption on large infrastructure** such as environments with hundreds\nof AutoScaling groups or even hundreds of AWS accounts where it can be rolled\nout and enabled in almost no-time compared to any other tool out there. Once you\ntested it and you are confident with it, it can even be enabled against all the\ngroups from an AWS account without touching their configuration.\n\nIt also tries to be as cheap as possible to run, with **negligible runtime\ncosts** and being open source the software is **free of charge if you build it\nfrom source**. In addition we offer inexpensive enterprise-grade support plans\nthat should barely be noticeable at scale, but just enough to support further\ndevelopment, unlike similar commercial tools that claim a very significant chunk\nof your savings.\n\nThis approach allows a large number of companies and individuals to\nsignificantly reduce their infrastructure costs or get more bang for the same\nbuck. They can now easily get access to cheap compute capacity so they can spend\ntheir scarce resources developing innovative products not paying for overpriced\ncompute capacity.\n\n## How does it work? ##\n\nOnce installed and enabled by tagging existing on-demand AutoScaling groups,\nAutoSpotting gradually replaces their on-demand instances with spot instances\nthat are usually much cheaper, at least as large and identically configured to\nthe group\'s members, without changing the group configuration in any way. For\nyour peace of mind, you can also keep running a configurable number of on-demand\ninstances given as percentage or absolute number.\n\nThis can be seen in action below, you can click to expand the animation:\n\n![Workflow](https://autospotting.org/img/autospotting.gif)\n\nIt implements some complex logic aware of spot and on demand prices, including\nfor different spot products and configurable discounts for reserved instances or\nlarge volume customers. It also considers the specs of all instance types and\nautomatically places bids to instance types and prices chosen based on flexible\nconfiguration set globally or overridden at the group level using additional\ntags, but these overrides are often not needed.\n\nA single installation can handle all enabled groups in parallel across all\navailable AWS regions, but can be restricted to fewer regions if desired.\n\nYour groups will then monitor and use these spot instances just like they would\ndo with your on-demand instances. They will automatically join your load\nbalancer and start receiving traffic once passing the health checks, and the\ntraffic would automatically be drained on termination.\n\n## What savings can I expect? ##\n\nThe savings it generates are often in the 60-80% range, but sometimes even up to\n90%, like you can see in the graph below.\n\n![Savings](https://autospotting.org/img/savings.png)\n\n## What\'s under the hood? ##\n\nThe entire logic described above is implemented in a Lambda function deployed\nusing CloudFormation or Terraform stacks that can be installed and configured in\njust a few minutes.\n\nThe stack assigns the function the minimal set of IAM permissions required for\nit to work and requires no admin-like cross-account permissions. The entire code\nbase can be audited to see how these permissions are being used and even locked\ndown further if your audit discovers any issues. **This is not a SaaS**, there\'s\nno component that calls home and reveals any details about your infrastructure.\n\nThe Lambda function is written in the Go programming language and the code is\ncompiled as a static binary compressed and uploaded to S3. For evaluation or\ndebugging purposes, the same binary can run out of the box locally on Linux\nmachines or as a Docker container on Windows or macOS. Some people even run\nthese containers on their existing Kubernetes clusters assuming the other\nresources provided by the stack are implemented in another way on Kubernetes.\n\nThe stack also consists of a Cron-like CloudWatch event, that runs the Lambda\nfunction periodically to take action against the enabled groups. Between runs\nyour group is entirely managed by AutoScaling (including any scaling policies\nyou may have) and load balancer health checks, that can trigger instance\nlaunches or replacements using the original on-demand launch configuration.\nThese instances will be replaced later by better priced spot instances when they\nare available on the spot market.\n\nRead [here](TECHNICAL_DETAILS.md) for more information and implementation\ndetails.\n\n## FAQs ##\n\nFrequently asked questions about the project are answered in the\n[FAQ](https://autospotting.org/faq/index.html), *please read this first before\nasking for support*.\n\nIf you have additional questions not covered there, they can be easily added to\nthe\n[source](https://github.com/AutoSpotting/autospotting.org/blob/master/content/faq.md)\nof the FAQ by editing in the browser and creating a pull request, and we\'ll\nanswer them while reviewing the pull request.\n\n## Getting Started ##\n\nJust like in the above animation, it\'s as easy as launching a CloudFormation (or\n[Terraform](https://github.com/AutoSpotting/terraform-aws-autospotting))\nstack and setting the (configurable) `spot-enabled` tag on the AutoScaling\ngroups where you want it enabled to `true`.\n\nAll the required infrastructure and configuration will be created automatically,\nso you can get started as fast as possible.\n\nFor more detailed information you can read this [document](START.md)\n\n[![Launch](https://s3.amazonaws.com/cloudformation-examples/cloudformation-launch-stack.png)](https://autospotting.org)\n\n### Note ###\n\n- the binaries launched by this stack are distributed under a proprietary\n  [license](BINARY_LICENSE), and are **free to use for evaluation, up to $1000\n  monthly savings**. Once you reach this limit you\'ll need to either switch to the\n  inexpensive supported binaries (designed to cost a small fraction of around\n  1% of your total savings for supporting further development), or you can build\n  your own binaries based on the open source code and run it for free.\n\n## Support ##\n\nCommunity support is available on the\n[gitter](https://gitter.im/cristim/autospotting) chat room, where the main\nauthors and other users are likely to help you solve issues.\n\nNote: This is offered on a best effort basis and under certain conditions, such\nas using the latest version of the evaluation binaries.\n\nIf you need more comprehensive support you will need to purchase a support plan.\n\n## Contributing ##\n\nUnlike multiple commercial products in this space that cost a lot of money and\nattempt to lock you in, this project is fully open source and developed in the\nopen by a vibrant community.\n\nIt was largely developed by volunteers who spent countless hours of their own\nspare time to make it easy for you to use. If you find it useful and you\nappreciate the work they put in it, please consider contributing to the\ndevelopment effort as well.\n\nYou can just try it out and give\n[feedback](https://gitter.im/cristim/autospotting), report issues, improve the\ndocumentation, write some code or assign a developer to work on it, or even just\nspread the word among your peers who might be interested in it. Any amount of\nhelp would be greatly appreciated and would make a huge difference to the\nproject.\n\nYou can also contribute financially, we gladly accept recurrent tips on\n[Patreon](https://www.patreon.com/cristim/overview), regardless of the amount.\nThese donations will pay for hosting infrastructure of the easy to install\nbinaries and the project website, and will also encourage further development\nby the main author.\n\nCompanies can also use the official stable and easy to install binaries (see\nbelow for more details) and get support plans to support the development effort.\n\nNote: Non-trivial code should be submitted according to the contribution\n[guidelines](CONTRIBUTING.md).\n\n### Proprietary binaries ###\n\nThe source code is and will always be open source, so you can build and run\nit yourself, see how it works and even enhance it if you want.\n\nBut if you want to conveniently get started or update within minutes without\nsetting up and maintaining a build environment or any additional infrastructure,\nwe have pre-built evaluation binaries that will save you significant\namounts of time and effort.\n\nThese can be used for evaluation purposes as long as the generated monthly\nsavings are less than $1000. Once you reach this level you will need to either\npurchase an inexpensive stable build that doesn\'t have this limitation, and also\ncomes with a support plan, or you can build AutoSpotting from source code.\n\nThe support license costs vary by group, region and AWS account coverage and can\nalso be paid through [Patreon](https://www.patreon.com/cristim/overview).\n\nIndividuals and companies supporting the development of the open source code get\nfree of charge support and stable build access for a year since their latest\ncontribution to the project.\n\n#### Note: ####\n\n- even though these evaluation builds are usually stable enough, they may\n  not have been thoroughly tested yet and come with best effort community\n  support.\n- the docker images available on DockerHub are also distributed under the\n  same binary license and the costs are the same.\n\n### Stable builds ###\n\nCarefully tested builds suitable for Enterprise use will be communicated\nto [Patreon](https://www.patreon.com/cristim/overview) backers as soon as\nthey join.\n\nThey come with support from the author, who will do his best to help you\nsuccessfully run AutoSpotting on your environment so you can get the most out of\nit. The feature requests and issues will also be prioritized based on the\nPatreon tier.\n\nPlease get in touch on [gitter](https://gitter.im/cristim) if you have any\nquestions about these stable builds.\n\n## Compiling and Installing ##\n\nIt is recommended to use the evaluation or stable binaries, which are easy to\ninstall, support further development of the software and allow you to get\nsupport.\n\nBut if you have some special needs that require some customizations or you don\'t\nwant to rely on the author\'s infrastructure or contribute anything for longer\nterm use of the software, you can always build and run your customized binaries\nthat you maintain on your own, just keep in mind that those won\'t be supported\nin any way.\n\nMore details are available [here](CUSTOM_BUILDS.md)\n\n## Users ##\n\nAutospotting is already used by hundreds of individuals and organizations around\nthe world, and we estimate to already save them in the millions of dollars. Some\nof them we know of are mentioned in the [list](USERS.md) of notable users.\n\nThe following deserve a special mention for contributing significantly to the\ndevelopment effort (listed in alphabetical order):\n\n- www.branch.io\n- www.cs.utexas.edu\n- www.cycloid.io\n- www.here.com\n- www.spscommerce.com\n- www.timber.io\n\n## License ##\n\nThis software is distributed under the terms of the MIT [license](LICENSE).\n\nThe official binaries are licensed under this proprietary\n[license](BINARY_LICENSE).\n'