b'# Prowler: AWS CIS Benchmark Tool\n\n## Table of Contents\n\n- [Description](#description)\n- [Features](#features)\n- [Requirements and Installation](#requirements-and-installation)\n- [Usage](#usage)\n- [Fix](#fix)\n- [Screenshots](#screenshots)\n- [Troubleshooting](#troubleshooting)\n- [Extras](#extras)\n- [Forensics Ready Checks](#forensics-ready-checks)\n- [GDPR Checks](#gdpr-checks)\n- [HIPAA Checks](#hipaa-checks)\n- [Add Custom Checks](#add-custom-checks)\n- [Third Party Integrations](#third-party-integrations)\n- [Full list of checks and groups](/LIST_OF_CHECKS_AND_GROUPS.md)\n- [License](#license)\n\n## Description\n\nProwler is a command line tool for AWS Security Best Practices Assessment, Auditing, Hardening and Forensics Readiness Tool.\n\nIt follows guidelines of the CIS Amazon Web Services Foundations Benchmark (49 checks) and has 40 additional checks including related to GDPR and HIPAA.\n\nRead more about [CIS Amazon Web Services Foundations Benchmark v1.2.0 - 05-23-2018](https://d0.awsstatic.com/whitepapers/compliance/AWS_CIS_Foundations_Benchmark.pdf)\n\n## Features\n\nIt covers hardening and security best practices for all AWS regions related to the next groups:\n\n- Identity and Access Management (22 checks) [group1]\n- Logging (9 checks) [group2]\n- Monitoring (14 checks) [group3]\n- Networking (4 checks) [group4]\n- CIS Level 1 [cislevel1]\n- CIS Level 2 [cislevel2]\n- Extras (39 checks) *see Extras section* [extras]\n- Forensics related group of checks [forensics-ready]\n- GDPR [gdpr] Read more [here](#gdpr-checks)\n- HIPAA [hipaa] Read more [here](#hipaa-checks)\n\n\nFor a comprehensive list and resolution look at the guide on the link above.\n\nWith Prowler you can:\n\n- get a colorful or monochrome report\n- a CSV format report for diff\n- run specific checks without having to run the entire report\n- check multiple AWS accounts in parallel\n\n## Requirements and Installation\n\nThis script has been written in bash using AWS-CLI and it works in Linux and OSX.\n\n- Make sure the latest version of AWS-CLI is installed on your workstation, and other components needed, with Python pip already installed:\n\n    ```sh\n    pip install awscli ansi2html detect-secrets\n    ```\n\n    AWS-CLI can be also installed it using "brew", "apt", "yum" or manually from <https://aws.amazon.com/cli/>, but `ansi2html` and `detect-secrets` has to be installed using `pip`. You will need to install `jq` to get more accuracy in some checks. \n\n- Previous steps, from your workstation:\n\n    ```sh\n    git clone https://github.com/toniblyx/prowler\n    cd prowler\n    ```\n\n- Make sure you have properly configured your AWS-CLI with a valid Access Key and Region or declare AWS variables properly:\n\n    ```sh\n    aws configure\n    ```\n    or \n    ```sh\n    export AWS_ACCESS_KEY_ID="ASXXXXXXX"\n    export AWS_SECRET_ACCESS_KEY="XXXXXXXXX"\n    export AWS_SESSION_TOKEN="XXXXXXXXX"\n    ```\n\n- Those credentials must be associated to a user or role with proper permissions to do all checks. To make sure add SecurityAuditor default policy to your user. Policy ARN is\n\n    ```sh\n    arn:aws:iam::aws:policy/SecurityAudit\n    ```\n\n    > In some cases you may need more list or get permissions in some services, look at the Troubleshooting section for a more comprehensive policy if you find issues with the default SecurityAudit policy.\n\n## Usage\n\n1. Run the `prowler` command without options (it will use your environment variable credentials if they exist or will default to using the `~/.aws/credentials` file and run checks over all regions when needed. The default region is us-east-1):\n\n    ```sh\n    ./prowler\n    ```\n\n    Use `-l` to list all available checks and group of checks (sections)\n\n    If you want to avoid installing dependences run it using Docker:\n    \n    ```sh\n    docker run -ti --rm --name prowler --env AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY --env AWS_SESSION_TOKEN toniblyx/prowler:latest\n    ```\n\n1. For custom AWS-CLI profile and region, use the following: (it will use your custom profile and run checks over all regions when needed):\n\n    ```sh\n    ./prowler -p custom-profile -r us-east-1\n    ```\n\n1. For a single check use option `-c`:\n\n    ```sh\n    ./prowler -c check310\n    ```\n    With Docker:\n    ```sh\n    docker run -ti --rm --name prowler --env AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY --env AWS_SESSION_TOKEN toniblyx/prowler:latest "-c check310"\n    ```\n    \n    or multiple checks separated by comma:\n    ```sh\n    ./prowler -c check310,check722\n    ```\n    or all checks but some of them:\n    ```sh\n    ./prowler -E check42,check43\n    ```\n\n    or for custom profile and region:\n\n    ```sh\n    ./prowler -p custom-profile -r us-east-1 -c check11\n    ```\n\n    or for a group of checks use group name:\n\n    ```sh\n    ./prowler -g group1 # for iam related checks\n    ```\n    or exclude some checks in the group:\n    ```sh\n    ./prowler -g group4 -E check42,check43\n    ```\n\n    Valid check numbers are based on the AWS CIS Benchmark guide, so 1.1 is check11 and 3.10 is check310\n\n1. If you want to save your report for later analysis:\n\n    ```sh\n    ./prowler -M mono > prowler-report.txt\n    ```\n\n    or if you want a coloured HTML report do:\n\n    ```sh\n    pip install ansi2html\n    ./prowler | ansi2html -la > report.html\n    ```\n\n    or if you want a pipe-delimited report file, do:\n\n    ```sh\n    ./prowler -M csv > output.psv\n    ```\n    or json formatted output using jq, do:\n\n    ```sh\n    ./prowler -M json > prowler-output.json\n    ```\n\n    or save your report in a S3 bucket:\n\n    ```sh\n    ./prowler -M mono | aws s3 cp - s3://bucket-name/prowler-report.txt\n    ```\n\n1. To perform an assessment based on CIS Profile Definitions you can use cislevel1 or cislevel2 with `-c` flag, more information about this [here, page 8](https://d0.awsstatic.com/whitepapers/compliance/AWS_CIS_Foundations_Benchmark.pdf):\n\n    ```sh\n    ./prowler -g cislevel1\n    ```\n\n1. If you want to run Prowler to check multiple AWS accounts in parallel (runs up to 4 simultaneously `-P 4`):\n\n    ```sh\n    grep -E \'^\\[([0-9A-Aa-z_-]+)\\]\'  ~/.aws/credentials | tr -d \'][\' | shuf |  \\\n    xargs -n 1 -L 1 -I @ -r -P 4 ./prowler -p @ -M csv  2> /dev/null  >> all-accounts.csv\n    ```\n\n1. For help use:\n\n    ```\n    ./prowler -h\n\n    USAGE:\n        prowler [ -p <profile> -r <region>  -h ]\n\n    Options:\n        -p <profile>        specify your AWS profile to use (i.e.: default)\n        -r <region>         specify an AWS region to direct API requests to\n                                (i.e.: us-east-1), all regions are checked anyway if the check requires it\n        -c <check_id>       specify a check id, to see all available checks use -l option\n                                (i.e.: check11 for check 1.1 or extra71 for extra check 71)\n        -g <group_id>       specify a group of checks by id, to see all available group of checks use -L\n                                (i.e.: check3 for entire section 3, cislevel1 for CIS Level 1 Profile Definitions or forensics-ready)\n        -f <filterregion>   specify an AWS region to run checks against\n                                (i.e.: us-west-1)\n        -m <maxitems>       specify the maximum number of items to return for long-running requests (default: 100)\n        -M <mode>           output mode: text (default), mono, json, csv (separator is ,; data is on stdout; progress on stderr)\n        -k                  keep the credential report\n        -n                  show check numbers to sort easier\n                                (i.e.: 1.01 instead of 1.1)\n        -l                  list all available checks only (does not perform any check)\n        -L                  list all groups (does not perform any check)\n        -e                  exclude group extras\n        -E                  execute all tests except a list of specified checks separated by comma (i.e. check21,check31)\n        -b                  do not print Prowler banner\n        -V                  show version number & exit\n        -s                  show scoring report\n        -h                  this help\n    ```\n\n## How to fix every FAIL\n\nCheck your report and fix the issues following all specific guidelines per check in <https://d0.awsstatic.com/whitepapers/compliance/AWS_CIS_Foundations_Benchmark.pdf>\n\n## Screenshots\n\n- Sample screenshot of report first lines:\n\n    <img width="1125" alt="screenshot 2016-09-13 16 05 42" src="https://cloud.githubusercontent.com/assets/3985464/18489640/50fe6824-79cc-11e6-8a9c-e788b88a8a6b.png">\n\n- Sample screenshot of single check for check 3.3:\n\n    <img width="1006" alt="screenshot 2016-09-14 13 20 46" src="https://cloud.githubusercontent.com/assets/3985464/18522590/a04ca9a6-7a7e-11e6-8730-b545c9204990.png">\n\n## Troubleshooting\n\n### STS expired token\n\nIf you are using an STS token for AWS-CLI and your session is expired you probably get this error:\n\n```\nA client error (ExpiredToken) occurred when calling the GenerateCredentialReport operation: The security token included in the request is expired\n```\n\nTo fix it, please renew your token by authenticating again to the AWS API, see next section below if you use MFA.\n\n### Run Prowler with MFA protected credentials\n\nTo run Prowler using a profile that requires MFA you just need to get the session token before hand. Just make sure you use this command:\n\n```\naws --profile <YOUR_AWS_PROFILE> sts get-session-token --duration 129600 --serial-number <ARN_OF_MFA> --token-code <MFA_TOKEN_CODE> --output text\n ```\nOnce you get your token you can export it as environment variable:\n```\nexport AWS_PROFILE=YOUR_AWS_PROFILE\nexport AWS_SESSION_TOKEN=YOUR_NEW_TOKEN\nAWS_SECRET_ACCESS_KEY=YOUR_SECRET\nexport AWS_ACCESS_KEY_ID=YOUR_KEY\n```\nor set manually up your `~/.aws/credentials` file properly.\n\nThere are some helpfull tools to save time in this process like [aws-mfa-script](https://github.com/asagage/aws-mfa-script) or [aws-cli-mfa](https://github.com/sweharris/aws-cli-mfa).\n\n### Custom IAM Policy\n\nSome new and specific checks require Prowler to inherit more permissions than SecurityAudit to work properly. In addition to the AWS managed policy "SecurityAudit" for the role you use for checks you may need to create a custom policy with a few more permissions (get and list and additional services mostly). Here you go a good example for a "ProwlerReadOnlyPolicy" (see below bootstrap script for set it up):\n\n[iam/prowler-additions-policy.json](iam/prowler-additions-policy.json)\n\n> Note: Action `ec2:get*` is included in "ProwlerReadOnlyPolicy" policy above, that includes `get-password-data`, type `aws ec2 get-password-data help` to better understand its implications. \n\n### Bootstrap Script\n\nQuick bash script to set up a "prowler" IAM user with "SecurityAudit" group with the required permissions (including "ProwlerReadOnlyPolicy"). To run the script below, you need user with administrative permissions; set the `AWS_DEFAULT_PROFILE` to use that account:\n\n```sh\nexport AWS_DEFAULT_PROFILE=default\nexport ACCOUNT_ID=$(aws sts get-caller-identity --query \'Account\' | tr -d \'"\')\naws iam create-group --group-name SecurityAudit\naws iam create-policy --policy-name ProwlerReadOnlyPolicy --policy-document file://$(pwd)/iam/prowler-additions-policy.json\naws iam attach-group-policy --group-name SecurityAudit --policy-arn arn:aws:iam::aws:policy/SecurityAudit\naws iam attach-group-policy --group-name SecurityAudit --policy-arn arn:aws:iam::${ACCOUNT_ID}:policy/ProwlerReadOnlyPolicy\naws iam create-user --user-name prowler\naws iam add-user-to-group --user-name prowler --group-name SecurityAudit\naws iam create-access-key --user-name prowler\nunset ACCOUNT_ID AWS_DEFAULT_PROFILE\n```\n\nThe `aws iam create-access-key` command will output the secret access key and the key id; keep these somewhere safe, and add them to `~/.aws/credentials` with an appropriate profile name to use them with prowler. This is the only time they secret key will be shown.  If you lose it, you will need to generate a replacement.\n\n## Extras\n\nWe are adding additional checks to improve the information gather from each account, these checks are out of the scope of the CIS benchmark for AWS but we consider them very helpful to get to know each AWS account set up and find issues on it.\n\nSome of these checks look for publicly facing resources may not actually be fully public due to other layered controls like S3 Bucket Policies, Security Groups or Network ACLs.\n\nTo list all existing checks please run the command below:\n\n```\n./prowler -l\n```\n\n>There are some checks not included in that list, they are experimental or checks that takes long to run like `extra759` and `extra760` (search for secrets in Lambda function variables and code).\n\nTo check all extras in one command:\n\n```sh\n./prowler -g extras\n```\n\nor to run just one of the checks:\n\n```sh\n./prowler -c extraNUMBER\n```\n\n## Forensics Ready Checks\n\nWith this group of checks, Prowler looks if each service with logging or audit capabilities has them enabled to ensure all needed evidences are recorded and collected for an eventual digital forensic investigation in case of incident. List of checks part of this group (you can also see all groups with `./prowler -L`). The list of checks can be seen in the group file at:\n\n[groups/group8_forensics](groups/group8_forensics)\n\nThe `forensics-ready` group of checks uses existing and extra checks. To get a forensics readiness report, run this command:\n\n```sh\n./prowler -g forensics-ready\n```\n\n## GDPR Checks\n\nWith this group of checks, Prowler shows result of checks related to GDPR, more information [here](https://github.com/toniblyx/prowler/issues/189). The list of checks can be seen in the group file at:\n\n[groups/group9_gdpr](groups/group9_gdpr)\n\nThe `gdpr` group of checks uses existing and extra checks. To get a GDPR report, run this command:\n\n```sh\n./prowler -g gdpr\n```\n\n## HIPAA Checks\n\nWith this group of checks, Prowler shows results of controls related to the "Security Rule" of the Health Insurance Portability and Accountability Act aka [HIPAA](https://www.hhs.gov/hipaa/for-professionals/security/index.html) as defined in [45 CFR Subpart C - Security Standards for the Protection of Electronic Protected Health Information](https://www.law.cornell.edu/cfr/text/45/part-164/subpart-C) within [PART 160 - GENERAL ADMINISTRATIVE REQUIREMENTS](https://www.law.cornell.edu/cfr/text/45/part-160) and [Subpart A](https://www.law.cornell.edu/cfr/text/45/part-164/subpart-A) and [Subpart C](https://www.law.cornell.edu/cfr/text/45/part-164/subpart-C) of PART 164 - SECURITY AND PRIVACY\n\nMore information on the original PR is [here](https://github.com/toniblyx/prowler/issues/227).\n\n### Note on Business Associate Addendum\'s (BAA)\nUnder the HIPAA regulations, cloud service providers (CSPs) such as AWS are considered business associates. The Business Associate Addendum (BAA) is an AWS contract that is required under HIPAA rules to ensure that AWS appropriately safeguards protected health information (PHI). The BAA also serves to clarify and limit, as appropriate, the permissible uses and disclosures of PHI by AWS, based on the relationship between AWS and our customers, and the activities or services being performed by AWS. Customers may use any AWS service in an account designated as a HIPAA account, but they should only process, store, and transmit protected health information (PHI) in the HIPAA-eligible services defined in the Business Associate Addendum (BAA). For the latest list of HIPAA-eligible AWS services, see [HIPAA Eligible Services Reference](https://aws.amazon.com/compliance/hipaa-eligible-services-reference/).\n\nMore information on AWS & HIPAA can be found [here](https://aws.amazon.com/compliance/hipaa-compliance/)\n\nThe list of checks showed by this group is as follows, they will be mostly relevant for Subsections [164.306 Security standards: General rules](https://www.law.cornell.edu/cfr/text/45/164.306) and [164.312 Technical safeguards](https://www.law.cornell.edu/cfr/text/45/164.312). Prowler is only able to make checks in the spirit of the technical requirements outlined in these Subsections, and cannot cover all procedural controls required. They be found in the group file at:\n\n[groups/group10_hipaa](groups/group10_hipaa)\n\nThe `hipaa` group of checks uses existing and extra checks. To get a HIPAA report, run this command:\n\n```sh\n./prowler -g hipaa\n```\n\n## Add Custom Checks\n\nIn order to add any new check feel free to create a new extra check in the extras group or other group. To do so, you will need to follow these steps:\n\n1. Follow structure in file `checks/check_sample`\n2. Name your check with a number part of an existing group or a new one\n3. Save changes and run it as `./prowler -c extraNN`\n4. Send me a pull request! :)\n\n## Add Custom Groups\n\n1. Follow structure in file `groups/groupN_sample`\n1. Name your group with a non existing number\n1. Save changes and run it as `./prowler -g extraNN`\n1. Send me a pull request! :)\n\n- You can also create a group with only the checks that you want to perform in your company, for instance a group named `group9_mycompany` with only the list of checks that you care or your particular compliance applies.\n\n## Third Party Integrations\n\n### Telegram\n\nJavier Pecete has done an awesome job integrating Prowler with Telegram, you have more details here <https://github.com/i4specete/ServerTelegramBot>\n\n### Cloud Security Suite\n\nThe guys of SecurityFTW have added Prowler in their Cloud Security Suite along with other cool security tools <https://github.com/SecurityFTW/cs-suite>\n\n## License\n\nAll CIS based checks in the checks folder are licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License.\nThe link to the license terms can be found at\n<https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode>\nAny other piece of code is licensed as Apache License 2.0 as specified in each file. You may obtain a copy of the License at\n<http://www.apache.org/licenses/LICENSE-2.0>\n\nNOTE: If you are interested in using Prowler for commercial purposes remember that due to the CC4.0 license \xe2\x80\x9cThe distributors or partners that are interested and using Prowler would need to enroll as CIS SecureSuite Members to incorporate this product, which includes references to CIS resources, in their offering.". Information about CIS pricing for vendors here: <https://www.cisecurity.org/cis-securesuite/pricing-and-categories/product-vendor/>\n\n**I\'m not related anyhow with CIS organization, I just write and maintain Prowler to help companies over the world to make their cloud infrastructure more secure.**\n\nIf you want to contact me visit <https://blyx.com/contact>\n'