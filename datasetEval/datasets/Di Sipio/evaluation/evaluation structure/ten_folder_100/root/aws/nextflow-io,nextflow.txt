b'![Nextflow logo](https://github.com/nextflow-io/trademark/blob/master/nextflow2014_no-bg.png)\n\n*"Dataflow variables are spectacularly expressive in concurrent programming"*\n<br>[Henri E. Bal , Jennifer G. Steiner , Andrew S. Tanenbaum](http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.145.7873)\n\n\n[![Chat on Gitter](https://img.shields.io/gitter/room/nextflow-io/nextflow.svg?colorB=26af64&style=popout)](https://gitter.im/nextflow-io/nextflow)\n[![Nextflow version](https://img.shields.io/github/release/nextflow-io/nextflow.svg?colorB=26af64&style=popout)](https://github.com/nextflow-io/nextflow/releases/latest)\n[![Nextflow Twitter](https://img.shields.io/twitter/url/https/nextflowio.svg?colorB=26af64&&label=%40nextflow&style=popout)](https://twitter.com/nextflowio)\n[![Nextflow Publication](https://img.shields.io/badge/Published-Nature%20Biotechnology-26af64.svg?colorB=26af64&style=popout)](https://www.nature.com/articles/nbt.3820)\n[![install with bioconda](https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?colorB=26af64&style=popout)](http://bioconda.github.io/recipes/nextflow/README.html)\n[![Nextflow license](https://img.shields.io/github/license/nextflow-io/nextflow.svg?colorB=26af64&style=popout)](https://github.com/nextflow-io/nextflow/blob/master/COPYING)\n\nQuick overview\n==============\nNextflow is a bioinformatics workflow manager that enables the development of portable and reproducible workflows.\nIt supports deploying workflows on a variety of execution platforms including local, HPC schedulers, AWS Batch,\nGoogle Genomics Pipelines, and Kubernetes. Additionally, it provides support for manage your workflow dependencies\nthrough built-in support for Conda, Docker, Singularity, and Modules.\n\n## Contents\n- [Rationale](#rationale)\n- [Quick start](#quick-start)\n- [Documentation](#documentation)\n- [Tool Management](#tool-management)\n  - [Conda environments](#conda-environments)\n  - [Docker and Singularity](#containers)\n  - [Environment Modules](#environment-modules)\n- [HPC Schedulers](#hpc-schedulers)\n  - [SGE](#hpc-schedulers)\n  - [Univa Grid Engine](#hpc-schedulers)\n  - [LSF](#hpc-schedulers)\n  - [SLURM](#hpc-schedulers)\n  - [PBS/Torque](#hpc-schedulers)\n  - [HTCondor (experimental)](#hpc-schedulers)\n- [Cloud Support](#cloud-support)\n  - [AWS Batch](#cloud-support)\n  - [AWS EC2](#cloud-support)\n  - [Google Cloud](#cloud-support)\n  - [Google Genomics Pipelines](#cloud-support)\n  - [Kubernetes](#cloud-support)\n- [Community](#community)\n- [Build from source](#build-from-source)\n- [Contributing](#contributing)\n- [License](#license)\n- [Citations](#citations)\n- [Credits](#credits)\n\n\nRationale\n=========\n\nWith the rise of big data, techniques to analyse and run experiments on large datasets are increasingly necessary.\n\nParallelization and distributed computing are the best ways to tackle this problem, but the tools commonly available to the bioinformatics community often lack good support for these techniques, or provide a model that fits badly with the specific requirements in the bioinformatics domain and, most of the time, require the knowledge of complex tools or low-level APIs.\n\nNextflow framework is based on the dataflow programming model, which greatly simplifies writing parallel and distributed pipelines without adding unnecessary complexity and letting you concentrate on the flow of data, i.e. the functional logic of the application/algorithm.\n\nIt doesn\'t aim to be another pipeline scripting language yet, but it is built around the idea that the Linux platform is the *lingua franca* of data science, since it provides many simple command line and scripting tools, which by themselves are powerful, but when chained together facilitate complex data manipulations.\n\nIn practice, this means that a Nextflow script is defined by composing many different processes. Each process can execute a given bioinformatics tool or scripting language, to which is added the ability to coordinate and synchronize the processes execution by simply specifying their inputs and outputs.\n\n\n\nQuick start\n============\n\nDownload the package\n--------------------\n\nNextflow does not require any installation procedure, just download the distribution package by copying and pasting\nthis command in your terminal:\n\n```\ncurl -fsSL https://get.nextflow.io | bash\n```\n\nIt creates the ``nextflow`` executable file in the current directory. You may want to move it to a folder accessible from your ``$PATH``.\n\nDownload from Conda\n-------------------\n\nNextflow can also be installed from Bioconda\n\n```\nconda install -c bioconda nextflow \n```\n\nDocumentation\n=============\n\nNextflow documentation is available at this link http://docs.nextflow.io\n\n\nHPC Schedulers\n==============\n\n*Nextflow* supports common HPC schedulers, abstracting the submission of jobs from the user. \n\nCurrently the following clusters are supported:\n\n  + [SGE](https://www.nextflow.io/docs/latest/executor.html#sge)\n  + [Univa Grid Engine](https://www.nextflow.io/docs/latest/executor.html#sge)\n  + [LSF](https://www.nextflow.io/docs/latest/executor.html#lsf)\n  + [SLURM](https://www.nextflow.io/docs/latest/executor.html#slurm)\n  + [PBS/Torque](https://www.nextflow.io/docs/latest/executor.html#pbs-torque)\n  + [HTCondor (beta)](https://www.nextflow.io/docs/latest/executor.html#htcondor)\n  + [Moab (beta)](https://www.nextflow.io/docs/latest/executor.html#moab)\n\nFor example to submit the execution to a SGE cluster create a file named `nextflow.config`, in the directory\nwhere the pipeline is going to be launched, with the following content:\n\n```nextflow\nprocess {\n  executor=\'sge\'\n  queue=\'<your execution queue>\'\n}\n```\n\nIn doing that, processes will be executed by Nextflow as SGE jobs using the `qsub` command. Your \npipeline will behave like any other SGE job script, with the benefit that *Nextflow* will \nautomatically and transparently manage the processes synchronisation, file(s) staging/un-staging, etc.  \n\n\nCloud support\n=============\n*Nextflow* also supports running workflows across various clouds and cloud technologies. *Nextflow* can create AWS EC2 or Google GCE clusters and deploy your workflow. Managed solutions from both Amazon and Google are also supported through AWS Batch and Google Genomics Pipelines. Additionally, *Nextflow* can run workflows on either on-prem or managed cloud Kubernetes clusters. \n\nCurrently supported cloud platforms:\n  + [AWS Batch](https://www.nextflow.io/docs/latest/awscloud.html#aws-batch)\n  + [AWS EC2](https://www.nextflow.io/docs/latest/awscloud.html)\n  + [Google GCE](https://www.nextflow.io/docs/latest/google.html)\n  + [Google Genomics Pipelines](https://www.nextflow.io/docs/latest/google.html#google-pipelines)\n  + [Kubernetes](https://www.nextflow.io/docs/latest/kubernetes.html)\n\n\n\nTool management\n================\n\nContainers\n----------------\n\n*Nextflow* has first class support for containerization. It supports both [Docker](https://www.nextflow.io/docs/latest/docker.html) and [Singularity](https://www.nextflow.io/docs/latest/singularity.html) container engines. Additionally, *Nextflow* can easily switch between container engines enabling workflow portability. \n\n```nextflow\nprocess samtools {\n  container \'biocontainers/samtools:1.3.1\'\n\n  """\n  samtools --version \n  """\n\n}\n```\n\nConda environments\n------------------\n\n[Conda environments](https://www.nextflow.io/docs/latest/conda.html) provide another option for managing software packages in your workflow. \n\n\nEnvironment Modules\n-------\n\n[Environment modules](https://www.nextflow.io/docs/latest/process.html#module) commonly found in HPC environments can also be used to manage the tools used in a *Nextflow* workflow. \n\n\nCommunity\n=========\n\nYou can post questions, or report problems by using the Nextflow [discussion forum](https://groups.google.com/forum/#!forum/nextflow)\nor the [Nextflow channel on Gitter](https://gitter.im/nextflow-io/nextflow).\n\n*Nextflow* also hosts a yearly workshop showcasing researcher\'s workflows and advancements in the langauge. Talks from the past workshops are available on the [Nextflow YouTube Channel](https://www.youtube.com/channel/UCB-5LCKLdTKVn2F4V4KlPbQ)\n\nThe [nf-core](https://nf-co.re/) project is a community effort aggregating high quality *Nextflow* workflows which can be used by the community. \n\n\nBuild from source\n=================\n\nRequired dependencies\n---------------------\n\n* Compiler Java 8\n* Runtime Java 8 or later\n\nBuild from source\n-----------------\n\n*Nextflow* is written in [Groovy](http://groovy-lang.org) (a scripting language for the JVM). A pre-compiled,\nready-to-run, package is available at the [Github releases page](https://github.com/nextflow-io/nextflow/releases),\nthus it is not necessary to compile it in order to use it.\n\nIf you are interested in modifying the source code, or contributing to the project, it worth knowing that\nthe build process is based on the [Gradle](http://www.gradle.org/) build automation system.\n\nYou can compile *Nextflow* by typing the following command in the project home directory on your computer:\n\n```bash\nmake compile\n```\n\nThe very first time you run it, it will automatically download all the libraries required by the build process.\nIt may take some minutes to complete.\n\nWhen complete, execute the program by using the `launch.sh` script in the project directory.\n\nThe self-contained runnable Nextflow packages can be created by using the following command:\n\n```bash\nmake pack\n```\n\nIn order to install the compiled packages use the following command:\n\n```bash\nmake install\n```\n\nThen you will be able to run nextflow using the `nextflow` launcher script in the project root folder.\n\nKnown compilation problems\n---------------------------\n\nNextflow required JDK 8 to be compiled. The Java compiler used by the build process can be choose by setting the\n`JAVA_HOME` environment variable accordingly.\n\n\nIf the compilation stops reporting the error: `java.lang.VerifyError: Bad <init> method call from inside of a branch`,\nthis is due to a bug affecting the following Java JDK:\n\n- 1.8.0 update 11\n- 1.8.0 update 20\n\nUpgrade to a newer JDK to avoid to this issue. Alternatively a possible workaround is to define the following variable\nin your environment:\n\n```bash\n_JAVA_OPTIONS=\'-Xverify:none\'\n```\n\nRead more at these links:\n\n- https://bugs.openjdk.java.net/browse/JDK-8051012\n- https://jira.codehaus.org/browse/GROOVY-6951\n\n\nIntelliJ IDEA\n---------------\n\nNextflow development with [IntelliJ IDEA](https://www.jetbrains.com/idea/) requires the latest version of the IDE (2019.1.2 or later).\n\nIf you have it installed in your computer, follow the steps below in order to use it with Nextflow:\n\n1. Clone the Nextflow repository to a directory in your computer.\n2. Open IntelliJ IDEA and choose "Import project" in the "File" menu bar.\n3. Select the Nextflow project root directory in your computer and click "OK".\n4. Then, choose the "Gradle" item in the "external module" list and click on "Next" button.\n5. Confirm the default import options and click on "Finish" to finalize the project configuration.\n6. When the import process complete, select the "Project structure" command in the "File" menu bar.\n7. In the showed dialog click on the "Project" item in the list of the left, and make sure that\n   the "Project SDK" choice on the right contains Java 8.\n8. Set the code formatting options with setting provided [here](https://github.com/nextflow-io/nextflow/blob/master/CONTRIBUTING.md#ide-settings).\n\n\n\nContributing\n============\n\nProject contribution are more than welcome. See the [CONTRIBUTING](CONTRIBUTING.md) file for details.\n\n\nBuild servers\n=============\n\n  * [Travis-CI](https://travis-ci.org/nextflow-io/nextflow)\n  * [Groovy Joint build](http://ci.groovy-lang.org/project.html?projectId=JointBuilds_Nextflow&guest=1)\n\nLicense\n=======\n\nThe *Nextflow* framework is released under the Apache 2.0 license.\n\nCitations\n=========\n\nIf you use Nextflow in your research, please cite:\n\nP. Di Tommaso, et al. Nextflow enables reproducible computational workflows. Nature Biotechnology 35, 316\xe2\x80\x93319 (2017) doi:[10.1038/nbt.3820](http://www.nature.com/nbt/journal/v35/n4/full/nbt.3820.html)\n\nCredits\n=======\n\nNextflow is built on two great pieces of open source software, namely <a href=\'http://groovy-lang.org\' target=\'_blank\'>Groovy</a>\nand <a href=\'http://www.gpars.org/\' target=\'_blank\'>Gpars</a>.\n\nYourKit is kindly supporting this open source project with its full-featured Java Profiler.\nRead more http://www.yourkit.com\n'