b'# The Go Cloud Development Kit (Go CDK)\n\n_Write once, run on any cloud \xe2\x98\x81\xef\xb8\x8f_\n\n[![Build Status](https://travis-ci.com/google/go-cloud.svg?branch=master)][travis]\n[![godoc](https://godoc.org/github.com/google/go-cloud?status.svg)][godoc]\n[![Coverage](https://codecov.io/gh/google/go-cloud/branch/master/graph/badge.svg)](https://codecov.io/gh/google/go-cloud)\n[![Go Report Card](https://goreportcard.com/badge/github.com/google/go-cloud)](https://goreportcard.com/report/github.com/google/go-cloud)\n\n<p align="center">\n  <img width="509" height="276" src="internal/website/static/go-cdk-logo-gopherblue.png" alt="">\n</p>\n\nThe Go Cloud Development Kit (Go CDK) allows Go application developers to\nseamlessly deploy cloud applications on any combination of cloud providers. It\ndoes this by providing stable, idiomatic interfaces for common uses like storage\nand databases. Think `database/sql` for cloud products.\n\nImagine writing this to read from blob storage (like Google Cloud Storage or\nS3):\n\n```go\nctx := context.Background()\nbucket, err := blob.OpenBucket(ctx, "s3://my-bucket")\nif err != nil {\n    return err\n}\ndefer bucket.Close()\nblobReader, err := bucket.NewReader(ctx, "my-blob", nil)\nif err != nil {\n    return err\n}\n```\n\nand being able to run that code on any cloud you want, avoiding all the ceremony\nof cloud-specific authorization, tracing, SDKs and all the other code required\nto make an application portable across cloud platforms.\n\nThe project works well with a code generator called\n[Wire](https://github.com/google/wire/blob/master/README.md). It creates\nhuman-readable code that only imports the cloud SDKs for services you use. This\nallows the Go CDK to grow to support any number of cloud services, without\nincreasing compile times or binary sizes, and avoiding any side effects from\n`init()` functions.\n\nYou can learn more about the project from our [announcement blog post][], or our\ntalk at Next 2018:\n\n[![Video: Building Go Applications for the Open Cloud (Cloud Next \'18)](https://img.youtube.com/vi/_2ZwhvIkgek/0.jpg)][video]\n\n[announcement blog post]: https://blog.golang.org/go-cloud\n[godoc]: https://godoc.org/github.com/google/go-cloud\n[travis]: https://travis-ci.com/google/go-cloud\n[video]: https://www.youtube.com/watch?v=_2ZwhvIkgek\n\n## Installation\n\n```shell\n# First "cd" into your project directory if you have one to ensure "go get" uses\n# Go modules (or not) appropriately. See "go help modules" for more info.\ngo get gocloud.dev\n```\n\nThe Go CDK builds at the latest stable release of Go. Previous Go versions may\ncompile but are not supported.\n\n## Documentation\n\nDocumentation for the project lives primarily on https://gocloud.dev/, including\n[tutorials][].\n\nYou can also browse Go package reference on [godoc.org][godoc].\n\n[tutorials]: https://gocloud.dev/tutorials/\n\n## Project status\n\nThe APIs are still in alpha, but we think they are production-ready and are\nactively looking for feedback from early adopters. If you have comments or\nquestions, you can post to the [go-cloud mailing list][] or email us at\ngo-cdk-feedback@google.com.\n\n## Current features\n\nThe Go CDK provides generic APIs for:\n\n*   Unstructured binary (blob) storage\n*   Publish/Subscribe (pubsub)\n*   Variables that change at runtime (runtimevar)\n*   Connecting to MySQL and PostgreSQL databases (mysql, postgres)\n*   Server startup and diagnostics: request logging, tracing, and health\n    checking (server)\n\n## Contributing\n\nThank you for your interest in contributing to the Go Cloud Development\nKit! :heart:\n\nEveryone is welcome to contribute, whether it\'s in the form of code,\ndocumentation, bug reports, feature requests, or anything else. We encourage you\nto experiment with the Go CDK and make contributions to help evolve it to meet\nyour needs!\n\nThe GitHub repository at [google/go-cloud][go-cloud] contains some driver\nimplementations for each portable API. We intend to include\n[Google Cloud Platform][gcp], [Amazon Web Services][aws], and [Azure][azure]\nimplementations, as well as prominent open source services and at least one\nimplementation suitable for use in local testing. Unfortunately, we cannot\nsupport every service directly from the project; however, we encourage\ncontributions in separate repositories.\n\nIf you create a repository that implements the Go CDK interfaces for other\nservices, let us know! We would be happy to link to it here and give you a\nheads-up before making any breaking changes.\n\nSee [the contributing guide](./CONTRIBUTING.md) for more details.\n\n[go-cloud]: https://github.com/google/go-cloud\n[gcp]: http://cloud.google.com\n[aws]: http://aws.amazon.com\n[azure]: https://azure.microsoft.com/\n\n## Community\n\nYou can contact us on the [go-cloud mailing list][].\n\nThis project is covered by the Go [Code of Conduct][].\n\n[Code of Conduct]: ./CODE_OF_CONDUCT.md\n[go-cloud mailing list]: https://groups.google.com/forum/#!forum/go-cloud\n\n## Legal disclaimer\n\nThe Go CDK is open-source and released under an [Apache 2.0\nLicense](https://github.com/google/go-cloud/blob/master/LICENSE). Copyright \xc2\xa9\n2018\xe2\x80\x932019 The Go Cloud Development Kit Authors.\n\nIf you are looking for the website of GoCloud Systems, which is unrelated to the\nGo CDK, visit https://gocloud.systems.\n'