b'# ![Rusoto](./assets/logo-wide.png)\n\n<table>\n    <tr>\n        <td><strong>Linux / OS X</strong></td>\n        <td><a href="https://dev.azure.com/matthewkmayer/Rusoto/_build?definitionId=1" title="Pipelines Build Status"><img src="https://dev.azure.com/matthewkmayer/Rusoto/_apis/build/status/rusoto.rusoto?branchName=master" alt="pipelines-badge"></img></a></td>\n    </tr>\n    <tr>\n        <td><strong>Windows</strong></td>\n        <td><a href="https://ci.appveyor.com/project/matthewkmayer/rusoto/branch/master" title="Appveyor Build Status"><img src="https://ci.appveyor.com/api/projects/status/o83ruaeu7xft0ru5/branch/master?svg=true" alt="appveyor-badge"></img></a></td>\n    </tr>\n    <tr>\n        <td><strong>Ceph and Minio support</strong></td>\n        <td><a href=\'https://semaphoreci.com/matthewkmayer/rusoto\'> <img src=\'https://semaphoreci.com/api/v1/matthewkmayer/rusoto/branches/master/badge.svg\' alt=\'Build Status\'></a></td>\n    </tr>\n    <tr>\n        <td colspan="2">\n            <a href="https://docs.rs/rusoto_core" title="API Docs"><img src="https://img.shields.io/badge/API-docs-blue.svg" alt="api-docs-badge"></img></a>\n            <a href="https://crates.io/crates/rusoto_core" title="Crates.io"><img src="https://img.shields.io/crates/v/rusoto_core.svg" alt="crates-io"></img></a>\n            <a href="#license" title="License: MIT"><img src="https://img.shields.io/badge/license-MIT-blue.svg" alt="license-badge"></img></a>\n            <img src="https://tokei.rs/b1/github/rusoto/rusoto"></img>\n        </td>\n    </tr>\n</table>\n\n**Rusoto is an AWS SDK for Rust**\n\n---\n\nYou may be looking for:\n\n* [An overview of Rusoto][rusoto-overview]\n* [AWS services supported by Rusoto][supported-aws-services]\n* [API documentation][api-documentation]\n* [Getting help with Rusoto][rusoto-help]\n\n## Installation\n\nRusoto is available on [crates.io](https://crates.io/crates/rusoto_core).\nTo use Rusoto in your Rust program built with Cargo, add it as a dependency and `rusoto_$SERVICENAME` for any supported AWS service you want to use.\n\nFor example, to include only S3 and SQS:\n\n```toml\n[dependencies]\nrusoto_core = "0.42.0"\nrusoto_sqs = "0.42.0"\nrusoto_s3 = "0.42.0"\n```\n\n## Migration notes\n\nBreaking changes and migration details are documented at [https://rusoto.org/migrations.html](https://rusoto.org/migrations.html).\n\n## Usage\n\nRusoto has a crate for each AWS service, containing Rust types for that service\'s API.\nA full list of these services can be found [here][supported-aws-services].\nAll other public types are reexported to the crate root.\nConsult the rustdoc documentation for full details by running `cargo doc` or visiting the online [documentation](https://docs.rs/rusoto_core) for the latest crates.io release.\n\nA simple example of using Rusoto\'s DynamoDB API to list the names of all tables in a database:\n\n```rust,no_run\nextern crate rusoto_core;\nextern crate rusoto_dynamodb;\n\nuse rusoto_core::Region;\nuse rusoto_dynamodb::{DynamoDb, DynamoDbClient, ListTablesInput};\n\nfn main() {\n    let client = DynamoDbClient::new(Region::UsEast1);\n    let list_tables_input: ListTablesInput = Default::default();\n\n    match client.list_tables(list_tables_input).sync() {\n        Ok(output) => {\n            match output.table_names {\n                Some(table_name_list) => {\n                    println!("Tables in database:");\n\n                    for table_name in table_name_list {\n                        println!("{}", table_name);\n                    }\n                },\n                None => println!("No tables in database!"),\n            }\n        },\n        Err(error) => {\n            println!("Error: {:?}", error);\n        },\n    }\n}\n```\n\n### Credentials\n\nFor more information on Rusoto\'s use of AWS credentials such as priority and refreshing, see [AWS Credentials](AWS-CREDENTIALS.md).\n\n## Semantic versioning\n\nRusoto complies with [semantic versioning 2.0.0](http://semver.org/).\nUntil reaching 1.0.0 the API is to be considered unstable.\nSee [Cargo.toml](Cargo.toml) or [rusoto on crates.io](https://crates.io/crates/rusoto_core) for current version.\n\n## Releases\n\nInformation on release schedules and procedures are in [RELEASING](RELEASING.md).\n\n## Contributing\n\nSee [CONTRIBUTING](CONTRIBUTING.md).\n\n## Supported OSs, Rust versions and non-AWS projects\n\nLinux, OSX and Windows are supported and tested via Azure Pipelines and Appveyor.\n\nRust stable, beta and nightly are supported.\n\nRusoto\'s primary aim is to be used with AWS. Other projects that provide AWS-like APIs, such as Ceph, Minio, Yandex Object Storage, etc... are not a focus at this time. PRs to fix issues with Rusoto and AWS-like APIs are welcome but generally won\'t be created by Rusoto maintainers.\n\n## License\n\nRusoto is distributed under the terms of the MIT license.\n\nSee [LICENSE][license] for details.\n\n[api-documentation]: https://docs.rs/rusoto_core "API documentation"\n[license]: https://github.com/rusoto/rusoto/blob/master/LICENSE "MIT License"\n[rusoto-help]: https://www.rusoto.org/help.html "Getting help with Rusoto"\n[rusoto-overview]: https://www.rusoto.org/ "Rusoto overview"\n[supported-aws-services]: https://www.rusoto.org/supported-aws-services.html "List of AWS services supported by Rusoto"\n'