b'# tgbot-cpp\n\n[![Travis build Status](https://travis-ci.org/reo7sp/tgbot-cpp.svg?branch=master)](https://travis-ci.org/reo7sp/tgbot-cpp)\n[![Appveyor build status](https://ci.appveyor.com/api/projects/status/tncys4p1flm8817m?svg=true)](https://ci.appveyor.com/project/reo7sp/tgbot-cpp)\n[![Docker Hub pulls](https://img.shields.io/docker/pulls/reo7sp/tgbot-cpp.svg)](https://hub.docker.com/r/reo7sp/tgbot-cpp/)\n[![Open documentation](https://img.shields.io/badge/open-documentation-orange.svg)](http://reo7sp.github.io/tgbot-cpp)\n[![Donate using PayPal](https://img.shields.io/badge/donate-PayPal-orange.svg)](https://paypal.me/reo7sp)\n\n---\n\n[![GitHub contributors](https://img.shields.io/github/contributors/reo7sp/tgbot-cpp.svg)](https://github.com/reo7sp/tgbot-cpp/graphs/contributors) &nbsp; \xf0\x9f\x9a\x80\xf0\x9f\x9a\x80\xf0\x9f\x9a\x80 thanks for the contributing!\n\n---\n\nC++ library for Telegram bot API.\n\nDocumentation is located [here](http://reo7sp.github.io/tgbot-cpp).\n\n\n## State\n\n- [x] Bot API 3.0 ~ 3.6\n- [x] Bot API 4.0 (Implemented all APIs except \'Telegram Passport\')\n\n\n## Sample\n\nSimple echo bot which sends everything it receives:\n```cpp\n#include <stdio.h>\n#include <tgbot/tgbot.h>\n\nint main() {\n    TgBot::Bot bot("PLACE YOUR TOKEN HERE");\n    bot.getEvents().onCommand("start", [&bot](TgBot::Message::Ptr message) {\n        bot.getApi().sendMessage(message->chat->id, "Hi!");\n    });\n    bot.getEvents().onAnyMessage([&bot](TgBot::Message::Ptr message) {\n        printf("User wrote %s\\n", message->text.c_str());\n        if (StringTools::startsWith(message->text, "/start")) {\n            return;\n        }\n        bot.getApi().sendMessage(message->chat->id, "Your message is: " + message->text);\n    });\n    try {\n        printf("Bot username: %s\\n", bot.getApi().getMe()->username.c_str());\n        TgBot::TgLongPoll longPoll(bot);\n        while (true) {\n            printf("Long poll started\\n");\n            longPoll.start();\n        }\n    } catch (TgBot::TgException& e) {\n        printf("error: %s\\n", e.what());\n    }\n    return 0;\n}\n```\n\nAll other samples are located [here](samples).\n\n\n## Dependencies\n\nFirstly you need to install some dependencies such as Boost and build tools such as CMake. On Debian-based distibutives you can do it with these commands:\n```sh\nsudo apt-get install g++ make binutils cmake libssl-dev libboost-system-dev zlib1g-dev\n```\nIf you want to use curl-based http client `CurlHttpClient`, you also need to install `libcurl4-openssl-dev` package.\n\n## Library installation\n\nIf you want to install the library system-wide:\n```sh\ngit clone https://github.com/reo7sp/tgbot-cpp\ncd tgbot-cpp\ncmake .\nmake -j4\nsudo make install\n```\n\nOr you can treat this repository as a submodule of your project, for example, see [echobot-submodule](samples/echobot-submodule/CMakeLists.txt)\n\n## Specific library installation notes\n\n### Docker\nYou can use Docker to build and run your bot. Set the base image of your\'s Dockerfile to [reo7sp/tgbot-cpp](https://hub.docker.com/r/reo7sp/tgbot-cpp/).\n\n### Conan\nYou can use Conan C/C++ Package Manager. Follow [Conan instructions](https://docs.conan.io/en/latest/getting_started.html) and use [the template](https://github.com/reo7sp/tgbot-cpp/tree/master/samples/echobot-conan).\n\n### Arch Linux\nA PKGBUILD compiles shared library with header files is hosted on [Arch Linux User Repository](https://aur.archlinux.org/packages/libtgbot-cpp-git/).\n\n\n## Bot compilation\n\n### With CMake\n[Example CMakeLists.txt](samples/echobot/CMakeLists.txt)\n\n### Without CMake\n```sh\ng++ telegram_bot.cpp -o telegram_bot --std=c++11 -I/usr/local/include -lTgBot -lboost_system -lssl -lcrypto -lpthread\n```\n\n### Options available when compiling bot\n\n#### With CMake\n```\nadd_definitions(-DTGBOT_DISABLE_NAGLES_ALGORITHM) # Disable \'Nagle\'s algorithm\'\nadd_definitions(-DTGBOT_CHANGE_SOCKET_BUFFER_SIZE) # Socket Buffer Size Expansion\nadd_definitions(-DTGBOT_CHANGE_READ_BUFFER_SIZE) # Read Buffer Size Expansion\n```\n\n#### Without CMake\n```\n-DTGBOT_DISABLE_NAGLES_ALGORITHM\n-DTGBOT_CHANGE_SOCKET_BUFFER_SIZE\n-DTGBOT_CHANGE_READ_BUFFER_SIZE\n```\n\n\n## Feedback\nFeel free to [create new issues on GitHub](https://github.com/reo7sp/tgbot-cpp/issues) or [contact me on Telegram](https://t.me/reo7sp).\n\n\n## Licence\n[The MIT License](http://opensource.org/licenses/MIT).\n'