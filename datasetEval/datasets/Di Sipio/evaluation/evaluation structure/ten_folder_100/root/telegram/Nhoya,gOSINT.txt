b'# gOSINT [![Build Status](https://travis-ci.org/Nhoya/gOSINT.svg?branch=master)](https://travis-ci.org/Nhoya/gOSINT) [![Build status](https://ci.appveyor.com/api/projects/status/9qn2y2f8t5up8ww2?svg=true)](https://ci.appveyor.com/project/Nhoya/gosint) [![GitHub stars](https://img.shields.io/github/stars/Nhoya/gOSINT.svg)](https://github.com/Nhoya/gOSINT/stargazers) [![GitHub forks](https://img.shields.io/github/forks/Nhoya/gOSINT.svg)](https://github.com/Nhoya/gOSINT/network) [![Twitter](https://img.shields.io/twitter/url/https/github.com/Nhoya/gOSINT.svg?style=social&style=plastic)](https://twitter.com/intent/tweet?text=Wow:&url=https%3A%2F%2Fgithub.com%2FNhoya%2FgOSINT) [![Go Report Card](https://goreportcard.com/badge/github.com/Nhoya/gOSINT)](https://goreportcard.com/report/github.com/Nhoya/gOSINT) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/76673062a30e48bd99d499d32c0c6af0)](https://www.codacy.com/app/Nhoya/gOSINT?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Nhoya/gOSINT&amp;utm_campaign=Badge_Grade) [![Mentioned in Awesome Pentest](https://awesome.re/mentioned-badge.svg)](https://github.com/enaqx/awesome-pentest)\n\nOSINT Swiss Army Knife in Go\n\nTake a look at the [develop branch](https://github.com/Nhoya/gOSINT/tree/develop) for more updates.\n\n## Introduction\n\ngOSINT is a multiplatform OSINT Swiss army knife in Golang. If you want, feel free to contribute and/or leave a feedback!\n\n## Like my project? Please consider donation :)\n\n[![Paypal Badge](https://img.shields.io/badge/Donate-PayPal-yellow.svg)](https://www.paypal.me/Nhoya) [![BTC Badge](https://img.shields.io/badge/Donate-BTC-yellow.svg)](https://pastebin.com/raw/nyDDPwaM) [![Monero Badge](https://img.shields.io/badge/Donate-XMR-yellow.svg)](https://pastebin.com/raw/dNUFqwuC) [![Ethereum Badge](https://img.shields.io/badge/Donate-Ethereum-yellow.svg)](https://pastebin.com/raw/S6XMmSiv)\n\n## What gOSINT can do\n\nCurrently `gOSINT` has different modules:\n\n- [x] git support for mail retriving (using github API, or plain clone and search)\n- [x] Search for mails, aliases and KeyID in PGP Server\n- [x] [haveibeenpwned.com/](http://haveibeenpwned.com/) search for mail in databreach\n- [x] Retrieve Telegram Public Group Message History\n- [x] Search for mail address in source\n- [x] [shodan.io](https://shodan.io) search\n- [x] Subdomain enumeration using [crt.sh](https://crt.sh)\n- [x] Given a phone number, can retrieve the owner name\n- [x] Search for password relatives to email address :P\n- [x] Reverse Whois given Email Address or Name\n\nA complete features list and roadmap is available under [Projects Tab](https://github.com/Nhoya/gOSINT/projects)\n\n## Installation\n\n### Dependencies\n\ngOSINT currently depends from [tesseract-ocr](https://github.com/tesseract-ocr/) so you need to install on your system `tesseract-ocr`, `libtesseract-dev` and `libleptonica-dev`\n\n### Install on a go-dependent way (is the easier and faster way)\n\nYou can install `gOSINT` using `go get` with a simple \n\n`go get github.com/Nhoya/gOSINT/cmd/gosint`\n\n### Install On Windows\n\nCheck the AppVeyor Build page for builds\n\n## Manual Building\n\n### Building On Linux\n\nBuild gOSINT on linux is really easy, you just need to install [dep](https://github.com/golang/dep), clone the repository and `make` and `make install`\n\n### Building On Windows\n\nIf you have `make` installed you can follow the Linux instructions (and skip `make install`) otherwise be sure to have [dep](https://github.com/golang/dep) installed, clone the directory and run\n\n```bash\ndep ensure\ngo build cmd/gosint.go\n```\n\n### Running on Docker\n\ngOSINT currently supports container only for the rolling release, after the 1.0.0 release we will start working on a versioned Dockerfile.\nIf you want to try it out:\n\n```\nmkdir gOSINT\nwget https://raw.githubusercontent.com/Nhoya/gOSINT/develop/build/package/Dockerfile\ndocker build gosint .\ndocker run gosint bash\n```\n\n## Usage\n\n```bash\nusage: gOSINT [<flags>] <command> [<args> ...]\n\nAn Open Source INTelligence Swiss Army Knife\n\nFlags:\n  --help     Show context-sensitive help (also try --help-long and --help-man).\n  --json     Enable JSON Output\n  --debug    Enable Debug Output\n  --version  Show application version.\n  --verify   Verify URL Status Code\n\nArgs:\n  <url>  Domain URL\n\nCommands:\n  help [<command>...]\n    Show help.\n\n\n  git [<flags>] <url>\n    Get Emails and Usernames from repositories\n\n    --method=[clone|gh]  Specify the API to use or plain clone\n    --recursive          Search for each repository of the user\n\n  pwd [<flags>] <mail>...\n    Check dumps for Email address using haveibeenpwned.com\n\n    --get-passwords  Search passwords for mail\n\n  pgp <mail>...\n    Get Emails, KeyID and Aliases from PGP Keyring\n\n\n  shodan [<flags>] <host>...\n    Get info on host using shodan.io\n\n    --new-scan  Schedule a new shodan scan (1 Shodan Credit will be deducted)\n    --honeypot  Get honeypot probability\n\n  shodan-query <query>\n    Send a query to shodan.io\n\n\n  axfr [<flags>] <url>...\n    Subdomain enumeration using crt.sh\n\n    --verify  Verify URL Status Code\n\n  pni <number>...\n    Retrieve info about a give phone number\n\n\n  telegram [<flags>] <group>\n    Telegram public groups and channels scraper\n\n    --start=START  Start message #\n    --end=END      End message #\n    --grace=15     The number of messages that will be considered deleted before the scraper stops\n    --dump         Creates and resume messages from dumpfile\n\n  rev-whois <target>\n    Find domains for name or email address\n\n```\n\n## Configuration file\n\nThe default configuration file is in `$HOME/.config/gosint.toml` for linux environment and `./config/toml` for windows env\n\nYou can place it in different paths, load prioriy is:\n\n- `.`\n- `./config/ or $HOME/.config/`\n- `/etc/gosint/`\n\nIf some API Keys are missing insert it there\n\n## PGP module Demo (**OUTDATED**)\n\n[![asciicast](https://asciinema.org/a/21PCpbgFqyHiTbPINexHKEywj.png)](https://asciinema.org/a/21PCpbgFqyHiTbPINexHKEywj)\n\n## Pwnd module Demo (**OUTDATED**)\n\n[![asciicast](https://asciinema.org/a/x9Ap0IRcNNcLfriVujkNUhFSF.png)](https://asciinema.org/a/x9Ap0IRcNNcLfriVujkNUhFSF)\n\n## Telegram Crawler Demo (**OUTDATED**)\n\n[![asciicast](https://asciinema.org/a/nbRO9FNpjiYXAKeI87xn29j9z.png)](https://asciinema.org/a/nbRO9FNpjiYXAKeI87xn29j9z)\n\n## Shodan module Demo (**OUTDATED**)\n\n[![asciicast](https://asciinema.org/a/9lfzAZ65n9MJCkrUrxoHZQYwP.png)](https://asciinema.org/a/9lfzAZ65n9MJCkrUrxoHZQYwP)\n'