b'# Bot for Prometheus\' Alertmanager [![Build Status](https://cloud.drone.io/api/badges/metalmatze/alertmanager-bot/status.svg)](https://cloud.drone.io/metalmatze/alertmanager-bot)\n\n\n[![Docker Pulls](https://img.shields.io/docker/pulls/metalmatze/alertmanager-bot.svg?maxAge=604800)](https://hub.docker.com/r/metalmatze/alertmanager-bot)\n[![Go Report Card](https://goreportcard.com/badge/github.com/metalmatze/alertmanager-bot)](https://goreportcard.com/report/github.com/metalmatze/alertmanager-bot)\n\n\nThis is the [Alertmanager](https://prometheus.io/docs/alerting/alertmanager/) bot for\n[Prometheus](https://prometheus.io/) that notifies you on alerts.  \nJust configure the Alertmanager to send Webhooks to the bot and that\'s it.\n\nAdditionally you can always **send commands** to get up-to-date information from the alertmanager.\n\n### Why?\n\nAlertmanager already integrates a lot of different messengers as receivers for alerts.  \nI want to extend this basic functionality.\n\nPreviously the Alertmanager could only talk to you via a chat, but now you can talk back via [commands](#commands).  \nYou can ask about current ongoing [alerts](#alerts) and [silences](#silences).  \nIn the future I plan to also support silencing via the chat, so you can silences after getting an alert from within the chat.  \nA lot of other things can be added!\n\n## Messengers\n\nRight now it supports [Telegram](https://telegram.org/), but I\'d like to [add more](#more-messengers) in the future.\n\n## Commands\n\n###### /start\n\n> Hey, Matthias! I will now keep you up to date!  \n> [/help](#help)\n\n###### /stop\n\n> Alright, Matthias! I won\'t talk to you again.  \n> [/help](#help)\n\n###### /alerts\n\n> \xf0\x9f\x94\xa5 **FIRING** \xf0\x9f\x94\xa5  \n> **NodeDown** (Node scraper.krautreporter:8080 down)  \n> scraper.krautreporter:8080 has been down for more than 1 minute.  \n> **Started**: 1 week 2 days 3 hours 50 minutes 42 seconds ago  \n>\n> \xf0\x9f\x94\xa5 **FIRING** \xf0\x9f\x94\xa5\n> **monitored_service_down** (MONITORED SERVICE DOWN)\n> The monitoring service \'digitalocean-exporter\' is down.\n> **Started**: 10 seconds ago\n\n###### /silences\n\n> NodeDown \xf0\x9f\x94\x95  \n>  `job="ranch-eye" monitor="exporter-metrics" severity="page"`  \n> **Started**: 1 month 1 week 5 days 8 hours 27 minutes 57 seconds ago  \n> **Ends**: -11 months 2 weeks 2 days 19 hours 15 minutes 24 seconds  \n>\n> RancherServiceState \xf0\x9f\x94\x95  \n>  `job="rancher" monitor="exporter-metrics" name="scraper" rancherURL="http://rancher.example.com/v1" severity="page" state="inactive"`  \n> **Started**: 1 week 2 days 3 hours 46 minutes 21 seconds ago  \n> **Ends**: -3 weeks 1 day 13 minutes 24 seconds  \n\n###### /chats\n\n> Currently these chat have subscribed:\n> @MetalMatze\n\n\n###### /status\n\n> **AlertManager**  \n> Version: 0.5.1  \n> Uptime: 3 weeks 1 day 6 hours 15 minutes 2 seconds  \n> **AlertManager Bot**  \n> Version: 0.4.0  \n> Uptime: 3 weeks 1 hour 17 minutes 19 seconds  \n\n###### /help\n\n> I\'m a Prometheus AlertManager Bot for Telegram. I will notify you about alerts.  \n> You can also ask me about my [/status](#status), [/alerts](#alerts) & [/silences](#silences)  \n>   \n> Available commands:  \n> [/start](#start) - Subscribe for alerts.  \n> [/stop](#stop) - Unsubscribe for alerts.  \n> [/status](#status) - Print the current status.  \n> [/alerts](#alerts) - List all alerts.  \n> [/silences](#silences) - List all silences.  \n> [/chats](#chats) - List all users and group chats that subscribed.\n\n## Installation\n\n### Docker\n\n`docker pull metalmatze/alertmanager-bot:0.4.0`\n\nStart as a command:\n\n#### Bolt Storage\n\n```bash\ndocker run -d \\\n\t-e \'ALERTMANAGER_URL=http://alertmanager:9093\' \\\n\t-e \'BOLT_PATH=/data/bot.db\' \\\n\t-e \'STORE=bolt\' \\\n\t-e \'TELEGRAM_ADMIN=1234567\' \\\n\t-e \'TELEGRAM_TOKEN=XXX\' \\\n\t-v \'/srv/monitoring/alertmanager-bot:/data\' \\\n\t--name alertmanager-bot \\\n\tmetalmatze/alertmanager-bot:0.4.0\n```\n\n#### Consul Storage\n\n```bash\ndocker run -d \\\n\t-e \'ALERTMANAGER_URL=http://alertmanager:9093\' \\\n\t-e \'CONSUL_URL=localhost:8500\' \\\n\t-e \'STORE=consul\' \\\n\t-e \'TELEGRAM_ADMIN=1234567\' \\\n\t-e \'TELEGRAM_TOKEN=XXX\' \\\n\t--name alertmanager-bot \\\n\tmetalmatze/alertmanager-bot:0.4.0\n```\n\nUsage within docker-compose:\n\n```yml\nalertmanager-bot:\n  image: metalmatze/alertmanager-bot:0.4.0\n  environment:\n    ALERTMANAGER_URL: http://alertmanager:9093\n    BOLT_PATH: /data/bot.db\n    STORE: bolt\n    TELEGRAM_ADMIN: \'1234567\'\n    TELEGRAM_TOKEN: XXX\n    TEMPLATE_PATHS: /templates/default.tmpl\n  volumes:\n  - /srv/monitoring/alertmanager-bot:/data\n```\n\n### Ansible\n\nIf you prefer using configuration management systems (like Ansible) you might be interested in the following role:  [mbaran0v.alertmanager-bot](https://github.com/mbaran0v/ansible-role-alertmanager-bot)\n\n### Build from source\n\n`GO111MODULE=on go get github.com/metalmatze/alertmanager-bot/cmd/alertmanager-bot`\n\n### Configuration\n\nENV Variable | Description\n|-------------------|------------------------------------------------------|\n| ALERTMANAGER_URL  | Address of the alertmanager, default: `http://localhost:9093` |\n| BOLT_PATH         | Path on disk to the file where the boltdb is stored, default: `/tmp/bot.db` |\n| CONSUL_URL        | The URL to use to connect with Consul, default: `localhost:8500` |\n| LISTEN_ADDR       | Address that the bot listens for webhooks, default: `0.0.0.0:8080` |\n| STORE             | The type of the store to use, choose from bolt (local) or consul (distributed) |\n| TELEGRAM_ADMIN    | The Telegram user id for the admin. The bot will only reply to messages sent from an admin. All other messages are dropped and logged on the bot\'s console. |\n| TELEGRAM_TOKEN    | Token you get from [@botfather](https://telegram.me/botfather) |\n| TEMPLATE_PATHS    | Path to custom message templates, default template is `./default.tmpl`, in docker - `/templates/default.tmpl` |\n\n#### Authentication\n\nAdditional users may be allowed to command the bot by giving multiple instances\nof the `--telegram.admin` command line option or by specifying a\nnewline-separated list of telegram user IDs in the `TELEGRAM_ADMIN` environment\nvariable.\n```\n- TELEGRAM_ADMIN="**********\\n************"\n--telegram.admin=1 --telegram.admin=2\n```\n#### Alertmanager Configuration\n\nNow you need to connect the Alertmanager to send alerts to the bot.  \nA webhook is used for that, so make sure your `LISTEN_ADDR` is reachable for the Alertmanager.\n\nFor example add this to your `alertmanager.yml` configuration:\n```yaml\nreceivers:\n- name: \'alertmananger-bot\'\n  webhook_configs:\n  - send_resolved: true\n    url: \'http://alertmanager-bot:8080\'\n```\n\n## Development\n\nGet all dependencies. We use [golang/dep](https://github.com/golang/dep).  \nFetch all dependencies with:\n\n```\ndep ensure -v -vendor-only\n```\n\nBuild the binary using `make`:\n\n```\nmake install\n```\n\nIn case you have `$GOPATH/bin` in your `$PATH` you can now simply start the bot by running:\n\n```bash\nalertmanager-bot\n```\n\n## Missing\n\n##### Commands\n\n* `/silence` - show a specific silence  \n* `/silence_del` - delete a silence by command  \n* `/silence_add` - add a silence for a alert by command\n\n##### More Messengers\n\nAt the moment I only implemented Telegram, because it\'s so freakin\' easy to do.\n\nMessengers considered to add in the future:\n\n* [Slack](https://slack.com/)\n* [Mattermost](https://about.mattermost.com/)\n* [Matrix](https://matrix.org/)\n\nIf one is missing for you just open an issue.\n'