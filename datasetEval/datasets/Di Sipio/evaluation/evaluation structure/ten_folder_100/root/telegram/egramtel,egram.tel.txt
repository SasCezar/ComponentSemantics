b'# [egram.tel](https://egram.tel) - Telegram client\n\nEgram is an unofficial crossplatform Telegram client written in C#, .NET Core, [ReactiveUI](https://github.com/reactiveui/ReactiveUI) and [Avalonia](https://github.com/AvaloniaUI/Avalonia).\n\n| Platform | Status | Download |\n| -------- | ------ | -------- |\n| MacOS    | [![Build Status](https://dev.azure.com/egramtel/egramtel/_apis/build/status/egram?branchName=master)](https://dev.azure.com/egramtel/egramtel/_build/latest?definitionId=5?branchName=master) | **[.dmg](https://github.com/egramtel/egram.tel/releases)** |\n| Windows  | [![Build Status](https://dev.azure.com/egramtel/egramtel/_apis/build/status/egram?branchName=master)](https://dev.azure.com/egramtel/egramtel/_build/latest?definitionId=5?branchName=master) | **[.exe](https://github.com/egramtel/egram.tel/releases)** **[.zip](https://github.com/egramtel/egram.tel/releases)** |\n| Linux    | [![Build Status](https://dev.azure.com/egramtel/egramtel/_apis/build/status/egram?branchName=master)](https://dev.azure.com/egramtel/egramtel/_build/latest?definitionId=5?branchName=master) | **[.tar.gz](https://github.com/egramtel/egram.tel/releases)** |\n\n## Project\n\nThis project aims to be a full featured Telegram client with different approach to UI. Also some new features might be introduced to explore what might be implemented on Telegram platform. 100% compatibility with official clients is top priority for this project - features won\'t be added if they break this rule.\n\n![screenshot](https://raw.githubusercontent.com/egramtel/egram.tel/master/screenshot.png)\n\n## License\n\nEgram is MIT licensed.\n\n## Compiling\n\nTo compile and run the application, you need to [download and install latest .NET Core SDK](https://www.microsoft.com/net/learn/dotnet/hello-world-tutorial). Clone the repository using [Git](https://git-scm.com/). Then, go into `egram.tel/src/Tel.Egram` directory and run `dotnet run` command.\n\n```sh\n# Remember to install .NET Core SDK and git before executing this.\ngit clone https://github.com/egramtel/egram.tel\ncd egram.tel/src/Tel.Egram\ndotnet restore\ndotnet run\n```\n\n## Contributing\n\nContributors are welcome. Please submit an issue before introducing new features, then you might create a "work in progress" (WIP) pull request to prevent other people from working on the same feature. Dev group is here: [egram_dev](https://t.me/egram_dev), please feel free to ask questions. If you are new to this project there are some entry-level issues marked with "good first issue" tag.\n\n## Technology stack\n\n* [.NET Core](https://github.com/dotnet)\n* [Avalonia](https://github.com/AvaloniaUI/Avalonia)\n* [Rx.NET](https://github.com/dotnet/reactive)\n* [ReactiveUI](https://github.com/reactiveui/ReactiveUI)\n* [Dynamic Data](https://github.com/RolandPheasant/DynamicData)\n* [TDLib](https://github.com/tdlib/td)\n'