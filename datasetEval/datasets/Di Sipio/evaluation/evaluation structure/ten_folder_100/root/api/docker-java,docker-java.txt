b'[![Join the chat at https://gitter.im/docker-java/docker-java](https://badges.gitter.im/docker-java/docker-java.svg)](https://gitter.im/docker-java/docker-java?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Maven Central](https://img.shields.io/maven-central/v/com.github.docker-java/docker-java.svg)](https://mvnrepository.com/artifact/com.github.docker-java/docker-java)\n[![Bintray](https://api.bintray.com/packages/kostyasha/maven/com.github.docker-java%3Adocker-java/images/download.svg)](https://bintray.com/kostyasha/maven/com.github.docker-java%3Adocker-java/_latestVersion) \n[![Reference Status](https://www.versioneye.com/java/com.github.docker-java:docker-java/reference_badge.svg?style=flat)](https://www.versioneye.com/java/com.github.docker-java:docker-java/references)\n[![Build Status](https://travis-ci.org/docker-java/docker-java.svg?branch=master)](https://travis-ci.org/docker-java/docker-java)\n[![Coverity Scan Build Status](https://scan.coverity.com/projects/9177/badge.svg?flat=1)](https://scan.coverity.com/projects/9177)\n[![codecov.io](http://codecov.io/github/docker-java/docker-java/coverage.svg?branch=master)](http://codecov.io/github/docker-java/docker-java?branch=master)\n[![License](http://img.shields.io/:license-apache-blue.svg?style=flat)](https://github.com/docker-java/docker-java/blob/master/LICENSE)\n\n<!--[![Circle CI](https://circleci.com/gh/docker-java/docker-java.svg?style=svg)](https://circleci.com/gh/docker-java/docker-java)-->\n# docker-java \n\nJava API client for [Docker](http://docs.docker.io/ "Docker")\n\n<b>The current implementation is based on Jersey 2.x and therefore classpath incompatible with older Jersey 1.x dependent libraries!</b>\n\nDeveloper forum for [docker-java](https://groups.google.com/forum/?#!forum/docker-java-dev "docker-java")\n\n[Changelog](https://github.com/docker-java/docker-java/blob/master/CHANGELOG.md)<br/>\n[Wiki](https://github.com/docker-java/docker-java/wiki)\n\n## Build with Maven\n\n###### Prerequisites:\n\n* Java min 1.7\n* Maven 3\n\nBuild and run integration tests as follows:\n\n    $ mvn clean install\n\nIf you do not have access to a Docker server or just want to execute the build quickly, you can run the build without the integration tests:\n\n    $ mvn clean install -DskipITs\n\nBy default the docker engine is using local UNIX sockets for communication with the docker CLI so docker-java\nclient also uses UNIX domain sockets to connect to the docker daemon by default. To make the docker daemon listening on a TCP (http/https) port you have to configure it by setting the DOCKER_OPTS environment variable to something like the following: \n\n    DOCKER_OPTS="-H tcp://127.0.0.1:2375 -H unix:///var/run/docker.sock"\n    \nMore details about setting up Docker Engine can be found in the official documentation: https://docs.docker.com/engine/admin/\n\nTo force docker-java to use TCP (http) configure the following (see [Configuration](https://github.com/docker-java/docker-java#configuration) for details):\n\n    DOCKER_HOST=tcp://127.0.0.1:2375\n    \nFor secure tls (https) communication:   \n\n    DOCKER_HOST=tcp://127.0.0.1:2376\n    DOCKER_TLS_VERIFY=1\n    DOCKER_CERT_PATH=/Users/marcus/.docker/machine/machines/docker-1.11.2\n\n### Latest release version\nSupports a subset of the Docker Remote API [v1.37](https://docs.docker.com/engine/api/v1.37/), Docker Server version since 1.12.6\n\n    <dependency>\n          <groupId>com.github.docker-java</groupId>\n          <artifactId>docker-java</artifactId>\n          <!-- use latest version https://github.com/docker-java/docker-java/releases -->\n          <version>3.X.Y</version>\n    </dependency>\n    \n### Latest development version\nMay contain new features while they are not released.\n\nYou can find the latest development version including javadoc and source files on [Sonatypes OSS repository](https://oss.sonatype.org/content/groups/public/com/github/docker-java/docker-java/).\n\n    <dependency>\n          <groupId>com.github.docker-java</groupId>\n          <artifactId>docker-java</artifactId>\n          <version>3.X.Y-SNAPSHOT</version>\n    </dependency>\n    \n\n## Documentation\n\nFor code examples, please look at the [Wiki](https://github.com/docker-java/docker-java/wiki) or [Test cases](https://github.com/docker-java/docker-java/tree/master/src/test/java/com/github/dockerjava/core/command "Test cases")\n\n## Configuration\n\nThere are a couple of configuration items, all of which have sensible defaults:\n\n* `DOCKER_HOST` The Docker Host URL, e.g. `tcp://localhost:2376` or `unix:///var/run/docker.sock`\n* `DOCKER_TLS_VERIFY` enable/disable TLS verification (switch between `http` and `https` protocol)\n* `DOCKER_CERT_PATH` Path to the certificates needed for TLS verification\n* `DOCKER_CONFIG` Path for additional docker configuration files (like `.dockercfg`)\n* `api.version` The API version, e.g. `1.23`.\n* `registry.url` Your registry\'s address.\n* `registry.username` Your registry username (required to push containers).\n* `registry.password` Your registry password.\n* `registry.email` Your registry email.\n\nThere are three ways to configure, in descending order of precedence:\n\n#### Programmatic:\nIn your application, e.g.\n\n    DockerClientConfig config = DefaultDockerClientConfig.createDefaultConfigBuilder()\n        .withDockerHost("tcp://my-docker-host.tld:2376")\n        .withDockerTlsVerify(true)\n        .withDockerCertPath("/home/user/.docker/certs")\n        .withDockerConfig("/home/user/.docker")\n        .withApiVersion("1.30") // optional\n        .withRegistryUrl("https://index.docker.io/v1/")\n        .withRegistryUsername("dockeruser")\n        .withRegistryPassword("ilovedocker")\n        .withRegistryEmail("dockeruser@github.com")\n        .build();\n    DockerClient docker = DockerClientBuilder.getInstance(config).build();\n\n#### Properties (docker-java.properties)\n\n    DOCKER_HOST=tcp://localhost:2376\n    DOCKER_TLS_VERIFY=1\n    DOCKER_CERT_PATH=/home/user/.docker/certs\n    DOCKER_CONFIG=/home/user/.docker\n    api.version=1.23\n    registry.url=https://index.docker.io/v1/\n    registry.username=dockeruser\n    registry.password=ilovedocker\n    registry.email=dockeruser@github.com\n\n##### System Properties:\n\n    java -DDOCKER_HOST=tcp://localhost:2375 -Dregistry.username=dockeruser pkg.Main\n\n##### System Environment\n\n    export DOCKER_HOST=tcp://localhost:2376\n    export DOCKER_TLS_VERIFY=1\n    export DOCKER_CERT_PATH=/home/user/.docker/certs\n    export DOCKER_CONFIG=/home/user/.docker\n\n##### File System\n\nIn `$HOME/.docker-java.properties`\n\n##### Class Path\n\nIn the class path at `/docker-java.properties`\n    \n'