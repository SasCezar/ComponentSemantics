b'================================\nWelcome to python-binance v0.7.4\n================================\n\nNote\n----\n\nI am working on a python3 version with async support to remove legacy dependencies and their related issues.\n\nI would appreciate if you could try out the `feature/asyncio <https://github.com/sammchardy/python-binance/tree/feature/asyncio>`_ branch and give your feedback.\n\n\n.. image:: https://img.shields.io/pypi/v/python-binance.svg\n    :target: https://pypi.python.org/pypi/python-binance\n\n.. image:: https://img.shields.io/pypi/l/python-binance.svg\n    :target: https://pypi.python.org/pypi/python-binance\n\n.. image:: https://img.shields.io/travis/sammchardy/python-binance.svg\n    :target: https://travis-ci.org/sammchardy/python-binance\n\n.. image:: https://img.shields.io/coveralls/sammchardy/python-binance.svg\n    :target: https://coveralls.io/github/sammchardy/python-binance\n\n.. image:: https://img.shields.io/pypi/wheel/python-binance.svg\n    :target: https://pypi.python.org/pypi/python-binance\n\n.. image:: https://img.shields.io/pypi/pyversions/python-binance.svg\n    :target: https://pypi.python.org/pypi/python-binance\n\nThis is an unofficial Python wrapper for the `Binance exchange REST API v1/3 <https://github.com/binance-exchange/binance-official-api-docs>`_. I am in no way affiliated with Binance, use at your own risk.\n\nIf you came here looking for the `Binance exchange <https://www.binance.com/?ref=10099792>`_ to purchase cryptocurrencies, then `go here <https://www.binance.com/?ref=10099792>`_. If you want to automate interactions with Binance stick around.\n\nIf you\'re interested in Binance\'s new DEX Binance Chain see my `python-binance-chain library <https://github.com/sammchardy/python-binance-chain>`_\n\nSource code\n  https://github.com/sammchardy/python-binance\n\nDocumentation\n  https://python-binance.readthedocs.io/en/latest/\n\nBinance API Telegram\n  https://t.me/binance_api_english\n\nBlog with examples\n  https://sammchardy.github.io\n\nMake sure you update often and check the `Changelog <https://python-binance.readthedocs.io/en/latest/changelog.html>`_ for new features and bug fixes.\n\nFeatures\n--------\n\n- Implementation of all General, Market Data and Account endpoints.\n- Simple handling of authentication\n- No need to generate timestamps yourself, the wrapper does it for you\n- Response exception handling\n- Websocket handling with reconnection and multiplexed connections\n- Symbol Depth Cache\n- Historical Kline/Candle fetching function\n- Withdraw functionality\n- Deposit addresses\n- Margin Trading\n\nQuick Start\n-----------\n\n`Register an account with Binance <https://www.binance.com/register.html?ref=10099792>`_.\n\n`Generate an API Key <https://www.binance.com/userCenter/createApi.html>`_ and assign relevant permissions.\n\n.. code:: bash\n\n    pip install python-binance\n\n\n.. code:: python\n\n    from binance.client import Client\n    client = Client(api_key, api_secret)\n\n    # get market depth\n    depth = client.get_order_book(symbol=\'BNBBTC\')\n\n    # place a test market buy order, to place an actual order use the create_order function\n    order = client.create_test_order(\n        symbol=\'BNBBTC\',\n        side=Client.SIDE_BUY,\n        type=Client.ORDER_TYPE_MARKET,\n        quantity=100)\n\n    # get all symbol prices\n    prices = client.get_all_tickers()\n\n    # withdraw 100 ETH\n    # check docs for assumptions around withdrawals\n    from binance.exceptions import BinanceAPIException, BinanceWithdrawException\n    try:\n        result = client.withdraw(\n            asset=\'ETH\',\n            address=\'<eth_address>\',\n            amount=100)\n    except BinanceAPIException as e:\n        print(e)\n    except BinanceWithdrawException as e:\n        print(e)\n    else:\n        print("Success")\n\n    # fetch list of withdrawals\n    withdraws = client.get_withdraw_history()\n\n    # fetch list of ETH withdrawals\n    eth_withdraws = client.get_withdraw_history(asset=\'ETH\')\n\n    # get a deposit address for BTC\n    address = client.get_deposit_address(asset=\'BTC\')\n\n    # start aggregated trade websocket for BNBBTC\n    def process_message(msg):\n        print("message type: {}".format(msg[\'e\']))\n        print(msg)\n        # do something\n\n    from binance.websockets import BinanceSocketManager\n    bm = BinanceSocketManager(client)\n    bm.start_aggtrade_socket(\'BNBBTC\', process_message)\n    bm.start()\n\n    # get historical kline data from any date range\n\n    # fetch 1 minute klines for the last day up until now\n    klines = client.get_historical_klines("BNBBTC", Client.KLINE_INTERVAL_1MINUTE, "1 day ago UTC")\n\n    # fetch 30 minute klines for the last month of 2017\n    klines = client.get_historical_klines("ETHBTC", Client.KLINE_INTERVAL_30MINUTE, "1 Dec, 2017", "1 Jan, 2018")\n\n    # fetch weekly klines since it listed\n    klines = client.get_historical_klines("NEOBTC", Client.KLINE_INTERVAL_1WEEK, "1 Jan, 2017")\n\nFor more `check out the documentation <https://python-binance.readthedocs.io/en/latest/>`_.\n\nDonate\n------\n\nIf this library helped you out feel free to donate.\n\n- ETH: 0xD7a7fDdCfA687073d7cC93E9E51829a727f9fE70\n- LTC: LPC5vw9ajR1YndE1hYVeo3kJ9LdHjcRCUZ\n- NEO: AVJB4ZgN7VgSUtArCt94y7ZYT6d5NDfpBo\n- BTC: 1Dknp6L6oRZrHDECRedihPzx2sSfmvEBys\n\nOther Exchanges\n---------------\n\nIf you use `Binance Chain <https://testnet.binance.org/>`_ check out my `python-binance-chain <https://github.com/sammchardy/python-binance-chain>`_ library.\n\nIf you use `Kucoin <https://www.kucoin.com/?rcode=E42cWB>`_ check out my `python-kucoin <https://github.com/sammchardy/python-kucoin>`_ library.\n\nIf you use `Allcoin <https://www.allcoin.com/Account/RegisterByPhoneNumber/?InviteCode=MTQ2OTk4MDgwMDEzNDczMQ==>`_ check out my `python-allucoin <https://github.com/sammchardy/python-allcoin>`_ library.\n\nIf you use `IDEX <https://idex.market>`_ check out my `python-idex <https://github.com/sammchardy/python-idex>`_ library.\n\nIf you use `Quoinex <https://accounts.quoinex.com/sign-up?affiliate=PAxghztC67615>`_\nor `Qryptos <https://accounts.qryptos.com/sign-up?affiliate=PAxghztC67615>`_ check out my `python-quoine <https://github.com/sammchardy/python-quoine>`_ library.\n\nIf you use `BigONE <https://big.one>`_ check out my `python-bigone <https://github.com/sammchardy/python-bigone>`_ library.\n\n.. image:: https://analytics-pixel.appspot.com/UA-111417213-1/github/python-binance?pixel&useReferer\n'