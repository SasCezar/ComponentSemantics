b'# A simple starter kit for Eleventy\n\nHylia is a lightweight [Eleventy](https://11ty.io) starter kit with [Netlify CMS](https://www.netlifycms.org/) pre-configured, so that you can one-click install a progressive, accessible blog in minutes. It also gives you a well organised starting point to extend it for yourself.\n\nGet started now by **[deploying Hylia to Netlify.][deploy-to-netlify]**\n\n[![Deploy to Netlify](https://www.netlify.com/img/deploy/button.svg)][deploy-to-netlify]\n\n<img src="https://hankchizljaw.imgix.net/hylia-github.jpg?auto=format&q=60" width="550" />\n\n## Features\n\nHylia version 0.5.1 features:\n\n\xe2\x9c\x8d\xef\xb8\x8f A pre-configured [Netlify CMS](https://www.netlifycms.org/) setup  \n\xf0\x9f\x8e\xa8 Customisable design tokens to make it your own  \n\xf0\x9f\x8c\x8d Customisable global data and navigation  \n\xf0\x9f\x93\x82 Tags and tag archives  \n\xe2\x9c\x85 Progressively enhanced, semantic and accessible  \n\xf0\x9f\x8e\x88 _Super_ lightweight front-end  \n\xf0\x9f\x9a\xb0 Sass powered CSS system with utility class generator  \n\xe2\x9a\x99\xef\xb8\x8f Service worker that caches pages so people can read your articles offline  \n\xf0\x9f\x9a\x80 An RSS feed for your posts\n\n## Roadmap\n\n\xf0\x9f\x92\xac [Netlify Forms](https://www.netlify.com/docs/form-handling/) powered comments  \n\xf0\x9f\x92\xa1 ~~Dark/Light mode toggle~~ [Added in 0.4.0](https://github.com/hankchizljaw/hylia/releases/tag/0.4.0)  \n\xf0\x9f\x97\xa3 Webmentions  \n\xf0\x9f\x93\x96 Pagination  \n\xf0\x9f\x90\xa6 Web sharing API integration  \n\xf0\x9f\x97\x92 Offline mode with links to cached pages  \n\xf0\x9f\x93\x84 Documentation site  \n\xf0\x9f\x92\x85 Proper Sass documentation  \n\xe2\x9c\x8d\xef\xb8\x8f Proper CMS documentation  \n\xf0\x9f\x96\xbc A facility for you to be able to add your logo / branding  \n\n---\n\n## Getting started\n\n### Method one: One-Click Deploy to Netlify\n\nYou can [deploy Hylia to Netlify with one click][deploy-to-netlify] and you\xe2\x80\x99ll be up and running in minutes!\n\n[![Deploy to Netlify](https://www.netlify.com/img/deploy/button.svg)][deploy-to-netlify]\n\nI recorded a quick start video of me deploying Hylia to Netlify and getting the CMS set up. [Check it out here](https://youtu.be/0hM_0BH-Y_A).\n\n### Method two: Clone / Fork\n\n1. Clone or fork this repo: `git clone https://github.com/hankchizljaw/hylia`\n2. `cd` into the project directory and run `npm install`\n3. Once all the dependencies are installed run `npm start`\n4. Open your browser at `http://localhost:8080` and away you go!\n\n## Terminal commands\n\n### Serve the site locally\n\n```bash\nnpm start\n```\n\n### Build a production version of the site\n\n```bash\nnpm run production\n```\n\n### Compile Sass\n\n```bash\nnpm run sass:process\n```\n\n### Re-generate design tokens for Sass\n\n```bash\nnpm run sass:tokens\n```\n\n## Getting started with the CMS\n\nBefore you can use the CMS, you need to do some config in Netlify. Luckily they provide a [very handy guide to get started](https://www.netlify.com/docs/identity/).\n\nIn short, though:\n\n- Once you\xe2\x80\x99ve set up the site on Netlify, go to \xe2\x80\x9cSettings\xe2\x80\x9d > \xe2\x80\x9cIdentity\xe2\x80\x9d and enable Identity\n- Scroll down to the \xe2\x80\x9cGit Gateway\xe2\x80\x9d area, click \xe2\x80\x9cEnable Git Gateway\xe2\x80\x9d and follow the steps\n- Click the \xe2\x80\x9cIdentity\xe2\x80\x9d tab at the top\n- Once you\xe2\x80\x99ve enabled identity, click \xe2\x80\x9cInvite Users\xe2\x80\x9d\n- Check the invite link in your inbox and click the link in the email that\xe2\x80\x99s sent to you\n- Set a password in the popup box\n- Go to `/admin` on your site and login\n- You\xe2\x80\x99re in and ready to edit your content!\n\n## Design Tokens and Styleguide\n\n### Design Tokens\n\nAlthough Hylia has a pretty simple design, you can configure the core design tokens that control the colours, size ratio and fonts.\n\n---\n\n**Note**: _Credit must be given to the hard work [Jina Anne](https://twitter.com/jina) did in order for the concept of design tokens to even exist. You should watch [this video](https://www.youtube.com/watch?v=wDBEc3dJJV8), then [read this article](https://the-pastry-box-project.net/jina-bolton/2015-march-28) and then sign up for [this course](https://aycl.uie.com/virtual_seminars/design_tokens_scaling_design_with_a_single_source_of_truth) to expand your knowledge._\n\n---\n\nTo change the design tokens in the CMS, find the \xe2\x80\x9cGlobals\xe2\x80\x9d in the sidebar then in the presented options, select \xe2\x80\x9cTheme Settings\xe2\x80\x9d.\n\nTo change the design tokens directly, edit [`_src/data/tokens.json`](https://github.com/hankchizljaw/hylia/blob/master/src/_data/tokens.json).\n\nThe tokens are converted into maps that the Sass uses to compile the front-end CSS, so make sure that you maintain the correct structure of `tokens.json`.\n\n### Styleguide\n\nYour version of Hylia ships with a Styleguide by default. You can see a demo of the Styleguide at <https://hylia.website/styleguide/>.\n\nYou can edit the Styleguide by opening [`src/styleguide.njk`](https://github.com/hankchizljaw/hylia/blob/master/src/styleguide.njk). If you don\xe2\x80\x99t want the Styleguide, delete that file and the page will vanish.\n\n## Sass\n\nHylia is based on the [WIP v2 version of Stalfos](https://github.com/hankchizljaw/stalfos/tree/feature/v2), which currently has no documentation (I know, I\xe2\x80\x99m bad). Here is some very basic documentation for elements of the new framework that you will encounter on this project.\n\n### Configuration\n\nThe whole Sass system is powered by central config file, which lives here: [`_src/scss/_config.scss`](https://github.com/hankchizljaw/hylia/blob/master/src/scss/_config.scss).\n\nBefore Sass is compiled, a `_tokens.scss` file is generated from the [design tokens config](https://github.com/hankchizljaw/hylia/blob/master/src/_data/tokens.json) which is required.\n\nKey elements:\n\n- `$stalfos-size-scale`: A token driven size scale which by default, is a \xe2\x80\x9cMajor Third\xe2\x80\x9d scale\n- `$stalfos-colors`: A token driven map of colours\n- `$stalfos-util-prefix`: All pre-built, framework utilities will have this prefix. Example: the wrapper utility is \'.sf-wrapper\' because the default prefix is \'sf-\'\n- `$metrics`: Various misc metrics to use around the site\n- `$stalfos-config`: This powers everything from utility class generation to breakpoints to enabling/disabling pre-built components/utilities\n\n### How to create a new utility class with the generator\n\nThe utility class generator lets you generate whatever you want, with no opinions on class name or properties affected.\n\nTo add a new class, add another item to the exists `$stalfos-config` map. This example adds a utility for floating elements.\n\n```scss\n\'float\':(\'items\':(\'left\':\'left\',\'right\': \'right\'\n  ),\n  \'output\': \'responsive\',\n  \'property\': \'float\'\n);\n```\n\nThe `output` is set to `responsive` which means every breakpoint will generate a prefixed class for itself. If you only wanted elements to float left in the `md` breakpoint, you\xe2\x80\x99d now be able to add a class of `md:float-left` to your HTML elements.\n\nIf you only want standard utility classes generating, set the `output` to `standard`.\n\n### Functions\n\n#### `get-color($key)`\n\nFunction tries to match the passed `$key` with the `$stalfos-colors` map. Returns null if it can\xe2\x80\x99t find a match.\n\n#### `get-config-value($key, $group)`\n\nReturns back a 1 dimensional (key value pair) config value if available.\n\n#### `get-size($ratio-key)`\n\nFunction tries to match the passed `$ratio-key` with the `$stalfos-size-scale`. Returns null if it can\xe2\x80\x99t find a match.\n\n### Mixins\n\n#### `apply-utility($key, $value-key)`\n\nGrabs the property and value of one of the `$stalfos-config utilities` that the generator will generate a class for.\n\n#### `media-query($key)`\n\nPass in the key of one of your breakpoints set in `$stalfos-config[\'breakpoints\']` and this mixin will generate the `@media` query with your configured value.\n\n## CMS\n\nHylia has [Netlify CMS](https://www.netlifycms.org/) pre-configured as standard. You can customise the configuration by editing [`src/admin/config.yml`](https://github.com/hankchizljaw/hylia/blob/master/src/admin/config.yml).\n\n### Content that you can edit\n\nThe basic CMS setup allows you to edit the following:\n\n- **Home page**: Edit the content on your homepage\n- **Posts**: Create and edit blog posts\n- **Generic pages**: Create generic pages that use a similar layout to posts\n- **Global site data**: Various bits of global site data such as your url, title, posts per page and author details\n- **Navigation**: Edit your primary navigation items\n- **Theme**: Edit the design tokens that power the site\xe2\x80\x99s theme\n\n## Get involved\n\nThis project is _super_ early and feedback is very much welcome. In order to keep things running smooth, please consult the [contribution guide and code of conduct](https://github.com/hankchizljaw/hylia/blob/master/contributing.md).\n\nThe stuff that I need the most help with is:\n\n- Documentation\n- [Webmentions](https://www.w3.org/TR/webmention/)\n- Performance\n\n[deploy-to-netlify]: https://app.netlify.com/start/deploy?repository=https://github.com/hankchizljaw/hylia&stack=cms\n'