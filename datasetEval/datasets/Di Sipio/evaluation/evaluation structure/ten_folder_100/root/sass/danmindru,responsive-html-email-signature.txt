b'# Responsive HTML email signature(s)\n[![npm](https://img.shields.io/npm/v/responsive-html-email-signature.svg)](https://www.npmjs.com/package/responsive-html-email-signature)\n[![license](https://img.shields.io/github/license/danmindru/responsive-html-email-signature.svg)](/LICENSE)\n[![test action status](https://github.com/danmindru/responsive-html-email-signature/workflows/Test%20template%20output/badge.svg)](https://github.com/danmindru/responsive-html-email-signature/actions)\n\n\n### Let\'s punch email clients in the stomach \xf0\x9f\x91\x8a\nWhen you need some basic responsive email signatures that work on mobile.<br/>\n...and your colleagues need them too.<br/>\n...but you don\'t want to deal with tables and inline styles.\n\n[Read the docs in other languages](/i18n) \xe2\x86\x97\xef\xb8\x8f\n\n\n## Preview\nHere are some examples:\n![responsive emails-01](https://cloud.githubusercontent.com/assets/1515742/10591900/13889d32-76b9-11e5-8dc0-b89d80189e93.png)\n![responsive emails-02](https://cloud.githubusercontent.com/assets/1515742/10591901/139c4954-76b9-11e5-80f7-5b0ccaf5af81.png)\n\n## Getting started\n- Clone repo `git clone https://github.com/danmindru/responsive-html-email-signature.git`\n- Run `npm install`\n- Run `npm start` to generate templates from configuration. This will continue to watch your files and re-make the template until you exit.\n\n### Customizing templates\n- Edit files in */templates*\n- Open files from `./dist` in your fav browser to check them out\n\n> When you\'re done, check out [how to add them to your email client of choice](#usage-with-different-email-clients) if in doubt.\n\n\n## Motivation\nWriting HTML emails & email signatures sucks. Let\'s make it easier. We can\'t fix all email clients, but we can surely make our lives easier with some automation. <br/>\n\n## What does this pile of code do\n- [x] generates email templates from your config\n- [x] allows generating multiple templates at once (for your colleagues too!)\n- [x] transforms linked (`<link>`) CSS into inline styles\n- [x] embeds local `img[src]` into the template (base64).*\n- [x] minifies the template\n- [x] ads some basic media queries for mail clients that support them\n- [x] can build templates from multiple sources\n- [x] watches HTML / CSS files for changes and re-builds\n- [x] supports LESS / SASS / PostCSS\n- [x] autoprefixer, so you don\'t have to worry about your `-moz-`s or `-webkit-`s\n\n**Some mail clients might have [hard limits](https://support.google.com/a/answer/176652?hl=en) regarding the email size, so don\'t include large images if possible. If you need to, use a URL instead and host the image somewhere else.*\n\n\n## Docs\n### Installing\n```bash\n$ npm install\n$ npm start # By default, templates will be created in `./dist` and HTML & CSS files in \'./templates\' will be watched for changes.\n```\n\n> Note: works well with node v10+. Earlier and later versions might also work.\n\n### Configuring\nTo make a basic email from existing templates, you only have to edit the `conf.json` file in each template.\n\nFor example, the dark template accepts the following:\n```json\n{\n  "id": "<will-be-used-for-filename>",\n  "signature": "<signature-of-choice>",\n  "name": "<your-name>",\n  "contactMain": "<phone-or-email-or-html>",\n  "contactMail": "<email>",\n  "slogan": "<a-basic-slogan>",\n  "logoUrl": "</assets/dark.png?>",\n  "logoAlt": "<text-in-case-logo-is-blocked>",\n  "website": "<http://dark.dk>"\n}\n```\n\n### Generating multiple emails from the same config (for your colleagues too!)\nTo generate multiple templates, use an array instead of an object in `conf.json`, like so:\n```json\n[\n  {...conf1},\n  {...conf2}\n]\n```\n\n### Using config values in HTML\nConfig variables are made available in all HTML files. <br/>\nAdd any variable to the configuration file and use it in HTML like so:\n\n```html\n<p><!-- @echo yourCustomVariable --></p>\n```\n\nWhere the configuration contains:\n\n```json\n{\n  yourCustomVariable: "Custom!"\n}\n```\n\n> NB: config variables also accept HTML. That\'s useful for including links.\n\n\n### Adding CSS & pre-processing\nAny number of CSS, SASS or LESS files in a template directory & they will be automatically processed & inlined into the files outputed in `./dist`.\n\n\n### Multiple emails in the same template\nTemplates can contain multiple HTML files from which to build emails. For example, the dark template has `signature.html` and `signature-reply.html`, which is a simpler version.\nEach HTML file will be treated as an email template, except for `*.inc.html`. See below \xe2\xac\x87\xef\xb8\x8f\n\n\n### Using partials (*.inc.html)\nBy naming files with `*.inc.html`, they become partials. Partials will not be treated as templates (ignored), but they can be included in any HTML template using the `@include` HTML comment.\n\n```html\n<section>\n<!-- @include footer.inc.html -->\n</section\n```\n\nPartials are useful if you have bits of HTML that repeat, like headers, footers, etc.\n\n\n## Template structure (examples)\nThere are no rules regarding how to structure templates, but it\'s a good idea to create directories for a template group. <br/>\nThere are 2 examples of template structures, one for the `light` email template and one for the `dark` one.\n\nHere\'s how the dark one is structured:\n```bash\n./templates\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 dark\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 assets\n        \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 dark.png              # Image to embed as base64\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 conf.json                 # Template strings, logo, etc.\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 dark.css                  # Stylesheet.\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 footer.inc.html           # Contact info & logo\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 head.inc.html             # \'Responsive\' CSS goes here\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 signature.html            # Full signature (loads head/footer)\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 signature-reply.html      # Simplified signature (loads head)\n```\n\nHere\'s how the light one is structured:\n```bash\n./templates\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 light\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 assets\n        \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 light.png             # Image to embed as base64\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 conf.json                 # Template strings, logo, etc.\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 footer.inc.html           # Contact info & logo\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 full-mail.html            # Body + signature\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 head.inc.html             # \'Responsive\' CSS goes here\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 light.css                 # Stylesheet.\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 signature.html            # Full signature (loads head/footer)\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 signature-reply.html      # Simplified signature (loads head)\n```\n\nThere\'s one convention you have to keep in mind: `all files that you wish to include should follow the *.inc.html format`. The gulp task ignores `*.inc.html` files, but will try to process & create email templates from all `.html` files.\n\nYou are of course encouraged to change the default structure for your use case.\n\n\n## Overview of the build process\nThe diagram below shows what happens to your email templates.\nEach folder in \'templates\' is considered a `template group`. A template file will be generated for each of the configuration objects you add have in the template group -> `conf.js`.\n![Responsive HTML email template/signatures diagram](https://user-images.githubusercontent.com/1515742/45000195-35268300-afc3-11e8-82b4-7507430c48a0.png)\n\n\n## CSS Support\nRemember, it\'s HTML mails, so you need to check a big-ass table to find out nothing\'s gonna work.\nSee [this](https://www.campaignmonitor.com/css/) for more info. [Gulp-inline-css](https://www.npmjs.com/package/gulp-inline-css) is being used to convert whatever CSS you throw at it to inline styles, but it probably won\'t handle everything.\n\nSome bonuses of using `gulp-inline-css`: many css props will be converted to attributes. For example, the \'background-color\' prop will be added as \'bgcolor\' attribute to table elements.\nFor more details take a look at the [inline-css mappings](https://github.com/jonkemp/inline-css/blob/master/lib/setTableAttrs.js).\n\n\n## Usage with different email clients\n### Thunderbird\nThere are several Thunderbird plugins which can automatically insert signatures when composing e-mails. We recommend [SmartTemplate4](https://addons.mozilla.org/en-us/thunderbird/addon/smarttemplate4) as one of the options. It can use different templates for new e-mails, replies and forwarded e-mails.\n\n### Gmail\nGo to your mailbox settings & paste the generated signature.\n> **NB**: Gmail doesn\'t seem to support inlined (base64) images. You have to use absolute `http(s)//...` from them to load up.\n\n### Office 365 / outlook.live.com\nIt\'s a bit hacky to set up, but possible. See [this issue](https://github.com/danmindru/responsive-html-email-signature/issues/52).\n\n### Apple Mail / OS X (oh boy)\n\n#### Solution 1\n- Open Mail.app and go to `Mail` -> `Preferences` -> `Signatures`\n- Create a new signature and write some placeholder text (doesn\'t matter what it is, but you have to identify it later).\n- Close Mail.app.\n- Open terminal, then open the signature files using TextEdit (might be different for iCloud drive check the article below).\n```\n$ open -a TextEdit ~/Library/Mobile\\ Documents/com~apple~mail/Data/V3/MailData/Signatures/ubiquitous_*.mailsignature\n```\n- Keep the file with the placeholder open, close the other ones.\n- Replace the `<body>...</body>` and it\'s contents with the template of your choice. *Don\'t remove the meta information at the top!*\n- Open Mail.app and compose a new mail. Select the signature from the list to test it out.\n\n> **NB**: Images won\'t appear in the signature preview, but will work fine when you compose a message.\n\n\n#### Solution 2\nYou can also open the HTML files in `/dist` in a browser, CMD + A, CMD + C and then paste into the signature box. This won\'t copy the `<html>` part or the `<style>` part that includes media queries. Follow the guide if you want it.\n\n\n#### Troubleshooting\n\nIf solution #1 doesn\'t work, you can repeat the steps and lock the signature files before you open Mail.app again.\nLock Files:\n```\n$ chflags uchg ~/Library/Mail/V3/MailData/Signatures/*.mailsignature\n```\n\nIf you want to do changes later, you have to unlock the files:\n```\n$ chflags nouchg ~/Library/Mail/V3/MailData/Signatures/*.mailsignature\n```\n\nIf you are using iCloud drive or having problems with it, you might also want to check [this article](http://matt.coneybeare.me/how-to-make-an-html-signature-in-apple-mail-for-el-capitan-os-x-10-dot-11/).\n\n### Outlook 2010 Client for Windows 7\n\n#### Solution 1\n- Open Outlook 2010 and go to `File > Option > Mail > Signature`\n- Create new signature (with a placeholder for your convenience)\n- Open signature folder using CMD\n\n> As the AppData folder is hidden, I\'d recommend you to open it via CMD.\n\n```\ncd AppData\\Roaming\\Microsoft\nstart Signatures\n```\n\n- Within this folder, find a file named with your placeholder then right click this file and select edit.\n- Replace it with your HTML and save\n- Open Outlook again and check your signature\n\n#### Solution 2\nUnfortnately, Outlook 2010 client dosen\'t support HTML file import features for your email template. But you can add your own signatures by simple Copy and paste like **Solution 2** above.\n\n- Open built html file on `/dist` folder and Ctrl A + C\n- Open Outlook 2010 and go to `File > Option > Mail > Signature`\n- Create new signature and paste copyed one\n\n> **NB**: base 64 will not be shown on Outlook 2010 client. So, I recommend to use external url if you want to use images.\n\n\n## Other commands\n\n### `npm run test`\nRuns tests once.\n\n### `npm run once`\nCreates templates and exits; does not watch files.\n'