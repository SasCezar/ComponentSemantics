b"# Deprecated\n\nThis project is deprecated because [Ruby Sass is deprecated](http://sass.logdown.com/posts/7081811). Switch to [`gulp-sass`](https://github.com/dlmanning/gulp-sass).\n\n---\n\n# gulp-ruby-sass [![Build Status](https://travis-ci.org/sindresorhus/gulp-ruby-sass.svg?branch=master)](https://travis-ci.org/sindresorhus/gulp-ruby-sass)\n\nCompiles Sass with the [Sass gem](http://sass-lang.com/install) and pipes the results into a gulp stream.<br>\nTo compile Sass with [libsass](http://libsass.org/), use [gulp-sass](https://github.com/dlmanning/gulp-sass)\n\n\n\n## Install\n\n```\n$ npm install --save-dev gulp-ruby-sass\n```\n\nRequires [Sass >=3.4](http://sass-lang.com/install).\n\n\n## Usage\n\n### sass(source, [options])\n\nUse gulp-ruby-sass *instead of `gulp.src`* to compile Sass files.\n\n```js\nconst gulp = require('gulp');\nconst sass = require('gulp-ruby-sass');\n\ngulp.task('sass', () =>\n\tsass('source/file.scss')\n\t\t.on('error', sass.logError)\n\t\t.pipe(gulp.dest('result'))\n);\n```\n\n#### source\n\nType: `string` `string[]`\n\nFile or glob pattern (`source/**/*.scss`) to compile. Ignores files prefixed with an underscore. **Directory sources are not supported.**\n\n#### options\n\nType: `Object`\n\nObject containing plugin and Sass options.\n\n##### bundleExec\n\nType: `boolean`<br>\nDefault: `false`\n\nRun Sass with [bundle exec](http://gembundler.com/man/bundle-exec.1.html).\n\n##### sourcemap\n\nType: `boolean`<br>\nDefault: `false`\n\nInitialize and pass Sass sourcemaps to [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps). Note this option replaces Sass's `sourcemap` option.\n\n```js\nconst gulp = require('gulp');\nconst sass = require('gulp-ruby-sass');\nconst sourcemaps = require('gulp-sourcemaps');\n\ngulp.task('sass', () =>\n\tsass('source/file.scss', {sourcemap: true})\n\t\t.on('error', sass.logError)\n\t\t// for inline sourcemaps\n\t\t.pipe(sourcemaps.write())\n\t\t// for file sourcemaps\n\t\t.pipe(sourcemaps.write('maps', {\n\t\t\tincludeContent: false,\n\t\t\tsourceRoot: 'source'\n\t\t}))\n\t\t.pipe(gulp.dest('result'))\n);\n```\n\n##### base\n\nType: `string`\n\nIdentical to `gulp.src`'s [`base` option](https://github.com/gulpjs/gulp/blob/master/docs/API.md#optionsbase).\n\n##### tempDir\n\nType: `string`<br>\nDefault: System temp directory\n\nThis plugin compiles Sass files to a temporary directory before pushing them through the stream. Use `tempDir` to choose an alternate directory if you aren't able to use the default OS temporary directory.\n\n##### emitCompileError\n\nType: `boolean`<br>\nDefault: `false`\n\nEmit a gulp error when Sass compilation fails.\n\n##### verbose\n\nType: `boolean`<br>\nDefault: `false`\n\nLog the spawned Sass or Bundler command. Useful for debugging.\n\n##### Sass options\n\nAny additional options are passed directly to the Sass executable. The options are camelCase versions of Sass's options parsed by [`dargs`](https://github.com/sindresorhus/dargs).\n\nRun `sass -h` for a complete list of Sass options.\n\n```js\ngulp.task('sass', () =>\n\tsass('source/file.scss', {\n\t\t\tprecision: 6,\n\t\t\tstopOnError: true,\n\t\t\tcacheLocation: './',\n\t\t\tloadPath: [ 'library', '../../shared-components' ]\n\t\t})\n\t\t.on('error', sass.logError)\n\t\t.pipe(gulp.dest('result'))\n);\n```\n\n### sass.logError(err)\n\nConvenience function for pretty error logging.\n\n### sass.clearCache([tempDir])\n\nIn rare cases you may need to clear gulp-ruby-sass's cache. This sync function deletes all files used for Sass caching. If you've set a custom temporary directory in your task you must pass it to `clearCache`.\n\n\n## Issues\n\nThis plugin wraps the Sass gem for the gulp build system. It does not alter Sass's output in any way. Any issues with Sass output should be reported to the [Sass issue tracker](https://github.com/sass/sass/issues).\n\nBefore submitting an issue please read the [contributing guidelines](https://github.com/sindresorhus/gulp-ruby-sass/blob/master/contributing.md).\n\n\n## License\n\nMIT \xc2\xa9 [Sindre Sorhus](https://sindresorhus.com)\n"