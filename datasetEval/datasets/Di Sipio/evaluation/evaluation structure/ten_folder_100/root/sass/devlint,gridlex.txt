b'# Gridlex\n## Just a Flexbox Grid System\n\n[![Join the chat at https://gitter.im/devlint/gridlex](https://badges.gitter.im/devlint/gridlex.svg)](https://gitter.im/devlint/gridlex?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\nv. 2.7.1\n\n\nBased on Flexbox (CSS Flexible Box Layout Module), Gridlex is a very simple css grid system to quickly create modern layouts and submodules.\n\nThe concept is simple: you need to wrap your `.col` in a `.grid`.\n\n### What can we expect?\n- Basically each column is the same width as every other cell in the grid.\n- But you can add sizing classes to individual columns.\n- For responsive designs, you can add classes based on media-queries.\n- Top, bottom, or middle. For the grid. And for the columns.\n- Grids can be nested. Always. Directly in a column.\n\n### Sass, CSS?\n\n**I just wanna use it in my page!**\n\nTo use Gridlex out of the box, call the gridlex.min.css file in your project :\n\nVia CDN:\n```html\n<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/gridlex/2.7.1/gridlex.min.css">\n```\nor\n```html\n<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/gridlex@2.7.1/dist/gridlex.min.css" integrity="sha256-z8OrWCce0gDjwavCHKqxiPIo74u8go25fRiqW6jefXk=" crossorigin="anonymous">\n```\n[![](https://data.jsdelivr.com/v1/package/npm/gridlex/badge)](https://www.jsdelivr.com/package/npm/gridlex)\n\n**I want to include it in my source files!**\n\nJust include gridlex/src/gridlex.scss \nand \nupdate the $gl- vars:\n<table>\n    <thead>\n    <tr>\n        <th>Variable names</th>\n        <th>Default value</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n        <td><code>$gl-colCount:</code></td>\n        <td><code>12</code></td>\n    </tr>\n    <tr>\n        <td><code>$gl-gridName:</code></td>\n        <td><code>grid</code></td>\n    </tr>\n    <tr>\n        <td><code>$gl-colName:</code></td>\n        <td><code>col</code></td>\n    </tr>\n    <tr>\n        <td><code>$gl-attributeName:</code></td>\n        <td><code>class</code></td>\n    </tr>\n    <tr>\n        <td><code>$gl-gutter:</code></td>\n        <td><code>1rem</code></td>\n    </tr>\n    <tr>\n        <td><code>$gl-gutter-vertical:</code></td>\n        <td><code>1rem</code></td>\n    </tr>\n    <tr>\n        <td><code>$gl-mq-width:</code></td>\n        <td><code>\'max-width\'</code></td>\n    </tr>\n    <tr>\n        <td><code>$gl-mq-list:</code></td>\n        <td><pre><code>(\n         lg: 80em, // max 1280px\n         md: 64em, // max 1024px\n         sm: 48em, // max 768px\n         xs: 36em // up to 576px\n )</code></pre></td>\n    </tr>\n    </tbody>\n</table>\n\n### Install via Npm\nnpm install gridlex --save\n\n### Install via Bower\nbower install gridlex --save\n\n\n### 3 ways to use Gridlex\n**1- The basic. Just add a class `.grid-*` (from -1 to -12)**\n```html\n<div class="grid-1">\n\t<div class="col">...</div>\n</div>\n```\n\n**2- The precise. Compose cell by cell (with class like `.col-*`)**\n```html\n<div class="grid">\n\t<div class="col-12">...</div>\n</div>\n```\n\n**3- The automatic. Just add number of cells you want in the grid (`.grid > .col`)**\n```html\n<div class="grid">\n\t\t<div class="col">...</div>\n\t\t<div class="col">...</div>\n</div>\n```\n\n### Gridlex and media-queries\nBecause of responsive, you sometimes need to change the size of columns: with this keys as classes you can control your layout by media-queries.\n\nColumns can be hidden at breakpoints using `_*-0` (e.g. `col-4_md-6_sm-0`)\n<table>\n<thead>\n\t<tr>\n\t\t<th>CSS Media Query</th>\n\t\t<th>Applies</th>\n\t\t<th>Usage</th>\n\t</tr>\n</thead>\n<tbody>\n\t<tr>\n\t\t<td><code>@media screen and (max-width: 36rem)</code></td>\n\t\t<td>Max 576px</td>\n\t\t<td><code><b>_xs</b>-*</code></td>\n\t</tr>\n\t<tr>\n\t\t<td><code>@media screen and (max-width: 48em)</code></td>\n\t\t<td>Max 768px</td>\n\t\t<td><code><b>_sm</b>-*</code></td>\n\t</tr>\n\t<tr>\n\t\t<td><code>@media screen and (max-width: 64em)</code></td>\n\t\t<td>Max 1024px</td>\n\t\t<td><code><b>_md</b>-*</code></td>\n\t</tr>\n\t<tr>\n\t\t<td><code>@media screen and (max-width: 80em)</code></td>\n\t\t<td>Max 1280px</td>\n\t\t<td><code><b>_lg</b>-*</code></td>\n\t</tr>\n</tbody>\n</table>\n\nSee more : http://gridlex.devlint.fr\n'