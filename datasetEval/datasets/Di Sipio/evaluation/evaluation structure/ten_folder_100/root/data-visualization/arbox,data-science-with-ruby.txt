b'<img src="header.png" align="center">\n\n[[RubyNLP](https://github.com/arbox/nlp-with-ruby) |\n [RubyML](https://github.com/arbox/machine-learning-with-ruby) |\n [RubyInterop](https://github.com/arbox/ruby-interoperability)]\n\n\n# Awesome Data Science with Ruby [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\n> Links and Resources for Data Processing and Analysis in Ruby\n\n[Data Science](https://en.wikipedia.org/wiki/Data_science) is a new\n"sexy" buzzword without specific meaning but often used to substitute\nStatistics, Scientific Computing, Text and Data Mining and\nVisualization, Machine Learning, Data Processing and Warehousing as\nwell as Retrieval Algorithms of any kind.\n\nThis curated list comprises [_awesome_][awesome] tutorials, libraries,\ninformation sources about various Data Science applications using\nthe [Ruby programming language][ruby].\n\nA lot of useful resources on this list come from the development by\n[The Ruby Science Foundation][sciruby], our [contributors][contributors] and\nour own day to day work on various data intensive applications.\nRead [why](#wait-but-why) this list is awesome.\n\n:sparkles: Every [contribution](contributing.md) is welcome!\nAdd links through pull requests or create an issue to start a discussion.\n\nFollow us on [Twitter](https://twitter.com/NonWebRuby)\nand please spread the word using the `#RubyDataScience` hash tag!\n\n<!-- nodoc -->\n\n## Contents\n\n<!-- toc -->\n\n- [Ruby vs. Python vs. Julia vs. R](#ruby-vs-python-vs-julia-vs-r)\n- [Standing on the shoulders of giants](#standing-on-the-shoulders-of-giants)\n- [Data Manipulation](#data-manipulation)\n- [Distributed Computing](#distributed-computing)\n- [Data Structures](#data-structures)\n- [Data sets](#data-sets)\n- [Statistics](#statistics)\n- [Numeric and Symbolic Computation](#numeric-and-symbolic-computation)\n- [Visualization](#visualization)\n- [Interactive Computing](#interactive-computing)\n- [Input and Output](#input-and-output)\n  * [General formats](#general-formats)\n  * [Database Adapters](#database-adapters)\n  * [Domain specific formats](#domain-specific-formats)\n- [Provisioning Infrastructure](#provisioning-infrastructure)\n- [Machine Learning](#machine-learning)\n- [Articles, Posts, Talks, and Presentations](#articles-posts-talks-and-presentations)\n- [Related resources](#related-resources)\n- [Wait but why?](#wait-but-why)\n- [License](#license)\n\n<!-- tocstop -->\n\n<!-- doc -->\n\n## Ruby vs. Python vs. Julia vs. R\n\n| Ruby   | Python | Julia | R   |\n| ---    | ---    | ---   | --- |\n| Daru   | Pandas |       |     |\n| NArray | NumPy  |       |     |\n\n## Standing on the shoulders of giants\n\nRuby is (for now) not a Data Science centric language with a very large established library.\nLeveraging libraries from R, Python, and Julia helps Ruby to solve your tasks!\n<!--- TODO: Add the talk by @mrkn --->\n\n- [pycall](https://github.com/mrkn/pycall.rb) &mdash; Bridge into the Python world.\n- [rserve-client](https://github.com/clbustos/Rserve-Ruby-client) &mdash;\n  Ruby connector for [Rserve](http://www.rforge.net/Rserve/), R\'s binary server.\n\n## Data Manipulation\n\n- [kiba](https://github.com/thbar/kiba/) &mdash;\n  lightweight Ruby ETL (Extract-Transform-Load) framework.\n- [jongleur](https://gitlab.com/RedFred7/Jongleur) &mdash;\n  Workflow manager using DAG definitions to execute ETL tasks.\n\n## Distributed Computing\n\n- [ruby-spark](https://github.com/ondra-m/ruby-spark) &mdash;\n  Ruby Interface to [Apache Spark](https://spark.apache.org/) 1.x.x.\n- [jruby-spark](https://github.com/chyh1990/jruby-spark) &mdash;\n  JRuby based bindings for [Apache Spark](https://spark.apache.org/).\n\n## Data Structures\n\n- [daru](https://github.com/SciRuby/daru) &mdash;\n  Data Frame and Vector structures with comprehensive manipulating and visualization methods.\n- [numo-narray](https://github.com/ruby-numo/numo-narray) &mdash;\n  n-dimensional Numerical Array for Ruby.\n- [nmatrix](https://github.com/sciruby/nmatrix) &mdash;\n  dense and sparse linear algebra library for Ruby via [SciRuby](http://sciruby.com/).\n- [kdtree](https://github.com/gurgeous/kdtree) &mdash;\n  blazingly fast native 2d k-d tree.\n- [mdarray](https://github.com/rbotafogo/mdarray) &mdash;\n  Array structure for `JRuby`.\n- [spreadsheet](https://github.com/zdavatz/spreadsheet) &mdash;\n  manipulation library for MS Excel spreadsheets.\n- [networkx](https://github.com/SciRuby/networkx.rb) &mdash;\n  Ruby based [NetworkX](https://networkx.github.io/) clone that handles various\n  usecases of the Graph Data Structure.\n- [cumo](https://github.com/sonots/cumo) &mdash;\n  CUDA-aware numerical Array library with [NArray](https://github.com/ruby-numo/numo-narray) similar interface.\n\n## Data sets\n\n- [rdatasets](https://github.com/kojix2/rdatasets) &mdash;\n  Data sets available in R via [Rdatasets](https://github.com/vincentarelbundock/Rdatasets).\n- [red-datasets](https://github.com/red-data-tools/red-datasets) &mdash;\n  Growing collection of publicly available data sets such as CIFAR-10, Iris, MNIST etc.\n\n## Statistics\n\n- [rb-gsl](https://github.com/blackwinter/rb-gsl) &mdash;\n  Ruby interface to the GNU Scientific Library. <sup>[[dep: GLS](#gls)]</sup>\n- [simple_stats](https://github.com/brianhempel/simple_stats) &mdash;\n  `Enumerable` patches for descriptive statistics.\n- [enumerable-statistics](https://github.com/mrkn/enumerable-statistics) &mdash;\n  fast implementation of descriptive statistics for the `Enumerable` module.\n- [statsample](https://github.com/sciruby/statsample) &mdash;\n  basic and advanced statistics for Ruby. <sup>[[dep: GLS](#gls)]</sup>\n- [statsample-glm](https://github.com/sciruby/statsample-glm) &mdash;\n  extension of `statsample` by Generalized Linear Models.\n- [statsample-bivariate-extension](https://github.com/sciruby/statsample-bivariate-extension) &mdash;\n  extension of `statsample` by Bivariate Correlations.\n- [statsample-timeseries](https://github.com/sciruby/statsample-timeseries) &mdash;\n  extension of `statsample` by Time Series estimators.\n- [pca](https://github.com/gbuesing/pca) &mdash;\n  Principal Component Analysis (PCA) in Ruby.\n- [descriptive-statistics](https://github.com/jtescher/descriptive-statistics) &mdash;\n  descriptive extensions for the `Enumerable` module or standalone usage.\n- [distribution](https://github.com/sciruby/distribution) &mdash;\n  probabilistic distributions and descriptive measures for them.\n- [statistics2](https://github.com/abscondment/statistics2) &mdash;\n  Normal, Chi-square, t- and F- probability distributions for Ruby.\n\n## Numeric and Symbolic Computation\n\n- [numo-linalg](https://github.com/ruby-numo/numo-linalg) &mdash;\n  linear algebraic operations for NArray.\n- [numo-gsl](https://github.com/ruby-numo/numo-gsl) &mdash;\n  Math and Statistics for NArray using GSL.<sup>[[dep: GSL](#gsl)]</sup>\n- [symengine](https://github.com/symengine/symengine.rb) &mdash;\n  Symbolic Computation with [SymEngine](https://github.com/symengine/symengine).\n- [numo-ffte](https://github.com/ruby-numo/numo-ffte) &mdash;\n  Fast Fourier Transformation for NArray using the FFTE package.<sup>[[FFTE](#ffte)]</sup>\n\n## Visualization\n\nComprehensive tools for Data Visualization.\n\n- [matplotlib](https://github.com/mrkn/matplotlib.rb) &mdash;\n  Ruby based wrapper around [matplotlib](https://matplotlib.org/).\n  <sup>[[dep: matplotlib](#matplotlib)]</sup>\n- [mathematical](https://github.com/gjtorikian/mathematical) &mdash;\n  PNG and MathML renderings for your equations.\n- [daru-view](https://github.com/sciruby/daru-view) &mdash;\n  daru-view is interactive plotting gem for web application\n  (any Ruby web application framework like Rails/Sinatra/Nanoc/Hanami) & IRuby notebook. \n  It is a plugin gem for daru.\n- [daru-plotly](https://github.com/genya0407/daru-plotly) &mdash;\n  [Plotly](https://plot.ly/) based visualization for Daru.\n- https://github.com/v0dro/benchmark-plot\n- https://github.com/domitry/Nyaplotjs\n- https://github.com/domitry/nyaplot\n- https://github.com/SciRuby/gnuplotrb\n- [ruby-graphviz](https://github.com/glejeune/Ruby-Graphviz)\n  <sup>[[dep: Graphviz](#graphviz)]</sup>\n- [gnuplot](https://github.com/rdp/ruby_gnuplot/tree/master)\n  <sup>[[dep: gnuplot](#gnuplot)]</sup>\n- https://github.com/zuhao/plotrb\n- https://github.com/brasten/scruffy\n- https://github.com/zverok/worldize\n- https://github.com/masa16/ruby-mathgl\n- [numo-gnuplot](https://github.com/ruby-numo/numo-gnuplot) &mdash;\n  gnuplot interface for the Numo package.\n\n## Interactive Computing\n\n- [iruby](https://github.com/sciruby/iruby) &mdash;\n  Ruby kernel for [Jupyter](https://jupyter.org/).\n- [iruby-rails](https://github.com/mrkn/iruby-rails) &mdash;\n  Integration library for IRuby and Rails.\n\n## Input and Output\n\n### General formats\n\n- https://github.com/fiksu/rcsv\n- [ox](https://github.com/ohler55/ox) &mdash;\n  Optimized for speed XML parser and object marshaller.\n- [oj](https://github.com/ohler55/oj) &mdash;\n  High-speed JSON parser.\n- Markdown\n- Nokogiri\n- CSV\n\n### Database Adapters\n\n- pg\n- Mongo\n- MySQL\n\n### Domain specific formats\n\n- BibTeX\n- [inih](https://github.com/woodruffw/ruby-inih) &mdash; fast C based INI parser for Ruby.\n- [bolognese](https://github.com/datacite/bolognese) &mdash;\n  conversion tool for citation formats like BibTeX, RIS, or Crossref XML.\n\n\n## Provisioning Infrastructure\n\n- https://github.com/mrkn/gpu-instance\n- https://github.com/mrkn/computing_node\n- https://github.com/k1LoW/awspec\n\n## Machine Learning\n\nPlease look at our extensive [Awesome ML with Ruby][ml-with-ruby] list.\n\n## Articles, Posts, Talks, and Presentations\n\n- 2019\n  - _Parallelising ETL workflows with the Jongleur gem_ by [Fred Heath](https://github.com/RedFred7)\n  <sup>[[post](http://bootstrap.me.uk/gems/2019/01/06/jongleur-etl.html)]</sup>\n- 2018\n- 2017\n  - _Progress of Ruby-Numo: Numerical Computing for Ruby_ by [Masahiro Tanaka](https://github.com/masa16)\n    <sup>[[slides](https://speakerdeck.com/masa16tanaka/progress-of-ruby-numo-numerical-computing-for-ruby)]</sup>\n  - _Chartkick: data visualization made easy with Ruby_ by [Govind Unnikrishnan](https://twitter.com/govind_k_u)\n    <sup>[[post](https://blog.redpanthers.co/chartkick-data-visualization-easy-ruby/)]</sup>\n  - _Development of Data Science Ecosystem for Ruby_ by [Kenta Murata](https://twitter.com/mrkn)\n    <sup>[[slides](https://speakerdeck.com/mrkn/development-of-data-science-ecosystem-for-ruby) |\n          [video](https://www.youtube.com/watch?v=U9GdgZowmGY) |\n          [page](https://rubykaigi.org/2017/presentations/mrkn.html)]</sup>\n- 2016\n  - _Scientific Computation and Data Visualization with Ruby_ by [Sameer Deshmukh](https://twitter.com/v0dro)\n    <sup>[[slides](https://www.slideshare.net/SrijanOne/webinar-scientific-computation-and-data-visualization-with-ruby) |\n          [video](https://www.youtube.com/watch?v=5970kC6MfBE)]</sup>\n- 2015\n- 2014\n- 2013\n  - _Seeing the Big Picture: Quick and Dirty Data Visualization with Ruby_ by [Aja Hammerly](https://twitter.com/the_thagomizer)\n    <sup>[[video](https://www.youtube.com/watch?v=dWPRLCU39AU) |\n          [slides](http://www.thagomizer.com/files/dataviz_windy_city_13.pdf) |\n          [code](https://github.com/thagomizer/data_visualization_talk)]</sup>\n- 2012\n- 2011\n- 2010\n  - _NArray and scientific computing with Ruby_ by [Masahiro Tanaka](https://twitter.com/masa16tanaka)\n    <sup>[[video](https://vimeo.com/14823720) |\n          [slides](https://www.slideshare.net/masa16tanaka/narray-and-scientific-computing-with-ruby)]</sup>\n\n## Community\n\n- https://gitter.im/red-data-tools/en\n- https://gitter.im/red-data-tools/ja\n- http://ruby-data.org/\n- https://twitter.com/RubyData\n- https://discourse.ruby-data.org/\n\n## Related resources\n\n- [Awesome Data Science with Python](https://github.com/r0f1/datascience)\n- <a name="imagemagic"></a>\n  [ImageMagick](https://imagemagick.org/index.php)\n- <a name="gsl"></a>\n  [GSL](https://www.gnu.org/software/gsl/)\n- <a name="ffte"></a>\n  [FFTE](http://www.ffte.jp/)\n- <a name="symengine"></a>\n  [SymEngine](https://github.com/symengine/symengine)\n- [Awesome Big Data](https://github.com/onurakpolat/awesome-bigdata#data-visualization) -\n  awesome curated list on all around Big Data.\n- [Awesome Spark](https://github.com/awesome-spark/awesome-spark) &mdash;\n  awesome list on Apache Spark goodies.\n\n## Wait but why?\n\nThere are a lot of software lists with tools related to the Data Science.\nThere are a couple of lists with Ruby related projects. There are no lists of\nonly working and tested software with documented scope. We\'ll try to make one!\n\nWhat is awesome? Awesome are documented, maintained and focused tools.\n\nCan something turn not awesome at a point? Yes! Abandoned projects with broken\ndependencies aren\'t awesome any more! They leave this list.\n\n## License\n\n[![Creative Commons Zero 1.0](http://mirrors.creativecommons.org/presskit/buttons/80x15/svg/cc-zero.svg)](https://creativecommons.org/publicdomain/zero/1.0/) `Awesome Data Science with Ruby` by [Andrei Beliankou](https://github.com/arbox) and\n[Contributors][contributors].\n\nTo the extent possible under law, the person who associated CC0 with\n`Awesome Data Science with Ruby` has waived all copyright and related or neighboring rights\nto `Awesome Data Science with Ruby`.\n\nYou should have received a copy of the CC0 legalcode along with this\nwork. If not, see <https://creativecommons.org/publicdomain/zero/1.0/>.\n\n<!--- Links --->\n[ruby]: https://www.ruby-lang.org/en/\n[ml-with-ruby]: https://github.com/arbox/machine-learning-with-ruby\n[awesome]: https://github.com/sindresorhus/awesome/blob/master/awesome.md\n[change-pr]: https://github.com/RichardLitt/knowledge/blob/master/github/amending-a-commit-guide.md\n[sciruby]: https://github.com/sciruby\n[contributors]: https://github.com/arbox/data-science-with-ruby/graphs/contributors\n'