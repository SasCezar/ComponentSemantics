b'# SQLPad\n\n[![Build Status](https://travis-ci.org/rickbergfalk/sqlpad.svg?branch=master)](https://travis-ci.org/rickbergfalk/sqlpad)\n\nA web app for writing and running SQL queries and visualizing the results. Supports Postgres, MySQL, SQL Server, Crate, Vertica, Presto, and SAP HANA. Other databases potentially supported via [unix odbc support](https://github.com/rickbergfalk/sqlpad/wiki/ODBC).\n\n![SQLPad Query Editor](https://rickbergfalk.github.io/sqlpad/images/screenshots/v3-beta.png)\n\n## Docker Image\n\nThe docker image runs on port 3000 and uses `/var/lib/sqlpad` for the embedded database directory.\n\n`latest` tag is continously built from latest commit in repo. Use specific version tags to ensure stability.\n\nFor configuration exposed via environment variables reference [CONFIGURATION.md](https://github.com/rickbergfalk/sqlpad/blob/master/CONFIGURATION.md).\n\nSee [docker-examples](https://github.com/rickbergfalk/sqlpad/tree/master/docker-examples) directory for example docker-compose setup with SQL Server.\n\n## Building\n\n- Install node 10 or later\n- Clone/download this repo\n- Install dependencies and build the UI\n\n  ```sh\n  scripts/build.sh\n  ```\n\n  The gist of this script is:\n\n  ```sh\n  # install root level dependencies using package-lock.json as reference\n  npm ci\n  # install front-end dependencies using package-lock.json\n  cd client\n  npm ci\n  # build front-end\n  npm run build\n  # install back-end dependencies\n  cd ../server\n  npm ci\n  cd ..\n  # copy client build to server directory\n  mkdir server/public\n  cp -r client/build/* server/public\n  ```\n\nAt this point you can run the SQLPad server with the front-end built for production use:\n\n```sh\ncd server\nnode server.js --dbPath ../db --port 3010\n```\n\nIf prefered, SQLPad can be installed as a global module using the local files in this repo. This allows running SQLPad via the cli in any directory, just as if you had installed it with `npm install sqlpad -g`. Note that you must build and copy the client prior to this step.\n\n```sh\ncd server\nnode install -g\n\n# Now from somewhere else you can run sqlpad like\ncd ~\nsqlpad --dbPath ../db --port 3010\n```\n\nA docker image may be built using the Dockerfile located in `server` directory. See `docker-publish.sh` for example docker build command.\n\n## Development\n\n[Developer guide](DEVELOPER-GUIDE.md)\n\n## Configuration\n\nSQLPad may be configured via environment variables, config file, or command line flags.\n\nConfig file path may be specified passing command line option `--config` or environment variable `SQLPAD_CONFIG`.\nFor example:\n\n```sh\nnode server.js --config ~/.sqlpadrc\n```\n\nFor INI and JSON config file examples, see `config-example.ini` and `config-example.json` in GitHub repository.\n\n### Version 3 changes\n\nPreviously SQLPad supported a default dbPath of `$HOME/sqlpad/db` and a default config file path of `$HOME/.sqlpadrc`.\n\nThese defaults have been removed in version 3.\n\n### Config variables\n\n**admin**  \nEmail address to whitelist/give admin permissions to  \nEnv var: `SQLPAD_ADMIN`\n\n**adminPassword**\nPassword to set for admin email address on application start. Requires `admin` setting to also be provided.\nEnv var: `SQLPAD_ADMIN_PASSWORD`\n\n**allowCsvDownload**  \nEnable csv and xlsx downloads.  \nEnv var: `SQLPAD_ALLOW_CSV_DOWNLOAD`  \nDefault: `true`\n\n**baseUrl**  \nPath to mount sqlpad app following domain. Example, if \'/sqlpad\' is provided queries page would be mydomain.com/sqlpad/queries  \nEnv var: `SQLPAD_BASE_URL`\n\n**certPassphrase**  \nPassphrase for your SSL certification file  \nEnv var: `CERT_PASSPHRASE`\n\n**certPath**  \nAbsolute path to where SSL certificate is stored  \nEnv var: `CERT_PATH`\n\n**cookieName**\nName used for cookie. If running multiple SQLPads on same domain, set to different values.\nEnv var: `SQLPAD_COOKIE_NAME`\nDefault: `sqlpad.sid`\n\n**cookieSecret**  \nSecret used to sign cookies  \nEnv var: `SQLPAD_COOKIE_SECRET`  \nDefault: `secret-used-to-sign-cookies-please-set-and-make-strong`\n\n**dbPath**  \nDirectory to store SQLPad embedded database content. This includes queries, users, query result cache files, etc.  \nEnv var: `SQLPAD_DB_PATH`\n\n**debug**  \nAdd a variety of logging to console while running SQLPad  \nEnv var: `SQLPAD_DEBUG`\n\n**disableUserpassAuth**  \nSet to TRUE to disable built-in user authentication. Use to restrict auth to OAuth only.  \nEnv var: `DISABLE_USERPASS_AUTH`\n\n**editorWordWrap**  \nEnable word wrapping in SQL editor.  \nEnv var: `SQLPAD_EDITOR_WORD_WRAP`\n\n**googleClientId**  \nGoogle Client ID used for OAuth setup. Authorized redirect URI for sqlpad is \'[baseurl]/auth/google/callback\'  \nEnv var: `GOOGLE_CLIENT_ID`\n\n**googleClientSecret**  \nGoogle Client Secret used for OAuth setup. Authorized redirect URI for sqlpad is \'[baseurl]/auth/google/callback\'  \nEnv var: `GOOGLE_CLIENT_SECRET`\n\n**httpsPort**  \nPort for SQLPad to listen on.  \nEnv var: `SQLPAD_HTTPS_PORT`  \nDefault: `443`\n\n**ip**  \nIP address to bind to. By default SQLPad will listen from all available addresses (0.0.0.0).  \nEnv var: `SQLPAD_IP`  \nDefault: `0.0.0.0`\n\n**keyPath**  \nAbsolute path to where SSL certificate key is stored  \nEnv var: `KEY_PATH`\n\n**passphrase**  \nA string of text used to encrypt sensitive values when stored on disk.  \nEnv var: `SQLPAD_PASSPHRASE`  \nDefault: `At least the sensitive bits won\'t be plain text?`\n\n**port**  \nPort for SQLPad to listen on.  \nEnv var: `SQLPAD_PORT`  \nDefault: `80`\n\n**publicUrl**  \nPublic URL used for OAuth setup and email links. Protocol expected. Example: https://mysqlpad.com  \nEnv var: `PUBLIC_URL`\n\n**queryResultMaxRows**  \nBy default query results are limited to 50,000 records.  \nEnv var: `SQLPAD_QUERY_RESULT_MAX_ROWS`  \nDefault: `50000`\n\n**samlAuthContext**  \nSAML authentication context URL  \nEnv var: `SAML_AUTH_CONTEXT`\n\n**samlCallbackUrl**  \nSAML callback URL  \nEnv var: `SAML_CALLBACK_URL`\n\n**samlCert**  \nSAML certificate in Base64  \nEnv var: `SAML_CERT`\n\n**samlEntryPoint**  \nSAML Entry point URL  \nEnv var: `SAML_ENTRY_POINT`\n\n**samlIssuer**  \nSAML Issuer  \nEnv var: `SAML_ISSUER`\n\n**sessionMinutes**  \nMinutes to keep a session active. Will extended by this amount each request.  \nEnv var: `SQLPAD_SESSION_MINUTES`  \nDefault: `60`\n\n**slackWebhook**  \nSupply incoming Slack webhook URL to post query when saved.  \nEnv var: `SQLPAD_SLACK_WEBHOOK`\n\n**smtpFrom**  \nFrom email address for SMTP. Required in order to send invitation emails.  \nEnv var: `SQLPAD_SMTP_FROM`\n\n**smtpHost**  \nHost address for SMTP. Required in order to send invitation emails.  \nEnv var: `SQLPAD_SMTP_HOST`\n\n**smtpPassword**  \nPassword for SMTP.  \nEnv var: `SQLPAD_SMTP_PASSWORD`\n\n**smtpPort**  \nPort for SMTP. Required in order to send invitation emails.  \nEnv var: `SQLPAD_SMTP_PORT`\n\n**smtpSecure**  \nToggle to use secure connection when using SMTP.  \nEnv var: `SQLPAD_SMTP_SECURE`  \nDefault: `true`\n\n**smtpUser**  \nUsername for SMTP. Required in order to send invitation emails.  \nEnv var: `SQLPAD_SMTP_USER`\n\n**systemdSocket**  \nAcquire socket from systemd if available  \nEnv var: `SQLPAD_SYSTEMD_SOCKET`\n\n**tableChartLinksRequireAuth**  \nWhen false, table and chart result links will be operational without login.  \nEnv var: `SQLPAD_TABLE_CHART_LINKS_REQUIRE_AUTH`  \nDefault: `true`\n\n**timeoutSeconds**  \nHTTP server timeout as number of seconds. Extend as necessary for long running queries.\nEnv var: `SQLPAD_TIMEOUT_SECONDS`  \nDefault: `300`\n\n**whitelistedDomains**  \nAllows pre-approval of email domains. Delimit multiple domains by empty space.  \nEnv var: `WHITELISTED_DOMAINS`\n\n### Connection configuration\n\nAs of 3.2.0 connections may be defined via application configuration.\n\nEvery connection defined should provide a `name` and `driver` value, with driver equaling the value in header parentheses below. `name` will be the label used in the UI to label the connection.\n\nField names and values are case sensitive.\n\nThe connection ID value used can be any alphanumeric value, and is case-sensitive. This can be a randomly generated value like SQLPad\'s underlying embedded database uses, or it can be a more human-friendly name, or an id used from another source.\n\nHow connections are defined in configuration depends on the source of the configuration.\n\n#### Environment variable\n\nWhen using environment variables, connection field values must be provided using an environment variable with the convention `SQLPAD_CONNECTIONS__<connectionId>__<fieldName>`. Note double underscores between `SQLPAD_CONNECTIONS`, `<connectionId>`, and `<fieldName>`. Both connection ID and field name values are case sensitive. Boolean values should be the value `true` or `false`.\n\nExample for a MySQL connection with id `prod123`.\n\n```sh\nSQLPAD_CONNECTIONS__prod123__name="Production 123"\nSQLPAD_CONNECTIONS__prod123__driver=mysql\nSQLPAD_CONNECTIONS__prod123__host=localhost\nSQLPAD_CONNECTIONS__prod123__mysqlInsecureAuth=true\n```\n\n#### INI file\n\nWhen defining a connection in an INI file, use section header with the value `connections.<connectionId>`.\n\n```ini\n[connections.prod123]\nname = Production 123\ndriver = mysql\nhost = localhost\nmysqlInsecureAuth = true\n```\n\n#### JSON file\n\nWhen using JSON file, provide `<connectionId>` as a key under `connections`.\n\n```json\n{\n  "connections": {\n    "prod123": {\n      "name": "Production 123",\n      "driver": "mysql",\n      "host": "localhost",\n      "mysqlInsecureAuth": true\n    }\n  }\n}\n```\n\n#### CrateDB (crate)\n\n<table>\n  <thead>\n    <tr>\n      <th>key</th>\n      <th>description</th>\n      <th>data type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr><td>name</td><td>Name of connection</td><td>text</td></tr>\n    <tr><td>driver</td><td>Must be <code>crate</code></td><td>text</td></tr>\n    <tr><td>host</td><td>Host/Server/IP Address</td><td>text</td></tr>\n    <tr><td>port</td><td>Port (optional)</td><td>text</td></tr>\n  </tbody>\n</table>\n\n#### Apache Drill (drill)\n\n<table>\n  <thead>\n    <tr>\n      <th>key</th>\n      <th>description</th>\n      <th>data type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr><td>name</td><td>Name of connection</td><td>text</td></tr>\n    <tr><td>driver</td><td>Must be <code>drill</code></td><td>text</td></tr>\n    <tr><td>host</td><td>Host/Server/IP Address</td><td>text</td></tr>\n    <tr><td>port</td><td>Port (optional)</td><td>text</td></tr>\n    <tr><td>username</td><td>Database Username</td><td>text</td></tr>\n    <tr><td>password</td><td>Database Password</td><td>text</td></tr>\n    <tr><td>drillDefaultSchema</td><td>Default Schema</td><td>text</td></tr>\n    <tr><td>ssl</td><td>Use SSL to connect to Drill</td><td>boolean</td></tr>\n  </tbody>\n</table>\n\n#### SAP Hana (hdb)\n\n<table>\n  <thead>\n    <tr>\n      <th>key</th>\n      <th>description</th>\n      <th>data type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr><td>name</td><td>Name of connection</td><td>text</td></tr>\n    <tr><td>driver</td><td>Must be <code>hdb</code></td><td>text</td></tr>\n    <tr><td>host</td><td>Host/Server/IP Address</td><td>text</td></tr>\n    <tr><td>hanaport</td><td>Port (e.g. 39015)</td><td>text</td></tr>\n    <tr><td>username</td><td>Database Username</td><td>text</td></tr>\n    <tr><td>password</td><td>Database Password</td><td>text</td></tr>\n    <tr><td>hanadatabase</td><td>Tenant</td><td>text</td></tr>\n    <tr><td>hanaSchema</td><td>Schema (optional)</td><td>text</td></tr>\n  </tbody>\n</table>\n\n#### MySQL (mysql)\n\n<table>\n  <thead>\n    <tr>\n      <th>key</th>\n      <th>description</th>\n      <th>data type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr><td>name</td><td>Name of connection</td><td>text</td></tr>\n    <tr><td>driver</td><td>Must be <code>mysql</code></td><td>text</td></tr>\n    <tr><td>host</td><td>Host/Server/IP Address</td><td>text</td></tr>\n    <tr><td>port</td><td>Port (optional)</td><td>text</td></tr>\n    <tr><td>database</td><td>Database</td><td>text</td></tr>\n    <tr><td>username</td><td>Database Username</td><td>text</td></tr>\n    <tr><td>password</td><td>Database Password</td><td>text</td></tr>\n    <tr><td>mysqlInsecureAuth</td><td>Use old/insecure pre 4.1 Auth System</td><td>boolean</td></tr>\n  </tbody>\n</table>\n\n#### PostgreSQL (postgres)\n\n<table>\n  <thead>\n    <tr>\n      <th>key</th>\n      <th>description</th>\n      <th>data type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr><td>name</td><td>Name of connection</td><td>text</td></tr>\n    <tr><td>driver</td><td>Must be <code>postgres</code></td><td>text</td></tr>\n    <tr><td>host</td><td>Host/Server/IP Address</td><td>text</td></tr>\n    <tr><td>port</td><td>Port (optional)</td><td>text</td></tr>\n    <tr><td>database</td><td>Database</td><td>text</td></tr>\n    <tr><td>username</td><td>Database Username</td><td>text</td></tr>\n    <tr><td>password</td><td>Database Password</td><td>text</td></tr>\n    <tr><td>postgresSsl</td><td>Use SSL</td><td>boolean</td></tr>\n    <tr><td>postgresCert</td><td>Database Certificate Path</td><td>text</td></tr>\n    <tr><td>postgresKey</td><td>Database Key Path</td><td>text</td></tr>\n    <tr><td>postgresCA</td><td>Database CA Path</td><td>text</td></tr>\n    <tr><td>useSocks</td><td>Connect through SOCKS proxy</td><td>boolean</td></tr>\n    <tr><td>socksHost</td><td>Proxy hostname</td><td>text</td></tr>\n    <tr><td>socksPort</td><td>Proxy port</td><td>text</td></tr>\n    <tr><td>socksUsername</td><td>Username for socks proxy</td><td>text</td></tr>\n    <tr><td>socksPassword</td><td>Password for socks proxy</td><td>text</td></tr>\n  </tbody>\n</table>\n\n#### PrestoDB (presto)\n\n<table>\n  <thead>\n    <tr>\n      <th>key</th>\n      <th>description</th>\n      <th>data type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr><td>name</td><td>Name of connection</td><td>text</td></tr>\n    <tr><td>driver</td><td>Must be <code>presto</code></td><td>text</td></tr>\n    <tr><td>host</td><td>Host/Server/IP Address</td><td>text</td></tr>\n    <tr><td>port</td><td>Port (optional)</td><td>text</td></tr>\n    <tr><td>username</td><td>Database Username</td><td>text</td></tr>\n    <tr><td>prestoCatalog</td><td>Catalog</td><td>text</td></tr>\n    <tr><td>prestoSchema</td><td>Schema</td><td>text</td></tr>\n  </tbody>\n</table>\n\n#### MS SQL Server (sqlserver)\n\n<table>\n  <thead>\n    <tr>\n      <th>key</th>\n      <th>description</th>\n      <th>data type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr><td>name</td><td>Name of connection</td><td>text</td></tr>\n    <tr><td>driver</td><td>Must be <code>sqlserver</code></td><td>text</td></tr>\n    <tr><td>host</td><td>Host/Server/IP Address</td><td>text</td></tr>\n    <tr><td>port</td><td>Port (optional)</td><td>text</td></tr>\n    <tr><td>database</td><td>Database</td><td>text</td></tr>\n    <tr><td>username</td><td>Database Username</td><td>text</td></tr>\n    <tr><td>password</td><td>Database Password</td><td>text</td></tr>\n    <tr><td>domain</td><td>Domain</td><td>text</td></tr>\n    <tr><td>sqlserverEncrypt</td><td>Encrypt (necessary for Azure)</td><td>boolean</td></tr>\n    <tr><td>sqlserverMultiSubnetFailover</td><td>MultiSubnetFailover</td><td>boolean</td></tr>\n  </tbody>\n</table>\n\n#### Vertica (vertica)\n\n<table>\n  <thead>\n    <tr>\n      <th>key</th>\n      <th>description</th>\n      <th>data type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr><td>name</td><td>Name of connection</td><td>text</td></tr>\n    <tr><td>driver</td><td>Must be <code>vertica</code></td><td>text</td></tr>\n    <tr><td>host</td><td>Host/Server/IP Address</td><td>text</td></tr>\n    <tr><td>port</td><td>Port (optional)</td><td>text</td></tr>\n    <tr><td>database</td><td>Database</td><td>text</td></tr>\n    <tr><td>username</td><td>Database Username</td><td>text</td></tr>\n    <tr><td>password</td><td>Database Password</td><td>text</td></tr>\n  </tbody>\n</table>\n\n#### Cassandra (cassandra)\n\n<table>\n  <thead>\n    <tr>\n      <th>key</th>\n      <th>description</th>\n      <th>data type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr><td>name</td><td>Name of connection</td><td>text</td></tr>\n    <tr><td>driver</td><td>Must be <code>cassandra</code></td><td>text</td></tr>\n    <tr><td>contactPoints</td><td>Contact points (comma delimited)</td><td>text</td></tr>\n    <tr><td>localDataCenter</td><td>Local data center</td><td>text</td></tr>\n    <tr><td>keyspace</td><td>Keyspace</td><td>text</td></tr>\n  </tbody>\n</table>\n\n## License\n\nMIT\n'