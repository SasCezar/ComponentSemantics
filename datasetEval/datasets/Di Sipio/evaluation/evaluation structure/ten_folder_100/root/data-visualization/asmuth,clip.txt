b'# clip\n\nclip (the _command line illustration processor_) is an open-source command line\nprogram and software library for creating charts and other data-driven\nillustrations.\n\nIn essence, clip consists of a library of composable graphical \'elements\'. This\nelement library includes high-level building blocks for creating common chart types\nas well as lower-level drawing primitives such as markers, arrows and lines. Users\ncreate custom illustrations by combining and styling these elements.\n\nWhen called from the command line, clip reads input data in text and CSV format\nand produces the output chart as a SVG or PNG file. Additionaly, clip is available\nas the libclip software library which can be embedded into any application that\nsupports a C FFI.\n\n\n<h4>\n  <a href="https://clip-lang.org/getting-started">Getting Started</a> &middot;\n  <a href="https://clip-lang.org/examples">Examples</a> &middot;\n  <a href="https://clip-lang.org">Documentation</a>\n</h4>\n\n\nExample\n-------\n\nBeing a highly visual tool, clip is best explained by example. So here is how to\ndraw a simple line chart using clip:\n\n    $ clip --in example_chart.clp --out example_chart.svg\n\nOutput File (`example_chart.svg`):\n[![A simple scatterplot](/examples/charts-basic/demo_timeseries.svg)](https://clip-lang.org/examples/charts-basic/demo_timeseries)\n\nInput File (`example_chart.clp`):\n\n    (plot\n      axes (bottom left)\n      axis-y-label-format (scientific)\n      axis-x-label-format (datetime "%H:%M:%S")\n      axis-x-label-placement (linear-align 1800)\n      lines (\n        data-x (csv "tests/testdata/measurement.csv" time)\n        data-y (csv "tests/testdata/measurement.csv" value1)\n        color #06c))\n\nNote that this example is only intended to give you an idea of what the syntax\nlooks like and to get you started quickly; for an in-depth description of all\nparameters, please refer to [the documentation](https://clip-lang.org).\n\nMore examples can be found on [the examples page](https://clip-lang.org/examples).\n\nIf you have any questions please don\'t hesitate to reach out via [GitHub issues](https://github.com/asmuth/clip).\n\n\nDocumentation\n-------------\n\nYou can find the full documentation at https://clip-lang.org/\n\n\nExample Gallery\n---------------\n\nA list of examples can be found on the [Examples](https://clip-lang.org/examples)\npage.\n\n\nBuilding\n--------\n\nTo build clip, you need an up-to-date C++ compiler, cmake, fmtlib, libharfbuzz,\nlibfreetype and cairo. Run:\n\n    $ cmake .\n    $ make -j $(($(nproc)/2)) # for linux users, or\n    $ make -j $(($(sysctl -n hw.ncpu)/2)) # for mac users \n\nTo install the `clip` binary into your system, run `make install`:\n\n    $ make install\n\nTo run the test suite, run `make test`:\n\n    $ make test\n\n\nFor detailed installation instructions, have a look at the [Installation](https://clip-lang.org/documentation/installation/)\npage.\n\n\nAcknowledgements\n----------------\n\n  - The structure of the plot elements is based on ideas from [The Grammar of\n    Graphics](https://www.springer.com/gp/book/9780387245447) and the\n    [ggplot2](https://ggplot2.tidyverse.org/) library.\n\n  - A number of concepts in clip are heavily guided by the\n    [CSS specification](https://www.w3.org/TR/CSS2/)\n\n  - Text rendering is based on the libre [freetype](https://www.freetype.org/)\n    and [harfbuzz](https://harfbuzz.org) stack.\n\n  - Some naming choices are definitely inspired by Eddie Kohler\'s\n    [click](https://github.com/kohler/click) software defined networking library\n\n\nFAQ\n---\n\n### I\'m getting build errors when compiling the code\n\nclip is written in C++17 and needs a reasonably modern C++ compiler and standard\nlibrary. In most cases where the code doesn\'t build it\'s due to some problem with\nthe local build environment. We always appreciate bug reports so that we can\nimprove our build system on GitHub Issues.\n\n### The test suite fails on my machine because text placement is slightly offset\n\nThe test suite requires that you have the original Microsoft Arial TTF files\ninstalled on your machine. To verify that this is the case, run `fc-match\n\'Arial,Helvetica,Helvetica Neue:style=Regular,Roman\'` and check that it returns\nthe correct \'arial.ttf\' file.\n\n### What happened to the project name?\n\nThe project was started in 2011 and was initially called "FnordMetric". The\nfirst version from 8 years ago also included facilities for storing and\ntransforming data in addition to the charting code. Over time, the data\nprocessing parts were removed, leaving only the plotting code. However, as a\nconsequence, most of the search queries for the project name would return\noutdated information, resulting in a generally confusing and stale-feeling\nsituation. The best solution seemed to be to rename the project and so, after\ngoing a few other candidates (about which people complained), we finally settled\non \'clip\', since it was short, pronounceable, easy to remember and unencumbered.\n\n\nLicense\n-------\n\n    clip -- The command line illustration processor\n    https://clip-lang.org\n\n    Copyright (c) 2018, Paul Asmuth, Laura Schlimmer\n    All rights reserved.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n'