b'<p align="center">\n  <img src="mscs-logo.png" />\n</p>\n\n# Index\n* [Overview](#overview)\n* [Prerequisites for installation](#prerequisites-for-installation)\n  * [Required programs](#required-programs)\n  * [Configuring the firewall / NAT](#configuring-the-firewall--nat)\n  * [Mapping software](#mapping-software)\n* [Installation](#installation)\n  * [Downloading the script](#downloading-the-script)\n  * [Configuration](#configuration)\n  * [Updating MSCS](#updating-mscs)\n* [Getting started guide](#getting-started-guide)\n  * [Creating a new world](#creating-a-new-world)\n  * [Importing an existing world](#importing-an-existing-world)\n    * [Renaming a world](#renaming-a-world)\n  * [Adjusting global server properties](#adjusting-global-server-properties)\n    * [Default global server properties](#default-global-server-properties)\n  * [Adjusting world properties](#adjusting-world-properties)\n    * [Default world properties](#default-world-properties)\n    * [Enabling Forge, BungeeCord, and other server software](#enabling-forge-bungeecord-and-other-server-software)\n* [Performing backups and other tasks](#performing-backups-and-other-tasks)\n  * [Scheduling backups](#scheduling-backups)\n  * [Viewing and restoring backups](#viewing-and-restoring-backups)\n  * [Removing backups after X days](#removing-backups-after-x-days)\n  * [Scheduling restarts](#scheduling-restarts)\n  * [Scheduling mapping](#scheduling-mapping)\n  * [Configuring logging](#configuring-logging)\n* [Setting up mapping](#setting-up-mapping)\n  * [Installing Overviewer (the mapping software)](#installing-overviewer-the-mapping-software)\n  * [Configuring overviewer](#configuring-overviewer)\n  * [Changing the default rendering settings](#changing-the-default-rendering-settings)\n* [Command reference](#command-reference)\n  * [Examples](#examples)\n* [Issues](#issues)\n  * [Troubleshooting](#troubleshooting)\n* [Code of Conduct](CODE_OF_CONDUCT.md)\n* [License](LICENSE)\n* [Disclaimer](#disclaimer)\n\n## Overview\n**M**inecraft **S**erver **C**ontrol **S**cript (**MSCS**)\nis a server-management script for UNIX and Linux powered Minecraft servers.\n\nFeatures include:\n\n* Run multiple Minecraft worlds.\n* Start, stop, and restart single or multiple worlds.\n* Create, delete, disable, and enable worlds.\n* Includes support for additional server types: [Forge](http://www.minecraftforge.net/),\n[BungeeCord](http://www.spigotmc.org/wiki/bungeecord/),\n[SpigotMC](http://www.spigotmc.org/wiki/spigot/), etc.\n* Users automatically notified of important server events.\n* LSB and systemd compatible init script,\nallows for seamless integration with your server\'s startup and shutdown\nsequences.\n* Map worlds using the [Minecraft Overviewer](http://overviewer.org/)\n mapping software.\n* Automatically backup worlds, remove backups older than X days,\nand restart worlds.\n* Update the server and client software automatically.\n* Send commands to a world server from the command line.\n\n## Prerequisites for installation\nEnsure that you have done the following before installing MSCS:\n\n### Required Programs\nWe\'ve made an attempt to utilize only features that are normally installed in\nmost Linux and UNIX environments in this script. However, there may be a few\nrequirements that this script has that may not already be in place:\n* Java JRE                   - The Minecraft server software requires this. \n                               **As of Minecraft 1.12, Java 8 is required.**\n* Perl                       - Most, if not all, Unix and Linux like systems\n                               have this preinstalled.\n* libjson-perl               - Allows the script to read JSON formatted data.\n* libwww-perl                - Allows the script to download data to verify\n                               downloads.\n* liblwp-protocol-https-perl - Allows the script to download data over HTTPS.\n* Python                     - Required by the Minecraft Overviewer mapping\n                               software.\n* GNU Make                   - Allows you to use the Makefile to simplify\n                               installation.\n* GNU Wget                   - Allows the script to download software updates\n                               via the internet.\n* rdiff-backup               - Allows the script to efficiently run backups.\n* rsync                      - Allows the script to efficiently make copies of\n                               files.\n* Socat                      - Allows the script to communicate with the\n                               Minecraft server.\n* Iptables                   - Although not explicitly required, a good\n                               firewall should be installed.\n\nIf you are running Debian or Ubuntu, you can make sure that these are\ninstalled by running:\n\n    sudo apt-get install default-jre perl libjson-perl libwww-perl liblwp-protocol-https-perl python make wget rdiff-backup rsync socat iptables\n\nIf you are running Fedora, you can make sure that these are\ninstalled by running:\n\n\tyum install java-1.8.0-openjdk perl perl-JSON perl-libwww-perl perl-LWP-Protocol-https python make wget rdiff-backup rsync socat iptables git sudo procps which\n\n### Configuring the firewall / NAT\nIf you have a firewall installed on your computer, or a router using NAT\ninstalled in your network, you will need to route some ports to your server.\nInstructions on how to accomplish this are beyond the scope of this document,\nbut here are some things you will need to know:\n* The default port for the Minecraft server is: `25565`.\n* If you wish to run multiple world servers using this script, you may\n  want to open a range of ports (for example `25565 - 25575`).\n* If you are using [BungeeCord](http://www.spigotmc.org/wiki/bungeecord/),\n  you will most likely need to only open the default port: `25565`.\n\nSee the [iptables.rules](iptables.rules) file for a very basic set of rules\nthat you can use with the Iptables firewall.\n\n### Mapping software\nThe script uses the [Minecraft Overviewer](http://overviewer.org) mapping\nsoftware to generate maps of your worlds. Please see [Setting up mapping](#setting-up-mapping)\nfor installation and configuration instructions.\n\n## Installation\n### Downloading the script\nThe easiest way to download the script is to make a clone of the [git\nrepository](https://github.com/MinecraftServerControl/mscs.git).\nYou must have git installed first. To install git:\n\n    sudo apt-get install git\n\nThen:\n\n    git clone https://github.com/MinecraftServerControl/mscs.git\n\nNote that it will be downloaded into the current directory which you are\nworking in.\n\n##### Other ways to download\n\n* Get the latest stable \n[release](https://github.com/MinecraftServerControl/mscs/releases).\n\n* Get the development version as a \n[zip file](https://github.com/MinecraftServerControl/mscs/archive/master.zip):\n\n    wget https://github.com/MinecraftServerControl/mscs/archive/master.zip\n\n### Configuration\n\nNavigate to the `mscs` directory that you just downloaded.  Configuration can\nbe done with the included Makefile in Debian and Ubuntu like environments by\nrunning:\n\n    sudo make install\n\nThis will give the user you created in the config (by default, the user is\ncalled `minecraft`) access to write in the `/opt/mscs` folder.\n\nIf you get a permission error, please see the \n[troubleshooting](#troubleshooting) section.\n\n#### Manual Configuration\nIf you wish to configure the script manually, please visit the \n[wiki page](https://github.com/MinecraftServerControl/mscs/wiki/Manual-Configuration).\n\n### Updating MSCS\nPeriodically Minecraft Server Control Script is updated to address bug fixes\nand add new features. The easiest way to fetch the latest update, assuming you\nused [the easiest way to install the script](#downloading-the-script), first\n`cd` into the folder where you downloaded MSCS. Then, type:\n\n    git pull\n\nYou can alternatively use [one of the other methods](#other-ways-to-download)\nto download the latest version.  Just `cd` into the folder containing the MSCS\ndownload to continue.\n\nOnce you have the latest version of MSCS downloaded, type:\n\n    sudo make update\n\n## Getting started guide\nSo you successfully installed the script--great!\n\nAt first, you probably want to [create a new world](#creating-a-new-world) or\n[import an existing world](#importing-an-existing-world) into the script.\n\nThen, you might want to adjust the\n[world properties](#adjusting-world-properties), adjust the\n[global server properties](#adjusting-global-server-properties), and enable any\nother [server software](#enabling-forge-bungeecord-and-other-server-software)\nas needed.\n\n### Creating a new world\nThe command to create a new world is:\n\n    mscs create [world] [port] <ip>\n\nWhere `world` is the name of the world you specify,\nand `port` is the server port (by default, use `25565`).\n`ip` is optional and will be used if you wish to bind a world server to a\nspecific network interface (e.g. `127.0.0.1` to enforce local access only).\n\nAfterwards, start the server via `mscs start [world]` where `world` is the\nname of the world. The world will then shut down because you have to accept\nthe EULA.\n\nThe EULA can be found in `/opt/mscs/worlds/myWorld` where `myWorld`\nis the name given to the world you created.\n\nAfter accepting the EULA simply start the server using the same command above,\nand you\'re all set!\n\n### Importing an existing world\n\nIf you wish to import or make a copy of an existing world (perhaps one that\nyou have not been using with mscs), simply do the following:\n\nFor this example, I change to a directory containing a world that I have\nrunning named `alpha`, and get a directory listing:\n\n    $ ls\n    alpha\n    banned-ips.txt\n    banned-players.txt\n    crash-reports\n    logs\n    ops.txt\n    server.properties\n    white-list.txt\n\nNow I simply tell mscs to create a new world from the current directory:\n\n    mscs import . alpha 25565\n\nAlternatively, I could have simply provided the world\'s directory that sits in\nmy home folder instead of changing directories:\n\n    mscs import ~/minecraft_world alpha 25565\n\n#### Renaming a world\nIf you would like to rename a world to a different name, follow the steps\nbelow.\n\nIn this example we want to rename a world named `alpha` to `vanillaMC`:\n\n    mscs rename alpha vanillaMC\n\n### Adjusting global server properties\nDefault values in the script can be overridden by adding certain properties to\none of the `mscs.defaults` files. An example `mscs.defaults` file will be\ncreated as needed in one of three places depending on how the script is being\nused. When using the `mscs` script, the `mscs.defaults` file can be found at\n`/opt/mscs/mscs.defaults`. When using the `msctl` script in [multi-user mode](https://github.com/MinecraftServerControl/mscs/wiki/Configuring-MSCS-for-multiple-users),\nthe `mscs.defaults` file can be found at either `$HOME/mscs.defaults` or\n`$HOME/.config/mscs/mscs.defaults`.\n\nFor more information on the various properties, see the [wiki page](https://github.com/MinecraftServerControl/mscs/wiki/Global-Server-Settings).\n\nThe following properties are available:\n* mscs-location                - Location of the mscs files.\n* mscs-worlds-location         - Location of world files.\n* mscs-versions-url            - URL to download the version_manifest.json file.\n* mscs-versions-json           - Location of the version_manifest.json file.\n* mscs-versions-duration       - Length in minutes to keep the version_manifest.json file before updating.\n* mscs-lockfile-duration       - Length in minutes to keep lock files before removing.\n* mscs-detailed-listing        - Properties to return for detailed listings.\n* mscs-default-world           - Default world name.\n* mscs-default-port            - Default Port.\n* mscs-default-ip              - Default IP address.\n* mscs-default-version-type    - Default version type (release or snapshot).\n* mscs-default-client-version  - Default version of the client software.\n* mscs-default-client-jar      - Default .jar file for the client software.\n* mscs-default-client-url      - Default download URL for the client software.\n* mscs-default-client-location - Default location of the client .jar file.\n* mscs-default-server-version  - Default version of the server software.\n* mscs-default-jvm-args        - Default arguments for the JVM.\n* mscs-default-server-jar      - Default .jar file for the server software.\n* mscs-default-server-url      - Default download URL for the server software.\n* mscs-default-server-args     - Default arguments for a world server.\n* mscs-default-initial-memory  - Default initial amount of memory for a world server.\n* mscs-default-maximum-memory  - Default maximum amount of memory for a world server.\n* mscs-default-server-location - Default location of the server .jar file.\n* mscs-default-server-command  - Default command to run for a world server.\n* mscs-backup-location         - Location to store backup files.\n* mscs-backup-log              - Location of the backup log file.\n* mscs-backup-duration         - Length in days that backups survive. A value less than 1 disables backup deletion.\n* mscs-log-duration            - Length in days that logs survive. A value less than 1 disables log deletion.\n* mscs-enable-mirror           - Enable the mirror option by default for worlds (default disabled).\n* mscs-mirror-path             - Default path for the mirror files.\n* mscs-overviewer-bin          - Location of Overviewer.\n* mscs-overviewer-url          - URL for Overviewer.\n* mscs-maps-location           - Location of Overviewer generated map files.\n* mscs-maps-url                - URL for accessing Overviewer generated maps.\n\nThe following variables may be used in some of the above properties:\n* $JAVA                - The Java virtual machine.\n* $CURRENT_VERSION     - The current Mojang Minecraft release version.\n* $CLIENT_VERSION      - The version of the client software.\n* $SERVER_VERSION      - The version of the server software.\n* $JVM_ARGS            - The arguments to the JVM.\n* $SERVER_JAR          - The .jar file to run for the server.\n* $SERVER_ARGS         - The arguments to the server.\n* $INITIAL_MEMORY      - The initial amount of memory for the server.\n* $MAXIMUM_MEMORY      - The maximum amount of memory for the server.\n* $SERVER_LOCATION     - The location of the server .jar file.\n\n#### Default global server properties\nBelow are the default global server properties. You can add one, none, or all\nof the properties below to one of the `mscs.defaults` files and adjust it to\nyour liking.\n\n    mscs-location=/opt/mscs\n    mscs-worlds-location=/opt/mscs/worlds\n    mscs-versions-url=https://launchermeta.mojang.com/mc/game/version_manifest.json\n    mscs-versions-json=/opt/mscs/version_manifest.json\n    mscs-versions-duration=30\n    mscs-lockfile-duration=1440\n    mscs-default-world=world\n    mscs-default-port=25565\n    mscs-default-ip=\n    mscs-default-version-type=release\n    mscs-default-client-version=$CURRENT_VERSION\n    mscs-default-client-jar=$CLIENT_VERSION.jar\n    mscs-default-client-url=\n    mscs-default-client-location=/opt/mscs/.minecraft/versions/$CLIENT_VERSION\n    mscs-default-server-version=$CURRENT_VERSION\n    mscs-default-jvm-args=\n    mscs-default-server-jar=minecraft_server.$SERVER_VERSION.jar\n    mscs-default-server-url=\n    mscs-default-server-args=nogui\n    mscs-default-initial-memory=128M\n    mscs-default-maximum-memory=2048M\n    mscs-default-server-location=/opt/mscs/server\n    mscs-default-server-command=$JAVA -Xms$INITIAL_MEMORY -Xmx$MAXIMUM_MEMORY -jar $SERVER_LOCATION/$SERVER_JAR $SERVER_ARGS\n    mscs-backup-location=/opt/mscs/backups\n    mscs-backup-log=/opt/mscs/backups/backup.log\n    mscs-backup-duration=15\n    mscs-log-duration=15\n    mscs-detailed-listing=motd server-ip server-port max-players level-type online-mode\n    mscs-enable-mirror=0\n    mscs-mirror-path=/dev/shm/mscs\n    mscs-overviewer-bin=/usr/bin/overviewer.py\n    mscs-overviewer-url=http://overviewer.org\n    mscs-maps-location=/opt/mscs/maps\n    mscs-maps-url=http://minecraft.server.com/maps\n\n### Adjusting world properties\nEach world server can override the default values in a similar manner by\nadding certain properties to the world\'s `mscs.properties` file. The\n`mscs.properties` file can be found in every world folder (for instance, if\nyou had a world called `myWorld`, the path would be\n`/opt/mscs/worlds/myWorld/mscs.properties`). This file allows you to adjust\nmany different properties for each world you have.  By default, the file only\nhas one line in it: `mscs-enabled=true`.\n\nThe following properties are available:\n* mscs-enabled - Enable the world server (true or false).\n* mscs-version-type - Assign the version type (release or snapshot).\n* mscs-client-version - Assign the version of the client software.\n* mscs-client-jar - Assign the .jar file for the client software.\n* mscs-client-url - Assign the download URL for the client software.\n* mscs-client-location - Assign the location of the client .jar file.\n* mscs-server-version - Assign the version of the server software.\n* mscs-jvm-args - Assign the arguments to the JVM.\n* mscs-server-jar - Assign the .jar file for the server software.\n* mscs-server-url - Assign the download URL for the server software.\n* mscs-server-args - Assign the arguments to the server.\n* mscs-initial-memory - Assign the initial amount of memory for the server.\n* mscs-maximum-memory - Assign the maximum amount of memory for the server.\n* mscs-server-location - Assign the location of the server .jar file.\n* mscs-server-command - Assign the command to run for the server.\n\nThe following variables may be used in some of the values of the above keys:\n* $JAVA - The Java virtual machine.\n* $CURRENT_VERSION - The current Mojang Minecraft release version.\n* $CLIENT_VERSION - The version of the client software.\n* $SERVER_VERSION - The version of the server software.\n* $SERVER_JAR - The .jar file to run for the server.\n* $SERVER_ARGS - The arguments to the server.\n* $INITIAL_MEMORY - The initial amount of memory for the server.\n* $MAXIMUM_MEMORY - The maximum amount of memory for the server.\n* $SERVER_LOCATION - The location of the server .jar file.\n\n#### Default world properties\nBelow are the default properties for the world. You can add one, none, or all\nof the properties below to the `mscs.properties` file and adjust it to your\nliking.\n\n    mscs-enabled=true\n    mscs-version-type=release\n    mscs-client-version=$CURRENT_VERSION\n    mscs-client-jar=$CLIENT_VERSION.jar\n    mscs-client-url=https://s3.amazonaws.com/Minecraft.Download/versions/$CLIENT_VERSION/$CLIENT_VERSION.jar\n    mscs-client-location=/opt/mscs/.minecraft/versions/$CLIENT_VERSION\n    mscs-server-version=$CURRENT_VERSION\n    mscs-jvm-args=\n    mscs-server-jar=minecraft_server.$SERVER_VERSION.jar\n    mscs-server-url=https://s3.amazonaws.com/Minecraft.Download/versions/$SERVER_VERSION/minecraft_server.$SERVER_VERSION.jar\n    mscs-server-args=nogui\n    mscs-initial-memory=128M\n    mscs-maximum-memory=2048M\n    mscs-server-location=/opt/mscs/server\n    mscs-server-command=$JAVA -Xms$INITIAL_MEMORY -Xmx$MAXIMUM_MEMORY -jar $SERVER_LOCATION/$SERVER_JAR $SERVER_ARGS\n\n#### Enabling Forge, BungeeCord, and other server software\nPlease visit the [wiki](https://github.com/MinecraftServerControl/mscs/wiki/Server-Customization-Examples)\nfor additional information.\n\n## Performing backups and other tasks\nAll MSCS tasks can be automated using [**cron**](https://en.wikipedia.org/wiki/Cron),\na scheduler software that can run programs on a set interval of time. Whether\nit be backups, restarts, mapping, or any other `mscs` command, it can be\nscheduled using `cron`.\n\n### Scheduling backups\nBelow is an example of one way you could setup backups via `cron` to backup a\nworld every 2 hours:\n\nEdit the crontab file for the `minecraft` user using `sudo`:\n\n    sudo crontab -e -u minecraft\n\nPage down until you get to an empty line. Then paste the following:\n\n    # Define HOME and PATH\n    HOME=/opt/mscs\n    PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n    # Run mscs backups\n    0 */2 * * *  mscs backup myWorld\n\n* We define HOME and PATH because `cron` may not do it for us. *Make sure that\n  PATH and HOME match the environment on your system.*\n\n* `0 */2 * * *` is the time interval to backup. This particular expression\n  means backup every 2 hours. You can change this to 3, 4, 5, etc to backup\n  every X amount of hours. You can also backup according to days, minutes,\n  seconds, the time of the day, and more. See [the wiki page](https://github.com/MinecraftServerControl/mscs/wiki/Backup-and-Restore)\n  for more information.\n\n* `myWorld` is the name of the world you wish to backup. Omitting this will\n  backup all worlds.\n\n### Viewing and restoring backups\n\nOnce you\'ve [scheduled backups](#scheduling-backups), you can view the backups created by running the `mscs list-backups` command, and restore a backup using the `mscs restore-backup` command. \n\n### Removing backups after X days\nYou can specify how long to keep backups by changing the\n`mscs-backup-duration` property in the `mscs.defaults` file (see\n[adjusting global server properties](#adjusting-global-server-properties)\n).\n\n### Scheduling restarts\nYou can schedule restarts for the server following the same method as outlined\nin [scheduling backups](#scheduling-backups). Simply change the scheduled\ncommand to:\n\n    mscs restart <world>\n\nWhere `<world>` is the name of the world you wish to restart (omit for all\nworlds).\n\n### Scheduling mapping\nOnce you\'ve [set up mapping](#setting-up-mapping), you can schedule the world(s) to be mapped periodically using the same method outlined in\n[scheduling backups](#scheduling-backups). Simply replace the command with:\n\n    mscs map <world>\n\nWhere `<world>` is the name of the world you wish to map (omit for all\nworlds).\n\n## Configuring logging\nWant to customize the server logs?  You can configure log4j by setting `mscs-jvm-args` in [world properties](#adjusting-world-properties).\n\nexample setting: `mscs-jvm-args=-Dlog4j.configurationFile=/opt/mscs/log4j2.xml`\n\n## Setting up mapping\n\n### Installing Overviewer (the mapping software)\n\nOverviewer is the mapping software that MSCS uses. \nIt has pretty straightforward documentation to download and install the software:\n\n* [Debian/Ubuntu](http://overviewer.org/debian/info)\n* [RHEL/CentOS/Fedora](http://overviewer.org/rpms/info)\n\n> __NOTE:__ Once you follow the install page, come back here for further instructions.\n> Don\'t read the "Running the Overviewer" section, as it will differ in MSCS.\n\nYou can also [download](http://overviewer.org/downloads) premade binaries for\nsupported systems, or build your own binary from source if needed.\n\n### Configuring Overviewer\n\nSince May 2018 Overviewer has switched from Google Maps to leaflet (https://github.com/Leaflet/Leaflet).\n\nLeaflet is a javascript api for interactive maps, therefore it is not necessary to add a Google API key anymore. \n\nIn the `mscs.defaults` file (one will be created if you haven\'t created one manually), \nyou\'ll find various Overviewer mapping settings which you change to your liking.\nWe\'ve listed the map-related settings below:\n(see [adjusting global server properties](#adjusting-global-server-properties) if you\'re confused where the file is)\n    \n* `mscs-overviewer-bin`: This is the location for the Overviewer binary.                                                                                                                       If you manually installed Overviewer to another location, you can enter the location here.\n* `mscs-overviewer-url`: A clickable link for users in chat to view the overviewer website.\n* `mscs-maps-location`: The location to store the generated maps. Change this value\n   to your web-server folder, e.g. `var/www/` (or symlink your web-server folder to this value).\n* `mscs-maps-url`: The link to be displayed in chat to view the maps when mapping is complete. \n\nAfter you\'ve changed the settings, run:\n\n    mscs map <world>\n\nWhere `<world>` is the name of the world you would like to get mapped.\nOmit the world name to map all worlds.\n\nIf you get a `Permission denied` error, please see the [Troubleshooting section](#troubleshooting).\n\nPlease note that in order for the map to update new changes in the world,\nyou need to run Overviewer periodically.\nPlease see [scheduling mapping](#scheduling-mapping) for more information.\n\n### Changing the default rendering settings\n\nBy default, we\'ve set up MSCS to render the overworld, the nether, the end, and cave systems \nwith Overviewer\'s "normal" render settings. However, Overviewer has many different render \nmodes which you can apply to as many or as few dimensions of your world(s) as you like.\n\nAll you have to do is change the config file, which is located at \n`/opt/mscs/worlds/myWorld/overviewer_settings.py`, where `myWorld` is the name of your world.\n\nTo view more information on render modes and how to customize the config file, \n[click here](http://docs.overviewer.org/en/latest/config/#examples).\n\n## Command Reference\n\nAll commands below assume that you are running them as either the `minecraft`\nuser or as `root` (through sudo).\n\nNote: If the script is run as the `root` user, all important server processes\nwill be started using the `minecraft` user instead for security purposes.\n\n\n````\nUsage:  mscs [<options>] <action>\n\nActions:\n\n  start <world1> <world2> <...>\n    Start the Minecraft world server(s).  Start all world servers by default.\n\n  stop <world1> <world2> <...>\n    Stop the Minecraft world server(s).  Stop all world servers by default.\n\n  force-stop <world1> <world2> <...>\n    Forcibly stop the Minecraft world server(s).  Forcibly stop all world\n    servers by default.\n\n  restart <world1> <world2> <...>\n    Restart the Minecraft world server(s).  Restart all world servers by default.\n\n  force-restart <world1> <world2> <...>\n    Forcibly restart the Minecraft world server(s).  Forcibly restart all world\n    servers by default.\n\n  create <world> <port> [<ip>]\n    Create a Minecraft world server.  The world name and port must be\n    provided, the IP address is usually blank.  Without arguments, create a\n    a default world at the default port.\n\n  import <directory> <world> <port> [<ip>]\n    Import an existing world server.  The world name and port must be\n    provided, the IP address is usually blank.\n\n  rename <original world> <new world>\n    Rename an existing world server.\n\n  delete <world>\n    Delete a Minecraft world server.\n\n  disable <world1> <world2> <...>\n    Temporarily disables world server(s). Disables all world servers by default.\n\n  enable <world1> <world2> <...>\n    Enable disabled world server(s). Enables all world servers by default.\n\n  ls <option>\n    Display a list of worlds.\n    Options:\n      enabled   Display a list of enabled worlds, default.\n      disabled  Display a list of disabled worlds.\n      running   Display a list of running worlds.\n      stopped   Display a list of stopped worlds.\n    If no option, all available worlds are listed.\n\n  list <option>\n    Same as \'ls\' but more detailed.\n\n  status <world1> <world2> <...>\n    Display the status of Minecraft world server(s).  Display the status of\n    all world servers by default.\n\n  sync <world1> <world2> <...>\n    Synchronize the data stored in the mirror images of the Minecraft world\n    server(s).  Synchronizes all of the world servers by default.  This option\n    is only available when the mirror image option is enabled.\n\n  broadcast <command>\n    Broadcast a command to all running Minecraft world servers.\n\n  send <world> <command>\n    Send a command to a Minecraft world server.\n\n  console <world>\n    Connect to the Minecraft world server\'s console.  Hit <Ctrl-D> to detach.\n\n  watch <world>\n    Watch the log file for the Minecraft world server.\n\n  logrotate <world1> <world2> <...>\n    Rotate the log file for the Minecraft world(s).  Rotate the log file for\n    all worlds by default.\n\n  backup <world1> <world2> <...>\n    Backup the Minecraft world(s).  Backup all worlds by default.\n\n  list-backups <world>\n    List the datetime of the backups for the world.\n\n  restore-backup <world> <datetime>\n    Restore a backup for a world that was taken at the datetime.\n\n  map <world1> <world2> <...>\n    Run the Minecraft Overviewer mapping software on the Minecraft world(s).\n    Map all worlds by default.\n\n  update <world1> <world2> <...>\n    Update the server software for the Minecraft world server(s).  Update\n    server software for all worlds by default.\n\n  force-update <world1> <world2> <...>\n    Refresh version information prior to running update for the world\n    server(s), regardless of how recently the version information was updated.\n    Refreshes version information and updates all world servers by default.\n\n  query <world1> <world2> <...>\n    Run a detailed Query on the Minecraft world server(s). Run a detailed\n    query on all world servers by default.\n\nOptions:\n\n  -c <config_file>\n    Read configuration from <config_files> instead of default locations.\n\n  -l <location>\n    Uses <location> as the base path for data.  Overrides configuration file\n    options.\n\n````\n\n### Examples\n\nTo start all of the world servers, issue the command:\n\n    sudo mscs start\n\nTo create a world named `alpha` on the default port `25565`, issue the\ncommand:\n\n    sudo mscs create alpha 25565\n\nTo start just the world named `alpha`, issue the command:\n\n    sudo mscs start alpha\n\nTo send a command to a world server, issue the command:\n\n    sudo mscs send [world] [command]\n\nie.\n\n    sudo mscs send alpha say Hello world!\n\n## Issues\n\nWe have only tested this code in a Debian/Ubuntu environment, but there is no\nreason that it shouldn\'t work in any appropriately configured UNIX-like\nenvironment, including Apple Mac OSX and the other BSD variants, with only\nminor modifications.  If you experience errors running this script, please\npost a copy of the error message and a note detailing the operating\nenvironment where the error occurs to the support thread, and we will try to\nwork out a solution with you.\n\nGithub Issues:  https://github.com/MinecraftServerControl/mscs/issues\n\nOld support thread: \xc2\xa0http://www.minecraftforum.net/viewtopic.php?f=10&t=129833\n\n### Troubleshooting\n\n#### Permission denied when attempting to run `mscs create ...`\n\nType\n\n    chmod -R u+w /opt/mscs\n    chown -R minecraft:minecraft /opt/mscs\n\nTo give the `minecraft` user the correct permissions needed to create/modify\nfolders.\n\n#### Permission denied when attempting to run `mscs map ...`\n\nType\n\n    chmod -R u+w /opt/mscs/maps\n    chown -R minecraft:minecraft /opt/mscs/maps\n\nTo give the `minecraft` user the correct permissions needed to create/modify\nfolders.\n\n## Code of Conduct\n\nSee [Code of Conduct](CODE_OF_CONDUCT.md)\n\n## License\n\nSee [LICENSE](LICENSE)\n\n## Disclaimer\n\nMinecraft is a trademark of Mojang Synergies AB, a subsidiary of Microsoft\nStudios.  MSCS and MSC-GUI are designed to ease the use of the Mojang produced\nMinecraft server software on Linux and UNIX servers.  MSCS and MSC-GUI are\nindependently developed by open software enthusiasts with no support or\nimplied warranty provided by either Mojang or Microsoft.\n'