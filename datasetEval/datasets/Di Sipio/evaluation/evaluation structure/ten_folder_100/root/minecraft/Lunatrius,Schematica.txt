b"## Welcome to Schematica!\n### Compiling\n[Setup Java](#setup-java)\n\n[Setup Git](#setup-git)\n\n[Setup Schematica](#setup-schematica)\n\n[Compile Schematica](#compile-schematica)\n\n[Updating Your Repository](#updating-your-repository)\n\n#### Setup Java\nThe Java JDK is used to compile Schematica.\n\n1. Download and install the Java JDK.\n    * [Windows/Mac download link](http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html). Scroll down, accept the `Oracle Binary Code License Agreement for Java SE`, and download it (if you have a 64-bit OS, please download the 64-bit version).\n    * Linux: Installation methods for certain popular flavors of Linux are listed below. If your distribution is not listed, follow the instructions specific to your package manager or install it manually [here](http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html).\n        * Gentoo: `emerge dev-java/oracle-jdk-bin`\n        * Archlinux: `pacman -S jdk7-openjdk`\n        * Ubuntu/Debian: `apt-get install openjdk-7-jdk`\n        * Fedora: `yum install java-1.7.0-openjdk`\n2. Set up the environment.\n    * Windows: Set environment variables for the JDK.\n        1. Go to `Control Panel\\System and Security\\System`, and click on `Advanced System Settings` on the left-hand side.\n        2. Click on `Environment Variables`.\n        3. Under `System Variables`, click `New`.\n        4. For `Variable Name`, input `JAVA_HOME`.\n        5. For `Variable Value`, input something similar to `C:\\Program Files\\Java\\jdk1.7.0_45` exactly as shown (or wherever your Java JDK installation is), and click `Ok`.\n        6. Scroll down to a variable named `Path`, and double-click on it.\n        7. Append `;%JAVA_HOME%\\bin` EXACTLY AS SHOWN and click `Ok`. Make sure the location is correct; double-check just to make sure.\n3. Open up your command line and run `javac`. If it spews out a bunch of possible options and the usage, then you're good to go. If not try the steps again.\n\n#### Setup Git\nGit is used to clone Schematica and update your local copy.\n\n1. Download and install Git [here](http://git-scm.com/download/).\n2. *Optional* Download and install a Git GUI client, such as Github for Windows/Mac, SmartGitHg, TortoiseGit, etc. A nice list is available [here](http://git-scm.com/downloads/guis).\n\n#### Setup Schematica\nThis section assumes that you're using the command-line version of Git.\n\n1. Open up your command line.\n2. Navigate to a place where you want to download Schematica's source (eg `C:\\Development\\Github\\Minecraft\\`) by executing `cd [folder location]`. This location is known as `mcdev` from now on.\n3. Execute `git clone git@github.com:Lunatrius/Schematica.git`. This will download Schematica's source into `mcdev`.\n4. Right now, you should have a directory that looks something like:\n\n***\n    mcdev\n    \\-Schematica\n        \\-Schematica's files (should have build.gradle)\n***\n\n#### Compile Schematica\n1. Execute `gradlew setupDevWorkspace`. This sets up Forge and downloads the necessary libraries to build Schematica. This might take some time, be patient.\n    * You will generally only have to do this once until the Forge version in `gradle.properties` changes.\n2. Execute `gradlew build`. If you did everything right, `BUILD SUCCESSFUL` will be displayed after it finishes. This should be relatively quick.\n    * If you see `BUILD FAILED`, check the error output (it should be right around `BUILD FAILED`), fix everything (if possible), and try again.\n3. Go to `mcdev\\Schematica\\build\\libs`.\n    * You should see a `.jar` file named `Schematica-#.#.#-#.#.#.#-universal.jar`.\n4. Copy the jar into your Minecraft mods folder, and you are done!\n\n#### Updating Your Repository\nIn order to get the most up-to-date builds, you'll have to periodically update your local repository.\n\n1. Open up your command line.\n2. Navigate to `mcdev` in the console.\n3. Make sure you have not made any changes to the local repository, or else there might be issues with Git.\n    * If you have, try reverting them to the status that they were when you last updated your repository.\n4. Execute `git pull master`. This pulls all commits from the official repository that do not yet exist on your local repository and updates it.\n\nShamelessly based this README off [pahimar's version](https://github.com/pahimar/Equivalent-Exchange-3).\n"