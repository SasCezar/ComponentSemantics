b"# Microsoft MakeCode\n\n* [Try out the editors in your browser...](https://makecode.com)\n\n[![Build Status](https://travis-ci.org/microsoft/pxt.svg?branch=master)](https://travis-ci.org/microsoft/pxt) \n[![Community Discord](https://img.shields.io/discord/448979533891371018.svg)](https://aka.ms/makecodecommunity)\n\nMicrosoft MakeCode is based on the open source project [Microsoft Programming Experience Toolkit (PXT)](https://github.com/microsoft/pxt). ``Microsoft MakeCode`` is the name in the user-facing editors, ``PXT`` is used in all the GitHub sources.\n\nPXT is a framework for creating special-purpose programming experiences for\nbeginners, especially focused on computer science education. PXT's underlying\nprogramming language is a subset of TypeScript (leaving out JavaScript dynamic\nfeatures).\n\nThe main features of PXT are:\n* a Blockly-based code editor along with converter to the text format\n* a Monaco code editor that powers [VS Code](https://github.com/microsoft/vscode), editor's features are listed [here](https://code.visualstudio.com/docs/editor/editingevolved).\n* extensibility support to define new blocks in TypeScript\n* an ARM Thumb machine code emitter\n* a command-line package manager\n\nMore info:\n* [About](https://makecode.com/about)\n* [Documentation](https://makecode.com/docs)\n\nExamples of Editors built with PXT:\n\n* https://makecode.microbit.org\n* https://arcade.makecode.com\n* https://makecode.adafruit.com\n* https://minecraft.makecode.com\n* https://makecode.mindstorms.com\n* https://makecode.chibitronics.com\n* More editors at https://makecode.com/labs\n\n## Branches\n\n* ``master`` is the active development branch, currently ``v3.*`` builds\n* ``v*`` is the servicing branch for ``v*.*`` builds\n\n## Running a target from localhost\n\nPlease follow the [instructions here](https://makecode.com/cli).\n\n## Linking a target to PXT\n\nIf you are modifying your own instance of PXT and want a target (such as pxt-microbit) to use your local version, cd to the directory of the target (pxt-microbit, in our example, which should be a directory sibling of pxt) and perform\n\n```\npxt link ../pxt\n```\n\nIf you have multiple checkouts of pxt, you can do the following:\n* run `npm i` in pxt and the target\n* in the target, run `pxt link ..\\some-other-pxt` (you may need to update your CLI first by running `npm install -g pxt`)\n\nIf you run `npm i` afterwards (in either the target or pxt), you might need to repeat these steps.\n\n## Build\n\nFirst, install [Node](https://nodejs.org/en/): minimum version 8. \n\nTo build the PXT command line tools:\n\n```\nnpm install\nnpm run build\n```\n\nThen install the `pxt` command line tool (only need to do it once):\n\n```\nnpm install -g pxt\n```\n\nAfter this you can run `pxt` from anywhere within the build tree.\n\nTo start the local web server, run `pxt serve` from within the root\nof an app target (e.g. pxt-microbit). PXT will open the editor in your default web browser.\n\n### Icons\n\nThere are a number of custom icons (to use in addition\nto http://semantic-ui.com/elements/icon.html) in the `svgicons/` directory.\nThese need to be `1000x1000px`. Best start with an existing one. To see available icons go to\nhttp://localhost:3232/icons.html (this file, along with `icons.css` containing\nthe generated WOFF icon font, is created during build).\n\nIf you're having trouble with display of the icon you created, try:\n```\nnpm install -g svgo\nsvgo svgicons/myicon.svg\n```\n\n### Documentation Highlighting\n\nIn the documentation, highlighting of code snippets uses highlight.js (hljs).\nCurrently, the following languages are included:\n\n* TypeScript\n* Python\n* JavaScript\n* HTML,XML\n* Markdown\n\nIf you need to add other languages or update existing ones,\nyou can find the distribution at [https://highlightjs.org/download/](https://highlightjs.org/download/);\nselect all the languages you want to include (including the ones above!),\ndownload and unzip,\nand finally copy over `highlight.pack.js` into `webapp/public/highlight.js/`.\n\n## Tests\n\nThe tests are located in the `tests/` subdirectory and are a combination of node and\nbrowser tests. To execute them, run `npm run test:all` in the root directory.\n\n## License\n\n[MIT License](https://github.com/microsoft/pxt/blob/master/LICENSE)\n\n## Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n## Contact Us\n\n[Get in touch](https://makecode.com/contact)\n\n## Trademarks\n\nMICROSOFT, the Microsoft Logo, and MAKECODE are registered trademarks of Microsoft Corporation. They can only be used for the purposes described in and in accordance with Microsoft\xe2\x80\x99s Trademark and Brand guidelines published at https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general.aspx. If the use is not covered in Microsoft\xe2\x80\x99s published guidelines or you are not sure, please consult your legal counsel or MakeCode team (makecode@microsoft.com).\n"