b'# OpenCvSharp [![CircleCI](https://circleci.com/gh/shimat/opencvsharp/tree/master.svg?style=svg)](https://circleci.com/gh/shimat/opencvsharp/tree/master) [![Build status](https://ci.appveyor.com/api/projects/status/dvjexft02s6b3re6/branch/master?svg=true)](https://ci.appveyor.com/project/shimat/opencvsharp/branch/master) [![GitHub license](https://img.shields.io/github/license/shimat/opencvsharp.svg)](https://github.com/shimat/opencvsharp/blob/master/LICENSE) \n\nCross platform wrapper of OpenCV for .NET Framework.\n\nOld versions of OpenCvSharp are stored in [opencvsharp_2410](https://github.com/shimat/opencvsharp_2410).\n\n## Installation\n### NuGet\n\n| Package | Description | Link |\n|---------|-------------|------|\n|**OpenCvSharp4**| OpenCvSharp core libraries | [![NuGet version](https://badge.fury.io/nu/OpenCvSharp4.svg)](https://badge.fury.io/nu/OpenCvSharp4) |\n|**OpenCvSharp4.Windows**| All-in-one package for Windows (except UWP) | [![NuGet version](https://badge.fury.io/nu/OpenCvSharp4.Windows.svg)](https://badge.fury.io/nu/OpenCvSharp4.Windows) |\n|**OpenCvSharp4.runtime.win**| Native bindings for Windows x64/x86 (except UWP) | [![NuGet version](https://badge.fury.io/nu/OpenCvSharp4.runtime.win.svg)](https://badge.fury.io/nu/OpenCvSharp4.runtime.win) |\n|**OpenCvSharp4.runtime.uwp**| Native bindings for UWP (Universal Windows Platform) x64/x86/ARM | [![NuGet version](https://badge.fury.io/nu/OpenCvSharp4.runtime.uwp.svg)](https://badge.fury.io/nu/OpenCvSharp4.runtime.uwp) |\n|**OpenCvSharp4.runtime.ubuntu.18.04-x64**| Native bindings for Ubuntu 18.04 x64 | [![NuGet version](https://badge.fury.io/nu/OpenCvSharp4.runtime.ubuntu.18.04-x64.svg)](https://badge.fury.io/nu/OpenCvSharp4.runtime.ubuntu.18.04-x64) |\n|**OpenCvSharp4.runtime.ubuntu.16.04-x64 (beta)**| Native bindings for Ubuntu 16.04 x64. This is for Google AppEngine Flexible and made in gcr.io/google-appengine/aspnetcore:2.1 docker image. | [![NuGet version](https://badge.fury.io/nu/OpenCvSharp4.runtime.ubuntu.16.04-x64.svg)](https://badge.fury.io/nu/OpenCvSharp4.runtime.ubuntu.16.04-x64) |\n|(beta packages)| Development Build Package    | https://ci.appveyor.com/nuget/opencvsharp |\n\nNative binding (OpenCvSharpExtern.dll / libOpenCvSharpExtern.so) is required to work OpenCvSharp. To use OpenCvSharp, you should add both `OpenCvSharp4` and `OpenCvSharp4.runtime.*` packages to your project. Currently, native bindings for Windows and Ubuntu 18.04 are released.\n\nPackages named OpenCvSharp3-* and OpenCvSharp-* are deprecated.\n- [OpenCvSharp3-AnyCPU](https://www.nuget.org/packages/OpenCvSharp3-AnyCPU/)\n- [OpenCvSharp3-WithoutDll](https://www.nuget.org/packages/OpenCvSharp3-WithoutDll/)\n- [OpenCvSharp-AnyCPU](https://www.nuget.org/packages/OpenCvSharp-AnyCPU/)\n- [OpenCvSharp-WithoutDll](https://www.nuget.org/packages/OpenCvSharp-WithoutDll/)\n\n### Windows (except UWP)\nAdd `OpenCvSharp4` and `OpenCvSharp4.runtime.win` NuGet packages to your project. You can use `OpenCvSharp4.Windows` instead.\n\n### UWP\nAdd `OpenCvSharp4` and `OpenCvSharp4.runtime.uwp` NuGet packages to your project. Note that `OpenCvSharp4.runtime.win` and `OpenCvSharp4.Windows` don\'t work for UWP. \n\n### Ubuntu 18.04\nAdd `OpenCvSharp4` and `OpenCvSharp4.runtime.ubuntu.18.04.x64` NuGet packages to your project.\n```\ndotnet new console -n ConsoleApp01\ncd ConsoleApp01\ndotnet add package OpenCvSharp4\ndotnet add package OpenCvSharp4.runtime.ubuntu.18.04-x64\n# -- edit Program.cs --- # \ndotnet run\n```\n\n### Ubuntu 16.04 / Google AppEngine Flexible (beta)\nAdd `OpenCvSharp4` and `OpenCvSharp4.runtime.ubuntu.16.04.x64` NuGet packages to your project.\n\n### Downloads\nIf you do not use NuGet, get DLL files from the [release page](https://github.com/shimat/opencvsharp/releases).\n\n## Requirements\n* [OpenCV 4.1.1](http://opencv.org/) with [opencv_contrib](https://github.com/opencv/opencv_contrib)\n* (Windows)[Visual C++ 2019 Redistributable Package](https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads)\n* [.NET Framework 2.0](http://www.microsoft.com/ja-jp/download/details.aspx?id=1639) or later / [.NET Core 2.0](https://www.microsoft.com/net/download) / [Mono](http://www.mono-project.com/Main_Page)\n\nOpenCvSharp may not work on Unity platform. Please consider using [OpenCV for Unity](https://www.assetstore.unity3d.com/en/#!/content/21088)\n\n## Code samples\nhttps://github.com/shimat/opencvsharp_samples/\n\n## Documents\nhttps://shimat.github.io/opencvsharp_docs/index.html\n\n## Chat\nhttps://riot.im/app/#/room/#opencvsharp:matrix.org\n\n## Usage\nFor more details, see **[samples](https://github.com/shimat/opencvsharp_samples/)** and **[Wiki](https://github.com/shimat/opencvsharp/wiki)** pages.\n\n```C#\n// Edge detection by Canny algorithm\nusing OpenCvSharp;\n\nclass Program \n{\n    static void Main() \n    {\n        Mat src = new Mat("lenna.png", ImreadModes.Grayscale);\n \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0// Mat src = Cv2.ImRead("lenna.png", ImreadModes.Grayscale);\n \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0Mat dst = new Mat();\n        \n        Cv2.Canny(src, dst, 50, 200);\n        using (new Window("src image", src)) \n        using (new Window("dst image", dst)) \n        {\n            Cv2.WaitKey();\n        }\n    }\n}\n```\n\n## Features\n* OpenCvSharp is modeled on the native OpenCV C/C++ API style as much as possible.\n* Many classes of OpenCvSharp implement IDisposable. There is no need to manage unsafe resources. \n* OpenCvSharp does not force object-oriented programming style on you. You can also call native-style OpenCV functions.\n* OpenCvSharp provides functions for converting from `Mat` into `Bitmap`(GDI+) or `WriteableBitmap`(WPF).\n\n## OpenCvSharp Build Instructions\n### Windows\n- Install Visual Studio 2017 or later\n  - VC++ features are required.\n- Get all submodules\n```\ngit submodule update --init --recursive\n```\n- Build OpenCvSharp\n  - Open `OpenCvSharp.sln` and build\n\n### Ubuntu 18.04\n\n- Build OpenCV with opencv_contrib. \n  - https://www.learnopencv.com/install-opencv-4-on-ubuntu-18-04/\n- Install .NET Core SDK. https://dotnet.microsoft.com/download/linux-package-manager/ubuntu18-04/sdk-2.1.202\n- Get OpenCvSharp source files\n```\ngit clone https://github.com/shimat/opencvsharp.git\ncd opencvsharp\ngit fetch --all --tags --prune && git checkout ${OPENCVSHARP_VERSION}\n```\n\n- Build native wrapper `OpenCvSharpExtern`\n```\ncd opencvsharp/src\nmkdir build\ncd build\ncmake -D CMAKE_INSTALL_PREFIX=${YOUR_OPENCV_INSTALL_PATH} ..\nmake -j \nmake install\n```\nYou should add reference to `opencvsharp/src/build/OpenCvSharpExtern/libOpenCvSharpExtern.so`\n```\nexport LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/home/shimat/opencvsharp/src/build/OpenCvSharpExtern"\n```\n\n- Add `OpenCvSharp4` NuGet package to your project\n```\ndotnet new console -n ConsoleApp01\ncd ConsoleApp01\ndotnet add package OpenCvSharp4\n# -- edit Program.cs --- # \ndotnet run\n```\n\n### Older Ubuntu\nRefer to the [Dockerfile](https://github.com/shimat/opencvsharp/blob/master/docker/google-appengine-ubuntu.16.04-x64/Dockerfile) and [Wiki pages](https://github.com/shimat/opencvsharp/wiki).\n\n## License\nLicensed under the [BSD 3-Clause License](https://github.com/shimat/opencvsharp/blob/master/LICENSE).\n\n## Donations\n\nIf you find the OpenCvSharp library useful and would like to show your gratitude by donating, here are some donation options. Thank you.\n\nType | Address\n------ | -------\n**BTC** (Bitcoin) | 3EWhyNe3xzNNrbUgk4nXAVEkaWdpGncotc\n**BCH** (Bitcoin Cash) | 3EWhyNe3xzNNrbUgk4nXAVEkaWdpGncotc\n**ETH** (Ethereum) | 0x8a6089d60812ec88822d81bc6c65ba4ae63ea269\n**LTC** (Litecoin) | LLpmBjjVGZf93MEohEZpkADMpnyqAS3iQC\n'