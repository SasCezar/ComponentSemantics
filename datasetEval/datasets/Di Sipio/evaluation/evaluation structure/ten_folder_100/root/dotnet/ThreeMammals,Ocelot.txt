b'[<img src="https://threemammals.com/ocelot_logo.png">](https://threemammals.com/ocelot)\n\n[![Build status](https://ci.appveyor.com/api/projects/status/r6sv51qx36sis1je?branch=develop&svg=true)](https://ci.appveyor.com/project/TomPallister/ocelot-fcfpb) Windows (AppVeyor)\n\n[![Build Status](https://travis-ci.org/ThreeMammals/Ocelot.svg?branch=develop)](https://travis-ci.org/ThreeMammals/Ocelot) Linux & OSX (Travis)\n\n[![Windows Build history](https://buildstats.info/appveyor/chart/TomPallister/ocelot-fcfpb?branch=develop&includeBuildsFromPullRequest=false)](https://ci.appveyor.com/project/TomPallister/ocelot-fcfpb/history?branch=develop)\n\n[![Coverage Status](https://coveralls.io/repos/github/ThreeMammals/Ocelot/badge.svg?branch=develop)](https://coveralls.io/github/ThreeMammals/Ocelot?branch=develop)\n\n\n\n# Ocelot\n\nOcelot is a .NET API Gateway. This project is aimed at people using .NET running \na micro services / service oriented architecture \nthat need a unified point of entry into their system. However it will work with anything that speaks HTTP and run on any platform that ASP.NET Core supports.\n\nIn particular I want easy integration with \nIdentityServer reference and bearer tokens. \n\nWe have been unable to find this in my current workplace\nwithout having to write our own Javascript middlewares \nto handle the IdentityServer reference tokens. We would\nrather use the IdentityServer code that already exists\nto do this.\n\nOcelot is a bunch of middlewares in a specific order.\n\nOcelot manipulates the HttpRequest object into a state specified by its configuration until \nit reaches a request builder middleware where it creates a HttpRequestMessage object which is \nused to make a request to a downstream service. The middleware that makes the request is \nthe last thing in the Ocelot pipeline. It does not call the next middleware. \nThe response from the downstream service is retrieved as the requests goes back up the Ocelot pipeline. \nThere is a piece of middleware that maps the HttpResponseMessage onto the HttpResponse object and that \nis returned to the client. That is basically it with a bunch of other features!\n\n## Features\n\nA quick list of Ocelot\'s capabilities for more information see the [documentation](https://ocelot.readthedocs.io/en/latest/).\n\n* Routing\n* Request Aggregation\n* Service Discovery with Consul & Eureka\n* Service Fabric\n* Kubernetes \n* WebSockets\n* Authentication\n* Authorisation\n* Rate Limiting\n* Caching\n* Retry policies / QoS\n* Load Balancing\n* Logging / Tracing / Correlation\n* Headers / Query String / Claims Transformation\n* Custom Middleware / Delegating Handlers\n* Configuration / Administration REST API\n* Platform / Cloud Agnostic\n\n## How to install\n\nOcelot is designed to work with ASP.NET Core only and it targets `netstandard2.0`. This means it can be used anywhere `.NET Standard 2.0` is supported, including `.NET Core 2.1` and `.NET Framework 4.7.2` and up. [This](https://docs.microsoft.com/en-us/dotnet/standard/net-standard) documentation may prove helpful when working out if Ocelot would be suitable for you.\n\nInstall Ocelot and it\'s dependencies using NuGet. \n\n`Install-Package Ocelot`\n\nOr via the .NET Core CLI:\n\n`dotnet add package ocelot`\n\nAll versions can be found [here](https://www.nuget.org/packages/Ocelot/)\n\n## Documentation\n\nPlease click [here](https://ocelot.readthedocs.io/en/latest/) for the Ocelot documentation. This includes lots of information and will be helpful if you want to understand the features Ocelot currently offers.\n\n## Coming up\n\nYou can see what we are working on [here](https://github.com/ThreeMammals/Ocelot/issues).\n\n## Contributing\n\nWe love to receive contributions from the community so please keep them coming :) \n\nPull requests, issues and commentary welcome!\n\nPlease complete the relevant template for issues and PRs. Sometimes it\'s worth getting in touch with us to discuss changes \nbefore doing any work incase this is something we are already doing or it might not make sense. We can also give\nadvice on the easiest way to do things :)\n\nFinally we mark all existing issues as help wanted, small, medium and large effort. If you want to contribute for the first time I suggest looking at a help wanted & small effort issue :)\n\n## Donate\n\nIf you think this project is worth supporting financially please make a contribution using the button below!\n\n[![Support via PayPal](https://cdn.rawgit.com/twolfson/paypal-github-button/1.0.0/dist/button.svg)](https://www.paypal.me/ThreeMammals/)\n\n## Things that are currently annoying me\n\n[![](https://codescene.io/projects/697/status.svg) Get more details at **codescene.io**.](https://codescene.io/projects/697/jobs/latest-successful/results)\n'