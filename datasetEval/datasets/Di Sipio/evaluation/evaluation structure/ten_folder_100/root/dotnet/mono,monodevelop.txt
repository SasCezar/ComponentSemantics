b'**MonoDevelop** is a full-featured integrated development environment (IDE) for mono using Gtk#.\n\nThe MonoDevelop core is also the foundation for Visual Studio for Mac.\nFeel free to file bugs against Visual Studio for Mac here as well.\n\nSee http://www.monodevelop.com for more info.\n\n[![Build Status](http://jenkins.mono-project.com/job/test-monodevelop-mainline/badge/icon)](http://jenkins.mono-project.com/job/test-monodevelop-mainline/)\n\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mono/monodevelop?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nDirectory organization\n----------------------\n\nThere are two main directories:\n\n * `main`: The core MonoDevelop assemblies and add-ins (all in a single\n    tarball/package).\n * `extras`: Additional add-ins (each add-in has its own\n    tarball/package).\n\nCompiling\n---------\n\nIf you are building from Git, make sure that you initialize the submodules\nthat are part of this repository by executing:\n`git submodule update --init --recursive`\n\nIf you are running a parallel mono installation, make sure to run all the following steps\nwhile having sourced your mono installation script. (source path/to/my-environment-script)\nSee: http://www.mono-project.com/Parallel_Mono_Environments\n\nTo compile execute:\n`./configure ; make`\n\nThere are two variables you can set when running `configure`:\n\n* The install prefix: `--prefix=/path/to/prefix`\n\n  * To install with the rest of the assemblies, use:\n  `--prefix="pkg-config --variable=prefix mono"`\n\n* The build profile: `--profile=profile-name`\n\n  * `stable`: builds the MonoDevelop core and some stable extra add-ins.\n  * `core`: builds the MonoDevelop core only.\n  * `all`: builds everything\n  * `mac`: builds for Mac OS X\n\n**PS:** You can also create your own profile by adding a file to the profiles directory containing a list of the directories to build.\n\nDisclaimer: Please be aware that the \'extras/JavaBinding\' and \'extras/ValaBinding\' packages do not currently work. When prompted or by manually selecting them during the \'./configure --select\' step, make sure they stay deselected. (deselected by default)\n\nRunning\n-------\n\nYou can run MonoDevelop from the build directory by executing:\n`make run`\n\nDebugging\n---------\n\nYou can debug MonoDevelop using Visual Studio (on Windows or macOS) with the\n`main/Main.sln` solution. Use the `DebugWin32` configuration on Windows and the\n`DebugMac` configuration on macOS.\n\nInstalling *(Optional)*\n----------\n\nYou can install MonoDevelop by running:\n`make install`\n\nBear in mind that if you are installing under a custom prefix, you may need to modify your `/etc/ld.so.conf` or `LD_LIBRARY_PATH` to ensure that any required native libraries are found correctly.\n\n*(It\'s possible that you need to install for your locale to be\ncorrectly set.)*\n\nPackaging for OS X\n-----------------\n\nTo package MonoDevelop for OS X in a convenient MonoDevelop.app\nfile, just do this after MonoDevelop has finished building (with\n`make`): `cd main/build/MacOSX ; make app`.\nYou can run MonoDevelop: `open MonoDevelop.app` or build dmg package: `./make-dmg-bundle.sh`\n\nDependencies\n------------\n\n- [Windows](https://github.com/mono/md-website/blob/gh-pages/developers/building-monodevelop.md#prerequisites-and-source)\n- [Unix](http://www.monodevelop.com/developers/building-monodevelop/#linux)\n\nSpecial Environment Variables\n-----------------------------\n\n**BUILD_REVISION**\n\n\tIf this environment variable exists we assume we are compiling inside wrench.\n\tWe use this to enable raygun only for \'release\' builds and not for normal\n\tdeveloper builds compiled on a dev machine with \'make && make run\'.\n\n\nKnown Problems\n-----------------------------\n\n```\n"The type `GLib.IIcon\' is defined in an assembly that is not referenced"\n```\n\nThis happens when you accidentally installed gtk-sharp3 instead of the 2.12.x branch version.\nMake sure to \'make uninstall\' or otherwise remove the gtk-sharp3 version and install the older one.\n\nxbuild may still cache a reference to assemblies that you may have accidentally installed into your mono installation,\nlike the gtk-sharp3 as described before. You can delete the cache in $HOME/.config/xbuild/pkgconfig-cache-2.xml\n\n\n\nReferences\n----------\n\n**[MonoDevelop website](http://www.monodevelop.com)**\n\n**[Gnome Human Interface Guidelines (HIG)](https://developer.gnome.org/hig/stable/)**\n\n**[freedesktop.org standards](http://freedesktop.org/Standards/)**\n\nDiscussion, Bugs, Patches\n-------------------------\n\nmonodevelop-list@lists.ximian.com *(questions and discussion)*\n\nmonodevelop-patches-list@lists.ximian.com *(track commits to MonoDevelop)*\n\nmonodevelop-bugs@lists.ximian.com *(track MonoDevelop bugzilla component)*\n\nhttps://github.com/mono/monodevelop/issues/new *(submit bugs and patches here)*\n\n'