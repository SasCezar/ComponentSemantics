b'# Introduction\n\n![Suave Logo](https://raw.githubusercontent.com/SuaveIO/resources/master/images/suave1.png)\n\nSuave is a simple web development F# library providing a lightweight web server\nand a set of combinators to manipulate route flow and task composition. Suave\nis inspired in the simplicity of Happstack and born out of the necessity of\nembedding web server capabilities in my own applications.  Suave supports \nWebsocket, HTTPS, multiple TCP/IP bindings, Basic Access Authentication, \nKeep-Alive.\n\nSuave also takes advantage of F# asynchronous\nworkflows to perform non-blocking IO. In fact, Suave is written in a completely\nnon-blocking fashion throughout.\n\nSponsored by\n[qvitoo \xe2\x80\x93 A.I. bookkeeping and Suave in production since many years](https://qvitoo.com/?utm_source=github&utm_campaign=suave).\n\n## Build Status\n\n| Platform | Status         |\n| -------- | -------------- |\n| Windows  | [![Build status](https://ci.appveyor.com/api/projects/status/g0lum9qndwb018sy/branch/master?svg=true)](https://ci.appveyor.com/project/AdemarGonzalez/suave/branch/master) |\n| Mono/Linux     | [![Build status](https://travis-ci.org/SuaveIO/suave.svg?branch=master)](https://travis-ci.org/SuaveIO/suave) |\n\nWhat follows is a tutorial on how to create applications. Scroll past the\ntutorial to see detailed function documentation.\n\n# Tutorial: Hello World!\n\nThe simplest Suave application is a simple HTTP server that greets all visitors\nwith the string `"Hello World!"`\n\n``` fsharp\nopen Suave\n\nstartWebServer defaultConfig (Successful.OK "Hello World!")\n```\n\nNow that you\'ve discovered how to do "Hello World!", go read the\n[rest of the documentation](https://suave.io/) \xe2\x80\x93 editable in the `docs` folder.\n\n# Suave.Testing\n\nWe have a NuGet ready for your testing needs; Suave is an excellent server for\nrunning in-process integration tests, as it\'s very fast to spawn. On an ordinary\nlaptop, running hundreds of randomized tests and micro-benchmarks as well as all\nSuave unit tests, take about 5 seconds on mono.\n\nStart by installing:\n\n```\npaket add nuget suave.testing\n```\n\nYou can now use it:\n\n``` fsharp\nopen Suave\nopen Suave.Testing\nopen Expecto\n\ntestCase "parsing a large multipart form" <| fun _ ->\n\n  let res =\n    runWithConfig (OK "hi")\n    |> req HttpMethod.POST "/" (Some byteArrayContent)\n\n  Expect.equal res "hi" "Should get the correct result"\n```\n\nAll of our tests use this assembly; you can do too.\n\n# How to Build\n\nTo execute the build script, invoke following command on the Linux or MacOs console:\n\n```\n./build.sh\n```\n\nOr in the Microsoft Windows MSDOS console:\n\n```\nbuild\n```\n\n# Coding Guidelines\n\nSuave.X where X is a module is where we expect users to look. We don\'t expect users\nof the library to have to look at Y in Suave.X.Y, so for server-specific code, please\nstick to the Y module/namespace. That way we make the API discoverable.\n\n\n## Style Guide\n\nTwo space indentation.\n\n``` fsharp\nmatch x with // \'|\' characters at base of \'match\'\n| A     -> ()\n| Bcdef -> "aligned arrows" // space after \'|\' character\n```\n\nParameters\n\nLet type annotations be specified with spaces after the argument symbol and before\nthe type.\n\n``` fsharp\nmodule MyType =\n  let ofString (scheme : string) =\n    // ...\n```\n\nMethod formatting with no spaces after/before normal parenthesis\n\n``` fsharp\nlet myMethodName firstArg (second : WithType) = async { // and monad builder\n  return! f firstArg second\n  } // at base of \'let\' + 2 spaces\n```\n\nYou need to document your methods with \'///\' to create XML-doc. A XML\ndocumentation file is generated together with the compilation and is distributed\nwith the NuGet so that others can read your code\'s intentions easily.\n\nDon\'t put unnecessary parenthesis unless it makes the code more clear.\n\nWhen writing functions that take some sort of \'configuration\' or that you can\nimagine would like to be called with a parameter which is almost always the same\nvalue for another function body\'s call-site, put that parameter before\nmore-often-varying parameters in the function signature.\n\n## Testing\n\nRun Tests as a console app. Return status code = 0 means success.\n\n## Upgrade openssl\n\nWindows: paket update openssl.redist\n\nOS X: brew install openssl && brew update openssl && cp /usr/local/Cellar/openssl/1.0.1j_1/lib/ .\n\nLinux: ...\n\n# Community\n\n## Chat Room\n\nWe have a chat room in case you feel like chatting a bit. \n\n[![Chat Room](https://badges.gitter.im/SuaveIO/suave.png)](https://gitter.im/SuaveIO/suave)\n\n## Integrations\n\n * https://github.com/rayokota/generator-angular-suave\n * [FsReveal](https://github.com/fsprojects/FsReveal)\n * [TodoBackendSuave](https://github.com/JonCanning/TodoBackendSuave)\n'