b'# dotnet-tools\n\nA list of tool extensions for .NET Core Command Line (dotnet CLI), aka \'.NET Core global tools\'.\n\n> **Tip:** :bulb:\n> Global tools do not need to be named "dotnet-*". This is only a convention used by some authors as a way to indicate a package is meant to be used as part of the `dotnet` command line tool, and not a standalone tool or library reference.\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>aistdoc</code></td>\n      <td>\n        <p>\n          Generates an API reference documentation for .NET and TypeScript code (based on XML Docs or TypeDoc comments) and publishes\n          it on the web.\n        </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/korzh">@korzh</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/Aistant.DocImport/">Aistant.DocImport</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>altcover</code></td>\n      <td>\n        <p>\n          Cross-platform code line and branch coverage tool-set for .net core/.net framework/mono\n        </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/SteveGilham">@SteveGilham</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/altcover.global/">altcover.global</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>altcover.visualizer</code></td>\n      <td>\n        <p>\n          Code coverage display tool to show which parts of your code _aren\'t_ being covered. Requires GTK+3\n          installed separately\n        </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/SteveGilham">@SteveGilham</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/altcover.visualizer/">altcover.visualizer</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>as-cli</code></td>\n      <td>\n        <p>\n          Use Azure Storage on CLI. Download, upload, show and more on CLI\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/peacecwz/azure-storage-cli">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/peacecwz">@peacecwz</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/azure-storage-cli/">azure-storage-cli</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>autocommit</code></td>\n      <td>\n        <p>\n          Automatically commit changes to git on a set interval, ending with a squash merge to the original head\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/StevenThuriot/GitAutoCommit">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/StevenThuriot/GitAutoCommit">@StevenThuriot</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-autocommit/">dotnet-autocommit</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>aver</code></td>\n      <td>\n        <p>\n          Dotnet tool for reading assembly information\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/mocosha/assembly-version">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/mocosha">@mocosha</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/aver/">aver</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>azure-boards-workitems</code></td>\n      <td>\n        <p>\n          Execute queries and other work item data extraction tools.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/sep/AzDevWorkItemHistory">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/jonfuller">@jonfuller</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/azure-boards-workitems/">azure-boards-workitems</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>azuresigntool</code></td>\n      <td>\n        <p>\n          Code sign your files using an Authenticode certificate stored in Azure Key Vault\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/vcsjones/AzureSignTool">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/vcsjones">@vcsjones</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/AzureSignTool/">azuresigntool</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>base64urls </code></td>\n      <td>\n        <p>\n          CLI tool for base64 & base64url encode/decode for URL applications.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/guitarrapc/Base64UrlCore">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/guitarrapc">@guitarrapc</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/base64urls/">base64urls</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>boots</code></td>\n      <td>\n        <p>\n          .NET global tool for bootstrapping vsix &amp; pkg files. Just &quot;boots https://url/to/your/package&quot;!\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/jonathanpeppers/boots">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/jonathanpeppers">@jonathanpeppers</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/boots/">boots</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>certes</code></td>\n      <td>\n        <p>\n          CLI tool for acquire certificates via the Automated Certificate Management Environment (ACME)\n          protocol. (example: LetsEncrypt.org)\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/fszlin/certes">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/fszlin">@fszlin</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-certes/">dotnet-certes</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>cleanup</code></td>\n      <td>\n        <p>\n          .NET Core Global Tool for cleaning up solution, project or folder.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/sebnilsson/DotnetCleanup">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/sebnilsson">@sebnilsson</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-cleanup/">dotnet-cleanup</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>coverlet</code></td>\n      <td>\n        <p>\n          Coverlet is a cross platform code coverage library for .NET Core, with support for line, branch and\n          method coverage.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/tonerdo/coverlet">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/tonerdo">@tonerdo</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/coverlet.console/">coverlet.console</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>csmin</code></td>\n      <td>\n        <p>\n          Fast and small utility to minify C# source. It removes whitespace and comments without\n          altering the behaviour of the code. It is fast and small because it does not need or use Roslyn. It is\n          <a href="https://www.nuget.org/packages/CSharpMinifier/">also available as a library</a>.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/atifaziz/CSharpMinifier">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/atifaziz">@atifaziz</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/CSharpMinifier/">CSharpMinifier</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>csval</code></td>\n      <td>\n        <p>\n          Utility that validates a C# source for syntax errors.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/atifaziz/CSharpSyntaxValidator">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/atifaziz">@atifaziz</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/CSharpSyntaxValidator/">CSharpSyntaxValidator</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dacpac</code></td>\n      <td>\n        <p>\n          Publish .dacpac on MS SQL Server without SSDT installed\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/GustavoAmerico/SQLServerDeploy/">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/GustavoAmerico">@gustavoamerico</a>\n        </p>\n        * Install\n        <br />\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/Dacpac.Tool/">Dacpac.Tool</a></code>\n        <br />\n        * Run\n        <br />\n        <code> dotnet dacpac publish --dacpath=C:\\artifact\\db\\ --server=mydatabase.server.contoso.com --databasenames=\'client1;client2;client3;client4\' </code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dbtool</code></td>\n      <td>\n        <p>\n          Exports database data to some commonly-used formats (XML, JSON, etc.) or imports the data in those formats back to DB.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/kedonec/Korzh.DbUtils">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/korzh">@korzh</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/Korzh.DbTool/">Korzh.DbTool</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>depguard</code></td>\n      <td>\n        <p>\n          Check your projects for use of disallowed (blacklisted) NuGet packages, including transitive references.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/christophwille/dotnet-depguard/">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/christophwille/">@christophwille</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://github.com/christophwille/dotnet-depguard/">depguard</a></code>\n      </td>\n    </tr>\t\n    <tr>\n      <td><code>dmd5</code></td>\n      <td>\n        <p>\n          Just generate MD5 hash value in CLI.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/Rwing/Dotnet.Tool.MD5">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/Rwing">@Rwing</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dmd5">dmd5</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>docker-watch</code></td>\n      <td>\n        <p>\n          A command line utility to notify docker mounted volumes about changes on Windows.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/nickvdyck/docker-watch">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/nickvdyck">@nickvdyck</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/docker-watch">docker-watch</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>docs</code></td>\n      <td>\n        <p>\n          Search <a href="https://docs.microsoft.com">docs.microsoft.com</a> using the command line.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/spboyer/dotnet-doc">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/spboyer">@spboyer</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-doc/">dotnet-doc</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-aop</code></td>\n      <td>\n        <p>\n          A tool to make AOP for .cs files for your CI pipeline.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/ignatandrei/AOP_With_Roslyn">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/ignatandrei/">@ignatandrei</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-aop">dotnet-aop</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-apim</code></td>\n      <td>\n        <p>\n          A cross-platform dotnet tool which streamlines the CI/CD process of deploying APIs into Azure API Management\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/mirsaeedi/dotnet-apim">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/mirsaeedi/">@mirsaeedi</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/Apim.DevOps.Toolkit/">dotnet-apim</a></code>\n      </td>\n    </tr>\t  \n    <tr>\n      <td><code>dotnet-aspnet-codegenerator</code></td>\n      <td>\n        <p>\n          Code generation tool for creating controllers, views, and models in ASP.NET Core projects.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/aspnet/Scaffolding">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/aspnet">@aspnet</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-aspnet-codegenerator/">dotnet-aspnet-codegenerator</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-cake</code></td>\n      <td>\n        <p>\n          A tool to run cross platform Cake build scripts.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/cake-build/cake">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/cake-build/">@cake-build</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/Cake.Tool/">Cake.Tool</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-config2json</code></td>\n      <td>\n        <p>\n          A simple tool to convert a web.config file to an appsettings.json file.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/andrewlock/dotnet-config2json">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/andrewlock/">@andrewlock</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-config2json/">dotnet-config2json</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-cowsay</code></td>\n      <td>\n        <p>\n          CLI Tool that gives a a random blog post from discoverdot.net in cowsay format.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/isaac2004/dotnet-cowsay/">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/isaac2004">@isaac2004</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-cowsay/">dotnet-cowsay</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-dbinfo</code></td>\n      <td>\n        <p>\n          A simple cross-platform command-line tool for get useful database information (in json format).\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/berkid89/dotnet-dbinfo">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/berkid89">@berkid89</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-dbinfo/">dotnet-dbinfo</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-depends</code></td>\n      <td>\n        <p>\n          Dependency explorer for .NET.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/mholo65/depends">Github</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/mholo65">@mholo65</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-depends/">dotnet-depends</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-eb</code></td>\n      <td>\n        <p>\n          Tools to deploy ASP.NET Core apps to AWS Elastic Beanstalk. Global tool started at version 3.0.0.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/aws/aws-extensions-for-dotnet-cli">Github</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/aws">@aws</a>\n        </p>\n        <code>dotnet tool install -g         <a href="https://www.nuget.org/packages/Amazon.ElasticBeanstalk.Tools/">Amazon.ElasticBeanstalk.Tools</a></code>\n        <br />\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-ecs</code></td>\n      <td>\n        <p>\n          Tools to deploy containers to Amazon Elastic Container Service functions. Global tool started at\n          version 3.0.0.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/aws/aws-extensions-for-dotnet-cli">Github</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/aws">@aws</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/Amazon.ECS.Tools/">Amazon.ECS.Tools</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-encrypto</code></td>\n      <td>\n        <p> A tool to encrypt/decrypt folder or files using AES 256 Encryption Algorithm\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/tomchavakis/encrypto">Github</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/tomchavakis">@tomchavakis</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-encrypto">dotnet-encrypto</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-fm</code></td>\n      <td>\n        <p>\n          FluentMigrator: Is a database migration framework for .NET much like Ruby on Rails Migrations.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://fluentmigrator.github.io/articles/runners/dotnet-fm.html">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/fluentmigrator">@FluentMigrator</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/FluentMigrator.DotNet.Cli/">FluentMigrator.DotNet.Cli</a></code>\n      </td>\n    </tr>\n<tr>\n    <td><code>dotnet-format</code></td>\n    <td>\n        <p>\n            <code>dotnet-format</code> is a code formatter for <code>dotnet</code> that applies style preferences to a project or solution. Preferences will be read from an <code>.editorconfig</code> file, if present, otherwise a default set of preferences will be used.\n        </p>\n        <p>\n            <strong>Project site:</strong> <a href="https://github.com/dotnet/format">GitHub</a>\n            <br />\n            <strong>Author:</strong> <a href="https://github.com/dotnet">@dotnet</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-format/">dotnet-format</a></code>\n    </td>\n</tr>\n    <tr>\n      <td><code>dotnet-fsharplint</code></td>\n      <td>\n        <p>\n          Lint tool for F#.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/fsprojects/FSharpLint">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/fsprojects">@fsprojects</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-fsharplint/">dotnet-fsharplint</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-giio</code></td>\n      <td>\n        <p>\n          A .NET global tool to create useful .gitignore files for your project using gitignore.io\n        </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/liammoat">@liammoat</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-giio/">dotnet-giio</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-gitreleasemanager</code></td>\n      <td>\n        <p>\n          Tool for creating and exporting releases for software applications hosted on Github </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/GitTools">@GitTools</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/GitReleaseManager.Tool">GitReleaseManager.Tool</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-gitversion</code></td>\n      <td>\n        <p>\n          Easy Semantic Versioning (http://semver.org) for projects using Git.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/GitTools/GitVersion">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/GitTools">@GitTools</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/GitVersion.Tool">GitVersion.Tool</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-hash</code></td>\n      <td>\n        <p>\n          A simple dotnet tool to calculate hashes for the given file.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/TheBlueSky/dotnet-hash">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/TheBlueSky">@TheBlueSky</a>\n        </p>\n        <code>dotnet tool install -g         <a href="https://www.nuget.org/packages/TheBlueSky.DotNet.Tools.SwiftHash/">TheBlueSky.DotNet.Tools.SwiftHash</a></code>\n        <br />\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-ignore</code></td>\n      <td>\n        <p>\n          Global .NET Core tool that can download .gitignore file from github gitignore repository.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/Arasz/dotnet-ignore">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/Arasz">@Arasz</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-ignore/">dotnet-ignore</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-imgup</code></td>\n      <td>\n        <p>\n          Global .NET Core tool to upload images on disk to <a href="https://imgur.com">imgur</a>.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/rohith/dotnet-imgup">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/rohith">@rohith</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-imgup/">dotnet-imgup</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-install</code></td>\n      <td>\n        <p>\n          Provides capabilities for installing a .NET Core shared runtime.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/jaurenq/QB.DotNetCoreInstaller">Github</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/jaurenq">@jaurenq</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/QB.DotNetCoreInstaller/">QB.DotNetCoreInstaller</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-lambda</code></td>\n      <td>\n        <p>\n          Tools to deploy AWS Lambda functions. Global tool started at version 3.0.0.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/aws/aws-extensions-for-dotnet-cli">Github</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/aws">@aws</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/Amazon.Lambda.Tools/">Amazon.Lambda.Tools</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-migrate-2017</code></td>\n      <td>\n        <p>\n          Tool for converting a MSBuild project file (`csproj`) to VS2017 format and beyond.\n        </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/hvanbakel">@hvanbakel</a>\n        </p>\n        <code>dotnet tool install -g         <a href="https://www.nuget.org/packages/Project2015To2017.Migrate2017.Tool">Project2015To2017.Migrate2017.Tool</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-namechk</code></td>\n      <td>\n        <p>\n          Global .NET Core tool to check for the availability of package names on <a href="https://nuget.org">NuGet</a>\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/rohith/dotnet-namechk">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/rohith">@rohith</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://nuget.org/packages/dotnet-namechk">dotnet-namechk</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-nuget-gc</code></td>\n      <td>\n        <p>\n          A tool for cleaning the NuGet cache.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/terrajobst/dotnet-nuget-gc">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/terrajobst">@terrajobst</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://nuget.org/packages/dotnet-nuget-gc">dotnet-nuget-gc</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-obfuscar</code></td>\n      <td>\n        <p>\n          A .NET Core global tool to obfuscate assemblies.\n        </p>\n        <p>\n\t  <strong>Project site:</strong> <a href="https://github.com/obfuscar/obfuscar">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/lextm">@lextm</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/Obfuscar.GlobalTool/">Obfuscar.GlobalTool</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-octo</code></td>\n      <td>\n        <p>\n          A .NET Core tool for octo.exe. This lets you install Octo onto a machine or build agent as long as you have the .NET Core 2.1.300 SDK available.\n        </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/OctopusDeploy">@OctopusDeploy</a>\n        </p>\n\t<p>\n\tBecause it is common to install octo.exe in the cloud, you\'ll likely want to install it in a specific non-OS volume and on the version of Octopus Deploy you currently support:\n\t</p>\n        <code>dotnet tool install <a href="https://www.nuget.org/packages/Octopus.DotNet.Cli/">Octopus.DotNet.Cli</a> --tool-path /path/for/tool --version &lt;version&gt;</code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-outdated</code></td>\n      <td>\n        <p>\n          A .NET Core global tool to display outdated NuGet packages in a project.\n        </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/jerriep">@jerriep</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-outdated/">dotnet-outdated</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-pr</code></td>\n      <td>\n        <p>\n          .NET Core command-line (CLI) tool to open the browser in pull request mode for the code collaboration tool (GitHub, GitLab, Bitbucket++) connected to the current checked out branch (fetched via the git remote and/or tracking branch).\n        </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/johnkors">@johnkors</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-pr">dotnet-pr</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-project-licenses</code></td>\n      <td>\n        <p>\n          .NET Core tool to get the licenses of a project.\n        </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/tomchavakis">@tomchavakis</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-project-licenses">dotnet-project-licenses</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-property</code></td>\n      <td>\n        <p>\n          .NET Core command-line (CLI) tool to update project properties and version numbers on build.\n        </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/loresoft">@pwelter34</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-property">dotnet-property</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-retire</code></td>\n      <td>\n        <p>\n          A dotnet CLI extension to check your project for known vulnerabilities.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/retirenet/dotnet-retire">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/johnkors">@johnkors</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-retire">dotnet-retire</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-runas</code></td>\n      <td>\n        <p>\n          Allows to run a dotnet process under a specified user account.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/JetBrains/runAs">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/NikolayPianikov">@NikolayPianikov</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-runas">dotnet-runas</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-script</code></td>\n      <td>\n        <p>\n          Run C# scripts from the .NET CLI.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/filipw/dotnet-script">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/filipw">@filipw</a> <a href="https://github.com/seesharper">@seesharper</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-script/">dotnet-script</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-sdk</code></td>\n      <td>\n        <p>\n          Manage .NET Core SDKs.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/jonstodle/DotNetSdkHelpers">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/jonstodle">@jonstodle</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/DotNetSdkHelpers/">DotNetSdkHelpers</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-search</code></td>\n      <td>\n        <p>\n          Search for Nuget packages using the .NET Core CLI.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/billpratt/dotnet-search">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/billpratt">@billpratt</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-search/">dotnet-search</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-serve</code></td>\n      <td>\n        <p>\n          A simple command line HTTP server, no code required.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/natemcmaster/dotnet-serve">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/natemcmaster">@natemcmaster</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-serve/">dotnet-serve</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-server</code></td>\n      <td>\n        <p>\n          A configurable local http server to "mock" or fake responses from down stream services.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/joro550/dotnet-server">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/joro550">@joro550</a>\n        </p>\n        <code>dotnet tool install --g <a href="https://www.nuget.org/packages/DotNetSimpleServer/">DotNetSimpleServer</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-snow</code></td>\n      <td>\n        <p>\n          Avalonia-based cross-platform graphical snow demo.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/ptupitsyn/let-it-snow">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/ptupitsyn">@ptupitsyn</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-snow/">dotnet-snow</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-sonarscanner</code></td>\n      <td>\n        <p>\n          The SonarScanner for MSBuild is the recommended way to launch a SonarQube or SonarCloud analysis\n          for projects/solutions using dotnet command as build tool.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/SonarSource/sonar-scanner-msbuild">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/SonarSource">@SonarSource</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-sonarscanner">dotnet-sonarscanner</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-sqldb</code></td>\n      <td>\n        <p>\n          Using DbUp, to apply migration scripts etc. against a SQL-Server database.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/danielwertheim/dotnet-sqldb">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/danielwertheim">@danielwertheim</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-sqldb">dotnet-sqldb</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-sshdeploy</code></td>\n      <td>\n        <p>\n          A dotnet CLI command that enables quick deployments over SSH.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/unosquare/sshdeploy">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/unosquare">@Unosquare</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-sshdeploy">dotnet-sshdeploy</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-symbol</code></td>\n      <td>\n        <p>\n          Symbols download utility.\n        </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/microsoft">@microsoft</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-symbol/">dotnet-symbol</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-thx</code></td>\n      <td>\n        <p>\n          Find authors of packages you are using in you project and visit their GitHub.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/KrystianKolad/DotnetThx">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/KrystianKolad">@krystiankolad</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/DotnetThx">DotnetThx</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-try</code></td>\n      <td>\n        <p>\n          Try.NET Global Tool: interactive in-browser documentation and workshop creator\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://dotnet.microsoft.com/platform/try-dotnet">Try .NET</a>\n          <br />\n          <strong>Source Code:</strong><a href="https://github.com/dotnet/try">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/dotnet">@dotnet (organization)</a>\n        </p>\n        <code>dotnet tool install --global <a href="https://www.nuget.org/packages/dotnet-try/">dotnet-try</a></code>\n        <h3>Using dotnet-try</h3>\n        <p>\n          <code>git clone https://github.com/dotnet/try -b samples</code>\n          <code>dotnet try</code>\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-ups</code></td>\n      <td>\n        <p>\n          Synchronize sln folder structure to physical folders also fixing project references.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/floatas/UPS">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/floatas">@Floatas</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-ups">dotnet-ups</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-version</code></td>\n      <td>\n        <p>\n          A simple tool to update the version number of your project. If you know of yarn version, this is that for .NET.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/Jon-Indico/DotnetVersion">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/Jon-Indico">@Jon-Indico</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/DotnetVersion/">DotnetVersion</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-warp</code></td>\n      <td>\n        <p>\n          A .NET Core global tool to pack project into single executable using Warp.\n        </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/Hubert-Rybak">@Hubert-Rybak</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-warp/">dotnet-warp</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnet-xdt</code></td>\n      <td>\n        <p>\n          Toolbox for applying XML Document Transformations to .NET configuration files, or any other\n          XML-structured content. Includes a .NET Core global tool, a .NET Standard library with no\n          external dependencies, and a standalone .NET 4.6+ executable.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/nil4/dotnet-transform-xdt">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/nil4">@nil4</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-xdt/">dotnet-xdt</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>dotnetrsa</code></td>\n      <td>\n        <p>\n          Generate rsa pkcs1, pkcs8, xml format key. Conversion between the three formats.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/stulzq/DotnetRSA">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/stulzq">@stulzq</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnetrsa">dotnetrsa</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>efg</code></td>\n      <td>\n        <p>\n          .NET Core command-line (CLI) tool to generate Entity Framework Core model from an existing\n          database.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/loresoft/EntityFrameworkCore.Generator">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/loresoft">@pwelter34</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/EntityFrameworkCore.Generator">EntityFrameworkCore.Generator</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>fake</code></td>\n      <td>\n        <p>\n          F# MAKE 5 - A DSL FOR BUILD TASKS AND MORE.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/fsharp/Fake">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/fsharp">@fsharp</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/fake-cli/">fake-cli</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>file-sort</code></td>\n      <td>\n        <p> A tool to organize files in folders based by date.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/thewindev/FileSort">Github</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/thewindev">@thewindev</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/file-sort/">file-sort</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>findref</code></td>\n      <td>\n        <p> Find which assemblies in a folder whom are referencing a given assembly\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/henrihs/findref">Github</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/henrihs">@henrihs</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/findref/">findref</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>flubu</code></td>\n      <td>\n        <p>\n          Fluent Builder. A cross platform build automation tool for building projects and executing\n          deployment\n          scripts using C# code.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/flubu-core/flubu.core">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/flubu-core">@FlubuCore</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/FlubuCore.GlobalTool">FlubuCore.GlobalTool</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>ghi</code></td>\n      <td>\n        <p>\n          A simple command-line client for managing GitHub Issues.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/jerriep/github-issues-cli">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/jerriep">@jerriep</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/github-issues-cli/">github-issues-cli</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>giphy</code></td>\n      <td>\n        <p>\n          Find that giphy fast and just copy the url or markdown.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/DavidDeSloovere/giphy-cli">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/DavidDeSloovere">@DavidDeSloovere</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/GiphyCli/">GiphyCli</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>git-browse</code></td>\n      <td>\n        <p>\n          Open the GitHub page or website for a repository in your browser.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/nickvdyck/git-browse">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/nickvdyck">@nickvdyck</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/git-browse">git-browse</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>git-flow-version</code></td>\n      <td>\n        <p>\n          Create predictable and opinionated SemVer 2.0.0 version numbers for git flow repositories.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/hightechict/DashDashVersion">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/hightechict">@hightechict</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/git-flow-version">git-flow-version</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>git-istage</code></td>\n      <td>\n        <p> A better git add -p.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/terrajobst/git-istage">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/terrajobst">@terrajobst</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://nuget.org/packages/git-istage">git-istage</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>git-rocket-filter</code></td>\n      <td>\n        <p>\n          A powerful and faster version of git-filter-branch using C# Roslyn scripting to rewrite/filter commits.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/xoofx/git-rocket-filter">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/xoofx">@xoofx</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/git-rocket-filter/">git-rocket-filter</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>git-status</code></td>\n      <td>\n        <p>\n          A simple command-line utility to determine status of all Git repositories in a directory structure.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/jerriep/git-status-cli">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/jerriep">@jerriep</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/git-status-cli/">git-status-cli</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>gitchanges</code></td>\n      <td>\n        <p>\n          Generate changelogs from git history.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/bzumhagen/dotnet-gitchanges">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/bzumhagen">@bzumhagen</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-gitchanges">dotnet-gitchanges</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>gitcoauth</code></td>\n      <td>\n        <p>\n          GitCoAuth: simple co-authorship commit line generator for Git commit messages.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/LorenzCK/github-coauth-tool">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/LorenzCK">@LorenzCK</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-gitcoauth">dotnet-gitcoauth</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>GitHubMarkdownSnippets</code></td>\n      <td>\n        <p>\n          A utility for merging snippets into GitHub markdown document.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/SimonCropp/MarkdownSnippets#markdownsnippetstool">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/SimonCropp">@SimonCropp</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/MarkdownSnippets.Tool/">MarkdownSnippets.Tool</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>gti</code></td>\n      <td>\n        <p>\n          Global tool for installing .Net Global tools from a tools.gti file.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/shaun-h/gti">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/shaun-h">@shaun-h</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/gti/">gti</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>guid</code></td>\n      <td>\n        <p>\n          .NET Core Global Tool for creating GUIDs/UUIDs.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/sebnilsson/DotnetGuid">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/sebnilsson">@sebnilsson</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-guid/">dotnet-guid</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>html-copy-vscode</code></td>\n      <td>\n        <p>\n          A global tool to convert snippets copied from VS Code into plain html to paste into your blog.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/slang25/html-copy-vscode">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/slang25/">@slang25</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/HtmlCopyVSCode/">HtmlCopyVSCode</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>idgen</code></td>\n      <td>\n        <p>\n          idgen supports the bulk generation of various types of unique identifiers.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/abock/idgen">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/abock">@abock</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/IdentifierGenerator/">IdentifierGenerator</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>ilspycmd</code></td>\n      <td>\n        <p>\n          A tool for decompiling .NET assemblies and generating portable PDBs\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/icsharpcode/ILSpy/tree/master/ICSharpCode.Decompiler.Console">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/icsharpcode/ILSpy/">@ilspy</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/ilspycmd/">ilspycmd</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>installsdk</code></td>\n      <td>\n        <p>\n            A global tool for downloading and installing .NET Core SDKs based on a global.json files.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/JosephWoodward/InstallSdkGlobalTool">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/JosephWoodward">@josephwoodward</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/InstallSdkGlobalTool/">InstallSdkGlobalTool</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>json2yaml</code></td>\n      <td>\n        <p>\n          A tool for converting json to yaml. Supports piping.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://gitlab.com/joostas/json-2-yaml">GitLab</a>\n          <br />\n          <strong>Author:</strong> <a href="https://gitlab.com/joostas">@joostas</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/json2yaml/">json2yaml</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>kubedmc</code></td>\n      <td>\n        <p>\n          Navigate into your favorite Kubernetes cluster with one finger!\n        </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/Mimetis">@mimetis</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/KubeDmc/">kubedmc</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>libman</code></td>\n      <td>\n        <p>\n          LibMan is a tool that helps you download common libraries from the Internet to use in your web\n          project.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/aspnet/LibraryManager/wiki/Using-LibMan-CLI">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/aspnet">@aspnet</a>\n        </p>\n        <code>dotnet tool install -g         <a href="https://www.nuget.org/packages/Microsoft.Web.LibraryManager.CLI">Microsoft.Web.LibraryManager.CLI</a></code>\n        <br />\n      </td>\n    </tr>\n    <tr>\n      <td><code>LocalAppVeyor</code></td>\n      <td>\n        <p>\n          .NET Core global tool which brings appveyor.yml to the center of your build process by making\n          possible to execute its build jobs, locally.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/joaope/localappveyor">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/joaope">@joaope</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/localappveyor">localappveyor</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>mddox</code></td>\n      <td>\n        <p>\n          A simple markdown documentation generator using reflection and XML comments.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/loxsmoke/mddox">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/loxsmoke">@loxsmoke</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/LoxSmoke.mddox">loxsmoke.mddox</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>minimig</code></td>\n      <td>\n        <p>\n          A forward-only database migration tool.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/Jaxelr/Minimig">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/jaxelr">@jaxelr</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/minimig">minimig</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>minver-cli</code></td>\n      <td>\n        <p>\n          A minimalistic command line tool for versioning any Git repository using tags.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/adamralph/minver">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/adamralph">@adamralph</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/minver-cli">minver-cli</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>nanoff</code></td>\n      <td>\n        <p>\n          A .NET Core Tool to update the firmware of nanoFramework devices. It can also backup the firmware, deployment and be used in production environment.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/nanoframework/nanoFirmwareFlasher">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/nanoframework">@AArnott</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/nanoFirmwareFlasher/">nanoFirmwareFlasher</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>nbgv</code></td>\n      <td>\n        <p>\n          A .NET Core Tool that can install, read and set version information based on git history, using\n          Nerdbank.GitVersioning.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/aarnott/Nerdbank.GitVersioning">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/AArnott">@AArnott</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/nbgv/">nbgv</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>ndjson</code></td>\n      <td>\n        <p>\n          A dotnet cli tool for printing newline delimited json to console.\n        </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/fredeil">@fredeil</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/ndjson/">ndjson</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>nuget-deploy</code></td>\n      <td>\n        <p>\n          Restore NuGet package if needed, and deploy it in a specified folder, by copying assemblies of the\n          NuGet dependencies, or by generating appropriate `.deps.json` and `.runtimeconfig.json` files </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/stazz/NuGetUtils/tree/develop/Source/NuGetUtils.Tool.Deploy">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/stazz">@stazz</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/NuGetUtils.Tool.Deploy/">NuGetUtils.Tool.Deploy</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>nuget-exec</code></td>\n      <td>\n        <p>\n          Restore NuGet package if needed, and execute a method within its assembly, loading dependencies as\n          needed on-the-fly. Custom method parameter types are also supported.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/stazz/NuGetUtils/tree/develop/Source/NuGetUtils.Tool.Exec">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/stazz">@stazz</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/NuGetUtils.Tool.Exec/">NuGetUtils.Tool.Exec</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>nuget-restore</code></td>\n      <td>\n        <p>\n          Restore one or more NuGet package, if needed.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/stazz/NuGetUtils/tree/develop/Source/NuGetUtils.Tool.Restore">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/stazz">@stazz</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/NuGetUtils.Tool.Restore/">NuGetUtils.Tool.Restore</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>NuGetKeyVaultSignTool</code></td>\n      <td>\n        <p>\n          Code sign your .nupkg files using an Authenticode certificate stored in Azure Key Vault\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/onovotny/NuGetKeyVaultSignTool">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/onovotny">@onovotny</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/NuGetKeyVaultSignTool/">NuGetKeyVaultSignTool</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>nuke</code></td>\n      <td>\n        <p>\n          Run and setup NUKE builds with a single command on any platform :rocket:\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/nuke-build/nuke">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/nuke-build">@nuke-build</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/Nuke.GlobalTool">Nuke.GlobalTool</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>NukedBit.NRepo</code></td>\n      <td>\n        <p>\n          .NET Core Global Tool for simplifying repository creation with good defaults.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/nukedbit/nrepo">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/nukedbit">@nukedbit</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/NukedBit.NRepo">NukedBit.NRepo</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>NuKeeper</code></td>\n      <td>\n        <p>\n          Find outdated NuGet packages and apply updates to them.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/NuKeeperDotNet/NuKeeper">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/anthonysteele">@AnthonySteele</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/NuKeeper">NuKeeper</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>nyancat</code></td>\n      <td>\n        <p>\n          Nyancat \xf0\x9f\x98\xbb in your terminal, rendered through ANSI escape sequences. A port of the original\n          terminal application to make this cat run on dotnet core. \xf0\x9f\x90\xb1\xe2\x80\x8d\xf0\x9f\x8f\x8d\n        </p>\n        <p>\n          <strong>Author:</strong> <a href="https://github.com/nickvdyck">@nickvdyck</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/nyancat/">nyancat</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>omnia-cli</code></td>\n      <td>\n        <p>\n          A cli tool for interacting with OMNIA Low-code REST API.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/omnialowcode/omnia-cli">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/omnialowcode/">@OMNIA Low-code</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/Omnia.CLI/">Omnia.CLI</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>otterkeys</code></td>\n      <td>\n        <p>\n          Quickly create Ed25519 key pairs for signing and verifying messages or other data.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/miqo-no/OtterKeys">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/natsuo">@natsuo</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/OtterKeys">OtterKeys</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>p2u</code></td>\n      <td>\n        <p>\n          Paste text content with Unix-like line terminations into Windows Terminal without extra line wrapping. Even into Cmd or Vim.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/celsojr/p2u">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/celsojr">@celsojr</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/p2u">p2u</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>pbm</code></td>\n      <td>\n        <p>\n          <a href="https://cmd.petabridge.com/">Petabridge.Cmd CLI</a> for managing <a href="http://getakka.net/">Akka.NET</a>\n          applications and clusters\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/petabridge/petabridge.cmd-issues">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://cmd.petabridge.com/">@petabridge</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/pbm/">pbm</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>protogen</code></td>\n      <td>\n        <p>\n          protobuf-net code-generation from .proto schema files.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/mgravell/protobuf-net">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/mgravell">@mgravell</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/protobuf-net.Protogen/">protobuf-net.Protogen</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>pwsh</code></td>\n      <td>\n        <p>\n          PowerShell Core global tool.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/PowerShell/PowerShell">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/PowerShell">@PowerShell</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/PowerShell/">PowerShell</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>recolor</code></td>\n      <td>\n        <p>\n        Colors regex matches on STDIN lines\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/atifaziz/recolor">Github</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/atifaziz">@atifaziz</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/Recolor/">recolor</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>reportgenerator</code></td>\n      <td>\n        <p>\n          ReportGenerator converts XML reports generated by OpenCover, PartCover, dotCover, Visual Studio,\n          NCover or Cobertura into human readable reports in various formats.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/danielpalme/ReportGenerator/">GitHub</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-reportgenerator-globaltool">dotnet-reportgenerator-globaltool</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>rider</code></td>\n      <td>\n        <p>\n          **Windows only** Adds a `rider` command to launch JetBrains Rider when it\'s installed via\n          <a href="https://jetbrains.com/toolbox/">Toolbox</a>.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/RendleLabs/dotnet-rider-cli/">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/markrendle">@markrendle</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-rider-cli">dotnet-rider-cli</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>rimraf</code></td>\n      <td>\n        <p>\n          rimraf as a .NET Core Global Tool.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/dotnet-tool/rimraf/">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/DoCode">@DoCode</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-rimraf">dotnet-rimraf</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>sbmgr</code></td>\n      <td>\n        <p>\n          Azure servicebus message manager. List, send, resend and delete messages on servicebus queues or topics\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/thonhotels/message-manager">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://www.thonhotels.no">Thon Hotels</a> / <a href="https://novanet.no">Novanet</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/message-manager">message-manager</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>sharpfuzz</code></td>\n      <td>\n        <p>\n          Command line tool for SharpFuzz instrumentation.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/Metalnem/sharpfuzz">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/Metalnem">@Metalnem</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/SharpFuzz.CommandLine/">SharpFuzz.CommandLine</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>sleet</code></td>\n      <td>\n        <p>\n          A static NuGet feed generator.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/emgarten/Sleet">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/emgarten">@emgarten</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/Sleet/">Sleet</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>speech</code></td>\n      <td>\n        <p>\n          Unofficial Azure Speech CLI - manage acoustic datasets, models, endpoints, transcriptions and more.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/msimecek/Azure-Speech-CLI">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/msimecek">@msimecek</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/azurespeechcli/">AzureSpeechCLI</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>srihash</code></td>\n      <td>\n        <p>\n          Generates the SRI hash for <code>&lt;script&gt;</code> tags in browsers.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/natemcmaster/srihash-cli">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/natemcmaster">@natemcmaster</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/srihash-cli">srihash-cli</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>sysinfo</code></td>\n      <td>\n        <p>\n          Outputs system information.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/markpflug/Elemental.SysInfoTool">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/markpflug">@markpflug</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/Elemental.SysInfoTool/">Elemental.SysInfoTool</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>t4</code></td>\n      <td>\n        <p>\n          T4 text template processor.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/mono/t4">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/mhutch">@mhutch</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-t4/">dotnet-t4</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>tcpmux</code></td>\n      <td>\n        <p>\n          TCP Multiplexer; provide simple routing of TCP traffic as well as SSL re-encryption and\n          off-loading.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/nicodeslandes/TcpMux">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/nicodeslandes">@nicodeslandes</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/TcpMux/">TcpMux</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>templateversions</code></td>\n      <td>\n        <p>\n          Lists all the versions of dotnet core SDKs in your user template directory and the global tools for each version.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/VictorioBerra/TemplateVersions.Tool">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/VictorioBerra">@VictorioBerra</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/TemplateVersions.Tool/">TemplateVersions.Tool</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>todo</code></td>\n      <td>\n        <p>\n          The simple, powerfull and extensible Todo List app in your terminal.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/ivanpaulovich/todo">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/ivanpaulovich">@ivanpaulovich</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/todo">todo</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>trx2junit</code></td>\n      <td>\n        <p>\n          Transforms XML from trx-Testresults to JUnit-Testresults / trx to JUnit XML.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/gfoidl/trx2junit">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/gfoidl">@gfoidl</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/trx2junit/">trx2junit</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>tus</code></td>\n      <td>\n        <p>\n          A cli tool for interacting with a Tus enabled server.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/Jon-Indico/TusCli">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/Jon-Indico">@Jon-Indico</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/TusCli/">TusCli</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>unpkg</code></td>\n      <td>\n        <p>\n          Front-end package manager that uses the <a href="https://unpkg.com">unpkg.com</a> CDN as a source.\n          No Node.js, NPM or Bower required.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/RendleLabs/dotnet-unpkg">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/markrendle">@markrendle</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/RendleLabs.UnpkgCli">RendleLabs.UnpkgCli</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>upforgrabs</code></td>\n      <td>\n        <p>\n          A tool to select a random .NET Open Source project/issue tagged with "up-for-grabs","firsttimer",\n          etc.\n          to work on.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/spboyer/dotnet-upforgrabs">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/spboyer">@spboyer</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/upforgrabs">upforgrabs</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>versioninfo</code></td>\n      <td>\n        <p>\n          Display version information of .NET Core assemblies.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/taylorjg/dotnet-versioninfo">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/taylorjg">@taylorjg</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-versioninfo/">dotnet-versioninfo</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>weeknumber</code></td>\n      <td>\n        <p>\n          Prints the current weeknumber to the command line.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/MarkusLund/weeknumber">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/MarkusLund">@MarkusLund</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/weeknumber/">weeknumber</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>WhiteSpaceWarrior</code></td>\n      <td>\n        <p>\n           Removes all the stuff you get annoyed about when you speed-read code, such as empty lines, empty comments, and short meaningles comments.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/kbilsted/WhitespaceWarrior">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/kbilsted">@kbilsted</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/WhiteSpaceWarrior/">WhiteSpaceWarrior</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>xscgen</code></td>\n      <td>\n        <p>\n          Generate XmlSerializer compatible C# classes from XML Schema files.\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/mganss/XmlSchemaClassGenerator">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/mganss">@mganss</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.nuget.org/packages/dotnet-xscgen/">dotnet-xscgen</a></code>\n      </td>\n    </tr>\n    <tr>\n      <td><code>xunit</code></td>\n      <td>\n        <p>\n          Console tool for running xUnit.net tests\n        </p>\n        <p>\n          <strong>Project site:</strong> <a href="https://github.com/natemcmaster/xunit-cli">GitHub</a>\n          <br />\n          <strong>Author:</strong> <a href="https://github.com/natemcmaster">@natemcmaster</a>\n        </p>\n        <code>dotnet tool install -g <a href="https://www.myget.org/feed/natemcmaster/package/nuget/xunit-cli">xunit-cli</a> --add-source https://www.myget.org/F/natemcmaster/api/v3/index.json</code>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- Contributors: when adding a new item to the list, please help me keep this list sorted by command name in alphabetical order. Thanks! -->\n'