b'# ACMESharp\n\nAn [ACME](https://github.com/letsencrypt/acme-spec) client library and PowerShell client for the .NET platform.\n\n---\n\n> Interested in **ACME v2** or **.NET Standard** support?  Check out **[ACMESharp Core](https://github.com/PKISharp/ACMESharpCore)!**\n\n---\n\nJump To:\n* [Overview](#overview)\n* [Quick Start](https://github.com/ebekker/ACMESharp/wiki/Quick-Start)\n* [Build Status](#build-status)\n* [Downloads](#downloads)\n* [Current State](#current-state)\n* [Related Links](#related-links)\n\n---\n\n**For NEW Documentation for the v0.9.x releases, please see the [new documentation](https://pkisharp.github.io/ACMESharp-docs/)**\n\nFor OLD documentation and getting started, go to the [wiki](https://github.com/ebekker/ACMESharp/wiki).\n\nAlso, see the the [FAQ](https://github.com/ebekker/ACMESharp/wiki/FAQ).\n\nFor announcements and discussions please see one of these:\n\n| | |\n|-|-|\n| [![Join the chat at https://gitter.im/ebekker/letsencrypt-win](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/ebekker/letsencrypt-win?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) | by Gitter |\n| [![Join the forums at http://groups.google.com/group/acmesharp](https://img.shields.io/badge/forums-join_group-4FB999.svg)](http://groups.google.com/group/acmesharp) | by Google Groups |\n\n\n## Overview\n\nThis project implements a *client library* and *PowerShell client* for the ACME protocol.\n* ACMESharp is interoperable with the [CA server](https://github.com/letsencrypt/boulder) used by the [Let\'s Encrypt](https://letsencrypt.org/) project which is the reference implementation for the server-side ACME protocol.\n* ACMESharp includes features comparable to the official Let\'s Encrypt [client](https://github.com/letsencrypt/letsencrypt) which is the reference implementation for the client-side ACME protocol.\n\nThe ACMESharp client implementation is broken up into layers that build upon each other:\n* basic tools and services required for implementing the ACME protocol and its semantics (JSON Web Signature (JWS), PKI operations, client-side persistence)\n* low-level ACME protocol client library that can interoperate with a compliant ACME server\n* PowerShell module that implements a powerful client, that functions equally well as a manual tool or a component of a larger automation process, for managing ACME Registrations, Identifiers and Certificates\n* collection of *Provider* extensions that implement Challenge Handlers and Installers for various servers/services.\n\nSome of the Providers available for handling ACME challenges and installing certificates include:\n* Microsoft IIS 7.0+\n* Microsoft Windows (Cert Store, DNS)\n* AWS (S3, Route 53, ELB, IAM)\n* CloudFlare\n\n## Build Status\n\n| | |\n|-|-|\n| [![Build status](https://ci.appveyor.com/api/projects/status/0knwrhni528xi2rs?svg=true)](https://ci.appveyor.com/project/ebekker/acmesharp) | <a href="https://scan.coverity.com/projects/acmesharp"><img alt="Coverity Scan Build Status" src="https://scan.coverity.com/projects/7030/badge.svg"/></a> |\n\n| PS3 | PS4 | PS5 |\n|-|-|-|\n| [![PS3 Test Status](https://build.powershell.org/app/rest/builds/buildType:\\(id:ACMESharp_InstallTestOnPs3\\)/statusIcon.svg)](https://build.powershell.org/externalStatus.html?projectId=ACMESharp) | [![PS4 Test Status](https://build.powershell.org/app/rest/builds/buildType:\\(id:ACMESharp_InstallTestOnPs4\\)/statusIcon.svg)](https://build.powershell.org/externalStatus.html?projectId=ACMESharp) | [![PS5 Test Status](https://build.powershell.org/app/rest/builds/buildType:\\(id:ACMESharp_InstallTestOnPs5\\)/statusIcon.svg)](https://build.powershell.org/externalStatus.html?projectId=ACMESharp) |\n\n## Downloads\n\n### ACMESharp PowerShell Client Modules\n\n* **If you just want to use ACMESharp to request and install certificates**,\nthen you want the *ACMESharp PowerShell client*.\n\n* See the\n[instructions](https://github.com/ebekker/ACMESharp/wiki/%5BWIP%5D-Installation:-ACMESharp-PowerShell-client)\nfor installing the PowerShell client and the list of available\n[modules](https://github.com/ebekker/ACMESharp/wiki/%5BWIP%5D-Downloads:-PowerShell-Modules).\n\n### ACMESharp NuGet Packages\n\n* **If you are a developer** who wants to embed ACMESharp client libraries in your\nown projects or want to develop extensions for ACMESharp, see the list of available\n[NuGet Packages](https://github.com/ebekker/ACMESharp/wiki/%5BWIP%5D-Downloads:-NuGet-Packages).\n\n---\n\n## Current State\n\nThis client is fully operable and can successfully interact with the Let\'s Encrypt production and staging servers to:\n* Initialize new Registrations\n* Authorize DNS Identifiers\n* Issue Certificates\n\nFurther, it can successfully install and configure the certificate and related SSL/TLS settings for various local (e.g. IIS, Cert Store) or remote (e.g. AWS, CloudFlare) servers or services.\n\n*All documentation is still work-in-progress.*\n\n## Quick Start\n\nYou can find an example of how to get started quickly [here](https://github.com/ebekker/ACMESharp/wiki/Quick-Start).\n\n---\n\n## Related Links\n\nCheck out these other related projects and resources:\n* For a great intro and overview of Let\'s Encrypt, ACME and related tech, check out this [Changelog podcast](https://changelog.com/podcast/243) with [Jacob Hoffman-Andrews](https://github.com/jsha), the lead developer of LE\n* An [alternative simple ACME client for Windows](https://github.com/Lone-Coder/letsencrypt-win-simple) which features:\n  * simple usage for common scenarios\n  * IIS support\n  * automatic renewals\n* A [GUI interface](https://github.com/webprofusion/Certify) to this project\'s PowerShell module\n* The official [python ACME client](https://github.com/letsencrypt/letsencrypt) of the [Let\'s Encrypt] project\n* The [ACME specification](https://github.com/ietf-wg-acme/acme) which brings this all together (under development)\n* See other [contributions](https://github.com/ebekker/ACMESharp/wiki/Contributions)\n\nThis ACME client is being developed against the [Boulder CA](https://github.com/letsencrypt/boulder) ACME server reference implementation.  See how to [quickly spin up your own instance](https://github.com/ebekker/ACMESharp/wiki/Setup-Boulder-CA-on-Amazon-Linux) in AWS on an **Amazon Linux AMI**.\n\n---\n\n*Please note, this project was formerly named* **`letsencrypt-win`**.\n'