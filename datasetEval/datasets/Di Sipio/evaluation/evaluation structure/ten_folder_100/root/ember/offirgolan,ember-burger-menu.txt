b'# Ember Burger Menu\n\n[![Ember Version](https://embadge.io/v1/badge.svg?start=2.3.0)](https://embadge.io/v1/badge.svg?start=2.3.0)\n[![Build Status](https://travis-ci.org/offirgolan/ember-burger-menu.svg?branch=master)](https://travis-ci.org/offirgolan/ember-burger-menu)\n[![npm version](https://badge.fury.io/js/ember-burger-menu.svg)](http://badge.fury.io/js/ember-burger-menu)\n\nAn off-canvas sidebar component with a collection of animations and styles using CSS transitions\n\n## Features\n\n- Easy to use & setup off-canvas menu\n- Mix and match from many menu & menu item animations\n- Swipe gesture support with changeable thresholds\n- Easily create your own animations\n\n## Installation\n\n```\nember install ember-burger-menu\n```\n\n### Sass\n\nInstalling ember-burger-menu should also install ember-cli-sass and automatically create a scss file under `app/styles/app.scss` with\n\n```sass\n// app/styles/app.scss\n\n@import \'ember-burger-menu\';\n```\n\n#### Overriding Variables\n\nUsing sass, you can override default variables and easily change the default behavior of ember-burger-menu.\nSee [variables.scss](app/styles/ember-burger-menu/variables.scss) for a list of variables you can change.\n\n```sass\n// app/styles/app.scss\n\n// Burger Menu Overrides\n$bm-transition-duration: 0.3s;\n$bm-overlay-background: rgba(0, 0, 0, 0.7);\n\n// Import all the styles!\n@import \'ember-burger-menu\';\n```\n\n#### Import Only What You Need\n\nUsing sass, you can import only the styles you need for the animations you use.\n\n```sass\n// Core Styles\n@import \'ember-burger-menu/variables\';\n@import \'ember-burger-menu/structure\';\n\n// Animations\n@import \'ember-burger-menu/animations/push\';\n@import \'ember-burger-menu/animations/menu-item/stack\';\n```\n\n## Helpful Links\n\n- ### [Live Demo](http://offirgolan.github.io/ember-burger-menu)\n\n- ### [Changelog](CHANGELOG.md)\n\n## Looking for help?\nIf it is a bug [please open an issue on GitHub](http://github.com/offirgolan/ember-burger-menu/issues).\n\n## Animations\n\n### Menu Animations\n\n- slide\n- reveal\n- push\n- fall-down\n- open-door\n- push-rotate\n- rotate-out\n- scale-up\n- scale-down\n- scale-rotate\n- slide-reverse\n- squeeze\n\n### Menu Item Animations\n\n- push\n- stack\n\n## Usage\n\nThis addon utilizes contextual components to be able to correctly control and animate necessary elements.\n\n```hbs\n{{#burger-menu as |burger|}}\n  {{#burger.menu itemTagName="li" as |menu|}}\n    <button {{action burger.state.actions.close}}>Close</button>\n\n    <ul>\n      {{#menu.item}}\n        {{link-to \'Features\' \'features\'}}\n      {{/menu.item}}\n\n      {{#menu.item}}\n        {{link-to \'About\' \'about\'}}\n      {{/menu.item}}\n\n      {{#menu.item}}\n        {{link-to \'Contact Us\' \'contact\'}}\n      {{/menu.item}}\n    </ul>\n  {{/burger.menu}}\n\n  {{#burger.outlet}}\n    <button {{action burger.state.actions.toggle}}>Menu</button>\n    {{outlet}}\n  {{/burger.outlet}}\n{{/burger-menu}}\n```\n\n## Components\n\n### `{{burger-menu}}`\n\n#### Options\n\n- #### `open`\n\n  The current open state of the menu.\n\n  **Default: false**\n\n- #### `animation`\n\n  The menu animation. See [Animations](#menu-animations) for the list of available animations.\n\n  **Default: slide**\n\n- #### `itemAnimation`\n\n  The menu item animation. See [Item Animations](#menu-item-animations) for the list of available item animations.\n\n  **Default: null**\n\n- #### `position`\n\n  The menu\'s open position. Can either be _left_ or _right_\n\n  **Default: left**\n\n- #### `width`\n\n  The menu\'s width (in px).\n\n  **Default: 300**\n\n- #### `locked`\n\n  Lock the menu in its current open / closed state.\n\n  **Default: false**\n\n- #### `customAnimation`\n\n  Override of the menu\'s styles with your own implementation. See [Custom Animations](#custom-animations) for more details.\n\n- #### `translucentOverlay`\n\n  Whether the outlet has a translucent overlay over it once the menu is opened.\n\n  **Default: true**\n\n- #### `dismissOnClick`\n\n  Whether the menu can be dismissed when clicking outside of it.\n\n  **Default: true**\n\n- #### `dismissOnEsc`\n\n  Whether the menu can be closed when pressing the ESC key.\n\n  **Default: true**\n\n- #### `gesturesEnabled`\n\n  Whether the menu can be open / closed using gestures. The only available gesture currently is swipe.\n\n  **Default: true**\n\n- #### `minSwipeDistance`\n\n  The minimum distance (in px) the user must swipe to register as valid.\n\n  **Default: 150**\n\n- #### `maxSwipeTime`\n\n  The maximum amount of time (in ms) it must take the user to swipe to be registered as valid .\n\n  **Default: 300**\n\n### `{{burger.outlet}}`\n\nThis component is where all your content should be placed.\n\n### `{{burger.menu}}`\n\nEverything rendered here will be inside the menu.\n\n#### Options\n\n- #### `itemTagName`\n\n  The default tagName that will be used by the `{{menu.item}}` component.\n\n  **Default: div**\n\n- #### `dismissOnItemClick`\n\n  Close the menu on click of a `{{menu.item}}`.\n\n  **Default: false**\n\n#### Actions\n\n- #### `onOpen`\n\n  Triggered when the menu is opening\n\n- #### `onClose`\n\n  Triggered when the menu is closing\n\n### `{{menu.item}}`\n\nThe individual menu item. This is required if you have specified an [itemAnimation](#itemanimation).\n\n#### Options\n\n- #### `dismissOnClick`\n\n  Close the menu on click.\n\n  **Default: false**\n\n## The Menu State\n\nThe `{{burger-menu}}` component exposes multiple contextual components, but it also exposes a state object.\n\nYou can use the menu state object to modify pretty much any property.\n\n- `open`\n- `width`\n- `position`\n- `animation`\n- `itemAnimation`\n- `customAnimation`\n\nThe state object also exposes some actions:\n\n- #### `open`\n\n  ```hbs\n  <button {{action burger.state.actions.open}}>Open</button>\n  ```\n\n- #### `close`\n\n  ```hbs\n  <button {{action burger.state.actions.close}}>Close</button>\n  ```\n\n- #### `toggle`\n\n  ```hbs\n  <button {{action burger.state.actions.toggle}}>Toggle</button>\n  ```\n\n# Custom Animations\n\nIf you\'re not impressed with the in-house animations and want to create your own, all you have to do is pass the following class to the `customAnimation` property in the `{{burger-menu}}` component. If you think your animation would be a good addition to the existing collection, feel free to open a PR with it!\n\n```js\nimport Animation from \'ember-burger-menu/animations/base\';\n\nexport default Animation.extend({\n  // CSS class names to be able to target our menu\n  animation: \'my-custom-animation\',\n  itemAnimation: \'my-custom-item-animation\',\n\n  container(open, width, right) {\n    return {};\n  },\n\n  outlet(open, width, right) {\n    return {\n      transform: open ? right ? `translate3d(-${width}px, 0, 0)` : `translate3d(${width}px, 0, 0)` : \'\'\n    };\n  },\n\n  menu(open, width, right) {\n    return {};\n  },\n\n  menuItem(open, width, right, index) {\n    return {\n      transform: open ? \'\' : `translate3d(0, ${(index + 1) * 500}px, 0)`\n    };\n  }\n});\n\n```\n\n_**Note:** You don\'t need to worry about prefixing your CSS attributes as it will be done for you._\n\nIf you need to add some base CSS to your animation, you can target the menu as such:\n\n```sass\n.ember-burger-menu.bm--my-custom-animation {\n  #{$bm-menu} {}\n  > .bm-outlet {}\n\n  &.is-open {\n    #{$bm-menu} {}\n    > .bm-outlet {}\n  }\n}\n```\n\nAnd the menu items as such:\n\n```sass\n.ember-burger-menu.bm-item--my-custom-item-animation {\n  #{$bm-menu} {\n    .bm-menu-item {}\n  }\n\n  &.is-open {\n    #{$bm-menu} {\n      .bm-menu-item {}\n    }\n  }\n}\n```\n\nTo use our new custom animation, all we have to do is pass the class to\nthe `customAnimation` option in the `{{burger-menu}}` component.\n\n```js\nimport MyCustomAnimation from \'path/to/my-custom-animation\';\n\nexport default Ember.Component.extend({\n  MyCustomAnimation\n});\n```\n\n```hbs\n{{#burger-menu customAnimation=MyCustomAnimation}}\n  ...\n{{/burger-menu}}\n```\n'