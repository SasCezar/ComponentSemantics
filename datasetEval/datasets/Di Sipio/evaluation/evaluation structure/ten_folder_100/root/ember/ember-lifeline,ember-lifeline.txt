b"# ember-lifeline\n\n[![Build Status](https://travis-ci.org/ember-lifeline/ember-lifeline.svg?branch=master)](https://travis-ci.org/ember-lifeline/ember-lifeline)\n[![Ember Observer Score](https://emberobserver.com/badges/ember-lifeline.svg)](https://emberobserver.com/addons/ember-lifeline)\n[![npm version](https://badge.fury.io/js/ember-lifeline.svg)](https://badge.fury.io/js/ember-lifeline)\n[![Monthly Downloads from NPM](https://img.shields.io/npm/dm/ember-lifeline.svg?style=flat-square)](https://www.npmjs.com/package/ember-lifeline)\n[![Code Style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](#badge)\n\nEmber applications have long life-cycles. A user may navigate to several pages\nand use many different features before they leave the application. This\nmakes JavaScript and Ember development unlike Rails development, where the\nlifecycle of a request is short and the environment disposed of after\neach request. It makes Ember development much more like iOS or video game\ndevelopment than traditional server-side web development.\n\nThis addon introduces several functional utility methods to help manage async, object\nlifecycles, and the Ember runloop. These tools should provide a simple developer\nexperience that allows engineers to focus on the business domain, and think less\nabout the weird parts of working in a long-lived app.\n\nThe [documentation website](https://ember-lifeline.github.io/ember-lifeline/) contains more examples and API information.\n\n## Installation\n\n    ember install ember-lifeline\n\n## Usage\n\nEmber Lifeline supports a functional API that enables entanglement - _the association of async behavior to object instances_. This allows you to write async code in your classes that can be automatically cleaned up for you when the object is destroyed.\n\nEmber's runloop functions, like the example below, don't ensure that an object's async is cleaned up.\n\n```js\nimport Component from '@ember/component';\nimport { run } from '@ember/runloop';\n\nexport default Component.extend({\n  init() {\n    this._super(...arguments);\n\n    run.later(() => {\n      this.set('date', new Date());\n    }, 500);\n  },\n});\n```\n\nUsing ember-lifeline's equivalent, in this case `runTask`, can help ensure that any active async is cleaned up once the object is destroyed.\n\n```js\nimport Component from '@ember/component';\nimport { runTask, runDisposables } from 'ember-lifeline';\n\nexport default Component.extend({\n  init() {\n    this._super(...arguments);\n\n    runTask(\n      this,\n      () => {\n        this.set('date', new Date());\n      },\n      500\n    );\n  },\n\n  willDestroy() {\n    this._super(...arguments);\n\n    runDisposables(this);\n  },\n});\n```\n\nFor more information and examples, please visit the [documentation website](https://ember-lifeline.github.io/ember-lifeline/).\n\n## Contributing\n\nSee the [Contributing](CONTRIBUTING.md) guide for details.\n\n## Credit\n\nThis addon was developed internally at Twitch, written originally by [@mixonic](https://github.com/mixonic) and [@rwjblue](https://github.com/rwjblue). It's since been further developed and maintained by [scalvert](https://github.com/scalvert).\n\nThe name `ember-lifeline` was suggested by [@nathanhammod](https://github.com/nathanhammond).\n"