b"## Travis CI ember web client\n\n[![Build Status](https://travis-ci.org/travis-ci/travis-web.svg?branch=master)](https://travis-ci.org/travis-ci/travis-web)\n### Running the app\n\nThe app is developed using [Ember CLI](http://ember-cli.com). It requires nodejs\nwith npm installed.\n\nIn order to run the app you need to install dependencies with:\n\n    npm ci\n\nAnd then install ember-cli globally in order to have access to the `ember` command:\n\n    npm install -g ember-cli\n\nNow you can run the server:\n\n    ember serve\n\nAnd open http://localhost:4200 in the browser.\n\nAlternatively you can run `ember build --watch` and start the server with `waiter/script/server`\n\n### Waiter Workarounds\n\nShould you encounter issues installing Puma while bundling Waiter on a recent\nOSX version, you need to tinker with Homebrew:\n\n``` bash\nbrew install openssl\nbrew link --force openssl\n```\n\nYou should then be able to run `bundle install` as usual.\n\n### Running the app in private repos mode\n\nAt the moment Travis CI is available as two separate sites - https://travis-ci.org for Open Source\nprojects and https://travis-ci.com for private projects. travis-web will connect\nto the Open Source version by default. In order to connect it to the API for private projects you need to setup your `.env` file.\n\nCopy `.env.example` to `.env`\n\n```\n$ cp .env.example .env\n```\n\nUpdate the `.env` file to run the app in private repos mode:\n\n```\nTRAVIS_PRO=true\n```\n\nAfter setting up environment variables, you can run the app like so:\n\n```\nember serve --ssl --ssl-key=ssl/server.key --ssl-cert=ssl/server.crt\n```\n\nOne caveat here is that the command will start server with SSL, so the page will\nbe accessible at https://localhost:4200 (note `https` part).\n\n### Running on SSL in general\n\nSometimes there is a need to test the app with an SSL connection. This is required\nto make Pusher work when running Travis CI Pro, but it may also be needed in other\nsituations.\n\nThere's already an SSL certificate in the `ssl` directory, which is set for `localhost`\nhost. If you want to use it, you can start the server with:\n\n```\nember serve --ssl --ssl-key=ssl/server.key --ssl-cert=ssl/server.crt\n```\n\nIn case you want your own certificate, you can follow the instructions posted\nhere: https://gist.github.com/trcarden/3295935 and then point the server to your\ncertificate with `--ssl-key` and `--ssl-cert`.\n\n### Running tests\n\nTo run the test suite execute:\n\n    ember test\n\nYou can also start an interactive test runner for easier development:\n\n    ember test --serve\n\n### Linting\n\n* `npm run lint:hbs`\n* `npm run lint:js`\n* `npm run lint:js -- --fix`\n\n### Feature Flags\n\n`travis-web` is beginning the transition to use feature flags wherever it makes\nsense. To enable/disable/add/remove a feature flag for the application, you can\nedit the `config/environment.js` file. For instance, to enable `some-feature`, you would\nsimply add/update the file like so:\n\n```js\n  {\n    featureFlags: {\n      'some-feature': true\n    }\n  }\n```\n\nThis uses the awesome [ember-feature-flags](https://github.com/kategengler/ember-feature-flags) addon under the hood, so be sure to read its own\ndocumentation for more information.\n\n### Debugging\n\nEmber's default logging has been disabled in all environments by default and\nmoved to a feature flag. To enable it, simply edit the `debug-logging` feature\nflag as mentioned previously in the `Feature Flags` section.\n\n### Deploying\n\n`ember-cli-deploy` is available for deploying pull requests. See `after_success`\nin `.travis.yaml` and associated scripts for details. It uses the \xe2\x80\x9clightning\nstrategy\xe2\x80\x9d of deploying assets to S3 and `index.html` to a Redis server. You can\ndeploy from your own machine too. First, update your `.env` file with the following variables:\n\n```\nAWS_KEY=key\nAWS_SECRET=secret\n```\nThen run:\n\n```\nnpm run deploy\n```\n\nAfter success, your deployment will be available at branch.test-deployments.travis-ci.org.\n\nSee [the documentation](https://github.com/travis-pro/manual/pull/13) for the full list of\ndeployment environments and more details.\n\nThe Redis server is a modified version of `waiter/lib/travis/web/app.rb`. We will eventually replace\nthat with [`travis-web-index`](https://github.com/travis-ci/travis-web-index) and move to using\n`ember-cli-deploy` for all deployments.\n\n### Ember beta and canary deployments\n\nUpon a merge to `master`, the application is built with the latest beta and canary versions\nof Ember, running against the production API. This uses the same infrastructure as the\npull request deployments. You can visit these deployments at:\n* https://ember-beta.travis-ci.org\n* https://ember-beta.travis-ci.com\n* https://ember-canary.travis-ci.org\n* https://ember-canary.travis-ci.com\n\nThese deployments are also performed with the weekly cron build.\n"