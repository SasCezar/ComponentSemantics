b"# Flexi\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/html-next/flexi.svg)](https://greenkeeper.io/)\n\n[![npm version](https://badge.fury.io/js/flexi.svg)](http://badge.fury.io/js/flexi)\n[![Ember Observer Score](http://emberobserver.com/badges/flexi.svg)](http://emberobserver.com/addons/flexi)\n[![Build Status](https://travis-ci.org/html-next/flexi.svg)](https://travis-ci.org/html-next/flexi)\n[![Code Climate](https://codeclimate.com/github/html-next/flexi/badges/gpa.svg)](https://codeclimate.com/github/html-next/flexi)\n\nFlexi is a responsive-design layout framework like Bootstrap and Foundation. Flexi is focused on performance and maintainability, utilizing Ember for greater configuration and convenience than Bootstrap or Foundation can offer.\n\nFlexi does most of it's heavy lifting at `build` time, happily adding very little runtime code and CSS to your project.\n\n## Learn More\n\n- Demo: [https://html-next.github.io/flexi/](https://html-next.github.io/flexi/)\n- Documentation: [https://flexi.readme.io/docs](https://flexi.readme.io/docs)\n- Blog Post: [A Tale of Two States: Modern Responsive Design illustrated with Ember & Flexi](http://blog.isleofcode.com/modern-responsive-design/)\n- Talk: [Responsive and Cross Platform Design](https://www.youtube.com/watch?v=2w77wrinwsY&list=PLaKDKbFmAv-aLYGogQ63zzKeUpy_opDia&index=1)\n\n\n## Installation\n\n```cli\nember install flexi\n```\n\nThat's all that required if you're using the classic component layout. If you are using a _pod_-based structure you will also need to install the shim for `ember-app`. This is done by modifiying your  `ember-cli-build.js` file. This shim makes ember-cli's template tree able to find the templates for layouts.\n\n```js\nvar EmberApp = require('ember-cli/lib/broccoli/ember-app');\nvar shim = require('@html-next/flexi-layouts/lib/pod-templates-shim');\n\nshim(EmberApp);\n```\n\n## Support, Questions, Collaboration\n\nJoin the [Ember community on Discord](https://discord.gg/zT3asNS)\n\n## Status\n\n[Changelog](./CHANGELOG.md)\n\n[![Build Status](https://travis-ci.org/html-next/flexi.svg)](https://travis-ci.org/html-next/flexi)\n[![Code Climate](https://codeclimate.com/github/html-next/flexi/badges/gpa.svg)](https://codeclimate.com/github/html-next/flexi)\n[![Test Coverage](https://codeclimate.com/github/html-next/flexi/badges/coverage.svg)](https://codeclimate.com/github/html-next/flexi/coverage)\n[![dependencies](https://david-dm.org/html-next/flexi.svg)](https://david-dm.org/html-next/flexi)\n[![devDependency Status](https://david-dm.org/html-next/flexi/dev-status.svg)](https://david-dm.org/html-next/flexi#info=devDependencies)\n\n## Contributing\n\n - Open an Issue for discussion first if you're unsure a feature/fix is wanted.\n - Branch off of `master` (default branch)\n - Use descriptive branch names (e.g. `<type>/<short-description>`)\n - Use [Angular Style Commits](https://github.com/angular/angular.js/blob/v1.4.8/CONTRIBUTING.md#commit)\n - PR against `master` (default branch).\n\n### Commmits\n\nAngular Style commit messages have the full form:\n\n ```cli\n <type>(<scope>): <title>\n\n <body>\n\n <footer>\n ```\n\n But the abbreviated form (below) is acceptable and often preferred.\n\n ```cli\n <type>(<scope>): <title>\n ```\n\n Examples:\n\n - chore(deps): bump deps in package.json and bower.json\n - docs(component): document the `fast-action` component\n\n## Thanks\n\nA special thanks goes out to [@ebryn](https://github.com/ebryn) for the\ninspiration to pursue a solution for explicit layouts, and [IsleofCode](https://isleofcode.com)\nfor providing the time to built it.\n"