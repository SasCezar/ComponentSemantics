b'ember-ast-hot-load [![npm version](https://badge.fury.io/js/ember-ast-hot-load.svg)](https://badge.fury.io/js/ember-ast-hot-load) [![Build Status](https://travis-ci.com/lifeart/ember-ast-hot-load.svg?branch=master)](https://travis-ci.com/lifeart/ember-ast-hot-load) [![Greenkeeper badge](https://badges.greenkeeper.io/lifeart/ember-ast-hot-load.svg)](https://greenkeeper.io/) [![Maintainability](https://api.codeclimate.com/v1/badges/a0fc242c64b9f50cc92d/maintainability)](https://codeclimate.com/github/lifeart/ember-ast-hot-load/maintainability)\n==============================================================================\n\n### Any ember components hot-reloading\n\nMain Idea of this addon - ability to reload changed components without application reloading.\n\nThis addon is continuation of the project [ember-cli-hot-loader](https://github.com/adopted-ember-addons/ember-cli-hot-loader) and  includes part of it\'s codebase.\n\n* __ember-cli__ >= `2.15.1`\n* __ember-source__ >= `2.16`\n\nMany thanks to [Toran Billups / @toranb](https://github.com/toranb) for this huge work, support and inspiration!\n\n* `ember-cli-hot-loader` implemented using middleware for  `ember-resolver` and `wrapping` components.\n* `ember-ast-hot-load` implemented using compile-time templates `ast` transformations.\n\n| Point  \t\t      | ember-ast-hot-load | ember-cli-hot-loader |\n| ------------------  | ------------------ | -------------------- |\n| Tagless components  |          +         |           +/-        |\n| Glimmer components  |          +         |           -          |\n| Classic route templates |         +        |           -         |\n| MU route templates  |          +         |           -          |\n| reducers reloading  |          -         |           +          |\n| performance impact  |         low        |           middle     |\n| typescript support  |          +         |            +         |\n| Nested components   |          +         |           +/-        |\n| code limitations    |\t\t\t-\t\t   |            +         |\n| Ember 2.x           |          ?         |            +         |\n| Ember 3.4+          |          +         |            -         |\n| Fastboot            |          +         |            -         |\n| [Sparkles components](https://github.com/rwjblue/sparkles-component) |          +         |            -         |\n| [Hooked components](https://github.com/lifeart/hooked-components)   |          +         |            -         |\n| [Custom components](https://github.com/emberjs/rfcs/blob/master/text/0213-custom-components.md)   |          +         |            -         |\n| Component wrappers  |          -         |            +         |\n| AST integration     |          +         |            -         |\n| Resolver 5 support  |          +         |            -         |\n| MU support          |          +         |            -         |\n| Addons hot-reload   |          +         |            -         |\n\nInstallation\n------------------------------------------------------------------------------\n\n```\nember install ember-ast-hot-load\n```\n\n\n## How to use this addon\n\n\nIt should just work without any config.\n\nAfter the installing, simply run `ember serve` as you normally would. Any changes to component JS/HBS files will result in a hot reload (not a full page reload). If you alter a route, service, or controller ember-cli will do a full page reload.\n\nHot-reloading Ember [helpers](https://guides.emberjs.com/v3.10.0/templates/writing-helpers/) is not supported.\n\nBecause helpers look like components (in the AST) they will be unnecessarily wrapped, e.g. `helper` -> `dynamic component` -> `helper`\n\nTo prevent this from happening, you can exclude helpers from the hot-loader pipeline by specifying a list of helper names in the add-on config.\n\n```js\n// ember-cli-build.js\nnew EmberApp(defaults, {\n  \'ember-ast-hot-load\': {\n    helpers: ["foo-bar", "liquid-if", ... ],\n    enabled: true\n  }\n});\n\n```\n\nIf you don\'t specify `helpers` in the config the addon will continue to work, but with it will also wrap all your helpers (you can see this in the `ember-inspector` components tab, e.g. `helper "you-app-helper-name"`).\n\nTo get a list of all the helpers in your app that hot-reload might think are components, run this script in a debug console in your browner. You can then use this list to configure the add-on.\n\n```js\nvar componentLikeHelpers = Object.keys(require.entries)\n    .filter(name=>(name.includes(\'/helpers/\')|| name.includes(\'/helper\')))\n    .filter(name=>!name.includes(\'/-\')).map(name=>{\n        let path = name.split(\'/helpers/\');\n        return path.pop();\n    }).filter(name=>!name.includes(\'/\')).uniq();\n\nconsole.log(JSON.stringify(componentLikeHelpers))\n```\n\nYou should also exclude `ember-ast-hot-load` from production builds (to avoid unnecessary calculations)\n\n```js\n// ember-cli-build.js\nconst environment = EmberApp.env();\n// ...\nconst addonsToIgnoreInProdBuilds = [\n  environment === \'production\' ? \'ember-ast-hot-load\' : null\n].filter(name => name !== null);\n\nnew EmberApp(defaults, {\n  addons: {\n    blacklist: addonsToIgnoreInProdBuilds\n  }\n});\n```\n\n### Public API?\n\n```js\nservice(\'hot-loader\')\n```\n\n```js\n.registerWillHotReload(onHotReload)\n```\n\n```js\n.unregisterWillHotReload(onHotReload)\n```\n\n```js\n.registerWillLiveReload(onLiveReload)\n```\n\n```js\n.unregisterWillLiveReload(onLiveReload)\n```\n\n ```js\n  // we need to prevent full app refresh if we can hande changed file.\n function onLiveReload(event) {\n    if (event.modulePath.includes(\'redusers\')) {\n      event.cancel = true;\n      requirejs.unsee(\'some-module\');\n    }\n }\n\n\n function onHotReload(path) {\n    if (path.includes(\'redusers\')) {\n      // do some hot-reload magic,\n      // for example\n      requirejs.resolve(\'some-module\')\n    }\n }\n ```\n\n## Known Compatibility Workarounds\n\n#### Serving your Ember app from a different backend (e.g. Rails)\n\nIn most development environments, Ember applications are served directly from Ember\'s development server, e.g. http://localhost:4200.\nIf you are using a different way of service your Ember app, you may need to override the URL that we use to reload your changes.\n\n```js\n  // config/enironment.js\n\n  if (environment === \'development\') {\n    ENV[\'ember-ast-hot-load\'] = {\n      baseUrl: \'http://app.mydomain.test:4200\'\n    }\n  }\n```\n\n### Cannot find module\nCannot find module `ember-source\\dist\\ember-template-compiler.js` in yarn workspaces.\n\n`root.package.json` `workspaces.nohoist: ["**/ember-ast-hot-load"]`\n\n\nContributing\n------------------------------------------------------------------------------\n\n### Installation\n\n* `git clone <repository-url>`\n* `cd ember-ast-hot-load`\n* `yarn install`\n\n### Linting\n\n* `yarn lint:hbs`\n* `yarn lint:js`\n* `yarn lint:js --fix`\n\n### Running tests\n\n* `ember test` \xe2\x80\x93 Runs the test suite on the current Ember version\n* `ember test --server` \xe2\x80\x93 Runs the test suite in "watch mode"\n* `ember try:each` \xe2\x80\x93 Runs the test suite against multiple Ember versions\n\n### Running the dummy application\n\n* `ember serve`\n* Visit the dummy application at [http://localhost:4200](http://localhost:4200).\n\nFor more information on using ember-cli, visit [https://ember-cli.com/](https://ember-cli.com/).\n\nLicense\n------------------------------------------------------------------------------\n\nThis project is licensed under the [MIT License](LICENSE.md).\n'