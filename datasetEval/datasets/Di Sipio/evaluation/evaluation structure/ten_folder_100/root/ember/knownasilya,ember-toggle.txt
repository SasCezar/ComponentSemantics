b"# ember-toggle\n\nCheckbox based Toggle Switch component with swipe/drag support for Ember.\n\n[![NPM][npm-badge]][npm-badge-url]\n[![Build Status][travis-badge]][travis-badge-url]\n[![Ember Observer Score][ember-observer-badge]][ember-observer-url]\n\nBased on [this](http://codepen.io/mallendeo/pen/eLIiG/) codepen.\nHere's the official [demo] using this component.\n\nCompatibility\n------------------------------------------------------------------------------\n\n* Ember.js v3.4 or above\n* Ember CLI v2.13 or above\n* Node.js v8 or above\n\n\n## Install\n\n`ember install ember-toggle`\n\n## Basic Usage\n\n```hbs\n<XToggle\n  @value={{this.myValue}}\n  @onToggle={{action (mut this.myValue)}}\n/>\n```\n\n### Themes\n\n![Examples Of Available Themes](vendor/ember-toggle/example-images/themes.png)\n\nThere are many `themes` which change the visual appearance of the toggle.\nCheck the [demo] for interactive examples.\n\n- `'default'`\n- `'ios'`\n- `'light'`\n- `'flat'`\n- `'flip'`\n- `'skewed'`\n- `'material'`\n\n> Example of changing the theme\n\n```hbs\n<XToggle\n  @theme='ios'\n  @value={{this.toggled}}\n  @onToggle={{action (mut this.toggled)}}\n/>\n```\n\n_Note: By default all themes are included, see the Configuration section to change which themes are included/excluded._\n\n### Size\n\nYou can also adjust the size of the widget by use of the `size` property. Valid sizes are:\n\n- `'small'`\n- `'medium'`\n- `'large'`\n\nThis option is available on all themes but is a less sensible choice for those themes which actually\ninclude the label within the control (e.g., `skew` and `flip`).\n\n### Labels\n\nYou can customize labels (The text the user sees for the two states) and their associated values:\n\n```hbs\n<XToggle\n  @onLabel='Enabled'\n  @offLabel='Disabled'\n  @showLabels={{true}}\n  @value={{this.myValue}}\n  @onToggle={{action (mut this.myValue)}}\n/>\n```\n\nIf you want your labels to be displayed, then you must set `showLabels` to `true`.\n\n\n### Available Options\n\n- `value` - The state of the switch, can be `true` or `false`. Defaults to `false`.\n- `onToggle` - The action that should change the state of `value`.\n- `theme` - One of 'light', 'ios', 'flat', 'flip', 'skewed', 'default'.\n            Defaults to 'default' if not specified.\n- `size` -  One of 'small', 'medium', 'large'.\n            Defaults to 'medium' if not specified.\n- `onLabel` - The label for the *on* state. Defaults to 'On'.\n- `offLabel` - The label for the *off* state. Defaults to 'Off'.\n- `showLabels` - Defaults to 'false', if 'true' will display labels on left and ride side of toggle switch\n- `disabled` - Defaults to `false`, which means you can click the toggle.\n  When `true`, an `.x-toggle-disabled` class is set on the toggle and an `.x-toggle-container-disabled` class is set on the component.\n- `name` - A name to differentiate multiple toggles, gets passed to the `toggle` action. Defaults to 'default'.\n\n### Configuring\n\nAdd a configuration for `ember-toggle` to include only the themes that\nyou will use, as well as any other default settings that apply to all toggles\nin your app. These defaults can be overriden on a per toggle basis\n(except the options regarding themes being added to your app's build step).\n\nThis configuration is located in `config/environment.js`.  \nThe following is an example of how you can configure this addon:\n\n```js\nENV['ember-toggle'] = {\n  includedThemes: ['light', 'default', 'flip'],\n  excludedThemes: ['flip'],\n  excludeBaseStyles: false, // defaults to false\n  defaultShowLabels: true,  // defaults to false\n  defaultTheme: 'light',    // defaults to 'default'\n  defaultSize: 'small',     // defaults to 'medium'\n  defaultOffLabel: 'False', // defaults to 'Off'\n  defaultOnLabel: 'True'    // defaults to 'On'\n};\n```\n\n> note: the IOS theme is referred to as just `ios` not `ios7` as was indicated in the originating CSS source\n\nTo exclude (not include) a theme, means that it's css styles will not be bundled with\nyour application, keeping your app's css bundle size smaller.\n\n> **Note:** including a blank array e.g. `includeThemes: []` will not include any themes, leaving\nyou to define your own theme styles. See the `vendor/ember-toggle/themes` directory\nfor reference.\n> **Note:** you may also want to set `excludeBaseStyles: true` so that this addon doesn't include the styles\nused by all the themes.\n\n## Advanced Usage\n\nIf you need custom labels, additional markup, or non-standard behavior, you are in the right section.\n\nThe `x-toggle` component also provides a composable component API.\n\n```hbs\n<XToggle\n  @showLabels={{true}}\n  @value={{this.value}}\n  @onToggle={{action (mut this.value)}}\nas |toggle|>\n  <toggle.offLabel/>\n  <toggle.switch/>\n  <toggle.onLabel/>\n</XToggle>\n```\n\nThe above is a simple example that returns a basic toggle, but you can see how\nthis could be used to wrap the switch or the labels in custom markup or logic.\n\n### Single Label\n\nThis format allows greater flexibility with labels, like the single label use-case.\n\n```hbs\n<XToggle\n  @showLabels={{true}}\n  @value={{this.value}}\n  @onToggle={{action (mut this.value)}}\n  as |toggle|\n>\n  <toggle.label @value={{not this.value}}>\n    <b>turn {{if this.value 'off' 'on'}}</b>\n  </toggle.label>\n\n  <toggle.switch\n    @theme='flip'\n    @onLabel='diff on'\n    @offLabel='diff off'\n  />\n</XToggle>\n```\n\n> Note: The `not` helper is a custom Ember helper in the above example.\n\n## Contributing\n\nSee the [Contributing] guide for details.\n\n## License\n\nMIT\n\n[npm-badge]: https://img.shields.io/npm/v/ember-toggle.svg\n[npm-badge-url]: https://www.npmjs.com/package/ember-toggle\n[travis-badge]: https://img.shields.io/travis/knownasilya/ember-toggle.svg\n[travis-badge-url]: https://travis-ci.org/knownasilya/ember-toggle\n[ember-observer-badge]: http://emberobserver.com/badges/ember-toggle.svg\n[ember-observer-url]: http://emberobserver.com/addons/ember-toggle\n[demo]: http://knownasilya.github.io/ember-toggle/\n[Contributing]: CONTRIBUTING.md\n[simplify]: https://github.com/knownasilya/ember-toggle/tree/simplify\n"