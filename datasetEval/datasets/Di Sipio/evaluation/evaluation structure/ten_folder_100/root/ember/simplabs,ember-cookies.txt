b"[![Build Status](https://travis-ci.org/simplabs/ember-cookies.svg?branch=master)](https://travis-ci.org/simplabs/ember-cookies)\n\n# ember-cookies\n\n`ember-cookies` implements an abstract __cookie API that works both in the\nbrowser (via `document.cookie`) as well as with Fastboot in the server\ncontext__ (using the `request` and `response` accessible via the `fastBoot`\nservice).\n\n__Having access to cookies both in the browser as well as in FastBoot is key to\nbeing able to share a common session.__\n\n## Installation\n\nInstall `ember-cookies` with\n\n`ember install ember-cookies`\n\n## Example Usage\n\n```js\n// app/controllers/application.js\nimport Controller from '@ember/controller';\nimport { inject as service } from '@ember/service';\nimport { computed } from '@ember/object';\nconst { keys } = Object;\n\nexport default Controller.extend({\n  cookies: service(),\n\n  allCookies: computed(function() {\n    let cookieService = this.get('cookies');\n    cookieService.write('now', new Date().getTime());\n\n    let cookies = cookieService.read();\n    return keys(cookies).reduce((acc, key) => {\n      let value = cookies[key];\n      acc.push({ name: key, value });\n\n      return acc;\n    }, []);\n  })\n});\n```\n\n## API\n\nThe `cookies` service has methods for reading and writing cookies:\n\n* `read(name, options = {})`: reads the cookie with the given name, returns its\n  value as a `String`; options can be used to set `raw` (boolean, disables\n  URL-decoding the value).\n* `write(name, value, options = {})`: writes a cookie with the given name and\n  value; options can be used to set `domain`, `expires` (Date), `maxAge` (time\n  in seconds), `path`, `secure`, `raw` (boolean, disables URL-encoding the\n  value) and `sameSite` (can be either `'strict'` or `'lax'`).\n* `clear(name, options = {})`: clears the cookie so that future reads do not\n  return a value; options can be used to specify `domain`, `path` or `secure`.\n* `exists(name)`: checks whether a cookie exists at all (even with a falsy\n  value) and returns `true` if that is the case or `false` otherwise.\n\n## License\n\n`ember-cookies` is developed by and &copy;\n[simplabs GmbH](http://simplabs.com) and contributors. It is released under the\n[MIT License](https://github.com/simplabs/ember-simple-auth/blob/master/LICENSE).\n\n`ember-cookies` is not an official part of [Ember.js](http://emberjs.com) and\nis not maintained by the Ember.js Core Team.\n"