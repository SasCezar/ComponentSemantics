b'.. image:: smenu.gif\n\nWhat is it?\n===========\n**smenu** is a selection filter just like ``sed`` is an editing filter.\n\nThis tool takes words from standard input or from a file and presents\nthem on the screen in different layouts in a scrolling window.\nA cursor that you can easily move lets you select one or more of them.\n\nNote that the screen is not previously cleared when the scrolling window\nof **smenu** is displayed.\n\nI tried to make its use as simple as possible. It supports the ``UTF-8``\nencoding and should work on all terminals managed by the ``terminfo``\ndatabase.\n\nPlease use the included man page to learn more about this little program.\n\nThe wiki (https://github.com/p-gen/smenu/wiki) contains screenshots and\nanimations that detail some of the concepts and features of **smenu**.\n\nHow to build it?\n================\n**smenu** can be built on any system on which a working ``terminfo``\ndevelopment platform is available. This includes every Unix and\nUnix-like system I am aware of.\n\nPlease use the provided ``build.sh`` to build the executable. This\nscript accepts the same arguments as ``configure``, type ``build.sh\n--help`` to see them.\n\nThe script ``autogen.sh`` is also provided if you need to generate a\nnew ``configure`` script from ``configure.ac`` and ``Makefile.am``. The\nGNU **autotools** will need to be installed for this script to work.\n\nHow to install it?\n==================\nOnce the build process has finished, a simple ``make install`` with the\nappropriate privileges will do it\n\nSome examples.\n==============\n\nLinux example.\n--------------\nThis program should work on most Unix but if you are using Linux,\ntry to type the following line at a shell prompt (here: ``"$ "`` ):\n\n::\n\n  $ R=$(grep Vm /proc/$$/status \\\n        | smenu -n20 -W $\':\\t\\n\' -q -c -b -g -s /VmH)\n  $ echo $R\n\nSomething like this should now be displayed with the program waiting\nfor commands: (numbers are mine, yours will be different)\n\n::\n\n  VmPeak\xc2\xa6    23840 kB\n  VmSize\xc2\xa6    23836 kB\n  VmLck \xc2\xa6        0 kB\n  VmHWM \xc2\xa6     2936 kB\n  VmRSS \xc2\xa6     2936 kB\n  VmData\xc2\xa6     1316 kB\n  VmStk \xc2\xa6      136 kB\n  VmExe \xc2\xa6       28 kB\n  VmLib \xc2\xa6     3956 kB\n  VmPTE \xc2\xa6       64 kB\n  VmSwap\xc2\xa6        0 kB\n\nA cursor should be under ``"VmHWM "``.\n\nAfter having moved the cursor to ``"      136 kB"`` and ended the program\nwith ``<Enter>``, the shell variable R should contain: ``"      136 kB"``.\n\nUnix example.\n-------------\nThe following command, which is Unix brand agnostic, should give you a\nscrolling window if you have more than 10 accounts on your Unix with a\nUID lower than 100:\n\n::\n\n  $ R=$(awk -F: \'$3 < 100 {print $1,$3,$4,$NF}\' /etc/passwd \\\n        | smenu -n10 -c)\n  $ echo $R\n\nOn mine (``LANG`` and ``LC_ALL`` set to ``POSIX``) it displays:\n\n::\n\n  at      25 25  /bin/bash      \\\n  sys     0  3   /usr/bin/ksh   +\n  bin     1  1   /bin/bash      |\n  daemon  2  2   /bin/bash      |\n  ftp     40 49  /bin/bash      |\n  games   12 100 /bin/bash      |\n  lp      4  7   /bin/bash      |\n  mail    8  12  /bin/false     |\n  named   44 44  /bin/false     |\n  ntp     74 108 /bin/false     v\n\nNote the presence of a scrollbar.\n\nTesting and reporting.\n----------------------\nThe included testing system is relatively young, please be indulgent.\n\n**IMPORTANT** the testing system has some dependencies, please read the\n``test/README.rst`` before going further.\n\n**WARNING** running all the tests by running ``./tests.sh`` in the\n``tests`` directory will take some time (around 15 min for now).\n\n**NOTE** on some systems like \\*BSD some tests may fail. This can be\nexplained by differences in posix/libc/... implementations.  This can\nnotably occur when some specific regular expressions or uncommon ``UTF-8``\nbyte sequences are used.\n\nIf a test fails for unknown reason, then please send me its directory\nname and the relevant ``.bad`` file.\n\nIf you are hit by a bug that no test covers, then you can create a new\ntest in the ``tests`` directory in an existing or new directory: read the\n``tests/README.rst`` file, use an existing test as model, create an\n``.in`` file and a ``.tst`` file and send them to me as well as the\nproduced files.\n\nSpecial thanks.\n---------------\nI want to thank everyone who took the time to pack *smenu* for an easy\ninstallation in their operating system or distributions. Look here to\nfind their names: https://repology.org/project/smenu/packages\n'