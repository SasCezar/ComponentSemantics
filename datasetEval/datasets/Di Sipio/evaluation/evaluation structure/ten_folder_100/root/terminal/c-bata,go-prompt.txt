b'# go-prompt\n\n[![Go Report Card](https://goreportcard.com/badge/github.com/c-bata/go-prompt)](https://goreportcard.com/report/github.com/c-bata/go-prompt)\n![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)\n[![GoDoc](https://godoc.org/github.com/c-bata/go-prompt?status.svg)](https://godoc.org/github.com/c-bata/go-prompt) \n[![Build Status](https://travis-ci.org/c-bata/go-prompt.svg?branch=master)](https://travis-ci.org/c-bata/go-prompt)\n\nA library for building powerful interactive prompts inspired by [python-prompt-toolkit](https://github.com/jonathanslenders/python-prompt-toolkit),\nmaking it easier to build cross-platform command line tools using Go.\n\n```go\npackage main\n\nimport (\n\t"fmt"\n\t"github.com/c-bata/go-prompt"\n)\n\nfunc completer(d prompt.Document) []prompt.Suggest {\n\ts := []prompt.Suggest{\n\t\t{Text: "users", Description: "Store the username and age"},\n\t\t{Text: "articles", Description: "Store the article text posted by user"},\n\t\t{Text: "comments", Description: "Store the text commented to articles"},\n\t}\n\treturn prompt.FilterHasPrefix(s, d.GetWordBeforeCursor(), true)\n}\n\nfunc main() {\n\tfmt.Println("Please select table.")\n\tt := prompt.Input("> ", completer)\n\tfmt.Println("You selected " + t)\n}\n```\n\n#### Projects using go-prompt\n\n* [c-bata/kube-prompt : An interactive kubernetes client featuring auto-complete written in Go.](https://github.com/c-bata/kube-prompt)\n* [rancher/cli : The Rancher Command Line Interface (CLI)is a unified tool to manage your Rancher server](https://github.com/rancher/cli)\n* [kubicorn/kubicorn : Simple, cloud native infrastructure for Kubernetes.](https://github.com/kubicorn/kubicorn)\n* [cch123/asm-cli : Interactive shell of assembly language(X86/X64) based on unicorn and rasm2](https://github.com/cch123/asm-cli)\n* [ktr0731/evans : more expressive universal gRPC client](https://github.com/ktr0731/evans)\n* [CrushedPixel/moshpit: A Command-line tool for datamoshing.](https://github.com/CrushedPixel/moshpit)\n* [last-ent/testy-go: Testy Go: A tool for easy testing!](https://github.com/last-ent/testy-go)\n* [tiagorlampert/CHAOS: a PoC that allow generate payloads and control remote operating systems.](https://github.com/tiagorlampert/CHAOS)\n* [abs-lang/abs: ABS is a scripting language that works best on terminal. It tries to combine the elegance of languages such as Python, or Ruby, to the convenience of Bash.](https://github.com/abs-lang/abs)\n* [takashabe/btcli: btcli is a CLI client for the Bigtable. Has many read options and auto-completion.](https://github.com/takashabe/btcli)\n* [ysn2233/kafka-prompt: An interactive kafka-prompt(kafka-shell) built on existing kafka command client](https://github.com/ysn2233/kafka-prompt)\n* (If you create a CLI utility using go-prompt and want your own project to be listed here, please submit a GitHub issue.)\n\n## Features\n\n### Powerful auto-completion\n\n[![demo](https://github.com/c-bata/assets/raw/master/go-prompt/kube-prompt.gif)](https://github.com/c-bata/kube-prompt)\n\n(This is a GIF animation of kube-prompt.)\n\n### Flexible options\n\ngo-prompt provides many options. Please check [option section of GoDoc](https://godoc.org/github.com/c-bata/go-prompt#Option) for more details.\n\n[![options](https://github.com/c-bata/assets/raw/master/go-prompt/prompt-options.png)](#flexible-options)\n\n### Keyboard Shortcuts\n\nEmacs-like keyboard shortcuts are available by default (these also are the default shortcuts in Bash shell).\nYou can customize and expand these shortcuts.\n\n[![keyboard shortcuts](https://github.com/c-bata/assets/raw/master/go-prompt/keyboard-shortcuts.gif)](#keyboard-shortcuts)\n\nKey Binding          | Description\n---------------------|---------------------------------------------------------\n<kbd>Ctrl + A</kbd>  | Go to the beginning of the line (Home)\n<kbd>Ctrl + E</kbd>  | Go to the end of the line (End)\n<kbd>Ctrl + P</kbd>  | Previous command (Up arrow)\n<kbd>Ctrl + N</kbd>  | Next command (Down arrow)\n<kbd>Ctrl + F</kbd>  | Forward one character\n<kbd>Ctrl + B</kbd>  | Backward one character\n<kbd>Ctrl + D</kbd>  | Delete character under the cursor\n<kbd>Ctrl + H</kbd>  | Delete character before the cursor (Backspace)\n<kbd>Ctrl + W</kbd>  | Cut the word before the cursor to the clipboard\n<kbd>Ctrl + K</kbd>  | Cut the line after the cursor to the clipboard\n<kbd>Ctrl + U</kbd>  | Cut the line before the cursor to the clipboard\n<kbd>Ctrl + L</kbd>  | Clear the screen\n\n### History\n\nYou can use <kbd>Up arrow</kbd> and <kbd>Down arrow</kbd> to walk through the history of commands executed.\n\n[![History](https://github.com/c-bata/assets/raw/master/go-prompt/history.gif)](#history)\n\n### Multiple platform support\n\nWe have confirmed go-prompt works fine in the following terminals:\n\n* iTerm2 (macOS)\n* Terminal.app (macOS)\n* Command Prompt (Windows)\n* gnome-terminal (Ubuntu)\n\n## Links\n\n* [Change Log](./CHANGELOG.md)\n* [GoDoc](http://godoc.org/github.com/c-bata/go-prompt)\n* [gocover.io](https://gocover.io/github.com/c-bata/go-prompt)\n\n## Author\n\nMasashi Shibata\n\n* Twitter: [@c\\_bata\\_](https://twitter.com/c_bata_/)\n* Github: [@c-bata](https://github.com/c-bata/)\n\n## License\n\nThis software is licensed under the MIT license, see [LICENSE](./LICENSE) for more information.\n\n'