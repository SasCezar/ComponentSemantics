b'![](https://raw.githubusercontent.com/bhilburn/powerlevel9k-logo/master/logo-banner.png)\n---\n[![Build Status](https://travis-ci.org/bhilburn/powerlevel9k.svg?branch=master)](https://travis-ci.org/bhilburn/powerlevel9k)\n[![Join the chat at https://gitter.im/bhilburn/powerlevel9k](https://badges.gitter.im/bhilburn/powerlevel9k.svg)](https://gitter.im/bhilburn/powerlevel9k?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nPowerlevel9k is a theme for ZSH which uses [Powerline\nFonts](https://github.com/powerline/fonts). It can be used with vanilla ZSH or\nZSH frameworks such as [Oh-My-Zsh](https://github.com/robbyrussell/oh-my-zsh),\n[Prezto](https://github.com/sorin-ionescu/prezto),\n[Antigen](https://github.com/zsh-users/antigen), and [many\nothers](https://github.com/bhilburn/powerlevel9k/wiki/Install-Instructions).\n\nGet more out of your terminal. Be a badass. Impress everyone in \'Screenshot Your\nDesktop\' threads. Use powerlevel9k.\n\n![](http://bhilburn.org/content/images/2015/01/pl9k-improved.png)\n\nYou can check out some other users\' configurations in our wiki: [Show Off Your\nConfig](https://github.com/bhilburn/powerlevel9k/wiki/Show-Off-Your-Config).\n\nThere are a number of Powerline ZSH themes available, now. The developers of\nthis theme focus on four primary goals:\n\n1. Give users a great out-of-the-box configuration with no additional\n   configuration required.\n2. Make customization easy for users who do want to tweak their prompt.\n3. Provide useful segments that you can enable to make your prompt even more\n   effective and helpful. We have prompt segments for everything from unit test\n   coverage to your AWS instance.\n4. Optimize the code for execution speed as much as possible. A snappy terminal\n   is a happy terminal.\n\nPowerlevel9k can be used to create both very useful and beautiful terminal environments:\n\n![](https://camo.githubusercontent.com/b5d7eb49a30bfe6bdb5706fa3c9be95fe8e5956e/687474703a2f2f67696679752e636f6d2f696d616765732f70396b6e65772e676966)\n\n### Table of Contents\n\n1. [Installation](#installation)\n2. [Customization](#prompt-customization)\n    1. [Stylizing Your Prompt](https://github.com/bhilburn/powerlevel9k/wiki/Stylizing-Your-Prompt)\n    2. [Customizing Prompt Segments](#customizing-prompt-segments)\n    3. [Available Prompt Segments](#available-prompt-segments)\n3. [Troubleshooting](https://github.com/bhilburn/powerlevel9k/wiki/Troubleshooting)\n\nBe sure to also [check out the Wiki](https://github.com/bhilburn/powerlevel9k/wiki)!\n\n### Installation\nThere are two installation steps to go from a vanilla terminal to a PL9k\nterminal. Once you are done, you can optionally customize your prompt.\n\n[Installation Instructions](https://github.com/bhilburn/powerlevel9k/wiki/Install-Instructions)\n\n1. [Install the Powerlevel9k Theme](https://github.com/bhilburn/powerlevel9k/wiki/Install-Instructions#step-1-install-powerlevel9k)\n2. [Install Powerline Fonts](https://github.com/bhilburn/powerlevel9k/wiki/Install-Instructions#step-2-install-a-powerline-font)\n\nNo configuration is necessary post-installation if you like the default\nsettings, but there are plenty of segment customization options available if you\nare interested.\n\n### Prompt Customization\n\nBe sure to check out the wiki page on the additional prompt customization\noptions, including color and icon settings: [Stylizing Your Prompt](https://github.com/bhilburn/powerlevel9k/wiki/Stylizing-Your-Prompt)\n\n#### Customizing Prompt Segments\nCustomizing your prompt is easy! Select the segments you want to have displayed,\nand then assign them to either the left or right prompt by adding the following\nvariables to your `~/.zshrc`.\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_LEFT_PROMPT_ELEMENTS`|`(context dir vcs)`|Segment list for left prompt|\n|`POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS`|`(status root_indicator background_jobs history time)`|Segment list for right prompt|\n\n\nThe table above shows the default values, so if you wanted to set these\nvariables manually, you would put the following in\nyour `~/.zshrc`:\n```zsh\nPOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir vcs)\nPOWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs history time)\n```\n#### Available Prompt Segments\nThe segments that are currently available are:\n\n**System Status Segments:**\n* [`background_jobs`](#background_jobs) - Indicator for background jobs.\n* [`battery`](#battery) - Current battery status.\n* [`context`](#context) - Your username and host, conditionalized based on $USER and SSH status.\n* [`date`](#date) - System date.\n* [`dir`](#dir) - Your current working directory.\n* `dir_writable` - Displays a lock icon, if you do not have write permissions on the current folder.\n* [`disk_usage`](#disk_usage) - Disk usage of your current partition.\n* `history` - The command number for the current line.\n* [`host`](#host) - Your current host name\n* [`ip`](#ip) - Shows the current IP address.\n* [`vpn_ip`](#vpn_ip) - Shows the current VPN IP address.\n* [`public_ip`](#public_ip) - Shows your public IP address.\n* [`load`](#load) - Your machine\'s load averages.\n* `os_icon` - Display a nice little icon, depending on your operating system.\n* `ram` - Show free RAM.\n* `root_indicator` - An indicator if the user has superuser status.\n* [`status`](#status) - The return code of the previous command.\n* `swap` - Prints the current swap size.\n* [`time`](#time) - System time.\n* [`user`](#user) - Your current username\n* [`vi_mode`](#vi_mode)- Your prompt\'s Vi editing mode (NORMAL|INSERT).\n* `ssh` - Indicates whether or not you are in an SSH session.\n\n**Development Environment Segments:**\n* [`vcs`](#vcs) - Information about this `git` or `hg` repository (if you are in one).\n\n**Language Segments:**\n* **GoLang Segments:**\n    * `go_version` - Show the current GO version.\n* **Javascript / Node.js Segments:**\n    * `node_version` - Show the version number of the installed Node.js.\n    * [`nodeenv`](#nodeenv) - [nodeenv](https://github.com/ekalinin/nodeenv) prompt for displaying node version and environment name.\n    * `nvm` - Show the version of Node that is currently active, if it differs from the version used by NVM\n* **PHP Segments:**\n    * `php_version` - Show the current PHP version.\n    * `laravel_version` - Show the current Laravel version.\n    * [`symfony2_tests`](#symfony2_tests) - Show a ratio of test classes vs code classes for Symfony2.\n    * `symfony2_version` - Show the current Symfony2 version, if you are in a Symfony2-Project dir.\n* **Python Segments:**\n    * [`virtualenv`](#virtualenv) - Your Python [VirtualEnv](https://virtualenv.pypa.io/en/latest/).\n    * [`anaconda`](#anaconda) - Your active [Anaconda](https://www.continuum.io/why-anaconda) environment.\n    * `pyenv` - Your active python version as reported by the first word of [`pyenv version`](https://github.com/yyuu/pyenv). Note that the segment is not displayed if that word is _system_ i.e. the segment is inactive if you are using system python.\n* **Ruby Segments:**\n    * [`chruby`](#chruby) - Ruby environment information using `chruby` (if one is active).\n    * [`rbenv`](#rbenv) - Ruby environment information using `rbenv` (if one is active).\n    * [`rspec_stats`](#rspec_stats) - Show a ratio of test classes vs code classes for RSpec.\n    * `rvm` - Ruby environment information using `$GEM_HOME` and `$MY_RUBY_HOME` (if one is active).\n* **Rust Segments:**\n    * `rust_version` - Display the current rust version and [logo](https://www.rust-lang.org/logos/rust-logo-blk.svg).\n* **Swift Segments:**\n    * `swift_version` - Show the version number of the installed Swift.\n* **Java Segments:**\n    * `java_version` - Show the current Java version.\n\n**Cloud Segments:**\n* **AWS Segments:**\n    * [`aws`](#aws) - The current AWS profile, if active.\n    * `aws_eb_env` - The current Elastic Beanstalk Environment.\n* `docker_machine` - The current Docker Machine.\n* `kubecontext` - The current context of your `kubectl` configuration.\n* `dropbox` - Indicates Dropbox directory and syncing status using `dropbox-cli`\n\n**Other:**\n* [`custom_command`](#custom_command) - Create a custom segment to display the\n  output of an arbitrary command.\n* [`command_execution_time`](#command_execution_time) - Display the time the current command took to execute.\n* [`todo`](http://todotxt.com/) - Shows the number of tasks in your todo.txt tasks file.\n* `detect_virt` - Virtualization detection with systemd\n* `newline` - Continues the prompt on a new line.\n* `openfoam` - Shows the currently sourced [OpenFOAM](https://openfoam.org/) environment.\n\n---------------------------------------------------------------------------------\n\n\n##### anaconda\n\nThis segment shows your active anaconda environment. It relies on either the\n`CONDA_ENV_PATH` or the `CONDA_PREFIX` (depending on the `conda` version)\nenvironment variable to be set which happens when you properly `source\nactivate` an environment.\n\nSpecial configuration variables:\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_ANACONDA_LEFT_DELIMITER`|"("|The left delimiter just before the environment name.|\n|`POWERLEVEL9K_ANACONDA_RIGHT_DELIMITER`|")"|The right delimiter just after the environment name.|\n\nAdditionally the following segment specific parameters can be used to customize\nit: `POWERLEVEL9K_PYTHON_ICON`, `POWERLEVEL9K_ANACONDA_BACKGROUND`, and\n`POWERLEVEL9K_ANACONDA_FOREGROUND`.\n\n##### aws\n\nIf you would like to display the [current AWS\nprofile](http://docs.aws.amazon.com/cli/latest/userguide/installing.html), add\nthe `aws` segment to one of the prompts, and define `AWS_DEFAULT_PROFILE` in\nyour `~/.zshrc`:\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`AWS_DEFAULT_PROFILE`|None|Your AWS profile name|\n\n##### background_jobs\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_BACKGROUND_JOBS_VERBOSE`|`true`|If there is more than one background job, this segment will show the number of jobs. Set this to `false` to turn this feature off.|\n`POWERLEVEL9K_BACKGROUND_JOBS_VERBOSE_ALWAYS`|`false`|Always show the jobs count (even if it\'s zero).|\n\n##### battery\n\nThe default settings for this segment will display your current battery status (fails gracefully on\nsystems without a battery). It is supported on both OSX and Linux (note that it requires `acpi` on Linux).\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_BATTERY_CHARGING`|`"yellow"`|Color to indicate a charging battery.|\n|`POWERLEVEL9K_BATTERY_CHARGED`|`"green"`|Color to indicate a charged battery.|\n|`POWERLEVEL9K_BATTERY_DISCONNECTED`|`$DEFAULT_COLOR`|Color to indicate absence of battery.|\n|`POWERLEVEL9K_BATTERY_LOW_THRESHOLD`|`10`|Threshold to consider battery level critical.|\n|`POWERLEVEL9K_BATTERY_LOW_COLOR`|`"red"`|Color to indicate critically low charge level.|\n|`POWERLEVEL9K_BATTERY_VERBOSE`|`true`|Display time remaining next to battery level.|\n|`POWERLEVEL9K_BATTERY_HIDE_ABOVE_THRESHOLD`|`unset`|Threshold from which the battery segment should not be displayed.|\n\nNote that you can [modify the `_FOREGROUND`\ncolor](https://github.com/bhilburn/powerlevel9k/wiki/Stylizing-Your-Prompt#segment-color-customization)\nwithout affecting the icon color.\n\nYou can also change the battery icon automatically depending on the battery\nlevel. This will override the default battery icon. In order to do this, you\nneed to define the `POWERLEVEL9k_BATTERY_STAGES` variable.\n\n\n| Variable                      | Default Value | Description                                                   |\n|-------------------------------|---------------|---------------------------------------------------------------|\n| `POWERLEVEL9K_BATTERY_STAGES` | Unset         | A string or array, which each index indicates a charge level. |\n\nPowerlevel9k will use each index of the string or array as a stage to indicate battery\ncharge level, progressing from left to right. You can provide any number of\nstages. The setting below, for example, provides 8 stages for Powerlevel9k to use.\n```zsh\nPOWERLEVEL9K_BATTERY_STAGES="\xe2\x96\x81\xe2\x96\x82\xe2\x96\x83\xe2\x96\x84\xe2\x96\x85\xe2\x96\x86\xe2\x96\x87\xe2\x96\x88"\n```\n\nIf you require extra spacing after the icon, you will have to set it as an array,\nsince spaces in the string will be used as one of the stages and you will get a\nmissing icon. To do this, declare the variable as follows:\n```zsh\nPOWERLEVEL9K_BATTERY_STAGES=($\'\\u2581 \' $\'\\u2582 \' $\'\\u2583 \' $\'\\u2584 \' $\'\\u2585 \' $\'\\u2586 \' $\'\\u2587 \' $\'\\u2588 \')\n```\n\nUsing the array syntax, you can create stages comprised of multiple characters.\nThe below setting provides 40 battery stages.\n```zsh\nPOWERLEVEL9K_BATTERY_STAGES=(\n   $\'\xe2\x96\x8f    \xe2\x96\x8f\' $\'\xe2\x96\x8e    \xe2\x96\x8f\' $\'\xe2\x96\x8d    \xe2\x96\x8f\' $\'\xe2\x96\x8c    \xe2\x96\x8f\' $\'\xe2\x96\x8b    \xe2\x96\x8f\' $\'\xe2\x96\x8a    \xe2\x96\x8f\' $\'\xe2\x96\x89    \xe2\x96\x8f\' $\'\xe2\x96\x88    \xe2\x96\x8f\'\n   $\'\xe2\x96\x88\xe2\x96\x8f   \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x8e   \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x8d   \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x8c   \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x8b   \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x8a   \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x89   \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x8f\'\n   $\'\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8e  \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8d  \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8c  \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8b  \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8a  \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x89  \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x8f\'\n   $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8e \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8d \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8c \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8b \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8a \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x89 \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x8f\'\n   $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8e\xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8d\xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8c\xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8b\xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8a\xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x89\xe2\x96\x8f\' $\'\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8f\' )\n```\n\nYou can also change the background of the segment automatically depending on the\nbattery level. This will override the following variables:\n`POWERLEVEL9K_BATTERY_CHARGING`, `POWERLEVEL9K_BATTERY_CHARGED`,\n`POWERLEVEL9K_BATTERY_DISCONNECTED`, and `POWERLEVEL9K_BATTERY_LOW_COLOR`. In\norder to do this, define a color array, from low to high, as shown below:\n```zsh\nPOWERLEVEL9K_BATTERY_LEVEL_BACKGROUND=(red1 orangered1 darkorange orange1 gold1 yellow1 yellow2 greenyellow chartreuse1 chartreuse2 green1)\n```\n\nAs with the battery stages, you can use any number of colors and Powerlevel9k\nwill automatically use all of them appropriately.\n\nSome example settings:\n\n| Brightness     | Possible Array                                                                                                |\n|----------------|---------------------------------------------------------------------------------------------------------------|\n| Bright Colors  | `(red1 orangered1 darkorange orange1 gold1 yellow1 yellow2 greenyellow chartreuse1 chartreuse2 green1)`       |\n| Normal Colors  | `(red3 darkorange3 darkgoldenrod gold3 yellow3 chartreuse2 mediumspringgreen green3 green3 green4 darkgreen)` |\n| Subdued Colors | `(darkred orange4 yellow4 yellow4 chartreuse3 green3 green4 darkgreen)`                                       |\n\n##### chruby\n\nThis segment shows the version of Ruby being used when using `chruby` to change your current Ruby stack.\n\nIt uses `$RUBY_ENGINE` and `$RUBY_VERSION` as set by `chruby`.\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_CHRUBY_SHOW_ENGINE`|true|Show the currently selected Ruby engine (e.g. `ruby`, `jruby`, `rbx`, etc)\n|`POWERLEVEL9K_CHRUBY_SHOW_VERSION`|true|Shows the currently selected engine\'s version (e.g. `2.5.1`)\n\n##### command_execution_time\n\nDisplay the time the previous command took to execute if the time is above\n`POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD`. The time is formatted to be\n"human readable", and so scales the units based on the length of execution time.\nIf you want more precision, just set the\n`POWERLEVEL9K_COMMAND_EXECUTION_TIME_PRECISION` field.\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD`|3|Threshold above which to print this segment. Can be set to `0` to always print.|\n|`POWERLEVEL9K_COMMAND_EXECUTION_TIME_PRECISION`|2|Number of digits to use in the fractional part of the time value.|\n\n##### custom_command\n\nThe `custom_...` segment allows you to turn the output of a custom command into\na prompt segment. As an example, if you wanted to create a custom segment to\ndisplay your WiFi signal strength, you might define a custom segment called\n`custom_wifi_signal` like this:\n```zsh\nPOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context time battery dir vcs virtualenv custom_wifi_signal)\nPOWERLEVEL9K_CUSTOM_WIFI_SIGNAL="echo signal: \\$(nmcli device wifi | grep yes | awk \'{print \\$8}\')"\nPOWERLEVEL9K_CUSTOM_WIFI_SIGNAL_BACKGROUND="blue"\nPOWERLEVEL9K_CUSTOM_WIFI_SIGNAL_FOREGROUND="yellow"\n```\nIf you prefer, you can also define the function in your `.zshrc` rather than\nputting it in-line with the variable export, as shown above. Just don\'t forget\nto invoke your function from your segment! Example code that achieves the same\nresult as the above:\n```zsh\nzsh_wifi_signal(){\n    local signal=$(nmcli device wifi | grep yes | awk \'{print $8}\')\n    local color=\'%F{yellow}\'\n    [[ $signal -gt 75 ]] && color=\'%F{green}\'\n    [[ $signal -lt 50 ]] && color=\'%F{red}\'\n    echo -n "%{$color%}\\uf230  $signal%{%f%}" # \\uf230 is \xef\x88\xb0\n}\n\nPOWERLEVEL9K_CUSTOM_WIFI_SIGNAL="zsh_wifi_signal"\nPOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context time battery dir vcs virtualenv custom_wifi_signal)\n```\nThe command, above, gives you the wireless signal segment shown below:\n\n![signal](http://i.imgur.com/hviMATC.png)\n\nYou can define as many custom segments as you wish. If you think you have\na segment that others would find useful, please consider upstreaming it to the\nmain theme distribution so that everyone can use it!\n\n##### context\n\nThe `context` segment (user@host string) is conditional. By default, it will\nonly print if you are not your \'normal\' user (including if you are root), or if\nyou are SSH\'d to a remote host. `SUDO` and `REMOTE_SUDO` states are also available to show whether the current user or remote user has superuser privileges.\n\nTo use this feature, make sure the `context` segment is enabled in your prompt\nelements (it is by default), and define a `DEFAULT_USER` in your `~/.zshrc`.\n\nYou can customize the `context` segment. For example, you can make it to print the\nfull hostname by setting\n\n```\nPOWERLEVEL9K_CONTEXT_TEMPLATE="%n@`hostname -f`"\n```\n\nYou can set the `POWERLEVEL9K_CONTEXT_HOST_DEPTH` variable to change how the\nhostname is displayed. See [ZSH Manual](http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Login-information)\nfor details. The default is set to %m which will show the hostname up to the first \xe2\x80\x98.\xe2\x80\x99\nYou can set it to %{N}m where N is an integer to show that many segments of system\nhostname. Setting N to a negative integer will show that many segments from the\nend of the hostname.\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`DEFAULT_USER`|None|Username to consider a "default context" (you can also set `$USER`).|\n|`POWERLEVEL9K_ALWAYS_SHOW_CONTEXT`|false|Always show this segment, including $USER and hostname.|\n|`POWERLEVEL9K_ALWAYS_SHOW_USER`|false|Always show the username, but conditionalize the hostname.|\n|`POWERLEVEL9K_CONTEXT_TEMPLATE`|%n@%m|Default context prompt (username@machine). Refer to the [ZSH Documentation](http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html) for all possible expansions, including deeper host depths.|\n\nThis segment can have different states. They might help you to visualize your\ndifferent privileges. Read more about styling with states [here](https://github.com/bhilburn/powerlevel9k/wiki/Stylizing-Your-Prompt#special-segment-colors).\n\n| State         | Meaning                                                  |\n|---------------|----------------------------------------------------------|\n| `DEFAULT`     | You are a normal user                                    |\n| `ROOT`        | You are the root user                                    |\n| `SUDO`        | You are using elevated rights                            |\n| `REMOTE_SUDO` | You are SSH\'ed into the machine and have elevated rights |\n| `REMOTE`      | You are SSH\'ed into the machine                          |\n\n##### date\n\nThe `date` segment shows the current system date.\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_DATE_FORMAT`|`%D{%d.%m.%y}`|[ZSH time format](http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Date-and-time) to use in this segment.|\n\n##### dir\n\nThe `dir` segment shows the current working directory. When using the "Awesome\nPowerline" fonts, there are additional glyphs, as well:\n\n| `Compatible` | `Powerline` | `Awesome Powerline` | Situation\n|------------|-----------|-------------------|----------------------------\n| None       | None      | ![](https://cloud.githubusercontent.com/assets/1544760/12183451/40ec4016-b58f-11e5-9b9e-74e2b2f0b8b3.png) | At the root of your home folder |\n| None       | None      | ![](https://cloud.githubusercontent.com/assets/1544760/12369315/8a5d762c-bbf5-11e5-8a20-ca1179f48d6c.png) | Within a subfolder of your home directory |\n| None       | None      | ![](https://cloud.githubusercontent.com/assets/1544760/12183452/40f79286-b58f-11e5-9b8c-ed1343a07b08.png) | Outside of your home folder |\n| None       | None      | \xe2\x9a\x99 | Within the `/etc` directory |\n\nTo turn off these icons you could set these variables to an empty string.\n```zsh\nPOWERLEVEL9K_HOME_ICON=\'\'\nPOWERLEVEL9K_HOME_SUB_ICON=\'\'\nPOWERLEVEL9K_FOLDER_ICON=\'\'\nPOWERLEVEL9K_ETC_ICON=\'\'\n```\nYou can limit the output to a certain length by truncating long paths.\nCustomizations available are:\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_DIR_PATH_ABSOLUTE`|None|If set to `true`, will use absolute paths instead of home folder abbreviation `~`|\n|`POWERLEVEL9K_SHORTEN_DIR_LENGTH`|`2`|If your shorten strategy, below, is entire directories, this field determines how many directories to leave at the end. If your shorten strategy is by character count, this field determines how many characters to allow per directory string.|\n|`POWERLEVEL9K_SHORTEN_STRATEGY`|None|How the directory strings should be truncated. See the table below for more informations.|\n|`POWERLEVEL9K_SHORTEN_DELIMITER`|`..`|Delimiter to use in truncated strings. This can be any string you choose, including an empty string if you wish to have no delimiter.|\n\n| Strategy Name | Description |\n|---------------|-------------|\n|Default|Truncate whole directories from left. How many is defined by `POWERLEVEL9K_SHORTEN_DIR_LENGTH`|\n|`truncate_absolute_chars`|Truncates an absolute number of characters from the left such that the number of characters that your path displays (with or without `POWERLEVEL9K_SHORTEN_DELIMITER`) is no more than `POWERLEVEL9K_SHORTEN_DIR_LENGTH` + the length of `POWERLEVEL9K_SHORTEN_DELIMITER` |\n|`truncate_middle`|Truncates the middle part of a folder. E.g. you are in a folder named `~/MySuperProjects/AwesomeFiles/BoringOffice`, then it will truncated to `~/MyS..cts/Awe..les/BoringOffice`, if `POWERLEVEL9K_SHORTEN_DIR_LENGTH=3` is also set (controls the amount of characters to be left).|\n|`truncate_from_right`|Just leaves the beginning of a folder name untouched. E.g. your folders will be truncated like so: `/ro../Pr../office`. How many characters will be untouched is controlled by `POWERLEVEL9K_SHORTEN_DIR_LENGTH`.|\n|`truncate_absolute`|Truncates everything exept the last few characters in the path. E.g. if you are in a folder named `~/Projects/powerlevel9k` and you have set `POWERLEVEL9K_SHORTEN_DIR_LENGTH=3`, you will get `..l9k`.|\n|`truncate_to_last`|Truncates everything before the last folder in the path.|\n|`truncate_to_first_and_last`|Truncate middle directories from the path. How many directories will be untouched is controlled by `POWERLEVEL9K_SHORTEN_DIR_LENGTH`. E.g. if you are in a folder named `~/Projects/powerlevel9k` and you have set `POWERLEVEL9K_SHORTEN_DIR_LENGTH=1`, you will get `~/../powerlevel9k`.||\n|`truncate_to_unique`|Parse all parent path components and truncate them to the shortest unique length. If you copy & paste the result to a shell, after hitting `TAB` it should expand to the original path unambiguously.|\n|`truncate_with_package_name`|Search for a `package.json` or `composer.json` and prints the `name` field to abbreviate the directory path. The precedence and/or files could be set by `POWERLEVEL9K_DIR_PACKAGE_FILES=(package.json composer.json)`. If you have [jq](https://stedolan.github.io/jq/) installed, it will dramatically improve the speed of this strategy.|\n|`truncate_with_folder_marker`|Search for a file that is specified by `POWERLEVEL9K_SHORTEN_FOLDER_MARKER` and truncate everything before that (if found, otherwise stop on $HOME and ROOT).|\n\nFor example, if you wanted the truncation behavior of the `fish` shell, which\ntruncates `/usr/share/plasma` to `/u/s/plasma`, you would use the following:\n```zsh\nPOWERLEVEL9K_SHORTEN_DIR_LENGTH=1\nPOWERLEVEL9K_SHORTEN_DELIMITER=""\nPOWERLEVEL9K_SHORTEN_STRATEGY="truncate_from_right"\n```\nIn each case you have to specify the length you want to shorten the directory\nto. So in some cases `POWERLEVEL9K_SHORTEN_DIR_LENGTH` means characters, in\nothers whole directories.\n\nThe `truncate_with_package_name` strategy gives your directory path relative to the root of your project.  For example, if you have a project inside `$HOME/projects/my-project` with a `package.json` that looks like:\n\n```json\n{\n  "name": "my-cool-project"\n}\n```\n\nThe path shown would be `my-cool-project`.  If you navigate to `$HOME/projects/my-project/src`, then the path shown would be `my-cool-project/src`.  Please note that this currently looks for `.git` directory to determine the root of the project.\n\nIf you want to customize the directory separator, you could set:\n```zsh\n# Double quotes are important here!\nPOWERLEVEL9K_DIR_PATH_SEPARATOR="%F{red} $(print_icon \'LEFT_SUBSEGMENT_SEPARATOR\') %F{black}"\n```\nTo omit the first character (usually a slash that gets replaced if you set `POWERLEVEL9K_DIR_PATH_SEPARATOR`),\nyou could set `POWERLEVEL9K_DIR_OMIT_FIRST_CHARACTER=true`.\n\nYou can also customize the leading tilde character when you are in `$HOME` using:\n```zsh\n# Double quotes are important here!\nPOWERLEVEL9K_HOME_FOLDER_ABBREVIATION="%F{red} $(print_icon \'HOME_ICON\') %F{black}"\n```\nYou can also configure the `dir` segment to show when you are in a directory without write permissions, using the variable below.\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_DIR_SHOW_WRITABLE`|`false`|If set to `true` and you are in a directory that you do not have write permissions for, this segment will display a lock icon and enter the `NOT_WRITABLE` state (which can be customized per [our usual process](https://github.com/bhilburn/powerlevel9k/wiki/Stylizing-Your-Prompt#segment-color-customization)). Note that this functionality is also available in a separate segment, `dir_writable`.|\n\nIf you want to customize the last directory of the path, you can now set `POWERLEVEL9K_DIR_PATH_HIGHLIGHT_FOREGROUND` to a custom color and/or `POWERLEVEL9K_DIR_PATH_HIGHLIGHT_BOLD=true` to display that part in bold.\n\nYou can also color the separator separately by setting the color using `POWERLEVEL9K_DIR_PATH_SEPARATOR_FOREGROUND`.\n\n##### disk_usage\n\nThe `disk_usage` segment will show the usage level of the partition that your current working directory resides in. It can be configured with the following variables.\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_DISK_USAGE_ONLY_WARNING`|false|Hide the segment except when usage levels have hit warning or critical levels.|\n|`POWERLEVEL9K_DISK_USAGE_WARNING_LEVEL`|90|The usage level that triggers a warning state.|\n|`POWERLEVEL9K_DISK_USAGE_CRITICAL_LEVEL`|95|The usage level that triggers a critical state.|\n\n##### host\n\nThe `host` segment will print the hostname.\n\nYou can set the `POWERLEVEL9K_HOST_TEMPLATE` variable to change how the hostname\nis displayed. See (ZSH Manual)[http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Login-information]\nfor details. The default is set to `%m` which will show the hostname up to the\nfirst `.`. You can set it to `%{N}m` where N is an integer to show that many\nsegments of system hostname. Setting `N` to a negative integer will show that many\nsegments from the end of the hostname.\n\n```\nPOWERLEVEL9K_HOST_TEMPLATE="%2m"\n```\n\nBy default, LOCAL hosts will show the host icon and remote hosts will show the SSH icon. You can override them by setting\n```\nPOWERLEVEL9K_HOST_ICON="\\uF109 "\nPOWERLEVEL9K_SSH_ICON="\\uF489 "\n```\n\n\n##### ip\n\nThis segment tries to examine all currently used network interfaces and prints\nthe first address it finds.  In the case that this is not the right NIC, you can\nspecify the correct network interface by setting:\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_IP_INTERFACE`|None|The NIC for which you wish to display the IP address. Example: `eth0`.|\n\n##### vpn_ip\n\nThis segment tries to extract the VPN related IP addresses from nmcli, based on the NIC type:\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_VPN_IP_INTERFACE`|`tun`|The VPN interface.|\n\n##### public_ip\n\nThis segment will display your public IP address. There are several methods of obtaining this\ninformation and by default it will try all of them starting with the most efficient. You can\nalso specify which method you would like it to use. The methods available are dig using opendns,\ncurl, or wget. The host used for wget and curl is http://ident.me by default but can be set to\nanother host if you prefer.\n\nIf you activate a VPN, the icon for this segment will change to the defined VPN icon.\n\nThe public_ip segment will attempt to update your public IP address every 5 minutes by default(also\nconfigurable by the user). If you lose connection your cached IP address will be displayed until\nyour timeout expires at which point every time your prompt is generated a new attempt will be made.\nUntil an IP is successfully pulled the value of $POWERLEVEL9K_PUBLIC_IP_NONE will be displayed for\nthis segment. If this value is empty(the default)and $POWERLEVEL9K_PUBLIC_IP_FILE is empty the\nsegment will not be displayed.\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_PUBLIC_IP_FILE`|\'/tmp/p9k_public_ip\'|This is the file your public IP is cached in.|\n|`POWERLEVEL9K_PUBLIC_IP_HOST`|\'http://ident.me\'|This is the default host to get your public IP.|\n|`POWERLEVEL9K_PUBLIC_IP_TIMEOUT`|300|The amount of time in seconds between refreshing your cached IP.|\n|`POWERLEVEL9K_PUBLIC_IP_METHODS`|(dig curl wget)| These methods in that order are used to refresh your IP.|\n|`POWERLEVEL9K_PUBLIC_IP_NONE`|None|The string displayed when an IP was not obtained|\n\n##### load\n\nDisplays one of your load averages with appropriate state coloring. The thresholds are:\n- `0.7 * NUM_CORES <`: critical\n- `0.5 * NUM_CORES <`: warning\n- `less`: normal\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_LOAD_WHICH`|5|Which average to show. Possible values: 1, 5 or 15|\n\n##### newline\n\nPuts a newline in your prompt so you can continue using segments on the next\nline. This allows you to use segments on both lines, unlike\n`POWERLEVEL9K_PROMPT_ON_NEWLINE`, which simply separates segments from the\nprompt itself.\n\nThis only works on the left side.  On the right side it does nothing.\n\n##### nodeenv\n\nShows the currently used [nodeenv](https://github.com/ekalinin/nodeenv). To avoid\nNodeenvs activate command from interfering with Powerlevel9k, you should set\n`NODE_VIRTUAL_ENV_DISABLE_PROMPT=1` in your `~/.zshrc`.\n\n##### rbenv\n\nThis segment shows the version of Ruby being used when using `rbenv` to change your current Ruby stack.\n\nIt figures out the version being used by taking the output of the `rbenv version-name` command.\n\n* If `rbenv` is not in $PATH, nothing will be shown.\n* By default, if the current local Ruby version is the same as the global Ruby version, nothing will be shown. See the configuration variable, below, to modify this behavior.\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_RBENV_PROMPT_ALWAYS_SHOW`|`false`|Set to true if you wish to show the rbenv segment even if the current Ruby version is the same as the global Ruby version|\n\n##### pyenv\n\nThis segment shows the version of Python being used when using `pyenv` to change your current Python stack.\n\nThe `PYENV_VERSION` environment variable will be used if specified. Otherwise it figures out the version being used by taking the output of the `pyenv version-name` command.\n\n* If `pyenv` is not in $PATH, nothing will be shown.\n* If the current Python version is the same as the global Python version, nothing will be shown.\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_PYENV_PROMPT_ALWAYS_SHOW`|`false`|Set to true if you wish to show the pyenv segment even if the current Python version is the same as the global Python version|\n\n##### rspec_stats\n\nSee [Unit Test Ratios](#unit-test-ratios), below.\n\n##### status\n\nThis segment shows the return code of the last command.\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_STATUS_CROSS`|`false`|Set to true if you wish not to show the error code when the last command returned an error and optionally hide this segment when the last command completed successfully by setting `POWERLEVEL9K_STATUS_OK` to false.|\n|`POWERLEVEL9K_STATUS_OK`|`true`|Set to true if you wish to show this segment when the last command completed successfully, false to hide it.|\n|`POWERLEVEL9K_STATUS_SHOW_PIPESTATUS`|`true`|Set to true if you wish to show the exit status for all piped commands.|\n|`POWERLEVEL9K_STATUS_HIDE_SIGNAME`|`false`|Set to true return the raw exit code (`1-255`).  When set to false, values over 128 are shown as `SIGNAME(-n)` (e.g. `KILL(-9)`)|\n\n##### ram\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_RAM_ELEMENTS`|Both|Specify `ram_free` or `swap_used` to only show one or the other rather than both.|\n\n##### symfony2_tests\n\nSee [Unit Test Ratios](#unit-test-ratios), below.\n\n##### time\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_TIME_FORMAT`|`\'H:M:S\'`|ZSH time format to use in this segment.|\n\nAs an example, if you wanted a reversed time format, you would use this:\n```zsh\n# Reversed time format\nPOWERLEVEL9K_TIME_FORMAT=\'%D{%S:%M:%H}\'\n```\nIf you are using an "Awesome Powerline Font", you can add a time symbol to this\nsegment, as well:\n```zsh\n# Output time, date, and a symbol from the "Awesome Powerline Font" set\nPOWERLEVEL9K_TIME_FORMAT="%D{%H:%M:%S \\uE868  %d.%m.%y}"\n```\n##### user\n\nThe `user` segment will print the username.\n\nYou can also override the icons by setting:\n\n```\nPOWERLEVEL9K_USER_ICON="\\uF415" # \xef\x90\x95\nPOWERLEVEL9K_ROOT_ICON="#"\nPOWERLEVEL9K_SUDO_ICON=$\'\\uF09C\' # \xef\x82\x9c\n```\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`DEFAULT_USER`|None|Username to consider a "default context".|\n|`POWERLEVEL9K_ALWAYS_SHOW_USER`|`false`|Always print this segment.|\n|`POWERLEVEL9K_USER_TEMPLATE`|`%n`|Default username prompt. Refer to the [ZSH Documentation](http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html) for all possible expansions|\n\n##### vcs\n\nBy default, the `vcs` segment will provide quite a bit of information. Further\ncustomization is provided via:\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_HIDE_BRANCH_ICON`|`false`|Set to `true` to hide the branch icon from the segment.|\n|`POWERLEVEL9K_SHOW_CHANGESET`|`false`|Set to `true` to display the hash / changeset in the segment.|\n|`POWERLEVEL9K_CHANGESET_HASH_LENGTH`|`12`|How many characters of the hash / changeset to display in the segment.|\n|`POWERLEVEL9K_VCS_SHOW_SUBMODULE_DIRTY`|`true`|Set to `false` to not reflect submodule status in the top-level repository prompt.|\n|`POWERLEVEL9K_VCS_HIDE_TAGS`|`false`|Set to `true` to stop tags being displayed in the segment.|\n|`POWERLEVEL9K_VCS_GIT_HOOKS`|`(vcs-detect-changes git-untracked git-aheadbehind git-stash git-remotebranch git-tagname)`|Layout of the segment for git repositories.|\n|`POWERLEVEL9K_VCS_HG_HOOKS`|`(vcs-detect-changes)`|Layout of the segment for Mercurial repositories.|\n|`POWERLEVEL9K_VCS_SVN_HOOKS`|`(vcs-detect-changes svn-detect-changes)`|Layout of the segment for SVN repositories.|\n|`POWERLEVEL9K_VCS_ACTIONFORMAT_FOREGROUND`|`red`|The color of the foreground font during actions (e.g., `REBASE`).|\n\n\n##### vcs symbols\n\nThe `vcs` segment uses various symbols to tell you the state of your repository.\nThese symbols depend on your installed font and selected `POWERLEVEL9K_MODE`\nfrom the [Installation](#Installation) section above.\n\n| `Compatible` | `Powerline` | `Awesome Powerline` | Explanation\n|--------------|---------------------|-------------------|--------------------------\n| `\xe2\x86\x914`         | `\xe2\x86\x914`                | ![icon_outgoing](https://cloud.githubusercontent.com/assets/1544760/7976089/b5904d6e-0a76-11e5-8147-5e873ac52d79.gif)4  | Number of commits your repository is ahead of your remote branch\n| `\xe2\x86\x935`         | `\xe2\x86\x935`                | ![icon_incoming](https://cloud.githubusercontent.com/assets/1544760/7976091/b5909c9c-0a76-11e5-9cad-9bf0a28a897c.gif)5  | Number of commits your repository is behind of your remote branch\n| `\xe2\x8d\x9f3`         | `\xe2\x8d\x9f3`                | ![icon_stash](https://cloud.githubusercontent.com/assets/1544760/7976094/b5ae9346-0a76-11e5-8cc7-e98b81824118.gif)3 | Number of stashes, here 3.\n| `\xe2\x97\x8f`          | `\xe2\x97\x8f`                 | ![icon_unstaged](https://cloud.githubusercontent.com/assets/1544760/7976096/b5aefa98-0a76-11e5-9408-985440471215.gif) | There are unstaged changes in your working copy\n| `\xe2\x9c\x9a`          | `\xe2\x9c\x9a`                 | ![icon_staged](https://cloud.githubusercontent.com/assets/1544760/7976095/b5aecc8a-0a76-11e5-8988-221afc6e8982.gif) | There are staged changes in your working copy\n| `?`          | `?`                 | ![icon_untracked](https://cloud.githubusercontent.com/assets/1544760/7976098/b5c7a2e6-0a76-11e5-8c5b-315b595b2bc4.gif)  | There are files in your working copy, that are unknown to your repository\n| `\xe2\x86\x92`          | `\xe2\x86\x92`                 | ![icon_remote_tracking_branch](https://cloud.githubusercontent.com/assets/1544760/7976093/b5ad2c0e-0a76-11e5-9cd3-62a077b1b0c7.gif) | The name of your branch differs from its tracking branch.\n| `\xe2\x98\xbf`          | `\xe2\x98\xbf`                 | ![icon_bookmark](https://cloud.githubusercontent.com/assets/1544760/7976197/546cfac6-0a78-11e5-88a6-ce3a1e0a174e.gif) | A mercurial bookmark is active.\n| `@`         | ![icon_branch_powerline](https://cloud.githubusercontent.com/assets/1544760/8000852/e7e8d8a0-0b5f-11e5-9834-de9b25c92284.gif) | ![](https://cloud.githubusercontent.com/assets/1544760/7976087/b58bbe3e-0a76-11e5-8d0d-7a5c1bc7f730.gif) | Branch Icon\n| None         |  None               | ![icon_commit](https://cloud.githubusercontent.com/assets/1544760/7976088/b58f4e50-0a76-11e5-9e70-86450d937030.gif)2c3705 | The current commit hash. Here "2c3705"\n| None         |  None               | ![icon_git](https://cloud.githubusercontent.com/assets/1544760/7976092/b5909f80-0a76-11e5-9950-1438b9d72465.gif) | Repository is a git repository\n| None         |  None               | ![icon_mercurial](https://cloud.githubusercontent.com/assets/1544760/7976090/b5908da6-0a76-11e5-8c91-452b6e73f631.gif) | Repository is a Mercurial repository\n\n##### vcs truncation\n\nYou can limit the branch name to a certain length by truncating long names.\nCustomizations available are:\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_VCS_SHORTEN_LENGTH`|None|This field determines how many characters to show.|\n|`POWERLEVEL9K_VCS_SHORTEN_MIN_LENGTH`|None|This field determines minimum branch length. Branch name will be truncated if its length greater than this field.|\n|`POWERLEVEL9K_VCS_SHORTEN_STRATEGY`|None|This field determines how branch name should be truncated. See the table below for more information.|\n|`POWERLEVEL9K_SHORTEN_DELIMITER`|`...`|Delimiter to use in truncated strings. This can be any string you choose, including an empty string if you wish to have no delimiter.|\n\n| Strategy Name | Description |\n|---------------|-------------|\n|`truncate_middle`|Truncates the middle part of a branch. E.g. branch name is `1234-super_super_long_branch_name`, then it will truncated to `1234-..._name`, if `POWERLEVEL9K_VCS_SHORTEN_LENGTH=5` is also set (controls the amount of characters to be left).|\n|`truncate_from_right`|Just leaves the beginning of a branch name untouched. E.g. branch name will be truncated like so: `1234-...`. How many characters will be untouched is controlled by `POWERLEVEL9K_VCS_SHORTEN_LENGTH`.|\n\nFor example, if you want to truncate `1234-super_super_long_branch_name` to `1234-..` and don\'t do it with `development`:\n```zsh\nPOWERLEVEL9K_VCS_SHORTEN_LENGTH=4\nPOWERLEVEL9K_VCS_SHORTEN_MIN_LENGTH=11\nPOWERLEVEL9K_VCS_SHORTEN_STRATEGY="truncate_from_right"\nPOWERLEVEL9K_VCS_SHORTEN_DELIMITER=".."\n```\n\n##### vi_mode\n\nThis segment shows ZSH\'s current input mode. Note that this is only useful if\nyou are using the [ZSH Line Editor](http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html)\n(VI mode).  You can enable this either by `.zshrc` configuration or using a plugin, like\n[Oh-My-Zsh\'s vi-mode plugin](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/vi-mode/vi-mode.plugin.zsh).\n\n| Variable | Default Value | Description |\n|----------|---------------|-------------|\n|`POWERLEVEL9K_VI_INSERT_MODE_STRING`|`"INSERT"`|String to display while in \'Insert\' mode.|\n|`POWERLEVEL9K_VI_COMMAND_MODE_STRING`|`"NORMAL"`|String to display while in \'Command\' mode.|\n\nTo hide the segment entirely when in `INSERT` mode, set `POWERLEVEL9K_VI_INSERT_MODE_STRING=\'\'`\n\n##### virtualenv\n\nThis segment shows your Python [VirtualEnv](https://virtualenv.pypa.io/en/latest/). To avoid\nVirtualEnvs activate command from interfering with Powerlevel9k, you should set\n`VIRTUAL_ENV_DISABLE_PROMPT=1` in your `~/.zshrc`.\n\n#### Unit Test Ratios\n\nThe `symfony2_tests` and `rspec_stats` segments both show a ratio of "real"\nclasses vs test classes in your source code. This is just a very simple ratio,\nand does not show your code coverage or any sophisticated stats. All this does\nis count your source files and test files, and calculate the ratio between them.\nJust enough to give you a quick overview about the test situation of the project\nyou are dealing with.\n\n### Disabling / Enabling Powerlevel9k\n\nYou can disable P9k and return to a very basic prompt at any time simply by\ncalling:\n\n```zsh\n$ prompt_powerlevel9k_teardown\n```\n\nYou can then re-enable it by calling:\n\n```zsh\n$ prompt_powerlevel9k_setup\n```\n\n### tl; dr\n\nWant to just get a quick start? Check out the [Show Off Your\nConfig](https://github.com/bhilburn/powerlevel9k/wiki/Show-Off-Your-Config)\nportion of the wiki to get going.\n\n[The Wiki also has a ton of other useful\ninformation!](https://github.com/bhilburn/powerlevel9k/wiki)\n\n### License\n\nProject: MIT\n\nLogo: CC-BY-SA. Source repository: https://github.com/bhilburn/powerlevel9k-logo\n'