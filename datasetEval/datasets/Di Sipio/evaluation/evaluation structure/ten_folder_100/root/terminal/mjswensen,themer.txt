b'<p align="center">\n  <a href="https://themer.dev">\n    <img src="https://cdn.jsdelivr.net/gh/mjswensen/themer@4e78b9a50a00bab7605b4996e428b9a6c4a000b0/assets/icon.png" width="384" height="384" alt="Themer logo" />\n  </a>\n</p>\n\n# themer [![Travis](https://img.shields.io/travis/mjswensen/themer/master.svg)](https://travis-ci.org/mjswensen/themer) [![Coveralls github](https://img.shields.io/coveralls/github/mjswensen/themer/master.svg)](https://coveralls.io/github/mjswensen/themer) [![npm](https://img.shields.io/npm/dt/themer.svg)](https://github.com/mjswensen/themer#installation)\n\n`themer` takes a set of colors and generates [editor themes](#editorsides), [terminal themes](#terminals), [themes for other apps](#other), and [desktop/device wallpapers](#wallpapers).\n\n![visual description](https://cdn.jsdelivr.net/gh/mjswensen/themer@a186c8585721d5defbf4cb1bc94165144d4dd35a/assets/themer-description.png)\n\n## Table of Contents\n\n* [Installation](#installation)\n* [Usage](#usage)\n  * [Example workflow](#example-workflow)\n  * [Example usage with `npx`](#example-usage-with-npx)\n* [Themer color sets](#themer-color-sets)\n  * [Original color sets](#original-color-sets)\n  * [Ports from third-party themes](#ports-from-third-party-themes)\n  * [Create your own color set](#create-your-own-color-set)\n    * [Color mappings](#color-mappings)\n    * [Tips](#tips)\n  * [Using base16 schemes with Themer](#using-base16-schemes-with-themer)\n* [Themer templates](#themer-templates)\n  * [Terminals](#terminals)\n  * [Editors/IDEs](#editorsides)\n  * [Wallpapers](#wallpapers)\n  * [Other](#other)\n  * [Create your own template](#create-your-own-template)\n* [About](#about)\n* [Themer\'s Web UI](#themers-web-ui)\n\n## Installation\n\n_Don\'t love the command-line? Check out [the Web UI](https://themer.dev)._\n\n```sh\nmkdir my-dotfiles && cd my-dotfiles\nnpm install themer\n```\n\nIf you do not keep your dotfiles under version control, you can simply install themer globally with `npm -g install themer`.\n\n`themer` can also be used without installing, via `npx`\xe2\x80\x94see [example below](#example-usage-with-npx).\n\n## Usage\n\nPass `themer` a color set, as many templates as you wish, and an output directory.\n\n```sh\nthemer \\\n  --colors <npm package name OR file> \\\n  --template <npm package name OR file> \\\n  [--template <npm package name OR file>...] \\\n  --out <directory>\n```\n\n`themer` can create themes from your custom color sets (see ["Create your own color set"](#create-your-own-color-set) below) or from color sets published on npm (see [themer-colors-default](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-colors-default)). The same is true for templates.\n\n### Example workflow\n\nSay you wanted to generate a vim theme and desktop background using `themer`\'s default color set. First, install `themer`, the color set, and the templates:\n\n```sh\ncd my-dotfiles\nnpm install themer themer-colors-default themer-vim themer-wallpaper-block-wave\n```\n\nThen edit your `package.json`:\n\n```json\n  ...\n  "scripts": {\n    "build": "themer -c themer-colors-default -t themer-vim -t themer-wallpaper-block-wave -o gen"\n  },\n  ...\n```\n\nThen run your new script:\n\n```sh\nnpm run build\n```\n\nNow check the `gen/` folder for your generated themes. Here\'s the result:\n\n![example usage result](https://cdn.jsdelivr.net/gh/mjswensen/themer@a186c8585721d5defbf4cb1bc94165144d4dd35a/assets/example-usage.png)\n\n### Example usage with `npx`\n\n```sh\nnpx \\\n  -p themer \\\n  -p themer-colors-default \\\n  -p themer-vim \\\n  -p themer-wallpaper-block-wave \\\n  themer \\\n  -c themer-colors-default \\\n  -t themer-vim \\\n  -t themer-wallpaper-block-wave \\\n  -o output\n```\n\n## Themer color sets\n\n### Original color sets\n\n| Name | Dark Preview | Light Preview |\n| --- | --- | --- |\n| [themer-colors-default](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-colors-default) | ![themer-colors-default dark preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-default-dark-swatch.svg) | ![themer-colors-default light preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-default-light-swatch.svg) |\n| [themer-colors-night-sky](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-colors-night-sky) | ![themer-colors-night-sky dark preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-night-sky-dark-swatch.svg) | (dark only) |\n| [themer-colors-polar-ice](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-colors-polar-ice) | ![themer-colors-polar-ice dark preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-polar-ice-dark-swatch.svg) | ![themer-colors-polar-ice light preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-polar-ice-light-swatch.svg) |\n| [themer-colors-finger-paint](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-colors-finger-paint) | ![themer-colors-finger-paint dark preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-finger-paint-dark-swatch.svg) | ![themer-colors-finger-paint light preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-finger-paint-light-swatch.svg) |\n| [themer-colors-monkey](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-colors-monkey) | ![themer-colors-monkey dark preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-monkey-dark-swatch.svg) | ![themer-colors-monkey light preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-monkey-light-swatch.svg) |\n\n### Ports from third-party themes\n\n| Name | Dark Preview | Light Preview |\n| --- | --- | --- |\n| [themer-colors-one](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-colors-one) | ![themer-colors-one dark preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-one-dark-swatch.svg) | ![themer-colors-one light preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-one-light-swatch.svg) |\n| [themer-colors-lucid](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-colors-lucid) | ![themer-colors-lucid dark preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-lucid-dark-swatch.svg) | ![themer-colors-lucid light preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-lucid-light-swatch.svg) |\n| [themer-colors-solarized](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-colors-solarized) | ![themer-colors-solarized dark preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-solarized-dark-swatch.svg) | ![themer-colors-solarized light preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-solarized-light-swatch.svg) |\n| [themer-colors-github-universe](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-colors-github-universe) | ![themer-colors-github-universe preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-github-universe-dark-swatch.svg) | (dark only) |\n| [themer-colors-nova](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-colors-nova) | ![themer-colors-nova preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@6a7858561fdc72e85c87f691b89a765c21db0520/assets/preview/themer-colors-nova-dark-swatch.svg) | (dark only) |\n| [themer-colors-mojave](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-colors-mojave) | ![themer-colors-mojave dark preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@5235307bd8d5558c2b3050b4a3558cbfebbc423d/assets/preview/themer-colors-mojave-dark-swatch.svg) | ![themer-colors-mojave light preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@5235307bd8d5558c2b3050b4a3558cbfebbc423d/assets/preview/themer-colors-mojave-light-swatch.svg) |\n| [themer-colors-rivet](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-colors-rivet) | ![themer-colors-rivet dark preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@01d692d83e860a18cad9515d1605e603316158e2/assets/preview/themer-colors-rivet-dark-swatch.svg) | ![themer-colors-rivet light preview](https://cdn.jsdelivr.net/gh/mjswensen/themer@01d692d83e860a18cad9515d1605e603316158e2/assets/preview/themer-colors-rivet-light-swatch.svg) |\n\n### Create your own color set\n\nTo create your own color set, create a JavaScript file that exports a `colors` object, like so:\n\n```js\nmodule.exports.colors = {\n\n  // A color set can have both light and dark variants, but is only required\n  // to have one.\n  dark: {\n\n    // Colors can be defined in any valid CSS format.\n\n    // accent0-7 should be the main accent colors of your theme. See the table\n    // in the "Color mappings" section for how the colors will be used in your\n    // new themes.\n    accent0: \'#FF4050\',\n    accent1: \'#F28144\',\n    accent2: \'#FFD24A\',\n    accent3: \'#A4CC35\',\n    accent4: \'#26C99E\',\n    accent5: \'#66BFFF\',\n    accent6: \'#CC78FA\',\n    accent7: \'#F553BF\',\n\n    // shade0-7 should be shades of the same hue, with shade0 being the\n    // background and shade7 being the foreground. If you omit the\n    // intermediate shades (1 through 6), they will be calculated automatically\n    // for you.\n    shade0: \'#282629\',\n    shade1: \'#474247\',\n    shade2: \'#656066\',\n    shade3: \'#847E85\',\n    shade4: \'#A29DA3\',\n    shade5: \'#C1BCC2\',\n    shade6: \'#E0DCE0\',\n    shade7: \'#FFFCFF\'\n\n  },\n\n  // Same as above, except that shade0 should be the lightest and shade7 should\n  // be the darkest.\n  light: { ... },\n\n};\n```\n\nThen pass the path to your JS file to the `--colors` argument of `themer`.\n\n```\nthemer -c path/to/my/colors.js ...\n```\n\n#### Color mappings\n\nTo help you choose colors for your own color set, this is approximately how most `themer` templates will utilize your colors:\n\n| Color Key | Typical Usage |\n| --------- | ------------- |\n| `accent0` | error, VCS deletion |\n| `accent1` | syntax |\n| `accent2` | warning, VCS modification |\n| `accent3` | success, VCS addition |\n| `accent4` | syntax |\n| `accent5` | syntax |\n| `accent6` | syntax, caret/cursor |\n| `accent7` | syntax, special |\n| `shade0` | background color |\n| `shade1` | UI |\n| `shade2` | UI, text selection |\n| `shade3` | UI, code comments |\n| `shade4` | UI |\n| `shade5` | UI |\n| `shade6` | foreground text |\n| `shade7` | foreground text |\n\n#### Tips\n\n* If you omit `shade1` through `shade6`, `themer` will interpolate them automatically for you, using [color-steps](https://github.com/mjswensen/color-steps).\n* `themer` supports any valid CSS color format; that means you can use `chartreuse`, `rgb(127, 255, 0)`, `rgb(50%, 100%, 0%)`, `#7FFF00`, `hsl(90, 100%, 50%)`, etc.\n* I would recommend checking your color set into your dotfiles repo. Once you\'ve fine-tuned it, you might consider publishing it to npm for others to use! (If you do, consider naming your package starting with `themer-colors-` so that others can easily find it.)\n\n### Using base16 schemes with Themer\n\nIn place of a themer color set file or npm package, you can also provide `themer` with any base16 scheme YAML file.\n\n```\nthemer --colors path/to/base16-scheme.yml ...\n```\n\nRefer to the [base16 repository](https://github.com/chriskempson/base16#scheme-repositories) for a list of base16 schemes.\n\n## Themer templates\n\n### Terminals\n\n* [themer-hyper](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-hyper)\n* [themer-iterm](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-iterm)\n* [themer-terminal](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-terminal)\n* [agarrharr/themer-gnome-terminal](https://github.com/agarrharr/themer-gnome-terminal)\n* [themer-conemu](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-conemu)\n* [themer-cmd](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-cmd)\n* [0x52a1/themer-termite](https://github.com/0x52a1/themer-termite)\n* [0x52a1/themer-kitty](https://github.com/0x52a1/themer-kitty)\n\n### Editors/IDEs\n\n* [themer-atom-syntax](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-atom-syntax)\n* [themer-atom-ui](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-atom-ui)\n* [themer-sublime-text](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-sublime-text)\n* [themer-vim](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-vim)\n* [themer-vim-lightline](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-vim-lightline)\n* [themer-vscode](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-vscode)\n* [themer-xcode](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-xcode)\n* [themer-bbedit](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-bbedit)\n* [tomselvi/themer-jetbrains](https://github.com/tomselvi/themer-jetbrains)\n\n### Wallpapers\n\n* [themer-wallpaper-block-wave](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-wallpaper-block-wave)\n* [themer-wallpaper-octagon](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-wallpaper-octagon)\n* [themer-wallpaper-triangles](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-wallpaper-triangles)\n* [themer-wallpaper-trianglify](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-wallpaper-trianglify)\n* [themer-wallpaper-shirts](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-wallpaper-shirts)\n\n### Other\n\n* [themer-slack](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-slack)\n* [themer-alfred](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-alfred)\n* [themer-brave](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-brave)\n* [themer-chrome](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-chrome)\n* [PDDStudio/themer-android](https://github.com/PDDStudio/themer-android)\n* [themer-sketch-palettes](https://github.com/mjswensen/themer/tree/master/cli/packages/themer-sketch-palettes)\n* [tomselvi/themer-tmux](https://github.com/tomselvi/themer-tmux)\n\n### Create your own template\n\nTo create your own template, create a JavaScript file that exports a `render` function, like so:\n\n```js\nmodule.exports.render = function(colors, options) {\n\n  // colors is an object that will have one or both keys: \'light\' and\n  // \'dark\', each being an object with keys \'accent0\' through \'accent7\'\n  // and \'shade0\' through \'shade7\'.\n\n  // options is an object representing the original command-line args\n  // passed to themer. This allows you to add special arguments that\n  // will apply only to your template. An example of this is allowing a\n  // themer user to specify custom resolutions for rendering a wallpaper.\n\n  // This function should return an array of Promises, each Promise\n  // resolving to an object of the following structure:\n  // {\n  //   name: \'<the name of the file to be written>\', // can include subdirectories, too\n  //   contents: <a Buffer of the contents of the file to be written>,\n  // }\n\n};\n```\n\nYour JS file can then be passed to a `--template` argument of `themer`. That\'s it!\n\nHere\'s an [example template render function](https://github.com/mjswensen/themer/blob/master/cli/packages/themer-slack/lib/index.js) that generates a Slack sidebar theme from a `themer` color set.\n\nOnce you\'ve developed your template, consider publishing it on npm (with repository name starting with `themer-`) so that others can use it!\n\n## About\n\n`themer` is inspired by [trevordmiller/nova](https://trevordmiller.github.io/nova/) and [chriskempson/base16](http://chriskempson.com/projects/base16/).\n\nConceptually, `themer` is very similar to [base16](http://chriskempson.com/projects/base16/), but:\n\n1. It is lighter, and simpler to use.\n2. It is more easily extensible with your own color sets and templates.\n3. It integrates better with your dotfiles, especially if you keep them under version control.\n\n## Themer\'s Web UI\n\nIf you\'d prefer to develop your themes visually, check out [`themer`\'s Web UI](https://themer.dev), an offline-ready Progressive Web App.\n'