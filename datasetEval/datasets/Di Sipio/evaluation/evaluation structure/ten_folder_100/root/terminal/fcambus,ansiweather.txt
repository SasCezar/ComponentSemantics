b"## Description\n\nAnsiWeather is a Shell script for displaying the current weather conditions\nin your terminal, with support for ANSI colors and Unicode symbols.\n\n![AnsiWeather Screenshot][1]\n\nWeather data comes from the `OpenWeatherMap` free weather API.\n\n\n\n## Requirements\n\nAnsiWeather requires the following dependencies:\n\n- A command to fetch HTTP data such as FTP, cURL or wget\n- [jq][2] (lightweight and flexible command-line JSON processor)\n- [bc][3] (arbitrary precision numeric processing language), for doing float\n  arithmetic\n\n\n\n## Installation\n\nAfter cloning the repository, simply invoke the script by typing:\n\n\t./ansiweather\n\nAnsiWeather packages are available for:\n\n### OpenBSD\n\n\tpkg_add ansiweather\n\n### Pkgsrc (NetBSD, SmartOS, Mac OS X, etc.)\n\n\tpkgin install ansiweather\n\n### FreeBSD\n\n\tpkg install ansiweather\n\n### Debian\n\n\tapt-get install ansiweather\n\n### Homebrew (Mac OS X)\n\n\tbrew install ansiweather\n\n\n\n## Usage\n\n### Synopsis\n\n\tansiweather [-F] [-l location] [-u system] [-f days] [-a value]\n\t            [-s value] [-k key] [-i value] [-w value] [-h value]\n\t            [-p value] [-d value] [-v value]\n\n### Options\n\n\t-l location\n\t        Specify location\n\t\n\t-u system\n\t        Specify unit system to use ( metric or imperial )\n\t\n\t-f days\n\t        Toggle forecast mode for the specified number of upcoming days\n\t\n\t-F      Toggle forecast mode for the next five days\n\t\n\t-a value\n\t        Toggle ANSI colors display ( true or false )\n\t\n\t-s value\n\t        Toggle symbols display ( true or false )\n\t\n\t-k key  Specify API key\n\t\n\t-i value\n\t        Toggle UV Index display ( true or false )\n\t\n\t-w value\n\t        Toggle wind data display ( true or false )\n\t\n\t-h value\n\t        Toggle humidity data display ( true or false )\n\t\n\t-p value\n\t        Toggle pressure data display ( true or false )\n\t\n\t-d value\n\t        Toggle daylight data display ( true or false )\n\n### Examples\n\nDisplay forecast using metric units for the next five days (showing symbols\nand daylight data) for Rzeszow, Poland:\n\n\tansiweather -l Rzeszow,PL -u metric -s true -f 5 -d true\n\n\n\n## Configuration\n\nThe default config file is ~/.ansiweatherrc. The environment variable\nANSIWEATHERRC can be set to override this. The following configuration\noptions (detailed below) are available and should be set according to\nyour location and preferences.\n\nExample: `~/.ansiweatherrc`\n\n\tlocation:Rzeszow,PL\n\tfetch_cmd:ftp -V -o -\n\tunits:metric\n\tshow_daylight:true\n\nThe file `ansiweatherrc.example` contains all available configuration\nvariables.\n\n### Location\n\nLocation format is `city,CC` where `CC` is a two-letter ISO 3166-1 alpha-2\ncountry code. A list of country codes is available [here][4].\nAlternatively, it's also possible to specify locations by their ID, a city\nlist is available [here][5].\n\nIn case no location is specified, AnsiWeather will fallback to the default\nlocation.\n\nExample: `Rzeszow,PL`\n\n\tlocation:Rzeszow,PL\n\n### Fetch Command\n\nVarious tools can be used to fetch data: `curl`, `wget`, `ftp`.\n\nPlease note that `ftp` flags and options might differ among implementations\nand versions, and the example provided here is known to work only on OpenBSD\nand NetBSD.\n\nExample: `curl -sf`\n\n\tfetch_cmd:curl -sf\n\nExample: `wget -qO-`\n\n\tfetch_cmd:wget -qO-\n\nExample: `ftp -V -o -`\n\n\tfetch_cmd:ftp -V -o -\n\nDefault: `curl -sf`\n\n### System of Units\n\nBoth `metric` and `imperial` systems are supported.\n\n\tunits:metric\n\nDefault: `metric`\n\n### Display ANSI sequences\n\nToggle ANSI sequences display. Value can be either `true` (requires an ANSI\ncapable display) or `false`.\n\n\tansi:true\n\nDefault: `true`\n\n### Display symbols\n\nToggle Unicode symbols display. Value can be either `true` (requires a\nUnicode capable display) or `false`.\n\n\tsymbols:true\n\nDefault: `false`\n\nSymbols can be configured or replaced by custom text using the following\nconfiguration variables: `sun`, `moon`, `clouds`, `rain`, `fog`, `mist`,\n`haze`, `snow`, `thunderstorm`.\n\n### Display forecast\n\nShow upcoming forecast for the next `N` days (for 0 <= N <= 7). `0` will\nshow standard output.\n\n\tforecast:5\n\nDefault: `0`\n\n### Display wind / humidity / pressure\n\nToggle UV Index, wind, humidity, and/or pressure display. Values can be either\n`true` or `false`.\n\n\tshow_uvi:true\n\tshow_wind:true\n\tshow_humidity:true\n\tshow_pressure:true\n\nDefault: `true`\n\n### Display sunrise / sunset\n\nToggle daylight display. Value can be either `true` or `false`.\n\n\tshow_daylight:false\n\nDefault: `false`\n\n### Date and Time format\n\nConfigure date and time format display. See Unix date formatting docs\nfor details.\n\n\tdateformat:%a %b %d\n\nDefault: `%a %b %d`\n\n\ttimeformat:%b %d %r\n\nDefault: `%b %d %r`\n\n### OpenWeatherMap API key\n\nSpecify an OpenWeatherMap API key. By default AnsiWeather uses its own\nkey, but users can optionally get their own one by creating a free\n[OpenWeatherMap account][6].\n\n\tapi_key:85a4e3c55b73909f42c6a23ec35b7147\n\n\n\n## License\n\nAnsiWeather is released under the BSD 2-Clause license. See `LICENSE` file\nfor details.\n\n\n\n## Author\n\nAnsiWeather is developed by Frederic Cambus.\n\n- Site: https://www.cambus.net\n\n\n\n## Resources\n\nGitHub: https://github.com/fcambus/ansiweather\n\n[1]: https://www.cambus.net/files/ansiweather/ansiweather.png\n[2]: https://stedolan.github.io/jq/\n[3]: https://www.gnu.org/software/bc/\n[4]: https://www.statdns.com/cctlds/\n[5]: https://bulk.openweathermap.org/sample/\n[6]: https://home.openweathermap.org/users/sign_up\n"