b'# lazygit [![CircleCI](https://circleci.com/gh/jesseduffield/lazygit.svg?style=svg)](https://circleci.com/gh/jesseduffield/lazygit) [![codecov](https://codecov.io/gh/jesseduffield/lazygit/branch/master/graph/badge.svg)](https://codecov.io/gh/jesseduffield/lazygit) [![Go Report Card](https://goreportcard.com/badge/github.com/jesseduffield/lazygit)](https://goreportcard.com/report/github.com/jesseduffield/lazygit) [![GolangCI](https://golangci.com/badges/github.com/jesseduffield/lazygit.svg)](https://golangci.com) [![GoDoc](https://godoc.org/github.com/jesseduffield/lazygit?status.svg)](http://godoc.org/github.com/jesseduffield/lazygit) [![GitHub tag](https://img.shields.io/github/tag/jesseduffield/lazygit.svg)]()\n\nA simple terminal UI for git commands, written in Go with the [gocui](https://github.com/jroimartin/gocui \'gocui\') library.\n\nRant time: You\'ve heard it before, git is _powerful_, but what good is that power when everything is so damn hard to do? Interactive rebasing requires you to edit a goddamn TODO file in your editor? *Are you kidding me?* To stage part of a file you need to use a command line program stepping through each hunk and if a hunk can\'t be split down any further but contains code you don\'t want to stage, bad luck? *Are you KIDDING me?!* Sometimes you get asked to stash your changes when switching branches only to realise that after you switch and unstash that there weren\'t even any conflicts and it would have been fine to just checkout the branch directly? *YOU HAVE GOT TO BE KIDDING ME!* \n\nIf you\'re a mere mortal like me and you\'re tired of hearing how powerful git is when in your daily life it\'s a powerful pain in your ass, lazygit might be for you.\n\n![Gif](/docs/resources/lazygit-example.gif)\n\n- [Installation](https://github.com/jesseduffield/lazygit#installation)\n- [Usage](https://github.com/jesseduffield/lazygit#usage),\n  [Keybindings](/docs/keybindings)\n- [Cool Features](https://github.com/jesseduffield/lazygit#cool-features)\n- [Contributing](https://github.com/jesseduffield/lazygit#contributing)\n- [Video Tutorial](https://youtu.be/VDXvbHZYeKY)\n- [Rebase Magic Video Tutorial](https://youtu.be/4XaToVut_hs)\n- [Twitch Stream](https://www.twitch.tv/jesseduffield)\n\n[<img src="https://i.imgur.com/sVEktDn.png">](https://youtu.be/CPLdltN7wgE)\n\nGithub Sponsors is matching all donations dollar-for-dollar for 12 months so if you\'re feeling generous consider [sponsoring me](https://github.com/sponsors/jesseduffield)\n\n## Installation\n\n### Homebrew\nNormally the lazygit formula can be found in the Homebrew core but we suggest you tap our formula to get the frequently updated one. It works with Linux, too.\n\nTap:\n```\nbrew install jesseduffield/lazygit/lazygit\n```\n\nCore:\n\n```\nbrew install lazygit\n```\n\n### MacPorts\nLatest version built from github releases.\nTap:\n```\nsudo port install lazygit\n```\n\n### Ubuntu\n\nPackages for Ubuntu 16.04, 18.04 and 18.10 are available via [Launchpad PPA](https://launchpad.net/~lazygit-team).\n\n**Release builds**\n\nBuilt from git tags. Supposed to be more stable.\n\n```sh\nsudo add-apt-repository ppa:lazygit-team/release\nsudo apt-get update\nsudo apt-get install lazygit\n```\n\n**Daily builds**\n\nBuilt from master branch once in 24 hours (or more sometimes).\n\n```sh\nsudo add-apt-repository ppa:lazygit-team/daily\nsudo apt-get update\nsudo apt-get install lazygit\n```\n\n### Void Linux\n\nPackages for Void Linux are available in the distro repo\n\nThey follow upstream latest releases\n\n```sh\nsudo xbps-install -S lazygit\n```\n\n### Arch Linux\n\nPackages for Arch Linux are available via AUR (Arch User Repository).\n\nThere are two packages. The stable one which is built with the latest release\nand the git version which builds from the most recent commit.\n\n- Stable: https://aur.archlinux.org/packages/lazygit/\n- Development: https://aur.archlinux.org/packages/lazygit-git/\n\nInstruction of how to install AUR content can be found here:\nhttps://wiki.archlinux.org/index.php/Arch_User_Repository\n\n### Conda\n\nReleased versions are available for different platforms, see https://anaconda.org/conda-forge/lazygit\n\n```sh\nconda install -c conda-forge lazygit\n```\n\n### Binary Release (Windows/Linux/OSX)\n\nYou can download a binary release [here](https://github.com/jesseduffield/lazygit/releases).\n\n### Go\n\n```sh\ngo get github.com/jesseduffield/lazygit\n```\n\nPlease note:\nIf you get an error claiming that lazygit cannot be found or is not defined, you\nmay need to add `~/go/bin` to your \\$PATH (MacOS/Linux), or `%HOME%\\go\\bin`\n(Windows). Not to be mistaked for `C:\\Go\\bin` (which is for Go\'s own binaries,\nnot apps like Lazygit).\n\n## Usage\n\nCall `lazygit` in your terminal inside a git repository. If you want, you can\nalso add an alias for this with `echo "alias lg=\'lazygit\'" >> ~/.zshrc` (or\nwhichever rc file you\'re using).\n\n- Basic video tutorial [here](https://youtu.be/VDXvbHZYeKY).\n- Rebase Magic tutorial [here](https://youtu.be/4XaToVut_hs)\n- List of keybindings\n  [here](/docs/keybindings).\n  \n## Changing Directory On Exit\n\nIf you change repos in lazygit and want your shell to change directory into that repo on exiting lazygit, add this to your `~/.zshrc` (or other rc file):\n```\nlg()\n{\n    export LAZYGIT_NEW_DIR_FILE=~/.lazygit/newdir\n\n    lazygit "$@"\n\n    if [ -f $LAZYGIT_NEW_DIR_FILE ]; then\n            cd "$(cat $LAZYGIT_NEW_DIR_FILE)"\n            rm -f $LAZYGIT_NEW_DIR_FILE > /dev/null\n    fi\n}\n```\nThen `source ~/.zshrc` and from now on when you call `lg` and exit you\'ll switch directories to whatever you were in inside lazyigt. To override this behaviour you can exit using `shift+Q` rather than just `q`.\n\n## Cool features\n\n- Adding files easily\n- Resolving merge conflicts\n- Easily check out recent branches\n- Scroll through logs/diffs of branches/commits/stash\n- Quick pushing/pulling\n- Squash down and rename commits\n\n### Resolving merge conflicts\n\n![Gif](/docs/resources/resolving-merge-conflicts.gif)\n\n### Interactive Rebasing\n\n![Interactive Rebasing](/docs/resources/interactive-rebase.png)\n\n## Contributing\n\nWe love your input! Please check out the [contributing guide](CONTRIBUTING.md).\nFor contributor discussion about things not better discussed here in the repo, join the slack channel\n\n[![Slack](/docs/resources/slack_rgb.png)](https://join.slack.com/t/lazygit/shared_invite/enQtNDE3MjIwNTYyMDA0LTM3Yjk3NzdiYzhhNTA1YjM4Y2M4MWNmNDBkOTI0YTE4YjQ1ZmI2YWRhZTgwNjg2YzhhYjg3NDBlMmQyMTI5N2M)\n\n## Donate\n\nIf you would like to support the development of lazygit, consider [sponsoring me](https://github.com/sponsors/jesseduffield) (github is matching all donations dollar-for-dollar for 12 months)\n\n## Work in progress\n\nThis is still a work in progress so there\'s still bugs to iron out and as this\nis my first project in Go the code could no doubt use an increase in quality,\nbut I\'ll be improving on it whenever I find the time. If you have any feedback\nfeel free to [raise an issue](https://github.com/jesseduffield/lazygit/issues)/[submit a PR](https://github.com/jesseduffield/lazygit/pulls).\n\n## Social\n\nIf you want to see what I (Jesse) am up to in terms of development, follow me on\n[twitter](https://twitter.com/DuffieldJesse) or watch me program on\n[twitch](https://www.twitch.tv/jesseduffield).\n\n## Alternatives\n\nIf you find that lazygit doesn\'t quite satisfy your requirements, these may be a better fit:\n\n- [tig](https://github.com/jonas/tig)\n'