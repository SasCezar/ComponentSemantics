b'# tui: Terminal UI for Go\n\n[![Build Status](https://travis-ci.org/marcusolsson/tui-go.svg?branch=master)](https://travis-ci.org/marcusolsson/tui-go)\n[![GoDoc](https://img.shields.io/badge/godoc-reference-blue.svg?style=flat)](https://godoc.org/github.com/marcusolsson/tui-go)\n[![Go Report Card](https://goreportcard.com/badge/github.com/marcusolsson/tui-go)](https://goreportcard.com/report/github.com/marcusolsson/tui-go)\n[![License MIT](https://img.shields.io/badge/license-MIT-lightgrey.svg?style=flat)](LICENSE)\n\nA UI library for terminal applications.\n\ntui (pronounced _tooey_) provides a higher-level programming model for building rich terminal applications. It lets you build layout-based user interfaces that (should) gracefully handle resizing for you.\n\n_IMPORTANT:_ tui-go is still in an experimental phase so please don\'t use it for anything other than experiments, yet.\n\n**Update**: I created tui-go as an experiment because I wanted a simpler way of creating terminal-based user interfaces. It has since then become a project, with all the work that comes with it. While it\'s been really fun, unfortunately I\'m no longer able to maintain this project. \n\nSince I started working on tui-go, a number of similar projects have popped up. One that I think shows great promise is [rivo/tview](https://github.com/rivo/tview), which embodies much of what I envisioned for tui-go. I highly recommend trying it out!\n\nThanks all of you who have contributed and supported tui-go!\n\n![Screenshot](example/chat/screenshot.png)\n\n## Installation\n\n```\ngo get github.com/marcusolsson/tui-go\n```\n\n## Usage\n\n```go\npackage main\n\nimport "github.com/marcusolsson/tui-go"\n\nfunc main() {\n\tbox := tui.NewVBox(\n\t\ttui.NewLabel("tui-go"),\n\t)\n\n\tui, err := tui.New(box)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tui.SetKeybinding("Esc", func() { ui.Quit() })\n\n\tif err := ui.Run(); err != nil {\n\t\tpanic(err)\n\t}\n}\n```\n\n## Getting started\n\nIf you want to know what it is like to build terminal applications with tui-go, check out some of the [examples](example).\n\nDocumentation is available at [godoc.org](https://godoc.org/github.com/marcusolsson/tui-go).\n\nMake sure you check out some of the [projects using tui-go](https://godoc.org/github.com/marcusolsson/tui-go?importers).\n\nOnce you\'ve gotten started developing your first application with tui-go, you might be interested in learning about common [patterns](https://github.com/marcusolsson/tui-go/wiki/Patterns) or how you can [debug](https://github.com/marcusolsson/tui-go/wiki/Debugging) your applications.\n\n## Related projects\n\ntui-go is mainly influenced by [Qt](https://www.qt.io/) and offers a similar programming model that has been adapted to Go and the terminal.\n\nFor an overview of the alternatives for writing terminal user interfaces, check out [this article](https://appliedgo.net/tui/) by [AppliedGo](https://appliedgo.net/).\n\n## License\n\ntui-go is released under the [MIT License](LICENSE).\n\n## Contact\n\nIf you\'re interested in chatting with users and contributors, join\n[#tui-go](https://gophers.slack.com/messages/tui-go) on\nthe [Gophers Slack](https://gophers.slack.com).\nIf you\'re not already a part of the Slack workspace, you can join\n[here](https://invite.slack.golangbridge.org/). If you prefer a lower-bandwidth\ninterface, see [this\narticle](https://get.slack.help/hc/en-us/articles/201727913-Connect-to-Slack-over-IRC-and-XMPP)\non connecting to Slack via IRC or XMPP.\n'