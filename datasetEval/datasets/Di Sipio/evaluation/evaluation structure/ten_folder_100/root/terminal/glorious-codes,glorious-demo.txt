b'# Glorious Demo\n\n> The easiest way to demonstrate your code in action.\n\n[![CircleCI](https://circleci.com/gh/glorious-codes/glorious-demo.svg?style=svg)](https://circleci.com/gh/glorious-codes/glorious-demo)\n[![codecov](https://codecov.io/gh/glorious-codes/glorious-demo/branch/master/graph/badge.svg)](https://codecov.io/gh/glorious-codes/glorious-demo)\n\n<p align="center">\n  <img width="480" src="https://user-images.githubusercontent.com/4738687/49405334-49505c80-f739-11e8-992e-32f4b6e18311.gif" />\n</p>\n\n## Installation\n\n```\nnpm install @glorious/demo --save\n```\n\n## Basic Usage\n\n``` html\n<link rel="stylesheet" href="node_modules/@glorious/demo/dist/gdemo.min.css">\n<script src="node_modules/@glorious/demo/dist/gdemo.min.js"></script>\n```\n\n*Note: If you\'re not into package management, load it from a third-party [CDN provider](https://github.com/rafaelcamargo/glorious-demo/wiki/CDN-Providers).*\n\n``` javascript\n// Constructor receives a selector that indicates\n// where to inject the demonstration in your page.\nconst demo = new GDemo(\'#container\');\n\nconst code = `\nfunction greet(){\n  console.log("Hello World!");\n}\n\ngreet();\n`\n\ndemo\n  .openApp(\'editor\', {minHeight: \'350px\', windowTitle: \'demo.js\'})\n  .write(code, {onCompleteDelay: 1500})\n  .openApp(\'terminal\', {minHeight: \'350px\', promptString: \'$\'})\n  .command(\'node ./demo\', {onCompleteDelay: 500})\n  .respond(\'Hello World!\')\n  .command(\'\')\n  .end();\n```\n\n*NOTE: Check [here](https://github.com/rafaelcamargo/glorious-demo/wiki/Syntax-highlight) to know how to use Prism to get your code highlighted.*\n\n### API\n\n#### `openApp`\nOpens or maximizes an open application.\n``` javascript\n/*\n** @applicationType: String [required]\n** @options: Object [optional]\n*/\n\n// Possible values are \'editor\' or \'terminal\'\nconst applicationType = \'terminal\';\n\nconst openAppOptions = {\n  minHeight: \'350px\',\n  windowTitle: \'bash\',\n  promptString: \'~/my-project $\', // for \'terminal\' applications only\n  onCompleteDelay: 1000 // Delay before executing the next method\n}\n\ndemo.openApp(applicationType, openAppOptions).end();\n```\n\n#### `write`\nWrites some code in the open Editor application.\n``` javascript\n/*\n** @codeSample: String [required]\n** @options: Object [optional]\n*/\n\n// Tabs and line breaks will be preserved\nconst codeSample = `\nfunction sum(a, b) {\n  return a + b;\n}\n\nsum();\n`;\n\nconst writeOptions = {\n  onCompleteDelay: 500 // Delay before executing the next method\n}\n\ndemo.openApp(\'editor\').write(codeSample, writeOptions).end();\n```\n\n#### `command`\nWrites some command in the open Terminal application.\n``` javascript\n/*\n** @command: String [required]\n** @options: Object [optional]\n*/\n\nconst command = \'npm install @glorious/demo --save\';\n\n// Redefines prompt string for this and following commands\nconst promptString = \'$\'\n\n// Can optionally be an HTML string:\nconst promptString = \'<span class="my-custom-class">$</span>\'\n\nconst commandOptions = {\n  promptString,\n  onCompleteDelay: 500 // Delay before executing the next method\n}\n\ndemo.openApp(\'terminal\').command(command, commandOptions).end();\n```\n\n#### `respond`\nShows some response on the open Terminal application.\n``` javascript\n/*\n** @response: String [required]\n** @options: Object [optional]\n*/\n\n// Line breaks will be preserved\nconst response = `\n+ @glorious/demo successfully installed!\n+ v0.1.0\n`;\n\n// Can optionally be an HTML string:\nconst response = `\n<div><span class="my-custom-class">+</span> @glorious/demo successfully installed!</div>\n<div><span class="my-custom-class">+</span> v0.6.0</div>\n`;\n\nconst respondOptions = {\n  onCompleteDelay: 500 // Delay before executing the next method\n}\n\ndemo.openApp(\'terminal\').respond(response, respondOptions).end();\n```\n\n#### `end`\nIndicates the end of the demonstration. The method returns a promise in case you want to perform some action at the end of the demonstration.\n\n``` javascript\ndemo.openApp(\'terminal\')\n    .command(\'node demo\')\n    .respond(\'Hello World!\')\n    .end()\n    .then(() => {\n      // Custom code to be performed at the end of the demostration goes here.\n    });\n```\n\n**IMPORTANT:** Do not forget to invoke it at the end of your demo. Otherwise, the demo won\'t be played.\n\n## Contributing\n\n1. Install [Node](https://nodejs.org/en/). Download the "Recommend for Most Users" version.\n\n2. Clone the repo:\n``` bash\ngit clone git@github.com:glorious-codes/glorious-demo.git\n```\n\n3. Go to the project directory:\n``` bash\ncd glorious-demo\n```\n\n4. Install the project dependencies:\n``` bash\nnpm install\n```\n\n5. Build the project:\n``` bash\nnpm run build\n```\n\n## Tests\n\nEnsure that all code that you have added is covered with unit tests:\n``` bash\nnpm run test -- --coverage\n```\n'