b'[![Build Status](https://travis-ci.org/cantino/mcfly.svg?branch=master)](https://travis-ci.org/cantino/mcfly)\n[![](https://img.shields.io/crates/v/mcfly.svg)](https://crates.io/crates/mcfly)\n\n# McFly - fly through your shell history\n\n<img src="/docs/screenshot.png" alt="screenshot" width="400">\n\nMcFly replaces your default `ctrl-r` Bash history search with an intelligent search engine that takes into account\nyour working directory and the context of recently executed commands. McFly\'s suggestions are prioritized\nin real time with a small neural network.\n \nTL;DR: an upgraded `ctrl-r` for Bash whose history results make sense for what you\'re working on right now.\n\n## Features\n\n* Rebinds `ctrl-r` to bring up a full-screen reverse history search prioritized with a small neural network.\n* Augments your shell history to track command exit status, timestamp, and execution directory in a SQLite database.\n* Maintains your normal Bash history file as well so that you can stop using McFly whenever you want.\n* Unicode support throughout.\n* Includes a simple action to scrub any history item from the McFly database and your shell history files.\n* Designed to be extensible for other shells in the future.\n* Written in Rust, so it\'s fast and safe.\n\n## Prioritization\n\nThe key feature of McFly is smart command prioritization powered by a small neural network that runs\nin real time. The goal is for the command you want to run to always be one of the top suggestions.\n\nWhen suggesting a command, McFly takes into consideration:\n\n* The directory where you ran the command. You\'re likely to run that command in the same directory in the future.\n* What commands you typed before the command (e.g., the command\'s execution context).\n* How often you run the command.\n* When you last ran the command.\n* If you\'ve selected the command in McFly before.\n* The command\'s historical exit status. You probably don\'t want to run old failed commands.\n\n## Installation\n\n### Install with Homebrew (on OS X or Linux)\n\n1. Install the tap:\n    ```bash\n    brew tap cantino/mcfly https://github.com/cantino/mcfly\n    ```\n1. Install `mcfly`:\n    ```bash\n    brew install mcfly\n    ```\n1. Add the following to the end of your `~/.bashrc` file:\n    ```bash\n    if [[ -r "$(brew --prefix)/opt/mcfly/mcfly.bash" ]]; then\n      source "$(brew --prefix)/opt/mcfly/mcfly.bash"\n    fi\n    ```\n1. Run `. ~/.bashrc` or restart your terminal emulator.\n\n#### Uninstalling with Homebrew\n\n1. Remove `mcfly`:\n    ```bash\n    brew uninstall mcfly\n    ```\n1. Remove the tap:\n    ```bash\n    brew untap cantino/mcfly\n    ```\n1. Remove the lines you added to `~/.bashrc`.\n\n### Installing manually from GitHub\n\n1. Download the [latest release from GitHub](https://github.com/cantino/mcfly/releases).\n1. Install to a location in your `$PATH`. (For example, you could create a directory at `~/bin`, copy `mcfly` to this location, and add `export PATH="$PATH:$HOME/bin"` to your `.bashrc`.)\n1. Copy `mcfly.bash` to a known location.\n1. Add the following to the end of your `~/.bashrc` file:\n    ```bash\n    if [[ -r /path/to/mcfly.bash ]]; then\n      source /path/to/mcfly.bash\n    fi\n    ```\n1. Run `. ~/.bashrc` or restart your terminal emulator.\n\n### Install manually from source\n\n1. [Install Rust 1.29 or later](https://www.rust-lang.org/tools/install)\n1. Run `git clone https://github.com/cantino/mcfly` and `cd mcfly`\n1. Run `cargo install --path .`\n1. Ensure `~/.cargo/bin` is in your `$PATH`.\n1. Add the following to the end of your `~/.bashrc` file:\n    ```bash\n    if [[ -r /path/to/mcfly.bash ]]; then\n      source /path/to/mcfly.bash\n    fi\n    ```\n1. Run `. ~/.bashrc` or restart your terminal emulator.\n\n## iTerm2\n\nTo avoid McFly\'s UI messing up your scrollback history in iTerm2, make sure this option is unchecked:\n\n<img src="/docs/iterm2.jpeg" alt="iterm2 UI instructions">\n\n## Light Mode\n\nTo swap the color scheme for use in a light terminal, set the environment variable `MCFLY_LIGHT`.\n\nFor example, add the following to your `~/.bash_profile`:\n\n```bash\nexport MCFLY_LIGHT=TRUE\n```\n\n## Possible Future Features\n\n* Add a screencast to README.\n* Learn common command options and autocomplete them in the suggestion UI?\n* Sort command line args when coming up with the template matching string.\n* Possible prioritization improvements:\n  * Cross validation & explicit training set selection.\n  * Learn command embeddings\n\n## Development\n\n### Running tests\n\n`cargo test`\n\n### Releasing\n\n1. Edit `Cargo.toml` and bump the version.\n1. Recompile.\n1. `git add Cargo.toml`\n1. `git ci -m \'Bumping to vx.x.x\'`\n1. `git tag vx.x.x`\n1. `git push origin head --tags`\n1. Let the build finish.\n1. Edit the new Release on Github.\n1. Edit `pkg/brew/mcfly.rb` and update the version and SHAs. (`shasum -a 256 ...`)\n1. `cargo publish`\n'