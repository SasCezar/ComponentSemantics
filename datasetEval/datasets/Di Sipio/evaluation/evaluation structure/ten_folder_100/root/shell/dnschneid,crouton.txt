b'# crouton: Chromium OS Universal Chroot Environment\n\ncrouton is a set of scripts that bundle up into an easy-to-use,\nChromium OS-centric chroot generator. Currently Ubuntu and Debian are\nsupported (using debootstrap behind the scenes), but "Chromium OS Debian,\nUbuntu, and Probably Other Distros Eventually Chroot Environment" doesn\'t\nacronymize as well (crodupodece is admittedly pretty fun to say, though).\n\n## But first...\n\n:warning: **Steps to install crouton have changed!**  :warning:\n\nDue to improved security within Chromium OS ([yay!](https://chromium.googlesource.com/chromiumos/docs/+/master/security/noexec_shell_scripts.md)),\nthe steps needed to launch the crouton installer, and the steps to run crouton\nfrom SD cards have to change a little.\n\nPlease read the relevant sections of this README carefully, and reach out to\nyour favorite weblogger/tutorialer/videotuber to update their guides if they\'re\nbehind the times. If you\'re successful, brag about your accomplishments in [the\nissue tracker](https://github.com/dnschneid/crouton/issues/4026) and earn the\npersonal gratitude of the crouton authors\\*!\n\n<sup>\\* limit one (1) gratitude per commenter</sup>\n\n*WHOA*\n\nOk, back to business.\n\n\n## "crouton"...an acronym?\n\nIt stands for _ChRomium Os Universal chrooT envirONment_\n...or something like that. Do capitals really matter if caps-lock has been\n(mostly) banished, and the keycaps are all lower-case?\n\nMoving on...\n\n\n## Who\'s this for?\n\nAnyone who wants to run straight Linux on their Chromium OS device, and doesn\'t\ncare about physical security. You\'re also better off having some knowledge of\nLinux tools and the command line in case things go funny, but it\'s not strictly\nnecessary.\n\n\n## What\'s a chroot?\n\nLike virtualization, chroots provide the guest OS with their own, segregated\nfile system to run in, allowing applications to run in a different binary\nenvironment from the host OS. Unlike virtualization, you are *not* booting a\nsecond OS; instead, the guest OS is running using the Chromium OS system. The\nbenefit to this is that there is zero speed penalty since everything is run\nnatively, and you aren\'t wasting RAM to boot two OSes at the same time. The\ndownside is that you must be running the correct chroot for your hardware, the\nsoftware must be compatible with Chromium OS\'s kernel, and machine resources are\ninextricably tied between the host Chromium OS and the guest OS. What this means\nis that while the chroot cannot directly access files outside of its view, it\n*can* access all of your hardware devices, including the entire contents of\nmemory. A root exploit in your guest OS will essentially have unfettered access\nto the rest of Chromium OS.\n\n...but hey, you can run [TuxRacer](https://en.wikipedia.org/wiki/Tux_Racer)!\n\n\n### What about dem crostinis though?\n\n[Crostini](https://chromium.googlesource.com/chromiumos/docs/+/master/containers_and_vms.md)\nis an official project within Chromium OS to bring the Linux shell and apps to\nthe platform *in verified mode* with clean integration, multi-layered security,\nand all the polish you expect from Chromium OS proper.\n\nThat means compared to crouton, Crostini has official support, competent\nengineers, and code that looks a little less like ramen.  crouton, in its\ndefense, has wider device compatibility, enables direct hardware access, and is\nnamed after an objectively tastier bread-based food item.\n\nThere\'s a solid community on [Reddit](https://www.reddit.com/r/Crostini/) if\nyou\'d like to try Crostini out.  If it works for you -- great!  No hard\nfeelings.  If in the end you decide that crouton suits you better, read on!\n\nNote: you can\'t get the best of both worlds by installing crouton inside of\nCrostini.  The technology (and life itself) just doesn\'t work that way.  Not to\nmention a crouton Crostini would look ridiculous and be impossible to eat\nwithout getting bits everywhere.\n\n\n## Prerequisites\n\nYou need a device running Chromium OS that has been switched to developer mode.\n\nFor instructions on how to do that, go to [this Chromium OS wiki page](https://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices),\nclick on your device model and follow the steps in the *Entering Developer Mode*\nsection.\n\nNote that developer mode, in its default configuration, is *completely\ninsecure*, so don\'t expect a password in your chroot to keep anyone from your\ndata. crouton does support encrypting chroots, but the encryption is only as\nstrong as the quality of your passphrase. Consider this your warning.\n\nIt\'s also highly recommended that you install the [crouton extension](https://goo.gl/OVQOEt),\nwhich, when combined with the `extension` or `xiwi` targets, provides much \nimproved integration with Chromium OS.\n\nThat\'s it! Surprised?\n\n\n## Usage\n\ncrouton is a powerful tool, and there are a *lot* of features, but basic usage\nis as simple as possible by design.\n\nIf you\'re just here to use crouton, you can grab the latest release from\n[https://goo.gl/fd3zc](https://goo.gl/fd3zc). Download it, pop open a shell\n(Ctrl+Alt+T, type `shell` and hit enter), make the installer executable with\n`sudo install -Dt /usr/local/bin -m 755 ~/Downloads/crouton`, then launch it\nwith `sudo crouton` to see the help text. See the "examples" section for some\nusage examples.\n\nIf you\'re modifying crouton, you\'ll probably want to clone or download the repo\ninto a subdirectory of `/usr/local` and then either run `installer/main.sh`\ndirectly, or use `make` to build your very own `crouton`. You can also download\nthe latest release, install it as above and run `crouton -x` to extract out the\njuicy scripts contained within, but you\'ll be missing build-time stuff like the\nMakefile. You also need to remember to place the unbundled scripts somewhere in\n`/usr/local` in order to be able to execute them.\n\ncrouton uses the concept of "targets" to decide what to install. While you will\nhave apt-get in your chroot, some targets may need minor hacks to avoid issues\nwhen running in the chrooted environment. As such, if you expect to want\nsomething that is fulfilled by a target, install that target when you make the\nchroot and you\'ll have an easier time.  Don\'t worry if you forget to include a\ntarget; you can always update the chroot later and add it. You can see the list\nof available targets by running `crouton -t help`.\n\nOnce you\'ve set up your chroot, you can easily enter it using the\nnewly-installed `enter-chroot` command, or one of the target-specific\nstart\\* commands. Ta-da! That was easy.\n\n\n## Examples\n\n### The easy way (assuming you want an Ubuntu LTS with Xfce)\n\n  1. Download `crouton`\n  2. Open a shell (Ctrl+Alt+T, type `shell` and hit enter)\n  3. Copy the installer to an executable location by running\n     `sudo install -Dt /usr/local/bin -m 755 ~/Downloads/crouton`\n  4. Now that it\'s executable, run the installer itself: `sudo crouton -t xfce`\n  5. Wait patiently and answer the prompts like a good person.\n  6. Done! You can jump straight to your Xfce session by running\n     `sudo enter-chroot startxfce4` or, as a special shortcut, `sudo startxfce4`\n  7. Cycle through Chromium OS and your running graphical chroots using\n     Ctrl+Alt+Shift+Back and Ctrl+Alt+Shift+Forward.\n  8. Exit the chroot by logging out of Xfce.\n\n### With encryption!\n\n  1. Add the `-e` parameter when you run crouton to create an encrypted chroot\n     or encrypt a non-encrypted chroot.\n  2. You can get some extra protection on your chroot by storing the decryption\n     key separately from the place the chroot is stored. Use the `-k` parameter\n     to specify a file or directory to store the keys in (such as a USB drive or\n     SD card) when you create the chroot. Beware that if you lose this file,\n     your chroot will not be decryptable. That\'s kind of the point, of course.\n\n### Hey now, Ubuntu 16.04 is pretty old; I\'m young and hip\n\n  1. The `-r` parameter specifies which distro release you want to use.\n  2. Run `crouton -r list` to list the recognized releases and which distros\n     they belong to.\n\n### Wasteful redundancies are wasteful: one clipboard, one browser, one window\n\n  1. Install the [crouton extension](https://goo.gl/OVQOEt) into Chromium OS.\n  2. Add the `extension` or `xiwi` version to your chroot.\n  3. Try some copy-pasta, or uninstall all your web browsers from the chroot.\n\n*Installing the extension and its target gives you synchronized clipboards, the\noption of using Chromium OS to handle URLs, and allows chroots to create\ngraphical sessions as Chromium OS windows.*\n\n### I don\'t always use Linux, but when I do, I use CLI\n\n  1. You can save a chunk of space by ditching X and just installing\n     command-line tools using `-t core` or `-t cli-extra`\n  2. Enter the chroot in as many crosh shells as you want simultaneously using\n     `sudo enter-chroot`\n  3. Use the [Crosh Window](https://goo.gl/eczLT) extension to keep Chromium OS\n     from eating standard keyboard shortcuts.\n  4. If you installed cli-extra, `startcli` will launch a new VT right into the\n     chroot.\n\n### A new version of crouton came out; my chroot is therefore obsolete and sad\n\n  1. Exit the chroot if you have it open.\n  2. If you haven\'t already, download `crouton`, and copy it so it works:\n     `sudo install -Dt /usr/local/bin -m 755 ~/Downloads/crouton`\n  3. Update your chroot with `sudo crouton -u -n chrootname`. It will update\n     all installed targets.\n\n### I want to open my desktop in a window or a tab but I don\'t have the \'xiwi\' target/xmethod.\n\n  1. Add \'xiwi\' or any other target to an existing chroot with the `-u` option:\n     `sudo crouton -t xiwi -u -n chrootname`\n\n  This will also make \'xiwi\' the default xmethod.\n\n  2. If you want to keep the \'xorg\' xmethod as the default then pick it first:\n     `sudo sh crouton -t xorg,xiwi -u -n chrootname`\n\n### A backup a day keeps the price-gouging data restoration services away\n\n  1. `sudo edit-chroot -b chrootname` backs up your chroot to a timestamped\n     tarball in the current directory. Chroots are named either via the `-n`\n     parameter when created or by the release name if -n was not specified.\n  2. `sudo edit-chroot -r chrootname` restores the chroot from the most recent\n     timestamped tarball. You can explicitly specify the tarball with `-f`\n  3. If your machine is new, powerwashed, or held upside-down and shaken, you\n     can use the crouton installer to restore a chroot and relevant scripts:\n     `sudo crouton -f mybackup.tar.gz`\n\n*Unlike with Chromium OS, the data in your chroot isn\'t synced to the cloud.*\n\n### This chroot\'s name/location/password/existence sucks. How to fix?\n\n  1. Check out the `edit-chroot` command; it likely does what you need it to do.\n  2. If you set a Chromium OS root password, you can change it with\n     `sudo chromeos-setdevpasswd`\n  3. You can change the password inside your chroot with `passwd`\n\n### I want to install the chroot to another location\n\n  1. Use `-p` to specify the directory in which to install the chroot and\n     scripts. Be sure to quote or escape spaces.\n  2. When entering the chroot for the first time each boot, you will first need\n     to ensure the place you\'ve installed the scripts is in a place that allows\n     executables to run. Determine the mountpoint by running\n     `df --output=target /path/to/enter-chroot`, then mark the mount exec with\n     `sudo mount -o remount,exec /path/to/mountpoint`.\n  3. You can then launch the chroot by specifying the full path of any of the\n     enter-chroot or start* scripts (i.e. `sudo /path/to/enter-chroot`), or use\n     the `-c` parameter to explicitly specify the chroots directory.\n\n*If for some reason you have to run the installer without touching the local\ndisk, you can (for the time being) run\n`curl -fL https://goo.gl/fd3zc | sudo sh -s -- options_for_crouton_installer`.\nNote that this will definitely break in the near future, so don\'t depend on it.*\n\n### Downloading bootstrap files over and over again is a waste of time\n\n  1. Download `crouton`\n  2. Open a shell (Ctrl+Alt+T, type `shell` and hit enter)\n  3. Copy the installer to an executable location by running\n     `sudo install -Dt /usr/local/bin -m 755 ~/Downloads/crouton`\n  4. Now that it\'s executable, use the installer to build a bootstrap tarball:\n     `sudo crouton -d -f ~/Downloads/mybootstrap.tar.bz2`\n  5. Include the `-r` parameter if you want to specify for which release to\n     prepare a bootstrap.\n  6. You can then create chroots using the tarball by running\n     `sudo crouton -f ~/Downloads/mybootstrap.tar.bz2`. Make sure you also\n     specify the target environment with `-t`.\n\n*This is the quickest way to create multiple chroots at once, since you won\'t\nhave to determine and download the bootstrap files every time.*\n\n### Targets are cool. Abusing them for fun and profit is even cooler\n\n  1. You can make your own target files (start by copying one of the existing\n     ones) and then use them with any version of crouton via the `-T` parameter.\n\n*This is great for automating common tasks when creating chroots.*\n\n### Help! I\'ve created a monster that must be slain!\n\n  1. The delete-chroot command is your sword, shield, and only true friend.\n     `sudo delete-chroot evilchroot`\n  2. It\'s actually just a shortcut to `sudo edit-chroot -d evilchroot`, which I\n     suppose makes it a bit of a deceptive Swiss Army knife friend...still good?\n\n\n## Tips\n\n  * Chroots are cheap! Create multiple ones using `-n`, break them, then make\n    new, better ones!\n  * You can change the distro mirror from the default by using `-m`\n  * Want to use a proxy? `-P` lets you specify one (or disable it).\n  * A script is installed in your chroot called `brightness`. You can assign\n    this to keyboard shortcuts to adjust the brightness of the screen (e.g.\n    `brightness up`) or keyboard (e.g. `brightness k down`).\n  * Multiple monitors will work fine in the chroot, but you may have to switch\n    to Chromium OS and back to enable them.\n  * You can make commands run in the background so that you can close the\n    terminal. This is particularly useful for desktop environments: try running\n    `sudo startxfce4 -b`\n  * Want to disable Chromium OS\'s power management? Run `croutonpowerd -i`\n  * Only want power management disabled for the duration of a command?\n    `croutonpowerd -i command and arguments` will automatically stop inhibiting\n    power management when the command exits.\n  * Have a Pixel or two or 4.352 million? `-t touch` improves touch support.\n  * Want to share some files and/or folders between ChromeOS and your chroot?  \n    Check out the `/etc/crouton/shares` file, or read all about it in the wiki.\n  * Want more tips? Check the [wiki](https://github.com/dnschneid/crouton/wiki).\n\n\n## Issues?\n\nRunning another OS in a chroot is a pretty messy technique (although it\'s hidden\nbehind very pretty scripts), and these scripts are relatively new, so problems\nare not surprising. Check the issue tracker and file a bug if your issue isn\'t\nthere. When filing a new bug, include the output of `croutonversion` run from\ninside the chroot or, if you cannot mount your chroot, include the output\nof `cat /etc/lsb-release` from Crosh.\n\n\n## I want to be a Contributor!\n\nThat\'s great!  But before your code can be merged, you\'ll need to have signed\nthe [Individual Contributor License Agreement](https://cla.developers.google.com/clas/new?kind=KIND_INDIVIDUAL&domain=DOMAIN_GOOGLE).\nDon\'t worry, it only takes a minute and you\'ll definitely get to keep your\nfirstborn, probably.  If you\'ve already signed it for contributing to Chromium\nor Chromium OS, you\'re already done.\n\nIf you don\'t know what to do with your time as an official Contributor, here\'s\nsome suggestions:\n\n  * Really like a certain desktop environment? Fork crouton, add the target, and\n    create a pull request.\n  * Feel like hacking around with Chromium OS integration? Fork crouton, improve\n    integration, and create a pull request.\n  * Is your distro underrepresented? Want to contribute to the elusive and\n    mythical beast known as "croagh"? Fork crouton, add the distro, and create a\n    pull request.\n  * Discovered a bug lurking within the scripts, or a papercut that bothers you\n    just enough to make you want to actually do something about it? You guessed\n    it: fork crouton, fix everything, and create a pull request.\n  * Are most bugs too high-level for you to defeat? Grind up some\n    [EXP](https://en.wikipedia.org/wiki/Experience_point) by using\n    your fork to eat [pie](https://github.com/dnschneid/crouton/labels/pie).\n\n\n## Are there other, non-Contributory ways I can help?\n\nYes!\n\n\n## But how?\n\nThere\'s a way For Everyone to help!\n\n  * Something broken? File a bug! Bonus points if you try to fix it. It helps if\n    you provide the output of `croutonversion` (or the output of\n    `cat /etc/lsb-release` from Crosh) when you submit the bug.\n  * Want to try and break something? Look through [requests for testing](https://github.com/dnschneid/crouton/issues?labels=needstesting&state=open)\n    and then do your best to brutally rip the author\'s work to shreds.\n  * Look through [open issues](https://github.com/dnschneid/crouton/issues?state=open)\n    and see if there\'s a topic or application you happen to have experience\n    with. And then, preferably, share that experience with others.\n  * Find issues that need [wiki entries](https://github.com/dnschneid/crouton/issues?labels=needswiki&state=open,closed)\n    and add the relevant info to the [wiki](https://github.com/dnschneid/crouton/wiki).\n    Or just add things to/improve things in the wiki in general, but do try to\n    keep it relevant and organized.\n  * Really like a certain desktop environment, but not up for coding? Open or\n    comment on a bug with steps to get things working well.\n  * Hang out in the \\#crouton IRC channel on freenode.net!\n\n\n## License\n\ncrouton (including this eloquently-written README) is copyright &copy; 2016 The\ncrouton Authors. All rights reserved. Use of the source code included here is\ngoverned by a BSD-style license that can be found in the LICENSE file in the\nsource tree.\n'