b'<img src="https://cdn.rawgit.com/oh-my-fish/oh-my-fish/e4f1c2e0219a17e2c748b824004c8d0b38055c16/docs/logo.svg" align="left" width="192px" height="192px"/>\n<img align="left" width="0" height="192px" hspace="10"/>\n\n> The <a href="http://fishshell.com">Fishshell</a> Framework\n\n[![MIT License](https://img.shields.io/badge/license-MIT-007EC7.svg?style=flat-square)](/LICENSE) [![Fish Shell Version](https://img.shields.io/badge/fish-\xe2\x89\xa5v2.2.0-007EC7.svg?style=flat-square)](http://fishshell.com) [![Travis Build Status](http://img.shields.io/travis/oh-my-fish/oh-my-fish.svg?style=flat-square)](https://travis-ci.org/oh-my-fish/oh-my-fish) [![Slack Status](https://oh-my-fish-slack.herokuapp.com/badge.svg)](https://oh-my-fish-slack.herokuapp.com)\n\n\nOh My Fish provides core infrastructure to allow you to install packages which extend or modify the look of your shell. It\'s fast, extensible and easy to use.\n\n> Also in&nbsp;\n> <a href="docs/ru-RU/README.md">\xf0\x9f\x87\xb7\xf0\x9f\x87\xba</a>\n> <a href="docs/zh-CN/README.md">\xf0\x9f\x87\xa8\xf0\x9f\x87\xb3</a>\n> <a href="docs/uk-UA/README.md">\xf0\x9f\x87\xba\xf0\x9f\x87\xa6</a>\n> <a href="docs/pt-BR/README.md">\xf0\x9f\x87\xa7\xf0\x9f\x87\xb7</a>\n\n<br>\n\n## Table of contents\n* [Installation](#installation)\n* [Getting Started (command descriptions)](#getting-started)\n* [Advanced](#advanced)\n  * [Startup](#startup)\n  * [Dotfiles](#dotfiles)\n* [Creating Packages](#creating-packages)\n\n## Installation\n\nYou can get started right away with the default setup by running this in your terminal:\n\n```fish\ncurl -L https://get.oh-my.fish | fish\n```\n\nThis will download the installer script and start the installation. Alternatively, you can download the installer and customize your install:\n\n```fish\ncurl -L https://get.oh-my.fish > install\nfish install --path=~/.local/share/omf --config=~/.config/omf\n```\n\nYou can verify the integrity of the downloaded installer by verifying the script against [this checksum](bin/install.sha256):\n\n```\nbbace7ef16956d87fd40bff91cd1992a90621e7931ac3055f16b7f6d679e8fff  install\n```\n\nYou can also install Oh My Fish with Git or with an offline source tarball downloaded from the [releases page][releases]:\n\n```fish\n# with git\n$ git clone https://github.com/oh-my-fish/oh-my-fish\n$ cd oh-my-fish\n$ bin/install --offline\n# with a tarball\n$ curl -L https://get.oh-my.fish > install\n$ fish install --offline=omf.tar.gz\n```\n\nRun `install --help` for a complete list of install options you can customize.\n\n#### Requirements\n\n- **fish** shell, version 2.2 or later\n- **git**, version 1.9.5 or later\n\n#### Known Issues\n\n- Due to a regression bug in fish 2.6 with some terminal emulators, right prompts make the shell unusable.\n  OMF\'s `default` theme features a right prompt, so it\'s necessary to use an alternative theme until a fix is released.\n  (see [#541](https://github.com/oh-my-fish/oh-my-fish/issues/541))\n\n\n## Getting Started\n\nOh My Fish includes a small utility `omf` to fetch and install new packages and themes.\n\n#### `omf update` _`[omf]`_ _`[<package>...]`_\n\nUpdate Oh My Fish, all package repositories, and all installed packages.\n\n- When called without arguments, update core and all installed packages.\n- You can choose to update only the core, by running `omf update omf`.\n- For selective package update, list only the names of packages you wish to\n  update. You may still include "omf" in the list to update the core as well.\n\n#### `omf install` _`[<name>|<url>]`_\n\nInstall one _or more_ packages.\n\n- You can install packages directly by URL via `omf install URL`\n- When called without arguments, install missing packages from [bundle](#dotfiles).\n\n#### `omf repositories` _`[list|add|remove]`_\n\nManage user-installed package repositories. Package repositories are where packages come from used by commands like `omf install`. By default the [official repository](https://github.com/oh-my-fish/packages-main) is always installed and available.\n\n#### `omf list`\n\nList installed packages.\n\n#### `omf theme` _`<theme>`_\n\nApply a theme. To list available themes, type `omf theme`. You can also [preview available themes](./docs/Themes.md) before installing.\n\n#### `omf remove` _`<name>`_\n\nRemove a theme or package.\n\n> Packages can use uninstall hooks, so custom cleanup of resources can be done when uninstalling it. See [Uninstall](/docs/en-US/Packages.md#uninstall) for more information.\n\n#### `omf reload`\n\nReload Oh My Fish and all plugins by using `exec` to replace current shell process with a brand new.\n\n> This command tries to be as safe as possible, mitigating side-effects caused by `exec` and preventing the reload in case of background processes.\n\n#### `omf new plugin | theme` _`<name>`_\n\nScaffold out a new plugin or theme.\n\n> This creates a new directory under `$OMF_CONFIG/{pkg | themes}/` with a template.\n\n#### `omf search` _`-t|--theme / -p|--package`_ _`<name>`_\n\nSearches Oh My Fish\'s database for a given package, theme or both. It also supports fuzzy search, so if you are not sure of the name you can simply `omf search simple`.\n\n#### `omf channel`\n\nGets or changes the update channel.\n\nTwo channels are available by default: the `stable` channel provides stable updates with the latest tagged version of Oh My Fish, and `dev` which provides the latest changes under development. The update channel currently set determines what version `omf update` will upgrade to.\n\n#### `omf doctor`\n\nUse to troubleshoot before [opening an issue][omf-issues-new].\n\n#### `omf destroy`\n\nUninstall Oh My Fish.\n\n## Advanced\n\nOh My Fish installer adds a snippet to fish\'s user config files (`~/.config/fish/conf.d/`) which calls OMF\'s startup code.\n\nNotice that the scripts in that directory are sourced in the order that the filesystem sees them,\nand so it may be necessary to prefix your script files with ordering numbers.\n\nFor example: `a_script.fish` will take precedence over the `omf.fish` snippet.\nSo if `a_script.fish` depends on plugins managed by OMF, consider renaming the script file to `xx_a_script.fish`.\n\nSimiliarly, to make sure that a script runs before `omf.fish`, you may prefix it with `00_`.\nAlternatively, `~/.config/omf/before.init.fish` may be used.\n\n### Startup\n\nEvery time you open a new shell, the startup code initializes Oh My Fish installation path and the _config_ path (`~/.config/omf` by default),\nsourcing the [`init.fish`](init.fish) script afterwards, which autoloads packages, themes and your custom init files.\n\nFor more information check the [FAQ](docs/en-US/FAQ.md#what-does-oh-my-fish-do-exactly).\n\n### Dotfiles\n\nThe `$OMF_CONFIG` directory represents the user state of Oh My Fish. It is the perfect\ncandidate for being added to your dotfiles and/or checked out to version control. There you can find three important files:\n\n- __`theme`__ - The current theme\n- __`bundle`__ - List of currently installed packages/themes\n- __`channel`__ - The channel from which OMF gets updates (stable / dev)\n\nAnd you may create and customize these special files:\n\n- __`init.fish`__ - Custom script sourced after shell start\n- __`before.init.fish`__ - Custom script sourced before shell start\n- __`key_bindings.fish`__ - Custom key bindings where you can use the `bind` command freely\n\n#### Setting variables in `init.fish`\n\nOne of the most common startup commands used in `init.fish` is variables definition. Quite likely, such variables need to be available in any shell session. To achieve this, define them globally. For example:\n\n```fish\n# Golang developers might need this one\nset -xg GOPATH $HOME/gocode\n\n# Python developers otherwise\nset -xg PYTHONDONTWRITEBYTECODE 1\n```\n\n#### About the bundle\n\nEvery time a package/theme is installed or removed, the `bundle` file is updated. You can also edit it manually and run `omf install` afterwards to satisfy the changes. Please note that while packages/themes added to the bundle get automatically installed, a package/theme removed from bundle isn\'t removed from user installation.\n\n#### Older fish versions\n\nIn fish 2.2, there is no `conf.d` directory, so the startup code has to be placed in the fish config file (`~/.config/fish/config.fish`).\n\nIt\'s highly recommended that your custom startup commands go into `init.fish` file instead of `~/.config/fish/config.fish`, as this allows you to keep the whole `$OMF_CONFIG` directory under version control.\n\nIf you need startup commands to be run *before* Oh My Fish begins loading plugins, place them in `before.init.fish` instead. If you\'re unsure, it is usually best to put things in `init.fish`.\n\n## Creating Packages\n\nOh My Fish uses an advanced and well defined plugin architecture to ease plugin development, including init/uninstall hooks, function and completion autoloading. [See the packages documentation](docs/en-US/Packages.md) for more details.\n\n\n[fishshell]: http://fishshell.com\n[contributors]: https://github.com/oh-my-fish/oh-my-fish/graphs/contributors\n[omf-pulls-link]: https://github.com/oh-my-fish/oh-my-fish/pulls\n[omf-issues-new]: https://github.com/oh-my-fish/oh-my-fish/issues/new\n[releases]: https://github.com/oh-my-fish/oh-my-fish/releases\n'